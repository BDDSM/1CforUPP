
using System;
using System.Data.SqlClient;
using V82;
using V82.СправочникиСсылка;
using V82.Справочники;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Справочники//Менеджер
{
	public partial class УчетныеЗаписиДокументооборота:СправочникМенеджер
	{
		
		public static СправочникиСсылка.УчетныеЗаписиДокументооборота НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld23827 [ИмяПользователяPOP3]
					,_Fld23828 [ПарольPOP3]
					,_Fld23829 [СерверPOP3]
					,_Fld23830 [ПортPOP3]
					,_Fld23831 [ИмяПользователяSMTP]
					,_Fld23832 [ПарольSMTP]
					,_Fld23833 [СерверSMTP]
					,_Fld23834 [ПортSMTP]
					,_Fld23835 [ТребуетсяSMTPАутентификация]
					,_Fld23836 [АдресЭлектроннойПочты]
					,_Fld23837RRef [НалоговыйОрган]
					,_Fld23838RRef [СерверДокументооборота]
					,_Fld23839 [СертификатРуководителя]
					,_Fld23840 [СертификатГлавногоБухгалтера]
					,_Fld23841 [СертификатДляШифрования]
					,_Fld23842 [УдалитьАвтоматическоеОпределениеНабораПодписей]
					,_Fld23843 [ИспользуютсяСъемныеКлючевыеНосители]
					,_Fld23844 [УдалитьНестандартныеТаймауты]
					,_Fld23845 [УдалитьТаймаутНалоговогоОргана]
					,_Fld23846 [УдалитьТаймаутНалогоплательщика]
					,_Fld23847 [УдалитьИспользуетсяОбособленнымиПодразделениями]
					,_Fld23848 [ОбменНапрямую]
					,_Fld23849 [ОбменНапрямуюСФСГС]
					,_Fld23850 [НеФормироватьПодтвержденияАвтоматически]
					,_Fld23851RRef [РежимАвтонастройки]
					,_Fld23852 [ИспользоватьСервисОнлайнПроверкиОтчетов]
					,_Fld23853 [ПредназначенаДляДокументооборотаСФНС]
					,_Fld23854 [ПредназначенаДляДокументооборотаСПФР]
					,_Fld23855 [ПредназначенаДляДокументооборотаСФСГС]
					,_Fld23856 [ИдентификаторСпецоператора]
					,_Fld23857 [ИдентификаторАбонента]
					,_Fld23858 [ИдентификаторСистемыОтправителяПФР]
					,_Fld23859 [ИдентификаторСистемыОтправителяФСГС]
					,_Fld23860 [ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя]
					,_Fld23861 [ИННУполномоченногоПредставителя]
					,_Fld23862 [КППУполномоченногоПредставителя]
					,_Fld23863 [ПолноеНаименованиеУполномоченногоПредставителя]
					,_Fld23864RRef [СтатусУчетнойЗаписи]
					,_Fld23865RRef [СпецоператорСвязи]
					From _Reference23135(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.УчетныеЗаписиДокументооборота();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Код = Читалка.GetString(4);
							Ссылка.Наименование = Читалка.GetString(5);
								Ссылка.ИмяПользователяPOP3 = Читалка.GetString(6);
								Ссылка.ПарольPOP3 = Читалка.GetString(7);
								Ссылка.СерверPOP3 = Читалка.GetString(8);
								Ссылка.ПортPOP3 = Читалка.GetDecimal(9);
								Ссылка.ИмяПользователяSMTP = Читалка.GetString(10);
								Ссылка.ПарольSMTP = Читалка.GetString(11);
								Ссылка.СерверSMTP = Читалка.GetString(12);
								Ссылка.ПортSMTP = Читалка.GetDecimal(13);
								Ссылка.ТребуетсяSMTPАутентификация = ((byte[])Читалка.GetValue(14))[0]==1;
								Ссылка.АдресЭлектроннойПочты = Читалка.GetString(15);
								Ссылка.НалоговыйОрган = V82.СправочникиСсылка.НалоговыеОрганы.ВзятьИзКэша((byte[])Читалка.GetValue(16));
								Ссылка.СерверДокументооборота = V82.СправочникиСсылка.СерверыДокументооборота.ВзятьИзКэша((byte[])Читалка.GetValue(17));
								Ссылка.СертификатРуководителя = Читалка.GetString(18);
								Ссылка.СертификатГлавногоБухгалтера = Читалка.GetString(19);
								Ссылка.СертификатДляШифрования = Читалка.GetString(20);
								Ссылка.УдалитьАвтоматическоеОпределениеНабораПодписей = ((byte[])Читалка.GetValue(21))[0]==1;
								Ссылка.ИспользуютсяСъемныеКлючевыеНосители = ((byte[])Читалка.GetValue(22))[0]==1;
								Ссылка.УдалитьНестандартныеТаймауты = ((byte[])Читалка.GetValue(23))[0]==1;
								Ссылка.УдалитьТаймаутНалоговогоОргана = Читалка.GetDecimal(24);
								Ссылка.УдалитьТаймаутНалогоплательщика = Читалка.GetDecimal(25);
								Ссылка.УдалитьИспользуетсяОбособленнымиПодразделениями = ((byte[])Читалка.GetValue(26))[0]==1;
								Ссылка.ОбменНапрямую = ((byte[])Читалка.GetValue(27))[0]==1;
								Ссылка.ОбменНапрямуюСФСГС = ((byte[])Читалка.GetValue(28))[0]==1;
								Ссылка.НеФормироватьПодтвержденияАвтоматически = ((byte[])Читалка.GetValue(29))[0]==1;
								Ссылка.РежимАвтонастройки = V82.Перечисления/*Ссылка*/.РежимыАвтонастройкиУчетнойЗаписиДокументооборота.ПустаяСсылка.Получить((byte[])Читалка.GetValue(30));
								Ссылка.ИспользоватьСервисОнлайнПроверкиОтчетов = ((byte[])Читалка.GetValue(31))[0]==1;
								Ссылка.ПредназначенаДляДокументооборотаСФНС = ((byte[])Читалка.GetValue(32))[0]==1;
								Ссылка.ПредназначенаДляДокументооборотаСПФР = ((byte[])Читалка.GetValue(33))[0]==1;
								Ссылка.ПредназначенаДляДокументооборотаСФСГС = ((byte[])Читалка.GetValue(34))[0]==1;
								Ссылка.ИдентификаторСпецоператора = Читалка.GetString(35);
								Ссылка.ИдентификаторАбонента = Читалка.GetString(36);
								Ссылка.ИдентификаторСистемыОтправителяПФР = Читалка.GetString(37);
								Ссылка.ИдентификаторСистемыОтправителяФСГС = Читалка.GetString(38);
								Ссылка.ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя = ((byte[])Читалка.GetValue(39))[0]==1;
								Ссылка.ИННУполномоченногоПредставителя = Читалка.GetString(40);
								Ссылка.КППУполномоченногоПредставителя = Читалка.GetString(41);
								Ссылка.ПолноеНаименованиеУполномоченногоПредставителя = Читалка.GetString(42);
								Ссылка.СтатусУчетнойЗаписи = V82.Перечисления/*Ссылка*/.СтатусыУчетнойЗаписиДокументооборота.ПустаяСсылка.Получить((byte[])Читалка.GetValue(43));
								Ссылка.СпецоператорСвязи = V82.Перечисления/*Ссылка*/.СпецоператорыСвязи.ПустаяСсылка.Получить((byte[])Читалка.GetValue(44));
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static СправочникиСсылка.УчетныеЗаписиДокументооборота НайтиПоКоду(string Код)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld23827 [ИмяПользователяPOP3]
					,_Fld23828 [ПарольPOP3]
					,_Fld23829 [СерверPOP3]
					,_Fld23830 [ПортPOP3]
					,_Fld23831 [ИмяПользователяSMTP]
					,_Fld23832 [ПарольSMTP]
					,_Fld23833 [СерверSMTP]
					,_Fld23834 [ПортSMTP]
					,_Fld23835 [ТребуетсяSMTPАутентификация]
					,_Fld23836 [АдресЭлектроннойПочты]
					,_Fld23837RRef [НалоговыйОрган]
					,_Fld23838RRef [СерверДокументооборота]
					,_Fld23839 [СертификатРуководителя]
					,_Fld23840 [СертификатГлавногоБухгалтера]
					,_Fld23841 [СертификатДляШифрования]
					,_Fld23842 [УдалитьАвтоматическоеОпределениеНабораПодписей]
					,_Fld23843 [ИспользуютсяСъемныеКлючевыеНосители]
					,_Fld23844 [УдалитьНестандартныеТаймауты]
					,_Fld23845 [УдалитьТаймаутНалоговогоОргана]
					,_Fld23846 [УдалитьТаймаутНалогоплательщика]
					,_Fld23847 [УдалитьИспользуетсяОбособленнымиПодразделениями]
					,_Fld23848 [ОбменНапрямую]
					,_Fld23849 [ОбменНапрямуюСФСГС]
					,_Fld23850 [НеФормироватьПодтвержденияАвтоматически]
					,_Fld23851RRef [РежимАвтонастройки]
					,_Fld23852 [ИспользоватьСервисОнлайнПроверкиОтчетов]
					,_Fld23853 [ПредназначенаДляДокументооборотаСФНС]
					,_Fld23854 [ПредназначенаДляДокументооборотаСПФР]
					,_Fld23855 [ПредназначенаДляДокументооборотаСФСГС]
					,_Fld23856 [ИдентификаторСпецоператора]
					,_Fld23857 [ИдентификаторАбонента]
					,_Fld23858 [ИдентификаторСистемыОтправителяПФР]
					,_Fld23859 [ИдентификаторСистемыОтправителяФСГС]
					,_Fld23860 [ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя]
					,_Fld23861 [ИННУполномоченногоПредставителя]
					,_Fld23862 [КППУполномоченногоПредставителя]
					,_Fld23863 [ПолноеНаименованиеУполномоченногоПредставителя]
					,_Fld23864RRef [СтатусУчетнойЗаписи]
					,_Fld23865RRef [СпецоператорСвязи]
					From _Reference23135(NOLOCK)
					Where _Code=@Код";
					Команда.Parameters.AddWithValue("Код", Код);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.УчетныеЗаписиДокументооборота();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Код = Читалка.GetString(4);
							Ссылка.Наименование = Читалка.GetString(5);
								Ссылка.ИмяПользователяPOP3 = Читалка.GetString(6);
								Ссылка.ПарольPOP3 = Читалка.GetString(7);
								Ссылка.СерверPOP3 = Читалка.GetString(8);
								Ссылка.ПортPOP3 = Читалка.GetDecimal(9);
								Ссылка.ИмяПользователяSMTP = Читалка.GetString(10);
								Ссылка.ПарольSMTP = Читалка.GetString(11);
								Ссылка.СерверSMTP = Читалка.GetString(12);
								Ссылка.ПортSMTP = Читалка.GetDecimal(13);
								Ссылка.ТребуетсяSMTPАутентификация = ((byte[])Читалка.GetValue(14))[0]==1;
								Ссылка.АдресЭлектроннойПочты = Читалка.GetString(15);
								Ссылка.НалоговыйОрган = V82.СправочникиСсылка.НалоговыеОрганы.ВзятьИзКэша((byte[])Читалка.GetValue(16));
								Ссылка.СерверДокументооборота = V82.СправочникиСсылка.СерверыДокументооборота.ВзятьИзКэша((byte[])Читалка.GetValue(17));
								Ссылка.СертификатРуководителя = Читалка.GetString(18);
								Ссылка.СертификатГлавногоБухгалтера = Читалка.GetString(19);
								Ссылка.СертификатДляШифрования = Читалка.GetString(20);
								Ссылка.УдалитьАвтоматическоеОпределениеНабораПодписей = ((byte[])Читалка.GetValue(21))[0]==1;
								Ссылка.ИспользуютсяСъемныеКлючевыеНосители = ((byte[])Читалка.GetValue(22))[0]==1;
								Ссылка.УдалитьНестандартныеТаймауты = ((byte[])Читалка.GetValue(23))[0]==1;
								Ссылка.УдалитьТаймаутНалоговогоОргана = Читалка.GetDecimal(24);
								Ссылка.УдалитьТаймаутНалогоплательщика = Читалка.GetDecimal(25);
								Ссылка.УдалитьИспользуетсяОбособленнымиПодразделениями = ((byte[])Читалка.GetValue(26))[0]==1;
								Ссылка.ОбменНапрямую = ((byte[])Читалка.GetValue(27))[0]==1;
								Ссылка.ОбменНапрямуюСФСГС = ((byte[])Читалка.GetValue(28))[0]==1;
								Ссылка.НеФормироватьПодтвержденияАвтоматически = ((byte[])Читалка.GetValue(29))[0]==1;
								Ссылка.РежимАвтонастройки = V82.Перечисления/*Ссылка*/.РежимыАвтонастройкиУчетнойЗаписиДокументооборота.ПустаяСсылка.Получить((byte[])Читалка.GetValue(30));
								Ссылка.ИспользоватьСервисОнлайнПроверкиОтчетов = ((byte[])Читалка.GetValue(31))[0]==1;
								Ссылка.ПредназначенаДляДокументооборотаСФНС = ((byte[])Читалка.GetValue(32))[0]==1;
								Ссылка.ПредназначенаДляДокументооборотаСПФР = ((byte[])Читалка.GetValue(33))[0]==1;
								Ссылка.ПредназначенаДляДокументооборотаСФСГС = ((byte[])Читалка.GetValue(34))[0]==1;
								Ссылка.ИдентификаторСпецоператора = Читалка.GetString(35);
								Ссылка.ИдентификаторАбонента = Читалка.GetString(36);
								Ссылка.ИдентификаторСистемыОтправителяПФР = Читалка.GetString(37);
								Ссылка.ИдентификаторСистемыОтправителяФСГС = Читалка.GetString(38);
								Ссылка.ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя = ((byte[])Читалка.GetValue(39))[0]==1;
								Ссылка.ИННУполномоченногоПредставителя = Читалка.GetString(40);
								Ссылка.КППУполномоченногоПредставителя = Читалка.GetString(41);
								Ссылка.ПолноеНаименованиеУполномоченногоПредставителя = Читалка.GetString(42);
								Ссылка.СтатусУчетнойЗаписи = V82.Перечисления/*Ссылка*/.СтатусыУчетнойЗаписиДокументооборота.ПустаяСсылка.Получить((byte[])Читалка.GetValue(43));
								Ссылка.СпецоператорСвязи = V82.Перечисления/*Ссылка*/.СпецоператорыСвязи.ПустаяСсылка.Получить((byte[])Читалка.GetValue(44));
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static СправочникиВыборка.УчетныеЗаписиДокументооборота Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld23827 [ИмяПользователяPOP3]
					,_Fld23828 [ПарольPOP3]
					,_Fld23829 [СерверPOP3]
					,_Fld23830 [ПортPOP3]
					,_Fld23831 [ИмяПользователяSMTP]
					,_Fld23832 [ПарольSMTP]
					,_Fld23833 [СерверSMTP]
					,_Fld23834 [ПортSMTP]
					,_Fld23835 [ТребуетсяSMTPАутентификация]
					,_Fld23836 [АдресЭлектроннойПочты]
					,_Fld23837RRef [НалоговыйОрган]
					,_Fld23838RRef [СерверДокументооборота]
					,_Fld23839 [СертификатРуководителя]
					,_Fld23840 [СертификатГлавногоБухгалтера]
					,_Fld23841 [СертификатДляШифрования]
					,_Fld23842 [УдалитьАвтоматическоеОпределениеНабораПодписей]
					,_Fld23843 [ИспользуютсяСъемныеКлючевыеНосители]
					,_Fld23844 [УдалитьНестандартныеТаймауты]
					,_Fld23845 [УдалитьТаймаутНалоговогоОргана]
					,_Fld23846 [УдалитьТаймаутНалогоплательщика]
					,_Fld23847 [УдалитьИспользуетсяОбособленнымиПодразделениями]
					,_Fld23848 [ОбменНапрямую]
					,_Fld23849 [ОбменНапрямуюСФСГС]
					,_Fld23850 [НеФормироватьПодтвержденияАвтоматически]
					,_Fld23851RRef [РежимАвтонастройки]
					,_Fld23852 [ИспользоватьСервисОнлайнПроверкиОтчетов]
					,_Fld23853 [ПредназначенаДляДокументооборотаСФНС]
					,_Fld23854 [ПредназначенаДляДокументооборотаСПФР]
					,_Fld23855 [ПредназначенаДляДокументооборотаСФСГС]
					,_Fld23856 [ИдентификаторСпецоператора]
					,_Fld23857 [ИдентификаторАбонента]
					,_Fld23858 [ИдентификаторСистемыОтправителяПФР]
					,_Fld23859 [ИдентификаторСистемыОтправителяФСГС]
					,_Fld23860 [ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя]
					,_Fld23861 [ИННУполномоченногоПредставителя]
					,_Fld23862 [КППУполномоченногоПредставителя]
					,_Fld23863 [ПолноеНаименованиеУполномоченногоПредставителя]
					,_Fld23864RRef [СтатусУчетнойЗаписи]
					,_Fld23865RRef [СпецоператорСвязи]
					From _Reference23135(NOLOCK) ";
					var Выборка = new V82.СправочникиВыборка.УчетныеЗаписиДокументооборота();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.УчетныеЗаписиДокументооборота();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Код = Читалка.GetString(4);
							Ссылка.Наименование = Читалка.GetString(5);
								Ссылка.ИмяПользователяPOP3 = Читалка.GetString(6);
								Ссылка.ПарольPOP3 = Читалка.GetString(7);
								Ссылка.СерверPOP3 = Читалка.GetString(8);
								Ссылка.ПортPOP3 = Читалка.GetDecimal(9);
								Ссылка.ИмяПользователяSMTP = Читалка.GetString(10);
								Ссылка.ПарольSMTP = Читалка.GetString(11);
								Ссылка.СерверSMTP = Читалка.GetString(12);
								Ссылка.ПортSMTP = Читалка.GetDecimal(13);
								Ссылка.ТребуетсяSMTPАутентификация = ((byte[])Читалка.GetValue(14))[0]==1;
								Ссылка.АдресЭлектроннойПочты = Читалка.GetString(15);
								Ссылка.НалоговыйОрган = V82.СправочникиСсылка.НалоговыеОрганы.ВзятьИзКэша((byte[])Читалка.GetValue(16));
								Ссылка.СерверДокументооборота = V82.СправочникиСсылка.СерверыДокументооборота.ВзятьИзКэша((byte[])Читалка.GetValue(17));
								Ссылка.СертификатРуководителя = Читалка.GetString(18);
								Ссылка.СертификатГлавногоБухгалтера = Читалка.GetString(19);
								Ссылка.СертификатДляШифрования = Читалка.GetString(20);
								Ссылка.УдалитьАвтоматическоеОпределениеНабораПодписей = ((byte[])Читалка.GetValue(21))[0]==1;
								Ссылка.ИспользуютсяСъемныеКлючевыеНосители = ((byte[])Читалка.GetValue(22))[0]==1;
								Ссылка.УдалитьНестандартныеТаймауты = ((byte[])Читалка.GetValue(23))[0]==1;
								Ссылка.УдалитьТаймаутНалоговогоОргана = Читалка.GetDecimal(24);
								Ссылка.УдалитьТаймаутНалогоплательщика = Читалка.GetDecimal(25);
								Ссылка.УдалитьИспользуетсяОбособленнымиПодразделениями = ((byte[])Читалка.GetValue(26))[0]==1;
								Ссылка.ОбменНапрямую = ((byte[])Читалка.GetValue(27))[0]==1;
								Ссылка.ОбменНапрямуюСФСГС = ((byte[])Читалка.GetValue(28))[0]==1;
								Ссылка.НеФормироватьПодтвержденияАвтоматически = ((byte[])Читалка.GetValue(29))[0]==1;
								Ссылка.РежимАвтонастройки = V82.Перечисления/*Ссылка*/.РежимыАвтонастройкиУчетнойЗаписиДокументооборота.ПустаяСсылка.Получить((byte[])Читалка.GetValue(30));
								Ссылка.ИспользоватьСервисОнлайнПроверкиОтчетов = ((byte[])Читалка.GetValue(31))[0]==1;
								Ссылка.ПредназначенаДляДокументооборотаСФНС = ((byte[])Читалка.GetValue(32))[0]==1;
								Ссылка.ПредназначенаДляДокументооборотаСПФР = ((byte[])Читалка.GetValue(33))[0]==1;
								Ссылка.ПредназначенаДляДокументооборотаСФСГС = ((byte[])Читалка.GetValue(34))[0]==1;
								Ссылка.ИдентификаторСпецоператора = Читалка.GetString(35);
								Ссылка.ИдентификаторАбонента = Читалка.GetString(36);
								Ссылка.ИдентификаторСистемыОтправителяПФР = Читалка.GetString(37);
								Ссылка.ИдентификаторСистемыОтправителяФСГС = Читалка.GetString(38);
								Ссылка.ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя = ((byte[])Читалка.GetValue(39))[0]==1;
								Ссылка.ИННУполномоченногоПредставителя = Читалка.GetString(40);
								Ссылка.КППУполномоченногоПредставителя = Читалка.GetString(41);
								Ссылка.ПолноеНаименованиеУполномоченногоПредставителя = Читалка.GetString(42);
								Ссылка.СтатусУчетнойЗаписи = V82.Перечисления/*Ссылка*/.СтатусыУчетнойЗаписиДокументооборота.ПустаяСсылка.Получить((byte[])Читалка.GetValue(43));
								Ссылка.СпецоператорСвязи = V82.Перечисления/*Ссылка*/.СпецоператорыСвязи.ПустаяСсылка.Получить((byte[])Читалка.GetValue(44));
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.УчетныеЗаписиДокументооборота ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld23827 [ИмяПользователяPOP3]
					,_Fld23828 [ПарольPOP3]
					,_Fld23829 [СерверPOP3]
					,_Fld23830 [ПортPOP3]
					,_Fld23831 [ИмяПользователяSMTP]
					,_Fld23832 [ПарольSMTP]
					,_Fld23833 [СерверSMTP]
					,_Fld23834 [ПортSMTP]
					,_Fld23835 [ТребуетсяSMTPАутентификация]
					,_Fld23836 [АдресЭлектроннойПочты]
					,_Fld23837RRef [НалоговыйОрган]
					,_Fld23838RRef [СерверДокументооборота]
					,_Fld23839 [СертификатРуководителя]
					,_Fld23840 [СертификатГлавногоБухгалтера]
					,_Fld23841 [СертификатДляШифрования]
					,_Fld23842 [УдалитьАвтоматическоеОпределениеНабораПодписей]
					,_Fld23843 [ИспользуютсяСъемныеКлючевыеНосители]
					,_Fld23844 [УдалитьНестандартныеТаймауты]
					,_Fld23845 [УдалитьТаймаутНалоговогоОргана]
					,_Fld23846 [УдалитьТаймаутНалогоплательщика]
					,_Fld23847 [УдалитьИспользуетсяОбособленнымиПодразделениями]
					,_Fld23848 [ОбменНапрямую]
					,_Fld23849 [ОбменНапрямуюСФСГС]
					,_Fld23850 [НеФормироватьПодтвержденияАвтоматически]
					,_Fld23851RRef [РежимАвтонастройки]
					,_Fld23852 [ИспользоватьСервисОнлайнПроверкиОтчетов]
					,_Fld23853 [ПредназначенаДляДокументооборотаСФНС]
					,_Fld23854 [ПредназначенаДляДокументооборотаСПФР]
					,_Fld23855 [ПредназначенаДляДокументооборотаСФСГС]
					,_Fld23856 [ИдентификаторСпецоператора]
					,_Fld23857 [ИдентификаторАбонента]
					,_Fld23858 [ИдентификаторСистемыОтправителяПФР]
					,_Fld23859 [ИдентификаторСистемыОтправителяФСГС]
					,_Fld23860 [ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя]
					,_Fld23861 [ИННУполномоченногоПредставителя]
					,_Fld23862 [КППУполномоченногоПредставителя]
					,_Fld23863 [ПолноеНаименованиеУполномоченногоПредставителя]
					,_Fld23864RRef [СтатусУчетнойЗаписи]
					,_Fld23865RRef [СпецоператорСвязи]
					From _Reference23135(NOLOCK)
					Where _IDRRef between @Мин and @Макс 
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.СправочникиВыборка.УчетныеЗаписиДокументооборота();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.УчетныеЗаписиДокументооборота();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Код = Читалка.GetString(4);
							Ссылка.Наименование = Читалка.GetString(5);
								Ссылка.ИмяПользователяPOP3 = Читалка.GetString(6);
								Ссылка.ПарольPOP3 = Читалка.GetString(7);
								Ссылка.СерверPOP3 = Читалка.GetString(8);
								Ссылка.ПортPOP3 = Читалка.GetDecimal(9);
								Ссылка.ИмяПользователяSMTP = Читалка.GetString(10);
								Ссылка.ПарольSMTP = Читалка.GetString(11);
								Ссылка.СерверSMTP = Читалка.GetString(12);
								Ссылка.ПортSMTP = Читалка.GetDecimal(13);
								Ссылка.ТребуетсяSMTPАутентификация = ((byte[])Читалка.GetValue(14))[0]==1;
								Ссылка.АдресЭлектроннойПочты = Читалка.GetString(15);
								Ссылка.НалоговыйОрган = V82.СправочникиСсылка.НалоговыеОрганы.ВзятьИзКэша((byte[])Читалка.GetValue(16));
								Ссылка.СерверДокументооборота = V82.СправочникиСсылка.СерверыДокументооборота.ВзятьИзКэша((byte[])Читалка.GetValue(17));
								Ссылка.СертификатРуководителя = Читалка.GetString(18);
								Ссылка.СертификатГлавногоБухгалтера = Читалка.GetString(19);
								Ссылка.СертификатДляШифрования = Читалка.GetString(20);
								Ссылка.УдалитьАвтоматическоеОпределениеНабораПодписей = ((byte[])Читалка.GetValue(21))[0]==1;
								Ссылка.ИспользуютсяСъемныеКлючевыеНосители = ((byte[])Читалка.GetValue(22))[0]==1;
								Ссылка.УдалитьНестандартныеТаймауты = ((byte[])Читалка.GetValue(23))[0]==1;
								Ссылка.УдалитьТаймаутНалоговогоОргана = Читалка.GetDecimal(24);
								Ссылка.УдалитьТаймаутНалогоплательщика = Читалка.GetDecimal(25);
								Ссылка.УдалитьИспользуетсяОбособленнымиПодразделениями = ((byte[])Читалка.GetValue(26))[0]==1;
								Ссылка.ОбменНапрямую = ((byte[])Читалка.GetValue(27))[0]==1;
								Ссылка.ОбменНапрямуюСФСГС = ((byte[])Читалка.GetValue(28))[0]==1;
								Ссылка.НеФормироватьПодтвержденияАвтоматически = ((byte[])Читалка.GetValue(29))[0]==1;
								Ссылка.РежимАвтонастройки = V82.Перечисления/*Ссылка*/.РежимыАвтонастройкиУчетнойЗаписиДокументооборота.ПустаяСсылка.Получить((byte[])Читалка.GetValue(30));
								Ссылка.ИспользоватьСервисОнлайнПроверкиОтчетов = ((byte[])Читалка.GetValue(31))[0]==1;
								Ссылка.ПредназначенаДляДокументооборотаСФНС = ((byte[])Читалка.GetValue(32))[0]==1;
								Ссылка.ПредназначенаДляДокументооборотаСПФР = ((byte[])Читалка.GetValue(33))[0]==1;
								Ссылка.ПредназначенаДляДокументооборотаСФСГС = ((byte[])Читалка.GetValue(34))[0]==1;
								Ссылка.ИдентификаторСпецоператора = Читалка.GetString(35);
								Ссылка.ИдентификаторАбонента = Читалка.GetString(36);
								Ссылка.ИдентификаторСистемыОтправителяПФР = Читалка.GetString(37);
								Ссылка.ИдентификаторСистемыОтправителяФСГС = Читалка.GetString(38);
								Ссылка.ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя = ((byte[])Читалка.GetValue(39))[0]==1;
								Ссылка.ИННУполномоченногоПредставителя = Читалка.GetString(40);
								Ссылка.КППУполномоченногоПредставителя = Читалка.GetString(41);
								Ссылка.ПолноеНаименованиеУполномоченногоПредставителя = Читалка.GetString(42);
								Ссылка.СтатусУчетнойЗаписи = V82.Перечисления/*Ссылка*/.СтатусыУчетнойЗаписиДокументооборота.ПустаяСсылка.Получить((byte[])Читалка.GetValue(43));
								Ссылка.СпецоператорСвязи = V82.Перечисления/*Ссылка*/.СпецоператорыСвязи.ПустаяСсылка.Получить((byte[])Читалка.GetValue(44));
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.УчетныеЗаписиДокументооборота ВыбратьПоКоду(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld23827 [ИмяПользователяPOP3]
					,_Fld23828 [ПарольPOP3]
					,_Fld23829 [СерверPOP3]
					,_Fld23830 [ПортPOP3]
					,_Fld23831 [ИмяПользователяSMTP]
					,_Fld23832 [ПарольSMTP]
					,_Fld23833 [СерверSMTP]
					,_Fld23834 [ПортSMTP]
					,_Fld23835 [ТребуетсяSMTPАутентификация]
					,_Fld23836 [АдресЭлектроннойПочты]
					,_Fld23837RRef [НалоговыйОрган]
					,_Fld23838RRef [СерверДокументооборота]
					,_Fld23839 [СертификатРуководителя]
					,_Fld23840 [СертификатГлавногоБухгалтера]
					,_Fld23841 [СертификатДляШифрования]
					,_Fld23842 [УдалитьАвтоматическоеОпределениеНабораПодписей]
					,_Fld23843 [ИспользуютсяСъемныеКлючевыеНосители]
					,_Fld23844 [УдалитьНестандартныеТаймауты]
					,_Fld23845 [УдалитьТаймаутНалоговогоОргана]
					,_Fld23846 [УдалитьТаймаутНалогоплательщика]
					,_Fld23847 [УдалитьИспользуетсяОбособленнымиПодразделениями]
					,_Fld23848 [ОбменНапрямую]
					,_Fld23849 [ОбменНапрямуюСФСГС]
					,_Fld23850 [НеФормироватьПодтвержденияАвтоматически]
					,_Fld23851RRef [РежимАвтонастройки]
					,_Fld23852 [ИспользоватьСервисОнлайнПроверкиОтчетов]
					,_Fld23853 [ПредназначенаДляДокументооборотаСФНС]
					,_Fld23854 [ПредназначенаДляДокументооборотаСПФР]
					,_Fld23855 [ПредназначенаДляДокументооборотаСФСГС]
					,_Fld23856 [ИдентификаторСпецоператора]
					,_Fld23857 [ИдентификаторАбонента]
					,_Fld23858 [ИдентификаторСистемыОтправителяПФР]
					,_Fld23859 [ИдентификаторСистемыОтправителяФСГС]
					,_Fld23860 [ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя]
					,_Fld23861 [ИННУполномоченногоПредставителя]
					,_Fld23862 [КППУполномоченногоПредставителя]
					,_Fld23863 [ПолноеНаименованиеУполномоченногоПредставителя]
					,_Fld23864RRef [СтатусУчетнойЗаписи]
					,_Fld23865RRef [СпецоператорСвязи]
					From _Reference23135(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.СправочникиВыборка.УчетныеЗаписиДокументооборота();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.УчетныеЗаписиДокументооборота();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Код = Читалка.GetString(4);
							Ссылка.Наименование = Читалка.GetString(5);
								Ссылка.ИмяПользователяPOP3 = Читалка.GetString(6);
								Ссылка.ПарольPOP3 = Читалка.GetString(7);
								Ссылка.СерверPOP3 = Читалка.GetString(8);
								Ссылка.ПортPOP3 = Читалка.GetDecimal(9);
								Ссылка.ИмяПользователяSMTP = Читалка.GetString(10);
								Ссылка.ПарольSMTP = Читалка.GetString(11);
								Ссылка.СерверSMTP = Читалка.GetString(12);
								Ссылка.ПортSMTP = Читалка.GetDecimal(13);
								Ссылка.ТребуетсяSMTPАутентификация = ((byte[])Читалка.GetValue(14))[0]==1;
								Ссылка.АдресЭлектроннойПочты = Читалка.GetString(15);
								Ссылка.НалоговыйОрган = V82.СправочникиСсылка.НалоговыеОрганы.ВзятьИзКэша((byte[])Читалка.GetValue(16));
								Ссылка.СерверДокументооборота = V82.СправочникиСсылка.СерверыДокументооборота.ВзятьИзКэша((byte[])Читалка.GetValue(17));
								Ссылка.СертификатРуководителя = Читалка.GetString(18);
								Ссылка.СертификатГлавногоБухгалтера = Читалка.GetString(19);
								Ссылка.СертификатДляШифрования = Читалка.GetString(20);
								Ссылка.УдалитьАвтоматическоеОпределениеНабораПодписей = ((byte[])Читалка.GetValue(21))[0]==1;
								Ссылка.ИспользуютсяСъемныеКлючевыеНосители = ((byte[])Читалка.GetValue(22))[0]==1;
								Ссылка.УдалитьНестандартныеТаймауты = ((byte[])Читалка.GetValue(23))[0]==1;
								Ссылка.УдалитьТаймаутНалоговогоОргана = Читалка.GetDecimal(24);
								Ссылка.УдалитьТаймаутНалогоплательщика = Читалка.GetDecimal(25);
								Ссылка.УдалитьИспользуетсяОбособленнымиПодразделениями = ((byte[])Читалка.GetValue(26))[0]==1;
								Ссылка.ОбменНапрямую = ((byte[])Читалка.GetValue(27))[0]==1;
								Ссылка.ОбменНапрямуюСФСГС = ((byte[])Читалка.GetValue(28))[0]==1;
								Ссылка.НеФормироватьПодтвержденияАвтоматически = ((byte[])Читалка.GetValue(29))[0]==1;
								Ссылка.РежимАвтонастройки = V82.Перечисления/*Ссылка*/.РежимыАвтонастройкиУчетнойЗаписиДокументооборота.ПустаяСсылка.Получить((byte[])Читалка.GetValue(30));
								Ссылка.ИспользоватьСервисОнлайнПроверкиОтчетов = ((byte[])Читалка.GetValue(31))[0]==1;
								Ссылка.ПредназначенаДляДокументооборотаСФНС = ((byte[])Читалка.GetValue(32))[0]==1;
								Ссылка.ПредназначенаДляДокументооборотаСПФР = ((byte[])Читалка.GetValue(33))[0]==1;
								Ссылка.ПредназначенаДляДокументооборотаСФСГС = ((byte[])Читалка.GetValue(34))[0]==1;
								Ссылка.ИдентификаторСпецоператора = Читалка.GetString(35);
								Ссылка.ИдентификаторАбонента = Читалка.GetString(36);
								Ссылка.ИдентификаторСистемыОтправителяПФР = Читалка.GetString(37);
								Ссылка.ИдентификаторСистемыОтправителяФСГС = Читалка.GetString(38);
								Ссылка.ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя = ((byte[])Читалка.GetValue(39))[0]==1;
								Ссылка.ИННУполномоченногоПредставителя = Читалка.GetString(40);
								Ссылка.КППУполномоченногоПредставителя = Читалка.GetString(41);
								Ссылка.ПолноеНаименованиеУполномоченногоПредставителя = Читалка.GetString(42);
								Ссылка.СтатусУчетнойЗаписи = V82.Перечисления/*Ссылка*/.СтатусыУчетнойЗаписиДокументооборота.ПустаяСсылка.Получить((byte[])Читалка.GetValue(43));
								Ссылка.СпецоператорСвязи = V82.Перечисления/*Ссылка*/.СпецоператорыСвязи.ПустаяСсылка.Получить((byte[])Читалка.GetValue(44));
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.УчетныеЗаписиДокументооборота ВыбратьПоНаименованию(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld23827 [ИмяПользователяPOP3]
					,_Fld23828 [ПарольPOP3]
					,_Fld23829 [СерверPOP3]
					,_Fld23830 [ПортPOP3]
					,_Fld23831 [ИмяПользователяSMTP]
					,_Fld23832 [ПарольSMTP]
					,_Fld23833 [СерверSMTP]
					,_Fld23834 [ПортSMTP]
					,_Fld23835 [ТребуетсяSMTPАутентификация]
					,_Fld23836 [АдресЭлектроннойПочты]
					,_Fld23837RRef [НалоговыйОрган]
					,_Fld23838RRef [СерверДокументооборота]
					,_Fld23839 [СертификатРуководителя]
					,_Fld23840 [СертификатГлавногоБухгалтера]
					,_Fld23841 [СертификатДляШифрования]
					,_Fld23842 [УдалитьАвтоматическоеОпределениеНабораПодписей]
					,_Fld23843 [ИспользуютсяСъемныеКлючевыеНосители]
					,_Fld23844 [УдалитьНестандартныеТаймауты]
					,_Fld23845 [УдалитьТаймаутНалоговогоОргана]
					,_Fld23846 [УдалитьТаймаутНалогоплательщика]
					,_Fld23847 [УдалитьИспользуетсяОбособленнымиПодразделениями]
					,_Fld23848 [ОбменНапрямую]
					,_Fld23849 [ОбменНапрямуюСФСГС]
					,_Fld23850 [НеФормироватьПодтвержденияАвтоматически]
					,_Fld23851RRef [РежимАвтонастройки]
					,_Fld23852 [ИспользоватьСервисОнлайнПроверкиОтчетов]
					,_Fld23853 [ПредназначенаДляДокументооборотаСФНС]
					,_Fld23854 [ПредназначенаДляДокументооборотаСПФР]
					,_Fld23855 [ПредназначенаДляДокументооборотаСФСГС]
					,_Fld23856 [ИдентификаторСпецоператора]
					,_Fld23857 [ИдентификаторАбонента]
					,_Fld23858 [ИдентификаторСистемыОтправителяПФР]
					,_Fld23859 [ИдентификаторСистемыОтправителяФСГС]
					,_Fld23860 [ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя]
					,_Fld23861 [ИННУполномоченногоПредставителя]
					,_Fld23862 [КППУполномоченногоПредставителя]
					,_Fld23863 [ПолноеНаименованиеУполномоченногоПредставителя]
					,_Fld23864RRef [СтатусУчетнойЗаписи]
					,_Fld23865RRef [СпецоператорСвязи]
					From _Reference23135(NOLOCK)
					Where _Description between @Мин and @Макс
					Order by _Description", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.СправочникиВыборка.УчетныеЗаписиДокументооборота();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.УчетныеЗаписиДокументооборота();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Код = Читалка.GetString(4);
							Ссылка.Наименование = Читалка.GetString(5);
								Ссылка.ИмяПользователяPOP3 = Читалка.GetString(6);
								Ссылка.ПарольPOP3 = Читалка.GetString(7);
								Ссылка.СерверPOP3 = Читалка.GetString(8);
								Ссылка.ПортPOP3 = Читалка.GetDecimal(9);
								Ссылка.ИмяПользователяSMTP = Читалка.GetString(10);
								Ссылка.ПарольSMTP = Читалка.GetString(11);
								Ссылка.СерверSMTP = Читалка.GetString(12);
								Ссылка.ПортSMTP = Читалка.GetDecimal(13);
								Ссылка.ТребуетсяSMTPАутентификация = ((byte[])Читалка.GetValue(14))[0]==1;
								Ссылка.АдресЭлектроннойПочты = Читалка.GetString(15);
								Ссылка.НалоговыйОрган = V82.СправочникиСсылка.НалоговыеОрганы.ВзятьИзКэша((byte[])Читалка.GetValue(16));
								Ссылка.СерверДокументооборота = V82.СправочникиСсылка.СерверыДокументооборота.ВзятьИзКэша((byte[])Читалка.GetValue(17));
								Ссылка.СертификатРуководителя = Читалка.GetString(18);
								Ссылка.СертификатГлавногоБухгалтера = Читалка.GetString(19);
								Ссылка.СертификатДляШифрования = Читалка.GetString(20);
								Ссылка.УдалитьАвтоматическоеОпределениеНабораПодписей = ((byte[])Читалка.GetValue(21))[0]==1;
								Ссылка.ИспользуютсяСъемныеКлючевыеНосители = ((byte[])Читалка.GetValue(22))[0]==1;
								Ссылка.УдалитьНестандартныеТаймауты = ((byte[])Читалка.GetValue(23))[0]==1;
								Ссылка.УдалитьТаймаутНалоговогоОргана = Читалка.GetDecimal(24);
								Ссылка.УдалитьТаймаутНалогоплательщика = Читалка.GetDecimal(25);
								Ссылка.УдалитьИспользуетсяОбособленнымиПодразделениями = ((byte[])Читалка.GetValue(26))[0]==1;
								Ссылка.ОбменНапрямую = ((byte[])Читалка.GetValue(27))[0]==1;
								Ссылка.ОбменНапрямуюСФСГС = ((byte[])Читалка.GetValue(28))[0]==1;
								Ссылка.НеФормироватьПодтвержденияАвтоматически = ((byte[])Читалка.GetValue(29))[0]==1;
								Ссылка.РежимАвтонастройки = V82.Перечисления/*Ссылка*/.РежимыАвтонастройкиУчетнойЗаписиДокументооборота.ПустаяСсылка.Получить((byte[])Читалка.GetValue(30));
								Ссылка.ИспользоватьСервисОнлайнПроверкиОтчетов = ((byte[])Читалка.GetValue(31))[0]==1;
								Ссылка.ПредназначенаДляДокументооборотаСФНС = ((byte[])Читалка.GetValue(32))[0]==1;
								Ссылка.ПредназначенаДляДокументооборотаСПФР = ((byte[])Читалка.GetValue(33))[0]==1;
								Ссылка.ПредназначенаДляДокументооборотаСФСГС = ((byte[])Читалка.GetValue(34))[0]==1;
								Ссылка.ИдентификаторСпецоператора = Читалка.GetString(35);
								Ссылка.ИдентификаторАбонента = Читалка.GetString(36);
								Ссылка.ИдентификаторСистемыОтправителяПФР = Читалка.GetString(37);
								Ссылка.ИдентификаторСистемыОтправителяФСГС = Читалка.GetString(38);
								Ссылка.ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя = ((byte[])Читалка.GetValue(39))[0]==1;
								Ссылка.ИННУполномоченногоПредставителя = Читалка.GetString(40);
								Ссылка.КППУполномоченногоПредставителя = Читалка.GetString(41);
								Ссылка.ПолноеНаименованиеУполномоченногоПредставителя = Читалка.GetString(42);
								Ссылка.СтатусУчетнойЗаписи = V82.Перечисления/*Ссылка*/.СтатусыУчетнойЗаписиДокументооборота.ПустаяСсылка.Получить((byte[])Читалка.GetValue(43));
								Ссылка.СпецоператорСвязи = V82.Перечисления/*Ссылка*/.СпецоператорыСвязи.ПустаяСсылка.Получить((byte[])Читалка.GetValue(44));
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.УчетныеЗаписиДокументооборота СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld23827 [ИмяПользователяPOP3]
					,_Fld23828 [ПарольPOP3]
					,_Fld23829 [СерверPOP3]
					,_Fld23830 [ПортPOP3]
					,_Fld23831 [ИмяПользователяSMTP]
					,_Fld23832 [ПарольSMTP]
					,_Fld23833 [СерверSMTP]
					,_Fld23834 [ПортSMTP]
					,_Fld23835 [ТребуетсяSMTPАутентификация]
					,_Fld23836 [АдресЭлектроннойПочты]
					,_Fld23837RRef [НалоговыйОрган]
					,_Fld23838RRef [СерверДокументооборота]
					,_Fld23839 [СертификатРуководителя]
					,_Fld23840 [СертификатГлавногоБухгалтера]
					,_Fld23841 [СертификатДляШифрования]
					,_Fld23842 [УдалитьАвтоматическоеОпределениеНабораПодписей]
					,_Fld23843 [ИспользуютсяСъемныеКлючевыеНосители]
					,_Fld23844 [УдалитьНестандартныеТаймауты]
					,_Fld23845 [УдалитьТаймаутНалоговогоОргана]
					,_Fld23846 [УдалитьТаймаутНалогоплательщика]
					,_Fld23847 [УдалитьИспользуетсяОбособленнымиПодразделениями]
					,_Fld23848 [ОбменНапрямую]
					,_Fld23849 [ОбменНапрямуюСФСГС]
					,_Fld23850 [НеФормироватьПодтвержденияАвтоматически]
					,_Fld23851RRef [РежимАвтонастройки]
					,_Fld23852 [ИспользоватьСервисОнлайнПроверкиОтчетов]
					,_Fld23853 [ПредназначенаДляДокументооборотаСФНС]
					,_Fld23854 [ПредназначенаДляДокументооборотаСПФР]
					,_Fld23855 [ПредназначенаДляДокументооборотаСФСГС]
					,_Fld23856 [ИдентификаторСпецоператора]
					,_Fld23857 [ИдентификаторАбонента]
					,_Fld23858 [ИдентификаторСистемыОтправителяПФР]
					,_Fld23859 [ИдентификаторСистемыОтправителяФСГС]
					,_Fld23860 [ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя]
					,_Fld23861 [ИННУполномоченногоПредставителя]
					,_Fld23862 [КППУполномоченногоПредставителя]
					,_Fld23863 [ПолноеНаименованиеУполномоченногоПредставителя]
					,_Fld23864RRef [СтатусУчетнойЗаписи]
					,_Fld23865RRef [СпецоператорСвязи]
					From _Reference23135(NOLOCK)";
					var Выборка = new V82.СправочникиВыборка.УчетныеЗаписиДокументооборота();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.УчетныеЗаписиДокументооборота();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Код = Читалка.GetString(4);
							Ссылка.Наименование = Читалка.GetString(5);
								Ссылка.ИмяПользователяPOP3 = Читалка.GetString(6);
								Ссылка.ПарольPOP3 = Читалка.GetString(7);
								Ссылка.СерверPOP3 = Читалка.GetString(8);
								Ссылка.ПортPOP3 = Читалка.GetDecimal(9);
								Ссылка.ИмяПользователяSMTP = Читалка.GetString(10);
								Ссылка.ПарольSMTP = Читалка.GetString(11);
								Ссылка.СерверSMTP = Читалка.GetString(12);
								Ссылка.ПортSMTP = Читалка.GetDecimal(13);
								Ссылка.ТребуетсяSMTPАутентификация = ((byte[])Читалка.GetValue(14))[0]==1;
								Ссылка.АдресЭлектроннойПочты = Читалка.GetString(15);
								Ссылка.НалоговыйОрган = V82.СправочникиСсылка.НалоговыеОрганы.ВзятьИзКэша((byte[])Читалка.GetValue(16));
								Ссылка.СерверДокументооборота = V82.СправочникиСсылка.СерверыДокументооборота.ВзятьИзКэша((byte[])Читалка.GetValue(17));
								Ссылка.СертификатРуководителя = Читалка.GetString(18);
								Ссылка.СертификатГлавногоБухгалтера = Читалка.GetString(19);
								Ссылка.СертификатДляШифрования = Читалка.GetString(20);
								Ссылка.УдалитьАвтоматическоеОпределениеНабораПодписей = ((byte[])Читалка.GetValue(21))[0]==1;
								Ссылка.ИспользуютсяСъемныеКлючевыеНосители = ((byte[])Читалка.GetValue(22))[0]==1;
								Ссылка.УдалитьНестандартныеТаймауты = ((byte[])Читалка.GetValue(23))[0]==1;
								Ссылка.УдалитьТаймаутНалоговогоОргана = Читалка.GetDecimal(24);
								Ссылка.УдалитьТаймаутНалогоплательщика = Читалка.GetDecimal(25);
								Ссылка.УдалитьИспользуетсяОбособленнымиПодразделениями = ((byte[])Читалка.GetValue(26))[0]==1;
								Ссылка.ОбменНапрямую = ((byte[])Читалка.GetValue(27))[0]==1;
								Ссылка.ОбменНапрямуюСФСГС = ((byte[])Читалка.GetValue(28))[0]==1;
								Ссылка.НеФормироватьПодтвержденияАвтоматически = ((byte[])Читалка.GetValue(29))[0]==1;
								Ссылка.РежимАвтонастройки = V82.Перечисления/*Ссылка*/.РежимыАвтонастройкиУчетнойЗаписиДокументооборота.ПустаяСсылка.Получить((byte[])Читалка.GetValue(30));
								Ссылка.ИспользоватьСервисОнлайнПроверкиОтчетов = ((byte[])Читалка.GetValue(31))[0]==1;
								Ссылка.ПредназначенаДляДокументооборотаСФНС = ((byte[])Читалка.GetValue(32))[0]==1;
								Ссылка.ПредназначенаДляДокументооборотаСПФР = ((byte[])Читалка.GetValue(33))[0]==1;
								Ссылка.ПредназначенаДляДокументооборотаСФСГС = ((byte[])Читалка.GetValue(34))[0]==1;
								Ссылка.ИдентификаторСпецоператора = Читалка.GetString(35);
								Ссылка.ИдентификаторАбонента = Читалка.GetString(36);
								Ссылка.ИдентификаторСистемыОтправителяПФР = Читалка.GetString(37);
								Ссылка.ИдентификаторСистемыОтправителяФСГС = Читалка.GetString(38);
								Ссылка.ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя = ((byte[])Читалка.GetValue(39))[0]==1;
								Ссылка.ИННУполномоченногоПредставителя = Читалка.GetString(40);
								Ссылка.КППУполномоченногоПредставителя = Читалка.GetString(41);
								Ссылка.ПолноеНаименованиеУполномоченногоПредставителя = Читалка.GetString(42);
								Ссылка.СтатусУчетнойЗаписи = V82.Перечисления/*Ссылка*/.СтатусыУчетнойЗаписиДокументооборота.ПустаяСсылка.Получить((byte[])Читалка.GetValue(43));
								Ссылка.СпецоператорСвязи = V82.Перечисления/*Ссылка*/.СпецоператорыСвязи.ПустаяСсылка.Получить((byte[])Читалка.GetValue(44));
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.УчетныеЗаписиДокументооборота СтраницаПоКоду(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld23827 [ИмяПользователяPOP3]
					,_Fld23828 [ПарольPOP3]
					,_Fld23829 [СерверPOP3]
					,_Fld23830 [ПортPOP3]
					,_Fld23831 [ИмяПользователяSMTP]
					,_Fld23832 [ПарольSMTP]
					,_Fld23833 [СерверSMTP]
					,_Fld23834 [ПортSMTP]
					,_Fld23835 [ТребуетсяSMTPАутентификация]
					,_Fld23836 [АдресЭлектроннойПочты]
					,_Fld23837RRef [НалоговыйОрган]
					,_Fld23838RRef [СерверДокументооборота]
					,_Fld23839 [СертификатРуководителя]
					,_Fld23840 [СертификатГлавногоБухгалтера]
					,_Fld23841 [СертификатДляШифрования]
					,_Fld23842 [УдалитьАвтоматическоеОпределениеНабораПодписей]
					,_Fld23843 [ИспользуютсяСъемныеКлючевыеНосители]
					,_Fld23844 [УдалитьНестандартныеТаймауты]
					,_Fld23845 [УдалитьТаймаутНалоговогоОргана]
					,_Fld23846 [УдалитьТаймаутНалогоплательщика]
					,_Fld23847 [УдалитьИспользуетсяОбособленнымиПодразделениями]
					,_Fld23848 [ОбменНапрямую]
					,_Fld23849 [ОбменНапрямуюСФСГС]
					,_Fld23850 [НеФормироватьПодтвержденияАвтоматически]
					,_Fld23851RRef [РежимАвтонастройки]
					,_Fld23852 [ИспользоватьСервисОнлайнПроверкиОтчетов]
					,_Fld23853 [ПредназначенаДляДокументооборотаСФНС]
					,_Fld23854 [ПредназначенаДляДокументооборотаСПФР]
					,_Fld23855 [ПредназначенаДляДокументооборотаСФСГС]
					,_Fld23856 [ИдентификаторСпецоператора]
					,_Fld23857 [ИдентификаторАбонента]
					,_Fld23858 [ИдентификаторСистемыОтправителяПФР]
					,_Fld23859 [ИдентификаторСистемыОтправителяФСГС]
					,_Fld23860 [ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя]
					,_Fld23861 [ИННУполномоченногоПредставителя]
					,_Fld23862 [КППУполномоченногоПредставителя]
					,_Fld23863 [ПолноеНаименованиеУполномоченногоПредставителя]
					,_Fld23864RRef [СтатусУчетнойЗаписи]
					,_Fld23865RRef [СпецоператорСвязи]
					From _Reference23135(NOLOCK)";
					var Выборка = new V82.СправочникиВыборка.УчетныеЗаписиДокументооборота();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.УчетныеЗаписиДокументооборота();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Код = Читалка.GetString(4);
							Ссылка.Наименование = Читалка.GetString(5);
								Ссылка.ИмяПользователяPOP3 = Читалка.GetString(6);
								Ссылка.ПарольPOP3 = Читалка.GetString(7);
								Ссылка.СерверPOP3 = Читалка.GetString(8);
								Ссылка.ПортPOP3 = Читалка.GetDecimal(9);
								Ссылка.ИмяПользователяSMTP = Читалка.GetString(10);
								Ссылка.ПарольSMTP = Читалка.GetString(11);
								Ссылка.СерверSMTP = Читалка.GetString(12);
								Ссылка.ПортSMTP = Читалка.GetDecimal(13);
								Ссылка.ТребуетсяSMTPАутентификация = ((byte[])Читалка.GetValue(14))[0]==1;
								Ссылка.АдресЭлектроннойПочты = Читалка.GetString(15);
								Ссылка.НалоговыйОрган = V82.СправочникиСсылка.НалоговыеОрганы.ВзятьИзКэша((byte[])Читалка.GetValue(16));
								Ссылка.СерверДокументооборота = V82.СправочникиСсылка.СерверыДокументооборота.ВзятьИзКэша((byte[])Читалка.GetValue(17));
								Ссылка.СертификатРуководителя = Читалка.GetString(18);
								Ссылка.СертификатГлавногоБухгалтера = Читалка.GetString(19);
								Ссылка.СертификатДляШифрования = Читалка.GetString(20);
								Ссылка.УдалитьАвтоматическоеОпределениеНабораПодписей = ((byte[])Читалка.GetValue(21))[0]==1;
								Ссылка.ИспользуютсяСъемныеКлючевыеНосители = ((byte[])Читалка.GetValue(22))[0]==1;
								Ссылка.УдалитьНестандартныеТаймауты = ((byte[])Читалка.GetValue(23))[0]==1;
								Ссылка.УдалитьТаймаутНалоговогоОргана = Читалка.GetDecimal(24);
								Ссылка.УдалитьТаймаутНалогоплательщика = Читалка.GetDecimal(25);
								Ссылка.УдалитьИспользуетсяОбособленнымиПодразделениями = ((byte[])Читалка.GetValue(26))[0]==1;
								Ссылка.ОбменНапрямую = ((byte[])Читалка.GetValue(27))[0]==1;
								Ссылка.ОбменНапрямуюСФСГС = ((byte[])Читалка.GetValue(28))[0]==1;
								Ссылка.НеФормироватьПодтвержденияАвтоматически = ((byte[])Читалка.GetValue(29))[0]==1;
								Ссылка.РежимАвтонастройки = V82.Перечисления/*Ссылка*/.РежимыАвтонастройкиУчетнойЗаписиДокументооборота.ПустаяСсылка.Получить((byte[])Читалка.GetValue(30));
								Ссылка.ИспользоватьСервисОнлайнПроверкиОтчетов = ((byte[])Читалка.GetValue(31))[0]==1;
								Ссылка.ПредназначенаДляДокументооборотаСФНС = ((byte[])Читалка.GetValue(32))[0]==1;
								Ссылка.ПредназначенаДляДокументооборотаСПФР = ((byte[])Читалка.GetValue(33))[0]==1;
								Ссылка.ПредназначенаДляДокументооборотаСФСГС = ((byte[])Читалка.GetValue(34))[0]==1;
								Ссылка.ИдентификаторСпецоператора = Читалка.GetString(35);
								Ссылка.ИдентификаторАбонента = Читалка.GetString(36);
								Ссылка.ИдентификаторСистемыОтправителяПФР = Читалка.GetString(37);
								Ссылка.ИдентификаторСистемыОтправителяФСГС = Читалка.GetString(38);
								Ссылка.ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя = ((byte[])Читалка.GetValue(39))[0]==1;
								Ссылка.ИННУполномоченногоПредставителя = Читалка.GetString(40);
								Ссылка.КППУполномоченногоПредставителя = Читалка.GetString(41);
								Ссылка.ПолноеНаименованиеУполномоченногоПредставителя = Читалка.GetString(42);
								Ссылка.СтатусУчетнойЗаписи = V82.Перечисления/*Ссылка*/.СтатусыУчетнойЗаписиДокументооборота.ПустаяСсылка.Получить((byte[])Читалка.GetValue(43));
								Ссылка.СпецоператорСвязи = V82.Перечисления/*Ссылка*/.СпецоператорыСвязи.ПустаяСсылка.Получить((byte[])Читалка.GetValue(44));
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.УчетныеЗаписиДокументооборота СтраницаПоНаименованию(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld23827 [ИмяПользователяPOP3]
					,_Fld23828 [ПарольPOP3]
					,_Fld23829 [СерверPOP3]
					,_Fld23830 [ПортPOP3]
					,_Fld23831 [ИмяПользователяSMTP]
					,_Fld23832 [ПарольSMTP]
					,_Fld23833 [СерверSMTP]
					,_Fld23834 [ПортSMTP]
					,_Fld23835 [ТребуетсяSMTPАутентификация]
					,_Fld23836 [АдресЭлектроннойПочты]
					,_Fld23837RRef [НалоговыйОрган]
					,_Fld23838RRef [СерверДокументооборота]
					,_Fld23839 [СертификатРуководителя]
					,_Fld23840 [СертификатГлавногоБухгалтера]
					,_Fld23841 [СертификатДляШифрования]
					,_Fld23842 [УдалитьАвтоматическоеОпределениеНабораПодписей]
					,_Fld23843 [ИспользуютсяСъемныеКлючевыеНосители]
					,_Fld23844 [УдалитьНестандартныеТаймауты]
					,_Fld23845 [УдалитьТаймаутНалоговогоОргана]
					,_Fld23846 [УдалитьТаймаутНалогоплательщика]
					,_Fld23847 [УдалитьИспользуетсяОбособленнымиПодразделениями]
					,_Fld23848 [ОбменНапрямую]
					,_Fld23849 [ОбменНапрямуюСФСГС]
					,_Fld23850 [НеФормироватьПодтвержденияАвтоматически]
					,_Fld23851RRef [РежимАвтонастройки]
					,_Fld23852 [ИспользоватьСервисОнлайнПроверкиОтчетов]
					,_Fld23853 [ПредназначенаДляДокументооборотаСФНС]
					,_Fld23854 [ПредназначенаДляДокументооборотаСПФР]
					,_Fld23855 [ПредназначенаДляДокументооборотаСФСГС]
					,_Fld23856 [ИдентификаторСпецоператора]
					,_Fld23857 [ИдентификаторАбонента]
					,_Fld23858 [ИдентификаторСистемыОтправителяПФР]
					,_Fld23859 [ИдентификаторСистемыОтправителяФСГС]
					,_Fld23860 [ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя]
					,_Fld23861 [ИННУполномоченногоПредставителя]
					,_Fld23862 [КППУполномоченногоПредставителя]
					,_Fld23863 [ПолноеНаименованиеУполномоченногоПредставителя]
					,_Fld23864RRef [СтатусУчетнойЗаписи]
					,_Fld23865RRef [СпецоператорСвязи]
					From _Reference23135(NOLOCK)";
					var Выборка = new V82.СправочникиВыборка.УчетныеЗаписиДокументооборота();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.УчетныеЗаписиДокументооборота();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Код = Читалка.GetString(4);
							Ссылка.Наименование = Читалка.GetString(5);
								Ссылка.ИмяПользователяPOP3 = Читалка.GetString(6);
								Ссылка.ПарольPOP3 = Читалка.GetString(7);
								Ссылка.СерверPOP3 = Читалка.GetString(8);
								Ссылка.ПортPOP3 = Читалка.GetDecimal(9);
								Ссылка.ИмяПользователяSMTP = Читалка.GetString(10);
								Ссылка.ПарольSMTP = Читалка.GetString(11);
								Ссылка.СерверSMTP = Читалка.GetString(12);
								Ссылка.ПортSMTP = Читалка.GetDecimal(13);
								Ссылка.ТребуетсяSMTPАутентификация = ((byte[])Читалка.GetValue(14))[0]==1;
								Ссылка.АдресЭлектроннойПочты = Читалка.GetString(15);
								Ссылка.НалоговыйОрган = V82.СправочникиСсылка.НалоговыеОрганы.ВзятьИзКэша((byte[])Читалка.GetValue(16));
								Ссылка.СерверДокументооборота = V82.СправочникиСсылка.СерверыДокументооборота.ВзятьИзКэша((byte[])Читалка.GetValue(17));
								Ссылка.СертификатРуководителя = Читалка.GetString(18);
								Ссылка.СертификатГлавногоБухгалтера = Читалка.GetString(19);
								Ссылка.СертификатДляШифрования = Читалка.GetString(20);
								Ссылка.УдалитьАвтоматическоеОпределениеНабораПодписей = ((byte[])Читалка.GetValue(21))[0]==1;
								Ссылка.ИспользуютсяСъемныеКлючевыеНосители = ((byte[])Читалка.GetValue(22))[0]==1;
								Ссылка.УдалитьНестандартныеТаймауты = ((byte[])Читалка.GetValue(23))[0]==1;
								Ссылка.УдалитьТаймаутНалоговогоОргана = Читалка.GetDecimal(24);
								Ссылка.УдалитьТаймаутНалогоплательщика = Читалка.GetDecimal(25);
								Ссылка.УдалитьИспользуетсяОбособленнымиПодразделениями = ((byte[])Читалка.GetValue(26))[0]==1;
								Ссылка.ОбменНапрямую = ((byte[])Читалка.GetValue(27))[0]==1;
								Ссылка.ОбменНапрямуюСФСГС = ((byte[])Читалка.GetValue(28))[0]==1;
								Ссылка.НеФормироватьПодтвержденияАвтоматически = ((byte[])Читалка.GetValue(29))[0]==1;
								Ссылка.РежимАвтонастройки = V82.Перечисления/*Ссылка*/.РежимыАвтонастройкиУчетнойЗаписиДокументооборота.ПустаяСсылка.Получить((byte[])Читалка.GetValue(30));
								Ссылка.ИспользоватьСервисОнлайнПроверкиОтчетов = ((byte[])Читалка.GetValue(31))[0]==1;
								Ссылка.ПредназначенаДляДокументооборотаСФНС = ((byte[])Читалка.GetValue(32))[0]==1;
								Ссылка.ПредназначенаДляДокументооборотаСПФР = ((byte[])Читалка.GetValue(33))[0]==1;
								Ссылка.ПредназначенаДляДокументооборотаСФСГС = ((byte[])Читалка.GetValue(34))[0]==1;
								Ссылка.ИдентификаторСпецоператора = Читалка.GetString(35);
								Ссылка.ИдентификаторАбонента = Читалка.GetString(36);
								Ссылка.ИдентификаторСистемыОтправителяПФР = Читалка.GetString(37);
								Ссылка.ИдентификаторСистемыОтправителяФСГС = Читалка.GetString(38);
								Ссылка.ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя = ((byte[])Читалка.GetValue(39))[0]==1;
								Ссылка.ИННУполномоченногоПредставителя = Читалка.GetString(40);
								Ссылка.КППУполномоченногоПредставителя = Читалка.GetString(41);
								Ссылка.ПолноеНаименованиеУполномоченногоПредставителя = Читалка.GetString(42);
								Ссылка.СтатусУчетнойЗаписи = V82.Перечисления/*Ссылка*/.СтатусыУчетнойЗаписиДокументооборота.ПустаяСсылка.Получить((byte[])Читалка.GetValue(43));
								Ссылка.СпецоператорСвязи = V82.Перечисления/*Ссылка*/.СпецоператорыСвязи.ПустаяСсылка.Получить((byte[])Читалка.GetValue(44));
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.СправочникиОбъект.УчетныеЗаписиДокументооборота СоздатьЭлемент()
		{
			var Объект = new V82.СправочникиОбъект.УчетныеЗаписиДокументооборота();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.ИмяПользователяPOP3 = "";
			Объект.ПарольPOP3 = "";
			Объект.СерверPOP3 = "";
			Объект.ИмяПользователяSMTP = "";
			Объект.ПарольSMTP = "";
			Объект.СерверSMTP = "";
			Объект.АдресЭлектроннойПочты = "";
			Объект.СертификатРуководителя = "";
			Объект.СертификатГлавногоБухгалтера = "";
			Объект.СертификатДляШифрования = "";
			Объект.ИдентификаторСпецоператора = "";
			Объект.ИдентификаторАбонента = "";
			Объект.ИдентификаторСистемыОтправителяПФР = "";
			Объект.ИдентификаторСистемыОтправителяФСГС = "";
			Объект.ИННУполномоченногоПредставителя = "";
			Объект.КППУполномоченногоПредставителя = "";
			Объект.ПолноеНаименованиеУполномоченногоПредставителя = "";
			Объект.НалоговыйОрган = new V82.СправочникиСсылка.НалоговыеОрганы();
			Объект.СерверДокументооборота = new V82.СправочникиСсылка.СерверыДокументооборота();
			Объект.РежимАвтонастройки = V82.Перечисления/*Ссылка*/.РежимыАвтонастройкиУчетнойЗаписиДокументооборота.ПустаяСсылка;
			Объект.СтатусУчетнойЗаписи = V82.Перечисления/*Ссылка*/.СтатусыУчетнойЗаписиДокументооборота.ПустаяСсылка;
			Объект.СпецоператорСвязи = V82.Перечисления/*Ссылка*/.СпецоператорыСвязи.ПустаяСсылка;
			return Объект;
		}
	}
}