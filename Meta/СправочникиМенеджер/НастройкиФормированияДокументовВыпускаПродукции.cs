
using System;
using System.Data.SqlClient;
using V82;
using V82.СправочникиСсылка;
using V82.Справочники;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Справочники//Менеджер
{
	///<summary>
	///Настройки формирования документов выпуска продукции по данным подсистемы "Оперативный учет производства"
	///</summary>
	public partial class НастройкиФормированияДокументовВыпускаПродукции:СправочникМенеджер
	{
		
		public static СправочникиСсылка.НастройкиФормированияДокументовВыпускаПродукции НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_ParentIDRRef [Родитель]
					,_Folder [ЭтоГруппа]
					,_Description [Наименование]
					,_Fld22716 [ГраницаОбработки]
					,_Fld22717RRef [Подразделение]
					,_Fld22718RRef [ПериодДетализации]
					,_Fld26547 [ВидРегулярногоДокумента]
					,_Fld22719RRef [Организация]
					,_Fld22720RRef [ПодразделениеОрганизации]
					,_Fld22721RRef [Склад]
					,_Fld22722 [ОтражатьВУправленческомУчете]
					,_Fld22723 [ОтражатьВБухгалтерскомУчете]
					,_Fld22724 [ОтражатьВНалоговомУчете]
					,_Fld22725 [ОтразитьВыпуск]
					,_Fld22726 [ОтразитьМатериалы]
					,_Fld22727 [НеОбрабатыватьПериодДоЗавершенияСмен]
					,_Fld22728 [ФормироватьДокументыАвтоматически]
					,_Fld22729 [РегламентноеЗадание]
					,_Fld22730 [Задержка]
					,_Fld22731 [Комментарий]
					,_Fld22732 [НеОбрабатыватьВсеДокументы]
					From _Reference22677(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.НастройкиФормированияДокументовВыпускаПродукции();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Родитель = V82.СправочникиСсылка.НастройкиФормированияДокументовВыпускаПродукции.ВзятьИзКэша((byte[])Читалка.GetValue(4));
							Ссылка.ЭтоГруппа = ((byte[])Читалка.GetValue(5))[0]==0;
							Ссылка.Наименование = Читалка.GetString(6);
							if(!Ссылка.ЭтоГруппа)
							{
								Ссылка.ГраницаОбработки = Читалка.GetDateTime(7);
								Ссылка.Подразделение = V82.СправочникиСсылка.Подразделения.ВзятьИзКэша((byte[])Читалка.GetValue(8));
								Ссылка.ПериодДетализации = V82.Перечисления/*Ссылка*/.Периодичность.ПустаяСсылка.Получить((byte[])Читалка.GetValue(9));
								Ссылка.ВидРегулярногоДокумента = Читалка.GetString(10);
								Ссылка.Организация = V82.СправочникиСсылка.Организации.ВзятьИзКэша((byte[])Читалка.GetValue(11));
								Ссылка.ПодразделениеОрганизации = V82.СправочникиСсылка.ПодразделенияОрганизаций.ВзятьИзКэша((byte[])Читалка.GetValue(12));
								Ссылка.Склад = V82.СправочникиСсылка.Склады.ВзятьИзКэша((byte[])Читалка.GetValue(13));
								Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(14))[0]==1;
								Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(15))[0]==1;
								Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
								Ссылка.ОтразитьВыпуск = ((byte[])Читалка.GetValue(17))[0]==1;
								Ссылка.ОтразитьМатериалы = ((byte[])Читалка.GetValue(18))[0]==1;
								Ссылка.НеОбрабатыватьПериодДоЗавершенияСмен = ((byte[])Читалка.GetValue(19))[0]==1;
								Ссылка.ФормироватьДокументыАвтоматически = ((byte[])Читалка.GetValue(20))[0]==1;
								Ссылка.РегламентноеЗадание = Читалка.GetString(21);
								Ссылка.Задержка = Читалка.GetDecimal(22);
								Ссылка.Комментарий = Читалка.GetString(23);
								Ссылка.НеОбрабатыватьВсеДокументы = ((byte[])Читалка.GetValue(24))[0]==1;
							}
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static СправочникиВыборка.НастройкиФормированияДокументовВыпускаПродукции Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_ParentIDRRef [Родитель]
					,_Folder [ЭтоГруппа]
					,_Description [Наименование]
					,_Fld22716 [ГраницаОбработки]
					,_Fld22717RRef [Подразделение]
					,_Fld22718RRef [ПериодДетализации]
					,_Fld26547 [ВидРегулярногоДокумента]
					,_Fld22719RRef [Организация]
					,_Fld22720RRef [ПодразделениеОрганизации]
					,_Fld22721RRef [Склад]
					,_Fld22722 [ОтражатьВУправленческомУчете]
					,_Fld22723 [ОтражатьВБухгалтерскомУчете]
					,_Fld22724 [ОтражатьВНалоговомУчете]
					,_Fld22725 [ОтразитьВыпуск]
					,_Fld22726 [ОтразитьМатериалы]
					,_Fld22727 [НеОбрабатыватьПериодДоЗавершенияСмен]
					,_Fld22728 [ФормироватьДокументыАвтоматически]
					,_Fld22729 [РегламентноеЗадание]
					,_Fld22730 [Задержка]
					,_Fld22731 [Комментарий]
					,_Fld22732 [НеОбрабатыватьВсеДокументы]
					From _Reference22677(NOLOCK)  Where _Folder = 0x01 ";
					var Выборка = new V82.СправочникиВыборка.НастройкиФормированияДокументовВыпускаПродукции();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.НастройкиФормированияДокументовВыпускаПродукции();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Родитель = V82.СправочникиСсылка.НастройкиФормированияДокументовВыпускаПродукции.ВзятьИзКэша((byte[])Читалка.GetValue(4));
							Ссылка.ЭтоГруппа = ((byte[])Читалка.GetValue(5))[0]==0;
							Ссылка.Наименование = Читалка.GetString(6);
							if(!Ссылка.ЭтоГруппа)
							{
								Ссылка.ГраницаОбработки = Читалка.GetDateTime(7);
								Ссылка.Подразделение = V82.СправочникиСсылка.Подразделения.ВзятьИзКэша((byte[])Читалка.GetValue(8));
								Ссылка.ПериодДетализации = V82.Перечисления/*Ссылка*/.Периодичность.ПустаяСсылка.Получить((byte[])Читалка.GetValue(9));
								Ссылка.ВидРегулярногоДокумента = Читалка.GetString(10);
								Ссылка.Организация = V82.СправочникиСсылка.Организации.ВзятьИзКэша((byte[])Читалка.GetValue(11));
								Ссылка.ПодразделениеОрганизации = V82.СправочникиСсылка.ПодразделенияОрганизаций.ВзятьИзКэша((byte[])Читалка.GetValue(12));
								Ссылка.Склад = V82.СправочникиСсылка.Склады.ВзятьИзКэша((byte[])Читалка.GetValue(13));
								Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(14))[0]==1;
								Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(15))[0]==1;
								Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
								Ссылка.ОтразитьВыпуск = ((byte[])Читалка.GetValue(17))[0]==1;
								Ссылка.ОтразитьМатериалы = ((byte[])Читалка.GetValue(18))[0]==1;
								Ссылка.НеОбрабатыватьПериодДоЗавершенияСмен = ((byte[])Читалка.GetValue(19))[0]==1;
								Ссылка.ФормироватьДокументыАвтоматически = ((byte[])Читалка.GetValue(20))[0]==1;
								Ссылка.РегламентноеЗадание = Читалка.GetString(21);
								Ссылка.Задержка = Читалка.GetDecimal(22);
								Ссылка.Комментарий = Читалка.GetString(23);
								Ссылка.НеОбрабатыватьВсеДокументы = ((byte[])Читалка.GetValue(24))[0]==1;
							}
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.НастройкиФормированияДокументовВыпускаПродукции ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_ParentIDRRef [Родитель]
					,_Folder [ЭтоГруппа]
					,_Description [Наименование]
					,_Fld22716 [ГраницаОбработки]
					,_Fld22717RRef [Подразделение]
					,_Fld22718RRef [ПериодДетализации]
					,_Fld26547 [ВидРегулярногоДокумента]
					,_Fld22719RRef [Организация]
					,_Fld22720RRef [ПодразделениеОрганизации]
					,_Fld22721RRef [Склад]
					,_Fld22722 [ОтражатьВУправленческомУчете]
					,_Fld22723 [ОтражатьВБухгалтерскомУчете]
					,_Fld22724 [ОтражатьВНалоговомУчете]
					,_Fld22725 [ОтразитьВыпуск]
					,_Fld22726 [ОтразитьМатериалы]
					,_Fld22727 [НеОбрабатыватьПериодДоЗавершенияСмен]
					,_Fld22728 [ФормироватьДокументыАвтоматически]
					,_Fld22729 [РегламентноеЗадание]
					,_Fld22730 [Задержка]
					,_Fld22731 [Комментарий]
					,_Fld22732 [НеОбрабатыватьВсеДокументы]
					From _Reference22677(NOLOCK)
					Where _IDRRef between @Мин and @Макс  -- and _Folder = 0x01 
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.СправочникиВыборка.НастройкиФормированияДокументовВыпускаПродукции();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.НастройкиФормированияДокументовВыпускаПродукции();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Родитель = V82.СправочникиСсылка.НастройкиФормированияДокументовВыпускаПродукции.ВзятьИзКэша((byte[])Читалка.GetValue(4));
							Ссылка.ЭтоГруппа = ((byte[])Читалка.GetValue(5))[0]==0;
							Ссылка.Наименование = Читалка.GetString(6);
							if(!Ссылка.ЭтоГруппа)
							{
								Ссылка.ГраницаОбработки = Читалка.GetDateTime(7);
								Ссылка.Подразделение = V82.СправочникиСсылка.Подразделения.ВзятьИзКэша((byte[])Читалка.GetValue(8));
								Ссылка.ПериодДетализации = V82.Перечисления/*Ссылка*/.Периодичность.ПустаяСсылка.Получить((byte[])Читалка.GetValue(9));
								Ссылка.ВидРегулярногоДокумента = Читалка.GetString(10);
								Ссылка.Организация = V82.СправочникиСсылка.Организации.ВзятьИзКэша((byte[])Читалка.GetValue(11));
								Ссылка.ПодразделениеОрганизации = V82.СправочникиСсылка.ПодразделенияОрганизаций.ВзятьИзКэша((byte[])Читалка.GetValue(12));
								Ссылка.Склад = V82.СправочникиСсылка.Склады.ВзятьИзКэша((byte[])Читалка.GetValue(13));
								Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(14))[0]==1;
								Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(15))[0]==1;
								Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
								Ссылка.ОтразитьВыпуск = ((byte[])Читалка.GetValue(17))[0]==1;
								Ссылка.ОтразитьМатериалы = ((byte[])Читалка.GetValue(18))[0]==1;
								Ссылка.НеОбрабатыватьПериодДоЗавершенияСмен = ((byte[])Читалка.GetValue(19))[0]==1;
								Ссылка.ФормироватьДокументыАвтоматически = ((byte[])Читалка.GetValue(20))[0]==1;
								Ссылка.РегламентноеЗадание = Читалка.GetString(21);
								Ссылка.Задержка = Читалка.GetDecimal(22);
								Ссылка.Комментарий = Читалка.GetString(23);
								Ссылка.НеОбрабатыватьВсеДокументы = ((byte[])Читалка.GetValue(24))[0]==1;
							}
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.НастройкиФормированияДокументовВыпускаПродукции ВыбратьПоНаименованию(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_ParentIDRRef [Родитель]
					,_Folder [ЭтоГруппа]
					,_Description [Наименование]
					,_Fld22716 [ГраницаОбработки]
					,_Fld22717RRef [Подразделение]
					,_Fld22718RRef [ПериодДетализации]
					,_Fld26547 [ВидРегулярногоДокумента]
					,_Fld22719RRef [Организация]
					,_Fld22720RRef [ПодразделениеОрганизации]
					,_Fld22721RRef [Склад]
					,_Fld22722 [ОтражатьВУправленческомУчете]
					,_Fld22723 [ОтражатьВБухгалтерскомУчете]
					,_Fld22724 [ОтражатьВНалоговомУчете]
					,_Fld22725 [ОтразитьВыпуск]
					,_Fld22726 [ОтразитьМатериалы]
					,_Fld22727 [НеОбрабатыватьПериодДоЗавершенияСмен]
					,_Fld22728 [ФормироватьДокументыАвтоматически]
					,_Fld22729 [РегламентноеЗадание]
					,_Fld22730 [Задержка]
					,_Fld22731 [Комментарий]
					,_Fld22732 [НеОбрабатыватьВсеДокументы]
					From _Reference22677(NOLOCK)
					Where _Description between @Мин and @Макс
					Order by _Description", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.СправочникиВыборка.НастройкиФормированияДокументовВыпускаПродукции();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.НастройкиФормированияДокументовВыпускаПродукции();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Родитель = V82.СправочникиСсылка.НастройкиФормированияДокументовВыпускаПродукции.ВзятьИзКэша((byte[])Читалка.GetValue(4));
							Ссылка.ЭтоГруппа = ((byte[])Читалка.GetValue(5))[0]==0;
							Ссылка.Наименование = Читалка.GetString(6);
							if(!Ссылка.ЭтоГруппа)
							{
								Ссылка.ГраницаОбработки = Читалка.GetDateTime(7);
								Ссылка.Подразделение = V82.СправочникиСсылка.Подразделения.ВзятьИзКэша((byte[])Читалка.GetValue(8));
								Ссылка.ПериодДетализации = V82.Перечисления/*Ссылка*/.Периодичность.ПустаяСсылка.Получить((byte[])Читалка.GetValue(9));
								Ссылка.ВидРегулярногоДокумента = Читалка.GetString(10);
								Ссылка.Организация = V82.СправочникиСсылка.Организации.ВзятьИзКэша((byte[])Читалка.GetValue(11));
								Ссылка.ПодразделениеОрганизации = V82.СправочникиСсылка.ПодразделенияОрганизаций.ВзятьИзКэша((byte[])Читалка.GetValue(12));
								Ссылка.Склад = V82.СправочникиСсылка.Склады.ВзятьИзКэша((byte[])Читалка.GetValue(13));
								Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(14))[0]==1;
								Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(15))[0]==1;
								Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
								Ссылка.ОтразитьВыпуск = ((byte[])Читалка.GetValue(17))[0]==1;
								Ссылка.ОтразитьМатериалы = ((byte[])Читалка.GetValue(18))[0]==1;
								Ссылка.НеОбрабатыватьПериодДоЗавершенияСмен = ((byte[])Читалка.GetValue(19))[0]==1;
								Ссылка.ФормироватьДокументыАвтоматически = ((byte[])Читалка.GetValue(20))[0]==1;
								Ссылка.РегламентноеЗадание = Читалка.GetString(21);
								Ссылка.Задержка = Читалка.GetDecimal(22);
								Ссылка.Комментарий = Читалка.GetString(23);
								Ссылка.НеОбрабатыватьВсеДокументы = ((byte[])Читалка.GetValue(24))[0]==1;
							}
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.НастройкиФормированияДокументовВыпускаПродукции СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_ParentIDRRef [Родитель]
					,_Folder [ЭтоГруппа]
					,_Description [Наименование]
					,_Fld22716 [ГраницаОбработки]
					,_Fld22717RRef [Подразделение]
					,_Fld22718RRef [ПериодДетализации]
					,_Fld26547 [ВидРегулярногоДокумента]
					,_Fld22719RRef [Организация]
					,_Fld22720RRef [ПодразделениеОрганизации]
					,_Fld22721RRef [Склад]
					,_Fld22722 [ОтражатьВУправленческомУчете]
					,_Fld22723 [ОтражатьВБухгалтерскомУчете]
					,_Fld22724 [ОтражатьВНалоговомУчете]
					,_Fld22725 [ОтразитьВыпуск]
					,_Fld22726 [ОтразитьМатериалы]
					,_Fld22727 [НеОбрабатыватьПериодДоЗавершенияСмен]
					,_Fld22728 [ФормироватьДокументыАвтоматически]
					,_Fld22729 [РегламентноеЗадание]
					,_Fld22730 [Задержка]
					,_Fld22731 [Комментарий]
					,_Fld22732 [НеОбрабатыватьВсеДокументы]
					From _Reference22677(NOLOCK)";
					var Выборка = new V82.СправочникиВыборка.НастройкиФормированияДокументовВыпускаПродукции();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.НастройкиФормированияДокументовВыпускаПродукции();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Родитель = V82.СправочникиСсылка.НастройкиФормированияДокументовВыпускаПродукции.ВзятьИзКэша((byte[])Читалка.GetValue(4));
							Ссылка.ЭтоГруппа = ((byte[])Читалка.GetValue(5))[0]==0;
							Ссылка.Наименование = Читалка.GetString(6);
							if(!Ссылка.ЭтоГруппа)
							{
								Ссылка.ГраницаОбработки = Читалка.GetDateTime(7);
								Ссылка.Подразделение = V82.СправочникиСсылка.Подразделения.ВзятьИзКэша((byte[])Читалка.GetValue(8));
								Ссылка.ПериодДетализации = V82.Перечисления/*Ссылка*/.Периодичность.ПустаяСсылка.Получить((byte[])Читалка.GetValue(9));
								Ссылка.ВидРегулярногоДокумента = Читалка.GetString(10);
								Ссылка.Организация = V82.СправочникиСсылка.Организации.ВзятьИзКэша((byte[])Читалка.GetValue(11));
								Ссылка.ПодразделениеОрганизации = V82.СправочникиСсылка.ПодразделенияОрганизаций.ВзятьИзКэша((byte[])Читалка.GetValue(12));
								Ссылка.Склад = V82.СправочникиСсылка.Склады.ВзятьИзКэша((byte[])Читалка.GetValue(13));
								Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(14))[0]==1;
								Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(15))[0]==1;
								Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
								Ссылка.ОтразитьВыпуск = ((byte[])Читалка.GetValue(17))[0]==1;
								Ссылка.ОтразитьМатериалы = ((byte[])Читалка.GetValue(18))[0]==1;
								Ссылка.НеОбрабатыватьПериодДоЗавершенияСмен = ((byte[])Читалка.GetValue(19))[0]==1;
								Ссылка.ФормироватьДокументыАвтоматически = ((byte[])Читалка.GetValue(20))[0]==1;
								Ссылка.РегламентноеЗадание = Читалка.GetString(21);
								Ссылка.Задержка = Читалка.GetDecimal(22);
								Ссылка.Комментарий = Читалка.GetString(23);
								Ссылка.НеОбрабатыватьВсеДокументы = ((byte[])Читалка.GetValue(24))[0]==1;
							}
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.НастройкиФормированияДокументовВыпускаПродукции СтраницаПоНаименованию(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_ParentIDRRef [Родитель]
					,_Folder [ЭтоГруппа]
					,_Description [Наименование]
					,_Fld22716 [ГраницаОбработки]
					,_Fld22717RRef [Подразделение]
					,_Fld22718RRef [ПериодДетализации]
					,_Fld26547 [ВидРегулярногоДокумента]
					,_Fld22719RRef [Организация]
					,_Fld22720RRef [ПодразделениеОрганизации]
					,_Fld22721RRef [Склад]
					,_Fld22722 [ОтражатьВУправленческомУчете]
					,_Fld22723 [ОтражатьВБухгалтерскомУчете]
					,_Fld22724 [ОтражатьВНалоговомУчете]
					,_Fld22725 [ОтразитьВыпуск]
					,_Fld22726 [ОтразитьМатериалы]
					,_Fld22727 [НеОбрабатыватьПериодДоЗавершенияСмен]
					,_Fld22728 [ФормироватьДокументыАвтоматически]
					,_Fld22729 [РегламентноеЗадание]
					,_Fld22730 [Задержка]
					,_Fld22731 [Комментарий]
					,_Fld22732 [НеОбрабатыватьВсеДокументы]
					From _Reference22677(NOLOCK)";
					var Выборка = new V82.СправочникиВыборка.НастройкиФормированияДокументовВыпускаПродукции();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.НастройкиФормированияДокументовВыпускаПродукции();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Родитель = V82.СправочникиСсылка.НастройкиФормированияДокументовВыпускаПродукции.ВзятьИзКэша((byte[])Читалка.GetValue(4));
							Ссылка.ЭтоГруппа = ((byte[])Читалка.GetValue(5))[0]==0;
							Ссылка.Наименование = Читалка.GetString(6);
							if(!Ссылка.ЭтоГруппа)
							{
								Ссылка.ГраницаОбработки = Читалка.GetDateTime(7);
								Ссылка.Подразделение = V82.СправочникиСсылка.Подразделения.ВзятьИзКэша((byte[])Читалка.GetValue(8));
								Ссылка.ПериодДетализации = V82.Перечисления/*Ссылка*/.Периодичность.ПустаяСсылка.Получить((byte[])Читалка.GetValue(9));
								Ссылка.ВидРегулярногоДокумента = Читалка.GetString(10);
								Ссылка.Организация = V82.СправочникиСсылка.Организации.ВзятьИзКэша((byte[])Читалка.GetValue(11));
								Ссылка.ПодразделениеОрганизации = V82.СправочникиСсылка.ПодразделенияОрганизаций.ВзятьИзКэша((byte[])Читалка.GetValue(12));
								Ссылка.Склад = V82.СправочникиСсылка.Склады.ВзятьИзКэша((byte[])Читалка.GetValue(13));
								Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(14))[0]==1;
								Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(15))[0]==1;
								Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
								Ссылка.ОтразитьВыпуск = ((byte[])Читалка.GetValue(17))[0]==1;
								Ссылка.ОтразитьМатериалы = ((byte[])Читалка.GetValue(18))[0]==1;
								Ссылка.НеОбрабатыватьПериодДоЗавершенияСмен = ((byte[])Читалка.GetValue(19))[0]==1;
								Ссылка.ФормироватьДокументыАвтоматически = ((byte[])Читалка.GetValue(20))[0]==1;
								Ссылка.РегламентноеЗадание = Читалка.GetString(21);
								Ссылка.Задержка = Читалка.GetDecimal(22);
								Ссылка.Комментарий = Читалка.GetString(23);
								Ссылка.НеОбрабатыватьВсеДокументы = ((byte[])Читалка.GetValue(24))[0]==1;
							}
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.СправочникиОбъект.НастройкиФормированияДокументовВыпускаПродукции СоздатьЭлемент()
		{
			var Объект = new V82.СправочникиОбъект.НастройкиФормированияДокументовВыпускаПродукции();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.ЭтоГруппа = false;
			Объект.ВидРегулярногоДокумента = "";
			Объект.РегламентноеЗадание = "";
			Объект.Комментарий = "";
			Объект.Подразделение = new V82.СправочникиСсылка.Подразделения();
			Объект.ПериодДетализации = V82.Перечисления/*Ссылка*/.Периодичность.ПустаяСсылка;
			Объект.Организация = new V82.СправочникиСсылка.Организации();
			Объект.ПодразделениеОрганизации = new V82.СправочникиСсылка.ПодразделенияОрганизаций();
			Объект.Склад = new V82.СправочникиСсылка.Склады();
			return Объект;
		}
		
		public static V82.СправочникиОбъект.НастройкиФормированияДокументовВыпускаПродукции СоздатьГруппу()
		{
			var Объект = new V82.СправочникиОбъект.НастройкиФормированияДокументовВыпускаПродукции();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.ЭтоГруппа = true;
			Объект.ВидРегулярногоДокумента = "";
			Объект.РегламентноеЗадание = "";
			Объект.Комментарий = "";
			Объект.Подразделение = new V82.СправочникиСсылка.Подразделения();
			Объект.ПериодДетализации = V82.Перечисления/*Ссылка*/.Периодичность.ПустаяСсылка;
			Объект.Организация = new V82.СправочникиСсылка.Организации();
			Объект.ПодразделениеОрганизации = new V82.СправочникиСсылка.ПодразделенияОрганизаций();
			Объект.Склад = new V82.СправочникиСсылка.Склады();
			return Объект;
		}
	}
}