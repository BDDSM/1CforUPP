
using System;
using System.Data.SqlClient;
using V82;
using V82.СправочникиСсылка;
using V82.Справочники;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Справочники//Менеджер
{
	public partial class СпецификацииНоменклатуры:СправочникМенеджер
	{
		
		public static СправочникиСсылка.СпецификацииНоменклатуры НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_ParentIDRRef [Родитель]
					,_Folder [ЭтоГруппа]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld1767RRef [Состояние]
					,_Fld1768 [ДатаУтверждения]
					,_Fld1769RRef [ВидСпецификации]
					,_Fld1770 [Активная]
					,_Fld1771 [КодВерсии]
					,_Fld1772 [Комментарий]
					,_Fld1773RRef [Ответственный]
					,_Fld1774 [ИспользоватьВозвратныеОтходы]
					,_Fld1775 [ИспользоватьПараметрыВыпускаПродукции]
					,_Fld1776 [ИспользоватьДокументацию]
					,_Fld1777 [ИспользоватьВидНорматива]
					,_Fld1778 [ИспользоватьВидВоспроизводства]
					,_Fld1779 [ИспользоватьУказаниеНорматива]
					,_Fld1780 [ИспользоватьФормулы]
					,_Fld1781 [ИспользоватьУправлениеСписанием]
					,_Fld26610RRef [Назначение]
					From _Reference153(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.СпецификацииНоменклатуры();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Родитель = V82.СправочникиСсылка.СпецификацииНоменклатуры.ВзятьИзКэша((byte[])Читалка.GetValue(4));
							Ссылка.ЭтоГруппа = ((byte[])Читалка.GetValue(5))[0]==0;
							Ссылка.Код = Читалка.GetString(6);
							Ссылка.Наименование = Читалка.GetString(7);
							if(!Ссылка.ЭтоГруппа)
							{
								Ссылка.Состояние = V82.Перечисления/*Ссылка*/.СостоянияОбъектов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(8));
								Ссылка.ДатаУтверждения = Читалка.GetDateTime(9);
								Ссылка.ВидСпецификации = V82.Перечисления/*Ссылка*/.ВидыСпецификаций.ПустаяСсылка.Получить((byte[])Читалка.GetValue(10));
								Ссылка.Активная = ((byte[])Читалка.GetValue(11))[0]==1;
								Ссылка.КодВерсии = Читалка.GetString(12);
								Ссылка.Комментарий = Читалка.GetString(13);
								Ссылка.Ответственный = V82.СправочникиСсылка.Пользователи.ВзятьИзКэша((byte[])Читалка.GetValue(14));
								Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(15))[0]==1;
								Ссылка.ИспользоватьПараметрыВыпускаПродукции = ((byte[])Читалка.GetValue(16))[0]==1;
								Ссылка.ИспользоватьДокументацию = ((byte[])Читалка.GetValue(17))[0]==1;
								Ссылка.ИспользоватьВидНорматива = ((byte[])Читалка.GetValue(18))[0]==1;
								Ссылка.ИспользоватьВидВоспроизводства = ((byte[])Читалка.GetValue(19))[0]==1;
								Ссылка.ИспользоватьУказаниеНорматива = ((byte[])Читалка.GetValue(20))[0]==1;
								Ссылка.ИспользоватьФормулы = ((byte[])Читалка.GetValue(21))[0]==1;
								Ссылка.ИспользоватьУправлениеСписанием = ((byte[])Читалка.GetValue(22))[0]==1;
								Ссылка.Назначение = V82.СправочникиСсылка.НазначенияИспользованияСпецификаций.ВзятьИзКэша((byte[])Читалка.GetValue(23));
							}
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static СправочникиСсылка.СпецификацииНоменклатуры НайтиПоКоду(string Код)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_ParentIDRRef [Родитель]
					,_Folder [ЭтоГруппа]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld1767RRef [Состояние]
					,_Fld1768 [ДатаУтверждения]
					,_Fld1769RRef [ВидСпецификации]
					,_Fld1770 [Активная]
					,_Fld1771 [КодВерсии]
					,_Fld1772 [Комментарий]
					,_Fld1773RRef [Ответственный]
					,_Fld1774 [ИспользоватьВозвратныеОтходы]
					,_Fld1775 [ИспользоватьПараметрыВыпускаПродукции]
					,_Fld1776 [ИспользоватьДокументацию]
					,_Fld1777 [ИспользоватьВидНорматива]
					,_Fld1778 [ИспользоватьВидВоспроизводства]
					,_Fld1779 [ИспользоватьУказаниеНорматива]
					,_Fld1780 [ИспользоватьФормулы]
					,_Fld1781 [ИспользоватьУправлениеСписанием]
					,_Fld26610RRef [Назначение]
					From _Reference153(NOLOCK)
					Where _Code=@Код";
					Команда.Parameters.AddWithValue("Код", Код);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.СпецификацииНоменклатуры();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Родитель = V82.СправочникиСсылка.СпецификацииНоменклатуры.ВзятьИзКэша((byte[])Читалка.GetValue(4));
							Ссылка.ЭтоГруппа = ((byte[])Читалка.GetValue(5))[0]==0;
							Ссылка.Код = Читалка.GetString(6);
							Ссылка.Наименование = Читалка.GetString(7);
							if(!Ссылка.ЭтоГруппа)
							{
								Ссылка.Состояние = V82.Перечисления/*Ссылка*/.СостоянияОбъектов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(8));
								Ссылка.ДатаУтверждения = Читалка.GetDateTime(9);
								Ссылка.ВидСпецификации = V82.Перечисления/*Ссылка*/.ВидыСпецификаций.ПустаяСсылка.Получить((byte[])Читалка.GetValue(10));
								Ссылка.Активная = ((byte[])Читалка.GetValue(11))[0]==1;
								Ссылка.КодВерсии = Читалка.GetString(12);
								Ссылка.Комментарий = Читалка.GetString(13);
								Ссылка.Ответственный = V82.СправочникиСсылка.Пользователи.ВзятьИзКэша((byte[])Читалка.GetValue(14));
								Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(15))[0]==1;
								Ссылка.ИспользоватьПараметрыВыпускаПродукции = ((byte[])Читалка.GetValue(16))[0]==1;
								Ссылка.ИспользоватьДокументацию = ((byte[])Читалка.GetValue(17))[0]==1;
								Ссылка.ИспользоватьВидНорматива = ((byte[])Читалка.GetValue(18))[0]==1;
								Ссылка.ИспользоватьВидВоспроизводства = ((byte[])Читалка.GetValue(19))[0]==1;
								Ссылка.ИспользоватьУказаниеНорматива = ((byte[])Читалка.GetValue(20))[0]==1;
								Ссылка.ИспользоватьФормулы = ((byte[])Читалка.GetValue(21))[0]==1;
								Ссылка.ИспользоватьУправлениеСписанием = ((byte[])Читалка.GetValue(22))[0]==1;
								Ссылка.Назначение = V82.СправочникиСсылка.НазначенияИспользованияСпецификаций.ВзятьИзКэша((byte[])Читалка.GetValue(23));
							}
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static СправочникиВыборка.СпецификацииНоменклатуры Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_ParentIDRRef [Родитель]
					,_Folder [ЭтоГруппа]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld1767RRef [Состояние]
					,_Fld1768 [ДатаУтверждения]
					,_Fld1769RRef [ВидСпецификации]
					,_Fld1770 [Активная]
					,_Fld1771 [КодВерсии]
					,_Fld1772 [Комментарий]
					,_Fld1773RRef [Ответственный]
					,_Fld1774 [ИспользоватьВозвратныеОтходы]
					,_Fld1775 [ИспользоватьПараметрыВыпускаПродукции]
					,_Fld1776 [ИспользоватьДокументацию]
					,_Fld1777 [ИспользоватьВидНорматива]
					,_Fld1778 [ИспользоватьВидВоспроизводства]
					,_Fld1779 [ИспользоватьУказаниеНорматива]
					,_Fld1780 [ИспользоватьФормулы]
					,_Fld1781 [ИспользоватьУправлениеСписанием]
					,_Fld26610RRef [Назначение]
					From _Reference153(NOLOCK)  Where _Folder = 0x01 ";
					var Выборка = new V82.СправочникиВыборка.СпецификацииНоменклатуры();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.СпецификацииНоменклатуры();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Родитель = V82.СправочникиСсылка.СпецификацииНоменклатуры.ВзятьИзКэша((byte[])Читалка.GetValue(4));
							Ссылка.ЭтоГруппа = ((byte[])Читалка.GetValue(5))[0]==0;
							Ссылка.Код = Читалка.GetString(6);
							Ссылка.Наименование = Читалка.GetString(7);
							if(!Ссылка.ЭтоГруппа)
							{
								Ссылка.Состояние = V82.Перечисления/*Ссылка*/.СостоянияОбъектов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(8));
								Ссылка.ДатаУтверждения = Читалка.GetDateTime(9);
								Ссылка.ВидСпецификации = V82.Перечисления/*Ссылка*/.ВидыСпецификаций.ПустаяСсылка.Получить((byte[])Читалка.GetValue(10));
								Ссылка.Активная = ((byte[])Читалка.GetValue(11))[0]==1;
								Ссылка.КодВерсии = Читалка.GetString(12);
								Ссылка.Комментарий = Читалка.GetString(13);
								Ссылка.Ответственный = V82.СправочникиСсылка.Пользователи.ВзятьИзКэша((byte[])Читалка.GetValue(14));
								Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(15))[0]==1;
								Ссылка.ИспользоватьПараметрыВыпускаПродукции = ((byte[])Читалка.GetValue(16))[0]==1;
								Ссылка.ИспользоватьДокументацию = ((byte[])Читалка.GetValue(17))[0]==1;
								Ссылка.ИспользоватьВидНорматива = ((byte[])Читалка.GetValue(18))[0]==1;
								Ссылка.ИспользоватьВидВоспроизводства = ((byte[])Читалка.GetValue(19))[0]==1;
								Ссылка.ИспользоватьУказаниеНорматива = ((byte[])Читалка.GetValue(20))[0]==1;
								Ссылка.ИспользоватьФормулы = ((byte[])Читалка.GetValue(21))[0]==1;
								Ссылка.ИспользоватьУправлениеСписанием = ((byte[])Читалка.GetValue(22))[0]==1;
								Ссылка.Назначение = V82.СправочникиСсылка.НазначенияИспользованияСпецификаций.ВзятьИзКэша((byte[])Читалка.GetValue(23));
							}
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.СпецификацииНоменклатуры ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_ParentIDRRef [Родитель]
					,_Folder [ЭтоГруппа]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld1767RRef [Состояние]
					,_Fld1768 [ДатаУтверждения]
					,_Fld1769RRef [ВидСпецификации]
					,_Fld1770 [Активная]
					,_Fld1771 [КодВерсии]
					,_Fld1772 [Комментарий]
					,_Fld1773RRef [Ответственный]
					,_Fld1774 [ИспользоватьВозвратныеОтходы]
					,_Fld1775 [ИспользоватьПараметрыВыпускаПродукции]
					,_Fld1776 [ИспользоватьДокументацию]
					,_Fld1777 [ИспользоватьВидНорматива]
					,_Fld1778 [ИспользоватьВидВоспроизводства]
					,_Fld1779 [ИспользоватьУказаниеНорматива]
					,_Fld1780 [ИспользоватьФормулы]
					,_Fld1781 [ИспользоватьУправлениеСписанием]
					,_Fld26610RRef [Назначение]
					From _Reference153(NOLOCK)
					Where _IDRRef between @Мин and @Макс  -- and _Folder = 0x01 
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.СправочникиВыборка.СпецификацииНоменклатуры();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.СпецификацииНоменклатуры();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Родитель = V82.СправочникиСсылка.СпецификацииНоменклатуры.ВзятьИзКэша((byte[])Читалка.GetValue(4));
							Ссылка.ЭтоГруппа = ((byte[])Читалка.GetValue(5))[0]==0;
							Ссылка.Код = Читалка.GetString(6);
							Ссылка.Наименование = Читалка.GetString(7);
							if(!Ссылка.ЭтоГруппа)
							{
								Ссылка.Состояние = V82.Перечисления/*Ссылка*/.СостоянияОбъектов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(8));
								Ссылка.ДатаУтверждения = Читалка.GetDateTime(9);
								Ссылка.ВидСпецификации = V82.Перечисления/*Ссылка*/.ВидыСпецификаций.ПустаяСсылка.Получить((byte[])Читалка.GetValue(10));
								Ссылка.Активная = ((byte[])Читалка.GetValue(11))[0]==1;
								Ссылка.КодВерсии = Читалка.GetString(12);
								Ссылка.Комментарий = Читалка.GetString(13);
								Ссылка.Ответственный = V82.СправочникиСсылка.Пользователи.ВзятьИзКэша((byte[])Читалка.GetValue(14));
								Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(15))[0]==1;
								Ссылка.ИспользоватьПараметрыВыпускаПродукции = ((byte[])Читалка.GetValue(16))[0]==1;
								Ссылка.ИспользоватьДокументацию = ((byte[])Читалка.GetValue(17))[0]==1;
								Ссылка.ИспользоватьВидНорматива = ((byte[])Читалка.GetValue(18))[0]==1;
								Ссылка.ИспользоватьВидВоспроизводства = ((byte[])Читалка.GetValue(19))[0]==1;
								Ссылка.ИспользоватьУказаниеНорматива = ((byte[])Читалка.GetValue(20))[0]==1;
								Ссылка.ИспользоватьФормулы = ((byte[])Читалка.GetValue(21))[0]==1;
								Ссылка.ИспользоватьУправлениеСписанием = ((byte[])Читалка.GetValue(22))[0]==1;
								Ссылка.Назначение = V82.СправочникиСсылка.НазначенияИспользованияСпецификаций.ВзятьИзКэша((byte[])Читалка.GetValue(23));
							}
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.СпецификацииНоменклатуры ВыбратьПоКоду(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_ParentIDRRef [Родитель]
					,_Folder [ЭтоГруппа]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld1767RRef [Состояние]
					,_Fld1768 [ДатаУтверждения]
					,_Fld1769RRef [ВидСпецификации]
					,_Fld1770 [Активная]
					,_Fld1771 [КодВерсии]
					,_Fld1772 [Комментарий]
					,_Fld1773RRef [Ответственный]
					,_Fld1774 [ИспользоватьВозвратныеОтходы]
					,_Fld1775 [ИспользоватьПараметрыВыпускаПродукции]
					,_Fld1776 [ИспользоватьДокументацию]
					,_Fld1777 [ИспользоватьВидНорматива]
					,_Fld1778 [ИспользоватьВидВоспроизводства]
					,_Fld1779 [ИспользоватьУказаниеНорматива]
					,_Fld1780 [ИспользоватьФормулы]
					,_Fld1781 [ИспользоватьУправлениеСписанием]
					,_Fld26610RRef [Назначение]
					From _Reference153(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.СправочникиВыборка.СпецификацииНоменклатуры();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.СпецификацииНоменклатуры();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Родитель = V82.СправочникиСсылка.СпецификацииНоменклатуры.ВзятьИзКэша((byte[])Читалка.GetValue(4));
							Ссылка.ЭтоГруппа = ((byte[])Читалка.GetValue(5))[0]==0;
							Ссылка.Код = Читалка.GetString(6);
							Ссылка.Наименование = Читалка.GetString(7);
							if(!Ссылка.ЭтоГруппа)
							{
								Ссылка.Состояние = V82.Перечисления/*Ссылка*/.СостоянияОбъектов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(8));
								Ссылка.ДатаУтверждения = Читалка.GetDateTime(9);
								Ссылка.ВидСпецификации = V82.Перечисления/*Ссылка*/.ВидыСпецификаций.ПустаяСсылка.Получить((byte[])Читалка.GetValue(10));
								Ссылка.Активная = ((byte[])Читалка.GetValue(11))[0]==1;
								Ссылка.КодВерсии = Читалка.GetString(12);
								Ссылка.Комментарий = Читалка.GetString(13);
								Ссылка.Ответственный = V82.СправочникиСсылка.Пользователи.ВзятьИзКэша((byte[])Читалка.GetValue(14));
								Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(15))[0]==1;
								Ссылка.ИспользоватьПараметрыВыпускаПродукции = ((byte[])Читалка.GetValue(16))[0]==1;
								Ссылка.ИспользоватьДокументацию = ((byte[])Читалка.GetValue(17))[0]==1;
								Ссылка.ИспользоватьВидНорматива = ((byte[])Читалка.GetValue(18))[0]==1;
								Ссылка.ИспользоватьВидВоспроизводства = ((byte[])Читалка.GetValue(19))[0]==1;
								Ссылка.ИспользоватьУказаниеНорматива = ((byte[])Читалка.GetValue(20))[0]==1;
								Ссылка.ИспользоватьФормулы = ((byte[])Читалка.GetValue(21))[0]==1;
								Ссылка.ИспользоватьУправлениеСписанием = ((byte[])Читалка.GetValue(22))[0]==1;
								Ссылка.Назначение = V82.СправочникиСсылка.НазначенияИспользованияСпецификаций.ВзятьИзКэша((byte[])Читалка.GetValue(23));
							}
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.СпецификацииНоменклатуры ВыбратьПоНаименованию(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_ParentIDRRef [Родитель]
					,_Folder [ЭтоГруппа]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld1767RRef [Состояние]
					,_Fld1768 [ДатаУтверждения]
					,_Fld1769RRef [ВидСпецификации]
					,_Fld1770 [Активная]
					,_Fld1771 [КодВерсии]
					,_Fld1772 [Комментарий]
					,_Fld1773RRef [Ответственный]
					,_Fld1774 [ИспользоватьВозвратныеОтходы]
					,_Fld1775 [ИспользоватьПараметрыВыпускаПродукции]
					,_Fld1776 [ИспользоватьДокументацию]
					,_Fld1777 [ИспользоватьВидНорматива]
					,_Fld1778 [ИспользоватьВидВоспроизводства]
					,_Fld1779 [ИспользоватьУказаниеНорматива]
					,_Fld1780 [ИспользоватьФормулы]
					,_Fld1781 [ИспользоватьУправлениеСписанием]
					,_Fld26610RRef [Назначение]
					From _Reference153(NOLOCK)
					Where _Description between @Мин and @Макс
					Order by _Description", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.СправочникиВыборка.СпецификацииНоменклатуры();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.СпецификацииНоменклатуры();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Родитель = V82.СправочникиСсылка.СпецификацииНоменклатуры.ВзятьИзКэша((byte[])Читалка.GetValue(4));
							Ссылка.ЭтоГруппа = ((byte[])Читалка.GetValue(5))[0]==0;
							Ссылка.Код = Читалка.GetString(6);
							Ссылка.Наименование = Читалка.GetString(7);
							if(!Ссылка.ЭтоГруппа)
							{
								Ссылка.Состояние = V82.Перечисления/*Ссылка*/.СостоянияОбъектов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(8));
								Ссылка.ДатаУтверждения = Читалка.GetDateTime(9);
								Ссылка.ВидСпецификации = V82.Перечисления/*Ссылка*/.ВидыСпецификаций.ПустаяСсылка.Получить((byte[])Читалка.GetValue(10));
								Ссылка.Активная = ((byte[])Читалка.GetValue(11))[0]==1;
								Ссылка.КодВерсии = Читалка.GetString(12);
								Ссылка.Комментарий = Читалка.GetString(13);
								Ссылка.Ответственный = V82.СправочникиСсылка.Пользователи.ВзятьИзКэша((byte[])Читалка.GetValue(14));
								Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(15))[0]==1;
								Ссылка.ИспользоватьПараметрыВыпускаПродукции = ((byte[])Читалка.GetValue(16))[0]==1;
								Ссылка.ИспользоватьДокументацию = ((byte[])Читалка.GetValue(17))[0]==1;
								Ссылка.ИспользоватьВидНорматива = ((byte[])Читалка.GetValue(18))[0]==1;
								Ссылка.ИспользоватьВидВоспроизводства = ((byte[])Читалка.GetValue(19))[0]==1;
								Ссылка.ИспользоватьУказаниеНорматива = ((byte[])Читалка.GetValue(20))[0]==1;
								Ссылка.ИспользоватьФормулы = ((byte[])Читалка.GetValue(21))[0]==1;
								Ссылка.ИспользоватьУправлениеСписанием = ((byte[])Читалка.GetValue(22))[0]==1;
								Ссылка.Назначение = V82.СправочникиСсылка.НазначенияИспользованияСпецификаций.ВзятьИзКэша((byte[])Читалка.GetValue(23));
							}
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.СпецификацииНоменклатуры СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_ParentIDRRef [Родитель]
					,_Folder [ЭтоГруппа]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld1767RRef [Состояние]
					,_Fld1768 [ДатаУтверждения]
					,_Fld1769RRef [ВидСпецификации]
					,_Fld1770 [Активная]
					,_Fld1771 [КодВерсии]
					,_Fld1772 [Комментарий]
					,_Fld1773RRef [Ответственный]
					,_Fld1774 [ИспользоватьВозвратныеОтходы]
					,_Fld1775 [ИспользоватьПараметрыВыпускаПродукции]
					,_Fld1776 [ИспользоватьДокументацию]
					,_Fld1777 [ИспользоватьВидНорматива]
					,_Fld1778 [ИспользоватьВидВоспроизводства]
					,_Fld1779 [ИспользоватьУказаниеНорматива]
					,_Fld1780 [ИспользоватьФормулы]
					,_Fld1781 [ИспользоватьУправлениеСписанием]
					,_Fld26610RRef [Назначение]
					From _Reference153(NOLOCK)";
					var Выборка = new V82.СправочникиВыборка.СпецификацииНоменклатуры();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.СпецификацииНоменклатуры();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Родитель = V82.СправочникиСсылка.СпецификацииНоменклатуры.ВзятьИзКэша((byte[])Читалка.GetValue(4));
							Ссылка.ЭтоГруппа = ((byte[])Читалка.GetValue(5))[0]==0;
							Ссылка.Код = Читалка.GetString(6);
							Ссылка.Наименование = Читалка.GetString(7);
							if(!Ссылка.ЭтоГруппа)
							{
								Ссылка.Состояние = V82.Перечисления/*Ссылка*/.СостоянияОбъектов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(8));
								Ссылка.ДатаУтверждения = Читалка.GetDateTime(9);
								Ссылка.ВидСпецификации = V82.Перечисления/*Ссылка*/.ВидыСпецификаций.ПустаяСсылка.Получить((byte[])Читалка.GetValue(10));
								Ссылка.Активная = ((byte[])Читалка.GetValue(11))[0]==1;
								Ссылка.КодВерсии = Читалка.GetString(12);
								Ссылка.Комментарий = Читалка.GetString(13);
								Ссылка.Ответственный = V82.СправочникиСсылка.Пользователи.ВзятьИзКэша((byte[])Читалка.GetValue(14));
								Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(15))[0]==1;
								Ссылка.ИспользоватьПараметрыВыпускаПродукции = ((byte[])Читалка.GetValue(16))[0]==1;
								Ссылка.ИспользоватьДокументацию = ((byte[])Читалка.GetValue(17))[0]==1;
								Ссылка.ИспользоватьВидНорматива = ((byte[])Читалка.GetValue(18))[0]==1;
								Ссылка.ИспользоватьВидВоспроизводства = ((byte[])Читалка.GetValue(19))[0]==1;
								Ссылка.ИспользоватьУказаниеНорматива = ((byte[])Читалка.GetValue(20))[0]==1;
								Ссылка.ИспользоватьФормулы = ((byte[])Читалка.GetValue(21))[0]==1;
								Ссылка.ИспользоватьУправлениеСписанием = ((byte[])Читалка.GetValue(22))[0]==1;
								Ссылка.Назначение = V82.СправочникиСсылка.НазначенияИспользованияСпецификаций.ВзятьИзКэша((byte[])Читалка.GetValue(23));
							}
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.СпецификацииНоменклатуры СтраницаПоКоду(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_ParentIDRRef [Родитель]
					,_Folder [ЭтоГруппа]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld1767RRef [Состояние]
					,_Fld1768 [ДатаУтверждения]
					,_Fld1769RRef [ВидСпецификации]
					,_Fld1770 [Активная]
					,_Fld1771 [КодВерсии]
					,_Fld1772 [Комментарий]
					,_Fld1773RRef [Ответственный]
					,_Fld1774 [ИспользоватьВозвратныеОтходы]
					,_Fld1775 [ИспользоватьПараметрыВыпускаПродукции]
					,_Fld1776 [ИспользоватьДокументацию]
					,_Fld1777 [ИспользоватьВидНорматива]
					,_Fld1778 [ИспользоватьВидВоспроизводства]
					,_Fld1779 [ИспользоватьУказаниеНорматива]
					,_Fld1780 [ИспользоватьФормулы]
					,_Fld1781 [ИспользоватьУправлениеСписанием]
					,_Fld26610RRef [Назначение]
					From _Reference153(NOLOCK)";
					var Выборка = new V82.СправочникиВыборка.СпецификацииНоменклатуры();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.СпецификацииНоменклатуры();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Родитель = V82.СправочникиСсылка.СпецификацииНоменклатуры.ВзятьИзКэша((byte[])Читалка.GetValue(4));
							Ссылка.ЭтоГруппа = ((byte[])Читалка.GetValue(5))[0]==0;
							Ссылка.Код = Читалка.GetString(6);
							Ссылка.Наименование = Читалка.GetString(7);
							if(!Ссылка.ЭтоГруппа)
							{
								Ссылка.Состояние = V82.Перечисления/*Ссылка*/.СостоянияОбъектов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(8));
								Ссылка.ДатаУтверждения = Читалка.GetDateTime(9);
								Ссылка.ВидСпецификации = V82.Перечисления/*Ссылка*/.ВидыСпецификаций.ПустаяСсылка.Получить((byte[])Читалка.GetValue(10));
								Ссылка.Активная = ((byte[])Читалка.GetValue(11))[0]==1;
								Ссылка.КодВерсии = Читалка.GetString(12);
								Ссылка.Комментарий = Читалка.GetString(13);
								Ссылка.Ответственный = V82.СправочникиСсылка.Пользователи.ВзятьИзКэша((byte[])Читалка.GetValue(14));
								Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(15))[0]==1;
								Ссылка.ИспользоватьПараметрыВыпускаПродукции = ((byte[])Читалка.GetValue(16))[0]==1;
								Ссылка.ИспользоватьДокументацию = ((byte[])Читалка.GetValue(17))[0]==1;
								Ссылка.ИспользоватьВидНорматива = ((byte[])Читалка.GetValue(18))[0]==1;
								Ссылка.ИспользоватьВидВоспроизводства = ((byte[])Читалка.GetValue(19))[0]==1;
								Ссылка.ИспользоватьУказаниеНорматива = ((byte[])Читалка.GetValue(20))[0]==1;
								Ссылка.ИспользоватьФормулы = ((byte[])Читалка.GetValue(21))[0]==1;
								Ссылка.ИспользоватьУправлениеСписанием = ((byte[])Читалка.GetValue(22))[0]==1;
								Ссылка.Назначение = V82.СправочникиСсылка.НазначенияИспользованияСпецификаций.ВзятьИзКэша((byte[])Читалка.GetValue(23));
							}
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.СпецификацииНоменклатуры СтраницаПоНаименованию(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_ParentIDRRef [Родитель]
					,_Folder [ЭтоГруппа]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld1767RRef [Состояние]
					,_Fld1768 [ДатаУтверждения]
					,_Fld1769RRef [ВидСпецификации]
					,_Fld1770 [Активная]
					,_Fld1771 [КодВерсии]
					,_Fld1772 [Комментарий]
					,_Fld1773RRef [Ответственный]
					,_Fld1774 [ИспользоватьВозвратныеОтходы]
					,_Fld1775 [ИспользоватьПараметрыВыпускаПродукции]
					,_Fld1776 [ИспользоватьДокументацию]
					,_Fld1777 [ИспользоватьВидНорматива]
					,_Fld1778 [ИспользоватьВидВоспроизводства]
					,_Fld1779 [ИспользоватьУказаниеНорматива]
					,_Fld1780 [ИспользоватьФормулы]
					,_Fld1781 [ИспользоватьУправлениеСписанием]
					,_Fld26610RRef [Назначение]
					From _Reference153(NOLOCK)";
					var Выборка = new V82.СправочникиВыборка.СпецификацииНоменклатуры();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.СпецификацииНоменклатуры();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Родитель = V82.СправочникиСсылка.СпецификацииНоменклатуры.ВзятьИзКэша((byte[])Читалка.GetValue(4));
							Ссылка.ЭтоГруппа = ((byte[])Читалка.GetValue(5))[0]==0;
							Ссылка.Код = Читалка.GetString(6);
							Ссылка.Наименование = Читалка.GetString(7);
							if(!Ссылка.ЭтоГруппа)
							{
								Ссылка.Состояние = V82.Перечисления/*Ссылка*/.СостоянияОбъектов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(8));
								Ссылка.ДатаУтверждения = Читалка.GetDateTime(9);
								Ссылка.ВидСпецификации = V82.Перечисления/*Ссылка*/.ВидыСпецификаций.ПустаяСсылка.Получить((byte[])Читалка.GetValue(10));
								Ссылка.Активная = ((byte[])Читалка.GetValue(11))[0]==1;
								Ссылка.КодВерсии = Читалка.GetString(12);
								Ссылка.Комментарий = Читалка.GetString(13);
								Ссылка.Ответственный = V82.СправочникиСсылка.Пользователи.ВзятьИзКэша((byte[])Читалка.GetValue(14));
								Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(15))[0]==1;
								Ссылка.ИспользоватьПараметрыВыпускаПродукции = ((byte[])Читалка.GetValue(16))[0]==1;
								Ссылка.ИспользоватьДокументацию = ((byte[])Читалка.GetValue(17))[0]==1;
								Ссылка.ИспользоватьВидНорматива = ((byte[])Читалка.GetValue(18))[0]==1;
								Ссылка.ИспользоватьВидВоспроизводства = ((byte[])Читалка.GetValue(19))[0]==1;
								Ссылка.ИспользоватьУказаниеНорматива = ((byte[])Читалка.GetValue(20))[0]==1;
								Ссылка.ИспользоватьФормулы = ((byte[])Читалка.GetValue(21))[0]==1;
								Ссылка.ИспользоватьУправлениеСписанием = ((byte[])Читалка.GetValue(22))[0]==1;
								Ссылка.Назначение = V82.СправочникиСсылка.НазначенияИспользованияСпецификаций.ВзятьИзКэша((byte[])Читалка.GetValue(23));
							}
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.СправочникиОбъект.СпецификацииНоменклатуры СоздатьЭлемент()
		{
			var Объект = new V82.СправочникиОбъект.СпецификацииНоменклатуры();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.ЭтоГруппа = false;
			Объект.КодВерсии = "";
			Объект.Комментарий = "";
			Объект.Состояние = V82.Перечисления/*Ссылка*/.СостоянияОбъектов.ПустаяСсылка;
			Объект.ВидСпецификации = V82.Перечисления/*Ссылка*/.ВидыСпецификаций.ПустаяСсылка;
			Объект.Ответственный = new V82.СправочникиСсылка.Пользователи();
			Объект.Назначение = new V82.СправочникиСсылка.НазначенияИспользованияСпецификаций();
			return Объект;
		}
		
		public static V82.СправочникиОбъект.СпецификацииНоменклатуры СоздатьГруппу()
		{
			var Объект = new V82.СправочникиОбъект.СпецификацииНоменклатуры();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.ЭтоГруппа = true;
			Объект.КодВерсии = "";
			Объект.Комментарий = "";
			Объект.Состояние = V82.Перечисления/*Ссылка*/.СостоянияОбъектов.ПустаяСсылка;
			Объект.ВидСпецификации = V82.Перечисления/*Ссылка*/.ВидыСпецификаций.ПустаяСсылка;
			Объект.Ответственный = new V82.СправочникиСсылка.Пользователи();
			Объект.Назначение = new V82.СправочникиСсылка.НазначенияИспользованияСпецификаций();
			return Объект;
		}
	}
}