
using System;
using System.Data.SqlClient;
using V82;
using V82.СправочникиСсылка;
using V82.Справочники;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Справочники//Менеджер
{
	public partial class СпецификацииНоменклатуры:СправочникМенеджер
	{
		
		public static СправочникиСсылка.СпецификацииНоменклатуры НайтиПоКоду(string Код)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld3578RRef [Состояние]
					,_Fld3579 [ДатаУтверждения]
					,_Fld3580RRef [ВидСпецификации]
					,_Fld3581 [Активная]
					,_Fld3582 [КодВерсии]
					,_Fld3583 [Комментарий]
					,_Fld3584RRef [Ответственный]
					,_Fld3585 [ИспользоватьВозвратныеОтходы]
					,_Fld3586 [ИспользоватьПараметрыВыпускаПродукции]
					,_Fld3587 [ИспользоватьДокументацию]
					,_Fld3588 [ИспользоватьВидНорматива]
					,_Fld3589 [ИспользоватьВидВоспроизводства]
					,_Fld3590 [ИспользоватьУказаниеНорматива]
					,_Fld3591 [ИспользоватьФормулы]
					,_Fld3592 [ИспользоватьУправлениеСписанием]
					,_Fld3593RRef [Назначение]
					From _Reference239(NOLOCK)
					Where _Code=@Код";
					Команда.Parameters.AddWithValue("Код", Код);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.СпецификацииНоменклатуры();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1?true:false;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1?true:false;
							Ссылка.Код = Читалка.GetString(4);
							Ссылка.Наименование = Читалка.GetString(5);
							Ссылка.Состояние = V82.Перечисления/*Ссылка*/.СостоянияОбъектов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(6));
							Ссылка.ДатаУтверждения = Читалка.GetDateTime(7);
							Ссылка.ВидСпецификации = V82.Перечисления/*Ссылка*/.ВидыСпецификаций.ПустаяСсылка.Получить((byte[])Читалка.GetValue(8));
							Ссылка.Активная = ((byte[])Читалка.GetValue(9))[0]==1?true:false;
							Ссылка.КодВерсии = Читалка.GetString(10);
							Ссылка.Комментарий = Читалка.GetString(11);
							//Ссылка.Ответственный = new V82.СправочникиСсылка.Пользователи((byte[])Читалка.GetValue(12));
							Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(13))[0]==1?true:false;
							Ссылка.ИспользоватьПараметрыВыпускаПродукции = ((byte[])Читалка.GetValue(14))[0]==1?true:false;
							Ссылка.ИспользоватьДокументацию = ((byte[])Читалка.GetValue(15))[0]==1?true:false;
							Ссылка.ИспользоватьВидНорматива = ((byte[])Читалка.GetValue(16))[0]==1?true:false;
							Ссылка.ИспользоватьВидВоспроизводства = ((byte[])Читалка.GetValue(17))[0]==1?true:false;
							Ссылка.ИспользоватьУказаниеНорматива = ((byte[])Читалка.GetValue(18))[0]==1?true:false;
							Ссылка.ИспользоватьФормулы = ((byte[])Читалка.GetValue(19))[0]==1?true:false;
							Ссылка.ИспользоватьУправлениеСписанием = ((byte[])Читалка.GetValue(20))[0]==1?true:false;
							//Ссылка.Назначение = new V82.СправочникиСсылка.НазначенияИспользованияСпецификаций((byte[])Читалка.GetValue(21));
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static СправочникиВыборка.СпецификацииНоменклатуры Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld3578RRef [Состояние]
					,_Fld3579 [ДатаУтверждения]
					,_Fld3580RRef [ВидСпецификации]
					,_Fld3581 [Активная]
					,_Fld3582 [КодВерсии]
					,_Fld3583 [Комментарий]
					,_Fld3584RRef [Ответственный]
					,_Fld3585 [ИспользоватьВозвратныеОтходы]
					,_Fld3586 [ИспользоватьПараметрыВыпускаПродукции]
					,_Fld3587 [ИспользоватьДокументацию]
					,_Fld3588 [ИспользоватьВидНорматива]
					,_Fld3589 [ИспользоватьВидВоспроизводства]
					,_Fld3590 [ИспользоватьУказаниеНорматива]
					,_Fld3591 [ИспользоватьФормулы]
					,_Fld3592 [ИспользоватьУправлениеСписанием]
					,_Fld3593RRef [Назначение]
							From _Reference239(NOLOCK)";
					var Выборка = new V82.СправочникиВыборка.СпецификацииНоменклатуры();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.СпецификацииНоменклатуры();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1?true:false;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1?true:false;
							Ссылка.Код = Читалка.GetString(4);
							Ссылка.Наименование = Читалка.GetString(5);
							Ссылка.Состояние = V82.Перечисления/*Ссылка*/.СостоянияОбъектов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(6));
							Ссылка.ДатаУтверждения = Читалка.GetDateTime(7);
							Ссылка.ВидСпецификации = V82.Перечисления/*Ссылка*/.ВидыСпецификаций.ПустаяСсылка.Получить((byte[])Читалка.GetValue(8));
							Ссылка.Активная = ((byte[])Читалка.GetValue(9))[0]==1?true:false;
							Ссылка.КодВерсии = Читалка.GetString(10);
							Ссылка.Комментарий = Читалка.GetString(11);
							//Ссылка.Ответственный = new V82.СправочникиСсылка.Пользователи((byte[])Читалка.GetValue(12));
							Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(13))[0]==1?true:false;
							Ссылка.ИспользоватьПараметрыВыпускаПродукции = ((byte[])Читалка.GetValue(14))[0]==1?true:false;
							Ссылка.ИспользоватьДокументацию = ((byte[])Читалка.GetValue(15))[0]==1?true:false;
							Ссылка.ИспользоватьВидНорматива = ((byte[])Читалка.GetValue(16))[0]==1?true:false;
							Ссылка.ИспользоватьВидВоспроизводства = ((byte[])Читалка.GetValue(17))[0]==1?true:false;
							Ссылка.ИспользоватьУказаниеНорматива = ((byte[])Читалка.GetValue(18))[0]==1?true:false;
							Ссылка.ИспользоватьФормулы = ((byte[])Читалка.GetValue(19))[0]==1?true:false;
							Ссылка.ИспользоватьУправлениеСписанием = ((byte[])Читалка.GetValue(20))[0]==1?true:false;
							//Ссылка.Назначение = new V82.СправочникиСсылка.НазначенияИспользованияСпецификаций((byte[])Читалка.GetValue(21));
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.СпецификацииНоменклатуры ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld3578RRef [Состояние]
					,_Fld3579 [ДатаУтверждения]
					,_Fld3580RRef [ВидСпецификации]
					,_Fld3581 [Активная]
					,_Fld3582 [КодВерсии]
					,_Fld3583 [Комментарий]
					,_Fld3584RRef [Ответственный]
					,_Fld3585 [ИспользоватьВозвратныеОтходы]
					,_Fld3586 [ИспользоватьПараметрыВыпускаПродукции]
					,_Fld3587 [ИспользоватьДокументацию]
					,_Fld3588 [ИспользоватьВидНорматива]
					,_Fld3589 [ИспользоватьВидВоспроизводства]
					,_Fld3590 [ИспользоватьУказаниеНорматива]
					,_Fld3591 [ИспользоватьФормулы]
					,_Fld3592 [ИспользоватьУправлениеСписанием]
					,_Fld3593RRef [Назначение]
							From _Reference239(NOLOCK)";
					var Выборка = new V82.СправочникиВыборка.СпецификацииНоменклатуры();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.СпецификацииНоменклатуры();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1?true:false;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1?true:false;
							Ссылка.Код = Читалка.GetString(4);
							Ссылка.Наименование = Читалка.GetString(5);
							Ссылка.Состояние = V82.Перечисления/*Ссылка*/.СостоянияОбъектов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(6));
							Ссылка.ДатаУтверждения = Читалка.GetDateTime(7);
							Ссылка.ВидСпецификации = V82.Перечисления/*Ссылка*/.ВидыСпецификаций.ПустаяСсылка.Получить((byte[])Читалка.GetValue(8));
							Ссылка.Активная = ((byte[])Читалка.GetValue(9))[0]==1?true:false;
							Ссылка.КодВерсии = Читалка.GetString(10);
							Ссылка.Комментарий = Читалка.GetString(11);
							//Ссылка.Ответственный = new V82.СправочникиСсылка.Пользователи((byte[])Читалка.GetValue(12));
							Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(13))[0]==1?true:false;
							Ссылка.ИспользоватьПараметрыВыпускаПродукции = ((byte[])Читалка.GetValue(14))[0]==1?true:false;
							Ссылка.ИспользоватьДокументацию = ((byte[])Читалка.GetValue(15))[0]==1?true:false;
							Ссылка.ИспользоватьВидНорматива = ((byte[])Читалка.GetValue(16))[0]==1?true:false;
							Ссылка.ИспользоватьВидВоспроизводства = ((byte[])Читалка.GetValue(17))[0]==1?true:false;
							Ссылка.ИспользоватьУказаниеНорматива = ((byte[])Читалка.GetValue(18))[0]==1?true:false;
							Ссылка.ИспользоватьФормулы = ((byte[])Читалка.GetValue(19))[0]==1?true:false;
							Ссылка.ИспользоватьУправлениеСписанием = ((byte[])Читалка.GetValue(20))[0]==1?true:false;
							//Ссылка.Назначение = new V82.СправочникиСсылка.НазначенияИспользованияСпецификаций((byte[])Читалка.GetValue(21));
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.СпецификацииНоменклатуры ВыбратьПоКоду(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld3578RRef [Состояние]
					,_Fld3579 [ДатаУтверждения]
					,_Fld3580RRef [ВидСпецификации]
					,_Fld3581 [Активная]
					,_Fld3582 [КодВерсии]
					,_Fld3583 [Комментарий]
					,_Fld3584RRef [Ответственный]
					,_Fld3585 [ИспользоватьВозвратныеОтходы]
					,_Fld3586 [ИспользоватьПараметрыВыпускаПродукции]
					,_Fld3587 [ИспользоватьДокументацию]
					,_Fld3588 [ИспользоватьВидНорматива]
					,_Fld3589 [ИспользоватьВидВоспроизводства]
					,_Fld3590 [ИспользоватьУказаниеНорматива]
					,_Fld3591 [ИспользоватьФормулы]
					,_Fld3592 [ИспользоватьУправлениеСписанием]
					,_Fld3593RRef [Назначение]
							From _Reference239(NOLOCK)";
					var Выборка = new V82.СправочникиВыборка.СпецификацииНоменклатуры();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.СпецификацииНоменклатуры();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1?true:false;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1?true:false;
							Ссылка.Код = Читалка.GetString(4);
							Ссылка.Наименование = Читалка.GetString(5);
							Ссылка.Состояние = V82.Перечисления/*Ссылка*/.СостоянияОбъектов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(6));
							Ссылка.ДатаУтверждения = Читалка.GetDateTime(7);
							Ссылка.ВидСпецификации = V82.Перечисления/*Ссылка*/.ВидыСпецификаций.ПустаяСсылка.Получить((byte[])Читалка.GetValue(8));
							Ссылка.Активная = ((byte[])Читалка.GetValue(9))[0]==1?true:false;
							Ссылка.КодВерсии = Читалка.GetString(10);
							Ссылка.Комментарий = Читалка.GetString(11);
							//Ссылка.Ответственный = new V82.СправочникиСсылка.Пользователи((byte[])Читалка.GetValue(12));
							Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(13))[0]==1?true:false;
							Ссылка.ИспользоватьПараметрыВыпускаПродукции = ((byte[])Читалка.GetValue(14))[0]==1?true:false;
							Ссылка.ИспользоватьДокументацию = ((byte[])Читалка.GetValue(15))[0]==1?true:false;
							Ссылка.ИспользоватьВидНорматива = ((byte[])Читалка.GetValue(16))[0]==1?true:false;
							Ссылка.ИспользоватьВидВоспроизводства = ((byte[])Читалка.GetValue(17))[0]==1?true:false;
							Ссылка.ИспользоватьУказаниеНорматива = ((byte[])Читалка.GetValue(18))[0]==1?true:false;
							Ссылка.ИспользоватьФормулы = ((byte[])Читалка.GetValue(19))[0]==1?true:false;
							Ссылка.ИспользоватьУправлениеСписанием = ((byte[])Читалка.GetValue(20))[0]==1?true:false;
							//Ссылка.Назначение = new V82.СправочникиСсылка.НазначенияИспользованияСпецификаций((byte[])Читалка.GetValue(21));
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.СпецификацииНоменклатуры ВыбратьПоНаименованию(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld3578RRef [Состояние]
					,_Fld3579 [ДатаУтверждения]
					,_Fld3580RRef [ВидСпецификации]
					,_Fld3581 [Активная]
					,_Fld3582 [КодВерсии]
					,_Fld3583 [Комментарий]
					,_Fld3584RRef [Ответственный]
					,_Fld3585 [ИспользоватьВозвратныеОтходы]
					,_Fld3586 [ИспользоватьПараметрыВыпускаПродукции]
					,_Fld3587 [ИспользоватьДокументацию]
					,_Fld3588 [ИспользоватьВидНорматива]
					,_Fld3589 [ИспользоватьВидВоспроизводства]
					,_Fld3590 [ИспользоватьУказаниеНорматива]
					,_Fld3591 [ИспользоватьФормулы]
					,_Fld3592 [ИспользоватьУправлениеСписанием]
					,_Fld3593RRef [Назначение]
							From _Reference239(NOLOCK)";
					var Выборка = new V82.СправочникиВыборка.СпецификацииНоменклатуры();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.СпецификацииНоменклатуры();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1?true:false;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1?true:false;
							Ссылка.Код = Читалка.GetString(4);
							Ссылка.Наименование = Читалка.GetString(5);
							Ссылка.Состояние = V82.Перечисления/*Ссылка*/.СостоянияОбъектов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(6));
							Ссылка.ДатаУтверждения = Читалка.GetDateTime(7);
							Ссылка.ВидСпецификации = V82.Перечисления/*Ссылка*/.ВидыСпецификаций.ПустаяСсылка.Получить((byte[])Читалка.GetValue(8));
							Ссылка.Активная = ((byte[])Читалка.GetValue(9))[0]==1?true:false;
							Ссылка.КодВерсии = Читалка.GetString(10);
							Ссылка.Комментарий = Читалка.GetString(11);
							//Ссылка.Ответственный = new V82.СправочникиСсылка.Пользователи((byte[])Читалка.GetValue(12));
							Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(13))[0]==1?true:false;
							Ссылка.ИспользоватьПараметрыВыпускаПродукции = ((byte[])Читалка.GetValue(14))[0]==1?true:false;
							Ссылка.ИспользоватьДокументацию = ((byte[])Читалка.GetValue(15))[0]==1?true:false;
							Ссылка.ИспользоватьВидНорматива = ((byte[])Читалка.GetValue(16))[0]==1?true:false;
							Ссылка.ИспользоватьВидВоспроизводства = ((byte[])Читалка.GetValue(17))[0]==1?true:false;
							Ссылка.ИспользоватьУказаниеНорматива = ((byte[])Читалка.GetValue(18))[0]==1?true:false;
							Ссылка.ИспользоватьФормулы = ((byte[])Читалка.GetValue(19))[0]==1?true:false;
							Ссылка.ИспользоватьУправлениеСписанием = ((byte[])Читалка.GetValue(20))[0]==1?true:false;
							//Ссылка.Назначение = new V82.СправочникиСсылка.НазначенияИспользованияСпецификаций((byte[])Читалка.GetValue(21));
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.СправочникиОбъект.СпецификацииНоменклатуры СоздатьЭлемент()
		{
			var Объект = new V82.СправочникиОбъект.СпецификацииНоменклатуры();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.ЭтоГруппа = false;
			Объект.КодВерсии = "";
			Объект.Комментарий = "";
			Объект.Состояние = V82.Перечисления/*Ссылка*/.СостоянияОбъектов.ПустаяСсылка;
			Объект.ВидСпецификации = V82.Перечисления/*Ссылка*/.ВидыСпецификаций.ПустаяСсылка;
			Объект.Ответственный = new V82.СправочникиСсылка.Пользователи();
			Объект.Назначение = new V82.СправочникиСсылка.НазначенияИспользованияСпецификаций();
			return Объект;
		}
	}
}