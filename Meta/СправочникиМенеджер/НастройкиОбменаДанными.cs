
using System;
using System.Data.SqlClient;
using V82;
using V82.СправочникиСсылка;
using V82.Справочники;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Справочники//Менеджер
{
	public partial class НастройкиОбменаДанными:СправочникМенеджер
	{

		public static СправочникиСсылка.НастройкиОбменаДанными НайтиПоКоду(string Код)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld2713_TYPE [УзелИнформационнойБазы_Тип],_Fld2713_RRRef [УзелИнформационнойБазы],_Fld2713_RTRef [УзелИнформационнойБазы_Вид]
					,_Fld2714RRef [ТипНастройки]
					,_Fld2715 [ПроизводитьПриемСообщений]
					,_Fld2716 [ПроизводитьОтправкуСообщений]
					,_Fld2717 [КоличествоЭлементовВТранзакцииНаВыгрузкуДанных]
					,_Fld2718 [КоличествоЭлементовВТранзакцииНаЗагрузкуДанных]
					,_Fld2719 [ВыполнятьАрхивациюФайловОбмена]
					,_Fld2720 [ПарольНаОтправку]
					,_Fld2721 [ПарольНаПрием]
					,_Fld2722 [КаталогОбменаИнформацией]
					,_Fld2723 [FTPАдресОбмена]
					,_Fld2724 [ПортFTPСоединения]
					,_Fld2725 [ПользовательFTPСоединения]
					,_Fld2726 [ПарольFTPСоединения]
					,_Fld2727 [Комментарий]
					,_Fld2728 [МаксимальныйРазмерОтправляемогоПолучаемогоПакетаЧерезFTP]
					,_Fld2729 [ПассивноеFTPСоединение]
					,_Fld2730 [ПочтовыйАдресПолучателя]
					,_Fld2731RRef [УчетнаяЗаписьПриемаОтправкиСообщений]
					,_Fld2732 [АвтоматическиЗакачиватьПочтуПриОбмене]
					,_Fld2733 [МаксимальныйРазмерОтправляемогоПакетаЧерезПочту]
					,_Fld2734_TYPE [УзелФоновогоОбмена_Тип],_Fld2734_RRRef [УзелФоновогоОбмена],_Fld2734_RTRef [УзелФоновогоОбмена_Вид]
					,_Fld2735 [ПравилаОбмена]
					,_Fld2736 [ПравилаОбменаДляПриемника]
					,_Fld2737 [ДобавлениеОбъектовИзФоновогоОбмена]
					,_Fld2738 [КоличествоОбъектовДляФоновогоОбмена]
					,_Fld2739 [OnLineОбмен]
					,_Fld2740 [ТипИнформационнойБазыДляПодключения]
					,_Fld2741 [КаталогИнформационнойБазыДляПодключения]
					,_Fld2742 [ИмяСервераИнформационнойБазыДляПодключения]
					,_Fld2743 [ИмяИнформационнойБазыНаСервереДляПодключения]
					,_Fld2744 [АутентификацияWindowsИнформационнойБазыДляПодключения]
					,_Fld2745 [ПользовательИнформационнойБазыДляПодключения]
					,_Fld2746 [ПарольИнформационнойБазыДляПодключения]
					,_Fld2747 [ВерсияПлатформыИнформационнойБазыДляПодключения]
					,_Fld2748 [РежимОтладкиOnLineОбмена]
					,_Fld2749 [ИмяФайлаПротоколаОбменаOnLineОбмен]
					,_Fld2750_TYPE [ТипУзлаИнформационнойБазы_Тип],_Fld2750_RRRef [ТипУзлаИнформационнойБазы],_Fld2750_RTRef [ТипУзлаИнформационнойБазы_Вид]
					,_Fld2751RRef [УчетнаяЗаписьОтправкиСообщенияОбОшибке]
					,_Fld2752 [АдресДляОтправкиСообщенийОбОшибке]
					,_Fld2753 [ПослеОшибкиОтложенногоПроведенияПрекратитьОперации]
					,_Fld2754 [КоличествоОшибокОтложенногоПроведенияДляПрекращенияОперации]
					,_Fld2755 [ВыполнятьДействияПодПолнымиПравами]
					,_Fld2756 [ПроизводитьОтправкуТолькоПриУспешномПриеме]
					,_Fld2757 [ВыполнитьОтложенноеПроведениеДокументовПоРасписанию]
					,_Fld2758 [ПользовательПроксиFTP]
					,_Fld2759 [ПарольПроксиFTP]
					,_Fld2760 [СерверПроксиFTP]
					,_Fld2761 [ПортПроксиFTP]
					,_Fld2762 [ПротоколПроксиFTP]
					From _Reference153(NOLOCK)
					Where _Code=@Код";
					Команда.Parameters.AddWithValue("Код", Код);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.НастройкиОбменаДанными();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1?true:false;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1?true:false;
							Ссылка.Код = Читалка.GetString(4);
							Ссылка.Наименование = Читалка.GetString(5);
							Ссылка.ТипНастройки = V82.Перечисления/*Ссылка*/.ТипыАвтоматическогоОбменаДанными.ПустаяСсылка.Получить((byte[])Читалка.GetValue(9));
							Ссылка.ПроизводитьПриемСообщений = ((byte[])Читалка.GetValue(10))[0]==1?true:false;
							Ссылка.ПроизводитьОтправкуСообщений = ((byte[])Читалка.GetValue(11))[0]==1?true:false;
							Ссылка.КоличествоЭлементовВТранзакцииНаВыгрузкуДанных = Читалка.GetDecimal(12);
							Ссылка.КоличествоЭлементовВТранзакцииНаЗагрузкуДанных = Читалка.GetDecimal(13);
							Ссылка.ВыполнятьАрхивациюФайловОбмена = ((byte[])Читалка.GetValue(14))[0]==1?true:false;
							Ссылка.ПарольНаОтправку = Читалка.GetString(15);
							Ссылка.ПарольНаПрием = Читалка.GetString(16);
							Ссылка.КаталогОбменаИнформацией = Читалка.GetString(17);
							Ссылка.FTPАдресОбмена = Читалка.GetString(18);
							Ссылка.ПортFTPСоединения = Читалка.GetDecimal(19);
							Ссылка.ПользовательFTPСоединения = Читалка.GetString(20);
							Ссылка.ПарольFTPСоединения = Читалка.GetString(21);
							Ссылка.Комментарий = Читалка.GetString(22);
							Ссылка.МаксимальныйРазмерОтправляемогоПолучаемогоПакетаЧерезFTP = Читалка.GetDecimal(23);
							Ссылка.ПассивноеFTPСоединение = ((byte[])Читалка.GetValue(24))[0]==1?true:false;
							Ссылка.ПочтовыйАдресПолучателя = Читалка.GetString(25);
							//Ссылка.УчетнаяЗаписьПриемаОтправкиСообщений = new V82.СправочникиСсылка.УчетныеЗаписиЭлектроннойПочты((byte[])Читалка.GetValue(26));
							Ссылка.АвтоматическиЗакачиватьПочтуПриОбмене = ((byte[])Читалка.GetValue(27))[0]==1?true:false;
							Ссылка.МаксимальныйРазмерОтправляемогоПакетаЧерезПочту = Читалка.GetDecimal(28);
							Ссылка.ДобавлениеОбъектовИзФоновогоОбмена = Читалка.GetDecimal(34);
							Ссылка.КоличествоОбъектовДляФоновогоОбмена = Читалка.GetDecimal(35);
							Ссылка.OnLineОбмен = ((byte[])Читалка.GetValue(36))[0]==1?true:false;
							Ссылка.ТипИнформационнойБазыДляПодключения = ((byte[])Читалка.GetValue(37))[0]==1?true:false;
							Ссылка.КаталогИнформационнойБазыДляПодключения = Читалка.GetString(38);
							Ссылка.ИмяСервераИнформационнойБазыДляПодключения = Читалка.GetString(39);
							Ссылка.ИмяИнформационнойБазыНаСервереДляПодключения = Читалка.GetString(40);
							Ссылка.АутентификацияWindowsИнформационнойБазыДляПодключения = ((byte[])Читалка.GetValue(41))[0]==1?true:false;
							Ссылка.ПользовательИнформационнойБазыДляПодключения = Читалка.GetString(42);
							Ссылка.ПарольИнформационнойБазыДляПодключения = Читалка.GetString(43);
							Ссылка.ВерсияПлатформыИнформационнойБазыДляПодключения = Читалка.GetString(44);
							Ссылка.РежимОтладкиOnLineОбмена = ((byte[])Читалка.GetValue(45))[0]==1?true:false;
							Ссылка.ИмяФайлаПротоколаОбменаOnLineОбмен = Читалка.GetString(46);
							//Ссылка.УчетнаяЗаписьОтправкиСообщенияОбОшибке = new V82.СправочникиСсылка.УчетныеЗаписиЭлектроннойПочты((byte[])Читалка.GetValue(50));
							Ссылка.АдресДляОтправкиСообщенийОбОшибке = Читалка.GetString(51);
							Ссылка.ПослеОшибкиОтложенногоПроведенияПрекратитьОперации = ((byte[])Читалка.GetValue(52))[0]==1?true:false;
							Ссылка.КоличествоОшибокОтложенногоПроведенияДляПрекращенияОперации = Читалка.GetDecimal(53);
							Ссылка.ВыполнятьДействияПодПолнымиПравами = ((byte[])Читалка.GetValue(54))[0]==1?true:false;
							Ссылка.ПроизводитьОтправкуТолькоПриУспешномПриеме = ((byte[])Читалка.GetValue(55))[0]==1?true:false;
							Ссылка.ВыполнитьОтложенноеПроведениеДокументовПоРасписанию = ((byte[])Читалка.GetValue(56))[0]==1?true:false;
							Ссылка.ПользовательПроксиFTP = Читалка.GetString(57);
							Ссылка.ПарольПроксиFTP = Читалка.GetString(58);
							Ссылка.СерверПроксиFTP = Читалка.GetString(59);
							Ссылка.ПортПроксиFTP = Читалка.GetDecimal(60);
							Ссылка.ПротоколПроксиFTP = Читалка.GetString(61);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}

		public static СправочникиВыборка.НастройкиОбменаДанными Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld2713_TYPE [УзелИнформационнойБазы_Тип],_Fld2713_RRRef [УзелИнформационнойБазы],_Fld2713_RTRef [УзелИнформационнойБазы_Вид]
					,_Fld2714RRef [ТипНастройки]
					,_Fld2715 [ПроизводитьПриемСообщений]
					,_Fld2716 [ПроизводитьОтправкуСообщений]
					,_Fld2717 [КоличествоЭлементовВТранзакцииНаВыгрузкуДанных]
					,_Fld2718 [КоличествоЭлементовВТранзакцииНаЗагрузкуДанных]
					,_Fld2719 [ВыполнятьАрхивациюФайловОбмена]
					,_Fld2720 [ПарольНаОтправку]
					,_Fld2721 [ПарольНаПрием]
					,_Fld2722 [КаталогОбменаИнформацией]
					,_Fld2723 [FTPАдресОбмена]
					,_Fld2724 [ПортFTPСоединения]
					,_Fld2725 [ПользовательFTPСоединения]
					,_Fld2726 [ПарольFTPСоединения]
					,_Fld2727 [Комментарий]
					,_Fld2728 [МаксимальныйРазмерОтправляемогоПолучаемогоПакетаЧерезFTP]
					,_Fld2729 [ПассивноеFTPСоединение]
					,_Fld2730 [ПочтовыйАдресПолучателя]
					,_Fld2731RRef [УчетнаяЗаписьПриемаОтправкиСообщений]
					,_Fld2732 [АвтоматическиЗакачиватьПочтуПриОбмене]
					,_Fld2733 [МаксимальныйРазмерОтправляемогоПакетаЧерезПочту]
					,_Fld2734_TYPE [УзелФоновогоОбмена_Тип],_Fld2734_RRRef [УзелФоновогоОбмена],_Fld2734_RTRef [УзелФоновогоОбмена_Вид]
					,_Fld2735 [ПравилаОбмена]
					,_Fld2736 [ПравилаОбменаДляПриемника]
					,_Fld2737 [ДобавлениеОбъектовИзФоновогоОбмена]
					,_Fld2738 [КоличествоОбъектовДляФоновогоОбмена]
					,_Fld2739 [OnLineОбмен]
					,_Fld2740 [ТипИнформационнойБазыДляПодключения]
					,_Fld2741 [КаталогИнформационнойБазыДляПодключения]
					,_Fld2742 [ИмяСервераИнформационнойБазыДляПодключения]
					,_Fld2743 [ИмяИнформационнойБазыНаСервереДляПодключения]
					,_Fld2744 [АутентификацияWindowsИнформационнойБазыДляПодключения]
					,_Fld2745 [ПользовательИнформационнойБазыДляПодключения]
					,_Fld2746 [ПарольИнформационнойБазыДляПодключения]
					,_Fld2747 [ВерсияПлатформыИнформационнойБазыДляПодключения]
					,_Fld2748 [РежимОтладкиOnLineОбмена]
					,_Fld2749 [ИмяФайлаПротоколаОбменаOnLineОбмен]
					,_Fld2750_TYPE [ТипУзлаИнформационнойБазы_Тип],_Fld2750_RRRef [ТипУзлаИнформационнойБазы],_Fld2750_RTRef [ТипУзлаИнформационнойБазы_Вид]
					,_Fld2751RRef [УчетнаяЗаписьОтправкиСообщенияОбОшибке]
					,_Fld2752 [АдресДляОтправкиСообщенийОбОшибке]
					,_Fld2753 [ПослеОшибкиОтложенногоПроведенияПрекратитьОперации]
					,_Fld2754 [КоличествоОшибокОтложенногоПроведенияДляПрекращенияОперации]
					,_Fld2755 [ВыполнятьДействияПодПолнымиПравами]
					,_Fld2756 [ПроизводитьОтправкуТолькоПриУспешномПриеме]
					,_Fld2757 [ВыполнитьОтложенноеПроведениеДокументовПоРасписанию]
					,_Fld2758 [ПользовательПроксиFTP]
					,_Fld2759 [ПарольПроксиFTP]
					,_Fld2760 [СерверПроксиFTP]
					,_Fld2761 [ПортПроксиFTP]
					,_Fld2762 [ПротоколПроксиFTP]
							From _Reference153(NOLOCK)";
					var Выборка = new V82.СправочникиВыборка.НастройкиОбменаДанными();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.НастройкиОбменаДанными();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1?true:false;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1?true:false;
							Ссылка.Код = Читалка.GetString(4);
							Ссылка.Наименование = Читалка.GetString(5);
							Ссылка.ТипНастройки = V82.Перечисления/*Ссылка*/.ТипыАвтоматическогоОбменаДанными.ПустаяСсылка.Получить((byte[])Читалка.GetValue(9));
							Ссылка.ПроизводитьПриемСообщений = ((byte[])Читалка.GetValue(10))[0]==1?true:false;
							Ссылка.ПроизводитьОтправкуСообщений = ((byte[])Читалка.GetValue(11))[0]==1?true:false;
							Ссылка.КоличествоЭлементовВТранзакцииНаВыгрузкуДанных = Читалка.GetDecimal(12);
							Ссылка.КоличествоЭлементовВТранзакцииНаЗагрузкуДанных = Читалка.GetDecimal(13);
							Ссылка.ВыполнятьАрхивациюФайловОбмена = ((byte[])Читалка.GetValue(14))[0]==1?true:false;
							Ссылка.ПарольНаОтправку = Читалка.GetString(15);
							Ссылка.ПарольНаПрием = Читалка.GetString(16);
							Ссылка.КаталогОбменаИнформацией = Читалка.GetString(17);
							Ссылка.FTPАдресОбмена = Читалка.GetString(18);
							Ссылка.ПортFTPСоединения = Читалка.GetDecimal(19);
							Ссылка.ПользовательFTPСоединения = Читалка.GetString(20);
							Ссылка.ПарольFTPСоединения = Читалка.GetString(21);
							Ссылка.Комментарий = Читалка.GetString(22);
							Ссылка.МаксимальныйРазмерОтправляемогоПолучаемогоПакетаЧерезFTP = Читалка.GetDecimal(23);
							Ссылка.ПассивноеFTPСоединение = ((byte[])Читалка.GetValue(24))[0]==1?true:false;
							Ссылка.ПочтовыйАдресПолучателя = Читалка.GetString(25);
							//Ссылка.УчетнаяЗаписьПриемаОтправкиСообщений = new V82.СправочникиСсылка.УчетныеЗаписиЭлектроннойПочты((byte[])Читалка.GetValue(26));
							Ссылка.АвтоматическиЗакачиватьПочтуПриОбмене = ((byte[])Читалка.GetValue(27))[0]==1?true:false;
							Ссылка.МаксимальныйРазмерОтправляемогоПакетаЧерезПочту = Читалка.GetDecimal(28);
							Ссылка.ДобавлениеОбъектовИзФоновогоОбмена = Читалка.GetDecimal(34);
							Ссылка.КоличествоОбъектовДляФоновогоОбмена = Читалка.GetDecimal(35);
							Ссылка.OnLineОбмен = ((byte[])Читалка.GetValue(36))[0]==1?true:false;
							Ссылка.ТипИнформационнойБазыДляПодключения = ((byte[])Читалка.GetValue(37))[0]==1?true:false;
							Ссылка.КаталогИнформационнойБазыДляПодключения = Читалка.GetString(38);
							Ссылка.ИмяСервераИнформационнойБазыДляПодключения = Читалка.GetString(39);
							Ссылка.ИмяИнформационнойБазыНаСервереДляПодключения = Читалка.GetString(40);
							Ссылка.АутентификацияWindowsИнформационнойБазыДляПодключения = ((byte[])Читалка.GetValue(41))[0]==1?true:false;
							Ссылка.ПользовательИнформационнойБазыДляПодключения = Читалка.GetString(42);
							Ссылка.ПарольИнформационнойБазыДляПодключения = Читалка.GetString(43);
							Ссылка.ВерсияПлатформыИнформационнойБазыДляПодключения = Читалка.GetString(44);
							Ссылка.РежимОтладкиOnLineОбмена = ((byte[])Читалка.GetValue(45))[0]==1?true:false;
							Ссылка.ИмяФайлаПротоколаОбменаOnLineОбмен = Читалка.GetString(46);
							//Ссылка.УчетнаяЗаписьОтправкиСообщенияОбОшибке = new V82.СправочникиСсылка.УчетныеЗаписиЭлектроннойПочты((byte[])Читалка.GetValue(50));
							Ссылка.АдресДляОтправкиСообщенийОбОшибке = Читалка.GetString(51);
							Ссылка.ПослеОшибкиОтложенногоПроведенияПрекратитьОперации = ((byte[])Читалка.GetValue(52))[0]==1?true:false;
							Ссылка.КоличествоОшибокОтложенногоПроведенияДляПрекращенияОперации = Читалка.GetDecimal(53);
							Ссылка.ВыполнятьДействияПодПолнымиПравами = ((byte[])Читалка.GetValue(54))[0]==1?true:false;
							Ссылка.ПроизводитьОтправкуТолькоПриУспешномПриеме = ((byte[])Читалка.GetValue(55))[0]==1?true:false;
							Ссылка.ВыполнитьОтложенноеПроведениеДокументовПоРасписанию = ((byte[])Читалка.GetValue(56))[0]==1?true:false;
							Ссылка.ПользовательПроксиFTP = Читалка.GetString(57);
							Ссылка.ПарольПроксиFTP = Читалка.GetString(58);
							Ссылка.СерверПроксиFTP = Читалка.GetString(59);
							Ссылка.ПортПроксиFTP = Читалка.GetDecimal(60);
							Ссылка.ПротоколПроксиFTP = Читалка.GetString(61);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}

		public static V82.СправочникиОбъект.НастройкиОбменаДанными СоздатьЭлемент()
		{
			var Объект = new V82.СправочникиОбъект.НастройкиОбменаДанными();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.ЭтоГруппа = false;
			Объект.ПарольНаОтправку = "";
			Объект.ПарольНаПрием = "";
			Объект.КаталогОбменаИнформацией = "";
			Объект.FTPАдресОбмена = "";
			Объект.ПользовательFTPСоединения = "";
			Объект.ПарольFTPСоединения = "";
			Объект.Комментарий = "";
			Объект.ПочтовыйАдресПолучателя = "";
			Объект.КаталогИнформационнойБазыДляПодключения = "";
			Объект.ИмяСервераИнформационнойБазыДляПодключения = "";
			Объект.ИмяИнформационнойБазыНаСервереДляПодключения = "";
			Объект.ПользовательИнформационнойБазыДляПодключения = "";
			Объект.ПарольИнформационнойБазыДляПодключения = "";
			Объект.ВерсияПлатформыИнформационнойБазыДляПодключения = "";
			Объект.ИмяФайлаПротоколаОбменаOnLineОбмен = "";
			Объект.АдресДляОтправкиСообщенийОбОшибке = "";
			Объект.ПользовательПроксиFTP = "";
			Объект.ПарольПроксиFTP = "";
			Объект.СерверПроксиFTP = "";
			Объект.ПротоколПроксиFTP = "";
			Объект.ТипНастройки = V82.Перечисления/*Ссылка*/.ТипыАвтоматическогоОбменаДанными.ПустаяСсылка;
			Объект.УчетнаяЗаписьПриемаОтправкиСообщений = new V82.СправочникиСсылка.УчетныеЗаписиЭлектроннойПочты();
			Объект.УчетнаяЗаписьОтправкиСообщенияОбОшибке = new V82.СправочникиСсылка.УчетныеЗаписиЭлектроннойПочты();
			return Объект;
		}
	}
}
