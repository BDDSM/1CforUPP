
using System;
using System.Data.SqlClient;
using V82;
using V82.СправочникиСсылка;
using V82.Справочники;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Справочники//Менеджер
{
	///<summary>
	///(Общ)
	///</summary>
	public partial class Организации:СправочникМенеджер
	{

		public static СправочникиСсылка.Организации НайтиПоКоду(string Код)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld3012 [Префикс]
					,_Fld3013 [ИНН]
					,_Fld3014 [КПП]
					,_Fld3015 [РегистрационныйНомерПФР]
					,_Fld3016RRef [ГоловнаяОрганизация]
					,_Fld3017 [НаименованиеПолное]
					,_Fld3018 [КодПоОКПО]
					,_Fld3019 [КодПоОКАТО]
					,_Fld3020 [КодИМНС]
					,_Fld3021 [РайонныйКоэффициент]
					,_Fld3022RRef [ЮрФизЛицо]
					,_Fld3023RRef [ТерриториальныеУсловияПФР]
					,_Fld3024RRef [ОсновнойБанковскийСчет]
					,_Fld3025RRef [ВидСтавокЕСНиПФР]
					,_Fld3026 [НаименованиеПлательщикаПриПеречисленииНалогов]
					,_Fld3027 [ИностраннаяОрганизация]
					,_Fld3028 [ДатаРегистрации]
					,_Fld3029 [КодОКОПФ]
					,_Fld3030 [НаименованиеОКОПФ]
					,_Fld3031 [КодОКФС]
					,_Fld3032 [НаименованиеОКФС]
					,_Fld3033 [СвидетельствоСерияНомер]
					,_Fld3034 [СвидетельствоДатаВыдачи]
					,_Fld3035 [СвидетельствоНаименованиеОргана]
					,_Fld3036 [СвидетельствоКодОргана]
					,_Fld3037RRef [СтранаРегистрации]
					,_Fld3038RRef [СтранаПостоянногоМестонахождения]
					,_Fld3039 [КодВСтранеРегистрации]
					,_Fld3040 [ОГРН]
					,_Fld3041 [НаименованиеИнострОрганизации]
					,_Fld3042 [РегистрационныйНомерФСС]
					,_Fld3043 [НаименованиеИМНС]
					,_Fld3044 [КодОКВЭД]
					,_Fld3045 [НаименованиеОКВЭД]
					,_Fld3046 [КодОКОНХ]
					,_Fld3047RRef [ИндивидуальныйПредприниматель]
					,_Fld3048 [УдалитьОбменЗадействован]
					,_Fld3049 [ОбменКодАбонента]
					,_Fld3050 [ОбменКаталогОтправкиДанныхОтчетности]
					,_Fld3051 [ОбменКаталогПрограммыЭлектроннойПочты]
					,_Fld3052 [РайонныйКоэффициентРФ]
					,_Fld3053 [ОтражатьВРегламентированномУчете]
					,_Fld3054 [КодИФНСПолучателя]
					,_Fld3055 [НаименованиеТерриториальногоОрганаПФР]
					,_Fld3056 [НаименованиеСокращенное]
					,_Fld3057RRef [ВидОбменаСКонтролирующимиОрганами]
					,_Fld3058RRef [УчетнаяЗаписьОбмена]
					,_Fld3059 [КодОрганаПФР]
					,_Fld3060 [КодОрганаФСГС]
					,_Fld3061 [ДополнительныйКодФСС]
					,_Fld3062 [КодПодчиненностиФСС]
					,_Fld3063 [ЦифровойИндексОбособленногоПодразделения]
					,_Fld3064 [РегистрационныйНомерТФОМС]
					,_Fld3065 [ИПРегистрационныйНомерПФР]
					,_Fld3066 [ИПРегистрационныйНомерФСС]
					,_Fld3067 [ИПКодПодчиненностиФСС]
					,_Fld3068 [ИПРегистрационныйНомерТФОМС]
					,_Fld3069 [НаименованиеТерриториальногоОрганаФСС]
					From _Reference172(NOLOCK)
					Where _Code=@Код";
					Команда.Parameters.AddWithValue("Код", Код);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.Организации();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1?true:false;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1?true:false;
							Ссылка.Код = Читалка.GetString(4);
							Ссылка.Наименование = Читалка.GetString(5);
							Ссылка.Префикс = Читалка.GetString(6);
							Ссылка.ИНН = Читалка.GetString(7);
							Ссылка.КПП = Читалка.GetString(8);
							Ссылка.РегистрационныйНомерПФР = Читалка.GetString(9);
							//Ссылка.ГоловнаяОрганизация = new V82.СправочникиСсылка.Организации((byte[])Читалка.GetValue(10));
							Ссылка.НаименованиеПолное = Читалка.GetString(11);
							Ссылка.КодПоОКПО = Читалка.GetString(12);
							Ссылка.КодПоОКАТО = Читалка.GetString(13);
							Ссылка.КодИМНС = Читалка.GetString(14);
							Ссылка.РайонныйКоэффициент = Читалка.GetDecimal(15);
							Ссылка.ЮрФизЛицо = V82.Перечисления/*Ссылка*/.ЮрФизЛицо.ПустаяСсылка.Получить((byte[])Читалка.GetValue(16));
							//Ссылка.ТерриториальныеУсловияПФР = new V82.СправочникиСсылка.ТерриториальныеУсловия((byte[])Читалка.GetValue(17));
							//Ссылка.ОсновнойБанковскийСчет = new V82.СправочникиСсылка.БанковскиеСчета((byte[])Читалка.GetValue(18));
							Ссылка.ВидСтавокЕСНиПФР = V82.Перечисления/*Ссылка*/.ВидыСтавокЕСНиПФР.ПустаяСсылка.Получить((byte[])Читалка.GetValue(19));
							Ссылка.НаименованиеПлательщикаПриПеречисленииНалогов = Читалка.GetString(20);
							Ссылка.ИностраннаяОрганизация = ((byte[])Читалка.GetValue(21))[0]==1?true:false;
							Ссылка.ДатаРегистрации = Читалка.GetDateTime(22);
							Ссылка.КодОКОПФ = Читалка.GetString(23);
							Ссылка.НаименованиеОКОПФ = Читалка.GetString(24);
							Ссылка.КодОКФС = Читалка.GetString(25);
							Ссылка.НаименованиеОКФС = Читалка.GetString(26);
							Ссылка.СвидетельствоСерияНомер = Читалка.GetString(27);
							Ссылка.СвидетельствоДатаВыдачи = Читалка.GetDateTime(28);
							Ссылка.СвидетельствоНаименованиеОргана = Читалка.GetString(29);
							Ссылка.СвидетельствоКодОргана = Читалка.GetString(30);
							//Ссылка.СтранаРегистрации = new V82.СправочникиСсылка.КлассификаторСтранМира((byte[])Читалка.GetValue(31));
							//Ссылка.СтранаПостоянногоМестонахождения = new V82.СправочникиСсылка.КлассификаторСтранМира((byte[])Читалка.GetValue(32));
							Ссылка.КодВСтранеРегистрации = Читалка.GetString(33);
							Ссылка.ОГРН = Читалка.GetString(34);
							Ссылка.НаименованиеИнострОрганизации = Читалка.GetString(35);
							Ссылка.РегистрационныйНомерФСС = Читалка.GetString(36);
							Ссылка.НаименованиеИМНС = Читалка.GetString(37);
							Ссылка.КодОКВЭД = Читалка.GetString(38);
							Ссылка.НаименованиеОКВЭД = Читалка.GetString(39);
							Ссылка.КодОКОНХ = Читалка.GetString(40);
							//Ссылка.ИндивидуальныйПредприниматель = new V82.СправочникиСсылка.ФизическиеЛица((byte[])Читалка.GetValue(41));
							Ссылка.УдалитьОбменЗадействован = ((byte[])Читалка.GetValue(42))[0]==1?true:false;
							Ссылка.ОбменКодАбонента = Читалка.GetString(43);
							Ссылка.ОбменКаталогОтправкиДанныхОтчетности = Читалка.GetString(44);
							Ссылка.ОбменКаталогПрограммыЭлектроннойПочты = Читалка.GetString(45);
							Ссылка.РайонныйКоэффициентРФ = Читалка.GetDecimal(46);
							Ссылка.ОтражатьВРегламентированномУчете = ((byte[])Читалка.GetValue(47))[0]==1?true:false;
							Ссылка.КодИФНСПолучателя = Читалка.GetString(48);
							Ссылка.НаименованиеТерриториальногоОрганаПФР = Читалка.GetString(49);
							Ссылка.НаименованиеСокращенное = Читалка.GetString(50);
							Ссылка.ВидОбменаСКонтролирующимиОрганами = V82.Перечисления/*Ссылка*/.ВидыОбменаСКонтролирующимиОрганами.ПустаяСсылка.Получить((byte[])Читалка.GetValue(51));
							//Ссылка.УчетнаяЗаписьОбмена = new V82.СправочникиСсылка.УчетныеЗаписиДокументооборота((byte[])Читалка.GetValue(52));
							Ссылка.КодОрганаПФР = Читалка.GetString(53);
							Ссылка.КодОрганаФСГС = Читалка.GetString(54);
							Ссылка.ДополнительныйКодФСС = Читалка.GetString(55);
							Ссылка.КодПодчиненностиФСС = Читалка.GetString(56);
							Ссылка.ЦифровойИндексОбособленногоПодразделения = Читалка.GetDecimal(57);
							Ссылка.РегистрационныйНомерТФОМС = Читалка.GetString(58);
							Ссылка.ИПРегистрационныйНомерПФР = Читалка.GetString(59);
							Ссылка.ИПРегистрационныйНомерФСС = Читалка.GetString(60);
							Ссылка.ИПКодПодчиненностиФСС = Читалка.GetString(61);
							Ссылка.ИПРегистрационныйНомерТФОМС = Читалка.GetString(62);
							Ссылка.НаименованиеТерриториальногоОрганаФСС = Читалка.GetString(63);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}

		public static СправочникиВыборка.Организации Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld3012 [Префикс]
					,_Fld3013 [ИНН]
					,_Fld3014 [КПП]
					,_Fld3015 [РегистрационныйНомерПФР]
					,_Fld3016RRef [ГоловнаяОрганизация]
					,_Fld3017 [НаименованиеПолное]
					,_Fld3018 [КодПоОКПО]
					,_Fld3019 [КодПоОКАТО]
					,_Fld3020 [КодИМНС]
					,_Fld3021 [РайонныйКоэффициент]
					,_Fld3022RRef [ЮрФизЛицо]
					,_Fld3023RRef [ТерриториальныеУсловияПФР]
					,_Fld3024RRef [ОсновнойБанковскийСчет]
					,_Fld3025RRef [ВидСтавокЕСНиПФР]
					,_Fld3026 [НаименованиеПлательщикаПриПеречисленииНалогов]
					,_Fld3027 [ИностраннаяОрганизация]
					,_Fld3028 [ДатаРегистрации]
					,_Fld3029 [КодОКОПФ]
					,_Fld3030 [НаименованиеОКОПФ]
					,_Fld3031 [КодОКФС]
					,_Fld3032 [НаименованиеОКФС]
					,_Fld3033 [СвидетельствоСерияНомер]
					,_Fld3034 [СвидетельствоДатаВыдачи]
					,_Fld3035 [СвидетельствоНаименованиеОргана]
					,_Fld3036 [СвидетельствоКодОргана]
					,_Fld3037RRef [СтранаРегистрации]
					,_Fld3038RRef [СтранаПостоянногоМестонахождения]
					,_Fld3039 [КодВСтранеРегистрации]
					,_Fld3040 [ОГРН]
					,_Fld3041 [НаименованиеИнострОрганизации]
					,_Fld3042 [РегистрационныйНомерФСС]
					,_Fld3043 [НаименованиеИМНС]
					,_Fld3044 [КодОКВЭД]
					,_Fld3045 [НаименованиеОКВЭД]
					,_Fld3046 [КодОКОНХ]
					,_Fld3047RRef [ИндивидуальныйПредприниматель]
					,_Fld3048 [УдалитьОбменЗадействован]
					,_Fld3049 [ОбменКодАбонента]
					,_Fld3050 [ОбменКаталогОтправкиДанныхОтчетности]
					,_Fld3051 [ОбменКаталогПрограммыЭлектроннойПочты]
					,_Fld3052 [РайонныйКоэффициентРФ]
					,_Fld3053 [ОтражатьВРегламентированномУчете]
					,_Fld3054 [КодИФНСПолучателя]
					,_Fld3055 [НаименованиеТерриториальногоОрганаПФР]
					,_Fld3056 [НаименованиеСокращенное]
					,_Fld3057RRef [ВидОбменаСКонтролирующимиОрганами]
					,_Fld3058RRef [УчетнаяЗаписьОбмена]
					,_Fld3059 [КодОрганаПФР]
					,_Fld3060 [КодОрганаФСГС]
					,_Fld3061 [ДополнительныйКодФСС]
					,_Fld3062 [КодПодчиненностиФСС]
					,_Fld3063 [ЦифровойИндексОбособленногоПодразделения]
					,_Fld3064 [РегистрационныйНомерТФОМС]
					,_Fld3065 [ИПРегистрационныйНомерПФР]
					,_Fld3066 [ИПРегистрационныйНомерФСС]
					,_Fld3067 [ИПКодПодчиненностиФСС]
					,_Fld3068 [ИПРегистрационныйНомерТФОМС]
					,_Fld3069 [НаименованиеТерриториальногоОрганаФСС]
							From _Reference172(NOLOCK)";
					var Выборка = new V82.СправочникиВыборка.Организации();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.Организации();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1?true:false;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1?true:false;
							Ссылка.Код = Читалка.GetString(4);
							Ссылка.Наименование = Читалка.GetString(5);
							Ссылка.Префикс = Читалка.GetString(6);
							Ссылка.ИНН = Читалка.GetString(7);
							Ссылка.КПП = Читалка.GetString(8);
							Ссылка.РегистрационныйНомерПФР = Читалка.GetString(9);
							//Ссылка.ГоловнаяОрганизация = new V82.СправочникиСсылка.Организации((byte[])Читалка.GetValue(10));
							Ссылка.НаименованиеПолное = Читалка.GetString(11);
							Ссылка.КодПоОКПО = Читалка.GetString(12);
							Ссылка.КодПоОКАТО = Читалка.GetString(13);
							Ссылка.КодИМНС = Читалка.GetString(14);
							Ссылка.РайонныйКоэффициент = Читалка.GetDecimal(15);
							Ссылка.ЮрФизЛицо = V82.Перечисления/*Ссылка*/.ЮрФизЛицо.ПустаяСсылка.Получить((byte[])Читалка.GetValue(16));
							//Ссылка.ТерриториальныеУсловияПФР = new V82.СправочникиСсылка.ТерриториальныеУсловия((byte[])Читалка.GetValue(17));
							//Ссылка.ОсновнойБанковскийСчет = new V82.СправочникиСсылка.БанковскиеСчета((byte[])Читалка.GetValue(18));
							Ссылка.ВидСтавокЕСНиПФР = V82.Перечисления/*Ссылка*/.ВидыСтавокЕСНиПФР.ПустаяСсылка.Получить((byte[])Читалка.GetValue(19));
							Ссылка.НаименованиеПлательщикаПриПеречисленииНалогов = Читалка.GetString(20);
							Ссылка.ИностраннаяОрганизация = ((byte[])Читалка.GetValue(21))[0]==1?true:false;
							Ссылка.ДатаРегистрации = Читалка.GetDateTime(22);
							Ссылка.КодОКОПФ = Читалка.GetString(23);
							Ссылка.НаименованиеОКОПФ = Читалка.GetString(24);
							Ссылка.КодОКФС = Читалка.GetString(25);
							Ссылка.НаименованиеОКФС = Читалка.GetString(26);
							Ссылка.СвидетельствоСерияНомер = Читалка.GetString(27);
							Ссылка.СвидетельствоДатаВыдачи = Читалка.GetDateTime(28);
							Ссылка.СвидетельствоНаименованиеОргана = Читалка.GetString(29);
							Ссылка.СвидетельствоКодОргана = Читалка.GetString(30);
							//Ссылка.СтранаРегистрации = new V82.СправочникиСсылка.КлассификаторСтранМира((byte[])Читалка.GetValue(31));
							//Ссылка.СтранаПостоянногоМестонахождения = new V82.СправочникиСсылка.КлассификаторСтранМира((byte[])Читалка.GetValue(32));
							Ссылка.КодВСтранеРегистрации = Читалка.GetString(33);
							Ссылка.ОГРН = Читалка.GetString(34);
							Ссылка.НаименованиеИнострОрганизации = Читалка.GetString(35);
							Ссылка.РегистрационныйНомерФСС = Читалка.GetString(36);
							Ссылка.НаименованиеИМНС = Читалка.GetString(37);
							Ссылка.КодОКВЭД = Читалка.GetString(38);
							Ссылка.НаименованиеОКВЭД = Читалка.GetString(39);
							Ссылка.КодОКОНХ = Читалка.GetString(40);
							//Ссылка.ИндивидуальныйПредприниматель = new V82.СправочникиСсылка.ФизическиеЛица((byte[])Читалка.GetValue(41));
							Ссылка.УдалитьОбменЗадействован = ((byte[])Читалка.GetValue(42))[0]==1?true:false;
							Ссылка.ОбменКодАбонента = Читалка.GetString(43);
							Ссылка.ОбменКаталогОтправкиДанныхОтчетности = Читалка.GetString(44);
							Ссылка.ОбменКаталогПрограммыЭлектроннойПочты = Читалка.GetString(45);
							Ссылка.РайонныйКоэффициентРФ = Читалка.GetDecimal(46);
							Ссылка.ОтражатьВРегламентированномУчете = ((byte[])Читалка.GetValue(47))[0]==1?true:false;
							Ссылка.КодИФНСПолучателя = Читалка.GetString(48);
							Ссылка.НаименованиеТерриториальногоОрганаПФР = Читалка.GetString(49);
							Ссылка.НаименованиеСокращенное = Читалка.GetString(50);
							Ссылка.ВидОбменаСКонтролирующимиОрганами = V82.Перечисления/*Ссылка*/.ВидыОбменаСКонтролирующимиОрганами.ПустаяСсылка.Получить((byte[])Читалка.GetValue(51));
							//Ссылка.УчетнаяЗаписьОбмена = new V82.СправочникиСсылка.УчетныеЗаписиДокументооборота((byte[])Читалка.GetValue(52));
							Ссылка.КодОрганаПФР = Читалка.GetString(53);
							Ссылка.КодОрганаФСГС = Читалка.GetString(54);
							Ссылка.ДополнительныйКодФСС = Читалка.GetString(55);
							Ссылка.КодПодчиненностиФСС = Читалка.GetString(56);
							Ссылка.ЦифровойИндексОбособленногоПодразделения = Читалка.GetDecimal(57);
							Ссылка.РегистрационныйНомерТФОМС = Читалка.GetString(58);
							Ссылка.ИПРегистрационныйНомерПФР = Читалка.GetString(59);
							Ссылка.ИПРегистрационныйНомерФСС = Читалка.GetString(60);
							Ссылка.ИПКодПодчиненностиФСС = Читалка.GetString(61);
							Ссылка.ИПРегистрационныйНомерТФОМС = Читалка.GetString(62);
							Ссылка.НаименованиеТерриториальногоОрганаФСС = Читалка.GetString(63);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}

		public static V82.СправочникиОбъект.Организации СоздатьЭлемент()
		{
			var Объект = new V82.СправочникиОбъект.Организации();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.ЭтоГруппа = false;
			Объект.Префикс = "";
			Объект.ИНН = "";
			Объект.КПП = "";
			Объект.РегистрационныйНомерПФР = "";
			Объект.НаименованиеПолное = "";
			Объект.КодПоОКПО = "";
			Объект.КодПоОКАТО = "";
			Объект.КодИМНС = "";
			Объект.НаименованиеПлательщикаПриПеречисленииНалогов = "";
			Объект.КодОКОПФ = "";
			Объект.НаименованиеОКОПФ = "";
			Объект.КодОКФС = "";
			Объект.НаименованиеОКФС = "";
			Объект.СвидетельствоСерияНомер = "";
			Объект.СвидетельствоНаименованиеОргана = "";
			Объект.СвидетельствоКодОргана = "";
			Объект.КодВСтранеРегистрации = "";
			Объект.ОГРН = "";
			Объект.НаименованиеИнострОрганизации = "";
			Объект.РегистрационныйНомерФСС = "";
			Объект.НаименованиеИМНС = "";
			Объект.КодОКВЭД = "";
			Объект.НаименованиеОКВЭД = "";
			Объект.КодОКОНХ = "";
			Объект.ОбменКодАбонента = "";
			Объект.ОбменКаталогОтправкиДанныхОтчетности = "";
			Объект.ОбменКаталогПрограммыЭлектроннойПочты = "";
			Объект.КодИФНСПолучателя = "";
			Объект.НаименованиеТерриториальногоОрганаПФР = "";
			Объект.НаименованиеСокращенное = "";
			Объект.КодОрганаПФР = "";
			Объект.КодОрганаФСГС = "";
			Объект.ДополнительныйКодФСС = "";
			Объект.КодПодчиненностиФСС = "";
			Объект.РегистрационныйНомерТФОМС = "";
			Объект.ИПРегистрационныйНомерПФР = "";
			Объект.ИПРегистрационныйНомерФСС = "";
			Объект.ИПКодПодчиненностиФСС = "";
			Объект.ИПРегистрационныйНомерТФОМС = "";
			Объект.НаименованиеТерриториальногоОрганаФСС = "";
			Объект.ГоловнаяОрганизация = new V82.СправочникиСсылка.Организации();
			Объект.ЮрФизЛицо = V82.Перечисления/*Ссылка*/.ЮрФизЛицо.ПустаяСсылка;
			Объект.ТерриториальныеУсловияПФР = new V82.СправочникиСсылка.ТерриториальныеУсловия();
			Объект.ОсновнойБанковскийСчет = new V82.СправочникиСсылка.БанковскиеСчета();
			Объект.ВидСтавокЕСНиПФР = V82.Перечисления/*Ссылка*/.ВидыСтавокЕСНиПФР.ПустаяСсылка;
			Объект.СтранаРегистрации = new V82.СправочникиСсылка.КлассификаторСтранМира();
			Объект.СтранаПостоянногоМестонахождения = new V82.СправочникиСсылка.КлассификаторСтранМира();
			Объект.ИндивидуальныйПредприниматель = new V82.СправочникиСсылка.ФизическиеЛица();
			Объект.ВидОбменаСКонтролирующимиОрганами = V82.Перечисления/*Ссылка*/.ВидыОбменаСКонтролирующимиОрганами.ПустаяСсылка;
			Объект.УчетнаяЗаписьОбмена = new V82.СправочникиСсылка.УчетныеЗаписиДокументооборота();
			return Объект;
		}
	}
}
