
using System;
using System.Data.SqlClient;
using V82;
using V82.СправочникиСсылка;
using V82.Справочники;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Справочники//Менеджер
{
	public partial class СоглашенияОбИспользованииЭД:СправочникМенеджер
	{
		
		public static СправочникиВыборка.СоглашенияОбИспользованииЭД Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Description [Наименование]
					,_Fld3442 [Номер]
					,_Fld3443 [Дата]
					,_Fld3444RRef [СпособОбменаЭД]
					,_Fld3445RRef [СтатусСоглашения]
					,_Fld3446RRef [Организация]
					,_Fld3447RRef [Контрагент]
					,_Fld3448 [Партнер]
					,_Fld3449 [ИдентификаторОрганизации]
					,_Fld3450 [ИдентификаторКонтрагента]
					,_Fld3451RRef [СертификатОрганизацииДляРасшифровки]
					,_Fld3452 [СертификатКонтрагентаДляШифрования]
					,_Fld3453_TYPE [АдресРесурсаОрганизации_Тип],_Fld3453_RRRef [АдресРесурсаОрганизации],_Fld3453_RTRef [АдресРесурсаОрганизации_Вид]
					,_Fld3454 [АдресРесурсаКонтрагента]
					,_Fld3455 [СрокДействия]
					,_Fld3456RRef [Ответственный]
					,_Fld3457 [Комментарий]
					,_Fld3458RRef [ТиповоеСоглашение]
					,_Fld3459 [ПроверятьСертификатыПодписей]
					,_Fld3460 [ЭтоТиповое]
					,_Fld3461 [ЭтоИнтеркампани]
					,_Fld3462RRef [СертификатАбонента]
					,_Fld3463 [ЛогинАбонента]
					From _Reference232(NOLOCK)";
					var Выборка = new V82.СправочникиВыборка.СоглашенияОбИспользованииЭД();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.СоглашенияОбИспользованииЭД();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1?true:false;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1?true:false;
							Ссылка.Наименование = Читалка.GetString(4);
							Ссылка.Номер = Читалка.GetString(5);
							Ссылка.Дата = Читалка.GetDateTime(6);
							Ссылка.СпособОбменаЭД = V82.Перечисления/*Ссылка*/.СпособыОбменаЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(7));
							Ссылка.СтатусСоглашения = V82.Перечисления/*Ссылка*/.СтатусыСоглашенийЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(8));
							//Ссылка.Организация = new V82.СправочникиСсылка.Организации((byte[])Читалка.GetValue(9));
							//Ссылка.Контрагент = new V82.СправочникиСсылка.Контрагенты((byte[])Читалка.GetValue(10));
							Ссылка.Партнер = Читалка.GetString(11);
							Ссылка.ИдентификаторОрганизации = Читалка.GetString(12);
							Ссылка.ИдентификаторКонтрагента = Читалка.GetString(13);
							//Ссылка.СертификатОрганизацииДляРасшифровки = new V82.СправочникиСсылка.СертификатыЭЦП((byte[])Читалка.GetValue(14));
							Ссылка.АдресРесурсаКонтрагента = Читалка.GetString(19);
							Ссылка.СрокДействия = Читалка.GetDateTime(20);
							//Ссылка.Ответственный = new V82.СправочникиСсылка.Пользователи((byte[])Читалка.GetValue(21));
							Ссылка.Комментарий = Читалка.GetString(22);
							//Ссылка.ТиповоеСоглашение = new V82.СправочникиСсылка.СоглашенияОбИспользованииЭД((byte[])Читалка.GetValue(23));
							Ссылка.ПроверятьСертификатыПодписей = ((byte[])Читалка.GetValue(24))[0]==1?true:false;
							Ссылка.ЭтоТиповое = ((byte[])Читалка.GetValue(25))[0]==1?true:false;
							Ссылка.ЭтоИнтеркампани = ((byte[])Читалка.GetValue(26))[0]==1?true:false;
							//Ссылка.СертификатАбонента = new V82.СправочникиСсылка.СертификатыЭЦП((byte[])Читалка.GetValue(27));
							Ссылка.ЛогинАбонента = Читалка.GetString(28);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.СоглашенияОбИспользованииЭД ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Description [Наименование]
					,_Fld3442 [Номер]
					,_Fld3443 [Дата]
					,_Fld3444RRef [СпособОбменаЭД]
					,_Fld3445RRef [СтатусСоглашения]
					,_Fld3446RRef [Организация]
					,_Fld3447RRef [Контрагент]
					,_Fld3448 [Партнер]
					,_Fld3449 [ИдентификаторОрганизации]
					,_Fld3450 [ИдентификаторКонтрагента]
					,_Fld3451RRef [СертификатОрганизацииДляРасшифровки]
					,_Fld3452 [СертификатКонтрагентаДляШифрования]
					,_Fld3453_TYPE [АдресРесурсаОрганизации_Тип],_Fld3453_RRRef [АдресРесурсаОрганизации],_Fld3453_RTRef [АдресРесурсаОрганизации_Вид]
					,_Fld3454 [АдресРесурсаКонтрагента]
					,_Fld3455 [СрокДействия]
					,_Fld3456RRef [Ответственный]
					,_Fld3457 [Комментарий]
					,_Fld3458RRef [ТиповоеСоглашение]
					,_Fld3459 [ПроверятьСертификатыПодписей]
					,_Fld3460 [ЭтоТиповое]
					,_Fld3461 [ЭтоИнтеркампани]
					,_Fld3462RRef [СертификатАбонента]
					,_Fld3463 [ЛогинАбонента]
					From _Reference232(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.СправочникиВыборка.СоглашенияОбИспользованииЭД();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.СоглашенияОбИспользованииЭД();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1?true:false;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1?true:false;
							Ссылка.Наименование = Читалка.GetString(4);
							Ссылка.Номер = Читалка.GetString(5);
							Ссылка.Дата = Читалка.GetDateTime(6);
							Ссылка.СпособОбменаЭД = V82.Перечисления/*Ссылка*/.СпособыОбменаЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(7));
							Ссылка.СтатусСоглашения = V82.Перечисления/*Ссылка*/.СтатусыСоглашенийЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(8));
							//Ссылка.Организация = new V82.СправочникиСсылка.Организации((byte[])Читалка.GetValue(9));
							//Ссылка.Контрагент = new V82.СправочникиСсылка.Контрагенты((byte[])Читалка.GetValue(10));
							Ссылка.Партнер = Читалка.GetString(11);
							Ссылка.ИдентификаторОрганизации = Читалка.GetString(12);
							Ссылка.ИдентификаторКонтрагента = Читалка.GetString(13);
							//Ссылка.СертификатОрганизацииДляРасшифровки = new V82.СправочникиСсылка.СертификатыЭЦП((byte[])Читалка.GetValue(14));
							Ссылка.АдресРесурсаКонтрагента = Читалка.GetString(19);
							Ссылка.СрокДействия = Читалка.GetDateTime(20);
							//Ссылка.Ответственный = new V82.СправочникиСсылка.Пользователи((byte[])Читалка.GetValue(21));
							Ссылка.Комментарий = Читалка.GetString(22);
							//Ссылка.ТиповоеСоглашение = new V82.СправочникиСсылка.СоглашенияОбИспользованииЭД((byte[])Читалка.GetValue(23));
							Ссылка.ПроверятьСертификатыПодписей = ((byte[])Читалка.GetValue(24))[0]==1?true:false;
							Ссылка.ЭтоТиповое = ((byte[])Читалка.GetValue(25))[0]==1?true:false;
							Ссылка.ЭтоИнтеркампани = ((byte[])Читалка.GetValue(26))[0]==1?true:false;
							//Ссылка.СертификатАбонента = new V82.СправочникиСсылка.СертификатыЭЦП((byte[])Читалка.GetValue(27));
							Ссылка.ЛогинАбонента = Читалка.GetString(28);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.СоглашенияОбИспользованииЭД ВыбратьПоНаименованию(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Description [Наименование]
					,_Fld3442 [Номер]
					,_Fld3443 [Дата]
					,_Fld3444RRef [СпособОбменаЭД]
					,_Fld3445RRef [СтатусСоглашения]
					,_Fld3446RRef [Организация]
					,_Fld3447RRef [Контрагент]
					,_Fld3448 [Партнер]
					,_Fld3449 [ИдентификаторОрганизации]
					,_Fld3450 [ИдентификаторКонтрагента]
					,_Fld3451RRef [СертификатОрганизацииДляРасшифровки]
					,_Fld3452 [СертификатКонтрагентаДляШифрования]
					,_Fld3453_TYPE [АдресРесурсаОрганизации_Тип],_Fld3453_RRRef [АдресРесурсаОрганизации],_Fld3453_RTRef [АдресРесурсаОрганизации_Вид]
					,_Fld3454 [АдресРесурсаКонтрагента]
					,_Fld3455 [СрокДействия]
					,_Fld3456RRef [Ответственный]
					,_Fld3457 [Комментарий]
					,_Fld3458RRef [ТиповоеСоглашение]
					,_Fld3459 [ПроверятьСертификатыПодписей]
					,_Fld3460 [ЭтоТиповое]
					,_Fld3461 [ЭтоИнтеркампани]
					,_Fld3462RRef [СертификатАбонента]
					,_Fld3463 [ЛогинАбонента]
					From _Reference232(NOLOCK)
					Where _Description between @Мин and @Макс
					Order by _Description", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.СправочникиВыборка.СоглашенияОбИспользованииЭД();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.СоглашенияОбИспользованииЭД();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1?true:false;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1?true:false;
							Ссылка.Наименование = Читалка.GetString(4);
							Ссылка.Номер = Читалка.GetString(5);
							Ссылка.Дата = Читалка.GetDateTime(6);
							Ссылка.СпособОбменаЭД = V82.Перечисления/*Ссылка*/.СпособыОбменаЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(7));
							Ссылка.СтатусСоглашения = V82.Перечисления/*Ссылка*/.СтатусыСоглашенийЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(8));
							//Ссылка.Организация = new V82.СправочникиСсылка.Организации((byte[])Читалка.GetValue(9));
							//Ссылка.Контрагент = new V82.СправочникиСсылка.Контрагенты((byte[])Читалка.GetValue(10));
							Ссылка.Партнер = Читалка.GetString(11);
							Ссылка.ИдентификаторОрганизации = Читалка.GetString(12);
							Ссылка.ИдентификаторКонтрагента = Читалка.GetString(13);
							//Ссылка.СертификатОрганизацииДляРасшифровки = new V82.СправочникиСсылка.СертификатыЭЦП((byte[])Читалка.GetValue(14));
							Ссылка.АдресРесурсаКонтрагента = Читалка.GetString(19);
							Ссылка.СрокДействия = Читалка.GetDateTime(20);
							//Ссылка.Ответственный = new V82.СправочникиСсылка.Пользователи((byte[])Читалка.GetValue(21));
							Ссылка.Комментарий = Читалка.GetString(22);
							//Ссылка.ТиповоеСоглашение = new V82.СправочникиСсылка.СоглашенияОбИспользованииЭД((byte[])Читалка.GetValue(23));
							Ссылка.ПроверятьСертификатыПодписей = ((byte[])Читалка.GetValue(24))[0]==1?true:false;
							Ссылка.ЭтоТиповое = ((byte[])Читалка.GetValue(25))[0]==1?true:false;
							Ссылка.ЭтоИнтеркампани = ((byte[])Читалка.GetValue(26))[0]==1?true:false;
							//Ссылка.СертификатАбонента = new V82.СправочникиСсылка.СертификатыЭЦП((byte[])Читалка.GetValue(27));
							Ссылка.ЛогинАбонента = Читалка.GetString(28);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.СоглашенияОбИспользованииЭД СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Description [Наименование]
					,_Fld3442 [Номер]
					,_Fld3443 [Дата]
					,_Fld3444RRef [СпособОбменаЭД]
					,_Fld3445RRef [СтатусСоглашения]
					,_Fld3446RRef [Организация]
					,_Fld3447RRef [Контрагент]
					,_Fld3448 [Партнер]
					,_Fld3449 [ИдентификаторОрганизации]
					,_Fld3450 [ИдентификаторКонтрагента]
					,_Fld3451RRef [СертификатОрганизацииДляРасшифровки]
					,_Fld3452 [СертификатКонтрагентаДляШифрования]
					,_Fld3453_TYPE [АдресРесурсаОрганизации_Тип],_Fld3453_RRRef [АдресРесурсаОрганизации],_Fld3453_RTRef [АдресРесурсаОрганизации_Вид]
					,_Fld3454 [АдресРесурсаКонтрагента]
					,_Fld3455 [СрокДействия]
					,_Fld3456RRef [Ответственный]
					,_Fld3457 [Комментарий]
					,_Fld3458RRef [ТиповоеСоглашение]
					,_Fld3459 [ПроверятьСертификатыПодписей]
					,_Fld3460 [ЭтоТиповое]
					,_Fld3461 [ЭтоИнтеркампани]
					,_Fld3462RRef [СертификатАбонента]
					,_Fld3463 [ЛогинАбонента]
					From _Reference232(NOLOCK)";
					var Выборка = new V82.СправочникиВыборка.СоглашенияОбИспользованииЭД();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.СоглашенияОбИспользованииЭД();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1?true:false;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1?true:false;
							Ссылка.Наименование = Читалка.GetString(4);
							Ссылка.Номер = Читалка.GetString(5);
							Ссылка.Дата = Читалка.GetDateTime(6);
							Ссылка.СпособОбменаЭД = V82.Перечисления/*Ссылка*/.СпособыОбменаЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(7));
							Ссылка.СтатусСоглашения = V82.Перечисления/*Ссылка*/.СтатусыСоглашенийЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(8));
							//Ссылка.Организация = new V82.СправочникиСсылка.Организации((byte[])Читалка.GetValue(9));
							//Ссылка.Контрагент = new V82.СправочникиСсылка.Контрагенты((byte[])Читалка.GetValue(10));
							Ссылка.Партнер = Читалка.GetString(11);
							Ссылка.ИдентификаторОрганизации = Читалка.GetString(12);
							Ссылка.ИдентификаторКонтрагента = Читалка.GetString(13);
							//Ссылка.СертификатОрганизацииДляРасшифровки = new V82.СправочникиСсылка.СертификатыЭЦП((byte[])Читалка.GetValue(14));
							Ссылка.АдресРесурсаКонтрагента = Читалка.GetString(19);
							Ссылка.СрокДействия = Читалка.GetDateTime(20);
							//Ссылка.Ответственный = new V82.СправочникиСсылка.Пользователи((byte[])Читалка.GetValue(21));
							Ссылка.Комментарий = Читалка.GetString(22);
							//Ссылка.ТиповоеСоглашение = new V82.СправочникиСсылка.СоглашенияОбИспользованииЭД((byte[])Читалка.GetValue(23));
							Ссылка.ПроверятьСертификатыПодписей = ((byte[])Читалка.GetValue(24))[0]==1?true:false;
							Ссылка.ЭтоТиповое = ((byte[])Читалка.GetValue(25))[0]==1?true:false;
							Ссылка.ЭтоИнтеркампани = ((byte[])Читалка.GetValue(26))[0]==1?true:false;
							//Ссылка.СертификатАбонента = new V82.СправочникиСсылка.СертификатыЭЦП((byte[])Читалка.GetValue(27));
							Ссылка.ЛогинАбонента = Читалка.GetString(28);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.СоглашенияОбИспользованииЭД СтраницаПоНаименованию(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Description [Наименование]
					,_Fld3442 [Номер]
					,_Fld3443 [Дата]
					,_Fld3444RRef [СпособОбменаЭД]
					,_Fld3445RRef [СтатусСоглашения]
					,_Fld3446RRef [Организация]
					,_Fld3447RRef [Контрагент]
					,_Fld3448 [Партнер]
					,_Fld3449 [ИдентификаторОрганизации]
					,_Fld3450 [ИдентификаторКонтрагента]
					,_Fld3451RRef [СертификатОрганизацииДляРасшифровки]
					,_Fld3452 [СертификатКонтрагентаДляШифрования]
					,_Fld3453_TYPE [АдресРесурсаОрганизации_Тип],_Fld3453_RRRef [АдресРесурсаОрганизации],_Fld3453_RTRef [АдресРесурсаОрганизации_Вид]
					,_Fld3454 [АдресРесурсаКонтрагента]
					,_Fld3455 [СрокДействия]
					,_Fld3456RRef [Ответственный]
					,_Fld3457 [Комментарий]
					,_Fld3458RRef [ТиповоеСоглашение]
					,_Fld3459 [ПроверятьСертификатыПодписей]
					,_Fld3460 [ЭтоТиповое]
					,_Fld3461 [ЭтоИнтеркампани]
					,_Fld3462RRef [СертификатАбонента]
					,_Fld3463 [ЛогинАбонента]
					From _Reference232(NOLOCK)";
					var Выборка = new V82.СправочникиВыборка.СоглашенияОбИспользованииЭД();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.СоглашенияОбИспользованииЭД();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1?true:false;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1?true:false;
							Ссылка.Наименование = Читалка.GetString(4);
							Ссылка.Номер = Читалка.GetString(5);
							Ссылка.Дата = Читалка.GetDateTime(6);
							Ссылка.СпособОбменаЭД = V82.Перечисления/*Ссылка*/.СпособыОбменаЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(7));
							Ссылка.СтатусСоглашения = V82.Перечисления/*Ссылка*/.СтатусыСоглашенийЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(8));
							//Ссылка.Организация = new V82.СправочникиСсылка.Организации((byte[])Читалка.GetValue(9));
							//Ссылка.Контрагент = new V82.СправочникиСсылка.Контрагенты((byte[])Читалка.GetValue(10));
							Ссылка.Партнер = Читалка.GetString(11);
							Ссылка.ИдентификаторОрганизации = Читалка.GetString(12);
							Ссылка.ИдентификаторКонтрагента = Читалка.GetString(13);
							//Ссылка.СертификатОрганизацииДляРасшифровки = new V82.СправочникиСсылка.СертификатыЭЦП((byte[])Читалка.GetValue(14));
							Ссылка.АдресРесурсаКонтрагента = Читалка.GetString(19);
							Ссылка.СрокДействия = Читалка.GetDateTime(20);
							//Ссылка.Ответственный = new V82.СправочникиСсылка.Пользователи((byte[])Читалка.GetValue(21));
							Ссылка.Комментарий = Читалка.GetString(22);
							//Ссылка.ТиповоеСоглашение = new V82.СправочникиСсылка.СоглашенияОбИспользованииЭД((byte[])Читалка.GetValue(23));
							Ссылка.ПроверятьСертификатыПодписей = ((byte[])Читалка.GetValue(24))[0]==1?true:false;
							Ссылка.ЭтоТиповое = ((byte[])Читалка.GetValue(25))[0]==1?true:false;
							Ссылка.ЭтоИнтеркампани = ((byte[])Читалка.GetValue(26))[0]==1?true:false;
							//Ссылка.СертификатАбонента = new V82.СправочникиСсылка.СертификатыЭЦП((byte[])Читалка.GetValue(27));
							Ссылка.ЛогинАбонента = Читалка.GetString(28);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.СправочникиОбъект.СоглашенияОбИспользованииЭД СоздатьЭлемент()
		{
			var Объект = new V82.СправочникиОбъект.СоглашенияОбИспользованииЭД();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.Номер = "";
			Объект.Партнер = "";
			Объект.ИдентификаторОрганизации = "";
			Объект.ИдентификаторКонтрагента = "";
			Объект.АдресРесурсаКонтрагента = "";
			Объект.Комментарий = "";
			Объект.ЛогинАбонента = "";
			Объект.СпособОбменаЭД = V82.Перечисления/*Ссылка*/.СпособыОбменаЭД.ПустаяСсылка;
			Объект.СтатусСоглашения = V82.Перечисления/*Ссылка*/.СтатусыСоглашенийЭД.ПустаяСсылка;
			Объект.Организация = new V82.СправочникиСсылка.Организации();
			Объект.Контрагент = new V82.СправочникиСсылка.Контрагенты();
			Объект.СертификатОрганизацииДляРасшифровки = new V82.СправочникиСсылка.СертификатыЭЦП();
			Объект.Ответственный = new V82.СправочникиСсылка.Пользователи();
			Объект.ТиповоеСоглашение = new V82.СправочникиСсылка.СоглашенияОбИспользованииЭД();
			Объект.СертификатАбонента = new V82.СправочникиСсылка.СертификатыЭЦП();
			return Объект;
		}
	}
}