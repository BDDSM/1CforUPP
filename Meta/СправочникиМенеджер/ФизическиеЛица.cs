
using System;
using System.Data.SqlClient;
using V82;
using V82.СправочникиСсылка;
using V82.Справочники;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Справочники//Менеджер
{
	///<summary>
	///(Общ)
	///</summary>
	public partial class ФизическиеЛица:СправочникМенеджер
	{
		
		public static СправочникиСсылка.ФизическиеЛица НайтиПоКоду(string Код)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld4121 [ДатаРождения]
					,_Fld4122 [ИНН]
					,_Fld4123 [КодИМНС]
					,_Fld4124 [Комментарий]
					,_Fld4125 [СтраховойНомерПФР]
					,_Fld4126RRef [Пол]
					,_Fld4127 [МестоРождения]
					,_Fld4128RRef [ОсновноеИзображение]
					,_Fld4129 [МестоРожденияКодПоОКАТО]
					,_Fld4130RRef [ГруппаДоступаФизическогоЛица]
					,_Fld4131RRef [ЛьготаПриНачисленииПособий]
					,_Fld4132 [ИмеетНаучныеТруды]
					,_Fld4133 [ИмеетИзобретения]
					From _Reference283(NOLOCK)
					Where _Code=@Код";
					Команда.Parameters.AddWithValue("Код", Код);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.ФизическиеЛица();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1?true:false;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1?true:false;
							Ссылка.Код = Читалка.GetString(4);
							Ссылка.Наименование = Читалка.GetString(5);
							Ссылка.ДатаРождения = Читалка.GetDateTime(6);
							Ссылка.ИНН = Читалка.GetString(7);
							Ссылка.КодИМНС = Читалка.GetString(8);
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.СтраховойНомерПФР = Читалка.GetString(10);
							Ссылка.Пол = V82.Перечисления/*Ссылка*/.ПолФизическихЛиц.ПустаяСсылка.Получить((byte[])Читалка.GetValue(11));
							Ссылка.МестоРождения = Читалка.GetString(12);
							//Ссылка.ОсновноеИзображение = new V82.СправочникиСсылка.ХранилищеДополнительнойИнформации((byte[])Читалка.GetValue(13));
							Ссылка.МестоРожденияКодПоОКАТО = Читалка.GetString(14);
							//Ссылка.ГруппаДоступаФизическогоЛица = new V82.СправочникиСсылка.ГруппыДоступаФизическихЛиц((byte[])Читалка.GetValue(15));
							Ссылка.ЛьготаПриНачисленииПособий = V82.Перечисления/*Ссылка*/.ВидыЛьготПриНачисленииБольничных.ПустаяСсылка.Получить((byte[])Читалка.GetValue(16));
							Ссылка.ИмеетНаучныеТруды = ((byte[])Читалка.GetValue(17))[0]==1?true:false;
							Ссылка.ИмеетИзобретения = ((byte[])Читалка.GetValue(18))[0]==1?true:false;
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static СправочникиВыборка.ФизическиеЛица Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld4121 [ДатаРождения]
					,_Fld4122 [ИНН]
					,_Fld4123 [КодИМНС]
					,_Fld4124 [Комментарий]
					,_Fld4125 [СтраховойНомерПФР]
					,_Fld4126RRef [Пол]
					,_Fld4127 [МестоРождения]
					,_Fld4128RRef [ОсновноеИзображение]
					,_Fld4129 [МестоРожденияКодПоОКАТО]
					,_Fld4130RRef [ГруппаДоступаФизическогоЛица]
					,_Fld4131RRef [ЛьготаПриНачисленииПособий]
					,_Fld4132 [ИмеетНаучныеТруды]
					,_Fld4133 [ИмеетИзобретения]
					From _Reference283(NOLOCK)";
					var Выборка = new V82.СправочникиВыборка.ФизическиеЛица();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.ФизическиеЛица();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1?true:false;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1?true:false;
							Ссылка.Код = Читалка.GetString(4);
							Ссылка.Наименование = Читалка.GetString(5);
							Ссылка.ДатаРождения = Читалка.GetDateTime(6);
							Ссылка.ИНН = Читалка.GetString(7);
							Ссылка.КодИМНС = Читалка.GetString(8);
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.СтраховойНомерПФР = Читалка.GetString(10);
							Ссылка.Пол = V82.Перечисления/*Ссылка*/.ПолФизическихЛиц.ПустаяСсылка.Получить((byte[])Читалка.GetValue(11));
							Ссылка.МестоРождения = Читалка.GetString(12);
							//Ссылка.ОсновноеИзображение = new V82.СправочникиСсылка.ХранилищеДополнительнойИнформации((byte[])Читалка.GetValue(13));
							Ссылка.МестоРожденияКодПоОКАТО = Читалка.GetString(14);
							//Ссылка.ГруппаДоступаФизическогоЛица = new V82.СправочникиСсылка.ГруппыДоступаФизическихЛиц((byte[])Читалка.GetValue(15));
							Ссылка.ЛьготаПриНачисленииПособий = V82.Перечисления/*Ссылка*/.ВидыЛьготПриНачисленииБольничных.ПустаяСсылка.Получить((byte[])Читалка.GetValue(16));
							Ссылка.ИмеетНаучныеТруды = ((byte[])Читалка.GetValue(17))[0]==1?true:false;
							Ссылка.ИмеетИзобретения = ((byte[])Читалка.GetValue(18))[0]==1?true:false;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.ФизическиеЛица ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld4121 [ДатаРождения]
					,_Fld4122 [ИНН]
					,_Fld4123 [КодИМНС]
					,_Fld4124 [Комментарий]
					,_Fld4125 [СтраховойНомерПФР]
					,_Fld4126RRef [Пол]
					,_Fld4127 [МестоРождения]
					,_Fld4128RRef [ОсновноеИзображение]
					,_Fld4129 [МестоРожденияКодПоОКАТО]
					,_Fld4130RRef [ГруппаДоступаФизическогоЛица]
					,_Fld4131RRef [ЛьготаПриНачисленииПособий]
					,_Fld4132 [ИмеетНаучныеТруды]
					,_Fld4133 [ИмеетИзобретения]
					From _Reference283(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.СправочникиВыборка.ФизическиеЛица();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.ФизическиеЛица();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1?true:false;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1?true:false;
							Ссылка.Код = Читалка.GetString(4);
							Ссылка.Наименование = Читалка.GetString(5);
							Ссылка.ДатаРождения = Читалка.GetDateTime(6);
							Ссылка.ИНН = Читалка.GetString(7);
							Ссылка.КодИМНС = Читалка.GetString(8);
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.СтраховойНомерПФР = Читалка.GetString(10);
							Ссылка.Пол = V82.Перечисления/*Ссылка*/.ПолФизическихЛиц.ПустаяСсылка.Получить((byte[])Читалка.GetValue(11));
							Ссылка.МестоРождения = Читалка.GetString(12);
							//Ссылка.ОсновноеИзображение = new V82.СправочникиСсылка.ХранилищеДополнительнойИнформации((byte[])Читалка.GetValue(13));
							Ссылка.МестоРожденияКодПоОКАТО = Читалка.GetString(14);
							//Ссылка.ГруппаДоступаФизическогоЛица = new V82.СправочникиСсылка.ГруппыДоступаФизическихЛиц((byte[])Читалка.GetValue(15));
							Ссылка.ЛьготаПриНачисленииПособий = V82.Перечисления/*Ссылка*/.ВидыЛьготПриНачисленииБольничных.ПустаяСсылка.Получить((byte[])Читалка.GetValue(16));
							Ссылка.ИмеетНаучныеТруды = ((byte[])Читалка.GetValue(17))[0]==1?true:false;
							Ссылка.ИмеетИзобретения = ((byte[])Читалка.GetValue(18))[0]==1?true:false;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.ФизическиеЛица ВыбратьПоКоду(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld4121 [ДатаРождения]
					,_Fld4122 [ИНН]
					,_Fld4123 [КодИМНС]
					,_Fld4124 [Комментарий]
					,_Fld4125 [СтраховойНомерПФР]
					,_Fld4126RRef [Пол]
					,_Fld4127 [МестоРождения]
					,_Fld4128RRef [ОсновноеИзображение]
					,_Fld4129 [МестоРожденияКодПоОКАТО]
					,_Fld4130RRef [ГруппаДоступаФизическогоЛица]
					,_Fld4131RRef [ЛьготаПриНачисленииПособий]
					,_Fld4132 [ИмеетНаучныеТруды]
					,_Fld4133 [ИмеетИзобретения]
					From _Reference283(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.СправочникиВыборка.ФизическиеЛица();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.ФизическиеЛица();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1?true:false;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1?true:false;
							Ссылка.Код = Читалка.GetString(4);
							Ссылка.Наименование = Читалка.GetString(5);
							Ссылка.ДатаРождения = Читалка.GetDateTime(6);
							Ссылка.ИНН = Читалка.GetString(7);
							Ссылка.КодИМНС = Читалка.GetString(8);
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.СтраховойНомерПФР = Читалка.GetString(10);
							Ссылка.Пол = V82.Перечисления/*Ссылка*/.ПолФизическихЛиц.ПустаяСсылка.Получить((byte[])Читалка.GetValue(11));
							Ссылка.МестоРождения = Читалка.GetString(12);
							//Ссылка.ОсновноеИзображение = new V82.СправочникиСсылка.ХранилищеДополнительнойИнформации((byte[])Читалка.GetValue(13));
							Ссылка.МестоРожденияКодПоОКАТО = Читалка.GetString(14);
							//Ссылка.ГруппаДоступаФизическогоЛица = new V82.СправочникиСсылка.ГруппыДоступаФизическихЛиц((byte[])Читалка.GetValue(15));
							Ссылка.ЛьготаПриНачисленииПособий = V82.Перечисления/*Ссылка*/.ВидыЛьготПриНачисленииБольничных.ПустаяСсылка.Получить((byte[])Читалка.GetValue(16));
							Ссылка.ИмеетНаучныеТруды = ((byte[])Читалка.GetValue(17))[0]==1?true:false;
							Ссылка.ИмеетИзобретения = ((byte[])Читалка.GetValue(18))[0]==1?true:false;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.ФизическиеЛица ВыбратьПоНаименованию(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld4121 [ДатаРождения]
					,_Fld4122 [ИНН]
					,_Fld4123 [КодИМНС]
					,_Fld4124 [Комментарий]
					,_Fld4125 [СтраховойНомерПФР]
					,_Fld4126RRef [Пол]
					,_Fld4127 [МестоРождения]
					,_Fld4128RRef [ОсновноеИзображение]
					,_Fld4129 [МестоРожденияКодПоОКАТО]
					,_Fld4130RRef [ГруппаДоступаФизическогоЛица]
					,_Fld4131RRef [ЛьготаПриНачисленииПособий]
					,_Fld4132 [ИмеетНаучныеТруды]
					,_Fld4133 [ИмеетИзобретения]
					From _Reference283(NOLOCK)
					Where _Description between @Мин and @Макс
					Order by _Description", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.СправочникиВыборка.ФизическиеЛица();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.ФизическиеЛица();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1?true:false;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1?true:false;
							Ссылка.Код = Читалка.GetString(4);
							Ссылка.Наименование = Читалка.GetString(5);
							Ссылка.ДатаРождения = Читалка.GetDateTime(6);
							Ссылка.ИНН = Читалка.GetString(7);
							Ссылка.КодИМНС = Читалка.GetString(8);
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.СтраховойНомерПФР = Читалка.GetString(10);
							Ссылка.Пол = V82.Перечисления/*Ссылка*/.ПолФизическихЛиц.ПустаяСсылка.Получить((byte[])Читалка.GetValue(11));
							Ссылка.МестоРождения = Читалка.GetString(12);
							//Ссылка.ОсновноеИзображение = new V82.СправочникиСсылка.ХранилищеДополнительнойИнформации((byte[])Читалка.GetValue(13));
							Ссылка.МестоРожденияКодПоОКАТО = Читалка.GetString(14);
							//Ссылка.ГруппаДоступаФизическогоЛица = new V82.СправочникиСсылка.ГруппыДоступаФизическихЛиц((byte[])Читалка.GetValue(15));
							Ссылка.ЛьготаПриНачисленииПособий = V82.Перечисления/*Ссылка*/.ВидыЛьготПриНачисленииБольничных.ПустаяСсылка.Получить((byte[])Читалка.GetValue(16));
							Ссылка.ИмеетНаучныеТруды = ((byte[])Читалка.GetValue(17))[0]==1?true:false;
							Ссылка.ИмеетИзобретения = ((byte[])Читалка.GetValue(18))[0]==1?true:false;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.ФизическиеЛица СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld4121 [ДатаРождения]
					,_Fld4122 [ИНН]
					,_Fld4123 [КодИМНС]
					,_Fld4124 [Комментарий]
					,_Fld4125 [СтраховойНомерПФР]
					,_Fld4126RRef [Пол]
					,_Fld4127 [МестоРождения]
					,_Fld4128RRef [ОсновноеИзображение]
					,_Fld4129 [МестоРожденияКодПоОКАТО]
					,_Fld4130RRef [ГруппаДоступаФизическогоЛица]
					,_Fld4131RRef [ЛьготаПриНачисленииПособий]
					,_Fld4132 [ИмеетНаучныеТруды]
					,_Fld4133 [ИмеетИзобретения]
					From _Reference283(NOLOCK)";
					var Выборка = new V82.СправочникиВыборка.ФизическиеЛица();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.ФизическиеЛица();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1?true:false;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1?true:false;
							Ссылка.Код = Читалка.GetString(4);
							Ссылка.Наименование = Читалка.GetString(5);
							Ссылка.ДатаРождения = Читалка.GetDateTime(6);
							Ссылка.ИНН = Читалка.GetString(7);
							Ссылка.КодИМНС = Читалка.GetString(8);
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.СтраховойНомерПФР = Читалка.GetString(10);
							Ссылка.Пол = V82.Перечисления/*Ссылка*/.ПолФизическихЛиц.ПустаяСсылка.Получить((byte[])Читалка.GetValue(11));
							Ссылка.МестоРождения = Читалка.GetString(12);
							//Ссылка.ОсновноеИзображение = new V82.СправочникиСсылка.ХранилищеДополнительнойИнформации((byte[])Читалка.GetValue(13));
							Ссылка.МестоРожденияКодПоОКАТО = Читалка.GetString(14);
							//Ссылка.ГруппаДоступаФизическогоЛица = new V82.СправочникиСсылка.ГруппыДоступаФизическихЛиц((byte[])Читалка.GetValue(15));
							Ссылка.ЛьготаПриНачисленииПособий = V82.Перечисления/*Ссылка*/.ВидыЛьготПриНачисленииБольничных.ПустаяСсылка.Получить((byte[])Читалка.GetValue(16));
							Ссылка.ИмеетНаучныеТруды = ((byte[])Читалка.GetValue(17))[0]==1?true:false;
							Ссылка.ИмеетИзобретения = ((byte[])Читалка.GetValue(18))[0]==1?true:false;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.ФизическиеЛица СтраницаПоКоду(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld4121 [ДатаРождения]
					,_Fld4122 [ИНН]
					,_Fld4123 [КодИМНС]
					,_Fld4124 [Комментарий]
					,_Fld4125 [СтраховойНомерПФР]
					,_Fld4126RRef [Пол]
					,_Fld4127 [МестоРождения]
					,_Fld4128RRef [ОсновноеИзображение]
					,_Fld4129 [МестоРожденияКодПоОКАТО]
					,_Fld4130RRef [ГруппаДоступаФизическогоЛица]
					,_Fld4131RRef [ЛьготаПриНачисленииПособий]
					,_Fld4132 [ИмеетНаучныеТруды]
					,_Fld4133 [ИмеетИзобретения]
					From _Reference283(NOLOCK)";
					var Выборка = new V82.СправочникиВыборка.ФизическиеЛица();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.ФизическиеЛица();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1?true:false;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1?true:false;
							Ссылка.Код = Читалка.GetString(4);
							Ссылка.Наименование = Читалка.GetString(5);
							Ссылка.ДатаРождения = Читалка.GetDateTime(6);
							Ссылка.ИНН = Читалка.GetString(7);
							Ссылка.КодИМНС = Читалка.GetString(8);
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.СтраховойНомерПФР = Читалка.GetString(10);
							Ссылка.Пол = V82.Перечисления/*Ссылка*/.ПолФизическихЛиц.ПустаяСсылка.Получить((byte[])Читалка.GetValue(11));
							Ссылка.МестоРождения = Читалка.GetString(12);
							//Ссылка.ОсновноеИзображение = new V82.СправочникиСсылка.ХранилищеДополнительнойИнформации((byte[])Читалка.GetValue(13));
							Ссылка.МестоРожденияКодПоОКАТО = Читалка.GetString(14);
							//Ссылка.ГруппаДоступаФизическогоЛица = new V82.СправочникиСсылка.ГруппыДоступаФизическихЛиц((byte[])Читалка.GetValue(15));
							Ссылка.ЛьготаПриНачисленииПособий = V82.Перечисления/*Ссылка*/.ВидыЛьготПриНачисленииБольничных.ПустаяСсылка.Получить((byte[])Читалка.GetValue(16));
							Ссылка.ИмеетНаучныеТруды = ((byte[])Читалка.GetValue(17))[0]==1?true:false;
							Ссылка.ИмеетИзобретения = ((byte[])Читалка.GetValue(18))[0]==1?true:false;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.ФизическиеЛица СтраницаПоНаименованию(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld4121 [ДатаРождения]
					,_Fld4122 [ИНН]
					,_Fld4123 [КодИМНС]
					,_Fld4124 [Комментарий]
					,_Fld4125 [СтраховойНомерПФР]
					,_Fld4126RRef [Пол]
					,_Fld4127 [МестоРождения]
					,_Fld4128RRef [ОсновноеИзображение]
					,_Fld4129 [МестоРожденияКодПоОКАТО]
					,_Fld4130RRef [ГруппаДоступаФизическогоЛица]
					,_Fld4131RRef [ЛьготаПриНачисленииПособий]
					,_Fld4132 [ИмеетНаучныеТруды]
					,_Fld4133 [ИмеетИзобретения]
					From _Reference283(NOLOCK)";
					var Выборка = new V82.СправочникиВыборка.ФизическиеЛица();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.ФизическиеЛица();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1?true:false;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1?true:false;
							Ссылка.Код = Читалка.GetString(4);
							Ссылка.Наименование = Читалка.GetString(5);
							Ссылка.ДатаРождения = Читалка.GetDateTime(6);
							Ссылка.ИНН = Читалка.GetString(7);
							Ссылка.КодИМНС = Читалка.GetString(8);
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.СтраховойНомерПФР = Читалка.GetString(10);
							Ссылка.Пол = V82.Перечисления/*Ссылка*/.ПолФизическихЛиц.ПустаяСсылка.Получить((byte[])Читалка.GetValue(11));
							Ссылка.МестоРождения = Читалка.GetString(12);
							//Ссылка.ОсновноеИзображение = new V82.СправочникиСсылка.ХранилищеДополнительнойИнформации((byte[])Читалка.GetValue(13));
							Ссылка.МестоРожденияКодПоОКАТО = Читалка.GetString(14);
							//Ссылка.ГруппаДоступаФизическогоЛица = new V82.СправочникиСсылка.ГруппыДоступаФизическихЛиц((byte[])Читалка.GetValue(15));
							Ссылка.ЛьготаПриНачисленииПособий = V82.Перечисления/*Ссылка*/.ВидыЛьготПриНачисленииБольничных.ПустаяСсылка.Получить((byte[])Читалка.GetValue(16));
							Ссылка.ИмеетНаучныеТруды = ((byte[])Читалка.GetValue(17))[0]==1?true:false;
							Ссылка.ИмеетИзобретения = ((byte[])Читалка.GetValue(18))[0]==1?true:false;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.СправочникиОбъект.ФизическиеЛица СоздатьЭлемент()
		{
			var Объект = new V82.СправочникиОбъект.ФизическиеЛица();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.ЭтоГруппа = false;
			Объект.ИНН = "";
			Объект.КодИМНС = "";
			Объект.Комментарий = "";
			Объект.СтраховойНомерПФР = "";
			Объект.МестоРождения = "";
			Объект.МестоРожденияКодПоОКАТО = "";
			Объект.Пол = V82.Перечисления/*Ссылка*/.ПолФизическихЛиц.ПустаяСсылка;
			Объект.ОсновноеИзображение = new V82.СправочникиСсылка.ХранилищеДополнительнойИнформации();
			Объект.ГруппаДоступаФизическогоЛица = new V82.СправочникиСсылка.ГруппыДоступаФизическихЛиц();
			Объект.ЛьготаПриНачисленииПособий = V82.Перечисления/*Ссылка*/.ВидыЛьготПриНачисленииБольничных.ПустаяСсылка;
			return Объект;
		}
	}
}