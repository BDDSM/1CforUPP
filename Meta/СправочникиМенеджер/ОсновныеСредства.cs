
using System;
using System.Data.SqlClient;
using V82;
using V82.СправочникиСсылка;
using V82.Справочники;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Справочники//Менеджер
{
	///<summary>
	///(Общ)
	///</summary>
	public partial class ОсновныеСредства:СправочникМенеджер
	{
		
		public static СправочникиСсылка.ОсновныеСредства НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_ParentIDRRef [Родитель]
					,_Folder [ЭтоГруппа]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld1584 [Автотранспорт]
					,_Fld18594 [АдресМестонахождения]
					,_Fld1581RRef [АмортизационнаяГруппа]
					,_Fld1579RRef [ГруппаОС]
					,_Fld1578 [ДатаВыпуска]
					,_Fld1577 [ЗаводскойНомер]
					,_Fld1575 [Изготовитель]
					,_Fld1580RRef [КодПоОКОФ]
					,_Fld18595 [КодРегиона]
					,_Fld1583 [Комментарий]
					,_Fld1574 [НаименованиеПолное]
					,_Fld1576 [НомерПаспорта]
					,_Fld26568 [Помещение]
					,_Fld26569 [КадастровыйНомер]
					,_Fld26570 [УсловныйНомер]
					,_Fld26571RRef [НазначениеПомещения]
					From _Reference111(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.ОсновныеСредства();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Родитель = V82.СправочникиСсылка.ОсновныеСредства.ВзятьИзКэша((byte[])Читалка.GetValue(4));
							Ссылка.ЭтоГруппа = ((byte[])Читалка.GetValue(5))[0]==0;
							Ссылка.Код = Читалка.GetString(6);
							Ссылка.Наименование = Читалка.GetString(7);
							if(!Ссылка.ЭтоГруппа)
							{
								Ссылка.Автотранспорт = ((byte[])Читалка.GetValue(8))[0]==1;
								Ссылка.АдресМестонахождения = Читалка.GetString(9);
								Ссылка.АмортизационнаяГруппа = V82.Перечисления/*Ссылка*/.АмортизационныеГруппы.ПустаяСсылка.Получить((byte[])Читалка.GetValue(10));
								Ссылка.ГруппаОС = V82.Перечисления/*Ссылка*/.ГруппыОС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(11));
								Ссылка.ДатаВыпуска = Читалка.GetDateTime(12);
								Ссылка.ЗаводскойНомер = Читалка.GetString(13);
								Ссылка.Изготовитель = Читалка.GetString(14);
								Ссылка.КодПоОКОФ = V82.СправочникиСсылка.ОбщероссийскийКлассификаторОсновныхФондов.ВзятьИзКэша((byte[])Читалка.GetValue(15));
								Ссылка.КодРегиона = Читалка.GetString(16);
								Ссылка.Комментарий = Читалка.GetString(17);
								Ссылка.НаименованиеПолное = Читалка.GetString(18);
								Ссылка.НомерПаспорта = Читалка.GetString(19);
								Ссылка.Помещение = ((byte[])Читалка.GetValue(20))[0]==1;
								Ссылка.КадастровыйНомер = Читалка.GetString(21);
								Ссылка.УсловныйНомер = Читалка.GetString(22);
								Ссылка.НазначениеПомещения = V82.Перечисления/*Ссылка*/.НазначенияПомещения.ПустаяСсылка.Получить((byte[])Читалка.GetValue(23));
							}
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static СправочникиСсылка.ОсновныеСредства НайтиПоКоду(string Код)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_ParentIDRRef [Родитель]
					,_Folder [ЭтоГруппа]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld1584 [Автотранспорт]
					,_Fld18594 [АдресМестонахождения]
					,_Fld1581RRef [АмортизационнаяГруппа]
					,_Fld1579RRef [ГруппаОС]
					,_Fld1578 [ДатаВыпуска]
					,_Fld1577 [ЗаводскойНомер]
					,_Fld1575 [Изготовитель]
					,_Fld1580RRef [КодПоОКОФ]
					,_Fld18595 [КодРегиона]
					,_Fld1583 [Комментарий]
					,_Fld1574 [НаименованиеПолное]
					,_Fld1576 [НомерПаспорта]
					,_Fld26568 [Помещение]
					,_Fld26569 [КадастровыйНомер]
					,_Fld26570 [УсловныйНомер]
					,_Fld26571RRef [НазначениеПомещения]
					From _Reference111(NOLOCK)
					Where _Code=@Код";
					Команда.Parameters.AddWithValue("Код", Код);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.ОсновныеСредства();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Родитель = V82.СправочникиСсылка.ОсновныеСредства.ВзятьИзКэша((byte[])Читалка.GetValue(4));
							Ссылка.ЭтоГруппа = ((byte[])Читалка.GetValue(5))[0]==0;
							Ссылка.Код = Читалка.GetString(6);
							Ссылка.Наименование = Читалка.GetString(7);
							if(!Ссылка.ЭтоГруппа)
							{
								Ссылка.Автотранспорт = ((byte[])Читалка.GetValue(8))[0]==1;
								Ссылка.АдресМестонахождения = Читалка.GetString(9);
								Ссылка.АмортизационнаяГруппа = V82.Перечисления/*Ссылка*/.АмортизационныеГруппы.ПустаяСсылка.Получить((byte[])Читалка.GetValue(10));
								Ссылка.ГруппаОС = V82.Перечисления/*Ссылка*/.ГруппыОС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(11));
								Ссылка.ДатаВыпуска = Читалка.GetDateTime(12);
								Ссылка.ЗаводскойНомер = Читалка.GetString(13);
								Ссылка.Изготовитель = Читалка.GetString(14);
								Ссылка.КодПоОКОФ = V82.СправочникиСсылка.ОбщероссийскийКлассификаторОсновныхФондов.ВзятьИзКэша((byte[])Читалка.GetValue(15));
								Ссылка.КодРегиона = Читалка.GetString(16);
								Ссылка.Комментарий = Читалка.GetString(17);
								Ссылка.НаименованиеПолное = Читалка.GetString(18);
								Ссылка.НомерПаспорта = Читалка.GetString(19);
								Ссылка.Помещение = ((byte[])Читалка.GetValue(20))[0]==1;
								Ссылка.КадастровыйНомер = Читалка.GetString(21);
								Ссылка.УсловныйНомер = Читалка.GetString(22);
								Ссылка.НазначениеПомещения = V82.Перечисления/*Ссылка*/.НазначенияПомещения.ПустаяСсылка.Получить((byte[])Читалка.GetValue(23));
							}
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static СправочникиВыборка.ОсновныеСредства Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_ParentIDRRef [Родитель]
					,_Folder [ЭтоГруппа]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld1584 [Автотранспорт]
					,_Fld18594 [АдресМестонахождения]
					,_Fld1581RRef [АмортизационнаяГруппа]
					,_Fld1579RRef [ГруппаОС]
					,_Fld1578 [ДатаВыпуска]
					,_Fld1577 [ЗаводскойНомер]
					,_Fld1575 [Изготовитель]
					,_Fld1580RRef [КодПоОКОФ]
					,_Fld18595 [КодРегиона]
					,_Fld1583 [Комментарий]
					,_Fld1574 [НаименованиеПолное]
					,_Fld1576 [НомерПаспорта]
					,_Fld26568 [Помещение]
					,_Fld26569 [КадастровыйНомер]
					,_Fld26570 [УсловныйНомер]
					,_Fld26571RRef [НазначениеПомещения]
					From _Reference111(NOLOCK)  Where _Folder = 0x01 ";
					var Выборка = new V82.СправочникиВыборка.ОсновныеСредства();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.ОсновныеСредства();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Родитель = V82.СправочникиСсылка.ОсновныеСредства.ВзятьИзКэша((byte[])Читалка.GetValue(4));
							Ссылка.ЭтоГруппа = ((byte[])Читалка.GetValue(5))[0]==0;
							Ссылка.Код = Читалка.GetString(6);
							Ссылка.Наименование = Читалка.GetString(7);
							if(!Ссылка.ЭтоГруппа)
							{
								Ссылка.Автотранспорт = ((byte[])Читалка.GetValue(8))[0]==1;
								Ссылка.АдресМестонахождения = Читалка.GetString(9);
								Ссылка.АмортизационнаяГруппа = V82.Перечисления/*Ссылка*/.АмортизационныеГруппы.ПустаяСсылка.Получить((byte[])Читалка.GetValue(10));
								Ссылка.ГруппаОС = V82.Перечисления/*Ссылка*/.ГруппыОС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(11));
								Ссылка.ДатаВыпуска = Читалка.GetDateTime(12);
								Ссылка.ЗаводскойНомер = Читалка.GetString(13);
								Ссылка.Изготовитель = Читалка.GetString(14);
								Ссылка.КодПоОКОФ = V82.СправочникиСсылка.ОбщероссийскийКлассификаторОсновныхФондов.ВзятьИзКэша((byte[])Читалка.GetValue(15));
								Ссылка.КодРегиона = Читалка.GetString(16);
								Ссылка.Комментарий = Читалка.GetString(17);
								Ссылка.НаименованиеПолное = Читалка.GetString(18);
								Ссылка.НомерПаспорта = Читалка.GetString(19);
								Ссылка.Помещение = ((byte[])Читалка.GetValue(20))[0]==1;
								Ссылка.КадастровыйНомер = Читалка.GetString(21);
								Ссылка.УсловныйНомер = Читалка.GetString(22);
								Ссылка.НазначениеПомещения = V82.Перечисления/*Ссылка*/.НазначенияПомещения.ПустаяСсылка.Получить((byte[])Читалка.GetValue(23));
							}
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.ОсновныеСредства ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_ParentIDRRef [Родитель]
					,_Folder [ЭтоГруппа]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld1584 [Автотранспорт]
					,_Fld18594 [АдресМестонахождения]
					,_Fld1581RRef [АмортизационнаяГруппа]
					,_Fld1579RRef [ГруппаОС]
					,_Fld1578 [ДатаВыпуска]
					,_Fld1577 [ЗаводскойНомер]
					,_Fld1575 [Изготовитель]
					,_Fld1580RRef [КодПоОКОФ]
					,_Fld18595 [КодРегиона]
					,_Fld1583 [Комментарий]
					,_Fld1574 [НаименованиеПолное]
					,_Fld1576 [НомерПаспорта]
					,_Fld26568 [Помещение]
					,_Fld26569 [КадастровыйНомер]
					,_Fld26570 [УсловныйНомер]
					,_Fld26571RRef [НазначениеПомещения]
					From _Reference111(NOLOCK)
					Where _IDRRef between @Мин and @Макс  -- and _Folder = 0x01 
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.СправочникиВыборка.ОсновныеСредства();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.ОсновныеСредства();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Родитель = V82.СправочникиСсылка.ОсновныеСредства.ВзятьИзКэша((byte[])Читалка.GetValue(4));
							Ссылка.ЭтоГруппа = ((byte[])Читалка.GetValue(5))[0]==0;
							Ссылка.Код = Читалка.GetString(6);
							Ссылка.Наименование = Читалка.GetString(7);
							if(!Ссылка.ЭтоГруппа)
							{
								Ссылка.Автотранспорт = ((byte[])Читалка.GetValue(8))[0]==1;
								Ссылка.АдресМестонахождения = Читалка.GetString(9);
								Ссылка.АмортизационнаяГруппа = V82.Перечисления/*Ссылка*/.АмортизационныеГруппы.ПустаяСсылка.Получить((byte[])Читалка.GetValue(10));
								Ссылка.ГруппаОС = V82.Перечисления/*Ссылка*/.ГруппыОС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(11));
								Ссылка.ДатаВыпуска = Читалка.GetDateTime(12);
								Ссылка.ЗаводскойНомер = Читалка.GetString(13);
								Ссылка.Изготовитель = Читалка.GetString(14);
								Ссылка.КодПоОКОФ = V82.СправочникиСсылка.ОбщероссийскийКлассификаторОсновныхФондов.ВзятьИзКэша((byte[])Читалка.GetValue(15));
								Ссылка.КодРегиона = Читалка.GetString(16);
								Ссылка.Комментарий = Читалка.GetString(17);
								Ссылка.НаименованиеПолное = Читалка.GetString(18);
								Ссылка.НомерПаспорта = Читалка.GetString(19);
								Ссылка.Помещение = ((byte[])Читалка.GetValue(20))[0]==1;
								Ссылка.КадастровыйНомер = Читалка.GetString(21);
								Ссылка.УсловныйНомер = Читалка.GetString(22);
								Ссылка.НазначениеПомещения = V82.Перечисления/*Ссылка*/.НазначенияПомещения.ПустаяСсылка.Получить((byte[])Читалка.GetValue(23));
							}
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.ОсновныеСредства ВыбратьПоКоду(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_ParentIDRRef [Родитель]
					,_Folder [ЭтоГруппа]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld1584 [Автотранспорт]
					,_Fld18594 [АдресМестонахождения]
					,_Fld1581RRef [АмортизационнаяГруппа]
					,_Fld1579RRef [ГруппаОС]
					,_Fld1578 [ДатаВыпуска]
					,_Fld1577 [ЗаводскойНомер]
					,_Fld1575 [Изготовитель]
					,_Fld1580RRef [КодПоОКОФ]
					,_Fld18595 [КодРегиона]
					,_Fld1583 [Комментарий]
					,_Fld1574 [НаименованиеПолное]
					,_Fld1576 [НомерПаспорта]
					,_Fld26568 [Помещение]
					,_Fld26569 [КадастровыйНомер]
					,_Fld26570 [УсловныйНомер]
					,_Fld26571RRef [НазначениеПомещения]
					From _Reference111(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.СправочникиВыборка.ОсновныеСредства();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.ОсновныеСредства();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Родитель = V82.СправочникиСсылка.ОсновныеСредства.ВзятьИзКэша((byte[])Читалка.GetValue(4));
							Ссылка.ЭтоГруппа = ((byte[])Читалка.GetValue(5))[0]==0;
							Ссылка.Код = Читалка.GetString(6);
							Ссылка.Наименование = Читалка.GetString(7);
							if(!Ссылка.ЭтоГруппа)
							{
								Ссылка.Автотранспорт = ((byte[])Читалка.GetValue(8))[0]==1;
								Ссылка.АдресМестонахождения = Читалка.GetString(9);
								Ссылка.АмортизационнаяГруппа = V82.Перечисления/*Ссылка*/.АмортизационныеГруппы.ПустаяСсылка.Получить((byte[])Читалка.GetValue(10));
								Ссылка.ГруппаОС = V82.Перечисления/*Ссылка*/.ГруппыОС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(11));
								Ссылка.ДатаВыпуска = Читалка.GetDateTime(12);
								Ссылка.ЗаводскойНомер = Читалка.GetString(13);
								Ссылка.Изготовитель = Читалка.GetString(14);
								Ссылка.КодПоОКОФ = V82.СправочникиСсылка.ОбщероссийскийКлассификаторОсновныхФондов.ВзятьИзКэша((byte[])Читалка.GetValue(15));
								Ссылка.КодРегиона = Читалка.GetString(16);
								Ссылка.Комментарий = Читалка.GetString(17);
								Ссылка.НаименованиеПолное = Читалка.GetString(18);
								Ссылка.НомерПаспорта = Читалка.GetString(19);
								Ссылка.Помещение = ((byte[])Читалка.GetValue(20))[0]==1;
								Ссылка.КадастровыйНомер = Читалка.GetString(21);
								Ссылка.УсловныйНомер = Читалка.GetString(22);
								Ссылка.НазначениеПомещения = V82.Перечисления/*Ссылка*/.НазначенияПомещения.ПустаяСсылка.Получить((byte[])Читалка.GetValue(23));
							}
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.ОсновныеСредства ВыбратьПоНаименованию(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_ParentIDRRef [Родитель]
					,_Folder [ЭтоГруппа]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld1584 [Автотранспорт]
					,_Fld18594 [АдресМестонахождения]
					,_Fld1581RRef [АмортизационнаяГруппа]
					,_Fld1579RRef [ГруппаОС]
					,_Fld1578 [ДатаВыпуска]
					,_Fld1577 [ЗаводскойНомер]
					,_Fld1575 [Изготовитель]
					,_Fld1580RRef [КодПоОКОФ]
					,_Fld18595 [КодРегиона]
					,_Fld1583 [Комментарий]
					,_Fld1574 [НаименованиеПолное]
					,_Fld1576 [НомерПаспорта]
					,_Fld26568 [Помещение]
					,_Fld26569 [КадастровыйНомер]
					,_Fld26570 [УсловныйНомер]
					,_Fld26571RRef [НазначениеПомещения]
					From _Reference111(NOLOCK)
					Where _Description between @Мин and @Макс
					Order by _Description", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.СправочникиВыборка.ОсновныеСредства();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.ОсновныеСредства();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Родитель = V82.СправочникиСсылка.ОсновныеСредства.ВзятьИзКэша((byte[])Читалка.GetValue(4));
							Ссылка.ЭтоГруппа = ((byte[])Читалка.GetValue(5))[0]==0;
							Ссылка.Код = Читалка.GetString(6);
							Ссылка.Наименование = Читалка.GetString(7);
							if(!Ссылка.ЭтоГруппа)
							{
								Ссылка.Автотранспорт = ((byte[])Читалка.GetValue(8))[0]==1;
								Ссылка.АдресМестонахождения = Читалка.GetString(9);
								Ссылка.АмортизационнаяГруппа = V82.Перечисления/*Ссылка*/.АмортизационныеГруппы.ПустаяСсылка.Получить((byte[])Читалка.GetValue(10));
								Ссылка.ГруппаОС = V82.Перечисления/*Ссылка*/.ГруппыОС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(11));
								Ссылка.ДатаВыпуска = Читалка.GetDateTime(12);
								Ссылка.ЗаводскойНомер = Читалка.GetString(13);
								Ссылка.Изготовитель = Читалка.GetString(14);
								Ссылка.КодПоОКОФ = V82.СправочникиСсылка.ОбщероссийскийКлассификаторОсновныхФондов.ВзятьИзКэша((byte[])Читалка.GetValue(15));
								Ссылка.КодРегиона = Читалка.GetString(16);
								Ссылка.Комментарий = Читалка.GetString(17);
								Ссылка.НаименованиеПолное = Читалка.GetString(18);
								Ссылка.НомерПаспорта = Читалка.GetString(19);
								Ссылка.Помещение = ((byte[])Читалка.GetValue(20))[0]==1;
								Ссылка.КадастровыйНомер = Читалка.GetString(21);
								Ссылка.УсловныйНомер = Читалка.GetString(22);
								Ссылка.НазначениеПомещения = V82.Перечисления/*Ссылка*/.НазначенияПомещения.ПустаяСсылка.Получить((byte[])Читалка.GetValue(23));
							}
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.ОсновныеСредства СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_ParentIDRRef [Родитель]
					,_Folder [ЭтоГруппа]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld1584 [Автотранспорт]
					,_Fld18594 [АдресМестонахождения]
					,_Fld1581RRef [АмортизационнаяГруппа]
					,_Fld1579RRef [ГруппаОС]
					,_Fld1578 [ДатаВыпуска]
					,_Fld1577 [ЗаводскойНомер]
					,_Fld1575 [Изготовитель]
					,_Fld1580RRef [КодПоОКОФ]
					,_Fld18595 [КодРегиона]
					,_Fld1583 [Комментарий]
					,_Fld1574 [НаименованиеПолное]
					,_Fld1576 [НомерПаспорта]
					,_Fld26568 [Помещение]
					,_Fld26569 [КадастровыйНомер]
					,_Fld26570 [УсловныйНомер]
					,_Fld26571RRef [НазначениеПомещения]
					From _Reference111(NOLOCK)";
					var Выборка = new V82.СправочникиВыборка.ОсновныеСредства();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.ОсновныеСредства();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Родитель = V82.СправочникиСсылка.ОсновныеСредства.ВзятьИзКэша((byte[])Читалка.GetValue(4));
							Ссылка.ЭтоГруппа = ((byte[])Читалка.GetValue(5))[0]==0;
							Ссылка.Код = Читалка.GetString(6);
							Ссылка.Наименование = Читалка.GetString(7);
							if(!Ссылка.ЭтоГруппа)
							{
								Ссылка.Автотранспорт = ((byte[])Читалка.GetValue(8))[0]==1;
								Ссылка.АдресМестонахождения = Читалка.GetString(9);
								Ссылка.АмортизационнаяГруппа = V82.Перечисления/*Ссылка*/.АмортизационныеГруппы.ПустаяСсылка.Получить((byte[])Читалка.GetValue(10));
								Ссылка.ГруппаОС = V82.Перечисления/*Ссылка*/.ГруппыОС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(11));
								Ссылка.ДатаВыпуска = Читалка.GetDateTime(12);
								Ссылка.ЗаводскойНомер = Читалка.GetString(13);
								Ссылка.Изготовитель = Читалка.GetString(14);
								Ссылка.КодПоОКОФ = V82.СправочникиСсылка.ОбщероссийскийКлассификаторОсновныхФондов.ВзятьИзКэша((byte[])Читалка.GetValue(15));
								Ссылка.КодРегиона = Читалка.GetString(16);
								Ссылка.Комментарий = Читалка.GetString(17);
								Ссылка.НаименованиеПолное = Читалка.GetString(18);
								Ссылка.НомерПаспорта = Читалка.GetString(19);
								Ссылка.Помещение = ((byte[])Читалка.GetValue(20))[0]==1;
								Ссылка.КадастровыйНомер = Читалка.GetString(21);
								Ссылка.УсловныйНомер = Читалка.GetString(22);
								Ссылка.НазначениеПомещения = V82.Перечисления/*Ссылка*/.НазначенияПомещения.ПустаяСсылка.Получить((byte[])Читалка.GetValue(23));
							}
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.ОсновныеСредства СтраницаПоКоду(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_ParentIDRRef [Родитель]
					,_Folder [ЭтоГруппа]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld1584 [Автотранспорт]
					,_Fld18594 [АдресМестонахождения]
					,_Fld1581RRef [АмортизационнаяГруппа]
					,_Fld1579RRef [ГруппаОС]
					,_Fld1578 [ДатаВыпуска]
					,_Fld1577 [ЗаводскойНомер]
					,_Fld1575 [Изготовитель]
					,_Fld1580RRef [КодПоОКОФ]
					,_Fld18595 [КодРегиона]
					,_Fld1583 [Комментарий]
					,_Fld1574 [НаименованиеПолное]
					,_Fld1576 [НомерПаспорта]
					,_Fld26568 [Помещение]
					,_Fld26569 [КадастровыйНомер]
					,_Fld26570 [УсловныйНомер]
					,_Fld26571RRef [НазначениеПомещения]
					From _Reference111(NOLOCK)";
					var Выборка = new V82.СправочникиВыборка.ОсновныеСредства();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.ОсновныеСредства();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Родитель = V82.СправочникиСсылка.ОсновныеСредства.ВзятьИзКэша((byte[])Читалка.GetValue(4));
							Ссылка.ЭтоГруппа = ((byte[])Читалка.GetValue(5))[0]==0;
							Ссылка.Код = Читалка.GetString(6);
							Ссылка.Наименование = Читалка.GetString(7);
							if(!Ссылка.ЭтоГруппа)
							{
								Ссылка.Автотранспорт = ((byte[])Читалка.GetValue(8))[0]==1;
								Ссылка.АдресМестонахождения = Читалка.GetString(9);
								Ссылка.АмортизационнаяГруппа = V82.Перечисления/*Ссылка*/.АмортизационныеГруппы.ПустаяСсылка.Получить((byte[])Читалка.GetValue(10));
								Ссылка.ГруппаОС = V82.Перечисления/*Ссылка*/.ГруппыОС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(11));
								Ссылка.ДатаВыпуска = Читалка.GetDateTime(12);
								Ссылка.ЗаводскойНомер = Читалка.GetString(13);
								Ссылка.Изготовитель = Читалка.GetString(14);
								Ссылка.КодПоОКОФ = V82.СправочникиСсылка.ОбщероссийскийКлассификаторОсновныхФондов.ВзятьИзКэша((byte[])Читалка.GetValue(15));
								Ссылка.КодРегиона = Читалка.GetString(16);
								Ссылка.Комментарий = Читалка.GetString(17);
								Ссылка.НаименованиеПолное = Читалка.GetString(18);
								Ссылка.НомерПаспорта = Читалка.GetString(19);
								Ссылка.Помещение = ((byte[])Читалка.GetValue(20))[0]==1;
								Ссылка.КадастровыйНомер = Читалка.GetString(21);
								Ссылка.УсловныйНомер = Читалка.GetString(22);
								Ссылка.НазначениеПомещения = V82.Перечисления/*Ссылка*/.НазначенияПомещения.ПустаяСсылка.Получить((byte[])Читалка.GetValue(23));
							}
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static СправочникиВыборка.ОсновныеСредства СтраницаПоНаименованию(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_ParentIDRRef [Родитель]
					,_Folder [ЭтоГруппа]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld1584 [Автотранспорт]
					,_Fld18594 [АдресМестонахождения]
					,_Fld1581RRef [АмортизационнаяГруппа]
					,_Fld1579RRef [ГруппаОС]
					,_Fld1578 [ДатаВыпуска]
					,_Fld1577 [ЗаводскойНомер]
					,_Fld1575 [Изготовитель]
					,_Fld1580RRef [КодПоОКОФ]
					,_Fld18595 [КодРегиона]
					,_Fld1583 [Комментарий]
					,_Fld1574 [НаименованиеПолное]
					,_Fld1576 [НомерПаспорта]
					,_Fld26568 [Помещение]
					,_Fld26569 [КадастровыйНомер]
					,_Fld26570 [УсловныйНомер]
					,_Fld26571RRef [НазначениеПомещения]
					From _Reference111(NOLOCK)";
					var Выборка = new V82.СправочникиВыборка.ОсновныеСредства();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new СправочникиСсылка.ОсновныеСредства();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.Родитель = V82.СправочникиСсылка.ОсновныеСредства.ВзятьИзКэша((byte[])Читалка.GetValue(4));
							Ссылка.ЭтоГруппа = ((byte[])Читалка.GetValue(5))[0]==0;
							Ссылка.Код = Читалка.GetString(6);
							Ссылка.Наименование = Читалка.GetString(7);
							if(!Ссылка.ЭтоГруппа)
							{
								Ссылка.Автотранспорт = ((byte[])Читалка.GetValue(8))[0]==1;
								Ссылка.АдресМестонахождения = Читалка.GetString(9);
								Ссылка.АмортизационнаяГруппа = V82.Перечисления/*Ссылка*/.АмортизационныеГруппы.ПустаяСсылка.Получить((byte[])Читалка.GetValue(10));
								Ссылка.ГруппаОС = V82.Перечисления/*Ссылка*/.ГруппыОС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(11));
								Ссылка.ДатаВыпуска = Читалка.GetDateTime(12);
								Ссылка.ЗаводскойНомер = Читалка.GetString(13);
								Ссылка.Изготовитель = Читалка.GetString(14);
								Ссылка.КодПоОКОФ = V82.СправочникиСсылка.ОбщероссийскийКлассификаторОсновныхФондов.ВзятьИзКэша((byte[])Читалка.GetValue(15));
								Ссылка.КодРегиона = Читалка.GetString(16);
								Ссылка.Комментарий = Читалка.GetString(17);
								Ссылка.НаименованиеПолное = Читалка.GetString(18);
								Ссылка.НомерПаспорта = Читалка.GetString(19);
								Ссылка.Помещение = ((byte[])Читалка.GetValue(20))[0]==1;
								Ссылка.КадастровыйНомер = Читалка.GetString(21);
								Ссылка.УсловныйНомер = Читалка.GetString(22);
								Ссылка.НазначениеПомещения = V82.Перечисления/*Ссылка*/.НазначенияПомещения.ПустаяСсылка.Получить((byte[])Читалка.GetValue(23));
							}
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.СправочникиОбъект.ОсновныеСредства СоздатьЭлемент()
		{
			var Объект = new V82.СправочникиОбъект.ОсновныеСредства();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.ЭтоГруппа = false;
			Объект.АдресМестонахождения = "";
			Объект.ЗаводскойНомер = "";
			Объект.Изготовитель = "";
			Объект.КодРегиона = "";
			Объект.Комментарий = "";
			Объект.НаименованиеПолное = "";
			Объект.НомерПаспорта = "";
			Объект.КадастровыйНомер = "";
			Объект.УсловныйНомер = "";
			Объект.АмортизационнаяГруппа = V82.Перечисления/*Ссылка*/.АмортизационныеГруппы.ПустаяСсылка;
			Объект.ГруппаОС = V82.Перечисления/*Ссылка*/.ГруппыОС.ПустаяСсылка;
			Объект.КодПоОКОФ = new V82.СправочникиСсылка.ОбщероссийскийКлассификаторОсновныхФондов();
			Объект.НазначениеПомещения = V82.Перечисления/*Ссылка*/.НазначенияПомещения.ПустаяСсылка;
			return Объект;
		}
		
		public static V82.СправочникиОбъект.ОсновныеСредства СоздатьГруппу()
		{
			var Объект = new V82.СправочникиОбъект.ОсновныеСредства();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.ЭтоГруппа = true;
			Объект.АдресМестонахождения = "";
			Объект.ЗаводскойНомер = "";
			Объект.Изготовитель = "";
			Объект.КодРегиона = "";
			Объект.Комментарий = "";
			Объект.НаименованиеПолное = "";
			Объект.НомерПаспорта = "";
			Объект.КадастровыйНомер = "";
			Объект.УсловныйНомер = "";
			Объект.АмортизационнаяГруппа = V82.Перечисления/*Ссылка*/.АмортизационныеГруппы.ПустаяСсылка;
			Объект.ГруппаОС = V82.Перечисления/*Ссылка*/.ГруппыОС.ПустаяСсылка;
			Объект.КодПоОКОФ = new V82.СправочникиСсылка.ОбщероссийскийКлассификаторОсновныхФондов();
			Объект.НазначениеПомещения = V82.Перечисления/*Ссылка*/.НазначенияПомещения.ПустаяСсылка;
			return Объект;
		}
	}
}