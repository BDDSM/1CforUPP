
using System;
using System.Collections;
using System.IO;
using System.Data.SqlClient;
using System.Globalization;
using System.Runtime.Serialization;
using ProtoBuf;/*https://github.com/ServiceStack/ServiceStack/tree/master/lib*/
using ServiceStack.Text;/*https://github.com/ServiceStack/ServiceStack.Text*/
using V82;
using V82.ОбщиеОбъекты;
using V82.ДокументыСсылка;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.ДокументыСсылка
{
	///<summary>
	///(Общ)
	///</summary>
	[ProtoContract]
	[DataContract]
	public partial class ПлатежноеПоручениеВходящее:ДокументСсылка,IСериализаторProtoBuf,IСериализаторJson
	{
		public static readonly Guid ГуидКласса = new Guid("47459eca-57c7-4504-8b00-eae53783ce46");
		public static readonly DateTime ВерсияКласса = DateTime.ParseExact("20120928011955.000", new string[] {"yyyyMMddHHmmss.fff"}, CultureInfo.InvariantCulture, DateTimeStyles.None);
		public static readonly long КонтрольнаяСуммаКласса = 123;
		[DataMember]
		[ProtoMember(1)]
		public Guid Ссылка {get;set;}
		[DataMember]
		[ProtoMember(2)]
		public long Версия {get;set;}
		public string ВерсияДанных {get;set;}
		/*static хэш сумма состава и порядка реквизитов*/
		/*версия класса восстановленного из пакета*/
		public bool ПометкаУдаления {get;set;}
		public DateTime Дата {get;set;}
		public DateTime ПрефиксНомера {get;set;}
		public string/*11*/ Номер {get;set;}
		public bool Проведен {get;set;}
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.Валюты ВалютаДокумента {get;set;}//Валюта документа
		///<summary>
		///(Общ)
		///</summary>
		public V82.Перечисления/*Ссылка*/.ВидыОперацийПоступлениеБезналичныхДенежныхСредств ВидОперации {get;set;}//Вид операции
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.ДоговорыКонтрагентов ДоговорКонтрагента {get;set;}//Договор контрагента
		///<summary>
		///(Общ)
		///</summary>
		public object ДокументОснование {get;set;}//Документ основание
		///<summary>
		///(Общ) Любая дополнительная информация
		///</summary>
		public string/*(0)*/ Комментарий {get;set;}
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.Контрагенты Контрагент {get;set;}//Плательщик
		///<summary>
		///(Общ)
		///</summary>
		public string/*(30)*/ НомерВходящегоДокумента {get;set;}//Номер входящего документа
		///<summary>
		///(Общ)
		///</summary>
		public DateTime ДатаВходящегоДокумента {get;set;}//Дата входящего документа
		///<summary>
		///(Общ)
		///</summary>
		public bool Оплачено {get;set;}
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.Организации Организация {get;set;}
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.Пользователи Ответственный {get;set;}
		///<summary>
		///(Общ)
		///</summary>
		public bool ОтраженоВОперУчете {get;set;}//Отражено в опер. учете
		///<summary>
		///(Общ)
		///</summary>
		public bool ОтражатьВНалоговомУчете {get;set;}//Отражать в налоговом учете
		///<summary>
		///(Упр)
		///</summary>
		public DateTime ДатаОплаты {get;set;}//Дата оплаты
		///<summary>
		///(общ)
		///</summary>
		public bool ЧастичнаяОплата {get;set;}//По документу происходит оплата частями
		///<summary>
		///(Регл)
		///</summary>
		public V82.СправочникиСсылка.СтатьиДвиженияДенежныхСредств СтатьяДвиженияДенежныхСредств {get;set;}//Статья движения денежных средств
		///<summary>
		///(Регл)
		///</summary>
		public object СубконтоКт1 {get;set;}//Субконто Кт1
		///<summary>
		///(Общ)
		///</summary>
		public bool ОтражатьВБухгалтерскомУчете {get;set;}//Отражать в бухгалтерском учете
		///<summary>
		///(Регл)
		///</summary>
		public object СубконтоКт2 {get;set;}//Субконто Кт1
		///<summary>
		///(Регл)
		///</summary>
		public object СубконтоКт3 {get;set;}//Субконто Кт1
		///<summary>
		///(Общ)
		///</summary>
		public decimal/*(15.2)*/ СуммаДокумента {get;set;}//Сумма документа
		///<summary>
		///(Общ) Банковский счет контрагента
		///</summary>
		public V82.СправочникиСсылка.БанковскиеСчета СчетКонтрагента {get;set;}//Счет контрагента
		///<summary>
		///(Общ) Банковский счет организации
		///</summary>
		public V82.СправочникиСсылка.БанковскиеСчета СчетОрганизации {get;set;}//Счет организации
		///<summary>
		///(Регл)
		///</summary>
		public object СчетУчетаРасчетовСКонтрагентом {get;set;}//Счет учета расчетов с контрагентом
		public string/*(200)*/ Содержание_УСН {get;set;}//Содержание УСН
		public decimal/*(15.2)*/ Графа4_УСН {get;set;}//Графа4 УСН
		public decimal/*(15.2)*/ Графа5_УСН {get;set;}//Графа5 УСН
		public decimal/*(15.2)*/ Графа6_УСН {get;set;}//Графа5
		public decimal/*(15.2)*/ Графа7_УСН {get;set;}//Графа5
		public bool ДоходыЕНВД_УСН {get;set;}//ДоходыЕНВД
		public bool РасходыЕНВД_УСН {get;set;}//Расходы ЕНВД УСН
		public decimal/*(15.2)*/ НДС_УСН {get;set;}//НДС УСН
		public bool РучнаяНастройка_УСН {get;set;}//Ручная настройка УСН
		public V82.СправочникиСсылка.Подразделения Подразделение {get;set;}
		///<summary>
		///(Общ)
		///</summary>
		public string/*(0)*/ НазначениеПлатежа {get;set;}//Назначение платежа
		///<summary>
		///(Регл)
		///</summary>
		public object СчетУчетаРасчетовСКонтрагентомНУ {get;set;}//Счет учета расчетов с контрагентом НУ
		///<summary>
		///(Регл)
		///</summary>
		public object СубконтоНУКт1 {get;set;}//Субконто НУ Кт1
		///<summary>
		///(Регл)
		///</summary>
		public object СубконтоНУКт2 {get;set;}//Субконто НУ Кт2
		///<summary>
		///(Регл)
		///</summary>
		public object СубконтоНУКт3 {get;set;}//Субконто НУ Кт3
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.СтатьиЗатрат СтатьяЗатрат {get;set;}//Статья затрат
		///<summary>
		///(Упр)
		///</summary>
		public V82.СправочникиСсылка.НоменклатурныеГруппы НоменклатурнаяГруппа {get;set;}//Номенклатурная группа
		///<summary>
		///(Упр)
		///</summary>
		public V82.СправочникиСсылка.Подразделения ПодразделениеЗатраты {get;set;}//Подразделение (затраты)
		///<summary>
		///(Регл)
		///</summary>
		public V82.СправочникиСсылка.ПодразделенияОрганизаций ПодразделениеОрганизацииЗатраты {get;set;}//Подразделение организации затраты
		public decimal/*(15.2)*/ СуммаУслуг {get;set;}//Сумма услуг
		
		public ПлатежноеПоручениеВходящее()
		{
		}
		
		public ПлатежноеПоручениеВходящее(byte[] УникальныйИдентификатор)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Number [Номер]
					,_Fld8571RRef [ВалютаДокумента]
					,_Fld8572RRef [ВидОперации]
					,_Fld8569RRef [ДоговорКонтрагента]
					,_Fld8562_TYPE [ДокументОснование_Тип],_Fld8562_RRRef [ДокументОснование],_Fld8562_RTRef [ДокументОснование_Вид]
					,_Fld8577 [Комментарий]
					,_Fld8567RRef [Контрагент]
					,_Fld8564 [НомерВходящегоДокумента]
					,_Fld8563 [ДатаВходящегоДокумента]
					,_Fld8574 [Оплачено]
					,_Fld8565RRef [Организация]
					,_Fld8578RRef [Ответственный]
					,_Fld8573 [ОтраженоВОперУчете]
					,_Fld8585 [ОтражатьВНалоговомУчете]
					,_Fld8575 [ДатаОплаты]
					,_Fld8576 [ЧастичнаяОплата]
					,_Fld8580RRef [СтатьяДвиженияДенежныхСредств]
					,_Fld8582RRef [СубконтоКт1]
					,_Fld8579 [ОтражатьВБухгалтерскомУчете]
					,_Fld8583RRef [СубконтоКт2]
					,_Fld8584RRef [СубконтоКт3]
					,_Fld8570 [СуммаДокумента]
					,_Fld8568RRef [СчетКонтрагента]
					,_Fld8566RRef [СчетОрганизации]
					,_Fld8581RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld8586 [Содержание_УСН]
					,_Fld8587 [Графа4_УСН]
					,_Fld8588 [Графа5_УСН]
					,_Fld8589 [Графа6_УСН]
					,_Fld8590 [Графа7_УСН]
					,_Fld8591 [ДоходыЕНВД_УСН]
					,_Fld8592 [РасходыЕНВД_УСН]
					,_Fld8593 [НДС_УСН]
					,_Fld8594 [РучнаяНастройка_УСН]
					,_Fld8595RRef [Подразделение]
					,_Fld8596 [НазначениеПлатежа]
					,_Fld8597RRef [СчетУчетаРасчетовСКонтрагентомНУ]
					,_Fld8598RRef [СубконтоНУКт1]
					,_Fld8599RRef [СубконтоНУКт2]
					,_Fld8600RRef [СубконтоНУКт3]
					,_Fld8601RRef [СтатьяЗатрат]
					,_Fld8602RRef [НоменклатурнаяГруппа]
					,_Fld8603RRef [ПодразделениеЗатраты]
					,_Fld8604RRef [ПодразделениеОрганизацииЗатраты]
					,_Fld8605 [СуммаУслуг]
					From _Document388(NOLOCK)
					Where _IDRRef=@УникальныйИдентификатор";
					Команда.Parameters.AddWithValue("УникальныйИдентификатор", УникальныйИдентификатор);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							//ToDo: Читать нужно через GetValues()
							Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Номер = Читалка.GetString(3);
							ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Комментарий = Читалка.GetString(10);
							НомерВходящегоДокумента = Читалка.GetString(12);
							ДатаВходящегоДокумента = Читалка.GetDateTime(13);
							Оплачено = ((byte[])Читалка.GetValue(14))[0]==1;
							ОтраженоВОперУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							ДатаОплаты = Читалка.GetDateTime(19);
							ЧастичнаяОплата = ((byte[])Читалка.GetValue(20))[0]==1;
							ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(23))[0]==1;
							СуммаДокумента = Читалка.GetDecimal(26);
							Содержание_УСН = Читалка.GetString(30);
							Графа4_УСН = Читалка.GetDecimal(31);
							Графа5_УСН = Читалка.GetDecimal(32);
							Графа6_УСН = Читалка.GetDecimal(33);
							Графа7_УСН = Читалка.GetDecimal(34);
							ДоходыЕНВД_УСН = ((byte[])Читалка.GetValue(35))[0]==1;
							РасходыЕНВД_УСН = ((byte[])Читалка.GetValue(36))[0]==1;
							НДС_УСН = Читалка.GetDecimal(37);
							РучнаяНастройка_УСН = ((byte[])Читалка.GetValue(38))[0]==1;
							НазначениеПлатежа = Читалка.GetString(40);
							СуммаУслуг = Читалка.GetDecimal(49);
							//return Ссылка;
						}
						else
						{
							//return null;
						}
					}
				}
			}
		}
		
		public V82.ДокументыОбъект.ПлатежноеПоручениеВходящее  ПолучитьОбъект()
		{
			var Объект = new V82.ДокументыОбъект.ПлатежноеПоручениеВходящее();
			Объект._ЭтоНовый = false;
			Объект.Ссылка = Ссылка;
			Объект.Версия = Версия;
			Объект.ПометкаУдаления = ПометкаУдаления;
			Объект.Номер = Номер;
			Объект.ВалютаДокумента = ВалютаДокумента;
			Объект.ВидОперации = ВидОперации;
			Объект.ДоговорКонтрагента = ДоговорКонтрагента;
			Объект.ДокументОснование = ДокументОснование;
			Объект.Комментарий = Комментарий;
			Объект.Контрагент = Контрагент;
			Объект.НомерВходящегоДокумента = НомерВходящегоДокумента;
			Объект.ДатаВходящегоДокумента = ДатаВходящегоДокумента;
			Объект.Оплачено = Оплачено;
			Объект.Организация = Организация;
			Объект.Ответственный = Ответственный;
			Объект.ОтраженоВОперУчете = ОтраженоВОперУчете;
			Объект.ОтражатьВНалоговомУчете = ОтражатьВНалоговомУчете;
			Объект.ДатаОплаты = ДатаОплаты;
			Объект.ЧастичнаяОплата = ЧастичнаяОплата;
			Объект.СтатьяДвиженияДенежныхСредств = СтатьяДвиженияДенежныхСредств;
			Объект.СубконтоКт1 = СубконтоКт1;
			Объект.ОтражатьВБухгалтерскомУчете = ОтражатьВБухгалтерскомУчете;
			Объект.СубконтоКт2 = СубконтоКт2;
			Объект.СубконтоКт3 = СубконтоКт3;
			Объект.СуммаДокумента = СуммаДокумента;
			Объект.СчетКонтрагента = СчетКонтрагента;
			Объект.СчетОрганизации = СчетОрганизации;
			Объект.СчетУчетаРасчетовСКонтрагентом = СчетУчетаРасчетовСКонтрагентом;
			Объект.Содержание_УСН = Содержание_УСН;
			Объект.Графа4_УСН = Графа4_УСН;
			Объект.Графа5_УСН = Графа5_УСН;
			Объект.Графа6_УСН = Графа6_УСН;
			Объект.Графа7_УСН = Графа7_УСН;
			Объект.ДоходыЕНВД_УСН = ДоходыЕНВД_УСН;
			Объект.РасходыЕНВД_УСН = РасходыЕНВД_УСН;
			Объект.НДС_УСН = НДС_УСН;
			Объект.РучнаяНастройка_УСН = РучнаяНастройка_УСН;
			Объект.Подразделение = Подразделение;
			Объект.НазначениеПлатежа = НазначениеПлатежа;
			Объект.СчетУчетаРасчетовСКонтрагентомНУ = СчетУчетаРасчетовСКонтрагентомНУ;
			Объект.СубконтоНУКт1 = СубконтоНУКт1;
			Объект.СубконтоНУКт2 = СубконтоНУКт2;
			Объект.СубконтоНУКт3 = СубконтоНУКт3;
			Объект.СтатьяЗатрат = СтатьяЗатрат;
			Объект.НоменклатурнаяГруппа = НоменклатурнаяГруппа;
			Объект.ПодразделениеЗатраты = ПодразделениеЗатраты;
			Объект.ПодразделениеОрганизацииЗатраты = ПодразделениеОрганизацииЗатраты;
			Объект.СуммаУслуг = СуммаУслуг;
			return Объект;
		}
		
		private static readonly Hashtable Кэш = new Hashtable(1000);
		
		public static V82.ДокументыСсылка.ПлатежноеПоручениеВходящее ВзятьИзКэша(byte[] УникальныйИдентификатор)
		{
			var УИ = new Guid(УникальныйИдентификатор);
			if (Кэш.ContainsKey(УИ))
			{
				return (V82.ДокументыСсылка.ПлатежноеПоручениеВходящее)Кэш[УИ];
			}
			var Ссылка = new V82.ДокументыСсылка.ПлатежноеПоручениеВходящее(УникальныйИдентификатор);
			Кэш.Add(УИ, Ссылка);
			return Ссылка;
		}
		
		public void СериализацияProtoBuf(Stream Поток)
		{
			Serializer.Serialize(Поток,this);
		}
		
		public string СериализацияJson()
		{
			return this.ToJson();
		}
		
		public string СериализацияXml()
		{
			return this.ToXml();
		}
	}
}