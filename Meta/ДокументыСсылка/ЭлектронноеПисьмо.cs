
using System;
using System.Collections;
using System.IO;
using System.Data.SqlClient;
using System.Globalization;
using System.Runtime.Serialization;
using ProtoBuf;/*https://github.com/ServiceStack/ServiceStack/tree/master/lib*/
using ServiceStack.Text;/*https://github.com/ServiceStack/ServiceStack.Text*/
using V82;
using V82.ОбщиеОбъекты;
using V82.ДокументыСсылка;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.ДокументыСсылка
{
	[ProtoContract]
	[DataContract]
	public partial class ЭлектронноеПисьмо:ДокументСсылка,IСериализаторProtoBuf,IСериализаторJson
	{
		public static readonly Guid ГуидКласса = new Guid("c6283b71-78ed-48ae-ad3e-dc42936f2360");
		public static readonly DateTime ВерсияКласса = DateTime.ParseExact("20120928012020.000", new string[] {"yyyyMMddHHmmss.fff"}, CultureInfo.InvariantCulture, DateTimeStyles.None);
		public static readonly long КонтрольнаяСуммаКласса = 123;
		[DataMember]
		[ProtoMember(1)]
		public Guid Ссылка {get;set;}
		[DataMember]
		[ProtoMember(2)]
		public long Версия {get;set;}
		public string ВерсияДанных {get;set;}
		/*static хэш сумма состава и порядка реквизитов*/
		/*версия класса восстановленного из пакета*/
		public bool ПометкаУдаления {get;set;}
		public DateTime Дата {get;set;}
		public DateTime ПрефиксНомера {get;set;}
		public string/*11*/ Номер {get;set;}
		public bool Проведен {get;set;}
		public V82.Перечисления/*Ссылка*/.ВидыТекстовЭлектронныхПисем ВидТекстаПисьма {get;set;}//Вид текста письма
		public V82.СправочникиСсылка.ГруппыПисемЭлектроннойПочты ГруппаУчетнойЗаписи {get;set;}//Группа учетной записи
		public DateTime ДатаОтправления {get;set;}//Дата отправления
		public DateTime ДатаТранспорта {get;set;}//Дата отправления/получения
		public V82.СправочникиСсылка.ЗаявкиКандидатов ЗаявкаКандидата {get;set;}//Кандидат
		public bool ЕстьВложения {get;set;}//Есть вложения
		public string/*(0)*/ ЗаголовокПисьма {get;set;}//Заголовок письма
		public string/*(150)*/ ИдентификаторПисьма {get;set;}//Идентификатор письма
		public string/*(400)*/ ИмяКомпьютераРедактированияХТМЛТекста {get;set;}//Имя компьютера редактирования ХТМЛТекста
		public string/*(400)*/ ИмяФайлаРедактированияХТМЛТекста {get;set;}//Имя файла редактирования ХТМЛТекста
		public string/*(200)*/ КодировкаПисьма {get;set;}//Кодировка письма
		public string/*(0)*/ Комментарий {get;set;}
		public string/*(0)*/ Кому {get;set;}//Кому (имя <e-mail>)
		public string/*(0)*/ КомуПредставление {get;set;}//Кому (имя)
		public string/*(0)*/ Копии {get;set;}//Копии (имя <e-mail>)
		public string/*(0)*/ КопииПредставление {get;set;}//Копии (имя)
		public bool НеРассмотрено {get;set;}//Не рассмотрено
		public object ОснованиеПисьма {get;set;}//Основание письма
		public bool Ответ {get;set;}
		public V82.СправочникиСсылка.Пользователи Ответственный {get;set;}
		public string/*(150)*/ ОтправительАдресЭлектроннойПочты {get;set;}//От кого (e-mail)
		public string/*(150)*/ ОтправительИмя {get;set;}//От кого (имя)
		public string/*(150)*/ ОтправительПредставление {get;set;}//От кого (имя <e-mail>)
		public V82.СправочникиСсылка.ОформленияСтрокПисем Оформление {get;set;}
		public bool Переадресация {get;set;}
		public ХранилищеЗначения ПочтовоеСообщение {get;set;}//Почтовое сообщение
		public string/*(50)*/ ПредметКонтакта {get;set;}//Предмет
		public DateTime РассмотретьПосле {get;set;}//Рассмотреть после
		public string/*(0)*/ СкрытыеКопии {get;set;}//Скрытые копии (имя <e-mail>)
		public object ОтправительОбъект {get;set;}//Отправитель объект
		public V82.Перечисления/*Ссылка*/.СостоянияПотомковЭлектронныхПисем СостояниеПотомкаПисьма {get;set;}//Состояние потомка письма
		public V82.Перечисления/*Ссылка*/.СтатусыПисем СтатусПисьма {get;set;}//Статус письма
		public string/*(0)*/ ТекстПисьма {get;set;}//Текст письма
		public string/*(400)*/ Тема {get;set;}
		public V82.СправочникиСсылка.УчетныеЗаписиЭлектроннойПочты УчетнаяЗапись {get;set;}//Учетная запись
		
		public ЭлектронноеПисьмо()
		{
		}
		
		public ЭлектронноеПисьмо(byte[] УникальныйИдентификатор)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Number [Номер]
					,_Fld12718RRef [ВидТекстаПисьма]
					,_Fld12719RRef [ГруппаУчетнойЗаписи]
					,_Fld12720 [ДатаОтправления]
					,_Fld12721 [ДатаТранспорта]
					,_Fld22325RRef [ЗаявкаКандидата]
					,_Fld12722 [ЕстьВложения]
					,_Fld12749 [ЗаголовокПисьма]
					,_Fld12723 [ИдентификаторПисьма]
					,_Fld12724 [ИмяКомпьютераРедактированияХТМЛТекста]
					,_Fld12725 [ИмяФайлаРедактированияХТМЛТекста]
					,_Fld12750 [КодировкаПисьма]
					,_Fld12726 [Комментарий]
					,_Fld12727 [Кому]
					,_Fld12728 [КомуПредставление]
					,_Fld12729 [Копии]
					,_Fld12730 [КопииПредставление]
					,_Fld12731 [НеРассмотрено]
					,_Fld12732_TYPE [ОснованиеПисьма_Тип],_Fld12732_RRRef [ОснованиеПисьма],_Fld12732_RTRef [ОснованиеПисьма_Вид]
					,_Fld12733 [Ответ]
					,_Fld12734RRef [Ответственный]
					,_Fld12735 [ОтправительАдресЭлектроннойПочты]
					,_Fld12736 [ОтправительИмя]
					,_Fld12737 [ОтправительПредставление]
					,_Fld12751RRef [Оформление]
					,_Fld12738 [Переадресация]
					,_Fld12739 [ПочтовоеСообщение]
					,_Fld12752 [ПредметКонтакта]
					,_Fld12740 [РассмотретьПосле]
					,_Fld12741 [СкрытыеКопии]
					,_Fld12748_TYPE [ОтправительОбъект_Тип],_Fld12748_RRRef [ОтправительОбъект],_Fld12748_RTRef [ОтправительОбъект_Вид]
					,_Fld12742RRef [СостояниеПотомкаПисьма]
					,_Fld12743RRef [СтатусПисьма]
					,_Fld12744 [ТекстПисьма]
					,_Fld12745 [Тема]
					,_Fld12746RRef [УчетнаяЗапись]
					From _Document497(NOLOCK)
					Where _IDRRef=@УникальныйИдентификатор";
					Команда.Parameters.AddWithValue("УникальныйИдентификатор", УникальныйИдентификатор);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							//ToDo: Читать нужно через GetValues()
							Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Номер = Читалка.GetString(3);
							ВидТекстаПисьма = V82.Перечисления/*Ссылка*/.ВидыТекстовЭлектронныхПисем.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							ДатаОтправления = Читалка.GetDateTime(6);
							ДатаТранспорта = Читалка.GetDateTime(7);
							ЕстьВложения = ((byte[])Читалка.GetValue(9))[0]==1;
							ЗаголовокПисьма = Читалка.GetString(10);
							ИдентификаторПисьма = Читалка.GetString(11);
							ИмяКомпьютераРедактированияХТМЛТекста = Читалка.GetString(12);
							ИмяФайлаРедактированияХТМЛТекста = Читалка.GetString(13);
							КодировкаПисьма = Читалка.GetString(14);
							Комментарий = Читалка.GetString(15);
							Кому = Читалка.GetString(16);
							КомуПредставление = Читалка.GetString(17);
							Копии = Читалка.GetString(18);
							КопииПредставление = Читалка.GetString(19);
							НеРассмотрено = ((byte[])Читалка.GetValue(20))[0]==1;
							Ответ = ((byte[])Читалка.GetValue(24))[0]==1;
							ОтправительАдресЭлектроннойПочты = Читалка.GetString(26);
							ОтправительИмя = Читалка.GetString(27);
							ОтправительПредставление = Читалка.GetString(28);
							Переадресация = ((byte[])Читалка.GetValue(30))[0]==1;
							ПредметКонтакта = Читалка.GetString(32);
							РассмотретьПосле = Читалка.GetDateTime(33);
							СкрытыеКопии = Читалка.GetString(34);
							СостояниеПотомкаПисьма = V82.Перечисления/*Ссылка*/.СостоянияПотомковЭлектронныхПисем.ПустаяСсылка.Получить((byte[])Читалка.GetValue(38));
							СтатусПисьма = V82.Перечисления/*Ссылка*/.СтатусыПисем.ПустаяСсылка.Получить((byte[])Читалка.GetValue(39));
							ТекстПисьма = Читалка.GetString(40);
							Тема = Читалка.GetString(41);
							//return Ссылка;
						}
						else
						{
							//return null;
						}
					}
				}
			}
		}
		
		public V82.ДокументыОбъект.ЭлектронноеПисьмо  ПолучитьОбъект()
		{
			var Объект = new V82.ДокументыОбъект.ЭлектронноеПисьмо();
			Объект._ЭтоНовый = false;
			Объект.Ссылка = Ссылка;
			Объект.Версия = Версия;
			Объект.ПометкаУдаления = ПометкаУдаления;
			Объект.Номер = Номер;
			Объект.ВидТекстаПисьма = ВидТекстаПисьма;
			Объект.ГруппаУчетнойЗаписи = ГруппаУчетнойЗаписи;
			Объект.ДатаОтправления = ДатаОтправления;
			Объект.ДатаТранспорта = ДатаТранспорта;
			Объект.ЗаявкаКандидата = ЗаявкаКандидата;
			Объект.ЕстьВложения = ЕстьВложения;
			Объект.ЗаголовокПисьма = ЗаголовокПисьма;
			Объект.ИдентификаторПисьма = ИдентификаторПисьма;
			Объект.ИмяКомпьютераРедактированияХТМЛТекста = ИмяКомпьютераРедактированияХТМЛТекста;
			Объект.ИмяФайлаРедактированияХТМЛТекста = ИмяФайлаРедактированияХТМЛТекста;
			Объект.КодировкаПисьма = КодировкаПисьма;
			Объект.Комментарий = Комментарий;
			Объект.Кому = Кому;
			Объект.КомуПредставление = КомуПредставление;
			Объект.Копии = Копии;
			Объект.КопииПредставление = КопииПредставление;
			Объект.НеРассмотрено = НеРассмотрено;
			Объект.ОснованиеПисьма = ОснованиеПисьма;
			Объект.Ответ = Ответ;
			Объект.Ответственный = Ответственный;
			Объект.ОтправительАдресЭлектроннойПочты = ОтправительАдресЭлектроннойПочты;
			Объект.ОтправительИмя = ОтправительИмя;
			Объект.ОтправительПредставление = ОтправительПредставление;
			Объект.Оформление = Оформление;
			Объект.Переадресация = Переадресация;
			Объект.ПочтовоеСообщение = ПочтовоеСообщение;
			Объект.ПредметКонтакта = ПредметКонтакта;
			Объект.РассмотретьПосле = РассмотретьПосле;
			Объект.СкрытыеКопии = СкрытыеКопии;
			Объект.ОтправительОбъект = ОтправительОбъект;
			Объект.СостояниеПотомкаПисьма = СостояниеПотомкаПисьма;
			Объект.СтатусПисьма = СтатусПисьма;
			Объект.ТекстПисьма = ТекстПисьма;
			Объект.Тема = Тема;
			Объект.УчетнаяЗапись = УчетнаяЗапись;
			return Объект;
		}
		
		private static readonly Hashtable Кэш = new Hashtable(1000);
		
		public static V82.ДокументыСсылка.ЭлектронноеПисьмо ВзятьИзКэша(byte[] УникальныйИдентификатор)
		{
			var УИ = new Guid(УникальныйИдентификатор);
			if (Кэш.ContainsKey(УИ))
			{
				return (V82.ДокументыСсылка.ЭлектронноеПисьмо)Кэш[УИ];
			}
			var Ссылка = new V82.ДокументыСсылка.ЭлектронноеПисьмо(УникальныйИдентификатор);
			Кэш.Add(УИ, Ссылка);
			return Ссылка;
		}
		
		public void СериализацияProtoBuf(Stream Поток)
		{
			Serializer.Serialize(Поток,this);
		}
		
		public string СериализацияJson()
		{
			return this.ToJson();
		}
		
		public string СериализацияXml()
		{
			return this.ToXml();
		}
	}
}