
using System;
using System.Collections;
using System.IO;
using System.Data.SqlClient;
using System.Globalization;
using System.Runtime.Serialization;
using ProtoBuf;/*https://github.com/ServiceStack/ServiceStack/tree/master/lib*/
using ServiceStack.Text;/*https://github.com/ServiceStack/ServiceStack.Text*/
using V82;
using V82.ОбщиеОбъекты;
using V82.ДокументыСсылка;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.ДокументыСсылка
{
	///<summary>
	///(Регл)
	///</summary>
	[ProtoContract]
	[DataContract]
	public partial class РасчетыПоСтраховымВзносам:ДокументСсылка,IСериализаторProtoBuf,IСериализаторJson
	{
		public static readonly Guid ГуидКласса = new Guid("9c456eee-85ff-4d26-b9cb-f766ed7c3e9b");
		public static readonly DateTime ВерсияКласса = DateTime.ParseExact("20121221191148.000", new string[] {"yyyyMMddHHmmss.fff"}, CultureInfo.InvariantCulture, DateTimeStyles.None);
		public static readonly long КонтрольнаяСуммаКласса = 123;
		[DataMember]
		[ProtoMember(1)]
		public Guid Ссылка {get;set;}
		[DataMember]
		[ProtoMember(2)]
		public long Версия {get;set;}
		public string ВерсияДанных {get;set;}
		/*static хэш сумма состава и порядка реквизитов*/
		/*версия класса восстановленного из пакета*/
		public bool ПометкаУдаления {get;set;}
		public DateTime Дата {get;set;}
		public DateTime ПрефиксНомера {get;set;}
		public string/*11*/ Номер {get;set;}
		public bool Проведен {get;set;}
		public V82.СправочникиСсылка.Организации Организация {get;set;}
		///<summary>
		///Любая дополнительная информация
		///</summary>
		public string/*(0)*/ Комментарий {get;set;}
		public V82.СправочникиСсылка.Пользователи Ответственный {get;set;}
		public V82.Перечисления/*Ссылка*/.ВидыПлатежейВГосБюджет ВидПлатежа {get;set;}//Вид платежа
		public DateTime ДатаПлатежа {get;set;}//Дата платежа
		public DateTime МесяцРасчетногоПериода {get;set;}//Месяц расчетного периода
		public decimal/*(15.2)*/ ПФРСтраховая {get;set;}//ПФР Страховая
		public decimal/*(15.2)*/ ПФРНакопительная {get;set;}//ПФР Накопительная
		public decimal/*(15.2)*/ ФСС {get;set;}
		public decimal/*(15.2)*/ ФФОМС {get;set;}
		public decimal/*(15.2)*/ ТФОМС {get;set;}
		public decimal/*(15.2)*/ ФССНесчастныеСлучаи {get;set;}//ФСС, несчастные случаи
		public decimal/*(15.2)*/ ПФРПоДополнительномуТарифу {get;set;}//ПФР По дополнительному тарифу
		public string/*(30)*/ ПлатежноеПоручениеФССНомер {get;set;}//Платежное поручение ФСС - номер
		public string/*(30)*/ ПлатежноеПоручениеФСС_НС_ПЗНомер {get;set;}//Платежное поручение ФСС по страхованию от несчастных случаев
		///<summary>
		///(Общ)
		///</summary>
		public V82.Перечисления/*Ссылка*/.ВидыОперацийРасчетыПоСтраховымВзносам ВидОперации {get;set;}//Вид операции
		public DateTime ПлатежноеПоручениеФССДата {get;set;}//Платежное поручение ФСС - дата
		public DateTime ПлатежноеПоручениеФСС_НС_ПЗДата {get;set;}//Платежное поручение ФСС по страхованию от несчастных случаев
		public decimal/*(15.2)*/ ФССЕНВД {get;set;}
		public decimal/*(15.2)*/ ПФРНаДоплатуКПенсииШахтерам {get;set;}//ПФР, на доплату к пенсии шахтерам
		
		public РасчетыПоСтраховымВзносам()
		{
		}
		
		public РасчетыПоСтраховымВзносам(byte[] УникальныйИдентификатор)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Number [Номер]
					,_Fld15737RRef [Организация]
					,_Fld15738 [Комментарий]
					,_Fld15739RRef [Ответственный]
					,_Fld15740RRef [ВидПлатежа]
					,_Fld15741 [ДатаПлатежа]
					,_Fld15742 [МесяцРасчетногоПериода]
					,_Fld15743 [ПФРСтраховая]
					,_Fld15744 [ПФРНакопительная]
					,_Fld15745 [ФСС]
					,_Fld15746 [ФФОМС]
					,_Fld15747 [ТФОМС]
					,_Fld15748 [ФССНесчастныеСлучаи]
					,_Fld15749 [ПФРПоДополнительномуТарифу]
					,_Fld15750 [ПлатежноеПоручениеФССНомер]
					,_Fld15751 [ПлатежноеПоручениеФСС_НС_ПЗНомер]
					,_Fld15752RRef [ВидОперации]
					,_Fld15753 [ПлатежноеПоручениеФССДата]
					,_Fld15754 [ПлатежноеПоручениеФСС_НС_ПЗДата]
					,_Fld15755 [ФССЕНВД]
					,_Fld15756 [ПФРНаДоплатуКПенсииШахтерам]
					From _Document561(NOLOCK)
					Where _IDRRef=@УникальныйИдентификатор";
					Команда.Parameters.AddWithValue("УникальныйИдентификатор", УникальныйИдентификатор);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							//ToDo: Читать нужно через GetValues()
							Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Номер = Читалка.GetString(3);
							Комментарий = Читалка.GetString(5);
							ВидПлатежа = V82.Перечисления/*Ссылка*/.ВидыПлатежейВГосБюджет.ПустаяСсылка.Получить((byte[])Читалка.GetValue(7));
							ДатаПлатежа = Читалка.GetDateTime(8);
							МесяцРасчетногоПериода = Читалка.GetDateTime(9);
							ПФРСтраховая = Читалка.GetDecimal(10);
							ПФРНакопительная = Читалка.GetDecimal(11);
							ФСС = Читалка.GetDecimal(12);
							ФФОМС = Читалка.GetDecimal(13);
							ТФОМС = Читалка.GetDecimal(14);
							ФССНесчастныеСлучаи = Читалка.GetDecimal(15);
							ПФРПоДополнительномуТарифу = Читалка.GetDecimal(16);
							ПлатежноеПоручениеФССНомер = Читалка.GetString(17);
							ПлатежноеПоручениеФСС_НС_ПЗНомер = Читалка.GetString(18);
							ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийРасчетыПоСтраховымВзносам.ПустаяСсылка.Получить((byte[])Читалка.GetValue(19));
							ПлатежноеПоручениеФССДата = Читалка.GetDateTime(20);
							ПлатежноеПоручениеФСС_НС_ПЗДата = Читалка.GetDateTime(21);
							ФССЕНВД = Читалка.GetDecimal(22);
							ПФРНаДоплатуКПенсииШахтерам = Читалка.GetDecimal(23);
							//return Ссылка;
						}
						else
						{
							//return null;
						}
					}
				}
			}
		}
		
		public V82.ДокументыОбъект.РасчетыПоСтраховымВзносам  ПолучитьОбъект()
		{
			var Объект = new V82.ДокументыОбъект.РасчетыПоСтраховымВзносам();
			Объект._ЭтоНовый = false;
			Объект.Ссылка = Ссылка;
			Объект.Версия = Версия;
			Объект.ПометкаУдаления = ПометкаУдаления;
			Объект.Номер = Номер;
			Объект.Организация = Организация;
			Объект.Комментарий = Комментарий;
			Объект.Ответственный = Ответственный;
			Объект.ВидПлатежа = ВидПлатежа;
			Объект.ДатаПлатежа = ДатаПлатежа;
			Объект.МесяцРасчетногоПериода = МесяцРасчетногоПериода;
			Объект.ПФРСтраховая = ПФРСтраховая;
			Объект.ПФРНакопительная = ПФРНакопительная;
			Объект.ФСС = ФСС;
			Объект.ФФОМС = ФФОМС;
			Объект.ТФОМС = ТФОМС;
			Объект.ФССНесчастныеСлучаи = ФССНесчастныеСлучаи;
			Объект.ПФРПоДополнительномуТарифу = ПФРПоДополнительномуТарифу;
			Объект.ПлатежноеПоручениеФССНомер = ПлатежноеПоручениеФССНомер;
			Объект.ПлатежноеПоручениеФСС_НС_ПЗНомер = ПлатежноеПоручениеФСС_НС_ПЗНомер;
			Объект.ВидОперации = ВидОперации;
			Объект.ПлатежноеПоручениеФССДата = ПлатежноеПоручениеФССДата;
			Объект.ПлатежноеПоручениеФСС_НС_ПЗДата = ПлатежноеПоручениеФСС_НС_ПЗДата;
			Объект.ФССЕНВД = ФССЕНВД;
			Объект.ПФРНаДоплатуКПенсииШахтерам = ПФРНаДоплатуКПенсииШахтерам;
			return Объект;
		}
		
		private static readonly Hashtable Кэш = new Hashtable(1000);
		
		public static V82.ДокументыСсылка.РасчетыПоСтраховымВзносам ВзятьИзКэша(byte[] УникальныйИдентификатор)
		{
			var УИ = new Guid(УникальныйИдентификатор);
			if (Кэш.ContainsKey(УИ))
			{
				return (V82.ДокументыСсылка.РасчетыПоСтраховымВзносам)Кэш[УИ];
			}
			var Ссылка = new V82.ДокументыСсылка.РасчетыПоСтраховымВзносам(УникальныйИдентификатор);
			Кэш.Add(УИ, Ссылка);
			return Ссылка;
		}
		
		public void СериализацияProtoBuf(Stream Поток)
		{
			Serializer.Serialize(Поток,this);
		}
		
		public string СериализацияJson()
		{
			return this.ToJson();
		}
		
		public string СериализацияXml()
		{
			return this.ToXml();
		}
	}
}