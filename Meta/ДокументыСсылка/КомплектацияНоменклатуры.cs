
using System;
using System.Collections;
using System.IO;
using System.Data.SqlClient;
using System.Globalization;
using System.Runtime.Serialization;
using ProtoBuf;/*https://github.com/ServiceStack/ServiceStack/tree/master/lib*/
using ServiceStack.Text;/*https://github.com/ServiceStack/ServiceStack.Text*/
using V82;
using V82.ОбщиеОбъекты;
using V82.ДокументыСсылка;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.ДокументыСсылка
{
	///<summary>
	///(общ)
	///</summary>
	[ProtoContract]
	[DataContract]
	public partial class КомплектацияНоменклатуры:ДокументСсылка,IСериализаторProtoBuf,IСериализаторJson
	{
		public static readonly Guid ГуидКласса = new Guid("e4b0fa0a-a626-4f49-bdbc-51d698c61348");
		public static readonly DateTime ВерсияКласса = DateTime.ParseExact("20121221191756.000", new string[] {"yyyyMMddHHmmss.fff"}, CultureInfo.InvariantCulture, DateTimeStyles.None);
		public static readonly long КонтрольнаяСуммаКласса = 123;
		[DataMember]
		[ProtoMember(1)]
		public Guid Ссылка {get;set;}
		[DataMember]
		[ProtoMember(2)]
		public long Версия {get;set;}
		public string ВерсияДанных {get;set;}
		/*static хэш сумма состава и порядка реквизитов*/
		/*версия класса восстановленного из пакета*/
		public bool ПометкаУдаления {get;set;}
		public DateTime Дата {get;set;}
		public DateTime ПрефиксНомера {get;set;}
		public string/*11*/ Номер {get;set;}
		public bool Проведен {get;set;}
		public V82.Перечисления/*Ссылка*/.ВидыКомплектации ВидКомплектации {get;set;}//Вид комплектации
		///<summary>
		///(Общ)
		///</summary>
		public V82.Перечисления/*Ссылка*/.ВидыОперацийКомплектацияНоменклатуры ВидОперации {get;set;}//Вид операции
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.ЕдиницыИзмерения ЕдиницаИзмерения {get;set;}//Единица измерения номенклатуры
		public object ЗаказВыпуска {get;set;}//Заказ выпуска
		///<summary>
		///(Общ)
		///</summary>
		public object ЗаказРезерв {get;set;}//Заказ резерв
		///<summary>
		///(Общ)
		///</summary>
		public decimal/*(15.3)*/ Количество {get;set;}//Количество номенклатуры
		///<summary>
		///(Общ) Любая дополнительная информация
		///</summary>
		public string/*(0)*/ Комментарий {get;set;}
		///<summary>
		///(Общ)
		///</summary>
		public decimal/*(10.3)*/ Коэффициент {get;set;}//Коэффициент номенклатуры
		///<summary>
		///Необходимые действия по включению или исключению НДС в тоимости товаров при перемещении
		///</summary>
		public V82.Перечисления/*Ссылка*/.ДействиеНДСВСтоимостиТоваров НДСвСтоимостиТоваров {get;set;}//НДС в стоимости
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.Номенклатура Номенклатура {get;set;}
		///<summary>
		///(Упр)
		///</summary>
		public V82.СправочникиСсылка.НоменклатурныеГруппы НоменклатурнаяГруппа {get;set;}//Номенклатурная группа
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.Организации Организация {get;set;}
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.Пользователи Ответственный {get;set;}
		///<summary>
		///(Общ)
		///</summary>
		public bool ОтражатьВБухгалтерскомУчете {get;set;}//Отражать в бухгалтерском учете
		///<summary>
		///(Общ)
		///</summary>
		public bool ОтражатьВНалоговомУчете {get;set;}//Отражать в налоговом учете
		///<summary>
		///(Общ)
		///</summary>
		public bool ОтражатьВУправленческомУчете {get;set;}//Отражать в управленческом учете
		///<summary>
		///(Упр)
		///</summary>
		public V82.СправочникиСсылка.Подразделения Подразделение {get;set;}
		///<summary>
		///(Регл)
		///</summary>
		public V82.СправочникиСсылка.ПодразделенияОрганизаций ПодразделениеОрганизации {get;set;}//Подразделение организации
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.СерииНоменклатуры СерияНоменклатуры {get;set;}//Серия номенклатуры
		public V82.СправочникиСсылка.Склады Склад {get;set;}
		public V82.СправочникиСсылка.СпецификацииНоменклатуры Спецификация {get;set;}
		///<summary>
		///(Общ)
		///</summary>
		public V82.Перечисления/*Ссылка*/.СпособыСписанияОстаткаТоваров СпособСписанияОстаткаТоваров {get;set;}//Способ списания комплекта
		///<summary>
		///Статус партии
		///</summary>
		public V82.Перечисления/*Ссылка*/.СтатусыПартийТоваров СтатусПартии {get;set;}//Статус партии
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.СтатьиЗатрат СтатьяЗатратСписанияНДС {get;set;}//Статья затрат списания НДС
		///<summary>
		///(Регл)
		///</summary>
		public object СчетУчетаБУ {get;set;}//Счет учета комплекта (БУ)
		///<summary>
		///(Регл)
		///</summary>
		public object СчетУчетаНУ {get;set;}//Счет учета комплекта (НУ)
		///<summary>
		///(Регл)
		///</summary>
		public object СчетСписанияНДС {get;set;}//Счет списания НДС
		///<summary>
		///(Регл)
		///</summary>
		public object СубконтоСписанияНДС1 {get;set;}//Субконто 1
		///<summary>
		///(Регл)
		///</summary>
		public object СубконтоСписанияНДС2 {get;set;}//Субконто 2
		///<summary>
		///(Регл)
		///</summary>
		public object СубконтоСписанияНДС3 {get;set;}//Субконто 3
		///<summary>
		///(Регл)
		///</summary>
		public object СчетСписанияНДСНУ {get;set;}//Счет списания НДС (НУ)
		///<summary>
		///(Регл)
		///</summary>
		public object СубконтоСписанияНДСНУ1 {get;set;}//Субконто 1 (налоговый учет)
		///<summary>
		///(Регл)
		///</summary>
		public object СубконтоСписанияНДСНУ2 {get;set;}//Субконто 2 (налоговый учет)
		///<summary>
		///(Регл)
		///</summary>
		public object СубконтоСписанияНДСНУ3 {get;set;}//Субконто 3 (налоговый учет)
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.ХарактеристикиНоменклатуры ХарактеристикаНоменклатуры {get;set;}//Характеристика номенклатуры
		public V82.СправочникиСсылка.Контрагенты Контрагент {get;set;}
		public V82.СправочникиСсылка.ДоговорыКонтрагентов ДоговорКонтрагента {get;set;}//Договор контрагента
		public object СчетЗатрат {get;set;}//Счет затрат (БУ)
		public object СчетЗатратНУ {get;set;}//Счет затрат (НУ)
		public V82.СправочникиСсылка.СтатьиЗатрат СтатьяЗатрат {get;set;}//Статья затрат
		public object Заказ {get;set;}//Заказ затрат
		///<summary>
		///(Общ) Цена, по которой материал был передан в переработку
		///</summary>
		public decimal/*(15.2)*/ ЦенаПередачи {get;set;}//Цена передачи
		///<summary>
		///(Общ) Сумма, на которую материал был передан в переработку
		///</summary>
		public decimal/*(15.2)*/ СуммаПередачи {get;set;}//Сумма передачи
		
		public КомплектацияНоменклатуры()
		{
		}
		
		public КомплектацияНоменклатуры(byte[] УникальныйИдентификатор)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Number [Номер]
					,_Fld8690RRef [ВидКомплектации]
					,_Fld8691RRef [ВидОперации]
					,_Fld8692RRef [ЕдиницаИзмерения]
					,_Fld8693_TYPE [ЗаказВыпуска_Тип],_Fld8693_RRRef [ЗаказВыпуска],_Fld8693_RTRef [ЗаказВыпуска_Вид]
					,_Fld8694_TYPE [ЗаказРезерв_Тип],_Fld8694_RRRef [ЗаказРезерв],_Fld8694_RTRef [ЗаказРезерв_Вид]
					,_Fld8695 [Количество]
					,_Fld8696 [Комментарий]
					,_Fld8697 [Коэффициент]
					,_Fld8698RRef [НДСвСтоимостиТоваров]
					,_Fld8699RRef [Номенклатура]
					,_Fld8700RRef [НоменклатурнаяГруппа]
					,_Fld8701RRef [Организация]
					,_Fld8702RRef [Ответственный]
					,_Fld8703 [ОтражатьВБухгалтерскомУчете]
					,_Fld8704 [ОтражатьВНалоговомУчете]
					,_Fld8705 [ОтражатьВУправленческомУчете]
					,_Fld8706RRef [Подразделение]
					,_Fld8707RRef [ПодразделениеОрганизации]
					,_Fld8708RRef [СерияНоменклатуры]
					,_Fld8709RRef [Склад]
					,_Fld8710RRef [Спецификация]
					,_Fld8711RRef [СпособСписанияОстаткаТоваров]
					,_Fld8712RRef [СтатусПартии]
					,_Fld8713RRef [СтатьяЗатратСписанияНДС]
					,_Fld8714RRef [СчетУчетаБУ]
					,_Fld8715RRef [СчетУчетаНУ]
					,_Fld8716RRef [СчетСписанияНДС]
					,_Fld8717RRef [СубконтоСписанияНДС1]
					,_Fld8718RRef [СубконтоСписанияНДС2]
					,_Fld8719RRef [СубконтоСписанияНДС3]
					,_Fld8720RRef [СчетСписанияНДСНУ]
					,_Fld8721RRef [СубконтоСписанияНДСНУ1]
					,_Fld8722RRef [СубконтоСписанияНДСНУ2]
					,_Fld8723RRef [СубконтоСписанияНДСНУ3]
					,_Fld8724RRef [ХарактеристикаНоменклатуры]
					,_Fld8725RRef [Контрагент]
					,_Fld8726RRef [ДоговорКонтрагента]
					,_Fld8727RRef [СчетЗатрат]
					,_Fld8728RRef [СчетЗатратНУ]
					,_Fld8729RRef [СтатьяЗатрат]
					,_Fld8730_TYPE [Заказ_Тип],_Fld8730_RRRef [Заказ],_Fld8730_RTRef [Заказ_Вид]
					,_Fld8731 [ЦенаПередачи]
					,_Fld8732 [СуммаПередачи]
					From _Document415(NOLOCK)
					Where _IDRRef=@УникальныйИдентификатор";
					Команда.Parameters.AddWithValue("УникальныйИдентификатор", УникальныйИдентификатор);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							//ToDo: Читать нужно через GetValues()
							Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Номер = Читалка.GetString(3);
							ВидКомплектации = V82.Перечисления/*Ссылка*/.ВидыКомплектации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийКомплектацияНоменклатуры.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Количество = Читалка.GetDecimal(13);
							Комментарий = Читалка.GetString(14);
							Коэффициент = Читалка.GetDecimal(15);
							НДСвСтоимостиТоваров = V82.Перечисления/*Ссылка*/.ДействиеНДСВСтоимостиТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(16));
							ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(21))[0]==1;
							ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(22))[0]==1;
							ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(23))[0]==1;
							СпособСписанияОстаткаТоваров = V82.Перечисления/*Ссылка*/.СпособыСписанияОстаткаТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(29));
							СтатусПартии = V82.Перечисления/*Ссылка*/.СтатусыПартийТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(30));
							ЦенаПередачи = Читалка.GetDecimal(51);
							СуммаПередачи = Читалка.GetDecimal(52);
							//return Ссылка;
						}
						else
						{
							//return null;
						}
					}
				}
			}
		}
		
		public V82.ДокументыОбъект.КомплектацияНоменклатуры  ПолучитьОбъект()
		{
			var Объект = new V82.ДокументыОбъект.КомплектацияНоменклатуры();
			Объект._ЭтоНовый = false;
			Объект.Ссылка = Ссылка;
			Объект.Версия = Версия;
			Объект.ПометкаУдаления = ПометкаУдаления;
			Объект.Номер = Номер;
			Объект.ВидКомплектации = ВидКомплектации;
			Объект.ВидОперации = ВидОперации;
			Объект.ЕдиницаИзмерения = ЕдиницаИзмерения;
			Объект.ЗаказВыпуска = ЗаказВыпуска;
			Объект.ЗаказРезерв = ЗаказРезерв;
			Объект.Количество = Количество;
			Объект.Комментарий = Комментарий;
			Объект.Коэффициент = Коэффициент;
			Объект.НДСвСтоимостиТоваров = НДСвСтоимостиТоваров;
			Объект.Номенклатура = Номенклатура;
			Объект.НоменклатурнаяГруппа = НоменклатурнаяГруппа;
			Объект.Организация = Организация;
			Объект.Ответственный = Ответственный;
			Объект.ОтражатьВБухгалтерскомУчете = ОтражатьВБухгалтерскомУчете;
			Объект.ОтражатьВНалоговомУчете = ОтражатьВНалоговомУчете;
			Объект.ОтражатьВУправленческомУчете = ОтражатьВУправленческомУчете;
			Объект.Подразделение = Подразделение;
			Объект.ПодразделениеОрганизации = ПодразделениеОрганизации;
			Объект.СерияНоменклатуры = СерияНоменклатуры;
			Объект.Склад = Склад;
			Объект.Спецификация = Спецификация;
			Объект.СпособСписанияОстаткаТоваров = СпособСписанияОстаткаТоваров;
			Объект.СтатусПартии = СтатусПартии;
			Объект.СтатьяЗатратСписанияНДС = СтатьяЗатратСписанияНДС;
			Объект.СчетУчетаБУ = СчетУчетаБУ;
			Объект.СчетУчетаНУ = СчетУчетаНУ;
			Объект.СчетСписанияНДС = СчетСписанияНДС;
			Объект.СубконтоСписанияНДС1 = СубконтоСписанияНДС1;
			Объект.СубконтоСписанияНДС2 = СубконтоСписанияНДС2;
			Объект.СубконтоСписанияНДС3 = СубконтоСписанияНДС3;
			Объект.СчетСписанияНДСНУ = СчетСписанияНДСНУ;
			Объект.СубконтоСписанияНДСНУ1 = СубконтоСписанияНДСНУ1;
			Объект.СубконтоСписанияНДСНУ2 = СубконтоСписанияНДСНУ2;
			Объект.СубконтоСписанияНДСНУ3 = СубконтоСписанияНДСНУ3;
			Объект.ХарактеристикаНоменклатуры = ХарактеристикаНоменклатуры;
			Объект.Контрагент = Контрагент;
			Объект.ДоговорКонтрагента = ДоговорКонтрагента;
			Объект.СчетЗатрат = СчетЗатрат;
			Объект.СчетЗатратНУ = СчетЗатратНУ;
			Объект.СтатьяЗатрат = СтатьяЗатрат;
			Объект.Заказ = Заказ;
			Объект.ЦенаПередачи = ЦенаПередачи;
			Объект.СуммаПередачи = СуммаПередачи;
			return Объект;
		}
		
		private static readonly Hashtable Кэш = new Hashtable(1000);
		
		public static V82.ДокументыСсылка.КомплектацияНоменклатуры ВзятьИзКэша(byte[] УникальныйИдентификатор)
		{
			var УИ = new Guid(УникальныйИдентификатор);
			if (Кэш.ContainsKey(УИ))
			{
				return (V82.ДокументыСсылка.КомплектацияНоменклатуры)Кэш[УИ];
			}
			var Ссылка = new V82.ДокументыСсылка.КомплектацияНоменклатуры(УникальныйИдентификатор);
			Кэш.Add(УИ, Ссылка);
			return Ссылка;
		}
		
		public void СериализацияProtoBuf(Stream Поток)
		{
			Serializer.Serialize(Поток,this);
		}
		
		public string СериализацияJson()
		{
			return this.ToJson();
		}
		
		public string СериализацияXml()
		{
			return this.ToXml();
		}
	}
}