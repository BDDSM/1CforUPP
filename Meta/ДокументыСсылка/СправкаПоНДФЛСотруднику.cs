
using System;
using System.Collections;
using System.IO;
using System.Data.SqlClient;
using System.Globalization;
using System.Runtime.Serialization;
using ProtoBuf;/*https://github.com/ServiceStack/ServiceStack/tree/master/lib*/
using ServiceStack.Text;/*https://github.com/ServiceStack/ServiceStack.Text*/
using V82;
using V82.ОбщиеОбъекты;
using V82.ДокументыСсылка;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.ДокументыСсылка
{
	///<summary>
	///(Регл)
	///</summary>
	[ProtoContract]
	[DataContract]
	public partial class СправкаПоНДФЛСотруднику:ДокументСсылка,IСериализаторProtoBuf,IСериализаторJson
	{
		public static readonly Guid ГуидКласса = new Guid("4608649d-f590-4776-b204-4e63cb28a198");
		public static readonly DateTime ВерсияКласса = DateTime.ParseExact("20121221191005.000", new string[] {"yyyyMMddHHmmss.fff"}, CultureInfo.InvariantCulture, DateTimeStyles.None);
		public static readonly long КонтрольнаяСуммаКласса = 123;
		[DataMember]
		[ProtoMember(1)]
		public Guid Ссылка {get;set;}
		[DataMember]
		[ProtoMember(2)]
		public long Версия {get;set;}
		public string ВерсияДанных {get;set;}
		/*static хэш сумма состава и порядка реквизитов*/
		/*версия класса восстановленного из пакета*/
		public bool ПометкаУдаления {get;set;}
		public DateTime Дата {get;set;}
		public DateTime ПрефиксНомера {get;set;}
		public string/*11*/ Номер {get;set;}
		public bool Проведен {get;set;}
		public V82.СправочникиСсылка.Пользователи Ответственный {get;set;}
		///<summary>
		///Любая дополнительная информация
		///</summary>
		public string/*(0)*/ Комментарий {get;set;}
		public decimal/*(4)*/ НалоговыйПериод {get;set;}//Налоговый период
		public V82.СправочникиСсылка.Организации Организация {get;set;}
		///<summary>
		///(Регл)
		///</summary>
		public string/*(21)*/ ОКАТО_КПП {get;set;}//ОКАТО/КПП
		public V82.Перечисления/*Ссылка*/.ПорядокФормированияСправкиОДоходахФизлица СпособФормирования {get;set;}//Способ формирования
		public string/*(20)*/ Телефон {get;set;}
		public V82.СправочникиСсылка.ФизическиеЛица СправкуПодписал {get;set;}//Справку подписал
		public V82.СправочникиСсылка.ДолжностиОрганизаций ДолжностьПодписавшегоЛица {get;set;}//Должность подписавшего лица
		public V82.СправочникиСсылка.ФизическиеЛица Сотрудник {get;set;}
		public V82.Перечисления/*Ссылка*/.НДФЛСтавки Ставка {get;set;}
		///<summary>
		///(Общ)
		///</summary>
		public string/*(40)*/ Фамилия {get;set;}
		///<summary>
		///(Общ)
		///</summary>
		public string/*(40)*/ Имя {get;set;}
		///<summary>
		///(Общ)
		///</summary>
		public string/*(40)*/ Отчество {get;set;}
		public string/*(240)*/ АдресРФ {get;set;}//Адрес РФ
		public V82.СправочникиСсылка.ДокументыУдостоверяющиеЛичность ВидДокумента {get;set;}//Вид документа
		public string/*(14)*/ СерияДокумента {get;set;}//Серия документа
		public string/*(14)*/ НомерДокумента {get;set;}//Номер документа
		public decimal/*(15.2)*/ ОбщаяСуммаДохода {get;set;}//Общая сумма дохода
		public decimal/*(15.2)*/ ОблагаемаяСуммаДохода {get;set;}//Облагаемая сумма дохода
		public decimal/*(12)*/ Исчислено {get;set;}
		public decimal/*(12)*/ Задолженность {get;set;}
		public decimal/*(12)*/ ИзлишнеУдержано {get;set;}//Излишне удержано
		public decimal/*(12)*/ Удержано {get;set;}
		public decimal/*(12)*/ Перечислено {get;set;}
		public string/*(240)*/ АдресЗарубежом {get;set;}//Адрес зарубежом
		///<summary>
		///(Общ)
		///</summary>
		public DateTime ДатаРождения {get;set;}//Дата рождения
		///<summary>
		///(Регл)
		///</summary>
		public string/*(12)*/ ИНН {get;set;}
		public V82.СправочникиСсылка.КлассификаторСтранМира Гражданство {get;set;}
		public V82.Перечисления/*Ссылка*/.СтатусыНалогоплательщиковПоНДФЛ СтатусНалогоплательщика {get;set;}//Статус налогоплательщика
		public DateTime ДатаУведомления {get;set;}//Дата уведомления
		public string/*(20)*/ НомерУведомления {get;set;}//Номер уведомления
		public string/*(4)*/ КодНалоговогоОрганаУведомления {get;set;}//Код налогового органа уведомления
		///<summary>
		///Ведет себя по правилам 2010 года.
		///</summary>
		public bool СпециальныйДокумент2011года {get;set;}//Специальный документ 2011 года
		public string/*(4)*/ КодИФНС {get;set;}//Код ИФНС
		
		public СправкаПоНДФЛСотруднику()
		{
		}
		
		public СправкаПоНДФЛСотруднику(byte[] УникальныйИдентификатор)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Number [Номер]
					,_Fld17581RRef [Ответственный]
					,_Fld17582 [Комментарий]
					,_Fld17583 [НалоговыйПериод]
					,_Fld17584RRef [Организация]
					,_Fld17585 [ОКАТО_КПП]
					,_Fld17586RRef [СпособФормирования]
					,_Fld17587 [Телефон]
					,_Fld17588RRef [СправкуПодписал]
					,_Fld17589RRef [ДолжностьПодписавшегоЛица]
					,_Fld17590RRef [Сотрудник]
					,_Fld17591RRef [Ставка]
					,_Fld17592 [Фамилия]
					,_Fld17593 [Имя]
					,_Fld17594 [Отчество]
					,_Fld17595 [АдресРФ]
					,_Fld17596RRef [ВидДокумента]
					,_Fld17597 [СерияДокумента]
					,_Fld17598 [НомерДокумента]
					,_Fld17599 [ОбщаяСуммаДохода]
					,_Fld17600 [ОблагаемаяСуммаДохода]
					,_Fld17601 [Исчислено]
					,_Fld17602 [Задолженность]
					,_Fld17603 [ИзлишнеУдержано]
					,_Fld17604 [Удержано]
					,_Fld17605 [Перечислено]
					,_Fld17606 [АдресЗарубежом]
					,_Fld17607 [ДатаРождения]
					,_Fld17608 [ИНН]
					,_Fld17609RRef [Гражданство]
					,_Fld17610RRef [СтатусНалогоплательщика]
					,_Fld17611 [ДатаУведомления]
					,_Fld17612 [НомерУведомления]
					,_Fld17613 [КодНалоговогоОрганаУведомления]
					,_Fld17614 [СпециальныйДокумент2011года]
					,_Fld17615 [КодИФНС]
					From _Document601(NOLOCK)
					Where _IDRRef=@УникальныйИдентификатор";
					Команда.Parameters.AddWithValue("УникальныйИдентификатор", УникальныйИдентификатор);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							//ToDo: Читать нужно через GetValues()
							Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Номер = Читалка.GetString(3);
							Комментарий = Читалка.GetString(5);
							НалоговыйПериод = Читалка.GetDecimal(6);
							ОКАТО_КПП = Читалка.GetString(8);
							СпособФормирования = V82.Перечисления/*Ссылка*/.ПорядокФормированияСправкиОДоходахФизлица.ПустаяСсылка.Получить((byte[])Читалка.GetValue(9));
							Телефон = Читалка.GetString(10);
							Ставка = V82.Перечисления/*Ссылка*/.НДФЛСтавки.ПустаяСсылка.Получить((byte[])Читалка.GetValue(14));
							Фамилия = Читалка.GetString(15);
							Имя = Читалка.GetString(16);
							Отчество = Читалка.GetString(17);
							АдресРФ = Читалка.GetString(18);
							СерияДокумента = Читалка.GetString(20);
							НомерДокумента = Читалка.GetString(21);
							ОбщаяСуммаДохода = Читалка.GetDecimal(22);
							ОблагаемаяСуммаДохода = Читалка.GetDecimal(23);
							Исчислено = Читалка.GetDecimal(24);
							Задолженность = Читалка.GetDecimal(25);
							ИзлишнеУдержано = Читалка.GetDecimal(26);
							Удержано = Читалка.GetDecimal(27);
							Перечислено = Читалка.GetDecimal(28);
							АдресЗарубежом = Читалка.GetString(29);
							ДатаРождения = Читалка.GetDateTime(30);
							ИНН = Читалка.GetString(31);
							СтатусНалогоплательщика = V82.Перечисления/*Ссылка*/.СтатусыНалогоплательщиковПоНДФЛ.ПустаяСсылка.Получить((byte[])Читалка.GetValue(33));
							ДатаУведомления = Читалка.GetDateTime(34);
							НомерУведомления = Читалка.GetString(35);
							КодНалоговогоОрганаУведомления = Читалка.GetString(36);
							СпециальныйДокумент2011года = ((byte[])Читалка.GetValue(37))[0]==1;
							КодИФНС = Читалка.GetString(38);
							//return Ссылка;
						}
						else
						{
							//return null;
						}
					}
				}
			}
		}
		
		public V82.ДокументыОбъект.СправкаПоНДФЛСотруднику  ПолучитьОбъект()
		{
			var Объект = new V82.ДокументыОбъект.СправкаПоНДФЛСотруднику();
			Объект._ЭтоНовый = false;
			Объект.Ссылка = Ссылка;
			Объект.Версия = Версия;
			Объект.ПометкаУдаления = ПометкаУдаления;
			Объект.Номер = Номер;
			Объект.Ответственный = Ответственный;
			Объект.Комментарий = Комментарий;
			Объект.НалоговыйПериод = НалоговыйПериод;
			Объект.Организация = Организация;
			Объект.ОКАТО_КПП = ОКАТО_КПП;
			Объект.СпособФормирования = СпособФормирования;
			Объект.Телефон = Телефон;
			Объект.СправкуПодписал = СправкуПодписал;
			Объект.ДолжностьПодписавшегоЛица = ДолжностьПодписавшегоЛица;
			Объект.Сотрудник = Сотрудник;
			Объект.Ставка = Ставка;
			Объект.Фамилия = Фамилия;
			Объект.Имя = Имя;
			Объект.Отчество = Отчество;
			Объект.АдресРФ = АдресРФ;
			Объект.ВидДокумента = ВидДокумента;
			Объект.СерияДокумента = СерияДокумента;
			Объект.НомерДокумента = НомерДокумента;
			Объект.ОбщаяСуммаДохода = ОбщаяСуммаДохода;
			Объект.ОблагаемаяСуммаДохода = ОблагаемаяСуммаДохода;
			Объект.Исчислено = Исчислено;
			Объект.Задолженность = Задолженность;
			Объект.ИзлишнеУдержано = ИзлишнеУдержано;
			Объект.Удержано = Удержано;
			Объект.Перечислено = Перечислено;
			Объект.АдресЗарубежом = АдресЗарубежом;
			Объект.ДатаРождения = ДатаРождения;
			Объект.ИНН = ИНН;
			Объект.Гражданство = Гражданство;
			Объект.СтатусНалогоплательщика = СтатусНалогоплательщика;
			Объект.ДатаУведомления = ДатаУведомления;
			Объект.НомерУведомления = НомерУведомления;
			Объект.КодНалоговогоОрганаУведомления = КодНалоговогоОрганаУведомления;
			Объект.СпециальныйДокумент2011года = СпециальныйДокумент2011года;
			Объект.КодИФНС = КодИФНС;
			return Объект;
		}
		
		private static readonly Hashtable Кэш = new Hashtable(1000);
		
		public static V82.ДокументыСсылка.СправкаПоНДФЛСотруднику ВзятьИзКэша(byte[] УникальныйИдентификатор)
		{
			var УИ = new Guid(УникальныйИдентификатор);
			if (Кэш.ContainsKey(УИ))
			{
				return (V82.ДокументыСсылка.СправкаПоНДФЛСотруднику)Кэш[УИ];
			}
			var Ссылка = new V82.ДокументыСсылка.СправкаПоНДФЛСотруднику(УникальныйИдентификатор);
			Кэш.Add(УИ, Ссылка);
			return Ссылка;
		}
		
		public void СериализацияProtoBuf(Stream Поток)
		{
			Serializer.Serialize(Поток,this);
		}
		
		public string СериализацияJson()
		{
			return this.ToJson();
		}
		
		public string СериализацияXml()
		{
			return this.ToXml();
		}
	}
}