
using System;
using System.Collections;
using System.IO;
using System.Data.SqlClient;
using System.Globalization;
using System.Runtime.Serialization;
using ProtoBuf;/*https://github.com/ServiceStack/ServiceStack/tree/master/lib*/
using ServiceStack.Text;/*https://github.com/ServiceStack/ServiceStack.Text*/
using V82;
using V82.ОбщиеОбъекты;
using V82.ДокументыСсылка;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.ДокументыСсылка
{
	[ProtoContract]
	[DataContract]
	public partial class ПланируемоеПоступлениеДенежныхСредств:ДокументСсылка,IСериализаторProtoBuf,IСериализаторJson
	{
		public static readonly Guid ГуидКласса = new Guid("ef51bebc-165e-43e7-bc8c-1f5b0d71ee0c");
		public static readonly DateTime ВерсияКласса = DateTime.ParseExact("20120928012030.000", new string[] {"yyyyMMddHHmmss.fff"}, CultureInfo.InvariantCulture, DateTimeStyles.None);
		public static readonly long КонтрольнаяСуммаКласса = 123;
		[DataMember]
		[ProtoMember(1)]
		public Guid Ссылка {get;set;}
		[DataMember]
		[ProtoMember(2)]
		public long Версия {get;set;}
		public string ВерсияДанных {get;set;}
		/*static хэш сумма состава и порядка реквизитов*/
		/*версия класса восстановленного из пакета*/
		public bool ПометкаУдаления {get;set;}
		public DateTime Дата {get;set;}
		public DateTime ПрефиксНомера {get;set;}
		public string/*11*/ Номер {get;set;}
		public bool Проведен {get;set;}
		public V82.Перечисления/*Ссылка*/.ВидыОперацийПланируемоеПоступлениеДС ВидОперации {get;set;}//Вид операции
		public V82.СправочникиСсылка.Контрагенты Контрагент {get;set;}
		public object КассаККМ {get;set;}//Касса ККМ
		public DateTime ДатаПоступления {get;set;}//Дата поступления
		///<summary>
		///(Общ)
		///</summary>
		public object ДокументОснование {get;set;}//Документ основание
		public V82.Перечисления/*Ссылка*/.ВидыДенежныхСредств ФормаОплаты {get;set;}//Форма оплаты
		///<summary>
		///Р/с, касса 
		///</summary>
		public object БанковскийСчетКасса {get;set;}//Банковский счет касса
		public V82.СправочникиСсылка.Валюты ВалютаДокумента {get;set;}//Валюта документа
		public decimal/*(10.4)*/ КурсДокумента {get;set;}//Курс документа
		public decimal/*(10)*/ КратностьДокумента {get;set;}//Кратность документа
		public decimal/*(15.2)*/ СуммаДокумента {get;set;}//Сумма документа
		public V82.Перечисления/*Ссылка*/.СостоянияОбъектов Состояние {get;set;}
		public string/*(0)*/ Описание {get;set;}
		public V82.СправочникиСсылка.Пользователи Ответственный {get;set;}
		///<summary>
		///Любая дополнительная информация
		///</summary>
		public string/*(0)*/ Комментарий {get;set;}
		public V82.СправочникиСсылка.Организации Организация {get;set;}
		public V82.СправочникиСсылка.СтатьиОборотовПоБюджетам СтатьяОборотов {get;set;}//Статья оборотов
		public V82.СправочникиСсылка.Подразделения ЦФО {get;set;}
		public bool ВключатьВПлатежныйКалендарь {get;set;}//Включать в платежный календарь
		public V82.Перечисления/*Ссылка*/.ВидПриемаРозничнойВыручки ВидПриемаРозничнойВыручки {get;set;}//Вид приема розничной выручки
		
		public ПланируемоеПоступлениеДенежныхСредств()
		{
		}
		
		public ПланируемоеПоступлениеДенежныхСредств(byte[] УникальныйИдентификатор)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Number [Номер]
					,_Fld8369RRef [ВидОперации]
					,_Fld8370RRef [Контрагент]
					,_Fld8371_TYPE [КассаККМ_Тип],_Fld8371_RRRef [КассаККМ],_Fld8371_RTRef [КассаККМ_Вид]
					,_Fld8372 [ДатаПоступления]
					,_Fld8373_TYPE [ДокументОснование_Тип],_Fld8373_RRRef [ДокументОснование],_Fld8373_RTRef [ДокументОснование_Вид]
					,_Fld8374RRef [ФормаОплаты]
					,_Fld8375_TYPE [БанковскийСчетКасса_Тип],_Fld8375_RRRef [БанковскийСчетКасса],_Fld8375_RTRef [БанковскийСчетКасса_Вид]
					,_Fld8376RRef [ВалютаДокумента]
					,_Fld8377 [КурсДокумента]
					,_Fld8378 [КратностьДокумента]
					,_Fld8379 [СуммаДокумента]
					,_Fld8380RRef [Состояние]
					,_Fld8381 [Описание]
					,_Fld8382RRef [Ответственный]
					,_Fld8383 [Комментарий]
					,_Fld8384RRef [Организация]
					,_Fld8385RRef [СтатьяОборотов]
					,_Fld8386RRef [ЦФО]
					,_Fld8387 [ВключатьВПлатежныйКалендарь]
					,_Fld8388RRef [ВидПриемаРозничнойВыручки]
					From _Document384(NOLOCK)
					Where _IDRRef=@УникальныйИдентификатор";
					Команда.Parameters.AddWithValue("УникальныйИдентификатор", УникальныйИдентификатор);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							//ToDo: Читать нужно через GetValues()
							Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Номер = Читалка.GetString(3);
							ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПланируемоеПоступлениеДС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							ДатаПоступления = Читалка.GetDateTime(9);
							ФормаОплаты = V82.Перечисления/*Ссылка*/.ВидыДенежныхСредств.ПустаяСсылка.Получить((byte[])Читалка.GetValue(13));
							КурсДокумента = Читалка.GetDecimal(18);
							КратностьДокумента = Читалка.GetDecimal(19);
							СуммаДокумента = Читалка.GetDecimal(20);
							Состояние = V82.Перечисления/*Ссылка*/.СостоянияОбъектов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(21));
							Описание = Читалка.GetString(22);
							Комментарий = Читалка.GetString(24);
							ВключатьВПлатежныйКалендарь = ((byte[])Читалка.GetValue(28))[0]==1;
							ВидПриемаРозничнойВыручки = V82.Перечисления/*Ссылка*/.ВидПриемаРозничнойВыручки.ПустаяСсылка.Получить((byte[])Читалка.GetValue(29));
							//return Ссылка;
						}
						else
						{
							//return null;
						}
					}
				}
			}
		}
		
		public V82.ДокументыОбъект.ПланируемоеПоступлениеДенежныхСредств  ПолучитьОбъект()
		{
			var Объект = new V82.ДокументыОбъект.ПланируемоеПоступлениеДенежныхСредств();
			Объект._ЭтоНовый = false;
			Объект.Ссылка = Ссылка;
			Объект.Версия = Версия;
			Объект.ПометкаУдаления = ПометкаУдаления;
			Объект.Номер = Номер;
			Объект.ВидОперации = ВидОперации;
			Объект.Контрагент = Контрагент;
			Объект.КассаККМ = КассаККМ;
			Объект.ДатаПоступления = ДатаПоступления;
			Объект.ДокументОснование = ДокументОснование;
			Объект.ФормаОплаты = ФормаОплаты;
			Объект.БанковскийСчетКасса = БанковскийСчетКасса;
			Объект.ВалютаДокумента = ВалютаДокумента;
			Объект.КурсДокумента = КурсДокумента;
			Объект.КратностьДокумента = КратностьДокумента;
			Объект.СуммаДокумента = СуммаДокумента;
			Объект.Состояние = Состояние;
			Объект.Описание = Описание;
			Объект.Ответственный = Ответственный;
			Объект.Комментарий = Комментарий;
			Объект.Организация = Организация;
			Объект.СтатьяОборотов = СтатьяОборотов;
			Объект.ЦФО = ЦФО;
			Объект.ВключатьВПлатежныйКалендарь = ВключатьВПлатежныйКалендарь;
			Объект.ВидПриемаРозничнойВыручки = ВидПриемаРозничнойВыручки;
			return Объект;
		}
		
		private static readonly Hashtable Кэш = new Hashtable(1000);
		
		public static V82.ДокументыСсылка.ПланируемоеПоступлениеДенежныхСредств ВзятьИзКэша(byte[] УникальныйИдентификатор)
		{
			var УИ = new Guid(УникальныйИдентификатор);
			if (Кэш.ContainsKey(УИ))
			{
				return (V82.ДокументыСсылка.ПланируемоеПоступлениеДенежныхСредств)Кэш[УИ];
			}
			var Ссылка = new V82.ДокументыСсылка.ПланируемоеПоступлениеДенежныхСредств(УникальныйИдентификатор);
			Кэш.Add(УИ, Ссылка);
			return Ссылка;
		}
		
		public void СериализацияProtoBuf(Stream Поток)
		{
			Serializer.Serialize(Поток,this);
		}
		
		public string СериализацияJson()
		{
			return this.ToJson();
		}
		
		public string СериализацияXml()
		{
			return this.ToXml();
		}
	}
}