
using System;
using System.Collections;
using System.IO;
using System.Data.SqlClient;
using System.Globalization;
using System.Runtime.Serialization;
using ProtoBuf;/*https://github.com/ServiceStack/ServiceStack/tree/master/lib*/
using ServiceStack.Text;/*https://github.com/ServiceStack/ServiceStack.Text*/
using V82;
using V82.ОбщиеОбъекты;
using V82.ДокументыСсылка;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.ДокументыСсылка
{
	[ProtoContract]
	[DataContract]
	public partial class ПоступлениеДенежныхДокументов:ДокументСсылка,IСериализаторProtoBuf,IСериализаторJson
	{
		public static readonly Guid ГуидКласса = new Guid("4c5c3704-20e0-428c-b001-e2f3f4ae8876");
		public static readonly DateTime ВерсияКласса = DateTime.ParseExact("20120928012033.000", new string[] {"yyyyMMddHHmmss.fff"}, CultureInfo.InvariantCulture, DateTimeStyles.None);
		public static readonly long КонтрольнаяСуммаКласса = 123;
		[DataMember]
		[ProtoMember(1)]
		public Guid Ссылка {get;set;}
		[DataMember]
		[ProtoMember(2)]
		public long Версия {get;set;}
		public string ВерсияДанных {get;set;}
		/*static хэш сумма состава и порядка реквизитов*/
		/*версия класса восстановленного из пакета*/
		public bool ПометкаУдаления {get;set;}
		public DateTime Дата {get;set;}
		public DateTime ПрефиксНомера {get;set;}
		public string/*11*/ Номер {get;set;}
		public bool Проведен {get;set;}
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.Валюты ВалютаДокумента {get;set;}//Валюта документа
		///<summary>
		///(Общ)
		///</summary>
		public V82.Перечисления/*Ссылка*/.ВидыОперацийПоступлениеДенежныхДокументов ВидОперации {get;set;}//Вид операции
		///<summary>
		///(Общ) 
		///</summary>
		public DateTime ДатаВходящегоДокумента {get;set;}//Дата документа сторонней организации
		///<summary>
		///(Общ) 
		///</summary>
		public V82.СправочникиСсылка.ДоговорыКонтрагентов ДоговорКонтрагента {get;set;}//Договор контрагента
		///<summary>
		///(Общ) Любая дополнительная информация
		///</summary>
		public string/*(0)*/ Комментарий {get;set;}
		///<summary>
		///(Общ) 
		///</summary>
		public object Контрагент {get;set;}
		///<summary>
		///(Общ) 
		///</summary>
		public decimal/*(10)*/ КратностьВзаиморасчетов {get;set;}//Кратность взаиморасчетов
		///<summary>
		///(Общ) 
		///</summary>
		public decimal/*(10.4)*/ КурсВзаиморасчетов {get;set;}//Курс взаиморасчетов
		///<summary>
		///(Общ) 
		///</summary>
		public string/*(30)*/ НомерВходящегоДокумента {get;set;}//Номер документа сторонней организации
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.Организации Организация {get;set;}
		///<summary>
		///(Общ) 
		///</summary>
		public V82.СправочникиСсылка.Пользователи Ответственный {get;set;}
		///<summary>
		///(Общ) Сумма в валюте документа, налоги включены согласно флагам
		///</summary>
		public decimal/*(15.2)*/ СуммаДокумента {get;set;}//Сумма документа
		///<summary>
		///(Регл) 
		///</summary>
		public object СчетУчетаРасчетовСКонтрагентом {get;set;}//Счет учета расчетов с контрагентом
		public object СубконтоКт1 {get;set;}//Субконто Кт1
		public object СубконтоКт2 {get;set;}//Субконто Кт2
		public object СубконтоКт3 {get;set;}//Субконто Кт3
		public object СчетУчетаДенежныхДокументов {get;set;}//Счет учета денежных документов
		///<summary>
		///(Общ)
		///</summary>
		public string/*(0)*/ ПринятоОт {get;set;}//Принято от
		public string/*(200)*/ Содержание_УСН {get;set;}//Содержание УСН
		public decimal/*(15.2)*/ Графа4_УСН {get;set;}//Графа4 УСН
		public decimal/*(15.2)*/ Графа5_УСН {get;set;}//Графа5 УСН
		public decimal/*(15.2)*/ Графа6_УСН {get;set;}//Графа5
		public decimal/*(15.2)*/ Графа7_УСН {get;set;}//Графа5
		public bool ДоходыЕНВД_УСН {get;set;}//ДоходыЕНВД
		public bool РасходыЕНВД_УСН {get;set;}//Расходы ЕНВД УСН
		public decimal/*(15.2)*/ НДС_УСН {get;set;}//НДС УСН
		public bool РучнаяНастройка_УСН {get;set;}//Ручная настройка УСН
		public object РасчетныйДокумент {get;set;}//Расчетный документ
		
		public ПоступлениеДенежныхДокументов()
		{
		}
		
		public ПоступлениеДенежныхДокументов(byte[] УникальныйИдентификатор)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Number [Номер]
					,_Fld24769RRef [ВалютаДокумента]
					,_Fld24770RRef [ВидОперации]
					,_Fld24771 [ДатаВходящегоДокумента]
					,_Fld24772RRef [ДоговорКонтрагента]
					,_Fld24773 [Комментарий]
					,_Fld24774_TYPE [Контрагент_Тип],_Fld24774_RRRef [Контрагент],_Fld24774_RTRef [Контрагент_Вид]
					,_Fld24775 [КратностьВзаиморасчетов]
					,_Fld24776 [КурсВзаиморасчетов]
					,_Fld24777 [НомерВходящегоДокумента]
					,_Fld24778RRef [Организация]
					,_Fld24779RRef [Ответственный]
					,_Fld24780 [СуммаДокумента]
					,_Fld24781RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld24782RRef [СубконтоКт1]
					,_Fld24783RRef [СубконтоКт2]
					,_Fld24784RRef [СубконтоКт3]
					,_Fld24785RRef [СчетУчетаДенежныхДокументов]
					,_Fld24786 [ПринятоОт]
					,_Fld24787 [Содержание_УСН]
					,_Fld24788 [Графа4_УСН]
					,_Fld24789 [Графа5_УСН]
					,_Fld24790 [Графа6_УСН]
					,_Fld24791 [Графа7_УСН]
					,_Fld24792 [ДоходыЕНВД_УСН]
					,_Fld24793 [РасходыЕНВД_УСН]
					,_Fld24794 [НДС_УСН]
					,_Fld24795 [РучнаяНастройка_УСН]
					,_Fld24796_TYPE [РасчетныйДокумент_Тип],_Fld24796_RRRef [РасчетныйДокумент],_Fld24796_RTRef [РасчетныйДокумент_Вид]
					From _Document23161(NOLOCK)
					Where _IDRRef=@УникальныйИдентификатор";
					Команда.Parameters.AddWithValue("УникальныйИдентификатор", УникальныйИдентификатор);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							//ToDo: Читать нужно через GetValues()
							Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Номер = Читалка.GetString(3);
							ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПоступлениеДенежныхДокументов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							ДатаВходящегоДокумента = Читалка.GetDateTime(6);
							Комментарий = Читалка.GetString(8);
							КратностьВзаиморасчетов = Читалка.GetDecimal(12);
							КурсВзаиморасчетов = Читалка.GetDecimal(13);
							НомерВходящегоДокумента = Читалка.GetString(14);
							СуммаДокумента = Читалка.GetDecimal(17);
							ПринятоОт = Читалка.GetString(23);
							Содержание_УСН = Читалка.GetString(24);
							Графа4_УСН = Читалка.GetDecimal(25);
							Графа5_УСН = Читалка.GetDecimal(26);
							Графа6_УСН = Читалка.GetDecimal(27);
							Графа7_УСН = Читалка.GetDecimal(28);
							ДоходыЕНВД_УСН = ((byte[])Читалка.GetValue(29))[0]==1;
							РасходыЕНВД_УСН = ((byte[])Читалка.GetValue(30))[0]==1;
							НДС_УСН = Читалка.GetDecimal(31);
							РучнаяНастройка_УСН = ((byte[])Читалка.GetValue(32))[0]==1;
							//return Ссылка;
						}
						else
						{
							//return null;
						}
					}
				}
			}
		}
		
		public V82.ДокументыОбъект.ПоступлениеДенежныхДокументов  ПолучитьОбъект()
		{
			var Объект = new V82.ДокументыОбъект.ПоступлениеДенежныхДокументов();
			Объект._ЭтоНовый = false;
			Объект.Ссылка = Ссылка;
			Объект.Версия = Версия;
			Объект.ПометкаУдаления = ПометкаУдаления;
			Объект.Номер = Номер;
			Объект.ВалютаДокумента = ВалютаДокумента;
			Объект.ВидОперации = ВидОперации;
			Объект.ДатаВходящегоДокумента = ДатаВходящегоДокумента;
			Объект.ДоговорКонтрагента = ДоговорКонтрагента;
			Объект.Комментарий = Комментарий;
			Объект.Контрагент = Контрагент;
			Объект.КратностьВзаиморасчетов = КратностьВзаиморасчетов;
			Объект.КурсВзаиморасчетов = КурсВзаиморасчетов;
			Объект.НомерВходящегоДокумента = НомерВходящегоДокумента;
			Объект.Организация = Организация;
			Объект.Ответственный = Ответственный;
			Объект.СуммаДокумента = СуммаДокумента;
			Объект.СчетУчетаРасчетовСКонтрагентом = СчетУчетаРасчетовСКонтрагентом;
			Объект.СубконтоКт1 = СубконтоКт1;
			Объект.СубконтоКт2 = СубконтоКт2;
			Объект.СубконтоКт3 = СубконтоКт3;
			Объект.СчетУчетаДенежныхДокументов = СчетУчетаДенежныхДокументов;
			Объект.ПринятоОт = ПринятоОт;
			Объект.Содержание_УСН = Содержание_УСН;
			Объект.Графа4_УСН = Графа4_УСН;
			Объект.Графа5_УСН = Графа5_УСН;
			Объект.Графа6_УСН = Графа6_УСН;
			Объект.Графа7_УСН = Графа7_УСН;
			Объект.ДоходыЕНВД_УСН = ДоходыЕНВД_УСН;
			Объект.РасходыЕНВД_УСН = РасходыЕНВД_УСН;
			Объект.НДС_УСН = НДС_УСН;
			Объект.РучнаяНастройка_УСН = РучнаяНастройка_УСН;
			Объект.РасчетныйДокумент = РасчетныйДокумент;
			return Объект;
		}
		
		private static readonly Hashtable Кэш = new Hashtable(1000);
		
		public static V82.ДокументыСсылка.ПоступлениеДенежныхДокументов ВзятьИзКэша(byte[] УникальныйИдентификатор)
		{
			var УИ = new Guid(УникальныйИдентификатор);
			if (Кэш.ContainsKey(УИ))
			{
				return (V82.ДокументыСсылка.ПоступлениеДенежныхДокументов)Кэш[УИ];
			}
			var Ссылка = new V82.ДокументыСсылка.ПоступлениеДенежныхДокументов(УникальныйИдентификатор);
			Кэш.Add(УИ, Ссылка);
			return Ссылка;
		}
		
		public void СериализацияProtoBuf(Stream Поток)
		{
			Serializer.Serialize(Поток,this);
		}
		
		public string СериализацияJson()
		{
			return this.ToJson();
		}
		
		public string СериализацияXml()
		{
			return this.ToXml();
		}
	}
}