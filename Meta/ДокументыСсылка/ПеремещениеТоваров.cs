
using System;
using System.Collections;
using System.IO;
using System.Data.SqlClient;
using System.Globalization;
using System.Runtime.Serialization;
using ProtoBuf;/*https://github.com/ServiceStack/ServiceStack/tree/master/lib*/
using ServiceStack.Text;/*https://github.com/ServiceStack/ServiceStack.Text*/
using V82;
using V82.ОбщиеОбъекты;
using V82.ДокументыСсылка;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.ДокументыСсылка
{
	///<summary>
	///(Общ)
	///</summary>
	[ProtoContract]
	[DataContract]
	public partial class ПеремещениеТоваров:ДокументСсылка,IСериализаторProtoBuf,IСериализаторJson
	{
		public static readonly Guid ГуидКласса = new Guid("a6a32b69-d3a2-4c42-8def-d353bf0c1174");
		public static readonly DateTime ВерсияКласса = DateTime.ParseExact("20120928012016.000", new string[] {"yyyyMMddHHmmss.fff"}, CultureInfo.InvariantCulture, DateTimeStyles.None);
		public static readonly long КонтрольнаяСуммаКласса = 123;
		[DataMember]
		[ProtoMember(1)]
		public Guid Ссылка {get;set;}
		[DataMember]
		[ProtoMember(2)]
		public long Версия {get;set;}
		public string ВерсияДанных {get;set;}
		/*static хэш сумма состава и порядка реквизитов*/
		/*версия класса восстановленного из пакета*/
		public bool ПометкаУдаления {get;set;}
		public DateTime Дата {get;set;}
		public DateTime ПрефиксНомера {get;set;}
		public string/*11*/ Номер {get;set;}
		public bool Проведен {get;set;}
		public V82.Перечисления/*Ссылка*/.ВидыОперацийПеремещениеТоваров ВидОперации {get;set;}//Вид операции
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.Организации Организация {get;set;}
		///<summary>
		///(Общ)
		///</summary>
		public bool ОтражатьВУправленческомУчете {get;set;}//Отражать в управленческом учете
		///<summary>
		///(Общ)
		///</summary>
		public bool ОтражатьВБухгалтерскомУчете {get;set;}//Отражать в бухгалтерском учете
		///<summary>
		///(Общ)
		///</summary>
		public bool ОтражатьВНалоговомУчете {get;set;}//Отражать в налоговом учете
		///<summary>
		///(Упр)
		///</summary>
		public V82.СправочникиСсылка.Подразделения Подразделение {get;set;}
		///<summary>
		///(Общ) Любая дополнительная информация
		///</summary>
		public string/*(0)*/ Комментарий {get;set;}
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.Склады СкладОтправитель {get;set;}//Склад отправитель
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.Склады СкладПолучатель {get;set;}//Склад получатель
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.Пользователи Ответственный {get;set;}
		public V82.ДокументыСсылка.ВнутреннийЗаказ ВнутреннийЗаказ {get;set;}//Внутренний заказ
		///<summary>
		///Необходимые действия по включению или исключению НДС в стоимости товаров при перемещении
		///</summary>
		public V82.Перечисления/*Ссылка*/.ДействиеНДСВСтоимостиТоваров НДСвСтоимостиТоваров {get;set;}//НДС в стоимости товаров
		///<summary>
		///(Регл)
		///</summary>
		public object СчетСписанияНДС {get;set;}//Счет списания НДС
		///<summary>
		///(Регл)
		///</summary>
		public object СубконтоСписанияНДС1 {get;set;}//Субконто 1
		///<summary>
		///(Регл)
		///</summary>
		public object СубконтоСписанияНДС2 {get;set;}//Субконто 2
		///<summary>
		///(Регл)
		///</summary>
		public object СубконтоСписанияНДС3 {get;set;}//Субконто 3
		///<summary>
		///(Регл)
		///</summary>
		public object СчетСписанияНДСНУ {get;set;}//Счет списания НДС (НУ)
		///<summary>
		///(Регл)
		///</summary>
		public object СубконтоСписанияНДСНУ1 {get;set;}//Субконто 1 (налоговый учет)
		///<summary>
		///(Регл)
		///</summary>
		public object СубконтоСписанияНДСНУ2 {get;set;}//Субконто 2 (налоговый учет)
		///<summary>
		///(Регл)
		///</summary>
		public object СубконтоСписанияНДСНУ3 {get;set;}//Субконто 3 (налоговый учет)
		///<summary>
		///Для НДС
		///</summary>
		public V82.СправочникиСсылка.НоменклатурныеГруппы НоменклатурнаяГруппа {get;set;}//Номенклатурная группа
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.СтатьиЗатрат СтатьяЗатратСписанияНДС {get;set;}//Статья затрат списания НДС
		///<summary>
		///(Регл)
		///</summary>
		public V82.СправочникиСсылка.ПодразделенияОрганизаций ПодразделениеОрганизации {get;set;}//Подразделение организации
		///<summary>
		///(Общ) Сумма в розничных ценах
		///</summary>
		public decimal/*(15.2)*/ СуммаДокументаРозничная {get;set;}//Розничная сумма документа
		public bool РаспределениеОстатковТоваровОрганизацийПоСкладам {get;set;}//Распределение остатков товаров организаций по складам
		
		public ПеремещениеТоваров()
		{
		}
		
		public ПеремещениеТоваров(byte[] УникальныйИдентификатор)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Number [Номер]
					,_Fld8070RRef [ВидОперации]
					,_Fld8071RRef [Организация]
					,_Fld8072 [ОтражатьВУправленческомУчете]
					,_Fld8073 [ОтражатьВБухгалтерскомУчете]
					,_Fld8074 [ОтражатьВНалоговомУчете]
					,_Fld8075RRef [Подразделение]
					,_Fld8076 [Комментарий]
					,_Fld8077RRef [СкладОтправитель]
					,_Fld8078RRef [СкладПолучатель]
					,_Fld8079RRef [Ответственный]
					,_Fld8080RRef [ВнутреннийЗаказ]
					,_Fld8081RRef [НДСвСтоимостиТоваров]
					,_Fld8082RRef [СчетСписанияНДС]
					,_Fld8083RRef [СубконтоСписанияНДС1]
					,_Fld8084RRef [СубконтоСписанияНДС2]
					,_Fld8085RRef [СубконтоСписанияНДС3]
					,_Fld8086RRef [СчетСписанияНДСНУ]
					,_Fld8087RRef [СубконтоСписанияНДСНУ1]
					,_Fld8088RRef [СубконтоСписанияНДСНУ2]
					,_Fld8089RRef [СубконтоСписанияНДСНУ3]
					,_Fld8090RRef [НоменклатурнаяГруппа]
					,_Fld8091RRef [СтатьяЗатратСписанияНДС]
					,_Fld8092RRef [ПодразделениеОрганизации]
					,_Fld8093 [СуммаДокументаРозничная]
					,_Fld18373 [РаспределениеОстатковТоваровОрганизацийПоСкладам]
					From _Document369(NOLOCK)
					Where _IDRRef=@УникальныйИдентификатор";
					Команда.Parameters.AddWithValue("УникальныйИдентификатор", УникальныйИдентификатор);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							//ToDo: Читать нужно через GetValues()
							Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Номер = Читалка.GetString(3);
							ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПеремещениеТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(6))[0]==1;
							ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(8))[0]==1;
							Комментарий = Читалка.GetString(10);
							ВнутреннийЗаказ = new V82.ДокументыСсылка.ВнутреннийЗаказ((byte[])Читалка.GetValue(14));
							НДСвСтоимостиТоваров = V82.Перечисления/*Ссылка*/.ДействиеНДСВСтоимостиТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(15));
							СуммаДокументаРозничная = Читалка.GetDecimal(27);
							РаспределениеОстатковТоваровОрганизацийПоСкладам = ((byte[])Читалка.GetValue(28))[0]==1;
							//return Ссылка;
						}
						else
						{
							//return null;
						}
					}
				}
			}
		}
		
		public V82.ДокументыОбъект.ПеремещениеТоваров  ПолучитьОбъект()
		{
			var Объект = new V82.ДокументыОбъект.ПеремещениеТоваров();
			Объект._ЭтоНовый = false;
			Объект.Ссылка = Ссылка;
			Объект.Версия = Версия;
			Объект.ПометкаУдаления = ПометкаУдаления;
			Объект.Номер = Номер;
			Объект.ВидОперации = ВидОперации;
			Объект.Организация = Организация;
			Объект.ОтражатьВУправленческомУчете = ОтражатьВУправленческомУчете;
			Объект.ОтражатьВБухгалтерскомУчете = ОтражатьВБухгалтерскомУчете;
			Объект.ОтражатьВНалоговомУчете = ОтражатьВНалоговомУчете;
			Объект.Подразделение = Подразделение;
			Объект.Комментарий = Комментарий;
			Объект.СкладОтправитель = СкладОтправитель;
			Объект.СкладПолучатель = СкладПолучатель;
			Объект.Ответственный = Ответственный;
			Объект.ВнутреннийЗаказ = ВнутреннийЗаказ;
			Объект.НДСвСтоимостиТоваров = НДСвСтоимостиТоваров;
			Объект.СчетСписанияНДС = СчетСписанияНДС;
			Объект.СубконтоСписанияНДС1 = СубконтоСписанияНДС1;
			Объект.СубконтоСписанияНДС2 = СубконтоСписанияНДС2;
			Объект.СубконтоСписанияНДС3 = СубконтоСписанияНДС3;
			Объект.СчетСписанияНДСНУ = СчетСписанияНДСНУ;
			Объект.СубконтоСписанияНДСНУ1 = СубконтоСписанияНДСНУ1;
			Объект.СубконтоСписанияНДСНУ2 = СубконтоСписанияНДСНУ2;
			Объект.СубконтоСписанияНДСНУ3 = СубконтоСписанияНДСНУ3;
			Объект.НоменклатурнаяГруппа = НоменклатурнаяГруппа;
			Объект.СтатьяЗатратСписанияНДС = СтатьяЗатратСписанияНДС;
			Объект.ПодразделениеОрганизации = ПодразделениеОрганизации;
			Объект.СуммаДокументаРозничная = СуммаДокументаРозничная;
			Объект.РаспределениеОстатковТоваровОрганизацийПоСкладам = РаспределениеОстатковТоваровОрганизацийПоСкладам;
			return Объект;
		}
		
		private static readonly Hashtable Кэш = new Hashtable(1000);
		
		public static V82.ДокументыСсылка.ПеремещениеТоваров ВзятьИзКэша(byte[] УникальныйИдентификатор)
		{
			var УИ = new Guid(УникальныйИдентификатор);
			if (Кэш.ContainsKey(УИ))
			{
				return (V82.ДокументыСсылка.ПеремещениеТоваров)Кэш[УИ];
			}
			var Ссылка = new V82.ДокументыСсылка.ПеремещениеТоваров(УникальныйИдентификатор);
			Кэш.Add(УИ, Ссылка);
			return Ссылка;
		}
		
		public void СериализацияProtoBuf(Stream Поток)
		{
			Serializer.Serialize(Поток,this);
		}
		
		public string СериализацияJson()
		{
			return this.ToJson();
		}
		
		public string СериализацияXml()
		{
			return this.ToXml();
		}
	}
}