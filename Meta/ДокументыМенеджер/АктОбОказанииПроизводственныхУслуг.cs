
using System;
using System.Data.SqlClient;
using V82;
using V82.ДокументыСсылка;
using V82.Документы;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Документы//Менеджер
{
	///<summary>
	///(Общ)
	///</summary>
	public partial class АктОбОказанииПроизводственныхУслуг:ДокументМенеджер
	{
		
		public static ДокументыСсылка.АктОбОказанииПроизводственныхУслуг НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld4672 [ОтражатьВНалоговомУчете]
					,_Fld4673 [АвтораспределениеПрочихЗатрат]
					,_Fld4674 [АвтораспределениеМатериалов]
					,_Fld4675RRef [Организация]
					,_Fld4676RRef [ПодразделениеОрганизации]
					,_Fld4677RRef [Контрагент]
					,_Fld4678RRef [ДоговорКонтрагента]
					,_Fld4679RRef [ВалютаДокумента]
					,_Fld4680_TYPE [Сделка_Тип],_Fld4680_RRRef [Сделка],_Fld4680_RTRef [Сделка_Вид]
					,_Fld4681 [Комментарий]
					,_Fld4682 [КратностьВзаиморасчетов]
					,_Fld4683 [ОтражатьВБухгалтерскомУчете]
					,_Fld4684 [КурсВзаиморасчетов]
					,_Fld4685 [ОтражатьВУправленческомУчете]
					,_Fld4686RRef [Подразделение]
					,_Fld4687RRef [Ответственный]
					,_Fld4688 [РаспределятьПропорциональноКоличеству]
					,_Fld4689 [СуммаВключаетНДС]
					,_Fld4690 [СуммаДокумента]
					,_Fld4691RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld4692RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld4693RRef [ТипЦен]
					,_Fld4694 [УчитыватьНДС]
					,_Fld4695_TYPE [Проект_Тип],_Fld4695_RRRef [Проект],_Fld4695_RTRef [Проект_Вид]
					,_Fld4696 [ИспользоватьМатериалы]
					,_Fld4697 [ИспользоватьПрочиеЗатраты]
					,_Fld4698 [ИспользоватьЗаказы]
					,_Fld4699RRef [Грузополучатель]
					,_Fld4700 [АдресДоставки]
					,_Fld4701 [ДополнениеКАдресуДоставки]
					,_Fld4702RRef [Исполнитель]
					,_Fld4703 [ИсполнительПоПриказу]
					From _Document301(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.АктОбОказанииПроизводственныхУслуг();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.АвтораспределениеПрочихЗатрат = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.АвтораспределениеМатериалов = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(14);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(15);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(17);
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.РаспределятьПропорциональноКоличеству = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(22))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(23);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ИспользоватьМатериалы = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.ИспользоватьПрочиеЗатраты = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.ИспользоватьЗаказы = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(35);
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(36);
							Ссылка.ИсполнительПоПриказу = Читалка.GetString(38);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыСсылка.АктОбОказанииПроизводственныхУслуг НайтиПоНомеру(string Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld4672 [ОтражатьВНалоговомУчете]
					,_Fld4673 [АвтораспределениеПрочихЗатрат]
					,_Fld4674 [АвтораспределениеМатериалов]
					,_Fld4675RRef [Организация]
					,_Fld4676RRef [ПодразделениеОрганизации]
					,_Fld4677RRef [Контрагент]
					,_Fld4678RRef [ДоговорКонтрагента]
					,_Fld4679RRef [ВалютаДокумента]
					,_Fld4680_TYPE [Сделка_Тип],_Fld4680_RRRef [Сделка],_Fld4680_RTRef [Сделка_Вид]
					,_Fld4681 [Комментарий]
					,_Fld4682 [КратностьВзаиморасчетов]
					,_Fld4683 [ОтражатьВБухгалтерскомУчете]
					,_Fld4684 [КурсВзаиморасчетов]
					,_Fld4685 [ОтражатьВУправленческомУчете]
					,_Fld4686RRef [Подразделение]
					,_Fld4687RRef [Ответственный]
					,_Fld4688 [РаспределятьПропорциональноКоличеству]
					,_Fld4689 [СуммаВключаетНДС]
					,_Fld4690 [СуммаДокумента]
					,_Fld4691RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld4692RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld4693RRef [ТипЦен]
					,_Fld4694 [УчитыватьНДС]
					,_Fld4695_TYPE [Проект_Тип],_Fld4695_RRRef [Проект],_Fld4695_RTRef [Проект_Вид]
					,_Fld4696 [ИспользоватьМатериалы]
					,_Fld4697 [ИспользоватьПрочиеЗатраты]
					,_Fld4698 [ИспользоватьЗаказы]
					,_Fld4699RRef [Грузополучатель]
					,_Fld4700 [АдресДоставки]
					,_Fld4701 [ДополнениеКАдресуДоставки]
					,_Fld4702RRef [Исполнитель]
					,_Fld4703 [ИсполнительПоПриказу]
					From _Document301(NOLOCK)
					Where _Number = @Номер";
					Команда.Parameters.AddWithValue("Номер", Номер);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.АктОбОказанииПроизводственныхУслуг();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.АвтораспределениеПрочихЗатрат = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.АвтораспределениеМатериалов = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(14);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(15);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(17);
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.РаспределятьПропорциональноКоличеству = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(22))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(23);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ИспользоватьМатериалы = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.ИспользоватьПрочиеЗатраты = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.ИспользоватьЗаказы = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(35);
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(36);
							Ссылка.ИсполнительПоПриказу = Читалка.GetString(38);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыВыборка.АктОбОказанииПроизводственныхУслуг Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld4672 [ОтражатьВНалоговомУчете]
					,_Fld4673 [АвтораспределениеПрочихЗатрат]
					,_Fld4674 [АвтораспределениеМатериалов]
					,_Fld4675RRef [Организация]
					,_Fld4676RRef [ПодразделениеОрганизации]
					,_Fld4677RRef [Контрагент]
					,_Fld4678RRef [ДоговорКонтрагента]
					,_Fld4679RRef [ВалютаДокумента]
					,_Fld4680_TYPE [Сделка_Тип],_Fld4680_RRRef [Сделка],_Fld4680_RTRef [Сделка_Вид]
					,_Fld4681 [Комментарий]
					,_Fld4682 [КратностьВзаиморасчетов]
					,_Fld4683 [ОтражатьВБухгалтерскомУчете]
					,_Fld4684 [КурсВзаиморасчетов]
					,_Fld4685 [ОтражатьВУправленческомУчете]
					,_Fld4686RRef [Подразделение]
					,_Fld4687RRef [Ответственный]
					,_Fld4688 [РаспределятьПропорциональноКоличеству]
					,_Fld4689 [СуммаВключаетНДС]
					,_Fld4690 [СуммаДокумента]
					,_Fld4691RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld4692RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld4693RRef [ТипЦен]
					,_Fld4694 [УчитыватьНДС]
					,_Fld4695_TYPE [Проект_Тип],_Fld4695_RRRef [Проект],_Fld4695_RTRef [Проект_Вид]
					,_Fld4696 [ИспользоватьМатериалы]
					,_Fld4697 [ИспользоватьПрочиеЗатраты]
					,_Fld4698 [ИспользоватьЗаказы]
					,_Fld4699RRef [Грузополучатель]
					,_Fld4700 [АдресДоставки]
					,_Fld4701 [ДополнениеКАдресуДоставки]
					,_Fld4702RRef [Исполнитель]
					,_Fld4703 [ИсполнительПоПриказу]
					From _Document301(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.АктОбОказанииПроизводственныхУслуг();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.АктОбОказанииПроизводственныхУслуг();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.АвтораспределениеПрочихЗатрат = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.АвтораспределениеМатериалов = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(14);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(15);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(17);
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.РаспределятьПропорциональноКоличеству = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(22))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(23);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ИспользоватьМатериалы = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.ИспользоватьПрочиеЗатраты = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.ИспользоватьЗаказы = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(35);
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(36);
							Ссылка.ИсполнительПоПриказу = Читалка.GetString(38);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.АктОбОказанииПроизводственныхУслуг ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld4672 [ОтражатьВНалоговомУчете]
					,_Fld4673 [АвтораспределениеПрочихЗатрат]
					,_Fld4674 [АвтораспределениеМатериалов]
					,_Fld4675RRef [Организация]
					,_Fld4676RRef [ПодразделениеОрганизации]
					,_Fld4677RRef [Контрагент]
					,_Fld4678RRef [ДоговорКонтрагента]
					,_Fld4679RRef [ВалютаДокумента]
					,_Fld4680_TYPE [Сделка_Тип],_Fld4680_RRRef [Сделка],_Fld4680_RTRef [Сделка_Вид]
					,_Fld4681 [Комментарий]
					,_Fld4682 [КратностьВзаиморасчетов]
					,_Fld4683 [ОтражатьВБухгалтерскомУчете]
					,_Fld4684 [КурсВзаиморасчетов]
					,_Fld4685 [ОтражатьВУправленческомУчете]
					,_Fld4686RRef [Подразделение]
					,_Fld4687RRef [Ответственный]
					,_Fld4688 [РаспределятьПропорциональноКоличеству]
					,_Fld4689 [СуммаВключаетНДС]
					,_Fld4690 [СуммаДокумента]
					,_Fld4691RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld4692RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld4693RRef [ТипЦен]
					,_Fld4694 [УчитыватьНДС]
					,_Fld4695_TYPE [Проект_Тип],_Fld4695_RRRef [Проект],_Fld4695_RTRef [Проект_Вид]
					,_Fld4696 [ИспользоватьМатериалы]
					,_Fld4697 [ИспользоватьПрочиеЗатраты]
					,_Fld4698 [ИспользоватьЗаказы]
					,_Fld4699RRef [Грузополучатель]
					,_Fld4700 [АдресДоставки]
					,_Fld4701 [ДополнениеКАдресуДоставки]
					,_Fld4702RRef [Исполнитель]
					,_Fld4703 [ИсполнительПоПриказу]
					From _Document301(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.АктОбОказанииПроизводственныхУслуг();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.АктОбОказанииПроизводственныхУслуг();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.АвтораспределениеПрочихЗатрат = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.АвтораспределениеМатериалов = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(14);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(15);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(17);
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.РаспределятьПропорциональноКоличеству = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(22))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(23);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ИспользоватьМатериалы = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.ИспользоватьПрочиеЗатраты = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.ИспользоватьЗаказы = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(35);
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(36);
							Ссылка.ИсполнительПоПриказу = Читалка.GetString(38);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.АктОбОказанииПроизводственныхУслуг ВыбратьПоНомеру(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld4672 [ОтражатьВНалоговомУчете]
					,_Fld4673 [АвтораспределениеПрочихЗатрат]
					,_Fld4674 [АвтораспределениеМатериалов]
					,_Fld4675RRef [Организация]
					,_Fld4676RRef [ПодразделениеОрганизации]
					,_Fld4677RRef [Контрагент]
					,_Fld4678RRef [ДоговорКонтрагента]
					,_Fld4679RRef [ВалютаДокумента]
					,_Fld4680_TYPE [Сделка_Тип],_Fld4680_RRRef [Сделка],_Fld4680_RTRef [Сделка_Вид]
					,_Fld4681 [Комментарий]
					,_Fld4682 [КратностьВзаиморасчетов]
					,_Fld4683 [ОтражатьВБухгалтерскомУчете]
					,_Fld4684 [КурсВзаиморасчетов]
					,_Fld4685 [ОтражатьВУправленческомУчете]
					,_Fld4686RRef [Подразделение]
					,_Fld4687RRef [Ответственный]
					,_Fld4688 [РаспределятьПропорциональноКоличеству]
					,_Fld4689 [СуммаВключаетНДС]
					,_Fld4690 [СуммаДокумента]
					,_Fld4691RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld4692RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld4693RRef [ТипЦен]
					,_Fld4694 [УчитыватьНДС]
					,_Fld4695_TYPE [Проект_Тип],_Fld4695_RRRef [Проект],_Fld4695_RTRef [Проект_Вид]
					,_Fld4696 [ИспользоватьМатериалы]
					,_Fld4697 [ИспользоватьПрочиеЗатраты]
					,_Fld4698 [ИспользоватьЗаказы]
					,_Fld4699RRef [Грузополучатель]
					,_Fld4700 [АдресДоставки]
					,_Fld4701 [ДополнениеКАдресуДоставки]
					,_Fld4702RRef [Исполнитель]
					,_Fld4703 [ИсполнительПоПриказу]
					From _Document301(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.АктОбОказанииПроизводственныхУслуг();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.АктОбОказанииПроизводственныхУслуг();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.АвтораспределениеПрочихЗатрат = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.АвтораспределениеМатериалов = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(14);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(15);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(17);
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.РаспределятьПропорциональноКоличеству = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(22))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(23);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ИспользоватьМатериалы = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.ИспользоватьПрочиеЗатраты = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.ИспользоватьЗаказы = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(35);
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(36);
							Ссылка.ИсполнительПоПриказу = Читалка.GetString(38);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.АктОбОказанииПроизводственныхУслуг СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld4672 [ОтражатьВНалоговомУчете]
					,_Fld4673 [АвтораспределениеПрочихЗатрат]
					,_Fld4674 [АвтораспределениеМатериалов]
					,_Fld4675RRef [Организация]
					,_Fld4676RRef [ПодразделениеОрганизации]
					,_Fld4677RRef [Контрагент]
					,_Fld4678RRef [ДоговорКонтрагента]
					,_Fld4679RRef [ВалютаДокумента]
					,_Fld4680_TYPE [Сделка_Тип],_Fld4680_RRRef [Сделка],_Fld4680_RTRef [Сделка_Вид]
					,_Fld4681 [Комментарий]
					,_Fld4682 [КратностьВзаиморасчетов]
					,_Fld4683 [ОтражатьВБухгалтерскомУчете]
					,_Fld4684 [КурсВзаиморасчетов]
					,_Fld4685 [ОтражатьВУправленческомУчете]
					,_Fld4686RRef [Подразделение]
					,_Fld4687RRef [Ответственный]
					,_Fld4688 [РаспределятьПропорциональноКоличеству]
					,_Fld4689 [СуммаВключаетНДС]
					,_Fld4690 [СуммаДокумента]
					,_Fld4691RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld4692RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld4693RRef [ТипЦен]
					,_Fld4694 [УчитыватьНДС]
					,_Fld4695_TYPE [Проект_Тип],_Fld4695_RRRef [Проект],_Fld4695_RTRef [Проект_Вид]
					,_Fld4696 [ИспользоватьМатериалы]
					,_Fld4697 [ИспользоватьПрочиеЗатраты]
					,_Fld4698 [ИспользоватьЗаказы]
					,_Fld4699RRef [Грузополучатель]
					,_Fld4700 [АдресДоставки]
					,_Fld4701 [ДополнениеКАдресуДоставки]
					,_Fld4702RRef [Исполнитель]
					,_Fld4703 [ИсполнительПоПриказу]
					From _Document301(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.АктОбОказанииПроизводственныхУслуг();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.АктОбОказанииПроизводственныхУслуг();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.АвтораспределениеПрочихЗатрат = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.АвтораспределениеМатериалов = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(14);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(15);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(17);
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.РаспределятьПропорциональноКоличеству = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(22))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(23);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ИспользоватьМатериалы = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.ИспользоватьПрочиеЗатраты = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.ИспользоватьЗаказы = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(35);
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(36);
							Ссылка.ИсполнительПоПриказу = Читалка.GetString(38);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.АктОбОказанииПроизводственныхУслуг СтраницаПоНомеру(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld4672 [ОтражатьВНалоговомУчете]
					,_Fld4673 [АвтораспределениеПрочихЗатрат]
					,_Fld4674 [АвтораспределениеМатериалов]
					,_Fld4675RRef [Организация]
					,_Fld4676RRef [ПодразделениеОрганизации]
					,_Fld4677RRef [Контрагент]
					,_Fld4678RRef [ДоговорКонтрагента]
					,_Fld4679RRef [ВалютаДокумента]
					,_Fld4680_TYPE [Сделка_Тип],_Fld4680_RRRef [Сделка],_Fld4680_RTRef [Сделка_Вид]
					,_Fld4681 [Комментарий]
					,_Fld4682 [КратностьВзаиморасчетов]
					,_Fld4683 [ОтражатьВБухгалтерскомУчете]
					,_Fld4684 [КурсВзаиморасчетов]
					,_Fld4685 [ОтражатьВУправленческомУчете]
					,_Fld4686RRef [Подразделение]
					,_Fld4687RRef [Ответственный]
					,_Fld4688 [РаспределятьПропорциональноКоличеству]
					,_Fld4689 [СуммаВключаетНДС]
					,_Fld4690 [СуммаДокумента]
					,_Fld4691RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld4692RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld4693RRef [ТипЦен]
					,_Fld4694 [УчитыватьНДС]
					,_Fld4695_TYPE [Проект_Тип],_Fld4695_RRRef [Проект],_Fld4695_RTRef [Проект_Вид]
					,_Fld4696 [ИспользоватьМатериалы]
					,_Fld4697 [ИспользоватьПрочиеЗатраты]
					,_Fld4698 [ИспользоватьЗаказы]
					,_Fld4699RRef [Грузополучатель]
					,_Fld4700 [АдресДоставки]
					,_Fld4701 [ДополнениеКАдресуДоставки]
					,_Fld4702RRef [Исполнитель]
					,_Fld4703 [ИсполнительПоПриказу]
					From _Document301(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.АктОбОказанииПроизводственныхУслуг();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.АктОбОказанииПроизводственныхУслуг();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.АвтораспределениеПрочихЗатрат = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.АвтораспределениеМатериалов = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(14);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(15);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(17);
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.РаспределятьПропорциональноКоличеству = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(22))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(23);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ИспользоватьМатериалы = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.ИспользоватьПрочиеЗатраты = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.ИспользоватьЗаказы = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(35);
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(36);
							Ссылка.ИсполнительПоПриказу = Читалка.GetString(38);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.ДокументыОбъект.АктОбОказанииПроизводственныхУслуг СоздатьЭлемент()
		{
			var Объект = new V82.ДокументыОбъект.АктОбОказанииПроизводственныхУслуг();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.Комментарий = "";
			Объект.АдресДоставки = "";
			Объект.ДополнениеКАдресуДоставки = "";
			Объект.ИсполнительПоПриказу = "";
			return Объект;
		}
	}
}