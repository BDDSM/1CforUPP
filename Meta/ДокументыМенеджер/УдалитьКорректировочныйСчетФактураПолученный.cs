
using System;
using System.Data.SqlClient;
using V82;
using V82.ДокументыСсылка;
using V82.Документы;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Документы//Менеджер
{
	public partial class УдалитьКорректировочныйСчетФактураПолученный:ДокументМенеджер
	{
		
		public static ДокументыСсылка.УдалитьКорректировочныйСчетФактураПолученный НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld25673RRef [Организация]
					,_Fld25674RRef [Контрагент]
					,_Fld25675RRef [ДоговорКонтрагента]
					,_Fld25676RRef [СчетФактура]
					,_Fld25677 [НомерВходящегоДокумента]
					,_Fld25678 [ДатаВходящегоДокумента]
					,_Fld25679 [НаименованиеПродавца]
					,_Fld25680 [ИННПродавца]
					,_Fld25681 [КПППродавца]
					,_Fld25682RRef [ВалютаДокумента]
					,_Fld25683RRef [Ответственный]
					,_Fld25684 [Комментарий]
					,_Fld25685 [РазницаСНДСКУменьшению]
					,_Fld25686 [РазницаСНДСКДоплате]
					,_Fld25687 [РазницаНДСКУменьшению]
					,_Fld25688 [РазницаНДСКДоплате]
					,_Fld25689 [РучнаяКорректировка]
					From _Document23178(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.УдалитьКорректировочныйСчетФактураПолученный();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.СчетФактура = V82.ДокументыСсылка.СчетФактураПолученный.ВзятьИзКэша((byte[])Читалка.GetValue(6));
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(7);
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(8);
							Ссылка.НаименованиеПродавца = Читалка.GetString(9);
							Ссылка.ИННПродавца = Читалка.GetString(10);
							Ссылка.КПППродавца = Читалка.GetString(11);
							Ссылка.Комментарий = Читалка.GetString(14);
							Ссылка.РазницаСНДСКУменьшению = Читалка.GetDecimal(15);
							Ссылка.РазницаСНДСКДоплате = Читалка.GetDecimal(16);
							Ссылка.РазницаНДСКУменьшению = Читалка.GetDecimal(17);
							Ссылка.РазницаНДСКДоплате = Читалка.GetDecimal(18);
							Ссылка.РучнаяКорректировка = ((byte[])Читалка.GetValue(19))[0]==1;
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыСсылка.УдалитьКорректировочныйСчетФактураПолученный НайтиПоНомеру(string Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld25673RRef [Организация]
					,_Fld25674RRef [Контрагент]
					,_Fld25675RRef [ДоговорКонтрагента]
					,_Fld25676RRef [СчетФактура]
					,_Fld25677 [НомерВходящегоДокумента]
					,_Fld25678 [ДатаВходящегоДокумента]
					,_Fld25679 [НаименованиеПродавца]
					,_Fld25680 [ИННПродавца]
					,_Fld25681 [КПППродавца]
					,_Fld25682RRef [ВалютаДокумента]
					,_Fld25683RRef [Ответственный]
					,_Fld25684 [Комментарий]
					,_Fld25685 [РазницаСНДСКУменьшению]
					,_Fld25686 [РазницаСНДСКДоплате]
					,_Fld25687 [РазницаНДСКУменьшению]
					,_Fld25688 [РазницаНДСКДоплате]
					,_Fld25689 [РучнаяКорректировка]
					From _Document23178(NOLOCK)
					Where _Number = @Номер";
					Команда.Parameters.AddWithValue("Номер", Номер);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.УдалитьКорректировочныйСчетФактураПолученный();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.СчетФактура = V82.ДокументыСсылка.СчетФактураПолученный.ВзятьИзКэша((byte[])Читалка.GetValue(6));
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(7);
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(8);
							Ссылка.НаименованиеПродавца = Читалка.GetString(9);
							Ссылка.ИННПродавца = Читалка.GetString(10);
							Ссылка.КПППродавца = Читалка.GetString(11);
							Ссылка.Комментарий = Читалка.GetString(14);
							Ссылка.РазницаСНДСКУменьшению = Читалка.GetDecimal(15);
							Ссылка.РазницаСНДСКДоплате = Читалка.GetDecimal(16);
							Ссылка.РазницаНДСКУменьшению = Читалка.GetDecimal(17);
							Ссылка.РазницаНДСКДоплате = Читалка.GetDecimal(18);
							Ссылка.РучнаяКорректировка = ((byte[])Читалка.GetValue(19))[0]==1;
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыВыборка.УдалитьКорректировочныйСчетФактураПолученный Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld25673RRef [Организация]
					,_Fld25674RRef [Контрагент]
					,_Fld25675RRef [ДоговорКонтрагента]
					,_Fld25676RRef [СчетФактура]
					,_Fld25677 [НомерВходящегоДокумента]
					,_Fld25678 [ДатаВходящегоДокумента]
					,_Fld25679 [НаименованиеПродавца]
					,_Fld25680 [ИННПродавца]
					,_Fld25681 [КПППродавца]
					,_Fld25682RRef [ВалютаДокумента]
					,_Fld25683RRef [Ответственный]
					,_Fld25684 [Комментарий]
					,_Fld25685 [РазницаСНДСКУменьшению]
					,_Fld25686 [РазницаСНДСКДоплате]
					,_Fld25687 [РазницаНДСКУменьшению]
					,_Fld25688 [РазницаНДСКДоплате]
					,_Fld25689 [РучнаяКорректировка]
					From _Document23178(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.УдалитьКорректировочныйСчетФактураПолученный();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.УдалитьКорректировочныйСчетФактураПолученный();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.СчетФактура = V82.ДокументыСсылка.СчетФактураПолученный.ВзятьИзКэша((byte[])Читалка.GetValue(6));
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(7);
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(8);
							Ссылка.НаименованиеПродавца = Читалка.GetString(9);
							Ссылка.ИННПродавца = Читалка.GetString(10);
							Ссылка.КПППродавца = Читалка.GetString(11);
							Ссылка.Комментарий = Читалка.GetString(14);
							Ссылка.РазницаСНДСКУменьшению = Читалка.GetDecimal(15);
							Ссылка.РазницаСНДСКДоплате = Читалка.GetDecimal(16);
							Ссылка.РазницаНДСКУменьшению = Читалка.GetDecimal(17);
							Ссылка.РазницаНДСКДоплате = Читалка.GetDecimal(18);
							Ссылка.РучнаяКорректировка = ((byte[])Читалка.GetValue(19))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.УдалитьКорректировочныйСчетФактураПолученный ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld25673RRef [Организация]
					,_Fld25674RRef [Контрагент]
					,_Fld25675RRef [ДоговорКонтрагента]
					,_Fld25676RRef [СчетФактура]
					,_Fld25677 [НомерВходящегоДокумента]
					,_Fld25678 [ДатаВходящегоДокумента]
					,_Fld25679 [НаименованиеПродавца]
					,_Fld25680 [ИННПродавца]
					,_Fld25681 [КПППродавца]
					,_Fld25682RRef [ВалютаДокумента]
					,_Fld25683RRef [Ответственный]
					,_Fld25684 [Комментарий]
					,_Fld25685 [РазницаСНДСКУменьшению]
					,_Fld25686 [РазницаСНДСКДоплате]
					,_Fld25687 [РазницаНДСКУменьшению]
					,_Fld25688 [РазницаНДСКДоплате]
					,_Fld25689 [РучнаяКорректировка]
					From _Document23178(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.УдалитьКорректировочныйСчетФактураПолученный();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.УдалитьКорректировочныйСчетФактураПолученный();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.СчетФактура = V82.ДокументыСсылка.СчетФактураПолученный.ВзятьИзКэша((byte[])Читалка.GetValue(6));
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(7);
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(8);
							Ссылка.НаименованиеПродавца = Читалка.GetString(9);
							Ссылка.ИННПродавца = Читалка.GetString(10);
							Ссылка.КПППродавца = Читалка.GetString(11);
							Ссылка.Комментарий = Читалка.GetString(14);
							Ссылка.РазницаСНДСКУменьшению = Читалка.GetDecimal(15);
							Ссылка.РазницаСНДСКДоплате = Читалка.GetDecimal(16);
							Ссылка.РазницаНДСКУменьшению = Читалка.GetDecimal(17);
							Ссылка.РазницаНДСКДоплате = Читалка.GetDecimal(18);
							Ссылка.РучнаяКорректировка = ((byte[])Читалка.GetValue(19))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.УдалитьКорректировочныйСчетФактураПолученный ВыбратьПоНомеру(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld25673RRef [Организация]
					,_Fld25674RRef [Контрагент]
					,_Fld25675RRef [ДоговорКонтрагента]
					,_Fld25676RRef [СчетФактура]
					,_Fld25677 [НомерВходящегоДокумента]
					,_Fld25678 [ДатаВходящегоДокумента]
					,_Fld25679 [НаименованиеПродавца]
					,_Fld25680 [ИННПродавца]
					,_Fld25681 [КПППродавца]
					,_Fld25682RRef [ВалютаДокумента]
					,_Fld25683RRef [Ответственный]
					,_Fld25684 [Комментарий]
					,_Fld25685 [РазницаСНДСКУменьшению]
					,_Fld25686 [РазницаСНДСКДоплате]
					,_Fld25687 [РазницаНДСКУменьшению]
					,_Fld25688 [РазницаНДСКДоплате]
					,_Fld25689 [РучнаяКорректировка]
					From _Document23178(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.УдалитьКорректировочныйСчетФактураПолученный();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.УдалитьКорректировочныйСчетФактураПолученный();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.СчетФактура = V82.ДокументыСсылка.СчетФактураПолученный.ВзятьИзКэша((byte[])Читалка.GetValue(6));
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(7);
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(8);
							Ссылка.НаименованиеПродавца = Читалка.GetString(9);
							Ссылка.ИННПродавца = Читалка.GetString(10);
							Ссылка.КПППродавца = Читалка.GetString(11);
							Ссылка.Комментарий = Читалка.GetString(14);
							Ссылка.РазницаСНДСКУменьшению = Читалка.GetDecimal(15);
							Ссылка.РазницаСНДСКДоплате = Читалка.GetDecimal(16);
							Ссылка.РазницаНДСКУменьшению = Читалка.GetDecimal(17);
							Ссылка.РазницаНДСКДоплате = Читалка.GetDecimal(18);
							Ссылка.РучнаяКорректировка = ((byte[])Читалка.GetValue(19))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.УдалитьКорректировочныйСчетФактураПолученный СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld25673RRef [Организация]
					,_Fld25674RRef [Контрагент]
					,_Fld25675RRef [ДоговорКонтрагента]
					,_Fld25676RRef [СчетФактура]
					,_Fld25677 [НомерВходящегоДокумента]
					,_Fld25678 [ДатаВходящегоДокумента]
					,_Fld25679 [НаименованиеПродавца]
					,_Fld25680 [ИННПродавца]
					,_Fld25681 [КПППродавца]
					,_Fld25682RRef [ВалютаДокумента]
					,_Fld25683RRef [Ответственный]
					,_Fld25684 [Комментарий]
					,_Fld25685 [РазницаСНДСКУменьшению]
					,_Fld25686 [РазницаСНДСКДоплате]
					,_Fld25687 [РазницаНДСКУменьшению]
					,_Fld25688 [РазницаНДСКДоплате]
					,_Fld25689 [РучнаяКорректировка]
					From _Document23178(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.УдалитьКорректировочныйСчетФактураПолученный();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.УдалитьКорректировочныйСчетФактураПолученный();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.СчетФактура = V82.ДокументыСсылка.СчетФактураПолученный.ВзятьИзКэша((byte[])Читалка.GetValue(6));
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(7);
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(8);
							Ссылка.НаименованиеПродавца = Читалка.GetString(9);
							Ссылка.ИННПродавца = Читалка.GetString(10);
							Ссылка.КПППродавца = Читалка.GetString(11);
							Ссылка.Комментарий = Читалка.GetString(14);
							Ссылка.РазницаСНДСКУменьшению = Читалка.GetDecimal(15);
							Ссылка.РазницаСНДСКДоплате = Читалка.GetDecimal(16);
							Ссылка.РазницаНДСКУменьшению = Читалка.GetDecimal(17);
							Ссылка.РазницаНДСКДоплате = Читалка.GetDecimal(18);
							Ссылка.РучнаяКорректировка = ((byte[])Читалка.GetValue(19))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.УдалитьКорректировочныйСчетФактураПолученный СтраницаПоНомеру(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld25673RRef [Организация]
					,_Fld25674RRef [Контрагент]
					,_Fld25675RRef [ДоговорКонтрагента]
					,_Fld25676RRef [СчетФактура]
					,_Fld25677 [НомерВходящегоДокумента]
					,_Fld25678 [ДатаВходящегоДокумента]
					,_Fld25679 [НаименованиеПродавца]
					,_Fld25680 [ИННПродавца]
					,_Fld25681 [КПППродавца]
					,_Fld25682RRef [ВалютаДокумента]
					,_Fld25683RRef [Ответственный]
					,_Fld25684 [Комментарий]
					,_Fld25685 [РазницаСНДСКУменьшению]
					,_Fld25686 [РазницаСНДСКДоплате]
					,_Fld25687 [РазницаНДСКУменьшению]
					,_Fld25688 [РазницаНДСКДоплате]
					,_Fld25689 [РучнаяКорректировка]
					From _Document23178(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.УдалитьКорректировочныйСчетФактураПолученный();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.УдалитьКорректировочныйСчетФактураПолученный();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.СчетФактура = V82.ДокументыСсылка.СчетФактураПолученный.ВзятьИзКэша((byte[])Читалка.GetValue(6));
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(7);
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(8);
							Ссылка.НаименованиеПродавца = Читалка.GetString(9);
							Ссылка.ИННПродавца = Читалка.GetString(10);
							Ссылка.КПППродавца = Читалка.GetString(11);
							Ссылка.Комментарий = Читалка.GetString(14);
							Ссылка.РазницаСНДСКУменьшению = Читалка.GetDecimal(15);
							Ссылка.РазницаСНДСКДоплате = Читалка.GetDecimal(16);
							Ссылка.РазницаНДСКУменьшению = Читалка.GetDecimal(17);
							Ссылка.РазницаНДСКДоплате = Читалка.GetDecimal(18);
							Ссылка.РучнаяКорректировка = ((byte[])Читалка.GetValue(19))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.ДокументыОбъект.УдалитьКорректировочныйСчетФактураПолученный СоздатьЭлемент()
		{
			var Объект = new V82.ДокументыОбъект.УдалитьКорректировочныйСчетФактураПолученный();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.НомерВходящегоДокумента = "";
			Объект.НаименованиеПродавца = "";
			Объект.ИННПродавца = "";
			Объект.КПППродавца = "";
			Объект.Комментарий = "";
			Объект.СчетФактура = new V82.ДокументыСсылка.СчетФактураПолученный();
			return Объект;
		}
	}
}