
using System;
using System.Data.SqlClient;
using V82;
using V82.ДокументыСсылка;
using V82.Документы;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Документы//Менеджер
{
	public partial class ОтражениеРеализацииТоваровИУслугНДС:ДокументМенеджер
	{
		
		public static ДокументыСсылка.ОтражениеРеализацииТоваровИУслугНДС НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld11337RRef [ВалютаДокумента]
					,_Fld11338RRef [Грузоотправитель]
					,_Fld11339RRef [Грузополучатель]
					,_Fld11340RRef [ДоговорКонтрагента]
					,_Fld11341 [ИспользоватьДокументРасчетовКакСчетФактуру]
					,_Fld11342 [Комментарий]
					,_Fld11343RRef [Контрагент]
					,_Fld11344 [КратностьВзаиморасчетов]
					,_Fld11345 [КурсВзаиморасчетов]
					,_Fld11346RRef [Организация]
					,_Fld11347 [ПрямаяЗаписьВКнигу]
					,_Fld11348_TYPE [РасчетныйДокумент_Тип],_Fld11348_RRRef [РасчетныйДокумент],_Fld11348_RTRef [РасчетныйДокумент_Вид]
					,_Fld11349 [СуммаВключаетНДС]
					,_Fld11350 [СуммаДокумента]
					,_Fld11351RRef [ТипЦен]
					,_Fld11352 [ФормироватьПроводки]
					,_Fld11353 [ДатаВходящегоДокумента]
					,_Fld11354 [НомерВходящегоДокумента]
					,_Fld11355 [ФормироватьСторнирующиеЗаписиДопЛистовВручную]
					,_Fld11356 [ЗаписьДополнительногоЛиста]
					,_Fld11357 [КорректируемыйПериод]
					From _Document472(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ОтражениеРеализацииТоваровИУслугНДС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ИспользоватьДокументРасчетовКакСчетФактуру = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(8);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(10);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(11);
							Ссылка.ПрямаяЗаписьВКнигу = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(18);
							Ссылка.ФормироватьПроводки = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(21);
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(22);
							Ссылка.ФормироватьСторнирующиеЗаписиДопЛистовВручную = ((byte[])Читалка.GetValue(23))[0]==1;
							Ссылка.ЗаписьДополнительногоЛиста = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.КорректируемыйПериод = Читалка.GetDateTime(25);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыСсылка.ОтражениеРеализацииТоваровИУслугНДС НайтиПоНомеру(string Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld11337RRef [ВалютаДокумента]
					,_Fld11338RRef [Грузоотправитель]
					,_Fld11339RRef [Грузополучатель]
					,_Fld11340RRef [ДоговорКонтрагента]
					,_Fld11341 [ИспользоватьДокументРасчетовКакСчетФактуру]
					,_Fld11342 [Комментарий]
					,_Fld11343RRef [Контрагент]
					,_Fld11344 [КратностьВзаиморасчетов]
					,_Fld11345 [КурсВзаиморасчетов]
					,_Fld11346RRef [Организация]
					,_Fld11347 [ПрямаяЗаписьВКнигу]
					,_Fld11348_TYPE [РасчетныйДокумент_Тип],_Fld11348_RRRef [РасчетныйДокумент],_Fld11348_RTRef [РасчетныйДокумент_Вид]
					,_Fld11349 [СуммаВключаетНДС]
					,_Fld11350 [СуммаДокумента]
					,_Fld11351RRef [ТипЦен]
					,_Fld11352 [ФормироватьПроводки]
					,_Fld11353 [ДатаВходящегоДокумента]
					,_Fld11354 [НомерВходящегоДокумента]
					,_Fld11355 [ФормироватьСторнирующиеЗаписиДопЛистовВручную]
					,_Fld11356 [ЗаписьДополнительногоЛиста]
					,_Fld11357 [КорректируемыйПериод]
					From _Document472(NOLOCK)
					Where _Number = @Номер";
					Команда.Parameters.AddWithValue("Номер", Номер);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ОтражениеРеализацииТоваровИУслугНДС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ИспользоватьДокументРасчетовКакСчетФактуру = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(8);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(10);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(11);
							Ссылка.ПрямаяЗаписьВКнигу = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(18);
							Ссылка.ФормироватьПроводки = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(21);
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(22);
							Ссылка.ФормироватьСторнирующиеЗаписиДопЛистовВручную = ((byte[])Читалка.GetValue(23))[0]==1;
							Ссылка.ЗаписьДополнительногоЛиста = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.КорректируемыйПериод = Читалка.GetDateTime(25);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыВыборка.ОтражениеРеализацииТоваровИУслугНДС Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld11337RRef [ВалютаДокумента]
					,_Fld11338RRef [Грузоотправитель]
					,_Fld11339RRef [Грузополучатель]
					,_Fld11340RRef [ДоговорКонтрагента]
					,_Fld11341 [ИспользоватьДокументРасчетовКакСчетФактуру]
					,_Fld11342 [Комментарий]
					,_Fld11343RRef [Контрагент]
					,_Fld11344 [КратностьВзаиморасчетов]
					,_Fld11345 [КурсВзаиморасчетов]
					,_Fld11346RRef [Организация]
					,_Fld11347 [ПрямаяЗаписьВКнигу]
					,_Fld11348_TYPE [РасчетныйДокумент_Тип],_Fld11348_RRRef [РасчетныйДокумент],_Fld11348_RTRef [РасчетныйДокумент_Вид]
					,_Fld11349 [СуммаВключаетНДС]
					,_Fld11350 [СуммаДокумента]
					,_Fld11351RRef [ТипЦен]
					,_Fld11352 [ФормироватьПроводки]
					,_Fld11353 [ДатаВходящегоДокумента]
					,_Fld11354 [НомерВходящегоДокумента]
					,_Fld11355 [ФормироватьСторнирующиеЗаписиДопЛистовВручную]
					,_Fld11356 [ЗаписьДополнительногоЛиста]
					,_Fld11357 [КорректируемыйПериод]
					From _Document472(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ОтражениеРеализацииТоваровИУслугНДС();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ОтражениеРеализацииТоваровИУслугНДС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ИспользоватьДокументРасчетовКакСчетФактуру = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(8);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(10);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(11);
							Ссылка.ПрямаяЗаписьВКнигу = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(18);
							Ссылка.ФормироватьПроводки = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(21);
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(22);
							Ссылка.ФормироватьСторнирующиеЗаписиДопЛистовВручную = ((byte[])Читалка.GetValue(23))[0]==1;
							Ссылка.ЗаписьДополнительногоЛиста = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.КорректируемыйПериод = Читалка.GetDateTime(25);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ОтражениеРеализацииТоваровИУслугНДС ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld11337RRef [ВалютаДокумента]
					,_Fld11338RRef [Грузоотправитель]
					,_Fld11339RRef [Грузополучатель]
					,_Fld11340RRef [ДоговорКонтрагента]
					,_Fld11341 [ИспользоватьДокументРасчетовКакСчетФактуру]
					,_Fld11342 [Комментарий]
					,_Fld11343RRef [Контрагент]
					,_Fld11344 [КратностьВзаиморасчетов]
					,_Fld11345 [КурсВзаиморасчетов]
					,_Fld11346RRef [Организация]
					,_Fld11347 [ПрямаяЗаписьВКнигу]
					,_Fld11348_TYPE [РасчетныйДокумент_Тип],_Fld11348_RRRef [РасчетныйДокумент],_Fld11348_RTRef [РасчетныйДокумент_Вид]
					,_Fld11349 [СуммаВключаетНДС]
					,_Fld11350 [СуммаДокумента]
					,_Fld11351RRef [ТипЦен]
					,_Fld11352 [ФормироватьПроводки]
					,_Fld11353 [ДатаВходящегоДокумента]
					,_Fld11354 [НомерВходящегоДокумента]
					,_Fld11355 [ФормироватьСторнирующиеЗаписиДопЛистовВручную]
					,_Fld11356 [ЗаписьДополнительногоЛиста]
					,_Fld11357 [КорректируемыйПериод]
					From _Document472(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ОтражениеРеализацииТоваровИУслугНДС();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ОтражениеРеализацииТоваровИУслугНДС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ИспользоватьДокументРасчетовКакСчетФактуру = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(8);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(10);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(11);
							Ссылка.ПрямаяЗаписьВКнигу = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(18);
							Ссылка.ФормироватьПроводки = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(21);
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(22);
							Ссылка.ФормироватьСторнирующиеЗаписиДопЛистовВручную = ((byte[])Читалка.GetValue(23))[0]==1;
							Ссылка.ЗаписьДополнительногоЛиста = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.КорректируемыйПериод = Читалка.GetDateTime(25);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ОтражениеРеализацииТоваровИУслугНДС ВыбратьПоНомеру(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld11337RRef [ВалютаДокумента]
					,_Fld11338RRef [Грузоотправитель]
					,_Fld11339RRef [Грузополучатель]
					,_Fld11340RRef [ДоговорКонтрагента]
					,_Fld11341 [ИспользоватьДокументРасчетовКакСчетФактуру]
					,_Fld11342 [Комментарий]
					,_Fld11343RRef [Контрагент]
					,_Fld11344 [КратностьВзаиморасчетов]
					,_Fld11345 [КурсВзаиморасчетов]
					,_Fld11346RRef [Организация]
					,_Fld11347 [ПрямаяЗаписьВКнигу]
					,_Fld11348_TYPE [РасчетныйДокумент_Тип],_Fld11348_RRRef [РасчетныйДокумент],_Fld11348_RTRef [РасчетныйДокумент_Вид]
					,_Fld11349 [СуммаВключаетНДС]
					,_Fld11350 [СуммаДокумента]
					,_Fld11351RRef [ТипЦен]
					,_Fld11352 [ФормироватьПроводки]
					,_Fld11353 [ДатаВходящегоДокумента]
					,_Fld11354 [НомерВходящегоДокумента]
					,_Fld11355 [ФормироватьСторнирующиеЗаписиДопЛистовВручную]
					,_Fld11356 [ЗаписьДополнительногоЛиста]
					,_Fld11357 [КорректируемыйПериод]
					From _Document472(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ОтражениеРеализацииТоваровИУслугНДС();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ОтражениеРеализацииТоваровИУслугНДС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ИспользоватьДокументРасчетовКакСчетФактуру = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(8);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(10);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(11);
							Ссылка.ПрямаяЗаписьВКнигу = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(18);
							Ссылка.ФормироватьПроводки = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(21);
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(22);
							Ссылка.ФормироватьСторнирующиеЗаписиДопЛистовВручную = ((byte[])Читалка.GetValue(23))[0]==1;
							Ссылка.ЗаписьДополнительногоЛиста = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.КорректируемыйПериод = Читалка.GetDateTime(25);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ОтражениеРеализацииТоваровИУслугНДС СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld11337RRef [ВалютаДокумента]
					,_Fld11338RRef [Грузоотправитель]
					,_Fld11339RRef [Грузополучатель]
					,_Fld11340RRef [ДоговорКонтрагента]
					,_Fld11341 [ИспользоватьДокументРасчетовКакСчетФактуру]
					,_Fld11342 [Комментарий]
					,_Fld11343RRef [Контрагент]
					,_Fld11344 [КратностьВзаиморасчетов]
					,_Fld11345 [КурсВзаиморасчетов]
					,_Fld11346RRef [Организация]
					,_Fld11347 [ПрямаяЗаписьВКнигу]
					,_Fld11348_TYPE [РасчетныйДокумент_Тип],_Fld11348_RRRef [РасчетныйДокумент],_Fld11348_RTRef [РасчетныйДокумент_Вид]
					,_Fld11349 [СуммаВключаетНДС]
					,_Fld11350 [СуммаДокумента]
					,_Fld11351RRef [ТипЦен]
					,_Fld11352 [ФормироватьПроводки]
					,_Fld11353 [ДатаВходящегоДокумента]
					,_Fld11354 [НомерВходящегоДокумента]
					,_Fld11355 [ФормироватьСторнирующиеЗаписиДопЛистовВручную]
					,_Fld11356 [ЗаписьДополнительногоЛиста]
					,_Fld11357 [КорректируемыйПериод]
					From _Document472(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ОтражениеРеализацииТоваровИУслугНДС();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ОтражениеРеализацииТоваровИУслугНДС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ИспользоватьДокументРасчетовКакСчетФактуру = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(8);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(10);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(11);
							Ссылка.ПрямаяЗаписьВКнигу = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(18);
							Ссылка.ФормироватьПроводки = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(21);
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(22);
							Ссылка.ФормироватьСторнирующиеЗаписиДопЛистовВручную = ((byte[])Читалка.GetValue(23))[0]==1;
							Ссылка.ЗаписьДополнительногоЛиста = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.КорректируемыйПериод = Читалка.GetDateTime(25);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ОтражениеРеализацииТоваровИУслугНДС СтраницаПоНомеру(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld11337RRef [ВалютаДокумента]
					,_Fld11338RRef [Грузоотправитель]
					,_Fld11339RRef [Грузополучатель]
					,_Fld11340RRef [ДоговорКонтрагента]
					,_Fld11341 [ИспользоватьДокументРасчетовКакСчетФактуру]
					,_Fld11342 [Комментарий]
					,_Fld11343RRef [Контрагент]
					,_Fld11344 [КратностьВзаиморасчетов]
					,_Fld11345 [КурсВзаиморасчетов]
					,_Fld11346RRef [Организация]
					,_Fld11347 [ПрямаяЗаписьВКнигу]
					,_Fld11348_TYPE [РасчетныйДокумент_Тип],_Fld11348_RRRef [РасчетныйДокумент],_Fld11348_RTRef [РасчетныйДокумент_Вид]
					,_Fld11349 [СуммаВключаетНДС]
					,_Fld11350 [СуммаДокумента]
					,_Fld11351RRef [ТипЦен]
					,_Fld11352 [ФормироватьПроводки]
					,_Fld11353 [ДатаВходящегоДокумента]
					,_Fld11354 [НомерВходящегоДокумента]
					,_Fld11355 [ФормироватьСторнирующиеЗаписиДопЛистовВручную]
					,_Fld11356 [ЗаписьДополнительногоЛиста]
					,_Fld11357 [КорректируемыйПериод]
					From _Document472(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ОтражениеРеализацииТоваровИУслугНДС();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ОтражениеРеализацииТоваровИУслугНДС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ИспользоватьДокументРасчетовКакСчетФактуру = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(8);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(10);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(11);
							Ссылка.ПрямаяЗаписьВКнигу = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(18);
							Ссылка.ФормироватьПроводки = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(21);
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(22);
							Ссылка.ФормироватьСторнирующиеЗаписиДопЛистовВручную = ((byte[])Читалка.GetValue(23))[0]==1;
							Ссылка.ЗаписьДополнительногоЛиста = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.КорректируемыйПериод = Читалка.GetDateTime(25);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.ДокументыОбъект.ОтражениеРеализацииТоваровИУслугНДС СоздатьЭлемент()
		{
			var Объект = new V82.ДокументыОбъект.ОтражениеРеализацииТоваровИУслугНДС();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.Комментарий = "";
			Объект.НомерВходящегоДокумента = "";
			return Объект;
		}
	}
}