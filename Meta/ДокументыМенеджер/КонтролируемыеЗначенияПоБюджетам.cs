
using System;
using System.Data.SqlClient;
using V82;
using V82.ДокументыСсылка;
using V82.Документы;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Документы//Менеджер
{
	///<summary>
	///(Упр)
	///</summary>
	public partial class КонтролируемыеЗначенияПоБюджетам:ДокументМенеджер
	{
		
		public static ДокументыСсылка.КонтролируемыеЗначенияПоБюджетам НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld5546RRef [Сценарий]
					,_Fld5547RRef [ВидКонтролируемыхЗначений]
					,_Fld5548RRef [ИспользованиеКонтролируемыхЗначений]
					,_Fld5549RRef [ВидОграниченияОборотов]
					,_Fld5550RRef [КонтролирующийСценарий]
					,_Fld5551RRef [Ответственный]
					,_Fld5552 [Комментарий]
					,_Fld5553RRef [Состояние]
					,_Fld5554 [ДатаНачалаКонтролирующегоСценария]
					,_Fld5555 [ДатаКонцаКонтролирующегоСценария]
					,_Fld5556 [КонтролироватьЦФО]
					,_Fld5557 [КонтролироватьПроекты]
					,_Fld5558 [КонтролироватьКонтрагентов]
					,_Fld5559 [КонтролироватьНоменклатуру]
					,_Fld5560RRef [ВидОтклоненияКонтролируемыхЗначений]
					,_Fld5561 [Отклонение]
					From _Document301(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.КонтролируемыеЗначенияПоБюджетам();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидКонтролируемыхЗначений = V82.Перечисления/*Ссылка*/.ВидыКонтролируемогоЗначенияБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ИспользованиеКонтролируемыхЗначений = V82.Перечисления/*Ссылка*/.ИспользованиеКонтролируемыхЗначенийБюджетов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.ВидОграниченияОборотов = V82.Перечисления/*Ссылка*/.ВидыОграниченийОборотовБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(6));
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.Состояние = V82.Перечисления/*Ссылка*/.СостоянияОбъектов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(10));
							Ссылка.ДатаНачалаКонтролирующегоСценария = Читалка.GetDateTime(11);
							Ссылка.ДатаКонцаКонтролирующегоСценария = Читалка.GetDateTime(12);
							Ссылка.КонтролироватьЦФО = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.КонтролироватьПроекты = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.КонтролироватьКонтрагентов = ((byte[])Читалка.GetValue(15))[0]==1;
							Ссылка.КонтролироватьНоменклатуру = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ВидОтклоненияКонтролируемыхЗначений = V82.Перечисления/*Ссылка*/.ВидыОтклоненийКонтролируемыхЗначенийБюджетов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(17));
							Ссылка.Отклонение = Читалка.GetDecimal(18);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыСсылка.КонтролируемыеЗначенияПоБюджетам НайтиПоНомеру(string Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld5546RRef [Сценарий]
					,_Fld5547RRef [ВидКонтролируемыхЗначений]
					,_Fld5548RRef [ИспользованиеКонтролируемыхЗначений]
					,_Fld5549RRef [ВидОграниченияОборотов]
					,_Fld5550RRef [КонтролирующийСценарий]
					,_Fld5551RRef [Ответственный]
					,_Fld5552 [Комментарий]
					,_Fld5553RRef [Состояние]
					,_Fld5554 [ДатаНачалаКонтролирующегоСценария]
					,_Fld5555 [ДатаКонцаКонтролирующегоСценария]
					,_Fld5556 [КонтролироватьЦФО]
					,_Fld5557 [КонтролироватьПроекты]
					,_Fld5558 [КонтролироватьКонтрагентов]
					,_Fld5559 [КонтролироватьНоменклатуру]
					,_Fld5560RRef [ВидОтклоненияКонтролируемыхЗначений]
					,_Fld5561 [Отклонение]
					From _Document301(NOLOCK)
					Where _Number = @Номер";
					Команда.Parameters.AddWithValue("Номер", Номер);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.КонтролируемыеЗначенияПоБюджетам();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидКонтролируемыхЗначений = V82.Перечисления/*Ссылка*/.ВидыКонтролируемогоЗначенияБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ИспользованиеКонтролируемыхЗначений = V82.Перечисления/*Ссылка*/.ИспользованиеКонтролируемыхЗначенийБюджетов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.ВидОграниченияОборотов = V82.Перечисления/*Ссылка*/.ВидыОграниченийОборотовБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(6));
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.Состояние = V82.Перечисления/*Ссылка*/.СостоянияОбъектов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(10));
							Ссылка.ДатаНачалаКонтролирующегоСценария = Читалка.GetDateTime(11);
							Ссылка.ДатаКонцаКонтролирующегоСценария = Читалка.GetDateTime(12);
							Ссылка.КонтролироватьЦФО = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.КонтролироватьПроекты = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.КонтролироватьКонтрагентов = ((byte[])Читалка.GetValue(15))[0]==1;
							Ссылка.КонтролироватьНоменклатуру = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ВидОтклоненияКонтролируемыхЗначений = V82.Перечисления/*Ссылка*/.ВидыОтклоненийКонтролируемыхЗначенийБюджетов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(17));
							Ссылка.Отклонение = Читалка.GetDecimal(18);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыВыборка.КонтролируемыеЗначенияПоБюджетам Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld5546RRef [Сценарий]
					,_Fld5547RRef [ВидКонтролируемыхЗначений]
					,_Fld5548RRef [ИспользованиеКонтролируемыхЗначений]
					,_Fld5549RRef [ВидОграниченияОборотов]
					,_Fld5550RRef [КонтролирующийСценарий]
					,_Fld5551RRef [Ответственный]
					,_Fld5552 [Комментарий]
					,_Fld5553RRef [Состояние]
					,_Fld5554 [ДатаНачалаКонтролирующегоСценария]
					,_Fld5555 [ДатаКонцаКонтролирующегоСценария]
					,_Fld5556 [КонтролироватьЦФО]
					,_Fld5557 [КонтролироватьПроекты]
					,_Fld5558 [КонтролироватьКонтрагентов]
					,_Fld5559 [КонтролироватьНоменклатуру]
					,_Fld5560RRef [ВидОтклоненияКонтролируемыхЗначений]
					,_Fld5561 [Отклонение]
					From _Document301(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.КонтролируемыеЗначенияПоБюджетам();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.КонтролируемыеЗначенияПоБюджетам();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидКонтролируемыхЗначений = V82.Перечисления/*Ссылка*/.ВидыКонтролируемогоЗначенияБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ИспользованиеКонтролируемыхЗначений = V82.Перечисления/*Ссылка*/.ИспользованиеКонтролируемыхЗначенийБюджетов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.ВидОграниченияОборотов = V82.Перечисления/*Ссылка*/.ВидыОграниченийОборотовБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(6));
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.Состояние = V82.Перечисления/*Ссылка*/.СостоянияОбъектов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(10));
							Ссылка.ДатаНачалаКонтролирующегоСценария = Читалка.GetDateTime(11);
							Ссылка.ДатаКонцаКонтролирующегоСценария = Читалка.GetDateTime(12);
							Ссылка.КонтролироватьЦФО = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.КонтролироватьПроекты = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.КонтролироватьКонтрагентов = ((byte[])Читалка.GetValue(15))[0]==1;
							Ссылка.КонтролироватьНоменклатуру = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ВидОтклоненияКонтролируемыхЗначений = V82.Перечисления/*Ссылка*/.ВидыОтклоненийКонтролируемыхЗначенийБюджетов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(17));
							Ссылка.Отклонение = Читалка.GetDecimal(18);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.КонтролируемыеЗначенияПоБюджетам ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld5546RRef [Сценарий]
					,_Fld5547RRef [ВидКонтролируемыхЗначений]
					,_Fld5548RRef [ИспользованиеКонтролируемыхЗначений]
					,_Fld5549RRef [ВидОграниченияОборотов]
					,_Fld5550RRef [КонтролирующийСценарий]
					,_Fld5551RRef [Ответственный]
					,_Fld5552 [Комментарий]
					,_Fld5553RRef [Состояние]
					,_Fld5554 [ДатаНачалаКонтролирующегоСценария]
					,_Fld5555 [ДатаКонцаКонтролирующегоСценария]
					,_Fld5556 [КонтролироватьЦФО]
					,_Fld5557 [КонтролироватьПроекты]
					,_Fld5558 [КонтролироватьКонтрагентов]
					,_Fld5559 [КонтролироватьНоменклатуру]
					,_Fld5560RRef [ВидОтклоненияКонтролируемыхЗначений]
					,_Fld5561 [Отклонение]
					From _Document301(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.КонтролируемыеЗначенияПоБюджетам();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.КонтролируемыеЗначенияПоБюджетам();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидКонтролируемыхЗначений = V82.Перечисления/*Ссылка*/.ВидыКонтролируемогоЗначенияБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ИспользованиеКонтролируемыхЗначений = V82.Перечисления/*Ссылка*/.ИспользованиеКонтролируемыхЗначенийБюджетов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.ВидОграниченияОборотов = V82.Перечисления/*Ссылка*/.ВидыОграниченийОборотовБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(6));
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.Состояние = V82.Перечисления/*Ссылка*/.СостоянияОбъектов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(10));
							Ссылка.ДатаНачалаКонтролирующегоСценария = Читалка.GetDateTime(11);
							Ссылка.ДатаКонцаКонтролирующегоСценария = Читалка.GetDateTime(12);
							Ссылка.КонтролироватьЦФО = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.КонтролироватьПроекты = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.КонтролироватьКонтрагентов = ((byte[])Читалка.GetValue(15))[0]==1;
							Ссылка.КонтролироватьНоменклатуру = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ВидОтклоненияКонтролируемыхЗначений = V82.Перечисления/*Ссылка*/.ВидыОтклоненийКонтролируемыхЗначенийБюджетов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(17));
							Ссылка.Отклонение = Читалка.GetDecimal(18);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.КонтролируемыеЗначенияПоБюджетам ВыбратьПоНомеру(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld5546RRef [Сценарий]
					,_Fld5547RRef [ВидКонтролируемыхЗначений]
					,_Fld5548RRef [ИспользованиеКонтролируемыхЗначений]
					,_Fld5549RRef [ВидОграниченияОборотов]
					,_Fld5550RRef [КонтролирующийСценарий]
					,_Fld5551RRef [Ответственный]
					,_Fld5552 [Комментарий]
					,_Fld5553RRef [Состояние]
					,_Fld5554 [ДатаНачалаКонтролирующегоСценария]
					,_Fld5555 [ДатаКонцаКонтролирующегоСценария]
					,_Fld5556 [КонтролироватьЦФО]
					,_Fld5557 [КонтролироватьПроекты]
					,_Fld5558 [КонтролироватьКонтрагентов]
					,_Fld5559 [КонтролироватьНоменклатуру]
					,_Fld5560RRef [ВидОтклоненияКонтролируемыхЗначений]
					,_Fld5561 [Отклонение]
					From _Document301(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.КонтролируемыеЗначенияПоБюджетам();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.КонтролируемыеЗначенияПоБюджетам();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидКонтролируемыхЗначений = V82.Перечисления/*Ссылка*/.ВидыКонтролируемогоЗначенияБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ИспользованиеКонтролируемыхЗначений = V82.Перечисления/*Ссылка*/.ИспользованиеКонтролируемыхЗначенийБюджетов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.ВидОграниченияОборотов = V82.Перечисления/*Ссылка*/.ВидыОграниченийОборотовБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(6));
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.Состояние = V82.Перечисления/*Ссылка*/.СостоянияОбъектов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(10));
							Ссылка.ДатаНачалаКонтролирующегоСценария = Читалка.GetDateTime(11);
							Ссылка.ДатаКонцаКонтролирующегоСценария = Читалка.GetDateTime(12);
							Ссылка.КонтролироватьЦФО = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.КонтролироватьПроекты = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.КонтролироватьКонтрагентов = ((byte[])Читалка.GetValue(15))[0]==1;
							Ссылка.КонтролироватьНоменклатуру = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ВидОтклоненияКонтролируемыхЗначений = V82.Перечисления/*Ссылка*/.ВидыОтклоненийКонтролируемыхЗначенийБюджетов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(17));
							Ссылка.Отклонение = Читалка.GetDecimal(18);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.КонтролируемыеЗначенияПоБюджетам СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld5546RRef [Сценарий]
					,_Fld5547RRef [ВидКонтролируемыхЗначений]
					,_Fld5548RRef [ИспользованиеКонтролируемыхЗначений]
					,_Fld5549RRef [ВидОграниченияОборотов]
					,_Fld5550RRef [КонтролирующийСценарий]
					,_Fld5551RRef [Ответственный]
					,_Fld5552 [Комментарий]
					,_Fld5553RRef [Состояние]
					,_Fld5554 [ДатаНачалаКонтролирующегоСценария]
					,_Fld5555 [ДатаКонцаКонтролирующегоСценария]
					,_Fld5556 [КонтролироватьЦФО]
					,_Fld5557 [КонтролироватьПроекты]
					,_Fld5558 [КонтролироватьКонтрагентов]
					,_Fld5559 [КонтролироватьНоменклатуру]
					,_Fld5560RRef [ВидОтклоненияКонтролируемыхЗначений]
					,_Fld5561 [Отклонение]
					From _Document301(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.КонтролируемыеЗначенияПоБюджетам();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.КонтролируемыеЗначенияПоБюджетам();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидКонтролируемыхЗначений = V82.Перечисления/*Ссылка*/.ВидыКонтролируемогоЗначенияБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ИспользованиеКонтролируемыхЗначений = V82.Перечисления/*Ссылка*/.ИспользованиеКонтролируемыхЗначенийБюджетов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.ВидОграниченияОборотов = V82.Перечисления/*Ссылка*/.ВидыОграниченийОборотовБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(6));
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.Состояние = V82.Перечисления/*Ссылка*/.СостоянияОбъектов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(10));
							Ссылка.ДатаНачалаКонтролирующегоСценария = Читалка.GetDateTime(11);
							Ссылка.ДатаКонцаКонтролирующегоСценария = Читалка.GetDateTime(12);
							Ссылка.КонтролироватьЦФО = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.КонтролироватьПроекты = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.КонтролироватьКонтрагентов = ((byte[])Читалка.GetValue(15))[0]==1;
							Ссылка.КонтролироватьНоменклатуру = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ВидОтклоненияКонтролируемыхЗначений = V82.Перечисления/*Ссылка*/.ВидыОтклоненийКонтролируемыхЗначенийБюджетов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(17));
							Ссылка.Отклонение = Читалка.GetDecimal(18);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.КонтролируемыеЗначенияПоБюджетам СтраницаПоНомеру(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld5546RRef [Сценарий]
					,_Fld5547RRef [ВидКонтролируемыхЗначений]
					,_Fld5548RRef [ИспользованиеКонтролируемыхЗначений]
					,_Fld5549RRef [ВидОграниченияОборотов]
					,_Fld5550RRef [КонтролирующийСценарий]
					,_Fld5551RRef [Ответственный]
					,_Fld5552 [Комментарий]
					,_Fld5553RRef [Состояние]
					,_Fld5554 [ДатаНачалаКонтролирующегоСценария]
					,_Fld5555 [ДатаКонцаКонтролирующегоСценария]
					,_Fld5556 [КонтролироватьЦФО]
					,_Fld5557 [КонтролироватьПроекты]
					,_Fld5558 [КонтролироватьКонтрагентов]
					,_Fld5559 [КонтролироватьНоменклатуру]
					,_Fld5560RRef [ВидОтклоненияКонтролируемыхЗначений]
					,_Fld5561 [Отклонение]
					From _Document301(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.КонтролируемыеЗначенияПоБюджетам();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.КонтролируемыеЗначенияПоБюджетам();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидКонтролируемыхЗначений = V82.Перечисления/*Ссылка*/.ВидыКонтролируемогоЗначенияБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ИспользованиеКонтролируемыхЗначений = V82.Перечисления/*Ссылка*/.ИспользованиеКонтролируемыхЗначенийБюджетов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.ВидОграниченияОборотов = V82.Перечисления/*Ссылка*/.ВидыОграниченийОборотовБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(6));
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.Состояние = V82.Перечисления/*Ссылка*/.СостоянияОбъектов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(10));
							Ссылка.ДатаНачалаКонтролирующегоСценария = Читалка.GetDateTime(11);
							Ссылка.ДатаКонцаКонтролирующегоСценария = Читалка.GetDateTime(12);
							Ссылка.КонтролироватьЦФО = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.КонтролироватьПроекты = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.КонтролироватьКонтрагентов = ((byte[])Читалка.GetValue(15))[0]==1;
							Ссылка.КонтролироватьНоменклатуру = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ВидОтклоненияКонтролируемыхЗначений = V82.Перечисления/*Ссылка*/.ВидыОтклоненийКонтролируемыхЗначенийБюджетов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(17));
							Ссылка.Отклонение = Читалка.GetDecimal(18);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.ДокументыОбъект.КонтролируемыеЗначенияПоБюджетам СоздатьЭлемент()
		{
			var Объект = new V82.ДокументыОбъект.КонтролируемыеЗначенияПоБюджетам();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.Комментарий = "";
			Объект.ВидКонтролируемыхЗначений = V82.Перечисления/*Ссылка*/.ВидыКонтролируемогоЗначенияБюджета.ПустаяСсылка;
			Объект.ИспользованиеКонтролируемыхЗначений = V82.Перечисления/*Ссылка*/.ИспользованиеКонтролируемыхЗначенийБюджетов.ПустаяСсылка;
			Объект.ВидОграниченияОборотов = V82.Перечисления/*Ссылка*/.ВидыОграниченийОборотовБюджета.ПустаяСсылка;
			Объект.Состояние = V82.Перечисления/*Ссылка*/.СостоянияОбъектов.ПустаяСсылка;
			Объект.ВидОтклоненияКонтролируемыхЗначений = V82.Перечисления/*Ссылка*/.ВидыОтклоненийКонтролируемыхЗначенийБюджетов.ПустаяСсылка;
			return Объект;
		}
	}
}