
using System;
using System.Data.SqlClient;
using V82;
using V82.ДокументыСсылка;
using V82.Документы;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Документы//Менеджер
{
	///<summary>
	///(Общ)
	///</summary>
	public partial class ПередачаОС:ДокументМенеджер
	{
		
		public static ДокументыСсылка.ПередачаОС НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld12214RRef [Ответственный]
					,_Fld12215 [АдресДоставки]
					,_Fld12216 [Комментарий]
					,_Fld12217RRef [Организация]
					,_Fld12218 [ОтражатьВНалоговомУчете]
					,_Fld12219RRef [ДокПодготовкаКПередачеОС]
					,_Fld12220RRef [ВалютаДокумента]
					,_Fld12221RRef [ДоговорКонтрагента]
					,_Fld12222_TYPE [Сделка_Тип],_Fld12222_RRRef [Сделка],_Fld12222_RTRef [Сделка_Вид]
					,_Fld12223RRef [Контрагент]
					,_Fld12224 [КратностьВзаиморасчетов]
					,_Fld12225 [КурсВзаиморасчетов]
					,_Fld12226 [ОтражатьВБухгалтерскомУчете]
					,_Fld12227 [НДСВключенВСтоимость]
					,_Fld12228 [ОтражатьВУправленческомУчете]
					,_Fld12229RRef [Подразделение]
					,_Fld12230 [СуммаВключаетНДС]
					,_Fld12231RRef [Событие]
					,_Fld12232 [СуммаДокумента]
					,_Fld12233RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld12234RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld12235 [УчитыватьНДС]
					,_Fld12236RRef [Грузоотправитель]
					,_Fld12237RRef [СобытиеРегл]
					,_Fld12238RRef [Грузополучатель]
					,_Fld12239 [ВосстановитьАмортизационнуюПремию]
					,_Fld12240RRef [СтатьяДляВосстановленияАмортизационнойПремии]
					,_Fld12241 [ПравоСобственностиПереходитПослеГосРегистрации]
					From _Document487(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПередачаОС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(4);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.ДокПодготовкаКПередачеОС = V82.ДокументыСсылка.ПодготовкаКПередачеОС.ВзятьИзКэша((byte[])Читалка.GetValue(8));
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(15);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(16);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(23);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.ВосстановитьАмортизационнуюПремию = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ПравоСобственностиПереходитПослеГосРегистрации = ((byte[])Читалка.GetValue(32))[0]==1;
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыСсылка.ПередачаОС НайтиПоНомеру(string Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld12214RRef [Ответственный]
					,_Fld12215 [АдресДоставки]
					,_Fld12216 [Комментарий]
					,_Fld12217RRef [Организация]
					,_Fld12218 [ОтражатьВНалоговомУчете]
					,_Fld12219RRef [ДокПодготовкаКПередачеОС]
					,_Fld12220RRef [ВалютаДокумента]
					,_Fld12221RRef [ДоговорКонтрагента]
					,_Fld12222_TYPE [Сделка_Тип],_Fld12222_RRRef [Сделка],_Fld12222_RTRef [Сделка_Вид]
					,_Fld12223RRef [Контрагент]
					,_Fld12224 [КратностьВзаиморасчетов]
					,_Fld12225 [КурсВзаиморасчетов]
					,_Fld12226 [ОтражатьВБухгалтерскомУчете]
					,_Fld12227 [НДСВключенВСтоимость]
					,_Fld12228 [ОтражатьВУправленческомУчете]
					,_Fld12229RRef [Подразделение]
					,_Fld12230 [СуммаВключаетНДС]
					,_Fld12231RRef [Событие]
					,_Fld12232 [СуммаДокумента]
					,_Fld12233RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld12234RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld12235 [УчитыватьНДС]
					,_Fld12236RRef [Грузоотправитель]
					,_Fld12237RRef [СобытиеРегл]
					,_Fld12238RRef [Грузополучатель]
					,_Fld12239 [ВосстановитьАмортизационнуюПремию]
					,_Fld12240RRef [СтатьяДляВосстановленияАмортизационнойПремии]
					,_Fld12241 [ПравоСобственностиПереходитПослеГосРегистрации]
					From _Document487(NOLOCK)
					Where _Number = @Номер";
					Команда.Parameters.AddWithValue("Номер", Номер);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПередачаОС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(4);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.ДокПодготовкаКПередачеОС = V82.ДокументыСсылка.ПодготовкаКПередачеОС.ВзятьИзКэша((byte[])Читалка.GetValue(8));
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(15);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(16);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(23);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.ВосстановитьАмортизационнуюПремию = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ПравоСобственностиПереходитПослеГосРегистрации = ((byte[])Читалка.GetValue(32))[0]==1;
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПередачаОС Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld12214RRef [Ответственный]
					,_Fld12215 [АдресДоставки]
					,_Fld12216 [Комментарий]
					,_Fld12217RRef [Организация]
					,_Fld12218 [ОтражатьВНалоговомУчете]
					,_Fld12219RRef [ДокПодготовкаКПередачеОС]
					,_Fld12220RRef [ВалютаДокумента]
					,_Fld12221RRef [ДоговорКонтрагента]
					,_Fld12222_TYPE [Сделка_Тип],_Fld12222_RRRef [Сделка],_Fld12222_RTRef [Сделка_Вид]
					,_Fld12223RRef [Контрагент]
					,_Fld12224 [КратностьВзаиморасчетов]
					,_Fld12225 [КурсВзаиморасчетов]
					,_Fld12226 [ОтражатьВБухгалтерскомУчете]
					,_Fld12227 [НДСВключенВСтоимость]
					,_Fld12228 [ОтражатьВУправленческомУчете]
					,_Fld12229RRef [Подразделение]
					,_Fld12230 [СуммаВключаетНДС]
					,_Fld12231RRef [Событие]
					,_Fld12232 [СуммаДокумента]
					,_Fld12233RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld12234RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld12235 [УчитыватьНДС]
					,_Fld12236RRef [Грузоотправитель]
					,_Fld12237RRef [СобытиеРегл]
					,_Fld12238RRef [Грузополучатель]
					,_Fld12239 [ВосстановитьАмортизационнуюПремию]
					,_Fld12240RRef [СтатьяДляВосстановленияАмортизационнойПремии]
					,_Fld12241 [ПравоСобственностиПереходитПослеГосРегистрации]
					From _Document487(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ПередачаОС();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПередачаОС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(4);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.ДокПодготовкаКПередачеОС = V82.ДокументыСсылка.ПодготовкаКПередачеОС.ВзятьИзКэша((byte[])Читалка.GetValue(8));
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(15);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(16);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(23);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.ВосстановитьАмортизационнуюПремию = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ПравоСобственностиПереходитПослеГосРегистрации = ((byte[])Читалка.GetValue(32))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПередачаОС ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld12214RRef [Ответственный]
					,_Fld12215 [АдресДоставки]
					,_Fld12216 [Комментарий]
					,_Fld12217RRef [Организация]
					,_Fld12218 [ОтражатьВНалоговомУчете]
					,_Fld12219RRef [ДокПодготовкаКПередачеОС]
					,_Fld12220RRef [ВалютаДокумента]
					,_Fld12221RRef [ДоговорКонтрагента]
					,_Fld12222_TYPE [Сделка_Тип],_Fld12222_RRRef [Сделка],_Fld12222_RTRef [Сделка_Вид]
					,_Fld12223RRef [Контрагент]
					,_Fld12224 [КратностьВзаиморасчетов]
					,_Fld12225 [КурсВзаиморасчетов]
					,_Fld12226 [ОтражатьВБухгалтерскомУчете]
					,_Fld12227 [НДСВключенВСтоимость]
					,_Fld12228 [ОтражатьВУправленческомУчете]
					,_Fld12229RRef [Подразделение]
					,_Fld12230 [СуммаВключаетНДС]
					,_Fld12231RRef [Событие]
					,_Fld12232 [СуммаДокумента]
					,_Fld12233RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld12234RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld12235 [УчитыватьНДС]
					,_Fld12236RRef [Грузоотправитель]
					,_Fld12237RRef [СобытиеРегл]
					,_Fld12238RRef [Грузополучатель]
					,_Fld12239 [ВосстановитьАмортизационнуюПремию]
					,_Fld12240RRef [СтатьяДляВосстановленияАмортизационнойПремии]
					,_Fld12241 [ПравоСобственностиПереходитПослеГосРегистрации]
					From _Document487(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ПередачаОС();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПередачаОС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(4);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.ДокПодготовкаКПередачеОС = V82.ДокументыСсылка.ПодготовкаКПередачеОС.ВзятьИзКэша((byte[])Читалка.GetValue(8));
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(15);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(16);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(23);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.ВосстановитьАмортизационнуюПремию = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ПравоСобственностиПереходитПослеГосРегистрации = ((byte[])Читалка.GetValue(32))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПередачаОС ВыбратьПоНомеру(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld12214RRef [Ответственный]
					,_Fld12215 [АдресДоставки]
					,_Fld12216 [Комментарий]
					,_Fld12217RRef [Организация]
					,_Fld12218 [ОтражатьВНалоговомУчете]
					,_Fld12219RRef [ДокПодготовкаКПередачеОС]
					,_Fld12220RRef [ВалютаДокумента]
					,_Fld12221RRef [ДоговорКонтрагента]
					,_Fld12222_TYPE [Сделка_Тип],_Fld12222_RRRef [Сделка],_Fld12222_RTRef [Сделка_Вид]
					,_Fld12223RRef [Контрагент]
					,_Fld12224 [КратностьВзаиморасчетов]
					,_Fld12225 [КурсВзаиморасчетов]
					,_Fld12226 [ОтражатьВБухгалтерскомУчете]
					,_Fld12227 [НДСВключенВСтоимость]
					,_Fld12228 [ОтражатьВУправленческомУчете]
					,_Fld12229RRef [Подразделение]
					,_Fld12230 [СуммаВключаетНДС]
					,_Fld12231RRef [Событие]
					,_Fld12232 [СуммаДокумента]
					,_Fld12233RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld12234RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld12235 [УчитыватьНДС]
					,_Fld12236RRef [Грузоотправитель]
					,_Fld12237RRef [СобытиеРегл]
					,_Fld12238RRef [Грузополучатель]
					,_Fld12239 [ВосстановитьАмортизационнуюПремию]
					,_Fld12240RRef [СтатьяДляВосстановленияАмортизационнойПремии]
					,_Fld12241 [ПравоСобственностиПереходитПослеГосРегистрации]
					From _Document487(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ПередачаОС();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПередачаОС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(4);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.ДокПодготовкаКПередачеОС = V82.ДокументыСсылка.ПодготовкаКПередачеОС.ВзятьИзКэша((byte[])Читалка.GetValue(8));
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(15);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(16);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(23);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.ВосстановитьАмортизационнуюПремию = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ПравоСобственностиПереходитПослеГосРегистрации = ((byte[])Читалка.GetValue(32))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПередачаОС СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld12214RRef [Ответственный]
					,_Fld12215 [АдресДоставки]
					,_Fld12216 [Комментарий]
					,_Fld12217RRef [Организация]
					,_Fld12218 [ОтражатьВНалоговомУчете]
					,_Fld12219RRef [ДокПодготовкаКПередачеОС]
					,_Fld12220RRef [ВалютаДокумента]
					,_Fld12221RRef [ДоговорКонтрагента]
					,_Fld12222_TYPE [Сделка_Тип],_Fld12222_RRRef [Сделка],_Fld12222_RTRef [Сделка_Вид]
					,_Fld12223RRef [Контрагент]
					,_Fld12224 [КратностьВзаиморасчетов]
					,_Fld12225 [КурсВзаиморасчетов]
					,_Fld12226 [ОтражатьВБухгалтерскомУчете]
					,_Fld12227 [НДСВключенВСтоимость]
					,_Fld12228 [ОтражатьВУправленческомУчете]
					,_Fld12229RRef [Подразделение]
					,_Fld12230 [СуммаВключаетНДС]
					,_Fld12231RRef [Событие]
					,_Fld12232 [СуммаДокумента]
					,_Fld12233RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld12234RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld12235 [УчитыватьНДС]
					,_Fld12236RRef [Грузоотправитель]
					,_Fld12237RRef [СобытиеРегл]
					,_Fld12238RRef [Грузополучатель]
					,_Fld12239 [ВосстановитьАмортизационнуюПремию]
					,_Fld12240RRef [СтатьяДляВосстановленияАмортизационнойПремии]
					,_Fld12241 [ПравоСобственностиПереходитПослеГосРегистрации]
					From _Document487(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ПередачаОС();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПередачаОС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(4);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.ДокПодготовкаКПередачеОС = V82.ДокументыСсылка.ПодготовкаКПередачеОС.ВзятьИзКэша((byte[])Читалка.GetValue(8));
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(15);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(16);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(23);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.ВосстановитьАмортизационнуюПремию = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ПравоСобственностиПереходитПослеГосРегистрации = ((byte[])Читалка.GetValue(32))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПередачаОС СтраницаПоНомеру(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld12214RRef [Ответственный]
					,_Fld12215 [АдресДоставки]
					,_Fld12216 [Комментарий]
					,_Fld12217RRef [Организация]
					,_Fld12218 [ОтражатьВНалоговомУчете]
					,_Fld12219RRef [ДокПодготовкаКПередачеОС]
					,_Fld12220RRef [ВалютаДокумента]
					,_Fld12221RRef [ДоговорКонтрагента]
					,_Fld12222_TYPE [Сделка_Тип],_Fld12222_RRRef [Сделка],_Fld12222_RTRef [Сделка_Вид]
					,_Fld12223RRef [Контрагент]
					,_Fld12224 [КратностьВзаиморасчетов]
					,_Fld12225 [КурсВзаиморасчетов]
					,_Fld12226 [ОтражатьВБухгалтерскомУчете]
					,_Fld12227 [НДСВключенВСтоимость]
					,_Fld12228 [ОтражатьВУправленческомУчете]
					,_Fld12229RRef [Подразделение]
					,_Fld12230 [СуммаВключаетНДС]
					,_Fld12231RRef [Событие]
					,_Fld12232 [СуммаДокумента]
					,_Fld12233RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld12234RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld12235 [УчитыватьНДС]
					,_Fld12236RRef [Грузоотправитель]
					,_Fld12237RRef [СобытиеРегл]
					,_Fld12238RRef [Грузополучатель]
					,_Fld12239 [ВосстановитьАмортизационнуюПремию]
					,_Fld12240RRef [СтатьяДляВосстановленияАмортизационнойПремии]
					,_Fld12241 [ПравоСобственностиПереходитПослеГосРегистрации]
					From _Document487(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ПередачаОС();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПередачаОС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(4);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.ДокПодготовкаКПередачеОС = V82.ДокументыСсылка.ПодготовкаКПередачеОС.ВзятьИзКэша((byte[])Читалка.GetValue(8));
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(15);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(16);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(23);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.ВосстановитьАмортизационнуюПремию = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ПравоСобственностиПереходитПослеГосРегистрации = ((byte[])Читалка.GetValue(32))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.ДокументыОбъект.ПередачаОС СоздатьЭлемент()
		{
			var Объект = new V82.ДокументыОбъект.ПередачаОС();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.АдресДоставки = "";
			Объект.Комментарий = "";
			Объект.ДокПодготовкаКПередачеОС = new V82.ДокументыСсылка.ПодготовкаКПередачеОС();
			return Объект;
		}
	}
}