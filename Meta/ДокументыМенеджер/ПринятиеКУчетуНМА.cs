
using System;
using System.Data.SqlClient;
using V82;
using V82.ДокументыСсылка;
using V82.Документы;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Документы//Менеджер
{
	///<summary>
	///(Регл)
	///</summary>
	public partial class ПринятиеКУчетуНМА:ДокументМенеджер
	{
		
		public static ДокументыСсылка.ПринятиеКУчетуНМА НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld9981RRef [ВидОбъектаУчета]
					,_Fld10006 [ДатаПриобретения]
					,_Fld9982 [Комментарий]
					,_Fld23008 [КоэффициентБУ]
					,_Fld9984 [НачислятьАмортизациюБУ]
					,_Fld9985 [НачислятьАмортизациюНУ]
					,_Fld9986RRef [НематериальныйАктив]
					,_Fld9987 [ОбъемПродукцииРаботДляВычисленияАмортизации]
					,_Fld9988RRef [Организация]
					,_Fld9989RRef [Ответственный]
					,_Fld9990 [ОтражатьВБухгалтерскомУчете]
					,_Fld9991 [ОтражатьВНалоговомУчете]
					,_Fld10010RRef [ПорядокВключенияСтоимостиВСоставРасходовУСН]
					,_Fld9992 [СпециальныйКоэффициентНУ]
					,_Fld9993RRef [СпособНачисленияАмортизацииБУ]
					,_Fld9994RRef [СпособНачисленияАмортизацииНУ]
					,_Fld9983RRef [СпособОтраженияРасходов]
					,_Fld9995RRef [СпособПоступления]
					,_Fld9996 [СрокПолезногоИспользованияБУ]
					,_Fld9997 [СрокПолезногоИспользованияНУ]
					,_Fld10008 [СрокПолезногоИспользованияУСН]
					,_Fld9998 [СтоимостьБУ]
					,_Fld10012 [СтоимостьВР]
					,_Fld9999 [СтоимостьНУ]
					,_Fld10011 [СтоимостьПР]
					,_Fld10007 [СтоимостьУСН]
					,_Fld10009 [СуммаНачисленнойАмортизацииУСН]
					,_Fld10000RRef [СчетНачисленияАмортизацииБУ]
					,_Fld10001RRef [СчетНачисленияАмортизацииНУ]
					,_Fld10002RRef [СчетУчетаБУ]
					,_Fld10003RRef [СчетУчетаБУВнеоборотногоАктива]
					,_Fld10004RRef [СчетУчетаНУ]
					,_Fld10005RRef [СчетУчетаНУВнеоборотногоАктива]
					,_Fld27257RRef [ПорядокСписанияНИОКРНаРасходыНУ]
					From _Document410(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПринятиеКУчетуНМА();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОбъектаУчета = V82.Перечисления/*Ссылка*/.ВидыОбъектовУчетаНМА.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ДатаПриобретения = Читалка.GetDateTime(4);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.КоэффициентБУ = Читалка.GetDecimal(6);
							Ссылка.НачислятьАмортизациюБУ = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.НачислятьАмортизациюНУ = ((byte[])Читалка.GetValue(8))[0]==1;
							Ссылка.ОбъемПродукцииРаботДляВычисленияАмортизации = Читалка.GetDecimal(10);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.ПорядокВключенияСтоимостиВСоставРасходовУСН = V82.Перечисления/*Ссылка*/.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН.ПустаяСсылка.Получить((byte[])Читалка.GetValue(15));
							Ссылка.СпециальныйКоэффициентНУ = Читалка.GetDecimal(16);
							Ссылка.СпособНачисленияАмортизацииБУ = V82.Перечисления/*Ссылка*/.СпособыНачисленияАмортизацииНМА.ПустаяСсылка.Получить((byte[])Читалка.GetValue(17));
							Ссылка.СпособНачисленияАмортизацииНУ = V82.Перечисления/*Ссылка*/.МетодыНачисленияАмортизации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(18));
							Ссылка.СпособПоступления = V82.Перечисления/*Ссылка*/.СпособыПоступленияАктивов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(20));
							Ссылка.СрокПолезногоИспользованияБУ = Читалка.GetDecimal(21);
							Ссылка.СрокПолезногоИспользованияНУ = Читалка.GetDecimal(22);
							Ссылка.СрокПолезногоИспользованияУСН = Читалка.GetDecimal(23);
							Ссылка.СтоимостьБУ = Читалка.GetDecimal(24);
							Ссылка.СтоимостьВР = Читалка.GetDecimal(25);
							Ссылка.СтоимостьНУ = Читалка.GetDecimal(26);
							Ссылка.СтоимостьПР = Читалка.GetDecimal(27);
							Ссылка.СтоимостьУСН = Читалка.GetDecimal(28);
							Ссылка.СуммаНачисленнойАмортизацииУСН = Читалка.GetDecimal(29);
							Ссылка.ПорядокСписанияНИОКРНаРасходыНУ = V82.Перечисления/*Ссылка*/.ПорядокСписанияНИОКРНУ.ПустаяСсылка.Получить((byte[])Читалка.GetValue(36));
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыСсылка.ПринятиеКУчетуНМА НайтиПоНомеру(string Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld9981RRef [ВидОбъектаУчета]
					,_Fld10006 [ДатаПриобретения]
					,_Fld9982 [Комментарий]
					,_Fld23008 [КоэффициентБУ]
					,_Fld9984 [НачислятьАмортизациюБУ]
					,_Fld9985 [НачислятьАмортизациюНУ]
					,_Fld9986RRef [НематериальныйАктив]
					,_Fld9987 [ОбъемПродукцииРаботДляВычисленияАмортизации]
					,_Fld9988RRef [Организация]
					,_Fld9989RRef [Ответственный]
					,_Fld9990 [ОтражатьВБухгалтерскомУчете]
					,_Fld9991 [ОтражатьВНалоговомУчете]
					,_Fld10010RRef [ПорядокВключенияСтоимостиВСоставРасходовУСН]
					,_Fld9992 [СпециальныйКоэффициентНУ]
					,_Fld9993RRef [СпособНачисленияАмортизацииБУ]
					,_Fld9994RRef [СпособНачисленияАмортизацииНУ]
					,_Fld9983RRef [СпособОтраженияРасходов]
					,_Fld9995RRef [СпособПоступления]
					,_Fld9996 [СрокПолезногоИспользованияБУ]
					,_Fld9997 [СрокПолезногоИспользованияНУ]
					,_Fld10008 [СрокПолезногоИспользованияУСН]
					,_Fld9998 [СтоимостьБУ]
					,_Fld10012 [СтоимостьВР]
					,_Fld9999 [СтоимостьНУ]
					,_Fld10011 [СтоимостьПР]
					,_Fld10007 [СтоимостьУСН]
					,_Fld10009 [СуммаНачисленнойАмортизацииУСН]
					,_Fld10000RRef [СчетНачисленияАмортизацииБУ]
					,_Fld10001RRef [СчетНачисленияАмортизацииНУ]
					,_Fld10002RRef [СчетУчетаБУ]
					,_Fld10003RRef [СчетУчетаБУВнеоборотногоАктива]
					,_Fld10004RRef [СчетУчетаНУ]
					,_Fld10005RRef [СчетУчетаНУВнеоборотногоАктива]
					,_Fld27257RRef [ПорядокСписанияНИОКРНаРасходыНУ]
					From _Document410(NOLOCK)
					Where _Number = @Номер";
					Команда.Parameters.AddWithValue("Номер", Номер);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПринятиеКУчетуНМА();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОбъектаУчета = V82.Перечисления/*Ссылка*/.ВидыОбъектовУчетаНМА.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ДатаПриобретения = Читалка.GetDateTime(4);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.КоэффициентБУ = Читалка.GetDecimal(6);
							Ссылка.НачислятьАмортизациюБУ = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.НачислятьАмортизациюНУ = ((byte[])Читалка.GetValue(8))[0]==1;
							Ссылка.ОбъемПродукцииРаботДляВычисленияАмортизации = Читалка.GetDecimal(10);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.ПорядокВключенияСтоимостиВСоставРасходовУСН = V82.Перечисления/*Ссылка*/.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН.ПустаяСсылка.Получить((byte[])Читалка.GetValue(15));
							Ссылка.СпециальныйКоэффициентНУ = Читалка.GetDecimal(16);
							Ссылка.СпособНачисленияАмортизацииБУ = V82.Перечисления/*Ссылка*/.СпособыНачисленияАмортизацииНМА.ПустаяСсылка.Получить((byte[])Читалка.GetValue(17));
							Ссылка.СпособНачисленияАмортизацииНУ = V82.Перечисления/*Ссылка*/.МетодыНачисленияАмортизации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(18));
							Ссылка.СпособПоступления = V82.Перечисления/*Ссылка*/.СпособыПоступленияАктивов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(20));
							Ссылка.СрокПолезногоИспользованияБУ = Читалка.GetDecimal(21);
							Ссылка.СрокПолезногоИспользованияНУ = Читалка.GetDecimal(22);
							Ссылка.СрокПолезногоИспользованияУСН = Читалка.GetDecimal(23);
							Ссылка.СтоимостьБУ = Читалка.GetDecimal(24);
							Ссылка.СтоимостьВР = Читалка.GetDecimal(25);
							Ссылка.СтоимостьНУ = Читалка.GetDecimal(26);
							Ссылка.СтоимостьПР = Читалка.GetDecimal(27);
							Ссылка.СтоимостьУСН = Читалка.GetDecimal(28);
							Ссылка.СуммаНачисленнойАмортизацииУСН = Читалка.GetDecimal(29);
							Ссылка.ПорядокСписанияНИОКРНаРасходыНУ = V82.Перечисления/*Ссылка*/.ПорядокСписанияНИОКРНУ.ПустаяСсылка.Получить((byte[])Читалка.GetValue(36));
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПринятиеКУчетуНМА Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld9981RRef [ВидОбъектаУчета]
					,_Fld10006 [ДатаПриобретения]
					,_Fld9982 [Комментарий]
					,_Fld23008 [КоэффициентБУ]
					,_Fld9984 [НачислятьАмортизациюБУ]
					,_Fld9985 [НачислятьАмортизациюНУ]
					,_Fld9986RRef [НематериальныйАктив]
					,_Fld9987 [ОбъемПродукцииРаботДляВычисленияАмортизации]
					,_Fld9988RRef [Организация]
					,_Fld9989RRef [Ответственный]
					,_Fld9990 [ОтражатьВБухгалтерскомУчете]
					,_Fld9991 [ОтражатьВНалоговомУчете]
					,_Fld10010RRef [ПорядокВключенияСтоимостиВСоставРасходовУСН]
					,_Fld9992 [СпециальныйКоэффициентНУ]
					,_Fld9993RRef [СпособНачисленияАмортизацииБУ]
					,_Fld9994RRef [СпособНачисленияАмортизацииНУ]
					,_Fld9983RRef [СпособОтраженияРасходов]
					,_Fld9995RRef [СпособПоступления]
					,_Fld9996 [СрокПолезногоИспользованияБУ]
					,_Fld9997 [СрокПолезногоИспользованияНУ]
					,_Fld10008 [СрокПолезногоИспользованияУСН]
					,_Fld9998 [СтоимостьБУ]
					,_Fld10012 [СтоимостьВР]
					,_Fld9999 [СтоимостьНУ]
					,_Fld10011 [СтоимостьПР]
					,_Fld10007 [СтоимостьУСН]
					,_Fld10009 [СуммаНачисленнойАмортизацииУСН]
					,_Fld10000RRef [СчетНачисленияАмортизацииБУ]
					,_Fld10001RRef [СчетНачисленияАмортизацииНУ]
					,_Fld10002RRef [СчетУчетаБУ]
					,_Fld10003RRef [СчетУчетаБУВнеоборотногоАктива]
					,_Fld10004RRef [СчетУчетаНУ]
					,_Fld10005RRef [СчетУчетаНУВнеоборотногоАктива]
					,_Fld27257RRef [ПорядокСписанияНИОКРНаРасходыНУ]
					From _Document410(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ПринятиеКУчетуНМА();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПринятиеКУчетуНМА();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОбъектаУчета = V82.Перечисления/*Ссылка*/.ВидыОбъектовУчетаНМА.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ДатаПриобретения = Читалка.GetDateTime(4);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.КоэффициентБУ = Читалка.GetDecimal(6);
							Ссылка.НачислятьАмортизациюБУ = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.НачислятьАмортизациюНУ = ((byte[])Читалка.GetValue(8))[0]==1;
							Ссылка.ОбъемПродукцииРаботДляВычисленияАмортизации = Читалка.GetDecimal(10);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.ПорядокВключенияСтоимостиВСоставРасходовУСН = V82.Перечисления/*Ссылка*/.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН.ПустаяСсылка.Получить((byte[])Читалка.GetValue(15));
							Ссылка.СпециальныйКоэффициентНУ = Читалка.GetDecimal(16);
							Ссылка.СпособНачисленияАмортизацииБУ = V82.Перечисления/*Ссылка*/.СпособыНачисленияАмортизацииНМА.ПустаяСсылка.Получить((byte[])Читалка.GetValue(17));
							Ссылка.СпособНачисленияАмортизацииНУ = V82.Перечисления/*Ссылка*/.МетодыНачисленияАмортизации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(18));
							Ссылка.СпособПоступления = V82.Перечисления/*Ссылка*/.СпособыПоступленияАктивов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(20));
							Ссылка.СрокПолезногоИспользованияБУ = Читалка.GetDecimal(21);
							Ссылка.СрокПолезногоИспользованияНУ = Читалка.GetDecimal(22);
							Ссылка.СрокПолезногоИспользованияУСН = Читалка.GetDecimal(23);
							Ссылка.СтоимостьБУ = Читалка.GetDecimal(24);
							Ссылка.СтоимостьВР = Читалка.GetDecimal(25);
							Ссылка.СтоимостьНУ = Читалка.GetDecimal(26);
							Ссылка.СтоимостьПР = Читалка.GetDecimal(27);
							Ссылка.СтоимостьУСН = Читалка.GetDecimal(28);
							Ссылка.СуммаНачисленнойАмортизацииУСН = Читалка.GetDecimal(29);
							Ссылка.ПорядокСписанияНИОКРНаРасходыНУ = V82.Перечисления/*Ссылка*/.ПорядокСписанияНИОКРНУ.ПустаяСсылка.Получить((byte[])Читалка.GetValue(36));
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПринятиеКУчетуНМА ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld9981RRef [ВидОбъектаУчета]
					,_Fld10006 [ДатаПриобретения]
					,_Fld9982 [Комментарий]
					,_Fld23008 [КоэффициентБУ]
					,_Fld9984 [НачислятьАмортизациюБУ]
					,_Fld9985 [НачислятьАмортизациюНУ]
					,_Fld9986RRef [НематериальныйАктив]
					,_Fld9987 [ОбъемПродукцииРаботДляВычисленияАмортизации]
					,_Fld9988RRef [Организация]
					,_Fld9989RRef [Ответственный]
					,_Fld9990 [ОтражатьВБухгалтерскомУчете]
					,_Fld9991 [ОтражатьВНалоговомУчете]
					,_Fld10010RRef [ПорядокВключенияСтоимостиВСоставРасходовУСН]
					,_Fld9992 [СпециальныйКоэффициентНУ]
					,_Fld9993RRef [СпособНачисленияАмортизацииБУ]
					,_Fld9994RRef [СпособНачисленияАмортизацииНУ]
					,_Fld9983RRef [СпособОтраженияРасходов]
					,_Fld9995RRef [СпособПоступления]
					,_Fld9996 [СрокПолезногоИспользованияБУ]
					,_Fld9997 [СрокПолезногоИспользованияНУ]
					,_Fld10008 [СрокПолезногоИспользованияУСН]
					,_Fld9998 [СтоимостьБУ]
					,_Fld10012 [СтоимостьВР]
					,_Fld9999 [СтоимостьНУ]
					,_Fld10011 [СтоимостьПР]
					,_Fld10007 [СтоимостьУСН]
					,_Fld10009 [СуммаНачисленнойАмортизацииУСН]
					,_Fld10000RRef [СчетНачисленияАмортизацииБУ]
					,_Fld10001RRef [СчетНачисленияАмортизацииНУ]
					,_Fld10002RRef [СчетУчетаБУ]
					,_Fld10003RRef [СчетУчетаБУВнеоборотногоАктива]
					,_Fld10004RRef [СчетУчетаНУ]
					,_Fld10005RRef [СчетУчетаНУВнеоборотногоАктива]
					,_Fld27257RRef [ПорядокСписанияНИОКРНаРасходыНУ]
					From _Document410(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ПринятиеКУчетуНМА();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПринятиеКУчетуНМА();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОбъектаУчета = V82.Перечисления/*Ссылка*/.ВидыОбъектовУчетаНМА.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ДатаПриобретения = Читалка.GetDateTime(4);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.КоэффициентБУ = Читалка.GetDecimal(6);
							Ссылка.НачислятьАмортизациюБУ = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.НачислятьАмортизациюНУ = ((byte[])Читалка.GetValue(8))[0]==1;
							Ссылка.ОбъемПродукцииРаботДляВычисленияАмортизации = Читалка.GetDecimal(10);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.ПорядокВключенияСтоимостиВСоставРасходовУСН = V82.Перечисления/*Ссылка*/.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН.ПустаяСсылка.Получить((byte[])Читалка.GetValue(15));
							Ссылка.СпециальныйКоэффициентНУ = Читалка.GetDecimal(16);
							Ссылка.СпособНачисленияАмортизацииБУ = V82.Перечисления/*Ссылка*/.СпособыНачисленияАмортизацииНМА.ПустаяСсылка.Получить((byte[])Читалка.GetValue(17));
							Ссылка.СпособНачисленияАмортизацииНУ = V82.Перечисления/*Ссылка*/.МетодыНачисленияАмортизации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(18));
							Ссылка.СпособПоступления = V82.Перечисления/*Ссылка*/.СпособыПоступленияАктивов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(20));
							Ссылка.СрокПолезногоИспользованияБУ = Читалка.GetDecimal(21);
							Ссылка.СрокПолезногоИспользованияНУ = Читалка.GetDecimal(22);
							Ссылка.СрокПолезногоИспользованияУСН = Читалка.GetDecimal(23);
							Ссылка.СтоимостьБУ = Читалка.GetDecimal(24);
							Ссылка.СтоимостьВР = Читалка.GetDecimal(25);
							Ссылка.СтоимостьНУ = Читалка.GetDecimal(26);
							Ссылка.СтоимостьПР = Читалка.GetDecimal(27);
							Ссылка.СтоимостьУСН = Читалка.GetDecimal(28);
							Ссылка.СуммаНачисленнойАмортизацииУСН = Читалка.GetDecimal(29);
							Ссылка.ПорядокСписанияНИОКРНаРасходыНУ = V82.Перечисления/*Ссылка*/.ПорядокСписанияНИОКРНУ.ПустаяСсылка.Получить((byte[])Читалка.GetValue(36));
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПринятиеКУчетуНМА ВыбратьПоНомеру(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld9981RRef [ВидОбъектаУчета]
					,_Fld10006 [ДатаПриобретения]
					,_Fld9982 [Комментарий]
					,_Fld23008 [КоэффициентБУ]
					,_Fld9984 [НачислятьАмортизациюБУ]
					,_Fld9985 [НачислятьАмортизациюНУ]
					,_Fld9986RRef [НематериальныйАктив]
					,_Fld9987 [ОбъемПродукцииРаботДляВычисленияАмортизации]
					,_Fld9988RRef [Организация]
					,_Fld9989RRef [Ответственный]
					,_Fld9990 [ОтражатьВБухгалтерскомУчете]
					,_Fld9991 [ОтражатьВНалоговомУчете]
					,_Fld10010RRef [ПорядокВключенияСтоимостиВСоставРасходовУСН]
					,_Fld9992 [СпециальныйКоэффициентНУ]
					,_Fld9993RRef [СпособНачисленияАмортизацииБУ]
					,_Fld9994RRef [СпособНачисленияАмортизацииНУ]
					,_Fld9983RRef [СпособОтраженияРасходов]
					,_Fld9995RRef [СпособПоступления]
					,_Fld9996 [СрокПолезногоИспользованияБУ]
					,_Fld9997 [СрокПолезногоИспользованияНУ]
					,_Fld10008 [СрокПолезногоИспользованияУСН]
					,_Fld9998 [СтоимостьБУ]
					,_Fld10012 [СтоимостьВР]
					,_Fld9999 [СтоимостьНУ]
					,_Fld10011 [СтоимостьПР]
					,_Fld10007 [СтоимостьУСН]
					,_Fld10009 [СуммаНачисленнойАмортизацииУСН]
					,_Fld10000RRef [СчетНачисленияАмортизацииБУ]
					,_Fld10001RRef [СчетНачисленияАмортизацииНУ]
					,_Fld10002RRef [СчетУчетаБУ]
					,_Fld10003RRef [СчетУчетаБУВнеоборотногоАктива]
					,_Fld10004RRef [СчетУчетаНУ]
					,_Fld10005RRef [СчетУчетаНУВнеоборотногоАктива]
					,_Fld27257RRef [ПорядокСписанияНИОКРНаРасходыНУ]
					From _Document410(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ПринятиеКУчетуНМА();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПринятиеКУчетуНМА();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОбъектаУчета = V82.Перечисления/*Ссылка*/.ВидыОбъектовУчетаНМА.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ДатаПриобретения = Читалка.GetDateTime(4);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.КоэффициентБУ = Читалка.GetDecimal(6);
							Ссылка.НачислятьАмортизациюБУ = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.НачислятьАмортизациюНУ = ((byte[])Читалка.GetValue(8))[0]==1;
							Ссылка.ОбъемПродукцииРаботДляВычисленияАмортизации = Читалка.GetDecimal(10);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.ПорядокВключенияСтоимостиВСоставРасходовУСН = V82.Перечисления/*Ссылка*/.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН.ПустаяСсылка.Получить((byte[])Читалка.GetValue(15));
							Ссылка.СпециальныйКоэффициентНУ = Читалка.GetDecimal(16);
							Ссылка.СпособНачисленияАмортизацииБУ = V82.Перечисления/*Ссылка*/.СпособыНачисленияАмортизацииНМА.ПустаяСсылка.Получить((byte[])Читалка.GetValue(17));
							Ссылка.СпособНачисленияАмортизацииНУ = V82.Перечисления/*Ссылка*/.МетодыНачисленияАмортизации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(18));
							Ссылка.СпособПоступления = V82.Перечисления/*Ссылка*/.СпособыПоступленияАктивов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(20));
							Ссылка.СрокПолезногоИспользованияБУ = Читалка.GetDecimal(21);
							Ссылка.СрокПолезногоИспользованияНУ = Читалка.GetDecimal(22);
							Ссылка.СрокПолезногоИспользованияУСН = Читалка.GetDecimal(23);
							Ссылка.СтоимостьБУ = Читалка.GetDecimal(24);
							Ссылка.СтоимостьВР = Читалка.GetDecimal(25);
							Ссылка.СтоимостьНУ = Читалка.GetDecimal(26);
							Ссылка.СтоимостьПР = Читалка.GetDecimal(27);
							Ссылка.СтоимостьУСН = Читалка.GetDecimal(28);
							Ссылка.СуммаНачисленнойАмортизацииУСН = Читалка.GetDecimal(29);
							Ссылка.ПорядокСписанияНИОКРНаРасходыНУ = V82.Перечисления/*Ссылка*/.ПорядокСписанияНИОКРНУ.ПустаяСсылка.Получить((byte[])Читалка.GetValue(36));
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПринятиеКУчетуНМА СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld9981RRef [ВидОбъектаУчета]
					,_Fld10006 [ДатаПриобретения]
					,_Fld9982 [Комментарий]
					,_Fld23008 [КоэффициентБУ]
					,_Fld9984 [НачислятьАмортизациюБУ]
					,_Fld9985 [НачислятьАмортизациюНУ]
					,_Fld9986RRef [НематериальныйАктив]
					,_Fld9987 [ОбъемПродукцииРаботДляВычисленияАмортизации]
					,_Fld9988RRef [Организация]
					,_Fld9989RRef [Ответственный]
					,_Fld9990 [ОтражатьВБухгалтерскомУчете]
					,_Fld9991 [ОтражатьВНалоговомУчете]
					,_Fld10010RRef [ПорядокВключенияСтоимостиВСоставРасходовУСН]
					,_Fld9992 [СпециальныйКоэффициентНУ]
					,_Fld9993RRef [СпособНачисленияАмортизацииБУ]
					,_Fld9994RRef [СпособНачисленияАмортизацииНУ]
					,_Fld9983RRef [СпособОтраженияРасходов]
					,_Fld9995RRef [СпособПоступления]
					,_Fld9996 [СрокПолезногоИспользованияБУ]
					,_Fld9997 [СрокПолезногоИспользованияНУ]
					,_Fld10008 [СрокПолезногоИспользованияУСН]
					,_Fld9998 [СтоимостьБУ]
					,_Fld10012 [СтоимостьВР]
					,_Fld9999 [СтоимостьНУ]
					,_Fld10011 [СтоимостьПР]
					,_Fld10007 [СтоимостьУСН]
					,_Fld10009 [СуммаНачисленнойАмортизацииУСН]
					,_Fld10000RRef [СчетНачисленияАмортизацииБУ]
					,_Fld10001RRef [СчетНачисленияАмортизацииНУ]
					,_Fld10002RRef [СчетУчетаБУ]
					,_Fld10003RRef [СчетУчетаБУВнеоборотногоАктива]
					,_Fld10004RRef [СчетУчетаНУ]
					,_Fld10005RRef [СчетУчетаНУВнеоборотногоАктива]
					,_Fld27257RRef [ПорядокСписанияНИОКРНаРасходыНУ]
					From _Document410(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ПринятиеКУчетуНМА();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПринятиеКУчетуНМА();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОбъектаУчета = V82.Перечисления/*Ссылка*/.ВидыОбъектовУчетаНМА.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ДатаПриобретения = Читалка.GetDateTime(4);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.КоэффициентБУ = Читалка.GetDecimal(6);
							Ссылка.НачислятьАмортизациюБУ = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.НачислятьАмортизациюНУ = ((byte[])Читалка.GetValue(8))[0]==1;
							Ссылка.ОбъемПродукцииРаботДляВычисленияАмортизации = Читалка.GetDecimal(10);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.ПорядокВключенияСтоимостиВСоставРасходовУСН = V82.Перечисления/*Ссылка*/.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН.ПустаяСсылка.Получить((byte[])Читалка.GetValue(15));
							Ссылка.СпециальныйКоэффициентНУ = Читалка.GetDecimal(16);
							Ссылка.СпособНачисленияАмортизацииБУ = V82.Перечисления/*Ссылка*/.СпособыНачисленияАмортизацииНМА.ПустаяСсылка.Получить((byte[])Читалка.GetValue(17));
							Ссылка.СпособНачисленияАмортизацииНУ = V82.Перечисления/*Ссылка*/.МетодыНачисленияАмортизации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(18));
							Ссылка.СпособПоступления = V82.Перечисления/*Ссылка*/.СпособыПоступленияАктивов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(20));
							Ссылка.СрокПолезногоИспользованияБУ = Читалка.GetDecimal(21);
							Ссылка.СрокПолезногоИспользованияНУ = Читалка.GetDecimal(22);
							Ссылка.СрокПолезногоИспользованияУСН = Читалка.GetDecimal(23);
							Ссылка.СтоимостьБУ = Читалка.GetDecimal(24);
							Ссылка.СтоимостьВР = Читалка.GetDecimal(25);
							Ссылка.СтоимостьНУ = Читалка.GetDecimal(26);
							Ссылка.СтоимостьПР = Читалка.GetDecimal(27);
							Ссылка.СтоимостьУСН = Читалка.GetDecimal(28);
							Ссылка.СуммаНачисленнойАмортизацииУСН = Читалка.GetDecimal(29);
							Ссылка.ПорядокСписанияНИОКРНаРасходыНУ = V82.Перечисления/*Ссылка*/.ПорядокСписанияНИОКРНУ.ПустаяСсылка.Получить((byte[])Читалка.GetValue(36));
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПринятиеКУчетуНМА СтраницаПоНомеру(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld9981RRef [ВидОбъектаУчета]
					,_Fld10006 [ДатаПриобретения]
					,_Fld9982 [Комментарий]
					,_Fld23008 [КоэффициентБУ]
					,_Fld9984 [НачислятьАмортизациюБУ]
					,_Fld9985 [НачислятьАмортизациюНУ]
					,_Fld9986RRef [НематериальныйАктив]
					,_Fld9987 [ОбъемПродукцииРаботДляВычисленияАмортизации]
					,_Fld9988RRef [Организация]
					,_Fld9989RRef [Ответственный]
					,_Fld9990 [ОтражатьВБухгалтерскомУчете]
					,_Fld9991 [ОтражатьВНалоговомУчете]
					,_Fld10010RRef [ПорядокВключенияСтоимостиВСоставРасходовУСН]
					,_Fld9992 [СпециальныйКоэффициентНУ]
					,_Fld9993RRef [СпособНачисленияАмортизацииБУ]
					,_Fld9994RRef [СпособНачисленияАмортизацииНУ]
					,_Fld9983RRef [СпособОтраженияРасходов]
					,_Fld9995RRef [СпособПоступления]
					,_Fld9996 [СрокПолезногоИспользованияБУ]
					,_Fld9997 [СрокПолезногоИспользованияНУ]
					,_Fld10008 [СрокПолезногоИспользованияУСН]
					,_Fld9998 [СтоимостьБУ]
					,_Fld10012 [СтоимостьВР]
					,_Fld9999 [СтоимостьНУ]
					,_Fld10011 [СтоимостьПР]
					,_Fld10007 [СтоимостьУСН]
					,_Fld10009 [СуммаНачисленнойАмортизацииУСН]
					,_Fld10000RRef [СчетНачисленияАмортизацииБУ]
					,_Fld10001RRef [СчетНачисленияАмортизацииНУ]
					,_Fld10002RRef [СчетУчетаБУ]
					,_Fld10003RRef [СчетУчетаБУВнеоборотногоАктива]
					,_Fld10004RRef [СчетУчетаНУ]
					,_Fld10005RRef [СчетУчетаНУВнеоборотногоАктива]
					,_Fld27257RRef [ПорядокСписанияНИОКРНаРасходыНУ]
					From _Document410(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ПринятиеКУчетуНМА();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПринятиеКУчетуНМА();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОбъектаУчета = V82.Перечисления/*Ссылка*/.ВидыОбъектовУчетаНМА.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ДатаПриобретения = Читалка.GetDateTime(4);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.КоэффициентБУ = Читалка.GetDecimal(6);
							Ссылка.НачислятьАмортизациюБУ = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.НачислятьАмортизациюНУ = ((byte[])Читалка.GetValue(8))[0]==1;
							Ссылка.ОбъемПродукцииРаботДляВычисленияАмортизации = Читалка.GetDecimal(10);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.ПорядокВключенияСтоимостиВСоставРасходовУСН = V82.Перечисления/*Ссылка*/.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН.ПустаяСсылка.Получить((byte[])Читалка.GetValue(15));
							Ссылка.СпециальныйКоэффициентНУ = Читалка.GetDecimal(16);
							Ссылка.СпособНачисленияАмортизацииБУ = V82.Перечисления/*Ссылка*/.СпособыНачисленияАмортизацииНМА.ПустаяСсылка.Получить((byte[])Читалка.GetValue(17));
							Ссылка.СпособНачисленияАмортизацииНУ = V82.Перечисления/*Ссылка*/.МетодыНачисленияАмортизации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(18));
							Ссылка.СпособПоступления = V82.Перечисления/*Ссылка*/.СпособыПоступленияАктивов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(20));
							Ссылка.СрокПолезногоИспользованияБУ = Читалка.GetDecimal(21);
							Ссылка.СрокПолезногоИспользованияНУ = Читалка.GetDecimal(22);
							Ссылка.СрокПолезногоИспользованияУСН = Читалка.GetDecimal(23);
							Ссылка.СтоимостьБУ = Читалка.GetDecimal(24);
							Ссылка.СтоимостьВР = Читалка.GetDecimal(25);
							Ссылка.СтоимостьНУ = Читалка.GetDecimal(26);
							Ссылка.СтоимостьПР = Читалка.GetDecimal(27);
							Ссылка.СтоимостьУСН = Читалка.GetDecimal(28);
							Ссылка.СуммаНачисленнойАмортизацииУСН = Читалка.GetDecimal(29);
							Ссылка.ПорядокСписанияНИОКРНаРасходыНУ = V82.Перечисления/*Ссылка*/.ПорядокСписанияНИОКРНУ.ПустаяСсылка.Получить((byte[])Читалка.GetValue(36));
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.ДокументыОбъект.ПринятиеКУчетуНМА СоздатьЭлемент()
		{
			var Объект = new V82.ДокументыОбъект.ПринятиеКУчетуНМА();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.Комментарий = "";
			Объект.ВидОбъектаУчета = V82.Перечисления/*Ссылка*/.ВидыОбъектовУчетаНМА.ПустаяСсылка;
			Объект.ПорядокВключенияСтоимостиВСоставРасходовУСН = V82.Перечисления/*Ссылка*/.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН.ПустаяСсылка;
			Объект.СпособНачисленияАмортизацииБУ = V82.Перечисления/*Ссылка*/.СпособыНачисленияАмортизацииНМА.ПустаяСсылка;
			Объект.СпособНачисленияАмортизацииНУ = V82.Перечисления/*Ссылка*/.МетодыНачисленияАмортизации.ПустаяСсылка;
			Объект.СпособПоступления = V82.Перечисления/*Ссылка*/.СпособыПоступленияАктивов.ПустаяСсылка;
			Объект.ПорядокСписанияНИОКРНаРасходыНУ = V82.Перечисления/*Ссылка*/.ПорядокСписанияНИОКРНУ.ПустаяСсылка;
			return Объект;
		}
	}
}