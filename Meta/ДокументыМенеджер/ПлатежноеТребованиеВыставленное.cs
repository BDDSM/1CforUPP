
using System;
using System.Data.SqlClient;
using V82;
using V82.ДокументыСсылка;
using V82.Документы;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Документы//Менеджер
{
	///<summary>
	///(Общ)
	///</summary>
	public partial class ПлатежноеТребованиеВыставленное:ДокументМенеджер
	{
		
		public static ДокументыСсылка.ПлатежноеТребованиеВыставленное НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld13224_TYPE [ДокументОснование_Тип],_Fld13224_RRRef [ДокументОснование],_Fld13224_RTRef [ДокументОснование_Вид]
					,_Fld13225RRef [Организация]
					,_Fld13226RRef [СчетОрганизации]
					,_Fld13227RRef [Контрагент]
					,_Fld13228RRef [СчетКонтрагента]
					,_Fld13229 [СуммаДокумента]
					,_Fld13230 [ДатаОтсылкиДокументов]
					,_Fld13231RRef [ВидОперации]
					,_Fld13232RRef [ДоговорКонтрагента]
					,_Fld13233RRef [ВалютаДокумента]
					,_Fld13234 [ВидПлатежа]
					,_Fld13235 [ОчередностьПлатежа]
					,_Fld13236 [ОтраженоВОперУчете]
					,_Fld13237 [ТекстПлательщика]
					,_Fld13238 [ТекстПолучателя]
					,_Fld13239 [ИННПлательщика]
					,_Fld13240 [КПППлательщика]
					,_Fld13241 [ИННПолучателя]
					,_Fld13242 [КПППолучателя]
					,_Fld13243 [СрокДляАкцепта]
					,_Fld13244RRef [УсловиеОплаты]
					,_Fld13245 [ОснованиеДляБезакцептногоСписания]
					,_Fld13246RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld13247RRef [СубконтоКт1]
					,_Fld13248 [ДатаОплаты]
					,_Fld13249 [ЧастичнаяОплата]
					,_Fld13250RRef [СубконтоКт2]
					,_Fld13251RRef [СубконтоКт3]
					,_Fld13252RRef [СтатьяДвиженияДенежныхСредств]
					,_Fld13253 [ОтражатьВБухгалтерскомУчете]
					,_Fld13254 [Оплачено]
					,_Fld13255 [НазначениеПлатежа]
					,_Fld13256RRef [Ответственный]
					,_Fld13257 [Комментарий]
					,_Fld13258 [ОтражатьВНалоговомУчете]
					,_Fld13259 [Содержание_УСН]
					,_Fld13260 [Графа4_УСН]
					,_Fld13261 [Графа5_УСН]
					,_Fld13262 [Графа6_УСН]
					,_Fld13263 [Графа7_УСН]
					,_Fld13264 [ДоходыЕНВД_УСН]
					,_Fld13265 [РасходыЕНВД_УСН]
					,_Fld13266 [НДС_УСН]
					,_Fld13267 [РучнаяНастройка_УСН]
					,_Fld13268RRef [Подразделение]
					,_Fld13269 [ВидАкцепта]
					From _Document516(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПлатежноеТребованиеВыставленное();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(10);
							Ссылка.ДатаОтсылкиДокументов = Читалка.GetDateTime(11);
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ПустаяСсылка.Получить((byte[])Читалка.GetValue(12));
							Ссылка.ВидПлатежа = Читалка.GetString(15);
							Ссылка.ОчередностьПлатежа = Читалка.GetDecimal(16);
							Ссылка.ОтраженоВОперУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ТекстПлательщика = Читалка.GetString(18);
							Ссылка.ТекстПолучателя = Читалка.GetString(19);
							Ссылка.ИННПлательщика = Читалка.GetString(20);
							Ссылка.КПППлательщика = Читалка.GetString(21);
							Ссылка.ИННПолучателя = Читалка.GetString(22);
							Ссылка.КПППолучателя = Читалка.GetString(23);
							Ссылка.СрокДляАкцепта = Читалка.GetDecimal(24);
							Ссылка.УсловиеОплаты = V82.Перечисления/*Ссылка*/.УсловияОплатыРасчетныхДокументов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(25));
							Ссылка.ОснованиеДляБезакцептногоСписания = Читалка.GetString(26);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(29);
							Ссылка.ЧастичнаяОплата = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(34))[0]==1;
							Ссылка.Оплачено = ((byte[])Читалка.GetValue(35))[0]==1;
							Ссылка.НазначениеПлатежа = Читалка.GetString(36);
							Ссылка.Комментарий = Читалка.GetString(38);
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(39))[0]==1;
							Ссылка.Содержание_УСН = Читалка.GetString(40);
							Ссылка.Графа4_УСН = Читалка.GetDecimal(41);
							Ссылка.Графа5_УСН = Читалка.GetDecimal(42);
							Ссылка.Графа6_УСН = Читалка.GetDecimal(43);
							Ссылка.Графа7_УСН = Читалка.GetDecimal(44);
							Ссылка.ДоходыЕНВД_УСН = ((byte[])Читалка.GetValue(45))[0]==1;
							Ссылка.РасходыЕНВД_УСН = ((byte[])Читалка.GetValue(46))[0]==1;
							Ссылка.НДС_УСН = Читалка.GetDecimal(47);
							Ссылка.РучнаяНастройка_УСН = ((byte[])Читалка.GetValue(48))[0]==1;
							Ссылка.ВидАкцепта = Читалка.GetDecimal(50);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыСсылка.ПлатежноеТребованиеВыставленное НайтиПоНомеру(string Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld13224_TYPE [ДокументОснование_Тип],_Fld13224_RRRef [ДокументОснование],_Fld13224_RTRef [ДокументОснование_Вид]
					,_Fld13225RRef [Организация]
					,_Fld13226RRef [СчетОрганизации]
					,_Fld13227RRef [Контрагент]
					,_Fld13228RRef [СчетКонтрагента]
					,_Fld13229 [СуммаДокумента]
					,_Fld13230 [ДатаОтсылкиДокументов]
					,_Fld13231RRef [ВидОперации]
					,_Fld13232RRef [ДоговорКонтрагента]
					,_Fld13233RRef [ВалютаДокумента]
					,_Fld13234 [ВидПлатежа]
					,_Fld13235 [ОчередностьПлатежа]
					,_Fld13236 [ОтраженоВОперУчете]
					,_Fld13237 [ТекстПлательщика]
					,_Fld13238 [ТекстПолучателя]
					,_Fld13239 [ИННПлательщика]
					,_Fld13240 [КПППлательщика]
					,_Fld13241 [ИННПолучателя]
					,_Fld13242 [КПППолучателя]
					,_Fld13243 [СрокДляАкцепта]
					,_Fld13244RRef [УсловиеОплаты]
					,_Fld13245 [ОснованиеДляБезакцептногоСписания]
					,_Fld13246RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld13247RRef [СубконтоКт1]
					,_Fld13248 [ДатаОплаты]
					,_Fld13249 [ЧастичнаяОплата]
					,_Fld13250RRef [СубконтоКт2]
					,_Fld13251RRef [СубконтоКт3]
					,_Fld13252RRef [СтатьяДвиженияДенежныхСредств]
					,_Fld13253 [ОтражатьВБухгалтерскомУчете]
					,_Fld13254 [Оплачено]
					,_Fld13255 [НазначениеПлатежа]
					,_Fld13256RRef [Ответственный]
					,_Fld13257 [Комментарий]
					,_Fld13258 [ОтражатьВНалоговомУчете]
					,_Fld13259 [Содержание_УСН]
					,_Fld13260 [Графа4_УСН]
					,_Fld13261 [Графа5_УСН]
					,_Fld13262 [Графа6_УСН]
					,_Fld13263 [Графа7_УСН]
					,_Fld13264 [ДоходыЕНВД_УСН]
					,_Fld13265 [РасходыЕНВД_УСН]
					,_Fld13266 [НДС_УСН]
					,_Fld13267 [РучнаяНастройка_УСН]
					,_Fld13268RRef [Подразделение]
					,_Fld13269 [ВидАкцепта]
					From _Document516(NOLOCK)
					Where _Number = @Номер";
					Команда.Parameters.AddWithValue("Номер", Номер);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПлатежноеТребованиеВыставленное();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(10);
							Ссылка.ДатаОтсылкиДокументов = Читалка.GetDateTime(11);
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ПустаяСсылка.Получить((byte[])Читалка.GetValue(12));
							Ссылка.ВидПлатежа = Читалка.GetString(15);
							Ссылка.ОчередностьПлатежа = Читалка.GetDecimal(16);
							Ссылка.ОтраженоВОперУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ТекстПлательщика = Читалка.GetString(18);
							Ссылка.ТекстПолучателя = Читалка.GetString(19);
							Ссылка.ИННПлательщика = Читалка.GetString(20);
							Ссылка.КПППлательщика = Читалка.GetString(21);
							Ссылка.ИННПолучателя = Читалка.GetString(22);
							Ссылка.КПППолучателя = Читалка.GetString(23);
							Ссылка.СрокДляАкцепта = Читалка.GetDecimal(24);
							Ссылка.УсловиеОплаты = V82.Перечисления/*Ссылка*/.УсловияОплатыРасчетныхДокументов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(25));
							Ссылка.ОснованиеДляБезакцептногоСписания = Читалка.GetString(26);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(29);
							Ссылка.ЧастичнаяОплата = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(34))[0]==1;
							Ссылка.Оплачено = ((byte[])Читалка.GetValue(35))[0]==1;
							Ссылка.НазначениеПлатежа = Читалка.GetString(36);
							Ссылка.Комментарий = Читалка.GetString(38);
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(39))[0]==1;
							Ссылка.Содержание_УСН = Читалка.GetString(40);
							Ссылка.Графа4_УСН = Читалка.GetDecimal(41);
							Ссылка.Графа5_УСН = Читалка.GetDecimal(42);
							Ссылка.Графа6_УСН = Читалка.GetDecimal(43);
							Ссылка.Графа7_УСН = Читалка.GetDecimal(44);
							Ссылка.ДоходыЕНВД_УСН = ((byte[])Читалка.GetValue(45))[0]==1;
							Ссылка.РасходыЕНВД_УСН = ((byte[])Читалка.GetValue(46))[0]==1;
							Ссылка.НДС_УСН = Читалка.GetDecimal(47);
							Ссылка.РучнаяНастройка_УСН = ((byte[])Читалка.GetValue(48))[0]==1;
							Ссылка.ВидАкцепта = Читалка.GetDecimal(50);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПлатежноеТребованиеВыставленное Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld13224_TYPE [ДокументОснование_Тип],_Fld13224_RRRef [ДокументОснование],_Fld13224_RTRef [ДокументОснование_Вид]
					,_Fld13225RRef [Организация]
					,_Fld13226RRef [СчетОрганизации]
					,_Fld13227RRef [Контрагент]
					,_Fld13228RRef [СчетКонтрагента]
					,_Fld13229 [СуммаДокумента]
					,_Fld13230 [ДатаОтсылкиДокументов]
					,_Fld13231RRef [ВидОперации]
					,_Fld13232RRef [ДоговорКонтрагента]
					,_Fld13233RRef [ВалютаДокумента]
					,_Fld13234 [ВидПлатежа]
					,_Fld13235 [ОчередностьПлатежа]
					,_Fld13236 [ОтраженоВОперУчете]
					,_Fld13237 [ТекстПлательщика]
					,_Fld13238 [ТекстПолучателя]
					,_Fld13239 [ИННПлательщика]
					,_Fld13240 [КПППлательщика]
					,_Fld13241 [ИННПолучателя]
					,_Fld13242 [КПППолучателя]
					,_Fld13243 [СрокДляАкцепта]
					,_Fld13244RRef [УсловиеОплаты]
					,_Fld13245 [ОснованиеДляБезакцептногоСписания]
					,_Fld13246RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld13247RRef [СубконтоКт1]
					,_Fld13248 [ДатаОплаты]
					,_Fld13249 [ЧастичнаяОплата]
					,_Fld13250RRef [СубконтоКт2]
					,_Fld13251RRef [СубконтоКт3]
					,_Fld13252RRef [СтатьяДвиженияДенежныхСредств]
					,_Fld13253 [ОтражатьВБухгалтерскомУчете]
					,_Fld13254 [Оплачено]
					,_Fld13255 [НазначениеПлатежа]
					,_Fld13256RRef [Ответственный]
					,_Fld13257 [Комментарий]
					,_Fld13258 [ОтражатьВНалоговомУчете]
					,_Fld13259 [Содержание_УСН]
					,_Fld13260 [Графа4_УСН]
					,_Fld13261 [Графа5_УСН]
					,_Fld13262 [Графа6_УСН]
					,_Fld13263 [Графа7_УСН]
					,_Fld13264 [ДоходыЕНВД_УСН]
					,_Fld13265 [РасходыЕНВД_УСН]
					,_Fld13266 [НДС_УСН]
					,_Fld13267 [РучнаяНастройка_УСН]
					,_Fld13268RRef [Подразделение]
					,_Fld13269 [ВидАкцепта]
					From _Document516(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ПлатежноеТребованиеВыставленное();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПлатежноеТребованиеВыставленное();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(10);
							Ссылка.ДатаОтсылкиДокументов = Читалка.GetDateTime(11);
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ПустаяСсылка.Получить((byte[])Читалка.GetValue(12));
							Ссылка.ВидПлатежа = Читалка.GetString(15);
							Ссылка.ОчередностьПлатежа = Читалка.GetDecimal(16);
							Ссылка.ОтраженоВОперУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ТекстПлательщика = Читалка.GetString(18);
							Ссылка.ТекстПолучателя = Читалка.GetString(19);
							Ссылка.ИННПлательщика = Читалка.GetString(20);
							Ссылка.КПППлательщика = Читалка.GetString(21);
							Ссылка.ИННПолучателя = Читалка.GetString(22);
							Ссылка.КПППолучателя = Читалка.GetString(23);
							Ссылка.СрокДляАкцепта = Читалка.GetDecimal(24);
							Ссылка.УсловиеОплаты = V82.Перечисления/*Ссылка*/.УсловияОплатыРасчетныхДокументов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(25));
							Ссылка.ОснованиеДляБезакцептногоСписания = Читалка.GetString(26);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(29);
							Ссылка.ЧастичнаяОплата = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(34))[0]==1;
							Ссылка.Оплачено = ((byte[])Читалка.GetValue(35))[0]==1;
							Ссылка.НазначениеПлатежа = Читалка.GetString(36);
							Ссылка.Комментарий = Читалка.GetString(38);
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(39))[0]==1;
							Ссылка.Содержание_УСН = Читалка.GetString(40);
							Ссылка.Графа4_УСН = Читалка.GetDecimal(41);
							Ссылка.Графа5_УСН = Читалка.GetDecimal(42);
							Ссылка.Графа6_УСН = Читалка.GetDecimal(43);
							Ссылка.Графа7_УСН = Читалка.GetDecimal(44);
							Ссылка.ДоходыЕНВД_УСН = ((byte[])Читалка.GetValue(45))[0]==1;
							Ссылка.РасходыЕНВД_УСН = ((byte[])Читалка.GetValue(46))[0]==1;
							Ссылка.НДС_УСН = Читалка.GetDecimal(47);
							Ссылка.РучнаяНастройка_УСН = ((byte[])Читалка.GetValue(48))[0]==1;
							Ссылка.ВидАкцепта = Читалка.GetDecimal(50);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПлатежноеТребованиеВыставленное ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld13224_TYPE [ДокументОснование_Тип],_Fld13224_RRRef [ДокументОснование],_Fld13224_RTRef [ДокументОснование_Вид]
					,_Fld13225RRef [Организация]
					,_Fld13226RRef [СчетОрганизации]
					,_Fld13227RRef [Контрагент]
					,_Fld13228RRef [СчетКонтрагента]
					,_Fld13229 [СуммаДокумента]
					,_Fld13230 [ДатаОтсылкиДокументов]
					,_Fld13231RRef [ВидОперации]
					,_Fld13232RRef [ДоговорКонтрагента]
					,_Fld13233RRef [ВалютаДокумента]
					,_Fld13234 [ВидПлатежа]
					,_Fld13235 [ОчередностьПлатежа]
					,_Fld13236 [ОтраженоВОперУчете]
					,_Fld13237 [ТекстПлательщика]
					,_Fld13238 [ТекстПолучателя]
					,_Fld13239 [ИННПлательщика]
					,_Fld13240 [КПППлательщика]
					,_Fld13241 [ИННПолучателя]
					,_Fld13242 [КПППолучателя]
					,_Fld13243 [СрокДляАкцепта]
					,_Fld13244RRef [УсловиеОплаты]
					,_Fld13245 [ОснованиеДляБезакцептногоСписания]
					,_Fld13246RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld13247RRef [СубконтоКт1]
					,_Fld13248 [ДатаОплаты]
					,_Fld13249 [ЧастичнаяОплата]
					,_Fld13250RRef [СубконтоКт2]
					,_Fld13251RRef [СубконтоКт3]
					,_Fld13252RRef [СтатьяДвиженияДенежныхСредств]
					,_Fld13253 [ОтражатьВБухгалтерскомУчете]
					,_Fld13254 [Оплачено]
					,_Fld13255 [НазначениеПлатежа]
					,_Fld13256RRef [Ответственный]
					,_Fld13257 [Комментарий]
					,_Fld13258 [ОтражатьВНалоговомУчете]
					,_Fld13259 [Содержание_УСН]
					,_Fld13260 [Графа4_УСН]
					,_Fld13261 [Графа5_УСН]
					,_Fld13262 [Графа6_УСН]
					,_Fld13263 [Графа7_УСН]
					,_Fld13264 [ДоходыЕНВД_УСН]
					,_Fld13265 [РасходыЕНВД_УСН]
					,_Fld13266 [НДС_УСН]
					,_Fld13267 [РучнаяНастройка_УСН]
					,_Fld13268RRef [Подразделение]
					,_Fld13269 [ВидАкцепта]
					From _Document516(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ПлатежноеТребованиеВыставленное();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПлатежноеТребованиеВыставленное();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(10);
							Ссылка.ДатаОтсылкиДокументов = Читалка.GetDateTime(11);
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ПустаяСсылка.Получить((byte[])Читалка.GetValue(12));
							Ссылка.ВидПлатежа = Читалка.GetString(15);
							Ссылка.ОчередностьПлатежа = Читалка.GetDecimal(16);
							Ссылка.ОтраженоВОперУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ТекстПлательщика = Читалка.GetString(18);
							Ссылка.ТекстПолучателя = Читалка.GetString(19);
							Ссылка.ИННПлательщика = Читалка.GetString(20);
							Ссылка.КПППлательщика = Читалка.GetString(21);
							Ссылка.ИННПолучателя = Читалка.GetString(22);
							Ссылка.КПППолучателя = Читалка.GetString(23);
							Ссылка.СрокДляАкцепта = Читалка.GetDecimal(24);
							Ссылка.УсловиеОплаты = V82.Перечисления/*Ссылка*/.УсловияОплатыРасчетныхДокументов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(25));
							Ссылка.ОснованиеДляБезакцептногоСписания = Читалка.GetString(26);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(29);
							Ссылка.ЧастичнаяОплата = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(34))[0]==1;
							Ссылка.Оплачено = ((byte[])Читалка.GetValue(35))[0]==1;
							Ссылка.НазначениеПлатежа = Читалка.GetString(36);
							Ссылка.Комментарий = Читалка.GetString(38);
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(39))[0]==1;
							Ссылка.Содержание_УСН = Читалка.GetString(40);
							Ссылка.Графа4_УСН = Читалка.GetDecimal(41);
							Ссылка.Графа5_УСН = Читалка.GetDecimal(42);
							Ссылка.Графа6_УСН = Читалка.GetDecimal(43);
							Ссылка.Графа7_УСН = Читалка.GetDecimal(44);
							Ссылка.ДоходыЕНВД_УСН = ((byte[])Читалка.GetValue(45))[0]==1;
							Ссылка.РасходыЕНВД_УСН = ((byte[])Читалка.GetValue(46))[0]==1;
							Ссылка.НДС_УСН = Читалка.GetDecimal(47);
							Ссылка.РучнаяНастройка_УСН = ((byte[])Читалка.GetValue(48))[0]==1;
							Ссылка.ВидАкцепта = Читалка.GetDecimal(50);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПлатежноеТребованиеВыставленное ВыбратьПоНомеру(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld13224_TYPE [ДокументОснование_Тип],_Fld13224_RRRef [ДокументОснование],_Fld13224_RTRef [ДокументОснование_Вид]
					,_Fld13225RRef [Организация]
					,_Fld13226RRef [СчетОрганизации]
					,_Fld13227RRef [Контрагент]
					,_Fld13228RRef [СчетКонтрагента]
					,_Fld13229 [СуммаДокумента]
					,_Fld13230 [ДатаОтсылкиДокументов]
					,_Fld13231RRef [ВидОперации]
					,_Fld13232RRef [ДоговорКонтрагента]
					,_Fld13233RRef [ВалютаДокумента]
					,_Fld13234 [ВидПлатежа]
					,_Fld13235 [ОчередностьПлатежа]
					,_Fld13236 [ОтраженоВОперУчете]
					,_Fld13237 [ТекстПлательщика]
					,_Fld13238 [ТекстПолучателя]
					,_Fld13239 [ИННПлательщика]
					,_Fld13240 [КПППлательщика]
					,_Fld13241 [ИННПолучателя]
					,_Fld13242 [КПППолучателя]
					,_Fld13243 [СрокДляАкцепта]
					,_Fld13244RRef [УсловиеОплаты]
					,_Fld13245 [ОснованиеДляБезакцептногоСписания]
					,_Fld13246RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld13247RRef [СубконтоКт1]
					,_Fld13248 [ДатаОплаты]
					,_Fld13249 [ЧастичнаяОплата]
					,_Fld13250RRef [СубконтоКт2]
					,_Fld13251RRef [СубконтоКт3]
					,_Fld13252RRef [СтатьяДвиженияДенежныхСредств]
					,_Fld13253 [ОтражатьВБухгалтерскомУчете]
					,_Fld13254 [Оплачено]
					,_Fld13255 [НазначениеПлатежа]
					,_Fld13256RRef [Ответственный]
					,_Fld13257 [Комментарий]
					,_Fld13258 [ОтражатьВНалоговомУчете]
					,_Fld13259 [Содержание_УСН]
					,_Fld13260 [Графа4_УСН]
					,_Fld13261 [Графа5_УСН]
					,_Fld13262 [Графа6_УСН]
					,_Fld13263 [Графа7_УСН]
					,_Fld13264 [ДоходыЕНВД_УСН]
					,_Fld13265 [РасходыЕНВД_УСН]
					,_Fld13266 [НДС_УСН]
					,_Fld13267 [РучнаяНастройка_УСН]
					,_Fld13268RRef [Подразделение]
					,_Fld13269 [ВидАкцепта]
					From _Document516(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ПлатежноеТребованиеВыставленное();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПлатежноеТребованиеВыставленное();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(10);
							Ссылка.ДатаОтсылкиДокументов = Читалка.GetDateTime(11);
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ПустаяСсылка.Получить((byte[])Читалка.GetValue(12));
							Ссылка.ВидПлатежа = Читалка.GetString(15);
							Ссылка.ОчередностьПлатежа = Читалка.GetDecimal(16);
							Ссылка.ОтраженоВОперУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ТекстПлательщика = Читалка.GetString(18);
							Ссылка.ТекстПолучателя = Читалка.GetString(19);
							Ссылка.ИННПлательщика = Читалка.GetString(20);
							Ссылка.КПППлательщика = Читалка.GetString(21);
							Ссылка.ИННПолучателя = Читалка.GetString(22);
							Ссылка.КПППолучателя = Читалка.GetString(23);
							Ссылка.СрокДляАкцепта = Читалка.GetDecimal(24);
							Ссылка.УсловиеОплаты = V82.Перечисления/*Ссылка*/.УсловияОплатыРасчетныхДокументов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(25));
							Ссылка.ОснованиеДляБезакцептногоСписания = Читалка.GetString(26);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(29);
							Ссылка.ЧастичнаяОплата = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(34))[0]==1;
							Ссылка.Оплачено = ((byte[])Читалка.GetValue(35))[0]==1;
							Ссылка.НазначениеПлатежа = Читалка.GetString(36);
							Ссылка.Комментарий = Читалка.GetString(38);
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(39))[0]==1;
							Ссылка.Содержание_УСН = Читалка.GetString(40);
							Ссылка.Графа4_УСН = Читалка.GetDecimal(41);
							Ссылка.Графа5_УСН = Читалка.GetDecimal(42);
							Ссылка.Графа6_УСН = Читалка.GetDecimal(43);
							Ссылка.Графа7_УСН = Читалка.GetDecimal(44);
							Ссылка.ДоходыЕНВД_УСН = ((byte[])Читалка.GetValue(45))[0]==1;
							Ссылка.РасходыЕНВД_УСН = ((byte[])Читалка.GetValue(46))[0]==1;
							Ссылка.НДС_УСН = Читалка.GetDecimal(47);
							Ссылка.РучнаяНастройка_УСН = ((byte[])Читалка.GetValue(48))[0]==1;
							Ссылка.ВидАкцепта = Читалка.GetDecimal(50);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПлатежноеТребованиеВыставленное СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld13224_TYPE [ДокументОснование_Тип],_Fld13224_RRRef [ДокументОснование],_Fld13224_RTRef [ДокументОснование_Вид]
					,_Fld13225RRef [Организация]
					,_Fld13226RRef [СчетОрганизации]
					,_Fld13227RRef [Контрагент]
					,_Fld13228RRef [СчетКонтрагента]
					,_Fld13229 [СуммаДокумента]
					,_Fld13230 [ДатаОтсылкиДокументов]
					,_Fld13231RRef [ВидОперации]
					,_Fld13232RRef [ДоговорКонтрагента]
					,_Fld13233RRef [ВалютаДокумента]
					,_Fld13234 [ВидПлатежа]
					,_Fld13235 [ОчередностьПлатежа]
					,_Fld13236 [ОтраженоВОперУчете]
					,_Fld13237 [ТекстПлательщика]
					,_Fld13238 [ТекстПолучателя]
					,_Fld13239 [ИННПлательщика]
					,_Fld13240 [КПППлательщика]
					,_Fld13241 [ИННПолучателя]
					,_Fld13242 [КПППолучателя]
					,_Fld13243 [СрокДляАкцепта]
					,_Fld13244RRef [УсловиеОплаты]
					,_Fld13245 [ОснованиеДляБезакцептногоСписания]
					,_Fld13246RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld13247RRef [СубконтоКт1]
					,_Fld13248 [ДатаОплаты]
					,_Fld13249 [ЧастичнаяОплата]
					,_Fld13250RRef [СубконтоКт2]
					,_Fld13251RRef [СубконтоКт3]
					,_Fld13252RRef [СтатьяДвиженияДенежныхСредств]
					,_Fld13253 [ОтражатьВБухгалтерскомУчете]
					,_Fld13254 [Оплачено]
					,_Fld13255 [НазначениеПлатежа]
					,_Fld13256RRef [Ответственный]
					,_Fld13257 [Комментарий]
					,_Fld13258 [ОтражатьВНалоговомУчете]
					,_Fld13259 [Содержание_УСН]
					,_Fld13260 [Графа4_УСН]
					,_Fld13261 [Графа5_УСН]
					,_Fld13262 [Графа6_УСН]
					,_Fld13263 [Графа7_УСН]
					,_Fld13264 [ДоходыЕНВД_УСН]
					,_Fld13265 [РасходыЕНВД_УСН]
					,_Fld13266 [НДС_УСН]
					,_Fld13267 [РучнаяНастройка_УСН]
					,_Fld13268RRef [Подразделение]
					,_Fld13269 [ВидАкцепта]
					From _Document516(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ПлатежноеТребованиеВыставленное();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПлатежноеТребованиеВыставленное();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(10);
							Ссылка.ДатаОтсылкиДокументов = Читалка.GetDateTime(11);
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ПустаяСсылка.Получить((byte[])Читалка.GetValue(12));
							Ссылка.ВидПлатежа = Читалка.GetString(15);
							Ссылка.ОчередностьПлатежа = Читалка.GetDecimal(16);
							Ссылка.ОтраженоВОперУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ТекстПлательщика = Читалка.GetString(18);
							Ссылка.ТекстПолучателя = Читалка.GetString(19);
							Ссылка.ИННПлательщика = Читалка.GetString(20);
							Ссылка.КПППлательщика = Читалка.GetString(21);
							Ссылка.ИННПолучателя = Читалка.GetString(22);
							Ссылка.КПППолучателя = Читалка.GetString(23);
							Ссылка.СрокДляАкцепта = Читалка.GetDecimal(24);
							Ссылка.УсловиеОплаты = V82.Перечисления/*Ссылка*/.УсловияОплатыРасчетныхДокументов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(25));
							Ссылка.ОснованиеДляБезакцептногоСписания = Читалка.GetString(26);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(29);
							Ссылка.ЧастичнаяОплата = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(34))[0]==1;
							Ссылка.Оплачено = ((byte[])Читалка.GetValue(35))[0]==1;
							Ссылка.НазначениеПлатежа = Читалка.GetString(36);
							Ссылка.Комментарий = Читалка.GetString(38);
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(39))[0]==1;
							Ссылка.Содержание_УСН = Читалка.GetString(40);
							Ссылка.Графа4_УСН = Читалка.GetDecimal(41);
							Ссылка.Графа5_УСН = Читалка.GetDecimal(42);
							Ссылка.Графа6_УСН = Читалка.GetDecimal(43);
							Ссылка.Графа7_УСН = Читалка.GetDecimal(44);
							Ссылка.ДоходыЕНВД_УСН = ((byte[])Читалка.GetValue(45))[0]==1;
							Ссылка.РасходыЕНВД_УСН = ((byte[])Читалка.GetValue(46))[0]==1;
							Ссылка.НДС_УСН = Читалка.GetDecimal(47);
							Ссылка.РучнаяНастройка_УСН = ((byte[])Читалка.GetValue(48))[0]==1;
							Ссылка.ВидАкцепта = Читалка.GetDecimal(50);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПлатежноеТребованиеВыставленное СтраницаПоНомеру(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld13224_TYPE [ДокументОснование_Тип],_Fld13224_RRRef [ДокументОснование],_Fld13224_RTRef [ДокументОснование_Вид]
					,_Fld13225RRef [Организация]
					,_Fld13226RRef [СчетОрганизации]
					,_Fld13227RRef [Контрагент]
					,_Fld13228RRef [СчетКонтрагента]
					,_Fld13229 [СуммаДокумента]
					,_Fld13230 [ДатаОтсылкиДокументов]
					,_Fld13231RRef [ВидОперации]
					,_Fld13232RRef [ДоговорКонтрагента]
					,_Fld13233RRef [ВалютаДокумента]
					,_Fld13234 [ВидПлатежа]
					,_Fld13235 [ОчередностьПлатежа]
					,_Fld13236 [ОтраженоВОперУчете]
					,_Fld13237 [ТекстПлательщика]
					,_Fld13238 [ТекстПолучателя]
					,_Fld13239 [ИННПлательщика]
					,_Fld13240 [КПППлательщика]
					,_Fld13241 [ИННПолучателя]
					,_Fld13242 [КПППолучателя]
					,_Fld13243 [СрокДляАкцепта]
					,_Fld13244RRef [УсловиеОплаты]
					,_Fld13245 [ОснованиеДляБезакцептногоСписания]
					,_Fld13246RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld13247RRef [СубконтоКт1]
					,_Fld13248 [ДатаОплаты]
					,_Fld13249 [ЧастичнаяОплата]
					,_Fld13250RRef [СубконтоКт2]
					,_Fld13251RRef [СубконтоКт3]
					,_Fld13252RRef [СтатьяДвиженияДенежныхСредств]
					,_Fld13253 [ОтражатьВБухгалтерскомУчете]
					,_Fld13254 [Оплачено]
					,_Fld13255 [НазначениеПлатежа]
					,_Fld13256RRef [Ответственный]
					,_Fld13257 [Комментарий]
					,_Fld13258 [ОтражатьВНалоговомУчете]
					,_Fld13259 [Содержание_УСН]
					,_Fld13260 [Графа4_УСН]
					,_Fld13261 [Графа5_УСН]
					,_Fld13262 [Графа6_УСН]
					,_Fld13263 [Графа7_УСН]
					,_Fld13264 [ДоходыЕНВД_УСН]
					,_Fld13265 [РасходыЕНВД_УСН]
					,_Fld13266 [НДС_УСН]
					,_Fld13267 [РучнаяНастройка_УСН]
					,_Fld13268RRef [Подразделение]
					,_Fld13269 [ВидАкцепта]
					From _Document516(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ПлатежноеТребованиеВыставленное();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПлатежноеТребованиеВыставленное();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(10);
							Ссылка.ДатаОтсылкиДокументов = Читалка.GetDateTime(11);
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ПустаяСсылка.Получить((byte[])Читалка.GetValue(12));
							Ссылка.ВидПлатежа = Читалка.GetString(15);
							Ссылка.ОчередностьПлатежа = Читалка.GetDecimal(16);
							Ссылка.ОтраженоВОперУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ТекстПлательщика = Читалка.GetString(18);
							Ссылка.ТекстПолучателя = Читалка.GetString(19);
							Ссылка.ИННПлательщика = Читалка.GetString(20);
							Ссылка.КПППлательщика = Читалка.GetString(21);
							Ссылка.ИННПолучателя = Читалка.GetString(22);
							Ссылка.КПППолучателя = Читалка.GetString(23);
							Ссылка.СрокДляАкцепта = Читалка.GetDecimal(24);
							Ссылка.УсловиеОплаты = V82.Перечисления/*Ссылка*/.УсловияОплатыРасчетныхДокументов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(25));
							Ссылка.ОснованиеДляБезакцептногоСписания = Читалка.GetString(26);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(29);
							Ссылка.ЧастичнаяОплата = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(34))[0]==1;
							Ссылка.Оплачено = ((byte[])Читалка.GetValue(35))[0]==1;
							Ссылка.НазначениеПлатежа = Читалка.GetString(36);
							Ссылка.Комментарий = Читалка.GetString(38);
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(39))[0]==1;
							Ссылка.Содержание_УСН = Читалка.GetString(40);
							Ссылка.Графа4_УСН = Читалка.GetDecimal(41);
							Ссылка.Графа5_УСН = Читалка.GetDecimal(42);
							Ссылка.Графа6_УСН = Читалка.GetDecimal(43);
							Ссылка.Графа7_УСН = Читалка.GetDecimal(44);
							Ссылка.ДоходыЕНВД_УСН = ((byte[])Читалка.GetValue(45))[0]==1;
							Ссылка.РасходыЕНВД_УСН = ((byte[])Читалка.GetValue(46))[0]==1;
							Ссылка.НДС_УСН = Читалка.GetDecimal(47);
							Ссылка.РучнаяНастройка_УСН = ((byte[])Читалка.GetValue(48))[0]==1;
							Ссылка.ВидАкцепта = Читалка.GetDecimal(50);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.ДокументыОбъект.ПлатежноеТребованиеВыставленное СоздатьЭлемент()
		{
			var Объект = new V82.ДокументыОбъект.ПлатежноеТребованиеВыставленное();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.ВидПлатежа = "";
			Объект.ТекстПлательщика = "";
			Объект.ТекстПолучателя = "";
			Объект.ИННПлательщика = "";
			Объект.КПППлательщика = "";
			Объект.ИННПолучателя = "";
			Объект.КПППолучателя = "";
			Объект.ОснованиеДляБезакцептногоСписания = "";
			Объект.НазначениеПлатежа = "";
			Объект.Комментарий = "";
			Объект.Содержание_УСН = "";
			Объект.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ПустаяСсылка;
			Объект.УсловиеОплаты = V82.Перечисления/*Ссылка*/.УсловияОплатыРасчетныхДокументов.ПустаяСсылка;
			return Объект;
		}
	}
}