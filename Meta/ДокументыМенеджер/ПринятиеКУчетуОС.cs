
using System;
using System.Data.SqlClient;
using V82;
using V82.ДокументыСсылка;
using V82.Документы;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Документы//Менеджер
{
	///<summary>
	///(Общ)
	///</summary>
	public partial class ПринятиеКУчетуОС:ДокументМенеджер
	{
		
		public static ДокументыСсылка.ПринятиеКУчетуОС НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld10018RRef [ВидОперации]
					,_Fld10019 [ГодоваяНормаАмортизацииБУ]
					,_Fld10020 [ГодоваяНормаАмортизацииУУ]
					,_Fld10021RRef [ГрафикАмортизацииПоГодуБУ]
					,_Fld10022RRef [ГрафикАмортизацииПоГодуУУ]
					,_Fld10023 [ДатаПриобретения]
					,_Fld10024RRef [ИндивидуальныйГрафикАмортизации]
					,_Fld10025 [Комментарий]
					,_Fld10026 [КоэффициентУскоренияБУ]
					,_Fld10027 [КоэффициентУскоренияУУ]
					,_Fld10028RRef [МОЛБУ]
					,_Fld10029RRef [МОЛУУ]
					,_Fld10030RRef [НаправлениеСписанияПриПринятииКУчету]
					,_Fld10031 [НачислятьАмортизациюБУ]
					,_Fld10032 [НачислятьАмортизациюВТекущемМесяце]
					,_Fld10033 [НачислятьАмортизациюНУ]
					,_Fld10034 [НачислятьАмортизациюУУ]
					,_Fld10035 [НДСВключенВСтоимость]
					,_Fld10036RRef [Номенклатура]
					,_Fld10038RRef [ОбъектСтроительства]
					,_Fld10039RRef [Организация]
					,_Fld10040RRef [Ответственный]
					,_Fld10042 [ОтражатьВНалоговомУчете]
					,_Fld10041 [ОтражатьВБухгалтерскомУчете]
					,_Fld10045RRef [ПараметрВыработкиБУ]
					,_Fld10043 [ОтражатьВУправленческомУчете]
					,_Fld10044 [ОтразитьВСоставеМПЗ]
					,_Fld10048RRef [ПодразделениеОрганизации]
					,_Fld10046RRef [ПараметрВыработкиУУ]
					,_Fld10047RRef [Подразделение]
					,_Fld10094RRef [ПорядокВключенияСтоимостиВСоставРасходовНУ]
					,_Fld10050 [ПредполагаемыйОбъемПродукцииБУ]
					,_Fld10052 [ПринятиеКУчетуОдновременноСВводомВЭксплуатацию]
					,_Fld10051 [ПредполагаемыйОбъемПродукцииУУ]
					,_Fld10057RRef [Склад]
					,_Fld10053 [ПринятиеКУчетуОдновременноСВводомВЭксплуатациюРегл]
					,_Fld10063RRef [СоставОсновногоСредства]
					,_Fld10055RRef [СерияМПЗ]
					,_Fld10056RRef [СерияНоменклатуры]
					,_Fld10064 [СпециальныйКоэффициентНУ]
					,_Fld10066RRef [СпособНачисленияАмортизацииБУ]
					,_Fld10059RRef [СобытиеВводВЭксплуатацию]
					,_Fld10060RRef [СобытиеВводВЭксплуатациюРегл]
					,_Fld10061RRef [СобытиеПринятиеКУчету]
					,_Fld10062RRef [СобытиеПринятиеКУчетуРегл]
					,_Fld10067RRef [СпособНачисленияАмортизацииНУ]
					,_Fld10069RRef [СпособПоступления]
					,_Fld10065 [СписыватьПриПринятииКУчету]
					,_Fld10070RRef [СпособыОтраженияРасходовПоАмортизации]
					,_Fld10071 [СрокПолезногоИспользованияБУ]
					,_Fld10068RRef [СпособНачисленияАмортизацииУУ]
					,_Fld10072 [СрокПолезногоИспользованияНУ]
					,_Fld10073 [СрокПолезногоИспользованияУСН]
					,_Fld10077 [СтоимостьБУ]
					,_Fld10078 [СтоимостьБУХоз]
					,_Fld10079 [СтоимостьНУ]
					,_Fld10074 [СрокПолезногоИспользованияУУ]
					,_Fld10075RRef [СтавкаНДС]
					,_Fld10076 [Стоимость]
					,_Fld10080 [СтоимостьНУХоз]
					,_Fld10095 [СтоимостьПР]
					,_Fld10096 [СтоимостьПРХоз]
					,_Fld10097 [СтоимостьВР]
					,_Fld10098 [СтоимостьВРХоз]
					,_Fld10082 [СуммаНДС]
					,_Fld10081 [СтоимостьУСН]
					,_Fld10083RRef [СчетНачисленияАмортизацииБУ]
					,_Fld10084RRef [СчетНачисленияАмортизацииНУ]
					,_Fld10085RRef [СчетУчетаБУ]
					,_Fld10087RRef [СчетУчетаМПЗБУ]
					,_Fld10086RRef [СчетУчетаБУВнеоборотногоАктива]
					,_Fld10089RRef [СчетУчетаНУ]
					,_Fld10091RRef [ХарактеристикаМПЗ]
					,_Fld10092RRef [ХарактеристикаНоменклатуры]
					,_Fld10093RRef [ШифрПоЕНАОФ]
					,_Fld10090RRef [СчетУчетаНУВнеоборотногоАктива]
					,_Fld10054 [ПроцентКапитальныхВложенийВключаемыхВРасходыНУ]
					,_Fld10049RRef [ПорядокВключенияСтоимостиВСоставРасходовУСН]
					,_Fld10037RRef [НоменклатураМПЗ]
					,_Fld10058RRef [СкладМПЗ]
					,_Fld18829RRef [СчетУчетаЗатратПоАмортизационнойПремии]
					,_Fld18830RRef [СубконтоПоАмортизационнойПремии1]
					,_Fld18831RRef [СубконтоПоАмортизационнойПремии2]
					,_Fld18832RRef [СубконтоПоАмортизационнойПремии3]
					,_Fld27258RRef [СпособОтраженияРасходовПриВключенииВСтоимость]
					From _Document411(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПринятиеКУчетуОС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПринятияКУчетуОсновныхСредств.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ГодоваяНормаАмортизацииБУ = Читалка.GetDecimal(4);
							Ссылка.ГодоваяНормаАмортизацииУУ = Читалка.GetDecimal(5);
							Ссылка.ДатаПриобретения = Читалка.GetDateTime(8);
							Ссылка.Комментарий = Читалка.GetString(10);
							Ссылка.КоэффициентУскоренияБУ = Читалка.GetDecimal(11);
							Ссылка.КоэффициентУскоренияУУ = Читалка.GetDecimal(12);
							Ссылка.НачислятьАмортизациюБУ = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.НачислятьАмортизациюВТекущемМесяце = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.НачислятьАмортизациюНУ = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.НачислятьАмортизациюУУ = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(28))[0]==1;
							Ссылка.ОтразитьВСоставеМПЗ = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.ПорядокВключенияСтоимостиВСоставРасходовНУ = V82.Перечисления/*Ссылка*/.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ПустаяСсылка.Получить((byte[])Читалка.GetValue(33));
							Ссылка.ПредполагаемыйОбъемПродукцииБУ = Читалка.GetDecimal(34);
							Ссылка.ПринятиеКУчетуОдновременноСВводомВЭксплуатацию = ((byte[])Читалка.GetValue(35))[0]==1;
							Ссылка.ПредполагаемыйОбъемПродукцииУУ = Читалка.GetDecimal(36);
							Ссылка.ПринятиеКУчетуОдновременноСВводомВЭксплуатациюРегл = ((byte[])Читалка.GetValue(38))[0]==1;
							Ссылка.СпециальныйКоэффициентНУ = Читалка.GetDecimal(42);
							Ссылка.СпособНачисленияАмортизацииБУ = V82.Перечисления/*Ссылка*/.СпособыНачисленияАмортизацииОС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(43));
							Ссылка.СпособНачисленияАмортизацииНУ = V82.Перечисления/*Ссылка*/.МетодыНачисленияАмортизации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(48));
							Ссылка.СпособПоступления = V82.Перечисления/*Ссылка*/.СпособыПоступленияАктивов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(49));
							Ссылка.СписыватьПриПринятииКУчету = ((byte[])Читалка.GetValue(50))[0]==1;
							Ссылка.СрокПолезногоИспользованияБУ = Читалка.GetDecimal(52);
							Ссылка.СпособНачисленияАмортизацииУУ = V82.Перечисления/*Ссылка*/.СпособыНачисленияАмортизацииОС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(53));
							Ссылка.СрокПолезногоИспользованияНУ = Читалка.GetDecimal(54);
							Ссылка.СрокПолезногоИспользованияУСН = Читалка.GetDecimal(55);
							Ссылка.СтоимостьБУ = Читалка.GetDecimal(56);
							Ссылка.СтоимостьБУХоз = Читалка.GetDecimal(57);
							Ссылка.СтоимостьНУ = Читалка.GetDecimal(58);
							Ссылка.СрокПолезногоИспользованияУУ = Читалка.GetDecimal(59);
							Ссылка.СтавкаНДС = V82.Перечисления/*Ссылка*/.СтавкиНДС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(60));
							Ссылка.Стоимость = Читалка.GetDecimal(61);
							Ссылка.СтоимостьНУХоз = Читалка.GetDecimal(62);
							Ссылка.СтоимостьПР = Читалка.GetDecimal(63);
							Ссылка.СтоимостьПРХоз = Читалка.GetDecimal(64);
							Ссылка.СтоимостьВР = Читалка.GetDecimal(65);
							Ссылка.СтоимостьВРХоз = Читалка.GetDecimal(66);
							Ссылка.СуммаНДС = Читалка.GetDecimal(67);
							Ссылка.СтоимостьУСН = Читалка.GetDecimal(68);
							Ссылка.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ = Читалка.GetDecimal(79);
							Ссылка.ПорядокВключенияСтоимостиВСоставРасходовУСН = V82.Перечисления/*Ссылка*/.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН.ПустаяСсылка.Получить((byte[])Читалка.GetValue(80));
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыСсылка.ПринятиеКУчетуОС НайтиПоНомеру(string Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld10018RRef [ВидОперации]
					,_Fld10019 [ГодоваяНормаАмортизацииБУ]
					,_Fld10020 [ГодоваяНормаАмортизацииУУ]
					,_Fld10021RRef [ГрафикАмортизацииПоГодуБУ]
					,_Fld10022RRef [ГрафикАмортизацииПоГодуУУ]
					,_Fld10023 [ДатаПриобретения]
					,_Fld10024RRef [ИндивидуальныйГрафикАмортизации]
					,_Fld10025 [Комментарий]
					,_Fld10026 [КоэффициентУскоренияБУ]
					,_Fld10027 [КоэффициентУскоренияУУ]
					,_Fld10028RRef [МОЛБУ]
					,_Fld10029RRef [МОЛУУ]
					,_Fld10030RRef [НаправлениеСписанияПриПринятииКУчету]
					,_Fld10031 [НачислятьАмортизациюБУ]
					,_Fld10032 [НачислятьАмортизациюВТекущемМесяце]
					,_Fld10033 [НачислятьАмортизациюНУ]
					,_Fld10034 [НачислятьАмортизациюУУ]
					,_Fld10035 [НДСВключенВСтоимость]
					,_Fld10036RRef [Номенклатура]
					,_Fld10038RRef [ОбъектСтроительства]
					,_Fld10039RRef [Организация]
					,_Fld10040RRef [Ответственный]
					,_Fld10042 [ОтражатьВНалоговомУчете]
					,_Fld10041 [ОтражатьВБухгалтерскомУчете]
					,_Fld10045RRef [ПараметрВыработкиБУ]
					,_Fld10043 [ОтражатьВУправленческомУчете]
					,_Fld10044 [ОтразитьВСоставеМПЗ]
					,_Fld10048RRef [ПодразделениеОрганизации]
					,_Fld10046RRef [ПараметрВыработкиУУ]
					,_Fld10047RRef [Подразделение]
					,_Fld10094RRef [ПорядокВключенияСтоимостиВСоставРасходовНУ]
					,_Fld10050 [ПредполагаемыйОбъемПродукцииБУ]
					,_Fld10052 [ПринятиеКУчетуОдновременноСВводомВЭксплуатацию]
					,_Fld10051 [ПредполагаемыйОбъемПродукцииУУ]
					,_Fld10057RRef [Склад]
					,_Fld10053 [ПринятиеКУчетуОдновременноСВводомВЭксплуатациюРегл]
					,_Fld10063RRef [СоставОсновногоСредства]
					,_Fld10055RRef [СерияМПЗ]
					,_Fld10056RRef [СерияНоменклатуры]
					,_Fld10064 [СпециальныйКоэффициентНУ]
					,_Fld10066RRef [СпособНачисленияАмортизацииБУ]
					,_Fld10059RRef [СобытиеВводВЭксплуатацию]
					,_Fld10060RRef [СобытиеВводВЭксплуатациюРегл]
					,_Fld10061RRef [СобытиеПринятиеКУчету]
					,_Fld10062RRef [СобытиеПринятиеКУчетуРегл]
					,_Fld10067RRef [СпособНачисленияАмортизацииНУ]
					,_Fld10069RRef [СпособПоступления]
					,_Fld10065 [СписыватьПриПринятииКУчету]
					,_Fld10070RRef [СпособыОтраженияРасходовПоАмортизации]
					,_Fld10071 [СрокПолезногоИспользованияБУ]
					,_Fld10068RRef [СпособНачисленияАмортизацииУУ]
					,_Fld10072 [СрокПолезногоИспользованияНУ]
					,_Fld10073 [СрокПолезногоИспользованияУСН]
					,_Fld10077 [СтоимостьБУ]
					,_Fld10078 [СтоимостьБУХоз]
					,_Fld10079 [СтоимостьНУ]
					,_Fld10074 [СрокПолезногоИспользованияУУ]
					,_Fld10075RRef [СтавкаНДС]
					,_Fld10076 [Стоимость]
					,_Fld10080 [СтоимостьНУХоз]
					,_Fld10095 [СтоимостьПР]
					,_Fld10096 [СтоимостьПРХоз]
					,_Fld10097 [СтоимостьВР]
					,_Fld10098 [СтоимостьВРХоз]
					,_Fld10082 [СуммаНДС]
					,_Fld10081 [СтоимостьУСН]
					,_Fld10083RRef [СчетНачисленияАмортизацииБУ]
					,_Fld10084RRef [СчетНачисленияАмортизацииНУ]
					,_Fld10085RRef [СчетУчетаБУ]
					,_Fld10087RRef [СчетУчетаМПЗБУ]
					,_Fld10086RRef [СчетУчетаБУВнеоборотногоАктива]
					,_Fld10089RRef [СчетУчетаНУ]
					,_Fld10091RRef [ХарактеристикаМПЗ]
					,_Fld10092RRef [ХарактеристикаНоменклатуры]
					,_Fld10093RRef [ШифрПоЕНАОФ]
					,_Fld10090RRef [СчетУчетаНУВнеоборотногоАктива]
					,_Fld10054 [ПроцентКапитальныхВложенийВключаемыхВРасходыНУ]
					,_Fld10049RRef [ПорядокВключенияСтоимостиВСоставРасходовУСН]
					,_Fld10037RRef [НоменклатураМПЗ]
					,_Fld10058RRef [СкладМПЗ]
					,_Fld18829RRef [СчетУчетаЗатратПоАмортизационнойПремии]
					,_Fld18830RRef [СубконтоПоАмортизационнойПремии1]
					,_Fld18831RRef [СубконтоПоАмортизационнойПремии2]
					,_Fld18832RRef [СубконтоПоАмортизационнойПремии3]
					,_Fld27258RRef [СпособОтраженияРасходовПриВключенииВСтоимость]
					From _Document411(NOLOCK)
					Where _Number = @Номер";
					Команда.Parameters.AddWithValue("Номер", Номер);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПринятиеКУчетуОС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПринятияКУчетуОсновныхСредств.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ГодоваяНормаАмортизацииБУ = Читалка.GetDecimal(4);
							Ссылка.ГодоваяНормаАмортизацииУУ = Читалка.GetDecimal(5);
							Ссылка.ДатаПриобретения = Читалка.GetDateTime(8);
							Ссылка.Комментарий = Читалка.GetString(10);
							Ссылка.КоэффициентУскоренияБУ = Читалка.GetDecimal(11);
							Ссылка.КоэффициентУскоренияУУ = Читалка.GetDecimal(12);
							Ссылка.НачислятьАмортизациюБУ = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.НачислятьАмортизациюВТекущемМесяце = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.НачислятьАмортизациюНУ = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.НачислятьАмортизациюУУ = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(28))[0]==1;
							Ссылка.ОтразитьВСоставеМПЗ = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.ПорядокВключенияСтоимостиВСоставРасходовНУ = V82.Перечисления/*Ссылка*/.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ПустаяСсылка.Получить((byte[])Читалка.GetValue(33));
							Ссылка.ПредполагаемыйОбъемПродукцииБУ = Читалка.GetDecimal(34);
							Ссылка.ПринятиеКУчетуОдновременноСВводомВЭксплуатацию = ((byte[])Читалка.GetValue(35))[0]==1;
							Ссылка.ПредполагаемыйОбъемПродукцииУУ = Читалка.GetDecimal(36);
							Ссылка.ПринятиеКУчетуОдновременноСВводомВЭксплуатациюРегл = ((byte[])Читалка.GetValue(38))[0]==1;
							Ссылка.СпециальныйКоэффициентНУ = Читалка.GetDecimal(42);
							Ссылка.СпособНачисленияАмортизацииБУ = V82.Перечисления/*Ссылка*/.СпособыНачисленияАмортизацииОС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(43));
							Ссылка.СпособНачисленияАмортизацииНУ = V82.Перечисления/*Ссылка*/.МетодыНачисленияАмортизации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(48));
							Ссылка.СпособПоступления = V82.Перечисления/*Ссылка*/.СпособыПоступленияАктивов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(49));
							Ссылка.СписыватьПриПринятииКУчету = ((byte[])Читалка.GetValue(50))[0]==1;
							Ссылка.СрокПолезногоИспользованияБУ = Читалка.GetDecimal(52);
							Ссылка.СпособНачисленияАмортизацииУУ = V82.Перечисления/*Ссылка*/.СпособыНачисленияАмортизацииОС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(53));
							Ссылка.СрокПолезногоИспользованияНУ = Читалка.GetDecimal(54);
							Ссылка.СрокПолезногоИспользованияУСН = Читалка.GetDecimal(55);
							Ссылка.СтоимостьБУ = Читалка.GetDecimal(56);
							Ссылка.СтоимостьБУХоз = Читалка.GetDecimal(57);
							Ссылка.СтоимостьНУ = Читалка.GetDecimal(58);
							Ссылка.СрокПолезногоИспользованияУУ = Читалка.GetDecimal(59);
							Ссылка.СтавкаНДС = V82.Перечисления/*Ссылка*/.СтавкиНДС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(60));
							Ссылка.Стоимость = Читалка.GetDecimal(61);
							Ссылка.СтоимостьНУХоз = Читалка.GetDecimal(62);
							Ссылка.СтоимостьПР = Читалка.GetDecimal(63);
							Ссылка.СтоимостьПРХоз = Читалка.GetDecimal(64);
							Ссылка.СтоимостьВР = Читалка.GetDecimal(65);
							Ссылка.СтоимостьВРХоз = Читалка.GetDecimal(66);
							Ссылка.СуммаНДС = Читалка.GetDecimal(67);
							Ссылка.СтоимостьУСН = Читалка.GetDecimal(68);
							Ссылка.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ = Читалка.GetDecimal(79);
							Ссылка.ПорядокВключенияСтоимостиВСоставРасходовУСН = V82.Перечисления/*Ссылка*/.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН.ПустаяСсылка.Получить((byte[])Читалка.GetValue(80));
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПринятиеКУчетуОС Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld10018RRef [ВидОперации]
					,_Fld10019 [ГодоваяНормаАмортизацииБУ]
					,_Fld10020 [ГодоваяНормаАмортизацииУУ]
					,_Fld10021RRef [ГрафикАмортизацииПоГодуБУ]
					,_Fld10022RRef [ГрафикАмортизацииПоГодуУУ]
					,_Fld10023 [ДатаПриобретения]
					,_Fld10024RRef [ИндивидуальныйГрафикАмортизации]
					,_Fld10025 [Комментарий]
					,_Fld10026 [КоэффициентУскоренияБУ]
					,_Fld10027 [КоэффициентУскоренияУУ]
					,_Fld10028RRef [МОЛБУ]
					,_Fld10029RRef [МОЛУУ]
					,_Fld10030RRef [НаправлениеСписанияПриПринятииКУчету]
					,_Fld10031 [НачислятьАмортизациюБУ]
					,_Fld10032 [НачислятьАмортизациюВТекущемМесяце]
					,_Fld10033 [НачислятьАмортизациюНУ]
					,_Fld10034 [НачислятьАмортизациюУУ]
					,_Fld10035 [НДСВключенВСтоимость]
					,_Fld10036RRef [Номенклатура]
					,_Fld10038RRef [ОбъектСтроительства]
					,_Fld10039RRef [Организация]
					,_Fld10040RRef [Ответственный]
					,_Fld10042 [ОтражатьВНалоговомУчете]
					,_Fld10041 [ОтражатьВБухгалтерскомУчете]
					,_Fld10045RRef [ПараметрВыработкиБУ]
					,_Fld10043 [ОтражатьВУправленческомУчете]
					,_Fld10044 [ОтразитьВСоставеМПЗ]
					,_Fld10048RRef [ПодразделениеОрганизации]
					,_Fld10046RRef [ПараметрВыработкиУУ]
					,_Fld10047RRef [Подразделение]
					,_Fld10094RRef [ПорядокВключенияСтоимостиВСоставРасходовНУ]
					,_Fld10050 [ПредполагаемыйОбъемПродукцииБУ]
					,_Fld10052 [ПринятиеКУчетуОдновременноСВводомВЭксплуатацию]
					,_Fld10051 [ПредполагаемыйОбъемПродукцииУУ]
					,_Fld10057RRef [Склад]
					,_Fld10053 [ПринятиеКУчетуОдновременноСВводомВЭксплуатациюРегл]
					,_Fld10063RRef [СоставОсновногоСредства]
					,_Fld10055RRef [СерияМПЗ]
					,_Fld10056RRef [СерияНоменклатуры]
					,_Fld10064 [СпециальныйКоэффициентНУ]
					,_Fld10066RRef [СпособНачисленияАмортизацииБУ]
					,_Fld10059RRef [СобытиеВводВЭксплуатацию]
					,_Fld10060RRef [СобытиеВводВЭксплуатациюРегл]
					,_Fld10061RRef [СобытиеПринятиеКУчету]
					,_Fld10062RRef [СобытиеПринятиеКУчетуРегл]
					,_Fld10067RRef [СпособНачисленияАмортизацииНУ]
					,_Fld10069RRef [СпособПоступления]
					,_Fld10065 [СписыватьПриПринятииКУчету]
					,_Fld10070RRef [СпособыОтраженияРасходовПоАмортизации]
					,_Fld10071 [СрокПолезногоИспользованияБУ]
					,_Fld10068RRef [СпособНачисленияАмортизацииУУ]
					,_Fld10072 [СрокПолезногоИспользованияНУ]
					,_Fld10073 [СрокПолезногоИспользованияУСН]
					,_Fld10077 [СтоимостьБУ]
					,_Fld10078 [СтоимостьБУХоз]
					,_Fld10079 [СтоимостьНУ]
					,_Fld10074 [СрокПолезногоИспользованияУУ]
					,_Fld10075RRef [СтавкаНДС]
					,_Fld10076 [Стоимость]
					,_Fld10080 [СтоимостьНУХоз]
					,_Fld10095 [СтоимостьПР]
					,_Fld10096 [СтоимостьПРХоз]
					,_Fld10097 [СтоимостьВР]
					,_Fld10098 [СтоимостьВРХоз]
					,_Fld10082 [СуммаНДС]
					,_Fld10081 [СтоимостьУСН]
					,_Fld10083RRef [СчетНачисленияАмортизацииБУ]
					,_Fld10084RRef [СчетНачисленияАмортизацииНУ]
					,_Fld10085RRef [СчетУчетаБУ]
					,_Fld10087RRef [СчетУчетаМПЗБУ]
					,_Fld10086RRef [СчетУчетаБУВнеоборотногоАктива]
					,_Fld10089RRef [СчетУчетаНУ]
					,_Fld10091RRef [ХарактеристикаМПЗ]
					,_Fld10092RRef [ХарактеристикаНоменклатуры]
					,_Fld10093RRef [ШифрПоЕНАОФ]
					,_Fld10090RRef [СчетУчетаНУВнеоборотногоАктива]
					,_Fld10054 [ПроцентКапитальныхВложенийВключаемыхВРасходыНУ]
					,_Fld10049RRef [ПорядокВключенияСтоимостиВСоставРасходовУСН]
					,_Fld10037RRef [НоменклатураМПЗ]
					,_Fld10058RRef [СкладМПЗ]
					,_Fld18829RRef [СчетУчетаЗатратПоАмортизационнойПремии]
					,_Fld18830RRef [СубконтоПоАмортизационнойПремии1]
					,_Fld18831RRef [СубконтоПоАмортизационнойПремии2]
					,_Fld18832RRef [СубконтоПоАмортизационнойПремии3]
					,_Fld27258RRef [СпособОтраженияРасходовПриВключенииВСтоимость]
					From _Document411(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ПринятиеКУчетуОС();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПринятиеКУчетуОС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПринятияКУчетуОсновныхСредств.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ГодоваяНормаАмортизацииБУ = Читалка.GetDecimal(4);
							Ссылка.ГодоваяНормаАмортизацииУУ = Читалка.GetDecimal(5);
							Ссылка.ДатаПриобретения = Читалка.GetDateTime(8);
							Ссылка.Комментарий = Читалка.GetString(10);
							Ссылка.КоэффициентУскоренияБУ = Читалка.GetDecimal(11);
							Ссылка.КоэффициентУскоренияУУ = Читалка.GetDecimal(12);
							Ссылка.НачислятьАмортизациюБУ = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.НачислятьАмортизациюВТекущемМесяце = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.НачислятьАмортизациюНУ = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.НачислятьАмортизациюУУ = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(28))[0]==1;
							Ссылка.ОтразитьВСоставеМПЗ = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.ПорядокВключенияСтоимостиВСоставРасходовНУ = V82.Перечисления/*Ссылка*/.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ПустаяСсылка.Получить((byte[])Читалка.GetValue(33));
							Ссылка.ПредполагаемыйОбъемПродукцииБУ = Читалка.GetDecimal(34);
							Ссылка.ПринятиеКУчетуОдновременноСВводомВЭксплуатацию = ((byte[])Читалка.GetValue(35))[0]==1;
							Ссылка.ПредполагаемыйОбъемПродукцииУУ = Читалка.GetDecimal(36);
							Ссылка.ПринятиеКУчетуОдновременноСВводомВЭксплуатациюРегл = ((byte[])Читалка.GetValue(38))[0]==1;
							Ссылка.СпециальныйКоэффициентНУ = Читалка.GetDecimal(42);
							Ссылка.СпособНачисленияАмортизацииБУ = V82.Перечисления/*Ссылка*/.СпособыНачисленияАмортизацииОС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(43));
							Ссылка.СпособНачисленияАмортизацииНУ = V82.Перечисления/*Ссылка*/.МетодыНачисленияАмортизации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(48));
							Ссылка.СпособПоступления = V82.Перечисления/*Ссылка*/.СпособыПоступленияАктивов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(49));
							Ссылка.СписыватьПриПринятииКУчету = ((byte[])Читалка.GetValue(50))[0]==1;
							Ссылка.СрокПолезногоИспользованияБУ = Читалка.GetDecimal(52);
							Ссылка.СпособНачисленияАмортизацииУУ = V82.Перечисления/*Ссылка*/.СпособыНачисленияАмортизацииОС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(53));
							Ссылка.СрокПолезногоИспользованияНУ = Читалка.GetDecimal(54);
							Ссылка.СрокПолезногоИспользованияУСН = Читалка.GetDecimal(55);
							Ссылка.СтоимостьБУ = Читалка.GetDecimal(56);
							Ссылка.СтоимостьБУХоз = Читалка.GetDecimal(57);
							Ссылка.СтоимостьНУ = Читалка.GetDecimal(58);
							Ссылка.СрокПолезногоИспользованияУУ = Читалка.GetDecimal(59);
							Ссылка.СтавкаНДС = V82.Перечисления/*Ссылка*/.СтавкиНДС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(60));
							Ссылка.Стоимость = Читалка.GetDecimal(61);
							Ссылка.СтоимостьНУХоз = Читалка.GetDecimal(62);
							Ссылка.СтоимостьПР = Читалка.GetDecimal(63);
							Ссылка.СтоимостьПРХоз = Читалка.GetDecimal(64);
							Ссылка.СтоимостьВР = Читалка.GetDecimal(65);
							Ссылка.СтоимостьВРХоз = Читалка.GetDecimal(66);
							Ссылка.СуммаНДС = Читалка.GetDecimal(67);
							Ссылка.СтоимостьУСН = Читалка.GetDecimal(68);
							Ссылка.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ = Читалка.GetDecimal(79);
							Ссылка.ПорядокВключенияСтоимостиВСоставРасходовУСН = V82.Перечисления/*Ссылка*/.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН.ПустаяСсылка.Получить((byte[])Читалка.GetValue(80));
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПринятиеКУчетуОС ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld10018RRef [ВидОперации]
					,_Fld10019 [ГодоваяНормаАмортизацииБУ]
					,_Fld10020 [ГодоваяНормаАмортизацииУУ]
					,_Fld10021RRef [ГрафикАмортизацииПоГодуБУ]
					,_Fld10022RRef [ГрафикАмортизацииПоГодуУУ]
					,_Fld10023 [ДатаПриобретения]
					,_Fld10024RRef [ИндивидуальныйГрафикАмортизации]
					,_Fld10025 [Комментарий]
					,_Fld10026 [КоэффициентУскоренияБУ]
					,_Fld10027 [КоэффициентУскоренияУУ]
					,_Fld10028RRef [МОЛБУ]
					,_Fld10029RRef [МОЛУУ]
					,_Fld10030RRef [НаправлениеСписанияПриПринятииКУчету]
					,_Fld10031 [НачислятьАмортизациюБУ]
					,_Fld10032 [НачислятьАмортизациюВТекущемМесяце]
					,_Fld10033 [НачислятьАмортизациюНУ]
					,_Fld10034 [НачислятьАмортизациюУУ]
					,_Fld10035 [НДСВключенВСтоимость]
					,_Fld10036RRef [Номенклатура]
					,_Fld10038RRef [ОбъектСтроительства]
					,_Fld10039RRef [Организация]
					,_Fld10040RRef [Ответственный]
					,_Fld10042 [ОтражатьВНалоговомУчете]
					,_Fld10041 [ОтражатьВБухгалтерскомУчете]
					,_Fld10045RRef [ПараметрВыработкиБУ]
					,_Fld10043 [ОтражатьВУправленческомУчете]
					,_Fld10044 [ОтразитьВСоставеМПЗ]
					,_Fld10048RRef [ПодразделениеОрганизации]
					,_Fld10046RRef [ПараметрВыработкиУУ]
					,_Fld10047RRef [Подразделение]
					,_Fld10094RRef [ПорядокВключенияСтоимостиВСоставРасходовНУ]
					,_Fld10050 [ПредполагаемыйОбъемПродукцииБУ]
					,_Fld10052 [ПринятиеКУчетуОдновременноСВводомВЭксплуатацию]
					,_Fld10051 [ПредполагаемыйОбъемПродукцииУУ]
					,_Fld10057RRef [Склад]
					,_Fld10053 [ПринятиеКУчетуОдновременноСВводомВЭксплуатациюРегл]
					,_Fld10063RRef [СоставОсновногоСредства]
					,_Fld10055RRef [СерияМПЗ]
					,_Fld10056RRef [СерияНоменклатуры]
					,_Fld10064 [СпециальныйКоэффициентНУ]
					,_Fld10066RRef [СпособНачисленияАмортизацииБУ]
					,_Fld10059RRef [СобытиеВводВЭксплуатацию]
					,_Fld10060RRef [СобытиеВводВЭксплуатациюРегл]
					,_Fld10061RRef [СобытиеПринятиеКУчету]
					,_Fld10062RRef [СобытиеПринятиеКУчетуРегл]
					,_Fld10067RRef [СпособНачисленияАмортизацииНУ]
					,_Fld10069RRef [СпособПоступления]
					,_Fld10065 [СписыватьПриПринятииКУчету]
					,_Fld10070RRef [СпособыОтраженияРасходовПоАмортизации]
					,_Fld10071 [СрокПолезногоИспользованияБУ]
					,_Fld10068RRef [СпособНачисленияАмортизацииУУ]
					,_Fld10072 [СрокПолезногоИспользованияНУ]
					,_Fld10073 [СрокПолезногоИспользованияУСН]
					,_Fld10077 [СтоимостьБУ]
					,_Fld10078 [СтоимостьБУХоз]
					,_Fld10079 [СтоимостьНУ]
					,_Fld10074 [СрокПолезногоИспользованияУУ]
					,_Fld10075RRef [СтавкаНДС]
					,_Fld10076 [Стоимость]
					,_Fld10080 [СтоимостьНУХоз]
					,_Fld10095 [СтоимостьПР]
					,_Fld10096 [СтоимостьПРХоз]
					,_Fld10097 [СтоимостьВР]
					,_Fld10098 [СтоимостьВРХоз]
					,_Fld10082 [СуммаНДС]
					,_Fld10081 [СтоимостьУСН]
					,_Fld10083RRef [СчетНачисленияАмортизацииБУ]
					,_Fld10084RRef [СчетНачисленияАмортизацииНУ]
					,_Fld10085RRef [СчетУчетаБУ]
					,_Fld10087RRef [СчетУчетаМПЗБУ]
					,_Fld10086RRef [СчетУчетаБУВнеоборотногоАктива]
					,_Fld10089RRef [СчетУчетаНУ]
					,_Fld10091RRef [ХарактеристикаМПЗ]
					,_Fld10092RRef [ХарактеристикаНоменклатуры]
					,_Fld10093RRef [ШифрПоЕНАОФ]
					,_Fld10090RRef [СчетУчетаНУВнеоборотногоАктива]
					,_Fld10054 [ПроцентКапитальныхВложенийВключаемыхВРасходыНУ]
					,_Fld10049RRef [ПорядокВключенияСтоимостиВСоставРасходовУСН]
					,_Fld10037RRef [НоменклатураМПЗ]
					,_Fld10058RRef [СкладМПЗ]
					,_Fld18829RRef [СчетУчетаЗатратПоАмортизационнойПремии]
					,_Fld18830RRef [СубконтоПоАмортизационнойПремии1]
					,_Fld18831RRef [СубконтоПоАмортизационнойПремии2]
					,_Fld18832RRef [СубконтоПоАмортизационнойПремии3]
					,_Fld27258RRef [СпособОтраженияРасходовПриВключенииВСтоимость]
					From _Document411(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ПринятиеКУчетуОС();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПринятиеКУчетуОС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПринятияКУчетуОсновныхСредств.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ГодоваяНормаАмортизацииБУ = Читалка.GetDecimal(4);
							Ссылка.ГодоваяНормаАмортизацииУУ = Читалка.GetDecimal(5);
							Ссылка.ДатаПриобретения = Читалка.GetDateTime(8);
							Ссылка.Комментарий = Читалка.GetString(10);
							Ссылка.КоэффициентУскоренияБУ = Читалка.GetDecimal(11);
							Ссылка.КоэффициентУскоренияУУ = Читалка.GetDecimal(12);
							Ссылка.НачислятьАмортизациюБУ = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.НачислятьАмортизациюВТекущемМесяце = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.НачислятьАмортизациюНУ = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.НачислятьАмортизациюУУ = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(28))[0]==1;
							Ссылка.ОтразитьВСоставеМПЗ = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.ПорядокВключенияСтоимостиВСоставРасходовНУ = V82.Перечисления/*Ссылка*/.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ПустаяСсылка.Получить((byte[])Читалка.GetValue(33));
							Ссылка.ПредполагаемыйОбъемПродукцииБУ = Читалка.GetDecimal(34);
							Ссылка.ПринятиеКУчетуОдновременноСВводомВЭксплуатацию = ((byte[])Читалка.GetValue(35))[0]==1;
							Ссылка.ПредполагаемыйОбъемПродукцииУУ = Читалка.GetDecimal(36);
							Ссылка.ПринятиеКУчетуОдновременноСВводомВЭксплуатациюРегл = ((byte[])Читалка.GetValue(38))[0]==1;
							Ссылка.СпециальныйКоэффициентНУ = Читалка.GetDecimal(42);
							Ссылка.СпособНачисленияАмортизацииБУ = V82.Перечисления/*Ссылка*/.СпособыНачисленияАмортизацииОС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(43));
							Ссылка.СпособНачисленияАмортизацииНУ = V82.Перечисления/*Ссылка*/.МетодыНачисленияАмортизации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(48));
							Ссылка.СпособПоступления = V82.Перечисления/*Ссылка*/.СпособыПоступленияАктивов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(49));
							Ссылка.СписыватьПриПринятииКУчету = ((byte[])Читалка.GetValue(50))[0]==1;
							Ссылка.СрокПолезногоИспользованияБУ = Читалка.GetDecimal(52);
							Ссылка.СпособНачисленияАмортизацииУУ = V82.Перечисления/*Ссылка*/.СпособыНачисленияАмортизацииОС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(53));
							Ссылка.СрокПолезногоИспользованияНУ = Читалка.GetDecimal(54);
							Ссылка.СрокПолезногоИспользованияУСН = Читалка.GetDecimal(55);
							Ссылка.СтоимостьБУ = Читалка.GetDecimal(56);
							Ссылка.СтоимостьБУХоз = Читалка.GetDecimal(57);
							Ссылка.СтоимостьНУ = Читалка.GetDecimal(58);
							Ссылка.СрокПолезногоИспользованияУУ = Читалка.GetDecimal(59);
							Ссылка.СтавкаНДС = V82.Перечисления/*Ссылка*/.СтавкиНДС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(60));
							Ссылка.Стоимость = Читалка.GetDecimal(61);
							Ссылка.СтоимостьНУХоз = Читалка.GetDecimal(62);
							Ссылка.СтоимостьПР = Читалка.GetDecimal(63);
							Ссылка.СтоимостьПРХоз = Читалка.GetDecimal(64);
							Ссылка.СтоимостьВР = Читалка.GetDecimal(65);
							Ссылка.СтоимостьВРХоз = Читалка.GetDecimal(66);
							Ссылка.СуммаНДС = Читалка.GetDecimal(67);
							Ссылка.СтоимостьУСН = Читалка.GetDecimal(68);
							Ссылка.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ = Читалка.GetDecimal(79);
							Ссылка.ПорядокВключенияСтоимостиВСоставРасходовУСН = V82.Перечисления/*Ссылка*/.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН.ПустаяСсылка.Получить((byte[])Читалка.GetValue(80));
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПринятиеКУчетуОС ВыбратьПоНомеру(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld10018RRef [ВидОперации]
					,_Fld10019 [ГодоваяНормаАмортизацииБУ]
					,_Fld10020 [ГодоваяНормаАмортизацииУУ]
					,_Fld10021RRef [ГрафикАмортизацииПоГодуБУ]
					,_Fld10022RRef [ГрафикАмортизацииПоГодуУУ]
					,_Fld10023 [ДатаПриобретения]
					,_Fld10024RRef [ИндивидуальныйГрафикАмортизации]
					,_Fld10025 [Комментарий]
					,_Fld10026 [КоэффициентУскоренияБУ]
					,_Fld10027 [КоэффициентУскоренияУУ]
					,_Fld10028RRef [МОЛБУ]
					,_Fld10029RRef [МОЛУУ]
					,_Fld10030RRef [НаправлениеСписанияПриПринятииКУчету]
					,_Fld10031 [НачислятьАмортизациюБУ]
					,_Fld10032 [НачислятьАмортизациюВТекущемМесяце]
					,_Fld10033 [НачислятьАмортизациюНУ]
					,_Fld10034 [НачислятьАмортизациюУУ]
					,_Fld10035 [НДСВключенВСтоимость]
					,_Fld10036RRef [Номенклатура]
					,_Fld10038RRef [ОбъектСтроительства]
					,_Fld10039RRef [Организация]
					,_Fld10040RRef [Ответственный]
					,_Fld10042 [ОтражатьВНалоговомУчете]
					,_Fld10041 [ОтражатьВБухгалтерскомУчете]
					,_Fld10045RRef [ПараметрВыработкиБУ]
					,_Fld10043 [ОтражатьВУправленческомУчете]
					,_Fld10044 [ОтразитьВСоставеМПЗ]
					,_Fld10048RRef [ПодразделениеОрганизации]
					,_Fld10046RRef [ПараметрВыработкиУУ]
					,_Fld10047RRef [Подразделение]
					,_Fld10094RRef [ПорядокВключенияСтоимостиВСоставРасходовНУ]
					,_Fld10050 [ПредполагаемыйОбъемПродукцииБУ]
					,_Fld10052 [ПринятиеКУчетуОдновременноСВводомВЭксплуатацию]
					,_Fld10051 [ПредполагаемыйОбъемПродукцииУУ]
					,_Fld10057RRef [Склад]
					,_Fld10053 [ПринятиеКУчетуОдновременноСВводомВЭксплуатациюРегл]
					,_Fld10063RRef [СоставОсновногоСредства]
					,_Fld10055RRef [СерияМПЗ]
					,_Fld10056RRef [СерияНоменклатуры]
					,_Fld10064 [СпециальныйКоэффициентНУ]
					,_Fld10066RRef [СпособНачисленияАмортизацииБУ]
					,_Fld10059RRef [СобытиеВводВЭксплуатацию]
					,_Fld10060RRef [СобытиеВводВЭксплуатациюРегл]
					,_Fld10061RRef [СобытиеПринятиеКУчету]
					,_Fld10062RRef [СобытиеПринятиеКУчетуРегл]
					,_Fld10067RRef [СпособНачисленияАмортизацииНУ]
					,_Fld10069RRef [СпособПоступления]
					,_Fld10065 [СписыватьПриПринятииКУчету]
					,_Fld10070RRef [СпособыОтраженияРасходовПоАмортизации]
					,_Fld10071 [СрокПолезногоИспользованияБУ]
					,_Fld10068RRef [СпособНачисленияАмортизацииУУ]
					,_Fld10072 [СрокПолезногоИспользованияНУ]
					,_Fld10073 [СрокПолезногоИспользованияУСН]
					,_Fld10077 [СтоимостьБУ]
					,_Fld10078 [СтоимостьБУХоз]
					,_Fld10079 [СтоимостьНУ]
					,_Fld10074 [СрокПолезногоИспользованияУУ]
					,_Fld10075RRef [СтавкаНДС]
					,_Fld10076 [Стоимость]
					,_Fld10080 [СтоимостьНУХоз]
					,_Fld10095 [СтоимостьПР]
					,_Fld10096 [СтоимостьПРХоз]
					,_Fld10097 [СтоимостьВР]
					,_Fld10098 [СтоимостьВРХоз]
					,_Fld10082 [СуммаНДС]
					,_Fld10081 [СтоимостьУСН]
					,_Fld10083RRef [СчетНачисленияАмортизацииБУ]
					,_Fld10084RRef [СчетНачисленияАмортизацииНУ]
					,_Fld10085RRef [СчетУчетаБУ]
					,_Fld10087RRef [СчетУчетаМПЗБУ]
					,_Fld10086RRef [СчетУчетаБУВнеоборотногоАктива]
					,_Fld10089RRef [СчетУчетаНУ]
					,_Fld10091RRef [ХарактеристикаМПЗ]
					,_Fld10092RRef [ХарактеристикаНоменклатуры]
					,_Fld10093RRef [ШифрПоЕНАОФ]
					,_Fld10090RRef [СчетУчетаНУВнеоборотногоАктива]
					,_Fld10054 [ПроцентКапитальныхВложенийВключаемыхВРасходыНУ]
					,_Fld10049RRef [ПорядокВключенияСтоимостиВСоставРасходовУСН]
					,_Fld10037RRef [НоменклатураМПЗ]
					,_Fld10058RRef [СкладМПЗ]
					,_Fld18829RRef [СчетУчетаЗатратПоАмортизационнойПремии]
					,_Fld18830RRef [СубконтоПоАмортизационнойПремии1]
					,_Fld18831RRef [СубконтоПоАмортизационнойПремии2]
					,_Fld18832RRef [СубконтоПоАмортизационнойПремии3]
					,_Fld27258RRef [СпособОтраженияРасходовПриВключенииВСтоимость]
					From _Document411(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ПринятиеКУчетуОС();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПринятиеКУчетуОС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПринятияКУчетуОсновныхСредств.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ГодоваяНормаАмортизацииБУ = Читалка.GetDecimal(4);
							Ссылка.ГодоваяНормаАмортизацииУУ = Читалка.GetDecimal(5);
							Ссылка.ДатаПриобретения = Читалка.GetDateTime(8);
							Ссылка.Комментарий = Читалка.GetString(10);
							Ссылка.КоэффициентУскоренияБУ = Читалка.GetDecimal(11);
							Ссылка.КоэффициентУскоренияУУ = Читалка.GetDecimal(12);
							Ссылка.НачислятьАмортизациюБУ = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.НачислятьАмортизациюВТекущемМесяце = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.НачислятьАмортизациюНУ = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.НачислятьАмортизациюУУ = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(28))[0]==1;
							Ссылка.ОтразитьВСоставеМПЗ = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.ПорядокВключенияСтоимостиВСоставРасходовНУ = V82.Перечисления/*Ссылка*/.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ПустаяСсылка.Получить((byte[])Читалка.GetValue(33));
							Ссылка.ПредполагаемыйОбъемПродукцииБУ = Читалка.GetDecimal(34);
							Ссылка.ПринятиеКУчетуОдновременноСВводомВЭксплуатацию = ((byte[])Читалка.GetValue(35))[0]==1;
							Ссылка.ПредполагаемыйОбъемПродукцииУУ = Читалка.GetDecimal(36);
							Ссылка.ПринятиеКУчетуОдновременноСВводомВЭксплуатациюРегл = ((byte[])Читалка.GetValue(38))[0]==1;
							Ссылка.СпециальныйКоэффициентНУ = Читалка.GetDecimal(42);
							Ссылка.СпособНачисленияАмортизацииБУ = V82.Перечисления/*Ссылка*/.СпособыНачисленияАмортизацииОС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(43));
							Ссылка.СпособНачисленияАмортизацииНУ = V82.Перечисления/*Ссылка*/.МетодыНачисленияАмортизации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(48));
							Ссылка.СпособПоступления = V82.Перечисления/*Ссылка*/.СпособыПоступленияАктивов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(49));
							Ссылка.СписыватьПриПринятииКУчету = ((byte[])Читалка.GetValue(50))[0]==1;
							Ссылка.СрокПолезногоИспользованияБУ = Читалка.GetDecimal(52);
							Ссылка.СпособНачисленияАмортизацииУУ = V82.Перечисления/*Ссылка*/.СпособыНачисленияАмортизацииОС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(53));
							Ссылка.СрокПолезногоИспользованияНУ = Читалка.GetDecimal(54);
							Ссылка.СрокПолезногоИспользованияУСН = Читалка.GetDecimal(55);
							Ссылка.СтоимостьБУ = Читалка.GetDecimal(56);
							Ссылка.СтоимостьБУХоз = Читалка.GetDecimal(57);
							Ссылка.СтоимостьНУ = Читалка.GetDecimal(58);
							Ссылка.СрокПолезногоИспользованияУУ = Читалка.GetDecimal(59);
							Ссылка.СтавкаНДС = V82.Перечисления/*Ссылка*/.СтавкиНДС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(60));
							Ссылка.Стоимость = Читалка.GetDecimal(61);
							Ссылка.СтоимостьНУХоз = Читалка.GetDecimal(62);
							Ссылка.СтоимостьПР = Читалка.GetDecimal(63);
							Ссылка.СтоимостьПРХоз = Читалка.GetDecimal(64);
							Ссылка.СтоимостьВР = Читалка.GetDecimal(65);
							Ссылка.СтоимостьВРХоз = Читалка.GetDecimal(66);
							Ссылка.СуммаНДС = Читалка.GetDecimal(67);
							Ссылка.СтоимостьУСН = Читалка.GetDecimal(68);
							Ссылка.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ = Читалка.GetDecimal(79);
							Ссылка.ПорядокВключенияСтоимостиВСоставРасходовУСН = V82.Перечисления/*Ссылка*/.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН.ПустаяСсылка.Получить((byte[])Читалка.GetValue(80));
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПринятиеКУчетуОС СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld10018RRef [ВидОперации]
					,_Fld10019 [ГодоваяНормаАмортизацииБУ]
					,_Fld10020 [ГодоваяНормаАмортизацииУУ]
					,_Fld10021RRef [ГрафикАмортизацииПоГодуБУ]
					,_Fld10022RRef [ГрафикАмортизацииПоГодуУУ]
					,_Fld10023 [ДатаПриобретения]
					,_Fld10024RRef [ИндивидуальныйГрафикАмортизации]
					,_Fld10025 [Комментарий]
					,_Fld10026 [КоэффициентУскоренияБУ]
					,_Fld10027 [КоэффициентУскоренияУУ]
					,_Fld10028RRef [МОЛБУ]
					,_Fld10029RRef [МОЛУУ]
					,_Fld10030RRef [НаправлениеСписанияПриПринятииКУчету]
					,_Fld10031 [НачислятьАмортизациюБУ]
					,_Fld10032 [НачислятьАмортизациюВТекущемМесяце]
					,_Fld10033 [НачислятьАмортизациюНУ]
					,_Fld10034 [НачислятьАмортизациюУУ]
					,_Fld10035 [НДСВключенВСтоимость]
					,_Fld10036RRef [Номенклатура]
					,_Fld10038RRef [ОбъектСтроительства]
					,_Fld10039RRef [Организация]
					,_Fld10040RRef [Ответственный]
					,_Fld10042 [ОтражатьВНалоговомУчете]
					,_Fld10041 [ОтражатьВБухгалтерскомУчете]
					,_Fld10045RRef [ПараметрВыработкиБУ]
					,_Fld10043 [ОтражатьВУправленческомУчете]
					,_Fld10044 [ОтразитьВСоставеМПЗ]
					,_Fld10048RRef [ПодразделениеОрганизации]
					,_Fld10046RRef [ПараметрВыработкиУУ]
					,_Fld10047RRef [Подразделение]
					,_Fld10094RRef [ПорядокВключенияСтоимостиВСоставРасходовНУ]
					,_Fld10050 [ПредполагаемыйОбъемПродукцииБУ]
					,_Fld10052 [ПринятиеКУчетуОдновременноСВводомВЭксплуатацию]
					,_Fld10051 [ПредполагаемыйОбъемПродукцииУУ]
					,_Fld10057RRef [Склад]
					,_Fld10053 [ПринятиеКУчетуОдновременноСВводомВЭксплуатациюРегл]
					,_Fld10063RRef [СоставОсновногоСредства]
					,_Fld10055RRef [СерияМПЗ]
					,_Fld10056RRef [СерияНоменклатуры]
					,_Fld10064 [СпециальныйКоэффициентНУ]
					,_Fld10066RRef [СпособНачисленияАмортизацииБУ]
					,_Fld10059RRef [СобытиеВводВЭксплуатацию]
					,_Fld10060RRef [СобытиеВводВЭксплуатациюРегл]
					,_Fld10061RRef [СобытиеПринятиеКУчету]
					,_Fld10062RRef [СобытиеПринятиеКУчетуРегл]
					,_Fld10067RRef [СпособНачисленияАмортизацииНУ]
					,_Fld10069RRef [СпособПоступления]
					,_Fld10065 [СписыватьПриПринятииКУчету]
					,_Fld10070RRef [СпособыОтраженияРасходовПоАмортизации]
					,_Fld10071 [СрокПолезногоИспользованияБУ]
					,_Fld10068RRef [СпособНачисленияАмортизацииУУ]
					,_Fld10072 [СрокПолезногоИспользованияНУ]
					,_Fld10073 [СрокПолезногоИспользованияУСН]
					,_Fld10077 [СтоимостьБУ]
					,_Fld10078 [СтоимостьБУХоз]
					,_Fld10079 [СтоимостьНУ]
					,_Fld10074 [СрокПолезногоИспользованияУУ]
					,_Fld10075RRef [СтавкаНДС]
					,_Fld10076 [Стоимость]
					,_Fld10080 [СтоимостьНУХоз]
					,_Fld10095 [СтоимостьПР]
					,_Fld10096 [СтоимостьПРХоз]
					,_Fld10097 [СтоимостьВР]
					,_Fld10098 [СтоимостьВРХоз]
					,_Fld10082 [СуммаНДС]
					,_Fld10081 [СтоимостьУСН]
					,_Fld10083RRef [СчетНачисленияАмортизацииБУ]
					,_Fld10084RRef [СчетНачисленияАмортизацииНУ]
					,_Fld10085RRef [СчетУчетаБУ]
					,_Fld10087RRef [СчетУчетаМПЗБУ]
					,_Fld10086RRef [СчетУчетаБУВнеоборотногоАктива]
					,_Fld10089RRef [СчетУчетаНУ]
					,_Fld10091RRef [ХарактеристикаМПЗ]
					,_Fld10092RRef [ХарактеристикаНоменклатуры]
					,_Fld10093RRef [ШифрПоЕНАОФ]
					,_Fld10090RRef [СчетУчетаНУВнеоборотногоАктива]
					,_Fld10054 [ПроцентКапитальныхВложенийВключаемыхВРасходыНУ]
					,_Fld10049RRef [ПорядокВключенияСтоимостиВСоставРасходовУСН]
					,_Fld10037RRef [НоменклатураМПЗ]
					,_Fld10058RRef [СкладМПЗ]
					,_Fld18829RRef [СчетУчетаЗатратПоАмортизационнойПремии]
					,_Fld18830RRef [СубконтоПоАмортизационнойПремии1]
					,_Fld18831RRef [СубконтоПоАмортизационнойПремии2]
					,_Fld18832RRef [СубконтоПоАмортизационнойПремии3]
					,_Fld27258RRef [СпособОтраженияРасходовПриВключенииВСтоимость]
					From _Document411(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ПринятиеКУчетуОС();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПринятиеКУчетуОС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПринятияКУчетуОсновныхСредств.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ГодоваяНормаАмортизацииБУ = Читалка.GetDecimal(4);
							Ссылка.ГодоваяНормаАмортизацииУУ = Читалка.GetDecimal(5);
							Ссылка.ДатаПриобретения = Читалка.GetDateTime(8);
							Ссылка.Комментарий = Читалка.GetString(10);
							Ссылка.КоэффициентУскоренияБУ = Читалка.GetDecimal(11);
							Ссылка.КоэффициентУскоренияУУ = Читалка.GetDecimal(12);
							Ссылка.НачислятьАмортизациюБУ = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.НачислятьАмортизациюВТекущемМесяце = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.НачислятьАмортизациюНУ = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.НачислятьАмортизациюУУ = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(28))[0]==1;
							Ссылка.ОтразитьВСоставеМПЗ = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.ПорядокВключенияСтоимостиВСоставРасходовНУ = V82.Перечисления/*Ссылка*/.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ПустаяСсылка.Получить((byte[])Читалка.GetValue(33));
							Ссылка.ПредполагаемыйОбъемПродукцииБУ = Читалка.GetDecimal(34);
							Ссылка.ПринятиеКУчетуОдновременноСВводомВЭксплуатацию = ((byte[])Читалка.GetValue(35))[0]==1;
							Ссылка.ПредполагаемыйОбъемПродукцииУУ = Читалка.GetDecimal(36);
							Ссылка.ПринятиеКУчетуОдновременноСВводомВЭксплуатациюРегл = ((byte[])Читалка.GetValue(38))[0]==1;
							Ссылка.СпециальныйКоэффициентНУ = Читалка.GetDecimal(42);
							Ссылка.СпособНачисленияАмортизацииБУ = V82.Перечисления/*Ссылка*/.СпособыНачисленияАмортизацииОС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(43));
							Ссылка.СпособНачисленияАмортизацииНУ = V82.Перечисления/*Ссылка*/.МетодыНачисленияАмортизации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(48));
							Ссылка.СпособПоступления = V82.Перечисления/*Ссылка*/.СпособыПоступленияАктивов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(49));
							Ссылка.СписыватьПриПринятииКУчету = ((byte[])Читалка.GetValue(50))[0]==1;
							Ссылка.СрокПолезногоИспользованияБУ = Читалка.GetDecimal(52);
							Ссылка.СпособНачисленияАмортизацииУУ = V82.Перечисления/*Ссылка*/.СпособыНачисленияАмортизацииОС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(53));
							Ссылка.СрокПолезногоИспользованияНУ = Читалка.GetDecimal(54);
							Ссылка.СрокПолезногоИспользованияУСН = Читалка.GetDecimal(55);
							Ссылка.СтоимостьБУ = Читалка.GetDecimal(56);
							Ссылка.СтоимостьБУХоз = Читалка.GetDecimal(57);
							Ссылка.СтоимостьНУ = Читалка.GetDecimal(58);
							Ссылка.СрокПолезногоИспользованияУУ = Читалка.GetDecimal(59);
							Ссылка.СтавкаНДС = V82.Перечисления/*Ссылка*/.СтавкиНДС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(60));
							Ссылка.Стоимость = Читалка.GetDecimal(61);
							Ссылка.СтоимостьНУХоз = Читалка.GetDecimal(62);
							Ссылка.СтоимостьПР = Читалка.GetDecimal(63);
							Ссылка.СтоимостьПРХоз = Читалка.GetDecimal(64);
							Ссылка.СтоимостьВР = Читалка.GetDecimal(65);
							Ссылка.СтоимостьВРХоз = Читалка.GetDecimal(66);
							Ссылка.СуммаНДС = Читалка.GetDecimal(67);
							Ссылка.СтоимостьУСН = Читалка.GetDecimal(68);
							Ссылка.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ = Читалка.GetDecimal(79);
							Ссылка.ПорядокВключенияСтоимостиВСоставРасходовУСН = V82.Перечисления/*Ссылка*/.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН.ПустаяСсылка.Получить((byte[])Читалка.GetValue(80));
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПринятиеКУчетуОС СтраницаПоНомеру(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld10018RRef [ВидОперации]
					,_Fld10019 [ГодоваяНормаАмортизацииБУ]
					,_Fld10020 [ГодоваяНормаАмортизацииУУ]
					,_Fld10021RRef [ГрафикАмортизацииПоГодуБУ]
					,_Fld10022RRef [ГрафикАмортизацииПоГодуУУ]
					,_Fld10023 [ДатаПриобретения]
					,_Fld10024RRef [ИндивидуальныйГрафикАмортизации]
					,_Fld10025 [Комментарий]
					,_Fld10026 [КоэффициентУскоренияБУ]
					,_Fld10027 [КоэффициентУскоренияУУ]
					,_Fld10028RRef [МОЛБУ]
					,_Fld10029RRef [МОЛУУ]
					,_Fld10030RRef [НаправлениеСписанияПриПринятииКУчету]
					,_Fld10031 [НачислятьАмортизациюБУ]
					,_Fld10032 [НачислятьАмортизациюВТекущемМесяце]
					,_Fld10033 [НачислятьАмортизациюНУ]
					,_Fld10034 [НачислятьАмортизациюУУ]
					,_Fld10035 [НДСВключенВСтоимость]
					,_Fld10036RRef [Номенклатура]
					,_Fld10038RRef [ОбъектСтроительства]
					,_Fld10039RRef [Организация]
					,_Fld10040RRef [Ответственный]
					,_Fld10042 [ОтражатьВНалоговомУчете]
					,_Fld10041 [ОтражатьВБухгалтерскомУчете]
					,_Fld10045RRef [ПараметрВыработкиБУ]
					,_Fld10043 [ОтражатьВУправленческомУчете]
					,_Fld10044 [ОтразитьВСоставеМПЗ]
					,_Fld10048RRef [ПодразделениеОрганизации]
					,_Fld10046RRef [ПараметрВыработкиУУ]
					,_Fld10047RRef [Подразделение]
					,_Fld10094RRef [ПорядокВключенияСтоимостиВСоставРасходовНУ]
					,_Fld10050 [ПредполагаемыйОбъемПродукцииБУ]
					,_Fld10052 [ПринятиеКУчетуОдновременноСВводомВЭксплуатацию]
					,_Fld10051 [ПредполагаемыйОбъемПродукцииУУ]
					,_Fld10057RRef [Склад]
					,_Fld10053 [ПринятиеКУчетуОдновременноСВводомВЭксплуатациюРегл]
					,_Fld10063RRef [СоставОсновногоСредства]
					,_Fld10055RRef [СерияМПЗ]
					,_Fld10056RRef [СерияНоменклатуры]
					,_Fld10064 [СпециальныйКоэффициентНУ]
					,_Fld10066RRef [СпособНачисленияАмортизацииБУ]
					,_Fld10059RRef [СобытиеВводВЭксплуатацию]
					,_Fld10060RRef [СобытиеВводВЭксплуатациюРегл]
					,_Fld10061RRef [СобытиеПринятиеКУчету]
					,_Fld10062RRef [СобытиеПринятиеКУчетуРегл]
					,_Fld10067RRef [СпособНачисленияАмортизацииНУ]
					,_Fld10069RRef [СпособПоступления]
					,_Fld10065 [СписыватьПриПринятииКУчету]
					,_Fld10070RRef [СпособыОтраженияРасходовПоАмортизации]
					,_Fld10071 [СрокПолезногоИспользованияБУ]
					,_Fld10068RRef [СпособНачисленияАмортизацииУУ]
					,_Fld10072 [СрокПолезногоИспользованияНУ]
					,_Fld10073 [СрокПолезногоИспользованияУСН]
					,_Fld10077 [СтоимостьБУ]
					,_Fld10078 [СтоимостьБУХоз]
					,_Fld10079 [СтоимостьНУ]
					,_Fld10074 [СрокПолезногоИспользованияУУ]
					,_Fld10075RRef [СтавкаНДС]
					,_Fld10076 [Стоимость]
					,_Fld10080 [СтоимостьНУХоз]
					,_Fld10095 [СтоимостьПР]
					,_Fld10096 [СтоимостьПРХоз]
					,_Fld10097 [СтоимостьВР]
					,_Fld10098 [СтоимостьВРХоз]
					,_Fld10082 [СуммаНДС]
					,_Fld10081 [СтоимостьУСН]
					,_Fld10083RRef [СчетНачисленияАмортизацииБУ]
					,_Fld10084RRef [СчетНачисленияАмортизацииНУ]
					,_Fld10085RRef [СчетУчетаБУ]
					,_Fld10087RRef [СчетУчетаМПЗБУ]
					,_Fld10086RRef [СчетУчетаБУВнеоборотногоАктива]
					,_Fld10089RRef [СчетУчетаНУ]
					,_Fld10091RRef [ХарактеристикаМПЗ]
					,_Fld10092RRef [ХарактеристикаНоменклатуры]
					,_Fld10093RRef [ШифрПоЕНАОФ]
					,_Fld10090RRef [СчетУчетаНУВнеоборотногоАктива]
					,_Fld10054 [ПроцентКапитальныхВложенийВключаемыхВРасходыНУ]
					,_Fld10049RRef [ПорядокВключенияСтоимостиВСоставРасходовУСН]
					,_Fld10037RRef [НоменклатураМПЗ]
					,_Fld10058RRef [СкладМПЗ]
					,_Fld18829RRef [СчетУчетаЗатратПоАмортизационнойПремии]
					,_Fld18830RRef [СубконтоПоАмортизационнойПремии1]
					,_Fld18831RRef [СубконтоПоАмортизационнойПремии2]
					,_Fld18832RRef [СубконтоПоАмортизационнойПремии3]
					,_Fld27258RRef [СпособОтраженияРасходовПриВключенииВСтоимость]
					From _Document411(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ПринятиеКУчетуОС();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПринятиеКУчетуОС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПринятияКУчетуОсновныхСредств.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ГодоваяНормаАмортизацииБУ = Читалка.GetDecimal(4);
							Ссылка.ГодоваяНормаАмортизацииУУ = Читалка.GetDecimal(5);
							Ссылка.ДатаПриобретения = Читалка.GetDateTime(8);
							Ссылка.Комментарий = Читалка.GetString(10);
							Ссылка.КоэффициентУскоренияБУ = Читалка.GetDecimal(11);
							Ссылка.КоэффициентУскоренияУУ = Читалка.GetDecimal(12);
							Ссылка.НачислятьАмортизациюБУ = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.НачислятьАмортизациюВТекущемМесяце = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.НачислятьАмортизациюНУ = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.НачислятьАмортизациюУУ = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(28))[0]==1;
							Ссылка.ОтразитьВСоставеМПЗ = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.ПорядокВключенияСтоимостиВСоставРасходовНУ = V82.Перечисления/*Ссылка*/.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ПустаяСсылка.Получить((byte[])Читалка.GetValue(33));
							Ссылка.ПредполагаемыйОбъемПродукцииБУ = Читалка.GetDecimal(34);
							Ссылка.ПринятиеКУчетуОдновременноСВводомВЭксплуатацию = ((byte[])Читалка.GetValue(35))[0]==1;
							Ссылка.ПредполагаемыйОбъемПродукцииУУ = Читалка.GetDecimal(36);
							Ссылка.ПринятиеКУчетуОдновременноСВводомВЭксплуатациюРегл = ((byte[])Читалка.GetValue(38))[0]==1;
							Ссылка.СпециальныйКоэффициентНУ = Читалка.GetDecimal(42);
							Ссылка.СпособНачисленияАмортизацииБУ = V82.Перечисления/*Ссылка*/.СпособыНачисленияАмортизацииОС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(43));
							Ссылка.СпособНачисленияАмортизацииНУ = V82.Перечисления/*Ссылка*/.МетодыНачисленияАмортизации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(48));
							Ссылка.СпособПоступления = V82.Перечисления/*Ссылка*/.СпособыПоступленияАктивов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(49));
							Ссылка.СписыватьПриПринятииКУчету = ((byte[])Читалка.GetValue(50))[0]==1;
							Ссылка.СрокПолезногоИспользованияБУ = Читалка.GetDecimal(52);
							Ссылка.СпособНачисленияАмортизацииУУ = V82.Перечисления/*Ссылка*/.СпособыНачисленияАмортизацииОС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(53));
							Ссылка.СрокПолезногоИспользованияНУ = Читалка.GetDecimal(54);
							Ссылка.СрокПолезногоИспользованияУСН = Читалка.GetDecimal(55);
							Ссылка.СтоимостьБУ = Читалка.GetDecimal(56);
							Ссылка.СтоимостьБУХоз = Читалка.GetDecimal(57);
							Ссылка.СтоимостьНУ = Читалка.GetDecimal(58);
							Ссылка.СрокПолезногоИспользованияУУ = Читалка.GetDecimal(59);
							Ссылка.СтавкаНДС = V82.Перечисления/*Ссылка*/.СтавкиНДС.ПустаяСсылка.Получить((byte[])Читалка.GetValue(60));
							Ссылка.Стоимость = Читалка.GetDecimal(61);
							Ссылка.СтоимостьНУХоз = Читалка.GetDecimal(62);
							Ссылка.СтоимостьПР = Читалка.GetDecimal(63);
							Ссылка.СтоимостьПРХоз = Читалка.GetDecimal(64);
							Ссылка.СтоимостьВР = Читалка.GetDecimal(65);
							Ссылка.СтоимостьВРХоз = Читалка.GetDecimal(66);
							Ссылка.СуммаНДС = Читалка.GetDecimal(67);
							Ссылка.СтоимостьУСН = Читалка.GetDecimal(68);
							Ссылка.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ = Читалка.GetDecimal(79);
							Ссылка.ПорядокВключенияСтоимостиВСоставРасходовУСН = V82.Перечисления/*Ссылка*/.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН.ПустаяСсылка.Получить((byte[])Читалка.GetValue(80));
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.ДокументыОбъект.ПринятиеКУчетуОС СоздатьЭлемент()
		{
			var Объект = new V82.ДокументыОбъект.ПринятиеКУчетуОС();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.Комментарий = "";
			Объект.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПринятияКУчетуОсновныхСредств.ПустаяСсылка;
			Объект.ПорядокВключенияСтоимостиВСоставРасходовНУ = V82.Перечисления/*Ссылка*/.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ПустаяСсылка;
			Объект.СпособНачисленияАмортизацииБУ = V82.Перечисления/*Ссылка*/.СпособыНачисленияАмортизацииОС.ПустаяСсылка;
			Объект.СпособНачисленияАмортизацииНУ = V82.Перечисления/*Ссылка*/.МетодыНачисленияАмортизации.ПустаяСсылка;
			Объект.СпособПоступления = V82.Перечисления/*Ссылка*/.СпособыПоступленияАктивов.ПустаяСсылка;
			Объект.СпособНачисленияАмортизацииУУ = V82.Перечисления/*Ссылка*/.СпособыНачисленияАмортизацииОС.ПустаяСсылка;
			Объект.СтавкаНДС = V82.Перечисления/*Ссылка*/.СтавкиНДС.ПустаяСсылка;
			Объект.ПорядокВключенияСтоимостиВСоставРасходовУСН = V82.Перечисления/*Ссылка*/.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН.ПустаяСсылка;
			return Объект;
		}
	}
}