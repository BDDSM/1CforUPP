
using System;
using System.Data.SqlClient;
using V82;
using V82.ДокументыСсылка;
using V82.Документы;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Документы//Менеджер
{
	///<summary>
	///(Общ)
	///</summary>
	public partial class ОтчетПроизводстваЗаСмену:ДокументМенеджер
	{
		
		public static ДокументыСсылка.ОтчетПроизводстваЗаСмену НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld7463 [АвтораспределениеВозвратныхОтходов]
					,_Fld7464 [АвтораспределениеМатериалов]
					,_Fld7465 [АвтораспределениеПрочихЗатрат]
					,_Fld7466 [АвтораспределениеТехнологическихОпераций]
					,_Fld7467 [ВводитьСтатьиЗатратПоСтрокам]
					,_Fld7468RRef [ЗаданиеНаПроизводство]
					,_Fld7469 [Комментарий]
					,_Fld7470RRef [Организация]
					,_Fld7477RRef [Склад]
					,_Fld7472 [ОтражатьВБухгалтерскомУчете]
					,_Fld7476RRef [ПодразделениеОрганизации]
					,_Fld7474 [ОтражатьВУправленческомУчете]
					,_Fld7475RRef [Подразделение]
					,_Fld7473 [ОтражатьВНалоговомУчете]
					,_Fld7471RRef [Ответственный]
					,_Fld7478RRef [СтатьяЗатрат]
					,_Fld7479 [ИспользоватьВозвратныеОтходы]
					,_Fld7480 [ИспользоватьЗаданияНаПроизводство]
					,_Fld7481 [ИспользоватьЗаказы]
					,_Fld7482 [ИспользоватьЗаказыНаОбслуживаниеОС]
					,_Fld7483 [ИспользоватьМатериалы]
					,_Fld7484 [ИспользоватьНаправленияВыпуска]
					,_Fld7485 [ИспользоватьНаработку]
					,_Fld18997 [ИспользоватьПодразделенияНЗП]
					,_Fld7486 [ИспользоватьПрочиеЗатраты]
					,_Fld7487 [ИспользоватьТехнологическиеОперации]
					,_Fld7488 [РазрешитьПревышениеЛимита]
					,_Fld7489RRef [СкладОтходов]
					,_Fld18998 [ИспользоватьАналитикуНЗП]
					,_Fld21806 [УчитыватьТариф]
					,_Fld21807 [УчитыватьКТУ]
					From _Document357(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ОтчетПроизводстваЗаСмену();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АвтораспределениеВозвратныхОтходов = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.АвтораспределениеМатериалов = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.АвтораспределениеПрочихЗатрат = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.АвтораспределениеТехнологическихОпераций = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ВводитьСтатьиЗатратПоСтрокам = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.ЗаданиеНаПроизводство = V82.ДокументыСсылка.ЗаданиеНаПроизводство.ВзятьИзКэша((byte[])Читалка.GetValue(8));
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(12))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.ИспользоватьЗаданияНаПроизводство = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ИспользоватьЗаказы = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.ИспользоватьЗаказыНаОбслуживаниеОС = ((byte[])Читалка.GetValue(22))[0]==1;
							Ссылка.ИспользоватьМатериалы = ((byte[])Читалка.GetValue(23))[0]==1;
							Ссылка.ИспользоватьНаправленияВыпуска = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.ИспользоватьНаработку = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.ИспользоватьПодразделенияНЗП = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.ИспользоватьПрочиеЗатраты = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ИспользоватьТехнологическиеОперации = ((byte[])Читалка.GetValue(28))[0]==1;
							Ссылка.РазрешитьПревышениеЛимита = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.ИспользоватьАналитикуНЗП = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.УчитыватьТариф = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.УчитыватьКТУ = ((byte[])Читалка.GetValue(33))[0]==1;
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыСсылка.ОтчетПроизводстваЗаСмену НайтиПоНомеру(string Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld7463 [АвтораспределениеВозвратныхОтходов]
					,_Fld7464 [АвтораспределениеМатериалов]
					,_Fld7465 [АвтораспределениеПрочихЗатрат]
					,_Fld7466 [АвтораспределениеТехнологическихОпераций]
					,_Fld7467 [ВводитьСтатьиЗатратПоСтрокам]
					,_Fld7468RRef [ЗаданиеНаПроизводство]
					,_Fld7469 [Комментарий]
					,_Fld7470RRef [Организация]
					,_Fld7477RRef [Склад]
					,_Fld7472 [ОтражатьВБухгалтерскомУчете]
					,_Fld7476RRef [ПодразделениеОрганизации]
					,_Fld7474 [ОтражатьВУправленческомУчете]
					,_Fld7475RRef [Подразделение]
					,_Fld7473 [ОтражатьВНалоговомУчете]
					,_Fld7471RRef [Ответственный]
					,_Fld7478RRef [СтатьяЗатрат]
					,_Fld7479 [ИспользоватьВозвратныеОтходы]
					,_Fld7480 [ИспользоватьЗаданияНаПроизводство]
					,_Fld7481 [ИспользоватьЗаказы]
					,_Fld7482 [ИспользоватьЗаказыНаОбслуживаниеОС]
					,_Fld7483 [ИспользоватьМатериалы]
					,_Fld7484 [ИспользоватьНаправленияВыпуска]
					,_Fld7485 [ИспользоватьНаработку]
					,_Fld18997 [ИспользоватьПодразделенияНЗП]
					,_Fld7486 [ИспользоватьПрочиеЗатраты]
					,_Fld7487 [ИспользоватьТехнологическиеОперации]
					,_Fld7488 [РазрешитьПревышениеЛимита]
					,_Fld7489RRef [СкладОтходов]
					,_Fld18998 [ИспользоватьАналитикуНЗП]
					,_Fld21806 [УчитыватьТариф]
					,_Fld21807 [УчитыватьКТУ]
					From _Document357(NOLOCK)
					Where _Number = @Номер";
					Команда.Parameters.AddWithValue("Номер", Номер);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ОтчетПроизводстваЗаСмену();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АвтораспределениеВозвратныхОтходов = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.АвтораспределениеМатериалов = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.АвтораспределениеПрочихЗатрат = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.АвтораспределениеТехнологическихОпераций = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ВводитьСтатьиЗатратПоСтрокам = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.ЗаданиеНаПроизводство = V82.ДокументыСсылка.ЗаданиеНаПроизводство.ВзятьИзКэша((byte[])Читалка.GetValue(8));
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(12))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.ИспользоватьЗаданияНаПроизводство = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ИспользоватьЗаказы = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.ИспользоватьЗаказыНаОбслуживаниеОС = ((byte[])Читалка.GetValue(22))[0]==1;
							Ссылка.ИспользоватьМатериалы = ((byte[])Читалка.GetValue(23))[0]==1;
							Ссылка.ИспользоватьНаправленияВыпуска = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.ИспользоватьНаработку = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.ИспользоватьПодразделенияНЗП = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.ИспользоватьПрочиеЗатраты = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ИспользоватьТехнологическиеОперации = ((byte[])Читалка.GetValue(28))[0]==1;
							Ссылка.РазрешитьПревышениеЛимита = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.ИспользоватьАналитикуНЗП = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.УчитыватьТариф = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.УчитыватьКТУ = ((byte[])Читалка.GetValue(33))[0]==1;
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыВыборка.ОтчетПроизводстваЗаСмену Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld7463 [АвтораспределениеВозвратныхОтходов]
					,_Fld7464 [АвтораспределениеМатериалов]
					,_Fld7465 [АвтораспределениеПрочихЗатрат]
					,_Fld7466 [АвтораспределениеТехнологическихОпераций]
					,_Fld7467 [ВводитьСтатьиЗатратПоСтрокам]
					,_Fld7468RRef [ЗаданиеНаПроизводство]
					,_Fld7469 [Комментарий]
					,_Fld7470RRef [Организация]
					,_Fld7477RRef [Склад]
					,_Fld7472 [ОтражатьВБухгалтерскомУчете]
					,_Fld7476RRef [ПодразделениеОрганизации]
					,_Fld7474 [ОтражатьВУправленческомУчете]
					,_Fld7475RRef [Подразделение]
					,_Fld7473 [ОтражатьВНалоговомУчете]
					,_Fld7471RRef [Ответственный]
					,_Fld7478RRef [СтатьяЗатрат]
					,_Fld7479 [ИспользоватьВозвратныеОтходы]
					,_Fld7480 [ИспользоватьЗаданияНаПроизводство]
					,_Fld7481 [ИспользоватьЗаказы]
					,_Fld7482 [ИспользоватьЗаказыНаОбслуживаниеОС]
					,_Fld7483 [ИспользоватьМатериалы]
					,_Fld7484 [ИспользоватьНаправленияВыпуска]
					,_Fld7485 [ИспользоватьНаработку]
					,_Fld18997 [ИспользоватьПодразделенияНЗП]
					,_Fld7486 [ИспользоватьПрочиеЗатраты]
					,_Fld7487 [ИспользоватьТехнологическиеОперации]
					,_Fld7488 [РазрешитьПревышениеЛимита]
					,_Fld7489RRef [СкладОтходов]
					,_Fld18998 [ИспользоватьАналитикуНЗП]
					,_Fld21806 [УчитыватьТариф]
					,_Fld21807 [УчитыватьКТУ]
					From _Document357(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ОтчетПроизводстваЗаСмену();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ОтчетПроизводстваЗаСмену();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АвтораспределениеВозвратныхОтходов = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.АвтораспределениеМатериалов = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.АвтораспределениеПрочихЗатрат = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.АвтораспределениеТехнологическихОпераций = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ВводитьСтатьиЗатратПоСтрокам = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.ЗаданиеНаПроизводство = V82.ДокументыСсылка.ЗаданиеНаПроизводство.ВзятьИзКэша((byte[])Читалка.GetValue(8));
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(12))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.ИспользоватьЗаданияНаПроизводство = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ИспользоватьЗаказы = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.ИспользоватьЗаказыНаОбслуживаниеОС = ((byte[])Читалка.GetValue(22))[0]==1;
							Ссылка.ИспользоватьМатериалы = ((byte[])Читалка.GetValue(23))[0]==1;
							Ссылка.ИспользоватьНаправленияВыпуска = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.ИспользоватьНаработку = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.ИспользоватьПодразделенияНЗП = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.ИспользоватьПрочиеЗатраты = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ИспользоватьТехнологическиеОперации = ((byte[])Читалка.GetValue(28))[0]==1;
							Ссылка.РазрешитьПревышениеЛимита = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.ИспользоватьАналитикуНЗП = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.УчитыватьТариф = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.УчитыватьКТУ = ((byte[])Читалка.GetValue(33))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ОтчетПроизводстваЗаСмену ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld7463 [АвтораспределениеВозвратныхОтходов]
					,_Fld7464 [АвтораспределениеМатериалов]
					,_Fld7465 [АвтораспределениеПрочихЗатрат]
					,_Fld7466 [АвтораспределениеТехнологическихОпераций]
					,_Fld7467 [ВводитьСтатьиЗатратПоСтрокам]
					,_Fld7468RRef [ЗаданиеНаПроизводство]
					,_Fld7469 [Комментарий]
					,_Fld7470RRef [Организация]
					,_Fld7477RRef [Склад]
					,_Fld7472 [ОтражатьВБухгалтерскомУчете]
					,_Fld7476RRef [ПодразделениеОрганизации]
					,_Fld7474 [ОтражатьВУправленческомУчете]
					,_Fld7475RRef [Подразделение]
					,_Fld7473 [ОтражатьВНалоговомУчете]
					,_Fld7471RRef [Ответственный]
					,_Fld7478RRef [СтатьяЗатрат]
					,_Fld7479 [ИспользоватьВозвратныеОтходы]
					,_Fld7480 [ИспользоватьЗаданияНаПроизводство]
					,_Fld7481 [ИспользоватьЗаказы]
					,_Fld7482 [ИспользоватьЗаказыНаОбслуживаниеОС]
					,_Fld7483 [ИспользоватьМатериалы]
					,_Fld7484 [ИспользоватьНаправленияВыпуска]
					,_Fld7485 [ИспользоватьНаработку]
					,_Fld18997 [ИспользоватьПодразделенияНЗП]
					,_Fld7486 [ИспользоватьПрочиеЗатраты]
					,_Fld7487 [ИспользоватьТехнологическиеОперации]
					,_Fld7488 [РазрешитьПревышениеЛимита]
					,_Fld7489RRef [СкладОтходов]
					,_Fld18998 [ИспользоватьАналитикуНЗП]
					,_Fld21806 [УчитыватьТариф]
					,_Fld21807 [УчитыватьКТУ]
					From _Document357(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ОтчетПроизводстваЗаСмену();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ОтчетПроизводстваЗаСмену();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АвтораспределениеВозвратныхОтходов = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.АвтораспределениеМатериалов = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.АвтораспределениеПрочихЗатрат = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.АвтораспределениеТехнологическихОпераций = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ВводитьСтатьиЗатратПоСтрокам = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.ЗаданиеНаПроизводство = V82.ДокументыСсылка.ЗаданиеНаПроизводство.ВзятьИзКэша((byte[])Читалка.GetValue(8));
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(12))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.ИспользоватьЗаданияНаПроизводство = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ИспользоватьЗаказы = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.ИспользоватьЗаказыНаОбслуживаниеОС = ((byte[])Читалка.GetValue(22))[0]==1;
							Ссылка.ИспользоватьМатериалы = ((byte[])Читалка.GetValue(23))[0]==1;
							Ссылка.ИспользоватьНаправленияВыпуска = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.ИспользоватьНаработку = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.ИспользоватьПодразделенияНЗП = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.ИспользоватьПрочиеЗатраты = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ИспользоватьТехнологическиеОперации = ((byte[])Читалка.GetValue(28))[0]==1;
							Ссылка.РазрешитьПревышениеЛимита = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.ИспользоватьАналитикуНЗП = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.УчитыватьТариф = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.УчитыватьКТУ = ((byte[])Читалка.GetValue(33))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ОтчетПроизводстваЗаСмену ВыбратьПоНомеру(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld7463 [АвтораспределениеВозвратныхОтходов]
					,_Fld7464 [АвтораспределениеМатериалов]
					,_Fld7465 [АвтораспределениеПрочихЗатрат]
					,_Fld7466 [АвтораспределениеТехнологическихОпераций]
					,_Fld7467 [ВводитьСтатьиЗатратПоСтрокам]
					,_Fld7468RRef [ЗаданиеНаПроизводство]
					,_Fld7469 [Комментарий]
					,_Fld7470RRef [Организация]
					,_Fld7477RRef [Склад]
					,_Fld7472 [ОтражатьВБухгалтерскомУчете]
					,_Fld7476RRef [ПодразделениеОрганизации]
					,_Fld7474 [ОтражатьВУправленческомУчете]
					,_Fld7475RRef [Подразделение]
					,_Fld7473 [ОтражатьВНалоговомУчете]
					,_Fld7471RRef [Ответственный]
					,_Fld7478RRef [СтатьяЗатрат]
					,_Fld7479 [ИспользоватьВозвратныеОтходы]
					,_Fld7480 [ИспользоватьЗаданияНаПроизводство]
					,_Fld7481 [ИспользоватьЗаказы]
					,_Fld7482 [ИспользоватьЗаказыНаОбслуживаниеОС]
					,_Fld7483 [ИспользоватьМатериалы]
					,_Fld7484 [ИспользоватьНаправленияВыпуска]
					,_Fld7485 [ИспользоватьНаработку]
					,_Fld18997 [ИспользоватьПодразделенияНЗП]
					,_Fld7486 [ИспользоватьПрочиеЗатраты]
					,_Fld7487 [ИспользоватьТехнологическиеОперации]
					,_Fld7488 [РазрешитьПревышениеЛимита]
					,_Fld7489RRef [СкладОтходов]
					,_Fld18998 [ИспользоватьАналитикуНЗП]
					,_Fld21806 [УчитыватьТариф]
					,_Fld21807 [УчитыватьКТУ]
					From _Document357(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ОтчетПроизводстваЗаСмену();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ОтчетПроизводстваЗаСмену();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АвтораспределениеВозвратныхОтходов = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.АвтораспределениеМатериалов = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.АвтораспределениеПрочихЗатрат = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.АвтораспределениеТехнологическихОпераций = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ВводитьСтатьиЗатратПоСтрокам = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.ЗаданиеНаПроизводство = V82.ДокументыСсылка.ЗаданиеНаПроизводство.ВзятьИзКэша((byte[])Читалка.GetValue(8));
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(12))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.ИспользоватьЗаданияНаПроизводство = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ИспользоватьЗаказы = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.ИспользоватьЗаказыНаОбслуживаниеОС = ((byte[])Читалка.GetValue(22))[0]==1;
							Ссылка.ИспользоватьМатериалы = ((byte[])Читалка.GetValue(23))[0]==1;
							Ссылка.ИспользоватьНаправленияВыпуска = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.ИспользоватьНаработку = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.ИспользоватьПодразделенияНЗП = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.ИспользоватьПрочиеЗатраты = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ИспользоватьТехнологическиеОперации = ((byte[])Читалка.GetValue(28))[0]==1;
							Ссылка.РазрешитьПревышениеЛимита = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.ИспользоватьАналитикуНЗП = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.УчитыватьТариф = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.УчитыватьКТУ = ((byte[])Читалка.GetValue(33))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ОтчетПроизводстваЗаСмену СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld7463 [АвтораспределениеВозвратныхОтходов]
					,_Fld7464 [АвтораспределениеМатериалов]
					,_Fld7465 [АвтораспределениеПрочихЗатрат]
					,_Fld7466 [АвтораспределениеТехнологическихОпераций]
					,_Fld7467 [ВводитьСтатьиЗатратПоСтрокам]
					,_Fld7468RRef [ЗаданиеНаПроизводство]
					,_Fld7469 [Комментарий]
					,_Fld7470RRef [Организация]
					,_Fld7477RRef [Склад]
					,_Fld7472 [ОтражатьВБухгалтерскомУчете]
					,_Fld7476RRef [ПодразделениеОрганизации]
					,_Fld7474 [ОтражатьВУправленческомУчете]
					,_Fld7475RRef [Подразделение]
					,_Fld7473 [ОтражатьВНалоговомУчете]
					,_Fld7471RRef [Ответственный]
					,_Fld7478RRef [СтатьяЗатрат]
					,_Fld7479 [ИспользоватьВозвратныеОтходы]
					,_Fld7480 [ИспользоватьЗаданияНаПроизводство]
					,_Fld7481 [ИспользоватьЗаказы]
					,_Fld7482 [ИспользоватьЗаказыНаОбслуживаниеОС]
					,_Fld7483 [ИспользоватьМатериалы]
					,_Fld7484 [ИспользоватьНаправленияВыпуска]
					,_Fld7485 [ИспользоватьНаработку]
					,_Fld18997 [ИспользоватьПодразделенияНЗП]
					,_Fld7486 [ИспользоватьПрочиеЗатраты]
					,_Fld7487 [ИспользоватьТехнологическиеОперации]
					,_Fld7488 [РазрешитьПревышениеЛимита]
					,_Fld7489RRef [СкладОтходов]
					,_Fld18998 [ИспользоватьАналитикуНЗП]
					,_Fld21806 [УчитыватьТариф]
					,_Fld21807 [УчитыватьКТУ]
					From _Document357(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ОтчетПроизводстваЗаСмену();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ОтчетПроизводстваЗаСмену();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АвтораспределениеВозвратныхОтходов = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.АвтораспределениеМатериалов = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.АвтораспределениеПрочихЗатрат = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.АвтораспределениеТехнологическихОпераций = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ВводитьСтатьиЗатратПоСтрокам = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.ЗаданиеНаПроизводство = V82.ДокументыСсылка.ЗаданиеНаПроизводство.ВзятьИзКэша((byte[])Читалка.GetValue(8));
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(12))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.ИспользоватьЗаданияНаПроизводство = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ИспользоватьЗаказы = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.ИспользоватьЗаказыНаОбслуживаниеОС = ((byte[])Читалка.GetValue(22))[0]==1;
							Ссылка.ИспользоватьМатериалы = ((byte[])Читалка.GetValue(23))[0]==1;
							Ссылка.ИспользоватьНаправленияВыпуска = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.ИспользоватьНаработку = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.ИспользоватьПодразделенияНЗП = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.ИспользоватьПрочиеЗатраты = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ИспользоватьТехнологическиеОперации = ((byte[])Читалка.GetValue(28))[0]==1;
							Ссылка.РазрешитьПревышениеЛимита = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.ИспользоватьАналитикуНЗП = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.УчитыватьТариф = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.УчитыватьКТУ = ((byte[])Читалка.GetValue(33))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ОтчетПроизводстваЗаСмену СтраницаПоНомеру(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld7463 [АвтораспределениеВозвратныхОтходов]
					,_Fld7464 [АвтораспределениеМатериалов]
					,_Fld7465 [АвтораспределениеПрочихЗатрат]
					,_Fld7466 [АвтораспределениеТехнологическихОпераций]
					,_Fld7467 [ВводитьСтатьиЗатратПоСтрокам]
					,_Fld7468RRef [ЗаданиеНаПроизводство]
					,_Fld7469 [Комментарий]
					,_Fld7470RRef [Организация]
					,_Fld7477RRef [Склад]
					,_Fld7472 [ОтражатьВБухгалтерскомУчете]
					,_Fld7476RRef [ПодразделениеОрганизации]
					,_Fld7474 [ОтражатьВУправленческомУчете]
					,_Fld7475RRef [Подразделение]
					,_Fld7473 [ОтражатьВНалоговомУчете]
					,_Fld7471RRef [Ответственный]
					,_Fld7478RRef [СтатьяЗатрат]
					,_Fld7479 [ИспользоватьВозвратныеОтходы]
					,_Fld7480 [ИспользоватьЗаданияНаПроизводство]
					,_Fld7481 [ИспользоватьЗаказы]
					,_Fld7482 [ИспользоватьЗаказыНаОбслуживаниеОС]
					,_Fld7483 [ИспользоватьМатериалы]
					,_Fld7484 [ИспользоватьНаправленияВыпуска]
					,_Fld7485 [ИспользоватьНаработку]
					,_Fld18997 [ИспользоватьПодразделенияНЗП]
					,_Fld7486 [ИспользоватьПрочиеЗатраты]
					,_Fld7487 [ИспользоватьТехнологическиеОперации]
					,_Fld7488 [РазрешитьПревышениеЛимита]
					,_Fld7489RRef [СкладОтходов]
					,_Fld18998 [ИспользоватьАналитикуНЗП]
					,_Fld21806 [УчитыватьТариф]
					,_Fld21807 [УчитыватьКТУ]
					From _Document357(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ОтчетПроизводстваЗаСмену();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ОтчетПроизводстваЗаСмену();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АвтораспределениеВозвратныхОтходов = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.АвтораспределениеМатериалов = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.АвтораспределениеПрочихЗатрат = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.АвтораспределениеТехнологическихОпераций = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ВводитьСтатьиЗатратПоСтрокам = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.ЗаданиеНаПроизводство = V82.ДокументыСсылка.ЗаданиеНаПроизводство.ВзятьИзКэша((byte[])Читалка.GetValue(8));
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(12))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.ИспользоватьЗаданияНаПроизводство = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ИспользоватьЗаказы = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.ИспользоватьЗаказыНаОбслуживаниеОС = ((byte[])Читалка.GetValue(22))[0]==1;
							Ссылка.ИспользоватьМатериалы = ((byte[])Читалка.GetValue(23))[0]==1;
							Ссылка.ИспользоватьНаправленияВыпуска = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.ИспользоватьНаработку = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.ИспользоватьПодразделенияНЗП = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.ИспользоватьПрочиеЗатраты = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ИспользоватьТехнологическиеОперации = ((byte[])Читалка.GetValue(28))[0]==1;
							Ссылка.РазрешитьПревышениеЛимита = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.ИспользоватьАналитикуНЗП = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.УчитыватьТариф = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.УчитыватьКТУ = ((byte[])Читалка.GetValue(33))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.ДокументыОбъект.ОтчетПроизводстваЗаСмену СоздатьЭлемент()
		{
			var Объект = new V82.ДокументыОбъект.ОтчетПроизводстваЗаСмену();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.Комментарий = "";
			Объект.ЗаданиеНаПроизводство = new V82.ДокументыСсылка.ЗаданиеНаПроизводство();
			return Объект;
		}
	}
}