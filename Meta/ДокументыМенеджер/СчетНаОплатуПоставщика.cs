
using System;
using System.Data.SqlClient;
using V82;
using V82.ДокументыСсылка;
using V82.Документы;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Документы//Менеджер
{
	///<summary>
	///(Упр)
	///</summary>
	public partial class СчетНаОплатуПоставщика:ДокументМенеджер
	{
		
		public static ДокументыСсылка.СчетНаОплатуПоставщика НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld11848RRef [ВалютаДокумента]
					,_Fld11850 [ВремяНапоминания]
					,_Fld11851 [ДатаВходящегоДокумента]
					,_Fld11852 [ДатаОплаты]
					,_Fld11853 [ДатаПоступления]
					,_Fld11854RRef [ДоговорКонтрагента]
					,_Fld11855 [ИспользоватьПлановуюСебестоимость]
					,_Fld11856 [ИтогПлановаяСебестоимость]
					,_Fld11857 [Комментарий]
					,_Fld11858RRef [Контрагент]
					,_Fld11859 [КратностьВзаиморасчетов]
					,_Fld11860 [КурсВзаиморасчетов]
					,_Fld11861 [НапомнитьОСобытии]
					,_Fld11862 [НомерВходящегоДокумента]
					,_Fld11863RRef [Организация]
					,_Fld11864RRef [Ответственный]
					,_Fld11865RRef [Подразделение]
					,_Fld11866RRef [Склад]
					,_Fld11867_TYPE [СтруктурнаяЕдиница_Тип],_Fld11867_RRRef [СтруктурнаяЕдиница],_Fld11867_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld11868 [СуммаВключаетНДС]
					,_Fld11869 [СуммаДокумента]
					,_Fld11870RRef [ТипЦен]
					,_Fld11872 [УчитыватьНДС]
					,_Fld19105_TYPE [ДокументОснование_Тип],_Fld19105_RRRef [ДокументОснование],_Fld19105_RTRef [ДокументОснование_Вид]
					,_Fld11873RRef [КонтактноеЛицоКонтрагента]
					,_Fld11874RRef [УсловиеПродаж]
					,_Fld22256 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld22257 [ДатаВходящегоДокументаЭлектронногоОбмена]
					From _Document463(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.СчетНаОплатуПоставщика();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(4);
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(5);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(6);
							Ссылка.ДатаПоступления = Читалка.GetDateTime(7);
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(9))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(10);
							Ссылка.Комментарий = Читалка.GetString(11);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(14);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(15))[0]==1;
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(16);
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(25);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(33);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(34);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыСсылка.СчетНаОплатуПоставщика НайтиПоНомеру(string Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld11848RRef [ВалютаДокумента]
					,_Fld11850 [ВремяНапоминания]
					,_Fld11851 [ДатаВходящегоДокумента]
					,_Fld11852 [ДатаОплаты]
					,_Fld11853 [ДатаПоступления]
					,_Fld11854RRef [ДоговорКонтрагента]
					,_Fld11855 [ИспользоватьПлановуюСебестоимость]
					,_Fld11856 [ИтогПлановаяСебестоимость]
					,_Fld11857 [Комментарий]
					,_Fld11858RRef [Контрагент]
					,_Fld11859 [КратностьВзаиморасчетов]
					,_Fld11860 [КурсВзаиморасчетов]
					,_Fld11861 [НапомнитьОСобытии]
					,_Fld11862 [НомерВходящегоДокумента]
					,_Fld11863RRef [Организация]
					,_Fld11864RRef [Ответственный]
					,_Fld11865RRef [Подразделение]
					,_Fld11866RRef [Склад]
					,_Fld11867_TYPE [СтруктурнаяЕдиница_Тип],_Fld11867_RRRef [СтруктурнаяЕдиница],_Fld11867_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld11868 [СуммаВключаетНДС]
					,_Fld11869 [СуммаДокумента]
					,_Fld11870RRef [ТипЦен]
					,_Fld11872 [УчитыватьНДС]
					,_Fld19105_TYPE [ДокументОснование_Тип],_Fld19105_RRRef [ДокументОснование],_Fld19105_RTRef [ДокументОснование_Вид]
					,_Fld11873RRef [КонтактноеЛицоКонтрагента]
					,_Fld11874RRef [УсловиеПродаж]
					,_Fld22256 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld22257 [ДатаВходящегоДокументаЭлектронногоОбмена]
					From _Document463(NOLOCK)
					Where _Number = @Номер";
					Команда.Parameters.AddWithValue("Номер", Номер);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.СчетНаОплатуПоставщика();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(4);
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(5);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(6);
							Ссылка.ДатаПоступления = Читалка.GetDateTime(7);
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(9))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(10);
							Ссылка.Комментарий = Читалка.GetString(11);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(14);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(15))[0]==1;
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(16);
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(25);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(33);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(34);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыВыборка.СчетНаОплатуПоставщика Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld11848RRef [ВалютаДокумента]
					,_Fld11850 [ВремяНапоминания]
					,_Fld11851 [ДатаВходящегоДокумента]
					,_Fld11852 [ДатаОплаты]
					,_Fld11853 [ДатаПоступления]
					,_Fld11854RRef [ДоговорКонтрагента]
					,_Fld11855 [ИспользоватьПлановуюСебестоимость]
					,_Fld11856 [ИтогПлановаяСебестоимость]
					,_Fld11857 [Комментарий]
					,_Fld11858RRef [Контрагент]
					,_Fld11859 [КратностьВзаиморасчетов]
					,_Fld11860 [КурсВзаиморасчетов]
					,_Fld11861 [НапомнитьОСобытии]
					,_Fld11862 [НомерВходящегоДокумента]
					,_Fld11863RRef [Организация]
					,_Fld11864RRef [Ответственный]
					,_Fld11865RRef [Подразделение]
					,_Fld11866RRef [Склад]
					,_Fld11867_TYPE [СтруктурнаяЕдиница_Тип],_Fld11867_RRRef [СтруктурнаяЕдиница],_Fld11867_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld11868 [СуммаВключаетНДС]
					,_Fld11869 [СуммаДокумента]
					,_Fld11870RRef [ТипЦен]
					,_Fld11872 [УчитыватьНДС]
					,_Fld19105_TYPE [ДокументОснование_Тип],_Fld19105_RRRef [ДокументОснование],_Fld19105_RTRef [ДокументОснование_Вид]
					,_Fld11873RRef [КонтактноеЛицоКонтрагента]
					,_Fld11874RRef [УсловиеПродаж]
					,_Fld22256 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld22257 [ДатаВходящегоДокументаЭлектронногоОбмена]
					From _Document463(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.СчетНаОплатуПоставщика();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.СчетНаОплатуПоставщика();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(4);
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(5);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(6);
							Ссылка.ДатаПоступления = Читалка.GetDateTime(7);
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(9))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(10);
							Ссылка.Комментарий = Читалка.GetString(11);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(14);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(15))[0]==1;
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(16);
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(25);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(33);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(34);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.СчетНаОплатуПоставщика ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld11848RRef [ВалютаДокумента]
					,_Fld11850 [ВремяНапоминания]
					,_Fld11851 [ДатаВходящегоДокумента]
					,_Fld11852 [ДатаОплаты]
					,_Fld11853 [ДатаПоступления]
					,_Fld11854RRef [ДоговорКонтрагента]
					,_Fld11855 [ИспользоватьПлановуюСебестоимость]
					,_Fld11856 [ИтогПлановаяСебестоимость]
					,_Fld11857 [Комментарий]
					,_Fld11858RRef [Контрагент]
					,_Fld11859 [КратностьВзаиморасчетов]
					,_Fld11860 [КурсВзаиморасчетов]
					,_Fld11861 [НапомнитьОСобытии]
					,_Fld11862 [НомерВходящегоДокумента]
					,_Fld11863RRef [Организация]
					,_Fld11864RRef [Ответственный]
					,_Fld11865RRef [Подразделение]
					,_Fld11866RRef [Склад]
					,_Fld11867_TYPE [СтруктурнаяЕдиница_Тип],_Fld11867_RRRef [СтруктурнаяЕдиница],_Fld11867_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld11868 [СуммаВключаетНДС]
					,_Fld11869 [СуммаДокумента]
					,_Fld11870RRef [ТипЦен]
					,_Fld11872 [УчитыватьНДС]
					,_Fld19105_TYPE [ДокументОснование_Тип],_Fld19105_RRRef [ДокументОснование],_Fld19105_RTRef [ДокументОснование_Вид]
					,_Fld11873RRef [КонтактноеЛицоКонтрагента]
					,_Fld11874RRef [УсловиеПродаж]
					,_Fld22256 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld22257 [ДатаВходящегоДокументаЭлектронногоОбмена]
					From _Document463(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.СчетНаОплатуПоставщика();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.СчетНаОплатуПоставщика();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(4);
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(5);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(6);
							Ссылка.ДатаПоступления = Читалка.GetDateTime(7);
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(9))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(10);
							Ссылка.Комментарий = Читалка.GetString(11);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(14);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(15))[0]==1;
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(16);
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(25);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(33);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(34);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.СчетНаОплатуПоставщика ВыбратьПоНомеру(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld11848RRef [ВалютаДокумента]
					,_Fld11850 [ВремяНапоминания]
					,_Fld11851 [ДатаВходящегоДокумента]
					,_Fld11852 [ДатаОплаты]
					,_Fld11853 [ДатаПоступления]
					,_Fld11854RRef [ДоговорКонтрагента]
					,_Fld11855 [ИспользоватьПлановуюСебестоимость]
					,_Fld11856 [ИтогПлановаяСебестоимость]
					,_Fld11857 [Комментарий]
					,_Fld11858RRef [Контрагент]
					,_Fld11859 [КратностьВзаиморасчетов]
					,_Fld11860 [КурсВзаиморасчетов]
					,_Fld11861 [НапомнитьОСобытии]
					,_Fld11862 [НомерВходящегоДокумента]
					,_Fld11863RRef [Организация]
					,_Fld11864RRef [Ответственный]
					,_Fld11865RRef [Подразделение]
					,_Fld11866RRef [Склад]
					,_Fld11867_TYPE [СтруктурнаяЕдиница_Тип],_Fld11867_RRRef [СтруктурнаяЕдиница],_Fld11867_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld11868 [СуммаВключаетНДС]
					,_Fld11869 [СуммаДокумента]
					,_Fld11870RRef [ТипЦен]
					,_Fld11872 [УчитыватьНДС]
					,_Fld19105_TYPE [ДокументОснование_Тип],_Fld19105_RRRef [ДокументОснование],_Fld19105_RTRef [ДокументОснование_Вид]
					,_Fld11873RRef [КонтактноеЛицоКонтрагента]
					,_Fld11874RRef [УсловиеПродаж]
					,_Fld22256 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld22257 [ДатаВходящегоДокументаЭлектронногоОбмена]
					From _Document463(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.СчетНаОплатуПоставщика();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.СчетНаОплатуПоставщика();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(4);
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(5);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(6);
							Ссылка.ДатаПоступления = Читалка.GetDateTime(7);
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(9))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(10);
							Ссылка.Комментарий = Читалка.GetString(11);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(14);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(15))[0]==1;
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(16);
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(25);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(33);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(34);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.СчетНаОплатуПоставщика СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld11848RRef [ВалютаДокумента]
					,_Fld11850 [ВремяНапоминания]
					,_Fld11851 [ДатаВходящегоДокумента]
					,_Fld11852 [ДатаОплаты]
					,_Fld11853 [ДатаПоступления]
					,_Fld11854RRef [ДоговорКонтрагента]
					,_Fld11855 [ИспользоватьПлановуюСебестоимость]
					,_Fld11856 [ИтогПлановаяСебестоимость]
					,_Fld11857 [Комментарий]
					,_Fld11858RRef [Контрагент]
					,_Fld11859 [КратностьВзаиморасчетов]
					,_Fld11860 [КурсВзаиморасчетов]
					,_Fld11861 [НапомнитьОСобытии]
					,_Fld11862 [НомерВходящегоДокумента]
					,_Fld11863RRef [Организация]
					,_Fld11864RRef [Ответственный]
					,_Fld11865RRef [Подразделение]
					,_Fld11866RRef [Склад]
					,_Fld11867_TYPE [СтруктурнаяЕдиница_Тип],_Fld11867_RRRef [СтруктурнаяЕдиница],_Fld11867_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld11868 [СуммаВключаетНДС]
					,_Fld11869 [СуммаДокумента]
					,_Fld11870RRef [ТипЦен]
					,_Fld11872 [УчитыватьНДС]
					,_Fld19105_TYPE [ДокументОснование_Тип],_Fld19105_RRRef [ДокументОснование],_Fld19105_RTRef [ДокументОснование_Вид]
					,_Fld11873RRef [КонтактноеЛицоКонтрагента]
					,_Fld11874RRef [УсловиеПродаж]
					,_Fld22256 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld22257 [ДатаВходящегоДокументаЭлектронногоОбмена]
					From _Document463(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.СчетНаОплатуПоставщика();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.СчетНаОплатуПоставщика();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(4);
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(5);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(6);
							Ссылка.ДатаПоступления = Читалка.GetDateTime(7);
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(9))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(10);
							Ссылка.Комментарий = Читалка.GetString(11);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(14);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(15))[0]==1;
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(16);
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(25);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(33);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(34);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.СчетНаОплатуПоставщика СтраницаПоНомеру(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld11848RRef [ВалютаДокумента]
					,_Fld11850 [ВремяНапоминания]
					,_Fld11851 [ДатаВходящегоДокумента]
					,_Fld11852 [ДатаОплаты]
					,_Fld11853 [ДатаПоступления]
					,_Fld11854RRef [ДоговорКонтрагента]
					,_Fld11855 [ИспользоватьПлановуюСебестоимость]
					,_Fld11856 [ИтогПлановаяСебестоимость]
					,_Fld11857 [Комментарий]
					,_Fld11858RRef [Контрагент]
					,_Fld11859 [КратностьВзаиморасчетов]
					,_Fld11860 [КурсВзаиморасчетов]
					,_Fld11861 [НапомнитьОСобытии]
					,_Fld11862 [НомерВходящегоДокумента]
					,_Fld11863RRef [Организация]
					,_Fld11864RRef [Ответственный]
					,_Fld11865RRef [Подразделение]
					,_Fld11866RRef [Склад]
					,_Fld11867_TYPE [СтруктурнаяЕдиница_Тип],_Fld11867_RRRef [СтруктурнаяЕдиница],_Fld11867_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld11868 [СуммаВключаетНДС]
					,_Fld11869 [СуммаДокумента]
					,_Fld11870RRef [ТипЦен]
					,_Fld11872 [УчитыватьНДС]
					,_Fld19105_TYPE [ДокументОснование_Тип],_Fld19105_RRRef [ДокументОснование],_Fld19105_RTRef [ДокументОснование_Вид]
					,_Fld11873RRef [КонтактноеЛицоКонтрагента]
					,_Fld11874RRef [УсловиеПродаж]
					,_Fld22256 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld22257 [ДатаВходящегоДокументаЭлектронногоОбмена]
					From _Document463(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.СчетНаОплатуПоставщика();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.СчетНаОплатуПоставщика();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(4);
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(5);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(6);
							Ссылка.ДатаПоступления = Читалка.GetDateTime(7);
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(9))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(10);
							Ссылка.Комментарий = Читалка.GetString(11);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(14);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(15))[0]==1;
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(16);
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(25);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(33);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(34);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.ДокументыОбъект.СчетНаОплатуПоставщика СоздатьЭлемент()
		{
			var Объект = new V82.ДокументыОбъект.СчетНаОплатуПоставщика();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.Комментарий = "";
			Объект.НомерВходящегоДокумента = "";
			Объект.НомерВходящегоДокументаЭлектронногоОбмена = "";
			return Объект;
		}
	}
}