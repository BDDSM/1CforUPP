
using System;
using System.Data.SqlClient;
using V82;
using V82.ДокументыСсылка;
using V82.Документы;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Документы//Менеджер
{
	///<summary>
	///(Общ)
	///</summary>
	public partial class ЗаказПокупателя:ДокументМенеджер
	{
		
		public static ДокументыСсылка.ЗаказПокупателя НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld6974 [АдресДоставки]
					,_Fld6975RRef [ВалютаДокумента]
					,_Fld6976RRef [ВидОперации]
					,_Fld6977 [ВремяНапоминания]
					,_Fld6978 [ДатаОплаты]
					,_Fld6979 [ДатаОтгрузки]
					,_Fld6980RRef [ДисконтнаяКарта]
					,_Fld6981RRef [ДоговорКонтрагента]
					,_Fld6982 [ИспользоватьПлановуюСебестоимость]
					,_Fld6983 [ИтогПлановаяСебестоимость]
					,_Fld6984 [Комментарий]
					,_Fld6985RRef [Контрагент]
					,_Fld6986 [КратностьВзаиморасчетов]
					,_Fld6987 [КурсВзаиморасчетов]
					,_Fld6988 [НапомнитьОСобытии]
					,_Fld6989RRef [Организация]
					,_Fld6990RRef [Ответственный]
					,_Fld6991 [ОтражатьВБухгалтерскомУчете]
					,_Fld6992 [ОтражатьВНалоговомУчете]
					,_Fld6993RRef [Подразделение]
					,_Fld6994_TYPE [СтруктурнаяЕдиница_Тип],_Fld6994_RRRef [СтруктурнаяЕдиница],_Fld6994_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld6995_TYPE [СкладГруппа_Тип],_Fld6995_RRRef [СкладГруппа],_Fld6995_RTRef [СкладГруппа_Вид]
					,_Fld6996 [СуммаВключаетНДС]
					,_Fld6997 [СуммаДокумента]
					,_Fld6998RRef [ТипЦен]
					,_Fld6999 [УчитыватьНДС]
					,_Fld7000RRef [Грузополучатель]
					,_Fld7001RRef [КонтактноеЛицоКонтрагента]
					,_Fld7002RRef [УсловиеПродаж]
					,_Fld7003 [ДополнениеКАдресуДоставки]
					,_Fld7004_TYPE [ДокументОснование_Тип],_Fld7004_RRRef [ДокументОснование],_Fld7004_RTRef [ДокументОснование_Вид]
					,_Fld7005RRef [Грузоотправитель]
					,_Fld7006 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld7007 [ДатаВходящегоДокументаЭлектронногоОбмена]
					,_Fld7008 [НомерПоДаннымПокупателя]
					,_Fld7009 [ДатаПоДаннымПокупателя]
					From _Document362(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ЗаказПокупателя();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(3);
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийЗаказПокупателя.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(6);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(7);
							Ссылка.ДатаОтгрузки = Читалка.GetDateTime(8);
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(11))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(12);
							Ссылка.Комментарий = Читалка.GetString(13);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(15);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(16);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(30);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(36);
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(41);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(42);
							Ссылка.НомерПоДаннымПокупателя = Читалка.GetString(43);
							Ссылка.ДатаПоДаннымПокупателя = Читалка.GetDateTime(44);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыСсылка.ЗаказПокупателя НайтиПоНомеру(string Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld6974 [АдресДоставки]
					,_Fld6975RRef [ВалютаДокумента]
					,_Fld6976RRef [ВидОперации]
					,_Fld6977 [ВремяНапоминания]
					,_Fld6978 [ДатаОплаты]
					,_Fld6979 [ДатаОтгрузки]
					,_Fld6980RRef [ДисконтнаяКарта]
					,_Fld6981RRef [ДоговорКонтрагента]
					,_Fld6982 [ИспользоватьПлановуюСебестоимость]
					,_Fld6983 [ИтогПлановаяСебестоимость]
					,_Fld6984 [Комментарий]
					,_Fld6985RRef [Контрагент]
					,_Fld6986 [КратностьВзаиморасчетов]
					,_Fld6987 [КурсВзаиморасчетов]
					,_Fld6988 [НапомнитьОСобытии]
					,_Fld6989RRef [Организация]
					,_Fld6990RRef [Ответственный]
					,_Fld6991 [ОтражатьВБухгалтерскомУчете]
					,_Fld6992 [ОтражатьВНалоговомУчете]
					,_Fld6993RRef [Подразделение]
					,_Fld6994_TYPE [СтруктурнаяЕдиница_Тип],_Fld6994_RRRef [СтруктурнаяЕдиница],_Fld6994_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld6995_TYPE [СкладГруппа_Тип],_Fld6995_RRRef [СкладГруппа],_Fld6995_RTRef [СкладГруппа_Вид]
					,_Fld6996 [СуммаВключаетНДС]
					,_Fld6997 [СуммаДокумента]
					,_Fld6998RRef [ТипЦен]
					,_Fld6999 [УчитыватьНДС]
					,_Fld7000RRef [Грузополучатель]
					,_Fld7001RRef [КонтактноеЛицоКонтрагента]
					,_Fld7002RRef [УсловиеПродаж]
					,_Fld7003 [ДополнениеКАдресуДоставки]
					,_Fld7004_TYPE [ДокументОснование_Тип],_Fld7004_RRRef [ДокументОснование],_Fld7004_RTRef [ДокументОснование_Вид]
					,_Fld7005RRef [Грузоотправитель]
					,_Fld7006 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld7007 [ДатаВходящегоДокументаЭлектронногоОбмена]
					,_Fld7008 [НомерПоДаннымПокупателя]
					,_Fld7009 [ДатаПоДаннымПокупателя]
					From _Document362(NOLOCK)
					Where _Number = @Номер";
					Команда.Parameters.AddWithValue("Номер", Номер);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ЗаказПокупателя();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(3);
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийЗаказПокупателя.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(6);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(7);
							Ссылка.ДатаОтгрузки = Читалка.GetDateTime(8);
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(11))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(12);
							Ссылка.Комментарий = Читалка.GetString(13);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(15);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(16);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(30);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(36);
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(41);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(42);
							Ссылка.НомерПоДаннымПокупателя = Читалка.GetString(43);
							Ссылка.ДатаПоДаннымПокупателя = Читалка.GetDateTime(44);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыВыборка.ЗаказПокупателя Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld6974 [АдресДоставки]
					,_Fld6975RRef [ВалютаДокумента]
					,_Fld6976RRef [ВидОперации]
					,_Fld6977 [ВремяНапоминания]
					,_Fld6978 [ДатаОплаты]
					,_Fld6979 [ДатаОтгрузки]
					,_Fld6980RRef [ДисконтнаяКарта]
					,_Fld6981RRef [ДоговорКонтрагента]
					,_Fld6982 [ИспользоватьПлановуюСебестоимость]
					,_Fld6983 [ИтогПлановаяСебестоимость]
					,_Fld6984 [Комментарий]
					,_Fld6985RRef [Контрагент]
					,_Fld6986 [КратностьВзаиморасчетов]
					,_Fld6987 [КурсВзаиморасчетов]
					,_Fld6988 [НапомнитьОСобытии]
					,_Fld6989RRef [Организация]
					,_Fld6990RRef [Ответственный]
					,_Fld6991 [ОтражатьВБухгалтерскомУчете]
					,_Fld6992 [ОтражатьВНалоговомУчете]
					,_Fld6993RRef [Подразделение]
					,_Fld6994_TYPE [СтруктурнаяЕдиница_Тип],_Fld6994_RRRef [СтруктурнаяЕдиница],_Fld6994_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld6995_TYPE [СкладГруппа_Тип],_Fld6995_RRRef [СкладГруппа],_Fld6995_RTRef [СкладГруппа_Вид]
					,_Fld6996 [СуммаВключаетНДС]
					,_Fld6997 [СуммаДокумента]
					,_Fld6998RRef [ТипЦен]
					,_Fld6999 [УчитыватьНДС]
					,_Fld7000RRef [Грузополучатель]
					,_Fld7001RRef [КонтактноеЛицоКонтрагента]
					,_Fld7002RRef [УсловиеПродаж]
					,_Fld7003 [ДополнениеКАдресуДоставки]
					,_Fld7004_TYPE [ДокументОснование_Тип],_Fld7004_RRRef [ДокументОснование],_Fld7004_RTRef [ДокументОснование_Вид]
					,_Fld7005RRef [Грузоотправитель]
					,_Fld7006 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld7007 [ДатаВходящегоДокументаЭлектронногоОбмена]
					,_Fld7008 [НомерПоДаннымПокупателя]
					,_Fld7009 [ДатаПоДаннымПокупателя]
					From _Document362(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ЗаказПокупателя();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ЗаказПокупателя();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(3);
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийЗаказПокупателя.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(6);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(7);
							Ссылка.ДатаОтгрузки = Читалка.GetDateTime(8);
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(11))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(12);
							Ссылка.Комментарий = Читалка.GetString(13);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(15);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(16);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(30);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(36);
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(41);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(42);
							Ссылка.НомерПоДаннымПокупателя = Читалка.GetString(43);
							Ссылка.ДатаПоДаннымПокупателя = Читалка.GetDateTime(44);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ЗаказПокупателя ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld6974 [АдресДоставки]
					,_Fld6975RRef [ВалютаДокумента]
					,_Fld6976RRef [ВидОперации]
					,_Fld6977 [ВремяНапоминания]
					,_Fld6978 [ДатаОплаты]
					,_Fld6979 [ДатаОтгрузки]
					,_Fld6980RRef [ДисконтнаяКарта]
					,_Fld6981RRef [ДоговорКонтрагента]
					,_Fld6982 [ИспользоватьПлановуюСебестоимость]
					,_Fld6983 [ИтогПлановаяСебестоимость]
					,_Fld6984 [Комментарий]
					,_Fld6985RRef [Контрагент]
					,_Fld6986 [КратностьВзаиморасчетов]
					,_Fld6987 [КурсВзаиморасчетов]
					,_Fld6988 [НапомнитьОСобытии]
					,_Fld6989RRef [Организация]
					,_Fld6990RRef [Ответственный]
					,_Fld6991 [ОтражатьВБухгалтерскомУчете]
					,_Fld6992 [ОтражатьВНалоговомУчете]
					,_Fld6993RRef [Подразделение]
					,_Fld6994_TYPE [СтруктурнаяЕдиница_Тип],_Fld6994_RRRef [СтруктурнаяЕдиница],_Fld6994_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld6995_TYPE [СкладГруппа_Тип],_Fld6995_RRRef [СкладГруппа],_Fld6995_RTRef [СкладГруппа_Вид]
					,_Fld6996 [СуммаВключаетНДС]
					,_Fld6997 [СуммаДокумента]
					,_Fld6998RRef [ТипЦен]
					,_Fld6999 [УчитыватьНДС]
					,_Fld7000RRef [Грузополучатель]
					,_Fld7001RRef [КонтактноеЛицоКонтрагента]
					,_Fld7002RRef [УсловиеПродаж]
					,_Fld7003 [ДополнениеКАдресуДоставки]
					,_Fld7004_TYPE [ДокументОснование_Тип],_Fld7004_RRRef [ДокументОснование],_Fld7004_RTRef [ДокументОснование_Вид]
					,_Fld7005RRef [Грузоотправитель]
					,_Fld7006 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld7007 [ДатаВходящегоДокументаЭлектронногоОбмена]
					,_Fld7008 [НомерПоДаннымПокупателя]
					,_Fld7009 [ДатаПоДаннымПокупателя]
					From _Document362(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ЗаказПокупателя();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ЗаказПокупателя();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(3);
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийЗаказПокупателя.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(6);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(7);
							Ссылка.ДатаОтгрузки = Читалка.GetDateTime(8);
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(11))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(12);
							Ссылка.Комментарий = Читалка.GetString(13);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(15);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(16);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(30);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(36);
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(41);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(42);
							Ссылка.НомерПоДаннымПокупателя = Читалка.GetString(43);
							Ссылка.ДатаПоДаннымПокупателя = Читалка.GetDateTime(44);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ЗаказПокупателя ВыбратьПоНомеру(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld6974 [АдресДоставки]
					,_Fld6975RRef [ВалютаДокумента]
					,_Fld6976RRef [ВидОперации]
					,_Fld6977 [ВремяНапоминания]
					,_Fld6978 [ДатаОплаты]
					,_Fld6979 [ДатаОтгрузки]
					,_Fld6980RRef [ДисконтнаяКарта]
					,_Fld6981RRef [ДоговорКонтрагента]
					,_Fld6982 [ИспользоватьПлановуюСебестоимость]
					,_Fld6983 [ИтогПлановаяСебестоимость]
					,_Fld6984 [Комментарий]
					,_Fld6985RRef [Контрагент]
					,_Fld6986 [КратностьВзаиморасчетов]
					,_Fld6987 [КурсВзаиморасчетов]
					,_Fld6988 [НапомнитьОСобытии]
					,_Fld6989RRef [Организация]
					,_Fld6990RRef [Ответственный]
					,_Fld6991 [ОтражатьВБухгалтерскомУчете]
					,_Fld6992 [ОтражатьВНалоговомУчете]
					,_Fld6993RRef [Подразделение]
					,_Fld6994_TYPE [СтруктурнаяЕдиница_Тип],_Fld6994_RRRef [СтруктурнаяЕдиница],_Fld6994_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld6995_TYPE [СкладГруппа_Тип],_Fld6995_RRRef [СкладГруппа],_Fld6995_RTRef [СкладГруппа_Вид]
					,_Fld6996 [СуммаВключаетНДС]
					,_Fld6997 [СуммаДокумента]
					,_Fld6998RRef [ТипЦен]
					,_Fld6999 [УчитыватьНДС]
					,_Fld7000RRef [Грузополучатель]
					,_Fld7001RRef [КонтактноеЛицоКонтрагента]
					,_Fld7002RRef [УсловиеПродаж]
					,_Fld7003 [ДополнениеКАдресуДоставки]
					,_Fld7004_TYPE [ДокументОснование_Тип],_Fld7004_RRRef [ДокументОснование],_Fld7004_RTRef [ДокументОснование_Вид]
					,_Fld7005RRef [Грузоотправитель]
					,_Fld7006 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld7007 [ДатаВходящегоДокументаЭлектронногоОбмена]
					,_Fld7008 [НомерПоДаннымПокупателя]
					,_Fld7009 [ДатаПоДаннымПокупателя]
					From _Document362(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ЗаказПокупателя();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ЗаказПокупателя();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(3);
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийЗаказПокупателя.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(6);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(7);
							Ссылка.ДатаОтгрузки = Читалка.GetDateTime(8);
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(11))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(12);
							Ссылка.Комментарий = Читалка.GetString(13);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(15);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(16);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(30);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(36);
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(41);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(42);
							Ссылка.НомерПоДаннымПокупателя = Читалка.GetString(43);
							Ссылка.ДатаПоДаннымПокупателя = Читалка.GetDateTime(44);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ЗаказПокупателя СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld6974 [АдресДоставки]
					,_Fld6975RRef [ВалютаДокумента]
					,_Fld6976RRef [ВидОперации]
					,_Fld6977 [ВремяНапоминания]
					,_Fld6978 [ДатаОплаты]
					,_Fld6979 [ДатаОтгрузки]
					,_Fld6980RRef [ДисконтнаяКарта]
					,_Fld6981RRef [ДоговорКонтрагента]
					,_Fld6982 [ИспользоватьПлановуюСебестоимость]
					,_Fld6983 [ИтогПлановаяСебестоимость]
					,_Fld6984 [Комментарий]
					,_Fld6985RRef [Контрагент]
					,_Fld6986 [КратностьВзаиморасчетов]
					,_Fld6987 [КурсВзаиморасчетов]
					,_Fld6988 [НапомнитьОСобытии]
					,_Fld6989RRef [Организация]
					,_Fld6990RRef [Ответственный]
					,_Fld6991 [ОтражатьВБухгалтерскомУчете]
					,_Fld6992 [ОтражатьВНалоговомУчете]
					,_Fld6993RRef [Подразделение]
					,_Fld6994_TYPE [СтруктурнаяЕдиница_Тип],_Fld6994_RRRef [СтруктурнаяЕдиница],_Fld6994_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld6995_TYPE [СкладГруппа_Тип],_Fld6995_RRRef [СкладГруппа],_Fld6995_RTRef [СкладГруппа_Вид]
					,_Fld6996 [СуммаВключаетНДС]
					,_Fld6997 [СуммаДокумента]
					,_Fld6998RRef [ТипЦен]
					,_Fld6999 [УчитыватьНДС]
					,_Fld7000RRef [Грузополучатель]
					,_Fld7001RRef [КонтактноеЛицоКонтрагента]
					,_Fld7002RRef [УсловиеПродаж]
					,_Fld7003 [ДополнениеКАдресуДоставки]
					,_Fld7004_TYPE [ДокументОснование_Тип],_Fld7004_RRRef [ДокументОснование],_Fld7004_RTRef [ДокументОснование_Вид]
					,_Fld7005RRef [Грузоотправитель]
					,_Fld7006 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld7007 [ДатаВходящегоДокументаЭлектронногоОбмена]
					,_Fld7008 [НомерПоДаннымПокупателя]
					,_Fld7009 [ДатаПоДаннымПокупателя]
					From _Document362(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ЗаказПокупателя();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ЗаказПокупателя();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(3);
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийЗаказПокупателя.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(6);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(7);
							Ссылка.ДатаОтгрузки = Читалка.GetDateTime(8);
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(11))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(12);
							Ссылка.Комментарий = Читалка.GetString(13);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(15);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(16);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(30);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(36);
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(41);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(42);
							Ссылка.НомерПоДаннымПокупателя = Читалка.GetString(43);
							Ссылка.ДатаПоДаннымПокупателя = Читалка.GetDateTime(44);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ЗаказПокупателя СтраницаПоНомеру(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld6974 [АдресДоставки]
					,_Fld6975RRef [ВалютаДокумента]
					,_Fld6976RRef [ВидОперации]
					,_Fld6977 [ВремяНапоминания]
					,_Fld6978 [ДатаОплаты]
					,_Fld6979 [ДатаОтгрузки]
					,_Fld6980RRef [ДисконтнаяКарта]
					,_Fld6981RRef [ДоговорКонтрагента]
					,_Fld6982 [ИспользоватьПлановуюСебестоимость]
					,_Fld6983 [ИтогПлановаяСебестоимость]
					,_Fld6984 [Комментарий]
					,_Fld6985RRef [Контрагент]
					,_Fld6986 [КратностьВзаиморасчетов]
					,_Fld6987 [КурсВзаиморасчетов]
					,_Fld6988 [НапомнитьОСобытии]
					,_Fld6989RRef [Организация]
					,_Fld6990RRef [Ответственный]
					,_Fld6991 [ОтражатьВБухгалтерскомУчете]
					,_Fld6992 [ОтражатьВНалоговомУчете]
					,_Fld6993RRef [Подразделение]
					,_Fld6994_TYPE [СтруктурнаяЕдиница_Тип],_Fld6994_RRRef [СтруктурнаяЕдиница],_Fld6994_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld6995_TYPE [СкладГруппа_Тип],_Fld6995_RRRef [СкладГруппа],_Fld6995_RTRef [СкладГруппа_Вид]
					,_Fld6996 [СуммаВключаетНДС]
					,_Fld6997 [СуммаДокумента]
					,_Fld6998RRef [ТипЦен]
					,_Fld6999 [УчитыватьНДС]
					,_Fld7000RRef [Грузополучатель]
					,_Fld7001RRef [КонтактноеЛицоКонтрагента]
					,_Fld7002RRef [УсловиеПродаж]
					,_Fld7003 [ДополнениеКАдресуДоставки]
					,_Fld7004_TYPE [ДокументОснование_Тип],_Fld7004_RRRef [ДокументОснование],_Fld7004_RTRef [ДокументОснование_Вид]
					,_Fld7005RRef [Грузоотправитель]
					,_Fld7006 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld7007 [ДатаВходящегоДокументаЭлектронногоОбмена]
					,_Fld7008 [НомерПоДаннымПокупателя]
					,_Fld7009 [ДатаПоДаннымПокупателя]
					From _Document362(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ЗаказПокупателя();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ЗаказПокупателя();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(3);
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийЗаказПокупателя.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(6);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(7);
							Ссылка.ДатаОтгрузки = Читалка.GetDateTime(8);
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(11))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(12);
							Ссылка.Комментарий = Читалка.GetString(13);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(15);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(16);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(20))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(30);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(36);
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(41);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(42);
							Ссылка.НомерПоДаннымПокупателя = Читалка.GetString(43);
							Ссылка.ДатаПоДаннымПокупателя = Читалка.GetDateTime(44);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.ДокументыОбъект.ЗаказПокупателя СоздатьЭлемент()
		{
			var Объект = new V82.ДокументыОбъект.ЗаказПокупателя();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.АдресДоставки = "";
			Объект.Комментарий = "";
			Объект.ДополнениеКАдресуДоставки = "";
			Объект.НомерВходящегоДокументаЭлектронногоОбмена = "";
			Объект.НомерПоДаннымПокупателя = "";
			Объект.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийЗаказПокупателя.ПустаяСсылка;
			return Объект;
		}
	}
}