
using System;
using System.Data.SqlClient;
using V82;
using V82.ДокументыСсылка;
using V82.Документы;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Документы//Менеджер
{
	public partial class ПакетЭД:ДокументМенеджер
	{
		
		public static ДокументыСсылка.ПакетЭД НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld12062RRef [Направление]
					,_Fld12063 [Получатель]
					,_Fld12064 [Отправитель]
					,_Fld12065 [ДанныеЗашифрованы]
					,_Fld12066_TYPE [АдресРесурсаОрганизации_Тип],_Fld12066_RRRef [АдресРесурсаОрганизации],_Fld12066_RTRef [АдресРесурсаОрганизации_Вид]
					,_Fld12067 [АдресРесурсаКонтрагента]
					,_Fld12068 [СертификатШифрования]
					,_Fld12069RRef [Соглашение]
					,_Fld12070RRef [СтатусПакета]
					,_Fld12071RRef [Контрагент]
					,_Fld12072RRef [Организация]
					,_Fld12073RRef [СпособОбменаЭД]
					,_Fld12074 [Комментарий]
					,_Fld12075 [ВнешнийУИД]
					From _Document481(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПакетЭД();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Направление = V82.Перечисления/*Ссылка*/.НаправленияЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.Получатель = Читалка.GetString(4);
							Ссылка.Отправитель = Читалка.GetString(5);
							Ссылка.ДанныеЗашифрованы = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.АдресРесурсаКонтрагента = Читалка.GetString(10);
							Ссылка.СертификатШифрования = Читалка.GetString(11);
							Ссылка.СтатусПакета = V82.Перечисления/*Ссылка*/.СтатусыПакетовЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(13));
							Ссылка.СпособОбменаЭД = V82.Перечисления/*Ссылка*/.СпособыОбменаЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(16));
							Ссылка.Комментарий = Читалка.GetString(17);
							Ссылка.ВнешнийУИД = Читалка.GetString(18);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыСсылка.ПакетЭД НайтиПоНомеру(string Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld12062RRef [Направление]
					,_Fld12063 [Получатель]
					,_Fld12064 [Отправитель]
					,_Fld12065 [ДанныеЗашифрованы]
					,_Fld12066_TYPE [АдресРесурсаОрганизации_Тип],_Fld12066_RRRef [АдресРесурсаОрганизации],_Fld12066_RTRef [АдресРесурсаОрганизации_Вид]
					,_Fld12067 [АдресРесурсаКонтрагента]
					,_Fld12068 [СертификатШифрования]
					,_Fld12069RRef [Соглашение]
					,_Fld12070RRef [СтатусПакета]
					,_Fld12071RRef [Контрагент]
					,_Fld12072RRef [Организация]
					,_Fld12073RRef [СпособОбменаЭД]
					,_Fld12074 [Комментарий]
					,_Fld12075 [ВнешнийУИД]
					From _Document481(NOLOCK)
					Where _Number = @Номер";
					Команда.Parameters.AddWithValue("Номер", Номер);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПакетЭД();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Направление = V82.Перечисления/*Ссылка*/.НаправленияЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.Получатель = Читалка.GetString(4);
							Ссылка.Отправитель = Читалка.GetString(5);
							Ссылка.ДанныеЗашифрованы = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.АдресРесурсаКонтрагента = Читалка.GetString(10);
							Ссылка.СертификатШифрования = Читалка.GetString(11);
							Ссылка.СтатусПакета = V82.Перечисления/*Ссылка*/.СтатусыПакетовЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(13));
							Ссылка.СпособОбменаЭД = V82.Перечисления/*Ссылка*/.СпособыОбменаЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(16));
							Ссылка.Комментарий = Читалка.GetString(17);
							Ссылка.ВнешнийУИД = Читалка.GetString(18);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПакетЭД Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld12062RRef [Направление]
					,_Fld12063 [Получатель]
					,_Fld12064 [Отправитель]
					,_Fld12065 [ДанныеЗашифрованы]
					,_Fld12066_TYPE [АдресРесурсаОрганизации_Тип],_Fld12066_RRRef [АдресРесурсаОрганизации],_Fld12066_RTRef [АдресРесурсаОрганизации_Вид]
					,_Fld12067 [АдресРесурсаКонтрагента]
					,_Fld12068 [СертификатШифрования]
					,_Fld12069RRef [Соглашение]
					,_Fld12070RRef [СтатусПакета]
					,_Fld12071RRef [Контрагент]
					,_Fld12072RRef [Организация]
					,_Fld12073RRef [СпособОбменаЭД]
					,_Fld12074 [Комментарий]
					,_Fld12075 [ВнешнийУИД]
					From _Document481(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ПакетЭД();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПакетЭД();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Направление = V82.Перечисления/*Ссылка*/.НаправленияЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.Получатель = Читалка.GetString(4);
							Ссылка.Отправитель = Читалка.GetString(5);
							Ссылка.ДанныеЗашифрованы = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.АдресРесурсаКонтрагента = Читалка.GetString(10);
							Ссылка.СертификатШифрования = Читалка.GetString(11);
							Ссылка.СтатусПакета = V82.Перечисления/*Ссылка*/.СтатусыПакетовЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(13));
							Ссылка.СпособОбменаЭД = V82.Перечисления/*Ссылка*/.СпособыОбменаЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(16));
							Ссылка.Комментарий = Читалка.GetString(17);
							Ссылка.ВнешнийУИД = Читалка.GetString(18);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПакетЭД ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld12062RRef [Направление]
					,_Fld12063 [Получатель]
					,_Fld12064 [Отправитель]
					,_Fld12065 [ДанныеЗашифрованы]
					,_Fld12066_TYPE [АдресРесурсаОрганизации_Тип],_Fld12066_RRRef [АдресРесурсаОрганизации],_Fld12066_RTRef [АдресРесурсаОрганизации_Вид]
					,_Fld12067 [АдресРесурсаКонтрагента]
					,_Fld12068 [СертификатШифрования]
					,_Fld12069RRef [Соглашение]
					,_Fld12070RRef [СтатусПакета]
					,_Fld12071RRef [Контрагент]
					,_Fld12072RRef [Организация]
					,_Fld12073RRef [СпособОбменаЭД]
					,_Fld12074 [Комментарий]
					,_Fld12075 [ВнешнийУИД]
					From _Document481(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ПакетЭД();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПакетЭД();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Направление = V82.Перечисления/*Ссылка*/.НаправленияЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.Получатель = Читалка.GetString(4);
							Ссылка.Отправитель = Читалка.GetString(5);
							Ссылка.ДанныеЗашифрованы = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.АдресРесурсаКонтрагента = Читалка.GetString(10);
							Ссылка.СертификатШифрования = Читалка.GetString(11);
							Ссылка.СтатусПакета = V82.Перечисления/*Ссылка*/.СтатусыПакетовЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(13));
							Ссылка.СпособОбменаЭД = V82.Перечисления/*Ссылка*/.СпособыОбменаЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(16));
							Ссылка.Комментарий = Читалка.GetString(17);
							Ссылка.ВнешнийУИД = Читалка.GetString(18);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПакетЭД ВыбратьПоНомеру(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld12062RRef [Направление]
					,_Fld12063 [Получатель]
					,_Fld12064 [Отправитель]
					,_Fld12065 [ДанныеЗашифрованы]
					,_Fld12066_TYPE [АдресРесурсаОрганизации_Тип],_Fld12066_RRRef [АдресРесурсаОрганизации],_Fld12066_RTRef [АдресРесурсаОрганизации_Вид]
					,_Fld12067 [АдресРесурсаКонтрагента]
					,_Fld12068 [СертификатШифрования]
					,_Fld12069RRef [Соглашение]
					,_Fld12070RRef [СтатусПакета]
					,_Fld12071RRef [Контрагент]
					,_Fld12072RRef [Организация]
					,_Fld12073RRef [СпособОбменаЭД]
					,_Fld12074 [Комментарий]
					,_Fld12075 [ВнешнийУИД]
					From _Document481(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ПакетЭД();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПакетЭД();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Направление = V82.Перечисления/*Ссылка*/.НаправленияЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.Получатель = Читалка.GetString(4);
							Ссылка.Отправитель = Читалка.GetString(5);
							Ссылка.ДанныеЗашифрованы = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.АдресРесурсаКонтрагента = Читалка.GetString(10);
							Ссылка.СертификатШифрования = Читалка.GetString(11);
							Ссылка.СтатусПакета = V82.Перечисления/*Ссылка*/.СтатусыПакетовЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(13));
							Ссылка.СпособОбменаЭД = V82.Перечисления/*Ссылка*/.СпособыОбменаЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(16));
							Ссылка.Комментарий = Читалка.GetString(17);
							Ссылка.ВнешнийУИД = Читалка.GetString(18);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПакетЭД СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld12062RRef [Направление]
					,_Fld12063 [Получатель]
					,_Fld12064 [Отправитель]
					,_Fld12065 [ДанныеЗашифрованы]
					,_Fld12066_TYPE [АдресРесурсаОрганизации_Тип],_Fld12066_RRRef [АдресРесурсаОрганизации],_Fld12066_RTRef [АдресРесурсаОрганизации_Вид]
					,_Fld12067 [АдресРесурсаКонтрагента]
					,_Fld12068 [СертификатШифрования]
					,_Fld12069RRef [Соглашение]
					,_Fld12070RRef [СтатусПакета]
					,_Fld12071RRef [Контрагент]
					,_Fld12072RRef [Организация]
					,_Fld12073RRef [СпособОбменаЭД]
					,_Fld12074 [Комментарий]
					,_Fld12075 [ВнешнийУИД]
					From _Document481(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ПакетЭД();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПакетЭД();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Направление = V82.Перечисления/*Ссылка*/.НаправленияЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.Получатель = Читалка.GetString(4);
							Ссылка.Отправитель = Читалка.GetString(5);
							Ссылка.ДанныеЗашифрованы = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.АдресРесурсаКонтрагента = Читалка.GetString(10);
							Ссылка.СертификатШифрования = Читалка.GetString(11);
							Ссылка.СтатусПакета = V82.Перечисления/*Ссылка*/.СтатусыПакетовЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(13));
							Ссылка.СпособОбменаЭД = V82.Перечисления/*Ссылка*/.СпособыОбменаЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(16));
							Ссылка.Комментарий = Читалка.GetString(17);
							Ссылка.ВнешнийУИД = Читалка.GetString(18);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПакетЭД СтраницаПоНомеру(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld12062RRef [Направление]
					,_Fld12063 [Получатель]
					,_Fld12064 [Отправитель]
					,_Fld12065 [ДанныеЗашифрованы]
					,_Fld12066_TYPE [АдресРесурсаОрганизации_Тип],_Fld12066_RRRef [АдресРесурсаОрганизации],_Fld12066_RTRef [АдресРесурсаОрганизации_Вид]
					,_Fld12067 [АдресРесурсаКонтрагента]
					,_Fld12068 [СертификатШифрования]
					,_Fld12069RRef [Соглашение]
					,_Fld12070RRef [СтатусПакета]
					,_Fld12071RRef [Контрагент]
					,_Fld12072RRef [Организация]
					,_Fld12073RRef [СпособОбменаЭД]
					,_Fld12074 [Комментарий]
					,_Fld12075 [ВнешнийУИД]
					From _Document481(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ПакетЭД();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПакетЭД();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.Направление = V82.Перечисления/*Ссылка*/.НаправленияЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.Получатель = Читалка.GetString(4);
							Ссылка.Отправитель = Читалка.GetString(5);
							Ссылка.ДанныеЗашифрованы = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.АдресРесурсаКонтрагента = Читалка.GetString(10);
							Ссылка.СертификатШифрования = Читалка.GetString(11);
							Ссылка.СтатусПакета = V82.Перечисления/*Ссылка*/.СтатусыПакетовЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(13));
							Ссылка.СпособОбменаЭД = V82.Перечисления/*Ссылка*/.СпособыОбменаЭД.ПустаяСсылка.Получить((byte[])Читалка.GetValue(16));
							Ссылка.Комментарий = Читалка.GetString(17);
							Ссылка.ВнешнийУИД = Читалка.GetString(18);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.ДокументыОбъект.ПакетЭД СоздатьЭлемент()
		{
			var Объект = new V82.ДокументыОбъект.ПакетЭД();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.Получатель = "";
			Объект.Отправитель = "";
			Объект.АдресРесурсаКонтрагента = "";
			Объект.СертификатШифрования = "";
			Объект.Комментарий = "";
			Объект.ВнешнийУИД = "";
			Объект.Направление = V82.Перечисления/*Ссылка*/.НаправленияЭД.ПустаяСсылка;
			Объект.СтатусПакета = V82.Перечисления/*Ссылка*/.СтатусыПакетовЭД.ПустаяСсылка;
			Объект.СпособОбменаЭД = V82.Перечисления/*Ссылка*/.СпособыОбменаЭД.ПустаяСсылка;
			return Объект;
		}
	}
}