
using System;
using System.Data.SqlClient;
using V82;
using V82.ДокументыСсылка;
using V82.Документы;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Документы//Менеджер
{
	///<summary>
	///(Общ)
	///</summary>
	public partial class КорректировкаРеализации:ДокументМенеджер
	{
		
		public static ДокументыСсылка.КорректировкаРеализации НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld9402RRef [ВидОперации]
					,_Fld9403RRef [Организация]
					,_Fld9404RRef [Контрагент]
					,_Fld9405RRef [ДоговорКонтрагента]
					,_Fld9406RRef [БанковскийСчетОрганизации]
					,_Fld9407 [ОтражатьВУправленческомУчете]
					,_Fld9408 [ОтражатьВБухгалтерскомУчете]
					,_Fld9409 [ОтражатьВНалоговомУчете]
					,_Fld9410RRef [ВалютаДокумента]
					,_Fld9411 [КратностьВзаиморасчетов]
					,_Fld9412 [КурсВзаиморасчетов]
					,_Fld9413RRef [Грузоотправитель]
					,_Fld9414RRef [Грузополучатель]
					,_Fld9415RRef [ДисконтнаяКарта]
					,_Fld9416 [Комментарий]
					,_Fld9417RRef [Ответственный]
					,_Fld9418RRef [Подразделение]
					,_Fld9419_TYPE [Проект_Тип],_Fld9419_RRRef [Проект],_Fld9419_RTRef [Проект_Вид]
					,_Fld9420_TYPE [Сделка_Тип],_Fld9420_RRRef [Сделка],_Fld9420_RTRef [Сделка_Вид]
					,_Fld9421RRef [Склад]
					,_Fld9422 [УчитыватьНДС]
					,_Fld9423 [СуммаВключаетНДС]
					,_Fld9424 [СуммаДокумента]
					,_Fld9425RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld9426RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld9427RRef [ТипЦен]
					,_Fld9428RRef [УсловиеПродаж]
					,_Fld9429_TYPE [ДокументРеализации_Тип],_Fld9429_RRRef [ДокументРеализации],_Fld9429_RTRef [ДокументРеализации_Вид]
					,_Fld9430_TYPE [ИсправляемыйДокументРеализации_Тип],_Fld9430_RRRef [ИсправляемыйДокументРеализации],_Fld9430_RTRef [ИсправляемыйДокументРеализации_Вид]
					,_Fld9431 [КорректироватьБУиНУ]
					,_Fld9432 [ОтчетностьПодписана]
					,_Fld9433RRef [СтатьяПрочихДоходовИРасходов]
					,_Fld9434RRef [ПодразделениеОрганизации]
					,_Fld9435 [АдресДоставки]
					,_Fld9436 [ДополнениеКАдресуДоставки]
					From _Document430(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.КорректировкаРеализации();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийИсправленияПоступленияРеализации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(8))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(9))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(10))[0]==1;
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(12);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.Комментарий = Читалка.GetString(17);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(28))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(29);
							Ссылка.КорректироватьБУиНУ = ((byte[])Читалка.GetValue(40))[0]==1;
							Ссылка.ОтчетностьПодписана = ((byte[])Читалка.GetValue(41))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(44);
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(45);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыСсылка.КорректировкаРеализации НайтиПоНомеру(string Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld9402RRef [ВидОперации]
					,_Fld9403RRef [Организация]
					,_Fld9404RRef [Контрагент]
					,_Fld9405RRef [ДоговорКонтрагента]
					,_Fld9406RRef [БанковскийСчетОрганизации]
					,_Fld9407 [ОтражатьВУправленческомУчете]
					,_Fld9408 [ОтражатьВБухгалтерскомУчете]
					,_Fld9409 [ОтражатьВНалоговомУчете]
					,_Fld9410RRef [ВалютаДокумента]
					,_Fld9411 [КратностьВзаиморасчетов]
					,_Fld9412 [КурсВзаиморасчетов]
					,_Fld9413RRef [Грузоотправитель]
					,_Fld9414RRef [Грузополучатель]
					,_Fld9415RRef [ДисконтнаяКарта]
					,_Fld9416 [Комментарий]
					,_Fld9417RRef [Ответственный]
					,_Fld9418RRef [Подразделение]
					,_Fld9419_TYPE [Проект_Тип],_Fld9419_RRRef [Проект],_Fld9419_RTRef [Проект_Вид]
					,_Fld9420_TYPE [Сделка_Тип],_Fld9420_RRRef [Сделка],_Fld9420_RTRef [Сделка_Вид]
					,_Fld9421RRef [Склад]
					,_Fld9422 [УчитыватьНДС]
					,_Fld9423 [СуммаВключаетНДС]
					,_Fld9424 [СуммаДокумента]
					,_Fld9425RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld9426RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld9427RRef [ТипЦен]
					,_Fld9428RRef [УсловиеПродаж]
					,_Fld9429_TYPE [ДокументРеализации_Тип],_Fld9429_RRRef [ДокументРеализации],_Fld9429_RTRef [ДокументРеализации_Вид]
					,_Fld9430_TYPE [ИсправляемыйДокументРеализации_Тип],_Fld9430_RRRef [ИсправляемыйДокументРеализации],_Fld9430_RTRef [ИсправляемыйДокументРеализации_Вид]
					,_Fld9431 [КорректироватьБУиНУ]
					,_Fld9432 [ОтчетностьПодписана]
					,_Fld9433RRef [СтатьяПрочихДоходовИРасходов]
					,_Fld9434RRef [ПодразделениеОрганизации]
					,_Fld9435 [АдресДоставки]
					,_Fld9436 [ДополнениеКАдресуДоставки]
					From _Document430(NOLOCK)
					Where _Number = @Номер";
					Команда.Parameters.AddWithValue("Номер", Номер);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.КорректировкаРеализации();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийИсправленияПоступленияРеализации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(8))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(9))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(10))[0]==1;
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(12);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.Комментарий = Читалка.GetString(17);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(28))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(29);
							Ссылка.КорректироватьБУиНУ = ((byte[])Читалка.GetValue(40))[0]==1;
							Ссылка.ОтчетностьПодписана = ((byte[])Читалка.GetValue(41))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(44);
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(45);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыВыборка.КорректировкаРеализации Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld9402RRef [ВидОперации]
					,_Fld9403RRef [Организация]
					,_Fld9404RRef [Контрагент]
					,_Fld9405RRef [ДоговорКонтрагента]
					,_Fld9406RRef [БанковскийСчетОрганизации]
					,_Fld9407 [ОтражатьВУправленческомУчете]
					,_Fld9408 [ОтражатьВБухгалтерскомУчете]
					,_Fld9409 [ОтражатьВНалоговомУчете]
					,_Fld9410RRef [ВалютаДокумента]
					,_Fld9411 [КратностьВзаиморасчетов]
					,_Fld9412 [КурсВзаиморасчетов]
					,_Fld9413RRef [Грузоотправитель]
					,_Fld9414RRef [Грузополучатель]
					,_Fld9415RRef [ДисконтнаяКарта]
					,_Fld9416 [Комментарий]
					,_Fld9417RRef [Ответственный]
					,_Fld9418RRef [Подразделение]
					,_Fld9419_TYPE [Проект_Тип],_Fld9419_RRRef [Проект],_Fld9419_RTRef [Проект_Вид]
					,_Fld9420_TYPE [Сделка_Тип],_Fld9420_RRRef [Сделка],_Fld9420_RTRef [Сделка_Вид]
					,_Fld9421RRef [Склад]
					,_Fld9422 [УчитыватьНДС]
					,_Fld9423 [СуммаВключаетНДС]
					,_Fld9424 [СуммаДокумента]
					,_Fld9425RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld9426RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld9427RRef [ТипЦен]
					,_Fld9428RRef [УсловиеПродаж]
					,_Fld9429_TYPE [ДокументРеализации_Тип],_Fld9429_RRRef [ДокументРеализации],_Fld9429_RTRef [ДокументРеализации_Вид]
					,_Fld9430_TYPE [ИсправляемыйДокументРеализации_Тип],_Fld9430_RRRef [ИсправляемыйДокументРеализации],_Fld9430_RTRef [ИсправляемыйДокументРеализации_Вид]
					,_Fld9431 [КорректироватьБУиНУ]
					,_Fld9432 [ОтчетностьПодписана]
					,_Fld9433RRef [СтатьяПрочихДоходовИРасходов]
					,_Fld9434RRef [ПодразделениеОрганизации]
					,_Fld9435 [АдресДоставки]
					,_Fld9436 [ДополнениеКАдресуДоставки]
					From _Document430(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.КорректировкаРеализации();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.КорректировкаРеализации();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийИсправленияПоступленияРеализации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(8))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(9))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(10))[0]==1;
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(12);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.Комментарий = Читалка.GetString(17);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(28))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(29);
							Ссылка.КорректироватьБУиНУ = ((byte[])Читалка.GetValue(40))[0]==1;
							Ссылка.ОтчетностьПодписана = ((byte[])Читалка.GetValue(41))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(44);
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(45);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.КорректировкаРеализации ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld9402RRef [ВидОперации]
					,_Fld9403RRef [Организация]
					,_Fld9404RRef [Контрагент]
					,_Fld9405RRef [ДоговорКонтрагента]
					,_Fld9406RRef [БанковскийСчетОрганизации]
					,_Fld9407 [ОтражатьВУправленческомУчете]
					,_Fld9408 [ОтражатьВБухгалтерскомУчете]
					,_Fld9409 [ОтражатьВНалоговомУчете]
					,_Fld9410RRef [ВалютаДокумента]
					,_Fld9411 [КратностьВзаиморасчетов]
					,_Fld9412 [КурсВзаиморасчетов]
					,_Fld9413RRef [Грузоотправитель]
					,_Fld9414RRef [Грузополучатель]
					,_Fld9415RRef [ДисконтнаяКарта]
					,_Fld9416 [Комментарий]
					,_Fld9417RRef [Ответственный]
					,_Fld9418RRef [Подразделение]
					,_Fld9419_TYPE [Проект_Тип],_Fld9419_RRRef [Проект],_Fld9419_RTRef [Проект_Вид]
					,_Fld9420_TYPE [Сделка_Тип],_Fld9420_RRRef [Сделка],_Fld9420_RTRef [Сделка_Вид]
					,_Fld9421RRef [Склад]
					,_Fld9422 [УчитыватьНДС]
					,_Fld9423 [СуммаВключаетНДС]
					,_Fld9424 [СуммаДокумента]
					,_Fld9425RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld9426RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld9427RRef [ТипЦен]
					,_Fld9428RRef [УсловиеПродаж]
					,_Fld9429_TYPE [ДокументРеализации_Тип],_Fld9429_RRRef [ДокументРеализации],_Fld9429_RTRef [ДокументРеализации_Вид]
					,_Fld9430_TYPE [ИсправляемыйДокументРеализации_Тип],_Fld9430_RRRef [ИсправляемыйДокументРеализации],_Fld9430_RTRef [ИсправляемыйДокументРеализации_Вид]
					,_Fld9431 [КорректироватьБУиНУ]
					,_Fld9432 [ОтчетностьПодписана]
					,_Fld9433RRef [СтатьяПрочихДоходовИРасходов]
					,_Fld9434RRef [ПодразделениеОрганизации]
					,_Fld9435 [АдресДоставки]
					,_Fld9436 [ДополнениеКАдресуДоставки]
					From _Document430(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.КорректировкаРеализации();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.КорректировкаРеализации();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийИсправленияПоступленияРеализации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(8))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(9))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(10))[0]==1;
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(12);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.Комментарий = Читалка.GetString(17);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(28))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(29);
							Ссылка.КорректироватьБУиНУ = ((byte[])Читалка.GetValue(40))[0]==1;
							Ссылка.ОтчетностьПодписана = ((byte[])Читалка.GetValue(41))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(44);
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(45);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.КорректировкаРеализации ВыбратьПоНомеру(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld9402RRef [ВидОперации]
					,_Fld9403RRef [Организация]
					,_Fld9404RRef [Контрагент]
					,_Fld9405RRef [ДоговорКонтрагента]
					,_Fld9406RRef [БанковскийСчетОрганизации]
					,_Fld9407 [ОтражатьВУправленческомУчете]
					,_Fld9408 [ОтражатьВБухгалтерскомУчете]
					,_Fld9409 [ОтражатьВНалоговомУчете]
					,_Fld9410RRef [ВалютаДокумента]
					,_Fld9411 [КратностьВзаиморасчетов]
					,_Fld9412 [КурсВзаиморасчетов]
					,_Fld9413RRef [Грузоотправитель]
					,_Fld9414RRef [Грузополучатель]
					,_Fld9415RRef [ДисконтнаяКарта]
					,_Fld9416 [Комментарий]
					,_Fld9417RRef [Ответственный]
					,_Fld9418RRef [Подразделение]
					,_Fld9419_TYPE [Проект_Тип],_Fld9419_RRRef [Проект],_Fld9419_RTRef [Проект_Вид]
					,_Fld9420_TYPE [Сделка_Тип],_Fld9420_RRRef [Сделка],_Fld9420_RTRef [Сделка_Вид]
					,_Fld9421RRef [Склад]
					,_Fld9422 [УчитыватьНДС]
					,_Fld9423 [СуммаВключаетНДС]
					,_Fld9424 [СуммаДокумента]
					,_Fld9425RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld9426RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld9427RRef [ТипЦен]
					,_Fld9428RRef [УсловиеПродаж]
					,_Fld9429_TYPE [ДокументРеализации_Тип],_Fld9429_RRRef [ДокументРеализации],_Fld9429_RTRef [ДокументРеализации_Вид]
					,_Fld9430_TYPE [ИсправляемыйДокументРеализации_Тип],_Fld9430_RRRef [ИсправляемыйДокументРеализации],_Fld9430_RTRef [ИсправляемыйДокументРеализации_Вид]
					,_Fld9431 [КорректироватьБУиНУ]
					,_Fld9432 [ОтчетностьПодписана]
					,_Fld9433RRef [СтатьяПрочихДоходовИРасходов]
					,_Fld9434RRef [ПодразделениеОрганизации]
					,_Fld9435 [АдресДоставки]
					,_Fld9436 [ДополнениеКАдресуДоставки]
					From _Document430(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.КорректировкаРеализации();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.КорректировкаРеализации();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийИсправленияПоступленияРеализации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(8))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(9))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(10))[0]==1;
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(12);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.Комментарий = Читалка.GetString(17);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(28))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(29);
							Ссылка.КорректироватьБУиНУ = ((byte[])Читалка.GetValue(40))[0]==1;
							Ссылка.ОтчетностьПодписана = ((byte[])Читалка.GetValue(41))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(44);
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(45);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.КорректировкаРеализации СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld9402RRef [ВидОперации]
					,_Fld9403RRef [Организация]
					,_Fld9404RRef [Контрагент]
					,_Fld9405RRef [ДоговорКонтрагента]
					,_Fld9406RRef [БанковскийСчетОрганизации]
					,_Fld9407 [ОтражатьВУправленческомУчете]
					,_Fld9408 [ОтражатьВБухгалтерскомУчете]
					,_Fld9409 [ОтражатьВНалоговомУчете]
					,_Fld9410RRef [ВалютаДокумента]
					,_Fld9411 [КратностьВзаиморасчетов]
					,_Fld9412 [КурсВзаиморасчетов]
					,_Fld9413RRef [Грузоотправитель]
					,_Fld9414RRef [Грузополучатель]
					,_Fld9415RRef [ДисконтнаяКарта]
					,_Fld9416 [Комментарий]
					,_Fld9417RRef [Ответственный]
					,_Fld9418RRef [Подразделение]
					,_Fld9419_TYPE [Проект_Тип],_Fld9419_RRRef [Проект],_Fld9419_RTRef [Проект_Вид]
					,_Fld9420_TYPE [Сделка_Тип],_Fld9420_RRRef [Сделка],_Fld9420_RTRef [Сделка_Вид]
					,_Fld9421RRef [Склад]
					,_Fld9422 [УчитыватьНДС]
					,_Fld9423 [СуммаВключаетНДС]
					,_Fld9424 [СуммаДокумента]
					,_Fld9425RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld9426RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld9427RRef [ТипЦен]
					,_Fld9428RRef [УсловиеПродаж]
					,_Fld9429_TYPE [ДокументРеализации_Тип],_Fld9429_RRRef [ДокументРеализации],_Fld9429_RTRef [ДокументРеализации_Вид]
					,_Fld9430_TYPE [ИсправляемыйДокументРеализации_Тип],_Fld9430_RRRef [ИсправляемыйДокументРеализации],_Fld9430_RTRef [ИсправляемыйДокументРеализации_Вид]
					,_Fld9431 [КорректироватьБУиНУ]
					,_Fld9432 [ОтчетностьПодписана]
					,_Fld9433RRef [СтатьяПрочихДоходовИРасходов]
					,_Fld9434RRef [ПодразделениеОрганизации]
					,_Fld9435 [АдресДоставки]
					,_Fld9436 [ДополнениеКАдресуДоставки]
					From _Document430(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.КорректировкаРеализации();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.КорректировкаРеализации();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийИсправленияПоступленияРеализации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(8))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(9))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(10))[0]==1;
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(12);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.Комментарий = Читалка.GetString(17);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(28))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(29);
							Ссылка.КорректироватьБУиНУ = ((byte[])Читалка.GetValue(40))[0]==1;
							Ссылка.ОтчетностьПодписана = ((byte[])Читалка.GetValue(41))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(44);
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(45);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.КорректировкаРеализации СтраницаПоНомеру(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld9402RRef [ВидОперации]
					,_Fld9403RRef [Организация]
					,_Fld9404RRef [Контрагент]
					,_Fld9405RRef [ДоговорКонтрагента]
					,_Fld9406RRef [БанковскийСчетОрганизации]
					,_Fld9407 [ОтражатьВУправленческомУчете]
					,_Fld9408 [ОтражатьВБухгалтерскомУчете]
					,_Fld9409 [ОтражатьВНалоговомУчете]
					,_Fld9410RRef [ВалютаДокумента]
					,_Fld9411 [КратностьВзаиморасчетов]
					,_Fld9412 [КурсВзаиморасчетов]
					,_Fld9413RRef [Грузоотправитель]
					,_Fld9414RRef [Грузополучатель]
					,_Fld9415RRef [ДисконтнаяКарта]
					,_Fld9416 [Комментарий]
					,_Fld9417RRef [Ответственный]
					,_Fld9418RRef [Подразделение]
					,_Fld9419_TYPE [Проект_Тип],_Fld9419_RRRef [Проект],_Fld9419_RTRef [Проект_Вид]
					,_Fld9420_TYPE [Сделка_Тип],_Fld9420_RRRef [Сделка],_Fld9420_RTRef [Сделка_Вид]
					,_Fld9421RRef [Склад]
					,_Fld9422 [УчитыватьНДС]
					,_Fld9423 [СуммаВключаетНДС]
					,_Fld9424 [СуммаДокумента]
					,_Fld9425RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld9426RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld9427RRef [ТипЦен]
					,_Fld9428RRef [УсловиеПродаж]
					,_Fld9429_TYPE [ДокументРеализации_Тип],_Fld9429_RRRef [ДокументРеализации],_Fld9429_RTRef [ДокументРеализации_Вид]
					,_Fld9430_TYPE [ИсправляемыйДокументРеализации_Тип],_Fld9430_RRRef [ИсправляемыйДокументРеализации],_Fld9430_RTRef [ИсправляемыйДокументРеализации_Вид]
					,_Fld9431 [КорректироватьБУиНУ]
					,_Fld9432 [ОтчетностьПодписана]
					,_Fld9433RRef [СтатьяПрочихДоходовИРасходов]
					,_Fld9434RRef [ПодразделениеОрганизации]
					,_Fld9435 [АдресДоставки]
					,_Fld9436 [ДополнениеКАдресуДоставки]
					From _Document430(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.КорректировкаРеализации();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.КорректировкаРеализации();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийИсправленияПоступленияРеализации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(8))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(9))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(10))[0]==1;
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(12);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.Комментарий = Читалка.GetString(17);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(28))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(29);
							Ссылка.КорректироватьБУиНУ = ((byte[])Читалка.GetValue(40))[0]==1;
							Ссылка.ОтчетностьПодписана = ((byte[])Читалка.GetValue(41))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(44);
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(45);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.ДокументыОбъект.КорректировкаРеализации СоздатьЭлемент()
		{
			var Объект = new V82.ДокументыОбъект.КорректировкаРеализации();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.Комментарий = "";
			Объект.АдресДоставки = "";
			Объект.ДополнениеКАдресуДоставки = "";
			Объект.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийИсправленияПоступленияРеализации.ПустаяСсылка;
			return Объект;
		}
	}
}