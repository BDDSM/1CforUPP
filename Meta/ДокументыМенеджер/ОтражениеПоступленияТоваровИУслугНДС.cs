
using System;
using System.Data.SqlClient;
using V82;
using V82.ДокументыСсылка;
using V82.Документы;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Документы//Менеджер
{
	public partial class ОтражениеПоступленияТоваровИУслугНДС:ДокументМенеджер
	{
		
		public static ДокументыСсылка.ОтражениеПоступленияТоваровИУслугНДС НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld7120RRef [ВалютаДокумента]
					,_Fld7116RRef [ДоговорКонтрагента]
					,_Fld21759 [ИспользоватьДокументРасчетовКакСчетФактуру]
					,_Fld7118 [Комментарий]
					,_Fld7115RRef [Контрагент]
					,_Fld21757 [КратностьВзаиморасчетов]
					,_Fld21758 [КурсВзаиморасчетов]
					,_Fld21756 [НДСВключенВСтоимость]
					,_Fld7114RRef [Организация]
					,_Fld7122 [ПрямаяЗаписьВКнигу]
					,_Fld7117_TYPE [РасчетныйДокумент_Тип],_Fld7117_RRRef [РасчетныйДокумент],_Fld7117_RTRef [РасчетныйДокумент_Вид]
					,_Fld21755 [СуммаВключаетНДС]
					,_Fld7121 [СуммаДокумента]
					,_Fld21762RRef [ТипЦен]
					,_Fld21754 [ФормироватьПроводки]
					,_Fld19499 [ДатаВходящегоДокумента]
					,_Fld19500 [НомерВходящегоДокумента]
					,_Fld21760 [ЗаписьДополнительногоЛиста]
					,_Fld21761 [КорректируемыйПериод]
					From _Document350(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ОтражениеПоступленияТоваровИУслугНДС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ИспользоватьДокументРасчетовКакСчетФактуру = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(6);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(8);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(9);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(10))[0]==1;
							Ссылка.ПрямаяЗаписьВКнигу = ((byte[])Читалка.GetValue(12))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(17);
							Ссылка.ФормироватьПроводки = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(20);
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(21);
							Ссылка.ЗаписьДополнительногоЛиста = ((byte[])Читалка.GetValue(22))[0]==1;
							Ссылка.КорректируемыйПериод = Читалка.GetDateTime(23);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыСсылка.ОтражениеПоступленияТоваровИУслугНДС НайтиПоНомеру(string Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld7120RRef [ВалютаДокумента]
					,_Fld7116RRef [ДоговорКонтрагента]
					,_Fld21759 [ИспользоватьДокументРасчетовКакСчетФактуру]
					,_Fld7118 [Комментарий]
					,_Fld7115RRef [Контрагент]
					,_Fld21757 [КратностьВзаиморасчетов]
					,_Fld21758 [КурсВзаиморасчетов]
					,_Fld21756 [НДСВключенВСтоимость]
					,_Fld7114RRef [Организация]
					,_Fld7122 [ПрямаяЗаписьВКнигу]
					,_Fld7117_TYPE [РасчетныйДокумент_Тип],_Fld7117_RRRef [РасчетныйДокумент],_Fld7117_RTRef [РасчетныйДокумент_Вид]
					,_Fld21755 [СуммаВключаетНДС]
					,_Fld7121 [СуммаДокумента]
					,_Fld21762RRef [ТипЦен]
					,_Fld21754 [ФормироватьПроводки]
					,_Fld19499 [ДатаВходящегоДокумента]
					,_Fld19500 [НомерВходящегоДокумента]
					,_Fld21760 [ЗаписьДополнительногоЛиста]
					,_Fld21761 [КорректируемыйПериод]
					From _Document350(NOLOCK)
					Where _Number = @Номер";
					Команда.Parameters.AddWithValue("Номер", Номер);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ОтражениеПоступленияТоваровИУслугНДС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ИспользоватьДокументРасчетовКакСчетФактуру = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(6);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(8);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(9);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(10))[0]==1;
							Ссылка.ПрямаяЗаписьВКнигу = ((byte[])Читалка.GetValue(12))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(17);
							Ссылка.ФормироватьПроводки = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(20);
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(21);
							Ссылка.ЗаписьДополнительногоЛиста = ((byte[])Читалка.GetValue(22))[0]==1;
							Ссылка.КорректируемыйПериод = Читалка.GetDateTime(23);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыВыборка.ОтражениеПоступленияТоваровИУслугНДС Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld7120RRef [ВалютаДокумента]
					,_Fld7116RRef [ДоговорКонтрагента]
					,_Fld21759 [ИспользоватьДокументРасчетовКакСчетФактуру]
					,_Fld7118 [Комментарий]
					,_Fld7115RRef [Контрагент]
					,_Fld21757 [КратностьВзаиморасчетов]
					,_Fld21758 [КурсВзаиморасчетов]
					,_Fld21756 [НДСВключенВСтоимость]
					,_Fld7114RRef [Организация]
					,_Fld7122 [ПрямаяЗаписьВКнигу]
					,_Fld7117_TYPE [РасчетныйДокумент_Тип],_Fld7117_RRRef [РасчетныйДокумент],_Fld7117_RTRef [РасчетныйДокумент_Вид]
					,_Fld21755 [СуммаВключаетНДС]
					,_Fld7121 [СуммаДокумента]
					,_Fld21762RRef [ТипЦен]
					,_Fld21754 [ФормироватьПроводки]
					,_Fld19499 [ДатаВходящегоДокумента]
					,_Fld19500 [НомерВходящегоДокумента]
					,_Fld21760 [ЗаписьДополнительногоЛиста]
					,_Fld21761 [КорректируемыйПериод]
					From _Document350(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ОтражениеПоступленияТоваровИУслугНДС();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ОтражениеПоступленияТоваровИУслугНДС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ИспользоватьДокументРасчетовКакСчетФактуру = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(6);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(8);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(9);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(10))[0]==1;
							Ссылка.ПрямаяЗаписьВКнигу = ((byte[])Читалка.GetValue(12))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(17);
							Ссылка.ФормироватьПроводки = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(20);
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(21);
							Ссылка.ЗаписьДополнительногоЛиста = ((byte[])Читалка.GetValue(22))[0]==1;
							Ссылка.КорректируемыйПериод = Читалка.GetDateTime(23);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ОтражениеПоступленияТоваровИУслугНДС ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld7120RRef [ВалютаДокумента]
					,_Fld7116RRef [ДоговорКонтрагента]
					,_Fld21759 [ИспользоватьДокументРасчетовКакСчетФактуру]
					,_Fld7118 [Комментарий]
					,_Fld7115RRef [Контрагент]
					,_Fld21757 [КратностьВзаиморасчетов]
					,_Fld21758 [КурсВзаиморасчетов]
					,_Fld21756 [НДСВключенВСтоимость]
					,_Fld7114RRef [Организация]
					,_Fld7122 [ПрямаяЗаписьВКнигу]
					,_Fld7117_TYPE [РасчетныйДокумент_Тип],_Fld7117_RRRef [РасчетныйДокумент],_Fld7117_RTRef [РасчетныйДокумент_Вид]
					,_Fld21755 [СуммаВключаетНДС]
					,_Fld7121 [СуммаДокумента]
					,_Fld21762RRef [ТипЦен]
					,_Fld21754 [ФормироватьПроводки]
					,_Fld19499 [ДатаВходящегоДокумента]
					,_Fld19500 [НомерВходящегоДокумента]
					,_Fld21760 [ЗаписьДополнительногоЛиста]
					,_Fld21761 [КорректируемыйПериод]
					From _Document350(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ОтражениеПоступленияТоваровИУслугНДС();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ОтражениеПоступленияТоваровИУслугНДС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ИспользоватьДокументРасчетовКакСчетФактуру = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(6);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(8);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(9);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(10))[0]==1;
							Ссылка.ПрямаяЗаписьВКнигу = ((byte[])Читалка.GetValue(12))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(17);
							Ссылка.ФормироватьПроводки = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(20);
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(21);
							Ссылка.ЗаписьДополнительногоЛиста = ((byte[])Читалка.GetValue(22))[0]==1;
							Ссылка.КорректируемыйПериод = Читалка.GetDateTime(23);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ОтражениеПоступленияТоваровИУслугНДС ВыбратьПоНомеру(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld7120RRef [ВалютаДокумента]
					,_Fld7116RRef [ДоговорКонтрагента]
					,_Fld21759 [ИспользоватьДокументРасчетовКакСчетФактуру]
					,_Fld7118 [Комментарий]
					,_Fld7115RRef [Контрагент]
					,_Fld21757 [КратностьВзаиморасчетов]
					,_Fld21758 [КурсВзаиморасчетов]
					,_Fld21756 [НДСВключенВСтоимость]
					,_Fld7114RRef [Организация]
					,_Fld7122 [ПрямаяЗаписьВКнигу]
					,_Fld7117_TYPE [РасчетныйДокумент_Тип],_Fld7117_RRRef [РасчетныйДокумент],_Fld7117_RTRef [РасчетныйДокумент_Вид]
					,_Fld21755 [СуммаВключаетНДС]
					,_Fld7121 [СуммаДокумента]
					,_Fld21762RRef [ТипЦен]
					,_Fld21754 [ФормироватьПроводки]
					,_Fld19499 [ДатаВходящегоДокумента]
					,_Fld19500 [НомерВходящегоДокумента]
					,_Fld21760 [ЗаписьДополнительногоЛиста]
					,_Fld21761 [КорректируемыйПериод]
					From _Document350(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ОтражениеПоступленияТоваровИУслугНДС();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ОтражениеПоступленияТоваровИУслугНДС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ИспользоватьДокументРасчетовКакСчетФактуру = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(6);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(8);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(9);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(10))[0]==1;
							Ссылка.ПрямаяЗаписьВКнигу = ((byte[])Читалка.GetValue(12))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(17);
							Ссылка.ФормироватьПроводки = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(20);
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(21);
							Ссылка.ЗаписьДополнительногоЛиста = ((byte[])Читалка.GetValue(22))[0]==1;
							Ссылка.КорректируемыйПериод = Читалка.GetDateTime(23);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ОтражениеПоступленияТоваровИУслугНДС СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld7120RRef [ВалютаДокумента]
					,_Fld7116RRef [ДоговорКонтрагента]
					,_Fld21759 [ИспользоватьДокументРасчетовКакСчетФактуру]
					,_Fld7118 [Комментарий]
					,_Fld7115RRef [Контрагент]
					,_Fld21757 [КратностьВзаиморасчетов]
					,_Fld21758 [КурсВзаиморасчетов]
					,_Fld21756 [НДСВключенВСтоимость]
					,_Fld7114RRef [Организация]
					,_Fld7122 [ПрямаяЗаписьВКнигу]
					,_Fld7117_TYPE [РасчетныйДокумент_Тип],_Fld7117_RRRef [РасчетныйДокумент],_Fld7117_RTRef [РасчетныйДокумент_Вид]
					,_Fld21755 [СуммаВключаетНДС]
					,_Fld7121 [СуммаДокумента]
					,_Fld21762RRef [ТипЦен]
					,_Fld21754 [ФормироватьПроводки]
					,_Fld19499 [ДатаВходящегоДокумента]
					,_Fld19500 [НомерВходящегоДокумента]
					,_Fld21760 [ЗаписьДополнительногоЛиста]
					,_Fld21761 [КорректируемыйПериод]
					From _Document350(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ОтражениеПоступленияТоваровИУслугНДС();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ОтражениеПоступленияТоваровИУслугНДС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ИспользоватьДокументРасчетовКакСчетФактуру = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(6);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(8);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(9);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(10))[0]==1;
							Ссылка.ПрямаяЗаписьВКнигу = ((byte[])Читалка.GetValue(12))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(17);
							Ссылка.ФормироватьПроводки = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(20);
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(21);
							Ссылка.ЗаписьДополнительногоЛиста = ((byte[])Читалка.GetValue(22))[0]==1;
							Ссылка.КорректируемыйПериод = Читалка.GetDateTime(23);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ОтражениеПоступленияТоваровИУслугНДС СтраницаПоНомеру(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld7120RRef [ВалютаДокумента]
					,_Fld7116RRef [ДоговорКонтрагента]
					,_Fld21759 [ИспользоватьДокументРасчетовКакСчетФактуру]
					,_Fld7118 [Комментарий]
					,_Fld7115RRef [Контрагент]
					,_Fld21757 [КратностьВзаиморасчетов]
					,_Fld21758 [КурсВзаиморасчетов]
					,_Fld21756 [НДСВключенВСтоимость]
					,_Fld7114RRef [Организация]
					,_Fld7122 [ПрямаяЗаписьВКнигу]
					,_Fld7117_TYPE [РасчетныйДокумент_Тип],_Fld7117_RRRef [РасчетныйДокумент],_Fld7117_RTRef [РасчетныйДокумент_Вид]
					,_Fld21755 [СуммаВключаетНДС]
					,_Fld7121 [СуммаДокумента]
					,_Fld21762RRef [ТипЦен]
					,_Fld21754 [ФормироватьПроводки]
					,_Fld19499 [ДатаВходящегоДокумента]
					,_Fld19500 [НомерВходящегоДокумента]
					,_Fld21760 [ЗаписьДополнительногоЛиста]
					,_Fld21761 [КорректируемыйПериод]
					From _Document350(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ОтражениеПоступленияТоваровИУслугНДС();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ОтражениеПоступленияТоваровИУслугНДС();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ИспользоватьДокументРасчетовКакСчетФактуру = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(6);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(8);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(9);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(10))[0]==1;
							Ссылка.ПрямаяЗаписьВКнигу = ((byte[])Читалка.GetValue(12))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(17);
							Ссылка.ФормироватьПроводки = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(20);
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(21);
							Ссылка.ЗаписьДополнительногоЛиста = ((byte[])Читалка.GetValue(22))[0]==1;
							Ссылка.КорректируемыйПериод = Читалка.GetDateTime(23);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.ДокументыОбъект.ОтражениеПоступленияТоваровИУслугНДС СоздатьЭлемент()
		{
			var Объект = new V82.ДокументыОбъект.ОтражениеПоступленияТоваровИУслугНДС();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.Комментарий = "";
			Объект.НомерВходящегоДокумента = "";
			return Объект;
		}
	}
}