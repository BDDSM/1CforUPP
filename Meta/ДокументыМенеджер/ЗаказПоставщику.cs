
using System;
using System.Data.SqlClient;
using V82;
using V82.ДокументыСсылка;
using V82.Документы;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Документы//Менеджер
{
	///<summary>
	///(Упр)
	///</summary>
	public partial class ЗаказПоставщику:ДокументМенеджер
	{
		
		public static ДокументыСсылка.ЗаказПоставщику НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld7101RRef [ВалютаДокумента]
					,_Fld7102RRef [ВидОперации]
					,_Fld7103 [ВремяНапоминания]
					,_Fld7104 [ДатаОплаты]
					,_Fld7105 [ДатаПоступления]
					,_Fld7106RRef [ДоговорКонтрагента]
					,_Fld7107 [ИспользоватьПлановуюСебестоимость]
					,_Fld7108 [ИтогПлановаяСебестоимость]
					,_Fld7109 [Комментарий]
					,_Fld7110RRef [Контрагент]
					,_Fld7111 [КратностьВзаиморасчетов]
					,_Fld7112 [КурсВзаиморасчетов]
					,_Fld7113 [НапомнитьОСобытии]
					,_Fld7114RRef [Организация]
					,_Fld7115RRef [Ответственный]
					,_Fld7116RRef [Подразделение]
					,_Fld7117RRef [Склад]
					,_Fld7118_TYPE [СтруктурнаяЕдиница_Тип],_Fld7118_RRRef [СтруктурнаяЕдиница],_Fld7118_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld7119 [СуммаВключаетНДС]
					,_Fld7120 [СуммаДокумента]
					,_Fld7121RRef [ТипЦен]
					,_Fld7122 [УчитыватьНДС]
					,_Fld7123RRef [КонтактноеЛицоКонтрагента]
					,_Fld7124RRef [УсловиеПродаж]
					,_Fld7125_TYPE [ДокументОснование_Тип],_Fld7125_RRRef [ДокументОснование],_Fld7125_RTRef [ДокументОснование_Вид]
					,_Fld7126 [НомерПоДаннымПоставщика]
					,_Fld7127 [ДатаПоДаннымПоставщика]
					From _Document363(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ЗаказПоставщику();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийЗаказПоставщику.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(5);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(6);
							Ссылка.ДатаПоступления = Читалка.GetDateTime(7);
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(9))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(10);
							Ссылка.Комментарий = Читалка.GetString(11);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(14);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(15))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(23))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(24);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.НомерПоДаннымПоставщика = Читалка.GetString(32);
							Ссылка.ДатаПоДаннымПоставщика = Читалка.GetDateTime(33);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыСсылка.ЗаказПоставщику НайтиПоНомеру(string Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld7101RRef [ВалютаДокумента]
					,_Fld7102RRef [ВидОперации]
					,_Fld7103 [ВремяНапоминания]
					,_Fld7104 [ДатаОплаты]
					,_Fld7105 [ДатаПоступления]
					,_Fld7106RRef [ДоговорКонтрагента]
					,_Fld7107 [ИспользоватьПлановуюСебестоимость]
					,_Fld7108 [ИтогПлановаяСебестоимость]
					,_Fld7109 [Комментарий]
					,_Fld7110RRef [Контрагент]
					,_Fld7111 [КратностьВзаиморасчетов]
					,_Fld7112 [КурсВзаиморасчетов]
					,_Fld7113 [НапомнитьОСобытии]
					,_Fld7114RRef [Организация]
					,_Fld7115RRef [Ответственный]
					,_Fld7116RRef [Подразделение]
					,_Fld7117RRef [Склад]
					,_Fld7118_TYPE [СтруктурнаяЕдиница_Тип],_Fld7118_RRRef [СтруктурнаяЕдиница],_Fld7118_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld7119 [СуммаВключаетНДС]
					,_Fld7120 [СуммаДокумента]
					,_Fld7121RRef [ТипЦен]
					,_Fld7122 [УчитыватьНДС]
					,_Fld7123RRef [КонтактноеЛицоКонтрагента]
					,_Fld7124RRef [УсловиеПродаж]
					,_Fld7125_TYPE [ДокументОснование_Тип],_Fld7125_RRRef [ДокументОснование],_Fld7125_RTRef [ДокументОснование_Вид]
					,_Fld7126 [НомерПоДаннымПоставщика]
					,_Fld7127 [ДатаПоДаннымПоставщика]
					From _Document363(NOLOCK)
					Where _Number = @Номер";
					Команда.Parameters.AddWithValue("Номер", Номер);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ЗаказПоставщику();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийЗаказПоставщику.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(5);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(6);
							Ссылка.ДатаПоступления = Читалка.GetDateTime(7);
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(9))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(10);
							Ссылка.Комментарий = Читалка.GetString(11);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(14);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(15))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(23))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(24);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.НомерПоДаннымПоставщика = Читалка.GetString(32);
							Ссылка.ДатаПоДаннымПоставщика = Читалка.GetDateTime(33);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыВыборка.ЗаказПоставщику Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld7101RRef [ВалютаДокумента]
					,_Fld7102RRef [ВидОперации]
					,_Fld7103 [ВремяНапоминания]
					,_Fld7104 [ДатаОплаты]
					,_Fld7105 [ДатаПоступления]
					,_Fld7106RRef [ДоговорКонтрагента]
					,_Fld7107 [ИспользоватьПлановуюСебестоимость]
					,_Fld7108 [ИтогПлановаяСебестоимость]
					,_Fld7109 [Комментарий]
					,_Fld7110RRef [Контрагент]
					,_Fld7111 [КратностьВзаиморасчетов]
					,_Fld7112 [КурсВзаиморасчетов]
					,_Fld7113 [НапомнитьОСобытии]
					,_Fld7114RRef [Организация]
					,_Fld7115RRef [Ответственный]
					,_Fld7116RRef [Подразделение]
					,_Fld7117RRef [Склад]
					,_Fld7118_TYPE [СтруктурнаяЕдиница_Тип],_Fld7118_RRRef [СтруктурнаяЕдиница],_Fld7118_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld7119 [СуммаВключаетНДС]
					,_Fld7120 [СуммаДокумента]
					,_Fld7121RRef [ТипЦен]
					,_Fld7122 [УчитыватьНДС]
					,_Fld7123RRef [КонтактноеЛицоКонтрагента]
					,_Fld7124RRef [УсловиеПродаж]
					,_Fld7125_TYPE [ДокументОснование_Тип],_Fld7125_RRRef [ДокументОснование],_Fld7125_RTRef [ДокументОснование_Вид]
					,_Fld7126 [НомерПоДаннымПоставщика]
					,_Fld7127 [ДатаПоДаннымПоставщика]
					From _Document363(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ЗаказПоставщику();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ЗаказПоставщику();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийЗаказПоставщику.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(5);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(6);
							Ссылка.ДатаПоступления = Читалка.GetDateTime(7);
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(9))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(10);
							Ссылка.Комментарий = Читалка.GetString(11);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(14);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(15))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(23))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(24);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.НомерПоДаннымПоставщика = Читалка.GetString(32);
							Ссылка.ДатаПоДаннымПоставщика = Читалка.GetDateTime(33);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ЗаказПоставщику ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld7101RRef [ВалютаДокумента]
					,_Fld7102RRef [ВидОперации]
					,_Fld7103 [ВремяНапоминания]
					,_Fld7104 [ДатаОплаты]
					,_Fld7105 [ДатаПоступления]
					,_Fld7106RRef [ДоговорКонтрагента]
					,_Fld7107 [ИспользоватьПлановуюСебестоимость]
					,_Fld7108 [ИтогПлановаяСебестоимость]
					,_Fld7109 [Комментарий]
					,_Fld7110RRef [Контрагент]
					,_Fld7111 [КратностьВзаиморасчетов]
					,_Fld7112 [КурсВзаиморасчетов]
					,_Fld7113 [НапомнитьОСобытии]
					,_Fld7114RRef [Организация]
					,_Fld7115RRef [Ответственный]
					,_Fld7116RRef [Подразделение]
					,_Fld7117RRef [Склад]
					,_Fld7118_TYPE [СтруктурнаяЕдиница_Тип],_Fld7118_RRRef [СтруктурнаяЕдиница],_Fld7118_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld7119 [СуммаВключаетНДС]
					,_Fld7120 [СуммаДокумента]
					,_Fld7121RRef [ТипЦен]
					,_Fld7122 [УчитыватьНДС]
					,_Fld7123RRef [КонтактноеЛицоКонтрагента]
					,_Fld7124RRef [УсловиеПродаж]
					,_Fld7125_TYPE [ДокументОснование_Тип],_Fld7125_RRRef [ДокументОснование],_Fld7125_RTRef [ДокументОснование_Вид]
					,_Fld7126 [НомерПоДаннымПоставщика]
					,_Fld7127 [ДатаПоДаннымПоставщика]
					From _Document363(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ЗаказПоставщику();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ЗаказПоставщику();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийЗаказПоставщику.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(5);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(6);
							Ссылка.ДатаПоступления = Читалка.GetDateTime(7);
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(9))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(10);
							Ссылка.Комментарий = Читалка.GetString(11);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(14);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(15))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(23))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(24);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.НомерПоДаннымПоставщика = Читалка.GetString(32);
							Ссылка.ДатаПоДаннымПоставщика = Читалка.GetDateTime(33);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ЗаказПоставщику ВыбратьПоНомеру(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld7101RRef [ВалютаДокумента]
					,_Fld7102RRef [ВидОперации]
					,_Fld7103 [ВремяНапоминания]
					,_Fld7104 [ДатаОплаты]
					,_Fld7105 [ДатаПоступления]
					,_Fld7106RRef [ДоговорКонтрагента]
					,_Fld7107 [ИспользоватьПлановуюСебестоимость]
					,_Fld7108 [ИтогПлановаяСебестоимость]
					,_Fld7109 [Комментарий]
					,_Fld7110RRef [Контрагент]
					,_Fld7111 [КратностьВзаиморасчетов]
					,_Fld7112 [КурсВзаиморасчетов]
					,_Fld7113 [НапомнитьОСобытии]
					,_Fld7114RRef [Организация]
					,_Fld7115RRef [Ответственный]
					,_Fld7116RRef [Подразделение]
					,_Fld7117RRef [Склад]
					,_Fld7118_TYPE [СтруктурнаяЕдиница_Тип],_Fld7118_RRRef [СтруктурнаяЕдиница],_Fld7118_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld7119 [СуммаВключаетНДС]
					,_Fld7120 [СуммаДокумента]
					,_Fld7121RRef [ТипЦен]
					,_Fld7122 [УчитыватьНДС]
					,_Fld7123RRef [КонтактноеЛицоКонтрагента]
					,_Fld7124RRef [УсловиеПродаж]
					,_Fld7125_TYPE [ДокументОснование_Тип],_Fld7125_RRRef [ДокументОснование],_Fld7125_RTRef [ДокументОснование_Вид]
					,_Fld7126 [НомерПоДаннымПоставщика]
					,_Fld7127 [ДатаПоДаннымПоставщика]
					From _Document363(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ЗаказПоставщику();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ЗаказПоставщику();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийЗаказПоставщику.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(5);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(6);
							Ссылка.ДатаПоступления = Читалка.GetDateTime(7);
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(9))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(10);
							Ссылка.Комментарий = Читалка.GetString(11);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(14);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(15))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(23))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(24);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.НомерПоДаннымПоставщика = Читалка.GetString(32);
							Ссылка.ДатаПоДаннымПоставщика = Читалка.GetDateTime(33);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ЗаказПоставщику СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld7101RRef [ВалютаДокумента]
					,_Fld7102RRef [ВидОперации]
					,_Fld7103 [ВремяНапоминания]
					,_Fld7104 [ДатаОплаты]
					,_Fld7105 [ДатаПоступления]
					,_Fld7106RRef [ДоговорКонтрагента]
					,_Fld7107 [ИспользоватьПлановуюСебестоимость]
					,_Fld7108 [ИтогПлановаяСебестоимость]
					,_Fld7109 [Комментарий]
					,_Fld7110RRef [Контрагент]
					,_Fld7111 [КратностьВзаиморасчетов]
					,_Fld7112 [КурсВзаиморасчетов]
					,_Fld7113 [НапомнитьОСобытии]
					,_Fld7114RRef [Организация]
					,_Fld7115RRef [Ответственный]
					,_Fld7116RRef [Подразделение]
					,_Fld7117RRef [Склад]
					,_Fld7118_TYPE [СтруктурнаяЕдиница_Тип],_Fld7118_RRRef [СтруктурнаяЕдиница],_Fld7118_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld7119 [СуммаВключаетНДС]
					,_Fld7120 [СуммаДокумента]
					,_Fld7121RRef [ТипЦен]
					,_Fld7122 [УчитыватьНДС]
					,_Fld7123RRef [КонтактноеЛицоКонтрагента]
					,_Fld7124RRef [УсловиеПродаж]
					,_Fld7125_TYPE [ДокументОснование_Тип],_Fld7125_RRRef [ДокументОснование],_Fld7125_RTRef [ДокументОснование_Вид]
					,_Fld7126 [НомерПоДаннымПоставщика]
					,_Fld7127 [ДатаПоДаннымПоставщика]
					From _Document363(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ЗаказПоставщику();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ЗаказПоставщику();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийЗаказПоставщику.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(5);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(6);
							Ссылка.ДатаПоступления = Читалка.GetDateTime(7);
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(9))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(10);
							Ссылка.Комментарий = Читалка.GetString(11);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(14);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(15))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(23))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(24);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.НомерПоДаннымПоставщика = Читалка.GetString(32);
							Ссылка.ДатаПоДаннымПоставщика = Читалка.GetDateTime(33);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ЗаказПоставщику СтраницаПоНомеру(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld7101RRef [ВалютаДокумента]
					,_Fld7102RRef [ВидОперации]
					,_Fld7103 [ВремяНапоминания]
					,_Fld7104 [ДатаОплаты]
					,_Fld7105 [ДатаПоступления]
					,_Fld7106RRef [ДоговорКонтрагента]
					,_Fld7107 [ИспользоватьПлановуюСебестоимость]
					,_Fld7108 [ИтогПлановаяСебестоимость]
					,_Fld7109 [Комментарий]
					,_Fld7110RRef [Контрагент]
					,_Fld7111 [КратностьВзаиморасчетов]
					,_Fld7112 [КурсВзаиморасчетов]
					,_Fld7113 [НапомнитьОСобытии]
					,_Fld7114RRef [Организация]
					,_Fld7115RRef [Ответственный]
					,_Fld7116RRef [Подразделение]
					,_Fld7117RRef [Склад]
					,_Fld7118_TYPE [СтруктурнаяЕдиница_Тип],_Fld7118_RRRef [СтруктурнаяЕдиница],_Fld7118_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld7119 [СуммаВключаетНДС]
					,_Fld7120 [СуммаДокумента]
					,_Fld7121RRef [ТипЦен]
					,_Fld7122 [УчитыватьНДС]
					,_Fld7123RRef [КонтактноеЛицоКонтрагента]
					,_Fld7124RRef [УсловиеПродаж]
					,_Fld7125_TYPE [ДокументОснование_Тип],_Fld7125_RRRef [ДокументОснование],_Fld7125_RTRef [ДокументОснование_Вид]
					,_Fld7126 [НомерПоДаннымПоставщика]
					,_Fld7127 [ДатаПоДаннымПоставщика]
					From _Document363(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ЗаказПоставщику();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ЗаказПоставщику();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийЗаказПоставщику.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(5);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(6);
							Ссылка.ДатаПоступления = Читалка.GetDateTime(7);
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(9))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(10);
							Ссылка.Комментарий = Читалка.GetString(11);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(14);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(15))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(23))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(24);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.НомерПоДаннымПоставщика = Читалка.GetString(32);
							Ссылка.ДатаПоДаннымПоставщика = Читалка.GetDateTime(33);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.ДокументыОбъект.ЗаказПоставщику СоздатьЭлемент()
		{
			var Объект = new V82.ДокументыОбъект.ЗаказПоставщику();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.Комментарий = "";
			Объект.НомерПоДаннымПоставщика = "";
			Объект.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийЗаказПоставщику.ПустаяСсылка;
			return Объект;
		}
	}
}