
using System;
using System.Data.SqlClient;
using V82;
using V82.ДокументыСсылка;
using V82.Документы;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Документы//Менеджер
{
	///<summary>
	///(Общ)
	///</summary>
	public partial class ПеремещениеТоваров:ДокументМенеджер
	{
		
		public static ДокументыСсылка.ПеремещениеТоваров НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld8070RRef [ВидОперации]
					,_Fld8071RRef [Организация]
					,_Fld8072 [ОтражатьВУправленческомУчете]
					,_Fld8073 [ОтражатьВБухгалтерскомУчете]
					,_Fld8074 [ОтражатьВНалоговомУчете]
					,_Fld8075RRef [Подразделение]
					,_Fld8076 [Комментарий]
					,_Fld8077RRef [СкладОтправитель]
					,_Fld8078RRef [СкладПолучатель]
					,_Fld8079RRef [Ответственный]
					,_Fld8080RRef [ВнутреннийЗаказ]
					,_Fld8081RRef [НДСвСтоимостиТоваров]
					,_Fld8082RRef [СчетСписанияНДС]
					,_Fld8083RRef [СубконтоСписанияНДС1]
					,_Fld8084RRef [СубконтоСписанияНДС2]
					,_Fld8085RRef [СубконтоСписанияНДС3]
					,_Fld8086RRef [СчетСписанияНДСНУ]
					,_Fld8087RRef [СубконтоСписанияНДСНУ1]
					,_Fld8088RRef [СубконтоСписанияНДСНУ2]
					,_Fld8089RRef [СубконтоСписанияНДСНУ3]
					,_Fld8090RRef [НоменклатурнаяГруппа]
					,_Fld8091RRef [СтатьяЗатратСписанияНДС]
					,_Fld8092RRef [ПодразделениеОрганизации]
					,_Fld8093 [СуммаДокументаРозничная]
					,_Fld18373 [РаспределениеОстатковТоваровОрганизацийПоСкладам]
					From _Document369(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПеремещениеТоваров();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПеремещениеТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.ВнутреннийЗаказ = V82.ДокументыСсылка.ВнутреннийЗаказ.ВзятьИзКэша((byte[])Читалка.GetValue(13));
							Ссылка.НДСвСтоимостиТоваров = V82.Перечисления/*Ссылка*/.ДействиеНДСВСтоимостиТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(14));
							Ссылка.СуммаДокументаРозничная = Читалка.GetDecimal(26);
							Ссылка.РаспределениеОстатковТоваровОрганизацийПоСкладам = ((byte[])Читалка.GetValue(27))[0]==1;
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыСсылка.ПеремещениеТоваров НайтиПоНомеру(string Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld8070RRef [ВидОперации]
					,_Fld8071RRef [Организация]
					,_Fld8072 [ОтражатьВУправленческомУчете]
					,_Fld8073 [ОтражатьВБухгалтерскомУчете]
					,_Fld8074 [ОтражатьВНалоговомУчете]
					,_Fld8075RRef [Подразделение]
					,_Fld8076 [Комментарий]
					,_Fld8077RRef [СкладОтправитель]
					,_Fld8078RRef [СкладПолучатель]
					,_Fld8079RRef [Ответственный]
					,_Fld8080RRef [ВнутреннийЗаказ]
					,_Fld8081RRef [НДСвСтоимостиТоваров]
					,_Fld8082RRef [СчетСписанияНДС]
					,_Fld8083RRef [СубконтоСписанияНДС1]
					,_Fld8084RRef [СубконтоСписанияНДС2]
					,_Fld8085RRef [СубконтоСписанияНДС3]
					,_Fld8086RRef [СчетСписанияНДСНУ]
					,_Fld8087RRef [СубконтоСписанияНДСНУ1]
					,_Fld8088RRef [СубконтоСписанияНДСНУ2]
					,_Fld8089RRef [СубконтоСписанияНДСНУ3]
					,_Fld8090RRef [НоменклатурнаяГруппа]
					,_Fld8091RRef [СтатьяЗатратСписанияНДС]
					,_Fld8092RRef [ПодразделениеОрганизации]
					,_Fld8093 [СуммаДокументаРозничная]
					,_Fld18373 [РаспределениеОстатковТоваровОрганизацийПоСкладам]
					From _Document369(NOLOCK)
					Where _Number = @Номер";
					Команда.Parameters.AddWithValue("Номер", Номер);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПеремещениеТоваров();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПеремещениеТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.ВнутреннийЗаказ = V82.ДокументыСсылка.ВнутреннийЗаказ.ВзятьИзКэша((byte[])Читалка.GetValue(13));
							Ссылка.НДСвСтоимостиТоваров = V82.Перечисления/*Ссылка*/.ДействиеНДСВСтоимостиТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(14));
							Ссылка.СуммаДокументаРозничная = Читалка.GetDecimal(26);
							Ссылка.РаспределениеОстатковТоваровОрганизацийПоСкладам = ((byte[])Читалка.GetValue(27))[0]==1;
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПеремещениеТоваров Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld8070RRef [ВидОперации]
					,_Fld8071RRef [Организация]
					,_Fld8072 [ОтражатьВУправленческомУчете]
					,_Fld8073 [ОтражатьВБухгалтерскомУчете]
					,_Fld8074 [ОтражатьВНалоговомУчете]
					,_Fld8075RRef [Подразделение]
					,_Fld8076 [Комментарий]
					,_Fld8077RRef [СкладОтправитель]
					,_Fld8078RRef [СкладПолучатель]
					,_Fld8079RRef [Ответственный]
					,_Fld8080RRef [ВнутреннийЗаказ]
					,_Fld8081RRef [НДСвСтоимостиТоваров]
					,_Fld8082RRef [СчетСписанияНДС]
					,_Fld8083RRef [СубконтоСписанияНДС1]
					,_Fld8084RRef [СубконтоСписанияНДС2]
					,_Fld8085RRef [СубконтоСписанияНДС3]
					,_Fld8086RRef [СчетСписанияНДСНУ]
					,_Fld8087RRef [СубконтоСписанияНДСНУ1]
					,_Fld8088RRef [СубконтоСписанияНДСНУ2]
					,_Fld8089RRef [СубконтоСписанияНДСНУ3]
					,_Fld8090RRef [НоменклатурнаяГруппа]
					,_Fld8091RRef [СтатьяЗатратСписанияНДС]
					,_Fld8092RRef [ПодразделениеОрганизации]
					,_Fld8093 [СуммаДокументаРозничная]
					,_Fld18373 [РаспределениеОстатковТоваровОрганизацийПоСкладам]
					From _Document369(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ПеремещениеТоваров();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПеремещениеТоваров();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПеремещениеТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.ВнутреннийЗаказ = V82.ДокументыСсылка.ВнутреннийЗаказ.ВзятьИзКэша((byte[])Читалка.GetValue(13));
							Ссылка.НДСвСтоимостиТоваров = V82.Перечисления/*Ссылка*/.ДействиеНДСВСтоимостиТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(14));
							Ссылка.СуммаДокументаРозничная = Читалка.GetDecimal(26);
							Ссылка.РаспределениеОстатковТоваровОрганизацийПоСкладам = ((byte[])Читалка.GetValue(27))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПеремещениеТоваров ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld8070RRef [ВидОперации]
					,_Fld8071RRef [Организация]
					,_Fld8072 [ОтражатьВУправленческомУчете]
					,_Fld8073 [ОтражатьВБухгалтерскомУчете]
					,_Fld8074 [ОтражатьВНалоговомУчете]
					,_Fld8075RRef [Подразделение]
					,_Fld8076 [Комментарий]
					,_Fld8077RRef [СкладОтправитель]
					,_Fld8078RRef [СкладПолучатель]
					,_Fld8079RRef [Ответственный]
					,_Fld8080RRef [ВнутреннийЗаказ]
					,_Fld8081RRef [НДСвСтоимостиТоваров]
					,_Fld8082RRef [СчетСписанияНДС]
					,_Fld8083RRef [СубконтоСписанияНДС1]
					,_Fld8084RRef [СубконтоСписанияНДС2]
					,_Fld8085RRef [СубконтоСписанияНДС3]
					,_Fld8086RRef [СчетСписанияНДСНУ]
					,_Fld8087RRef [СубконтоСписанияНДСНУ1]
					,_Fld8088RRef [СубконтоСписанияНДСНУ2]
					,_Fld8089RRef [СубконтоСписанияНДСНУ3]
					,_Fld8090RRef [НоменклатурнаяГруппа]
					,_Fld8091RRef [СтатьяЗатратСписанияНДС]
					,_Fld8092RRef [ПодразделениеОрганизации]
					,_Fld8093 [СуммаДокументаРозничная]
					,_Fld18373 [РаспределениеОстатковТоваровОрганизацийПоСкладам]
					From _Document369(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ПеремещениеТоваров();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПеремещениеТоваров();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПеремещениеТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.ВнутреннийЗаказ = V82.ДокументыСсылка.ВнутреннийЗаказ.ВзятьИзКэша((byte[])Читалка.GetValue(13));
							Ссылка.НДСвСтоимостиТоваров = V82.Перечисления/*Ссылка*/.ДействиеНДСВСтоимостиТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(14));
							Ссылка.СуммаДокументаРозничная = Читалка.GetDecimal(26);
							Ссылка.РаспределениеОстатковТоваровОрганизацийПоСкладам = ((byte[])Читалка.GetValue(27))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПеремещениеТоваров ВыбратьПоНомеру(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld8070RRef [ВидОперации]
					,_Fld8071RRef [Организация]
					,_Fld8072 [ОтражатьВУправленческомУчете]
					,_Fld8073 [ОтражатьВБухгалтерскомУчете]
					,_Fld8074 [ОтражатьВНалоговомУчете]
					,_Fld8075RRef [Подразделение]
					,_Fld8076 [Комментарий]
					,_Fld8077RRef [СкладОтправитель]
					,_Fld8078RRef [СкладПолучатель]
					,_Fld8079RRef [Ответственный]
					,_Fld8080RRef [ВнутреннийЗаказ]
					,_Fld8081RRef [НДСвСтоимостиТоваров]
					,_Fld8082RRef [СчетСписанияНДС]
					,_Fld8083RRef [СубконтоСписанияНДС1]
					,_Fld8084RRef [СубконтоСписанияНДС2]
					,_Fld8085RRef [СубконтоСписанияНДС3]
					,_Fld8086RRef [СчетСписанияНДСНУ]
					,_Fld8087RRef [СубконтоСписанияНДСНУ1]
					,_Fld8088RRef [СубконтоСписанияНДСНУ2]
					,_Fld8089RRef [СубконтоСписанияНДСНУ3]
					,_Fld8090RRef [НоменклатурнаяГруппа]
					,_Fld8091RRef [СтатьяЗатратСписанияНДС]
					,_Fld8092RRef [ПодразделениеОрганизации]
					,_Fld8093 [СуммаДокументаРозничная]
					,_Fld18373 [РаспределениеОстатковТоваровОрганизацийПоСкладам]
					From _Document369(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ПеремещениеТоваров();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПеремещениеТоваров();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПеремещениеТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.ВнутреннийЗаказ = V82.ДокументыСсылка.ВнутреннийЗаказ.ВзятьИзКэша((byte[])Читалка.GetValue(13));
							Ссылка.НДСвСтоимостиТоваров = V82.Перечисления/*Ссылка*/.ДействиеНДСВСтоимостиТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(14));
							Ссылка.СуммаДокументаРозничная = Читалка.GetDecimal(26);
							Ссылка.РаспределениеОстатковТоваровОрганизацийПоСкладам = ((byte[])Читалка.GetValue(27))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПеремещениеТоваров СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld8070RRef [ВидОперации]
					,_Fld8071RRef [Организация]
					,_Fld8072 [ОтражатьВУправленческомУчете]
					,_Fld8073 [ОтражатьВБухгалтерскомУчете]
					,_Fld8074 [ОтражатьВНалоговомУчете]
					,_Fld8075RRef [Подразделение]
					,_Fld8076 [Комментарий]
					,_Fld8077RRef [СкладОтправитель]
					,_Fld8078RRef [СкладПолучатель]
					,_Fld8079RRef [Ответственный]
					,_Fld8080RRef [ВнутреннийЗаказ]
					,_Fld8081RRef [НДСвСтоимостиТоваров]
					,_Fld8082RRef [СчетСписанияНДС]
					,_Fld8083RRef [СубконтоСписанияНДС1]
					,_Fld8084RRef [СубконтоСписанияНДС2]
					,_Fld8085RRef [СубконтоСписанияНДС3]
					,_Fld8086RRef [СчетСписанияНДСНУ]
					,_Fld8087RRef [СубконтоСписанияНДСНУ1]
					,_Fld8088RRef [СубконтоСписанияНДСНУ2]
					,_Fld8089RRef [СубконтоСписанияНДСНУ3]
					,_Fld8090RRef [НоменклатурнаяГруппа]
					,_Fld8091RRef [СтатьяЗатратСписанияНДС]
					,_Fld8092RRef [ПодразделениеОрганизации]
					,_Fld8093 [СуммаДокументаРозничная]
					,_Fld18373 [РаспределениеОстатковТоваровОрганизацийПоСкладам]
					From _Document369(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ПеремещениеТоваров();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПеремещениеТоваров();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПеремещениеТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.ВнутреннийЗаказ = V82.ДокументыСсылка.ВнутреннийЗаказ.ВзятьИзКэша((byte[])Читалка.GetValue(13));
							Ссылка.НДСвСтоимостиТоваров = V82.Перечисления/*Ссылка*/.ДействиеНДСВСтоимостиТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(14));
							Ссылка.СуммаДокументаРозничная = Читалка.GetDecimal(26);
							Ссылка.РаспределениеОстатковТоваровОрганизацийПоСкладам = ((byte[])Читалка.GetValue(27))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПеремещениеТоваров СтраницаПоНомеру(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld8070RRef [ВидОперации]
					,_Fld8071RRef [Организация]
					,_Fld8072 [ОтражатьВУправленческомУчете]
					,_Fld8073 [ОтражатьВБухгалтерскомУчете]
					,_Fld8074 [ОтражатьВНалоговомУчете]
					,_Fld8075RRef [Подразделение]
					,_Fld8076 [Комментарий]
					,_Fld8077RRef [СкладОтправитель]
					,_Fld8078RRef [СкладПолучатель]
					,_Fld8079RRef [Ответственный]
					,_Fld8080RRef [ВнутреннийЗаказ]
					,_Fld8081RRef [НДСвСтоимостиТоваров]
					,_Fld8082RRef [СчетСписанияНДС]
					,_Fld8083RRef [СубконтоСписанияНДС1]
					,_Fld8084RRef [СубконтоСписанияНДС2]
					,_Fld8085RRef [СубконтоСписанияНДС3]
					,_Fld8086RRef [СчетСписанияНДСНУ]
					,_Fld8087RRef [СубконтоСписанияНДСНУ1]
					,_Fld8088RRef [СубконтоСписанияНДСНУ2]
					,_Fld8089RRef [СубконтоСписанияНДСНУ3]
					,_Fld8090RRef [НоменклатурнаяГруппа]
					,_Fld8091RRef [СтатьяЗатратСписанияНДС]
					,_Fld8092RRef [ПодразделениеОрганизации]
					,_Fld8093 [СуммаДокументаРозничная]
					,_Fld18373 [РаспределениеОстатковТоваровОрганизацийПоСкладам]
					From _Document369(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ПеремещениеТоваров();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПеремещениеТоваров();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПеремещениеТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(3));
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.ВнутреннийЗаказ = V82.ДокументыСсылка.ВнутреннийЗаказ.ВзятьИзКэша((byte[])Читалка.GetValue(13));
							Ссылка.НДСвСтоимостиТоваров = V82.Перечисления/*Ссылка*/.ДействиеНДСВСтоимостиТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(14));
							Ссылка.СуммаДокументаРозничная = Читалка.GetDecimal(26);
							Ссылка.РаспределениеОстатковТоваровОрганизацийПоСкладам = ((byte[])Читалка.GetValue(27))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.ДокументыОбъект.ПеремещениеТоваров СоздатьЭлемент()
		{
			var Объект = new V82.ДокументыОбъект.ПеремещениеТоваров();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.Комментарий = "";
			Объект.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПеремещениеТоваров.ПустаяСсылка;
			Объект.ВнутреннийЗаказ = new V82.ДокументыСсылка.ВнутреннийЗаказ();
			Объект.НДСвСтоимостиТоваров = V82.Перечисления/*Ссылка*/.ДействиеНДСВСтоимостиТоваров.ПустаяСсылка;
			return Объект;
		}
	}
}