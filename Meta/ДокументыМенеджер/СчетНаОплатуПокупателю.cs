
using System;
using System.Data.SqlClient;
using V82;
using V82.ДокументыСсылка;
using V82.Документы;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Документы//Менеджер
{
	///<summary>
	///(Общ)
	///</summary>
	public partial class СчетНаОплатуПокупателю:ДокументМенеджер
	{
		
		public static ДокументыСсылка.СчетНаОплатуПокупателю НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld17646 [АдресДоставки]
					,_Fld17647_TYPE [СтруктурнаяЕдиница_Тип],_Fld17647_RRRef [СтруктурнаяЕдиница],_Fld17647_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld17648 [ВремяНапоминания]
					,_Fld17649 [ДатаОплаты]
					,_Fld17650 [ДатаОтгрузки]
					,_Fld17651RRef [ДисконтнаяКарта]
					,_Fld17652RRef [ВалютаДокумента]
					,_Fld17653RRef [ЗаказПокупателя]
					,_Fld17654 [ИспользоватьПлановуюСебестоимость]
					,_Fld17655 [ИтогПлановаяСебестоимость]
					,_Fld17656RRef [ДоговорКонтрагента]
					,_Fld17657 [Комментарий]
					,_Fld17658_TYPE [Контрагент_Тип],_Fld17658_RRRef [Контрагент],_Fld17658_RTRef [Контрагент_Вид]
					,_Fld17659 [КратностьВзаиморасчетов]
					,_Fld17660 [НапомнитьОСобытии]
					,_Fld17661 [КурсВзаиморасчетов]
					,_Fld17662RRef [Организация]
					,_Fld17663RRef [Подразделение]
					,_Fld17664RRef [Ответственный]
					,_Fld17665RRef [Склад]
					,_Fld17666 [СуммаВключаетНДС]
					,_Fld17667 [СуммаДокумента]
					,_Fld17668RRef [ТипЦен]
					,_Fld17669 [УчитыватьНДС]
					,_Fld17670RRef [Грузополучатель]
					,_Fld17671_TYPE [КонтактноеЛицоКонтрагента_Тип],_Fld17671_RRRef [КонтактноеЛицоКонтрагента],_Fld17671_RTRef [КонтактноеЛицоКонтрагента_Вид]
					,_Fld17672RRef [УсловиеПродаж]
					,_Fld17673 [ДополнениеКАдресуДоставки]
					,_Fld17674RRef [Грузоотправитель]
					From _Document603(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.СчетНаОплатуПокупателю();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(3);
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(7);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(8);
							Ссылка.ДатаОтгрузки = Читалка.GetDateTime(9);
							Ссылка.ЗаказПокупателя = V82.ДокументыСсылка.ЗаказПокупателя.ВзятьИзКэша((byte[])Читалка.GetValue(12));
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(14);
							Ссылка.Комментарий = Читалка.GetString(16);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(20);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(22);
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(28);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(36);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыСсылка.СчетНаОплатуПокупателю НайтиПоНомеру(string Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld17646 [АдресДоставки]
					,_Fld17647_TYPE [СтруктурнаяЕдиница_Тип],_Fld17647_RRRef [СтруктурнаяЕдиница],_Fld17647_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld17648 [ВремяНапоминания]
					,_Fld17649 [ДатаОплаты]
					,_Fld17650 [ДатаОтгрузки]
					,_Fld17651RRef [ДисконтнаяКарта]
					,_Fld17652RRef [ВалютаДокумента]
					,_Fld17653RRef [ЗаказПокупателя]
					,_Fld17654 [ИспользоватьПлановуюСебестоимость]
					,_Fld17655 [ИтогПлановаяСебестоимость]
					,_Fld17656RRef [ДоговорКонтрагента]
					,_Fld17657 [Комментарий]
					,_Fld17658_TYPE [Контрагент_Тип],_Fld17658_RRRef [Контрагент],_Fld17658_RTRef [Контрагент_Вид]
					,_Fld17659 [КратностьВзаиморасчетов]
					,_Fld17660 [НапомнитьОСобытии]
					,_Fld17661 [КурсВзаиморасчетов]
					,_Fld17662RRef [Организация]
					,_Fld17663RRef [Подразделение]
					,_Fld17664RRef [Ответственный]
					,_Fld17665RRef [Склад]
					,_Fld17666 [СуммаВключаетНДС]
					,_Fld17667 [СуммаДокумента]
					,_Fld17668RRef [ТипЦен]
					,_Fld17669 [УчитыватьНДС]
					,_Fld17670RRef [Грузополучатель]
					,_Fld17671_TYPE [КонтактноеЛицоКонтрагента_Тип],_Fld17671_RRRef [КонтактноеЛицоКонтрагента],_Fld17671_RTRef [КонтактноеЛицоКонтрагента_Вид]
					,_Fld17672RRef [УсловиеПродаж]
					,_Fld17673 [ДополнениеКАдресуДоставки]
					,_Fld17674RRef [Грузоотправитель]
					From _Document603(NOLOCK)
					Where _Number = @Номер";
					Команда.Parameters.AddWithValue("Номер", Номер);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.СчетНаОплатуПокупателю();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(3);
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(7);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(8);
							Ссылка.ДатаОтгрузки = Читалка.GetDateTime(9);
							Ссылка.ЗаказПокупателя = V82.ДокументыСсылка.ЗаказПокупателя.ВзятьИзКэша((byte[])Читалка.GetValue(12));
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(14);
							Ссылка.Комментарий = Читалка.GetString(16);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(20);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(22);
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(28);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(36);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыВыборка.СчетНаОплатуПокупателю Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld17646 [АдресДоставки]
					,_Fld17647_TYPE [СтруктурнаяЕдиница_Тип],_Fld17647_RRRef [СтруктурнаяЕдиница],_Fld17647_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld17648 [ВремяНапоминания]
					,_Fld17649 [ДатаОплаты]
					,_Fld17650 [ДатаОтгрузки]
					,_Fld17651RRef [ДисконтнаяКарта]
					,_Fld17652RRef [ВалютаДокумента]
					,_Fld17653RRef [ЗаказПокупателя]
					,_Fld17654 [ИспользоватьПлановуюСебестоимость]
					,_Fld17655 [ИтогПлановаяСебестоимость]
					,_Fld17656RRef [ДоговорКонтрагента]
					,_Fld17657 [Комментарий]
					,_Fld17658_TYPE [Контрагент_Тип],_Fld17658_RRRef [Контрагент],_Fld17658_RTRef [Контрагент_Вид]
					,_Fld17659 [КратностьВзаиморасчетов]
					,_Fld17660 [НапомнитьОСобытии]
					,_Fld17661 [КурсВзаиморасчетов]
					,_Fld17662RRef [Организация]
					,_Fld17663RRef [Подразделение]
					,_Fld17664RRef [Ответственный]
					,_Fld17665RRef [Склад]
					,_Fld17666 [СуммаВключаетНДС]
					,_Fld17667 [СуммаДокумента]
					,_Fld17668RRef [ТипЦен]
					,_Fld17669 [УчитыватьНДС]
					,_Fld17670RRef [Грузополучатель]
					,_Fld17671_TYPE [КонтактноеЛицоКонтрагента_Тип],_Fld17671_RRRef [КонтактноеЛицоКонтрагента],_Fld17671_RTRef [КонтактноеЛицоКонтрагента_Вид]
					,_Fld17672RRef [УсловиеПродаж]
					,_Fld17673 [ДополнениеКАдресуДоставки]
					,_Fld17674RRef [Грузоотправитель]
					From _Document603(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.СчетНаОплатуПокупателю();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.СчетНаОплатуПокупателю();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(3);
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(7);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(8);
							Ссылка.ДатаОтгрузки = Читалка.GetDateTime(9);
							Ссылка.ЗаказПокупателя = V82.ДокументыСсылка.ЗаказПокупателя.ВзятьИзКэша((byte[])Читалка.GetValue(12));
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(14);
							Ссылка.Комментарий = Читалка.GetString(16);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(20);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(22);
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(28);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(36);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.СчетНаОплатуПокупателю ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld17646 [АдресДоставки]
					,_Fld17647_TYPE [СтруктурнаяЕдиница_Тип],_Fld17647_RRRef [СтруктурнаяЕдиница],_Fld17647_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld17648 [ВремяНапоминания]
					,_Fld17649 [ДатаОплаты]
					,_Fld17650 [ДатаОтгрузки]
					,_Fld17651RRef [ДисконтнаяКарта]
					,_Fld17652RRef [ВалютаДокумента]
					,_Fld17653RRef [ЗаказПокупателя]
					,_Fld17654 [ИспользоватьПлановуюСебестоимость]
					,_Fld17655 [ИтогПлановаяСебестоимость]
					,_Fld17656RRef [ДоговорКонтрагента]
					,_Fld17657 [Комментарий]
					,_Fld17658_TYPE [Контрагент_Тип],_Fld17658_RRRef [Контрагент],_Fld17658_RTRef [Контрагент_Вид]
					,_Fld17659 [КратностьВзаиморасчетов]
					,_Fld17660 [НапомнитьОСобытии]
					,_Fld17661 [КурсВзаиморасчетов]
					,_Fld17662RRef [Организация]
					,_Fld17663RRef [Подразделение]
					,_Fld17664RRef [Ответственный]
					,_Fld17665RRef [Склад]
					,_Fld17666 [СуммаВключаетНДС]
					,_Fld17667 [СуммаДокумента]
					,_Fld17668RRef [ТипЦен]
					,_Fld17669 [УчитыватьНДС]
					,_Fld17670RRef [Грузополучатель]
					,_Fld17671_TYPE [КонтактноеЛицоКонтрагента_Тип],_Fld17671_RRRef [КонтактноеЛицоКонтрагента],_Fld17671_RTRef [КонтактноеЛицоКонтрагента_Вид]
					,_Fld17672RRef [УсловиеПродаж]
					,_Fld17673 [ДополнениеКАдресуДоставки]
					,_Fld17674RRef [Грузоотправитель]
					From _Document603(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.СчетНаОплатуПокупателю();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.СчетНаОплатуПокупателю();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(3);
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(7);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(8);
							Ссылка.ДатаОтгрузки = Читалка.GetDateTime(9);
							Ссылка.ЗаказПокупателя = V82.ДокументыСсылка.ЗаказПокупателя.ВзятьИзКэша((byte[])Читалка.GetValue(12));
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(14);
							Ссылка.Комментарий = Читалка.GetString(16);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(20);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(22);
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(28);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(36);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.СчетНаОплатуПокупателю ВыбратьПоНомеру(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld17646 [АдресДоставки]
					,_Fld17647_TYPE [СтруктурнаяЕдиница_Тип],_Fld17647_RRRef [СтруктурнаяЕдиница],_Fld17647_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld17648 [ВремяНапоминания]
					,_Fld17649 [ДатаОплаты]
					,_Fld17650 [ДатаОтгрузки]
					,_Fld17651RRef [ДисконтнаяКарта]
					,_Fld17652RRef [ВалютаДокумента]
					,_Fld17653RRef [ЗаказПокупателя]
					,_Fld17654 [ИспользоватьПлановуюСебестоимость]
					,_Fld17655 [ИтогПлановаяСебестоимость]
					,_Fld17656RRef [ДоговорКонтрагента]
					,_Fld17657 [Комментарий]
					,_Fld17658_TYPE [Контрагент_Тип],_Fld17658_RRRef [Контрагент],_Fld17658_RTRef [Контрагент_Вид]
					,_Fld17659 [КратностьВзаиморасчетов]
					,_Fld17660 [НапомнитьОСобытии]
					,_Fld17661 [КурсВзаиморасчетов]
					,_Fld17662RRef [Организация]
					,_Fld17663RRef [Подразделение]
					,_Fld17664RRef [Ответственный]
					,_Fld17665RRef [Склад]
					,_Fld17666 [СуммаВключаетНДС]
					,_Fld17667 [СуммаДокумента]
					,_Fld17668RRef [ТипЦен]
					,_Fld17669 [УчитыватьНДС]
					,_Fld17670RRef [Грузополучатель]
					,_Fld17671_TYPE [КонтактноеЛицоКонтрагента_Тип],_Fld17671_RRRef [КонтактноеЛицоКонтрагента],_Fld17671_RTRef [КонтактноеЛицоКонтрагента_Вид]
					,_Fld17672RRef [УсловиеПродаж]
					,_Fld17673 [ДополнениеКАдресуДоставки]
					,_Fld17674RRef [Грузоотправитель]
					From _Document603(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.СчетНаОплатуПокупателю();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.СчетНаОплатуПокупателю();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(3);
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(7);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(8);
							Ссылка.ДатаОтгрузки = Читалка.GetDateTime(9);
							Ссылка.ЗаказПокупателя = V82.ДокументыСсылка.ЗаказПокупателя.ВзятьИзКэша((byte[])Читалка.GetValue(12));
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(14);
							Ссылка.Комментарий = Читалка.GetString(16);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(20);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(22);
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(28);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(36);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.СчетНаОплатуПокупателю СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld17646 [АдресДоставки]
					,_Fld17647_TYPE [СтруктурнаяЕдиница_Тип],_Fld17647_RRRef [СтруктурнаяЕдиница],_Fld17647_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld17648 [ВремяНапоминания]
					,_Fld17649 [ДатаОплаты]
					,_Fld17650 [ДатаОтгрузки]
					,_Fld17651RRef [ДисконтнаяКарта]
					,_Fld17652RRef [ВалютаДокумента]
					,_Fld17653RRef [ЗаказПокупателя]
					,_Fld17654 [ИспользоватьПлановуюСебестоимость]
					,_Fld17655 [ИтогПлановаяСебестоимость]
					,_Fld17656RRef [ДоговорКонтрагента]
					,_Fld17657 [Комментарий]
					,_Fld17658_TYPE [Контрагент_Тип],_Fld17658_RRRef [Контрагент],_Fld17658_RTRef [Контрагент_Вид]
					,_Fld17659 [КратностьВзаиморасчетов]
					,_Fld17660 [НапомнитьОСобытии]
					,_Fld17661 [КурсВзаиморасчетов]
					,_Fld17662RRef [Организация]
					,_Fld17663RRef [Подразделение]
					,_Fld17664RRef [Ответственный]
					,_Fld17665RRef [Склад]
					,_Fld17666 [СуммаВключаетНДС]
					,_Fld17667 [СуммаДокумента]
					,_Fld17668RRef [ТипЦен]
					,_Fld17669 [УчитыватьНДС]
					,_Fld17670RRef [Грузополучатель]
					,_Fld17671_TYPE [КонтактноеЛицоКонтрагента_Тип],_Fld17671_RRRef [КонтактноеЛицоКонтрагента],_Fld17671_RTRef [КонтактноеЛицоКонтрагента_Вид]
					,_Fld17672RRef [УсловиеПродаж]
					,_Fld17673 [ДополнениеКАдресуДоставки]
					,_Fld17674RRef [Грузоотправитель]
					From _Document603(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.СчетНаОплатуПокупателю();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.СчетНаОплатуПокупателю();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(3);
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(7);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(8);
							Ссылка.ДатаОтгрузки = Читалка.GetDateTime(9);
							Ссылка.ЗаказПокупателя = V82.ДокументыСсылка.ЗаказПокупателя.ВзятьИзКэша((byte[])Читалка.GetValue(12));
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(14);
							Ссылка.Комментарий = Читалка.GetString(16);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(20);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(22);
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(28);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(36);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.СчетНаОплатуПокупателю СтраницаПоНомеру(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld17646 [АдресДоставки]
					,_Fld17647_TYPE [СтруктурнаяЕдиница_Тип],_Fld17647_RRRef [СтруктурнаяЕдиница],_Fld17647_RTRef [СтруктурнаяЕдиница_Вид]
					,_Fld17648 [ВремяНапоминания]
					,_Fld17649 [ДатаОплаты]
					,_Fld17650 [ДатаОтгрузки]
					,_Fld17651RRef [ДисконтнаяКарта]
					,_Fld17652RRef [ВалютаДокумента]
					,_Fld17653RRef [ЗаказПокупателя]
					,_Fld17654 [ИспользоватьПлановуюСебестоимость]
					,_Fld17655 [ИтогПлановаяСебестоимость]
					,_Fld17656RRef [ДоговорКонтрагента]
					,_Fld17657 [Комментарий]
					,_Fld17658_TYPE [Контрагент_Тип],_Fld17658_RRRef [Контрагент],_Fld17658_RTRef [Контрагент_Вид]
					,_Fld17659 [КратностьВзаиморасчетов]
					,_Fld17660 [НапомнитьОСобытии]
					,_Fld17661 [КурсВзаиморасчетов]
					,_Fld17662RRef [Организация]
					,_Fld17663RRef [Подразделение]
					,_Fld17664RRef [Ответственный]
					,_Fld17665RRef [Склад]
					,_Fld17666 [СуммаВключаетНДС]
					,_Fld17667 [СуммаДокумента]
					,_Fld17668RRef [ТипЦен]
					,_Fld17669 [УчитыватьНДС]
					,_Fld17670RRef [Грузополучатель]
					,_Fld17671_TYPE [КонтактноеЛицоКонтрагента_Тип],_Fld17671_RRRef [КонтактноеЛицоКонтрагента],_Fld17671_RTRef [КонтактноеЛицоКонтрагента_Вид]
					,_Fld17672RRef [УсловиеПродаж]
					,_Fld17673 [ДополнениеКАдресуДоставки]
					,_Fld17674RRef [Грузоотправитель]
					From _Document603(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.СчетНаОплатуПокупателю();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.СчетНаОплатуПокупателю();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АдресДоставки = Читалка.GetString(3);
							Ссылка.ВремяНапоминания = Читалка.GetDateTime(7);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(8);
							Ссылка.ДатаОтгрузки = Читалка.GetDateTime(9);
							Ссылка.ЗаказПокупателя = V82.ДокументыСсылка.ЗаказПокупателя.ВзятьИзКэша((byte[])Читалка.GetValue(12));
							Ссылка.ИспользоватьПлановуюСебестоимость = ((byte[])Читалка.GetValue(13))[0]==1;
							Ссылка.ИтогПлановаяСебестоимость = Читалка.GetDecimal(14);
							Ссылка.Комментарий = Читалка.GetString(16);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(20);
							Ссылка.НапомнитьОСобытии = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(22);
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(28);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(36);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.ДокументыОбъект.СчетНаОплатуПокупателю СоздатьЭлемент()
		{
			var Объект = new V82.ДокументыОбъект.СчетНаОплатуПокупателю();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.АдресДоставки = "";
			Объект.Комментарий = "";
			Объект.ДополнениеКАдресуДоставки = "";
			Объект.ЗаказПокупателя = new V82.ДокументыСсылка.ЗаказПокупателя();
			return Объект;
		}
	}
}