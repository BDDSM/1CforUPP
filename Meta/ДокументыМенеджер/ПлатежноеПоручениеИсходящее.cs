
using System;
using System.Data.SqlClient;
using V82;
using V82.ДокументыСсылка;
using V82.Документы;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Документы//Менеджер
{
	///<summary>
	///(Общ)
	///</summary>
	public partial class ПлатежноеПоручениеИсходящее:ДокументМенеджер
	{
		
		public static ДокументыСсылка.ПлатежноеПоручениеИсходящее НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld8644_TYPE [ДокументОснование_Тип],_Fld8644_RRRef [ДокументОснование],_Fld8644_RTRef [ДокументОснование_Вид]
					,_Fld8655RRef [Организация]
					,_Fld8673RRef [СчетОрганизации]
					,_Fld8650RRef [Контрагент]
					,_Fld8641 [ДатаОплаты]
					,_Fld8672RRef [СчетКонтрагента]
					,_Fld8643RRef [ДоговорКонтрагента]
					,_Fld8640 [ВидПлатежа]
					,_Fld8660 [ОчередностьПлатежа]
					,_Fld8653 [НазначениеПлатежа]
					,_Fld8675 [ТекстПлательщика]
					,_Fld8638RRef [ВалютаДокумента]
					,_Fld8676 [ТекстПолучателя]
					,_Fld8649 [Комментарий]
					,_Fld8654 [Оплачено]
					,_Fld8645 [ИННПлательщика]
					,_Fld8651 [КПППлательщика]
					,_Fld8646 [ИННПолучателя]
					,_Fld8652 [КПППолучателя]
					,_Fld8656RRef [Ответственный]
					,_Fld8657 [ОтражатьВБухгалтерскомУчете]
					,_Fld8647 [КодБК]
					,_Fld8659 [ОтраженоВОперУчете]
					,_Fld8648 [КодОКАТО]
					,_Fld8661 [ПоказательДаты]
					,_Fld8662 [ПоказательНомера]
					,_Fld8663 [ПоказательОснования]
					,_Fld8664 [ПоказательПериода]
					,_Fld8665 [ПоказательТипа]
					,_Fld8666 [СтатусСоставителя]
					,_Fld8671 [СуммаДокумента]
					,_Fld8639RRef [ВидОперации]
					,_Fld8667RRef [СтатьяДвиженияДенежныхСредств]
					,_Fld8674RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld8668RRef [СубконтоДт1]
					,_Fld8669RRef [СубконтоДт2]
					,_Fld8670RRef [СубконтоДт3]
					,_Fld8658 [ОтражатьВНалоговомУчете]
					,_Fld8677RRef [ФизЛицо]
					,_Fld8642RRef [ДоговорЗайма]
					,_Fld8637RRef [ВалютаВзаиморасчетовРаботника]
					,_Fld8678 [ЧастичнаяОплата]
					,_Fld8679 [Содержание_УСН]
					,_Fld8680 [Графа4_УСН]
					,_Fld8681 [Графа5_УСН]
					,_Fld8682 [Графа6_УСН]
					,_Fld8683 [Графа7_УСН]
					,_Fld8684 [ДоходыЕНВД_УСН]
					,_Fld8685 [РасходыЕНВД_УСН]
					,_Fld8686 [НДС_УСН]
					,_Fld8687 [РучнаяНастройка_УСН]
					,_Fld8688RRef [Подразделение]
					,_Fld8689RRef [СчетУчетаРасчетовСКонтрагентомНУ]
					,_Fld8690RRef [СубконтоНУДт1]
					,_Fld8691RRef [СубконтоНУДт2]
					,_Fld8692RRef [СубконтоНУДт3]
					,_Fld21841 [ДатаПогашенияАванса]
					,_Fld21842RRef [РасчетныйДокументРаботника]
					,_Fld27234 [УдалитьПеречислениеВБюджет]
					,_Fld27235RRef [УдалитьВидПеречисленияВБюджет]
					,_Fld27236 [ПеречислениеВБюджет]
					,_Fld27237RRef [ВидПеречисленияВБюджет]
					From _Document389(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПлатежноеПоручениеИсходящее();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ДатаОплаты = Читалка.GetDateTime(9);
							Ссылка.ВидПлатежа = Читалка.GetString(12);
							Ссылка.ОчередностьПлатежа = Читалка.GetDecimal(13);
							Ссылка.НазначениеПлатежа = Читалка.GetString(14);
							Ссылка.ТекстПлательщика = Читалка.GetString(15);
							Ссылка.ТекстПолучателя = Читалка.GetString(17);
							Ссылка.Комментарий = Читалка.GetString(18);
							Ссылка.Оплачено = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.ИННПлательщика = Читалка.GetString(20);
							Ссылка.КПППлательщика = Читалка.GetString(21);
							Ссылка.ИННПолучателя = Читалка.GetString(22);
							Ссылка.КПППолучателя = Читалка.GetString(23);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.КодБК = Читалка.GetString(26);
							Ссылка.ОтраженоВОперУчете = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.КодОКАТО = Читалка.GetString(28);
							Ссылка.ПоказательДаты = Читалка.GetDateTime(29);
							Ссылка.ПоказательНомера = Читалка.GetString(30);
							Ссылка.ПоказательОснования = Читалка.GetString(31);
							Ссылка.ПоказательПериода = Читалка.GetString(32);
							Ссылка.ПоказательТипа = Читалка.GetString(33);
							Ссылка.СтатусСоставителя = Читалка.GetString(34);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(35);
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийППИсходящее.ПустаяСсылка.Получить((byte[])Читалка.GetValue(36));
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(42))[0]==1;
							Ссылка.ДоговорЗайма = V82.ДокументыСсылка.ДоговорЗаймаСРаботником.ВзятьИзКэша((byte[])Читалка.GetValue(44));
							Ссылка.ЧастичнаяОплата = ((byte[])Читалка.GetValue(46))[0]==1;
							Ссылка.Содержание_УСН = Читалка.GetString(47);
							Ссылка.Графа4_УСН = Читалка.GetDecimal(48);
							Ссылка.Графа5_УСН = Читалка.GetDecimal(49);
							Ссылка.Графа6_УСН = Читалка.GetDecimal(50);
							Ссылка.Графа7_УСН = Читалка.GetDecimal(51);
							Ссылка.ДоходыЕНВД_УСН = ((byte[])Читалка.GetValue(52))[0]==1;
							Ссылка.РасходыЕНВД_УСН = ((byte[])Читалка.GetValue(53))[0]==1;
							Ссылка.НДС_УСН = Читалка.GetDecimal(54);
							Ссылка.РучнаяНастройка_УСН = ((byte[])Читалка.GetValue(55))[0]==1;
							Ссылка.ДатаПогашенияАванса = Читалка.GetDateTime(61);
							Ссылка.РасчетныйДокументРаботника = V82.ДокументыСсылка.АвансовыйОтчет.ВзятьИзКэша((byte[])Читалка.GetValue(62));
							Ссылка.УдалитьПеречислениеВБюджет = ((byte[])Читалка.GetValue(63))[0]==1;
							Ссылка.УдалитьВидПеречисленияВБюджет = V82.Перечисления/*Ссылка*/.УдалитьВидыПеречисленийВБюджет.ПустаяСсылка.Получить((byte[])Читалка.GetValue(64));
							Ссылка.ПеречислениеВБюджет = ((byte[])Читалка.GetValue(65))[0]==1;
							Ссылка.ВидПеречисленияВБюджет = V82.Перечисления/*Ссылка*/.ВидыПеречисленийВБюджет.ПустаяСсылка.Получить((byte[])Читалка.GetValue(66));
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыСсылка.ПлатежноеПоручениеИсходящее НайтиПоНомеру(string Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld8644_TYPE [ДокументОснование_Тип],_Fld8644_RRRef [ДокументОснование],_Fld8644_RTRef [ДокументОснование_Вид]
					,_Fld8655RRef [Организация]
					,_Fld8673RRef [СчетОрганизации]
					,_Fld8650RRef [Контрагент]
					,_Fld8641 [ДатаОплаты]
					,_Fld8672RRef [СчетКонтрагента]
					,_Fld8643RRef [ДоговорКонтрагента]
					,_Fld8640 [ВидПлатежа]
					,_Fld8660 [ОчередностьПлатежа]
					,_Fld8653 [НазначениеПлатежа]
					,_Fld8675 [ТекстПлательщика]
					,_Fld8638RRef [ВалютаДокумента]
					,_Fld8676 [ТекстПолучателя]
					,_Fld8649 [Комментарий]
					,_Fld8654 [Оплачено]
					,_Fld8645 [ИННПлательщика]
					,_Fld8651 [КПППлательщика]
					,_Fld8646 [ИННПолучателя]
					,_Fld8652 [КПППолучателя]
					,_Fld8656RRef [Ответственный]
					,_Fld8657 [ОтражатьВБухгалтерскомУчете]
					,_Fld8647 [КодБК]
					,_Fld8659 [ОтраженоВОперУчете]
					,_Fld8648 [КодОКАТО]
					,_Fld8661 [ПоказательДаты]
					,_Fld8662 [ПоказательНомера]
					,_Fld8663 [ПоказательОснования]
					,_Fld8664 [ПоказательПериода]
					,_Fld8665 [ПоказательТипа]
					,_Fld8666 [СтатусСоставителя]
					,_Fld8671 [СуммаДокумента]
					,_Fld8639RRef [ВидОперации]
					,_Fld8667RRef [СтатьяДвиженияДенежныхСредств]
					,_Fld8674RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld8668RRef [СубконтоДт1]
					,_Fld8669RRef [СубконтоДт2]
					,_Fld8670RRef [СубконтоДт3]
					,_Fld8658 [ОтражатьВНалоговомУчете]
					,_Fld8677RRef [ФизЛицо]
					,_Fld8642RRef [ДоговорЗайма]
					,_Fld8637RRef [ВалютаВзаиморасчетовРаботника]
					,_Fld8678 [ЧастичнаяОплата]
					,_Fld8679 [Содержание_УСН]
					,_Fld8680 [Графа4_УСН]
					,_Fld8681 [Графа5_УСН]
					,_Fld8682 [Графа6_УСН]
					,_Fld8683 [Графа7_УСН]
					,_Fld8684 [ДоходыЕНВД_УСН]
					,_Fld8685 [РасходыЕНВД_УСН]
					,_Fld8686 [НДС_УСН]
					,_Fld8687 [РучнаяНастройка_УСН]
					,_Fld8688RRef [Подразделение]
					,_Fld8689RRef [СчетУчетаРасчетовСКонтрагентомНУ]
					,_Fld8690RRef [СубконтоНУДт1]
					,_Fld8691RRef [СубконтоНУДт2]
					,_Fld8692RRef [СубконтоНУДт3]
					,_Fld21841 [ДатаПогашенияАванса]
					,_Fld21842RRef [РасчетныйДокументРаботника]
					,_Fld27234 [УдалитьПеречислениеВБюджет]
					,_Fld27235RRef [УдалитьВидПеречисленияВБюджет]
					,_Fld27236 [ПеречислениеВБюджет]
					,_Fld27237RRef [ВидПеречисленияВБюджет]
					From _Document389(NOLOCK)
					Where _Number = @Номер";
					Команда.Parameters.AddWithValue("Номер", Номер);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПлатежноеПоручениеИсходящее();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ДатаОплаты = Читалка.GetDateTime(9);
							Ссылка.ВидПлатежа = Читалка.GetString(12);
							Ссылка.ОчередностьПлатежа = Читалка.GetDecimal(13);
							Ссылка.НазначениеПлатежа = Читалка.GetString(14);
							Ссылка.ТекстПлательщика = Читалка.GetString(15);
							Ссылка.ТекстПолучателя = Читалка.GetString(17);
							Ссылка.Комментарий = Читалка.GetString(18);
							Ссылка.Оплачено = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.ИННПлательщика = Читалка.GetString(20);
							Ссылка.КПППлательщика = Читалка.GetString(21);
							Ссылка.ИННПолучателя = Читалка.GetString(22);
							Ссылка.КПППолучателя = Читалка.GetString(23);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.КодБК = Читалка.GetString(26);
							Ссылка.ОтраженоВОперУчете = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.КодОКАТО = Читалка.GetString(28);
							Ссылка.ПоказательДаты = Читалка.GetDateTime(29);
							Ссылка.ПоказательНомера = Читалка.GetString(30);
							Ссылка.ПоказательОснования = Читалка.GetString(31);
							Ссылка.ПоказательПериода = Читалка.GetString(32);
							Ссылка.ПоказательТипа = Читалка.GetString(33);
							Ссылка.СтатусСоставителя = Читалка.GetString(34);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(35);
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийППИсходящее.ПустаяСсылка.Получить((byte[])Читалка.GetValue(36));
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(42))[0]==1;
							Ссылка.ДоговорЗайма = V82.ДокументыСсылка.ДоговорЗаймаСРаботником.ВзятьИзКэша((byte[])Читалка.GetValue(44));
							Ссылка.ЧастичнаяОплата = ((byte[])Читалка.GetValue(46))[0]==1;
							Ссылка.Содержание_УСН = Читалка.GetString(47);
							Ссылка.Графа4_УСН = Читалка.GetDecimal(48);
							Ссылка.Графа5_УСН = Читалка.GetDecimal(49);
							Ссылка.Графа6_УСН = Читалка.GetDecimal(50);
							Ссылка.Графа7_УСН = Читалка.GetDecimal(51);
							Ссылка.ДоходыЕНВД_УСН = ((byte[])Читалка.GetValue(52))[0]==1;
							Ссылка.РасходыЕНВД_УСН = ((byte[])Читалка.GetValue(53))[0]==1;
							Ссылка.НДС_УСН = Читалка.GetDecimal(54);
							Ссылка.РучнаяНастройка_УСН = ((byte[])Читалка.GetValue(55))[0]==1;
							Ссылка.ДатаПогашенияАванса = Читалка.GetDateTime(61);
							Ссылка.РасчетныйДокументРаботника = V82.ДокументыСсылка.АвансовыйОтчет.ВзятьИзКэша((byte[])Читалка.GetValue(62));
							Ссылка.УдалитьПеречислениеВБюджет = ((byte[])Читалка.GetValue(63))[0]==1;
							Ссылка.УдалитьВидПеречисленияВБюджет = V82.Перечисления/*Ссылка*/.УдалитьВидыПеречисленийВБюджет.ПустаяСсылка.Получить((byte[])Читалка.GetValue(64));
							Ссылка.ПеречислениеВБюджет = ((byte[])Читалка.GetValue(65))[0]==1;
							Ссылка.ВидПеречисленияВБюджет = V82.Перечисления/*Ссылка*/.ВидыПеречисленийВБюджет.ПустаяСсылка.Получить((byte[])Читалка.GetValue(66));
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПлатежноеПоручениеИсходящее Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld8644_TYPE [ДокументОснование_Тип],_Fld8644_RRRef [ДокументОснование],_Fld8644_RTRef [ДокументОснование_Вид]
					,_Fld8655RRef [Организация]
					,_Fld8673RRef [СчетОрганизации]
					,_Fld8650RRef [Контрагент]
					,_Fld8641 [ДатаОплаты]
					,_Fld8672RRef [СчетКонтрагента]
					,_Fld8643RRef [ДоговорКонтрагента]
					,_Fld8640 [ВидПлатежа]
					,_Fld8660 [ОчередностьПлатежа]
					,_Fld8653 [НазначениеПлатежа]
					,_Fld8675 [ТекстПлательщика]
					,_Fld8638RRef [ВалютаДокумента]
					,_Fld8676 [ТекстПолучателя]
					,_Fld8649 [Комментарий]
					,_Fld8654 [Оплачено]
					,_Fld8645 [ИННПлательщика]
					,_Fld8651 [КПППлательщика]
					,_Fld8646 [ИННПолучателя]
					,_Fld8652 [КПППолучателя]
					,_Fld8656RRef [Ответственный]
					,_Fld8657 [ОтражатьВБухгалтерскомУчете]
					,_Fld8647 [КодБК]
					,_Fld8659 [ОтраженоВОперУчете]
					,_Fld8648 [КодОКАТО]
					,_Fld8661 [ПоказательДаты]
					,_Fld8662 [ПоказательНомера]
					,_Fld8663 [ПоказательОснования]
					,_Fld8664 [ПоказательПериода]
					,_Fld8665 [ПоказательТипа]
					,_Fld8666 [СтатусСоставителя]
					,_Fld8671 [СуммаДокумента]
					,_Fld8639RRef [ВидОперации]
					,_Fld8667RRef [СтатьяДвиженияДенежныхСредств]
					,_Fld8674RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld8668RRef [СубконтоДт1]
					,_Fld8669RRef [СубконтоДт2]
					,_Fld8670RRef [СубконтоДт3]
					,_Fld8658 [ОтражатьВНалоговомУчете]
					,_Fld8677RRef [ФизЛицо]
					,_Fld8642RRef [ДоговорЗайма]
					,_Fld8637RRef [ВалютаВзаиморасчетовРаботника]
					,_Fld8678 [ЧастичнаяОплата]
					,_Fld8679 [Содержание_УСН]
					,_Fld8680 [Графа4_УСН]
					,_Fld8681 [Графа5_УСН]
					,_Fld8682 [Графа6_УСН]
					,_Fld8683 [Графа7_УСН]
					,_Fld8684 [ДоходыЕНВД_УСН]
					,_Fld8685 [РасходыЕНВД_УСН]
					,_Fld8686 [НДС_УСН]
					,_Fld8687 [РучнаяНастройка_УСН]
					,_Fld8688RRef [Подразделение]
					,_Fld8689RRef [СчетУчетаРасчетовСКонтрагентомНУ]
					,_Fld8690RRef [СубконтоНУДт1]
					,_Fld8691RRef [СубконтоНУДт2]
					,_Fld8692RRef [СубконтоНУДт3]
					,_Fld21841 [ДатаПогашенияАванса]
					,_Fld21842RRef [РасчетныйДокументРаботника]
					,_Fld27234 [УдалитьПеречислениеВБюджет]
					,_Fld27235RRef [УдалитьВидПеречисленияВБюджет]
					,_Fld27236 [ПеречислениеВБюджет]
					,_Fld27237RRef [ВидПеречисленияВБюджет]
					From _Document389(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ПлатежноеПоручениеИсходящее();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПлатежноеПоручениеИсходящее();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ДатаОплаты = Читалка.GetDateTime(9);
							Ссылка.ВидПлатежа = Читалка.GetString(12);
							Ссылка.ОчередностьПлатежа = Читалка.GetDecimal(13);
							Ссылка.НазначениеПлатежа = Читалка.GetString(14);
							Ссылка.ТекстПлательщика = Читалка.GetString(15);
							Ссылка.ТекстПолучателя = Читалка.GetString(17);
							Ссылка.Комментарий = Читалка.GetString(18);
							Ссылка.Оплачено = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.ИННПлательщика = Читалка.GetString(20);
							Ссылка.КПППлательщика = Читалка.GetString(21);
							Ссылка.ИННПолучателя = Читалка.GetString(22);
							Ссылка.КПППолучателя = Читалка.GetString(23);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.КодБК = Читалка.GetString(26);
							Ссылка.ОтраженоВОперУчете = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.КодОКАТО = Читалка.GetString(28);
							Ссылка.ПоказательДаты = Читалка.GetDateTime(29);
							Ссылка.ПоказательНомера = Читалка.GetString(30);
							Ссылка.ПоказательОснования = Читалка.GetString(31);
							Ссылка.ПоказательПериода = Читалка.GetString(32);
							Ссылка.ПоказательТипа = Читалка.GetString(33);
							Ссылка.СтатусСоставителя = Читалка.GetString(34);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(35);
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийППИсходящее.ПустаяСсылка.Получить((byte[])Читалка.GetValue(36));
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(42))[0]==1;
							Ссылка.ДоговорЗайма = V82.ДокументыСсылка.ДоговорЗаймаСРаботником.ВзятьИзКэша((byte[])Читалка.GetValue(44));
							Ссылка.ЧастичнаяОплата = ((byte[])Читалка.GetValue(46))[0]==1;
							Ссылка.Содержание_УСН = Читалка.GetString(47);
							Ссылка.Графа4_УСН = Читалка.GetDecimal(48);
							Ссылка.Графа5_УСН = Читалка.GetDecimal(49);
							Ссылка.Графа6_УСН = Читалка.GetDecimal(50);
							Ссылка.Графа7_УСН = Читалка.GetDecimal(51);
							Ссылка.ДоходыЕНВД_УСН = ((byte[])Читалка.GetValue(52))[0]==1;
							Ссылка.РасходыЕНВД_УСН = ((byte[])Читалка.GetValue(53))[0]==1;
							Ссылка.НДС_УСН = Читалка.GetDecimal(54);
							Ссылка.РучнаяНастройка_УСН = ((byte[])Читалка.GetValue(55))[0]==1;
							Ссылка.ДатаПогашенияАванса = Читалка.GetDateTime(61);
							Ссылка.РасчетныйДокументРаботника = V82.ДокументыСсылка.АвансовыйОтчет.ВзятьИзКэша((byte[])Читалка.GetValue(62));
							Ссылка.УдалитьПеречислениеВБюджет = ((byte[])Читалка.GetValue(63))[0]==1;
							Ссылка.УдалитьВидПеречисленияВБюджет = V82.Перечисления/*Ссылка*/.УдалитьВидыПеречисленийВБюджет.ПустаяСсылка.Получить((byte[])Читалка.GetValue(64));
							Ссылка.ПеречислениеВБюджет = ((byte[])Читалка.GetValue(65))[0]==1;
							Ссылка.ВидПеречисленияВБюджет = V82.Перечисления/*Ссылка*/.ВидыПеречисленийВБюджет.ПустаяСсылка.Получить((byte[])Читалка.GetValue(66));
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПлатежноеПоручениеИсходящее ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld8644_TYPE [ДокументОснование_Тип],_Fld8644_RRRef [ДокументОснование],_Fld8644_RTRef [ДокументОснование_Вид]
					,_Fld8655RRef [Организация]
					,_Fld8673RRef [СчетОрганизации]
					,_Fld8650RRef [Контрагент]
					,_Fld8641 [ДатаОплаты]
					,_Fld8672RRef [СчетКонтрагента]
					,_Fld8643RRef [ДоговорКонтрагента]
					,_Fld8640 [ВидПлатежа]
					,_Fld8660 [ОчередностьПлатежа]
					,_Fld8653 [НазначениеПлатежа]
					,_Fld8675 [ТекстПлательщика]
					,_Fld8638RRef [ВалютаДокумента]
					,_Fld8676 [ТекстПолучателя]
					,_Fld8649 [Комментарий]
					,_Fld8654 [Оплачено]
					,_Fld8645 [ИННПлательщика]
					,_Fld8651 [КПППлательщика]
					,_Fld8646 [ИННПолучателя]
					,_Fld8652 [КПППолучателя]
					,_Fld8656RRef [Ответственный]
					,_Fld8657 [ОтражатьВБухгалтерскомУчете]
					,_Fld8647 [КодБК]
					,_Fld8659 [ОтраженоВОперУчете]
					,_Fld8648 [КодОКАТО]
					,_Fld8661 [ПоказательДаты]
					,_Fld8662 [ПоказательНомера]
					,_Fld8663 [ПоказательОснования]
					,_Fld8664 [ПоказательПериода]
					,_Fld8665 [ПоказательТипа]
					,_Fld8666 [СтатусСоставителя]
					,_Fld8671 [СуммаДокумента]
					,_Fld8639RRef [ВидОперации]
					,_Fld8667RRef [СтатьяДвиженияДенежныхСредств]
					,_Fld8674RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld8668RRef [СубконтоДт1]
					,_Fld8669RRef [СубконтоДт2]
					,_Fld8670RRef [СубконтоДт3]
					,_Fld8658 [ОтражатьВНалоговомУчете]
					,_Fld8677RRef [ФизЛицо]
					,_Fld8642RRef [ДоговорЗайма]
					,_Fld8637RRef [ВалютаВзаиморасчетовРаботника]
					,_Fld8678 [ЧастичнаяОплата]
					,_Fld8679 [Содержание_УСН]
					,_Fld8680 [Графа4_УСН]
					,_Fld8681 [Графа5_УСН]
					,_Fld8682 [Графа6_УСН]
					,_Fld8683 [Графа7_УСН]
					,_Fld8684 [ДоходыЕНВД_УСН]
					,_Fld8685 [РасходыЕНВД_УСН]
					,_Fld8686 [НДС_УСН]
					,_Fld8687 [РучнаяНастройка_УСН]
					,_Fld8688RRef [Подразделение]
					,_Fld8689RRef [СчетУчетаРасчетовСКонтрагентомНУ]
					,_Fld8690RRef [СубконтоНУДт1]
					,_Fld8691RRef [СубконтоНУДт2]
					,_Fld8692RRef [СубконтоНУДт3]
					,_Fld21841 [ДатаПогашенияАванса]
					,_Fld21842RRef [РасчетныйДокументРаботника]
					,_Fld27234 [УдалитьПеречислениеВБюджет]
					,_Fld27235RRef [УдалитьВидПеречисленияВБюджет]
					,_Fld27236 [ПеречислениеВБюджет]
					,_Fld27237RRef [ВидПеречисленияВБюджет]
					From _Document389(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ПлатежноеПоручениеИсходящее();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПлатежноеПоручениеИсходящее();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ДатаОплаты = Читалка.GetDateTime(9);
							Ссылка.ВидПлатежа = Читалка.GetString(12);
							Ссылка.ОчередностьПлатежа = Читалка.GetDecimal(13);
							Ссылка.НазначениеПлатежа = Читалка.GetString(14);
							Ссылка.ТекстПлательщика = Читалка.GetString(15);
							Ссылка.ТекстПолучателя = Читалка.GetString(17);
							Ссылка.Комментарий = Читалка.GetString(18);
							Ссылка.Оплачено = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.ИННПлательщика = Читалка.GetString(20);
							Ссылка.КПППлательщика = Читалка.GetString(21);
							Ссылка.ИННПолучателя = Читалка.GetString(22);
							Ссылка.КПППолучателя = Читалка.GetString(23);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.КодБК = Читалка.GetString(26);
							Ссылка.ОтраженоВОперУчете = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.КодОКАТО = Читалка.GetString(28);
							Ссылка.ПоказательДаты = Читалка.GetDateTime(29);
							Ссылка.ПоказательНомера = Читалка.GetString(30);
							Ссылка.ПоказательОснования = Читалка.GetString(31);
							Ссылка.ПоказательПериода = Читалка.GetString(32);
							Ссылка.ПоказательТипа = Читалка.GetString(33);
							Ссылка.СтатусСоставителя = Читалка.GetString(34);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(35);
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийППИсходящее.ПустаяСсылка.Получить((byte[])Читалка.GetValue(36));
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(42))[0]==1;
							Ссылка.ДоговорЗайма = V82.ДокументыСсылка.ДоговорЗаймаСРаботником.ВзятьИзКэша((byte[])Читалка.GetValue(44));
							Ссылка.ЧастичнаяОплата = ((byte[])Читалка.GetValue(46))[0]==1;
							Ссылка.Содержание_УСН = Читалка.GetString(47);
							Ссылка.Графа4_УСН = Читалка.GetDecimal(48);
							Ссылка.Графа5_УСН = Читалка.GetDecimal(49);
							Ссылка.Графа6_УСН = Читалка.GetDecimal(50);
							Ссылка.Графа7_УСН = Читалка.GetDecimal(51);
							Ссылка.ДоходыЕНВД_УСН = ((byte[])Читалка.GetValue(52))[0]==1;
							Ссылка.РасходыЕНВД_УСН = ((byte[])Читалка.GetValue(53))[0]==1;
							Ссылка.НДС_УСН = Читалка.GetDecimal(54);
							Ссылка.РучнаяНастройка_УСН = ((byte[])Читалка.GetValue(55))[0]==1;
							Ссылка.ДатаПогашенияАванса = Читалка.GetDateTime(61);
							Ссылка.РасчетныйДокументРаботника = V82.ДокументыСсылка.АвансовыйОтчет.ВзятьИзКэша((byte[])Читалка.GetValue(62));
							Ссылка.УдалитьПеречислениеВБюджет = ((byte[])Читалка.GetValue(63))[0]==1;
							Ссылка.УдалитьВидПеречисленияВБюджет = V82.Перечисления/*Ссылка*/.УдалитьВидыПеречисленийВБюджет.ПустаяСсылка.Получить((byte[])Читалка.GetValue(64));
							Ссылка.ПеречислениеВБюджет = ((byte[])Читалка.GetValue(65))[0]==1;
							Ссылка.ВидПеречисленияВБюджет = V82.Перечисления/*Ссылка*/.ВидыПеречисленийВБюджет.ПустаяСсылка.Получить((byte[])Читалка.GetValue(66));
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПлатежноеПоручениеИсходящее ВыбратьПоНомеру(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld8644_TYPE [ДокументОснование_Тип],_Fld8644_RRRef [ДокументОснование],_Fld8644_RTRef [ДокументОснование_Вид]
					,_Fld8655RRef [Организация]
					,_Fld8673RRef [СчетОрганизации]
					,_Fld8650RRef [Контрагент]
					,_Fld8641 [ДатаОплаты]
					,_Fld8672RRef [СчетКонтрагента]
					,_Fld8643RRef [ДоговорКонтрагента]
					,_Fld8640 [ВидПлатежа]
					,_Fld8660 [ОчередностьПлатежа]
					,_Fld8653 [НазначениеПлатежа]
					,_Fld8675 [ТекстПлательщика]
					,_Fld8638RRef [ВалютаДокумента]
					,_Fld8676 [ТекстПолучателя]
					,_Fld8649 [Комментарий]
					,_Fld8654 [Оплачено]
					,_Fld8645 [ИННПлательщика]
					,_Fld8651 [КПППлательщика]
					,_Fld8646 [ИННПолучателя]
					,_Fld8652 [КПППолучателя]
					,_Fld8656RRef [Ответственный]
					,_Fld8657 [ОтражатьВБухгалтерскомУчете]
					,_Fld8647 [КодБК]
					,_Fld8659 [ОтраженоВОперУчете]
					,_Fld8648 [КодОКАТО]
					,_Fld8661 [ПоказательДаты]
					,_Fld8662 [ПоказательНомера]
					,_Fld8663 [ПоказательОснования]
					,_Fld8664 [ПоказательПериода]
					,_Fld8665 [ПоказательТипа]
					,_Fld8666 [СтатусСоставителя]
					,_Fld8671 [СуммаДокумента]
					,_Fld8639RRef [ВидОперации]
					,_Fld8667RRef [СтатьяДвиженияДенежныхСредств]
					,_Fld8674RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld8668RRef [СубконтоДт1]
					,_Fld8669RRef [СубконтоДт2]
					,_Fld8670RRef [СубконтоДт3]
					,_Fld8658 [ОтражатьВНалоговомУчете]
					,_Fld8677RRef [ФизЛицо]
					,_Fld8642RRef [ДоговорЗайма]
					,_Fld8637RRef [ВалютаВзаиморасчетовРаботника]
					,_Fld8678 [ЧастичнаяОплата]
					,_Fld8679 [Содержание_УСН]
					,_Fld8680 [Графа4_УСН]
					,_Fld8681 [Графа5_УСН]
					,_Fld8682 [Графа6_УСН]
					,_Fld8683 [Графа7_УСН]
					,_Fld8684 [ДоходыЕНВД_УСН]
					,_Fld8685 [РасходыЕНВД_УСН]
					,_Fld8686 [НДС_УСН]
					,_Fld8687 [РучнаяНастройка_УСН]
					,_Fld8688RRef [Подразделение]
					,_Fld8689RRef [СчетУчетаРасчетовСКонтрагентомНУ]
					,_Fld8690RRef [СубконтоНУДт1]
					,_Fld8691RRef [СубконтоНУДт2]
					,_Fld8692RRef [СубконтоНУДт3]
					,_Fld21841 [ДатаПогашенияАванса]
					,_Fld21842RRef [РасчетныйДокументРаботника]
					,_Fld27234 [УдалитьПеречислениеВБюджет]
					,_Fld27235RRef [УдалитьВидПеречисленияВБюджет]
					,_Fld27236 [ПеречислениеВБюджет]
					,_Fld27237RRef [ВидПеречисленияВБюджет]
					From _Document389(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ПлатежноеПоручениеИсходящее();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПлатежноеПоручениеИсходящее();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ДатаОплаты = Читалка.GetDateTime(9);
							Ссылка.ВидПлатежа = Читалка.GetString(12);
							Ссылка.ОчередностьПлатежа = Читалка.GetDecimal(13);
							Ссылка.НазначениеПлатежа = Читалка.GetString(14);
							Ссылка.ТекстПлательщика = Читалка.GetString(15);
							Ссылка.ТекстПолучателя = Читалка.GetString(17);
							Ссылка.Комментарий = Читалка.GetString(18);
							Ссылка.Оплачено = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.ИННПлательщика = Читалка.GetString(20);
							Ссылка.КПППлательщика = Читалка.GetString(21);
							Ссылка.ИННПолучателя = Читалка.GetString(22);
							Ссылка.КПППолучателя = Читалка.GetString(23);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.КодБК = Читалка.GetString(26);
							Ссылка.ОтраженоВОперУчете = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.КодОКАТО = Читалка.GetString(28);
							Ссылка.ПоказательДаты = Читалка.GetDateTime(29);
							Ссылка.ПоказательНомера = Читалка.GetString(30);
							Ссылка.ПоказательОснования = Читалка.GetString(31);
							Ссылка.ПоказательПериода = Читалка.GetString(32);
							Ссылка.ПоказательТипа = Читалка.GetString(33);
							Ссылка.СтатусСоставителя = Читалка.GetString(34);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(35);
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийППИсходящее.ПустаяСсылка.Получить((byte[])Читалка.GetValue(36));
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(42))[0]==1;
							Ссылка.ДоговорЗайма = V82.ДокументыСсылка.ДоговорЗаймаСРаботником.ВзятьИзКэша((byte[])Читалка.GetValue(44));
							Ссылка.ЧастичнаяОплата = ((byte[])Читалка.GetValue(46))[0]==1;
							Ссылка.Содержание_УСН = Читалка.GetString(47);
							Ссылка.Графа4_УСН = Читалка.GetDecimal(48);
							Ссылка.Графа5_УСН = Читалка.GetDecimal(49);
							Ссылка.Графа6_УСН = Читалка.GetDecimal(50);
							Ссылка.Графа7_УСН = Читалка.GetDecimal(51);
							Ссылка.ДоходыЕНВД_УСН = ((byte[])Читалка.GetValue(52))[0]==1;
							Ссылка.РасходыЕНВД_УСН = ((byte[])Читалка.GetValue(53))[0]==1;
							Ссылка.НДС_УСН = Читалка.GetDecimal(54);
							Ссылка.РучнаяНастройка_УСН = ((byte[])Читалка.GetValue(55))[0]==1;
							Ссылка.ДатаПогашенияАванса = Читалка.GetDateTime(61);
							Ссылка.РасчетныйДокументРаботника = V82.ДокументыСсылка.АвансовыйОтчет.ВзятьИзКэша((byte[])Читалка.GetValue(62));
							Ссылка.УдалитьПеречислениеВБюджет = ((byte[])Читалка.GetValue(63))[0]==1;
							Ссылка.УдалитьВидПеречисленияВБюджет = V82.Перечисления/*Ссылка*/.УдалитьВидыПеречисленийВБюджет.ПустаяСсылка.Получить((byte[])Читалка.GetValue(64));
							Ссылка.ПеречислениеВБюджет = ((byte[])Читалка.GetValue(65))[0]==1;
							Ссылка.ВидПеречисленияВБюджет = V82.Перечисления/*Ссылка*/.ВидыПеречисленийВБюджет.ПустаяСсылка.Получить((byte[])Читалка.GetValue(66));
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПлатежноеПоручениеИсходящее СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld8644_TYPE [ДокументОснование_Тип],_Fld8644_RRRef [ДокументОснование],_Fld8644_RTRef [ДокументОснование_Вид]
					,_Fld8655RRef [Организация]
					,_Fld8673RRef [СчетОрганизации]
					,_Fld8650RRef [Контрагент]
					,_Fld8641 [ДатаОплаты]
					,_Fld8672RRef [СчетКонтрагента]
					,_Fld8643RRef [ДоговорКонтрагента]
					,_Fld8640 [ВидПлатежа]
					,_Fld8660 [ОчередностьПлатежа]
					,_Fld8653 [НазначениеПлатежа]
					,_Fld8675 [ТекстПлательщика]
					,_Fld8638RRef [ВалютаДокумента]
					,_Fld8676 [ТекстПолучателя]
					,_Fld8649 [Комментарий]
					,_Fld8654 [Оплачено]
					,_Fld8645 [ИННПлательщика]
					,_Fld8651 [КПППлательщика]
					,_Fld8646 [ИННПолучателя]
					,_Fld8652 [КПППолучателя]
					,_Fld8656RRef [Ответственный]
					,_Fld8657 [ОтражатьВБухгалтерскомУчете]
					,_Fld8647 [КодБК]
					,_Fld8659 [ОтраженоВОперУчете]
					,_Fld8648 [КодОКАТО]
					,_Fld8661 [ПоказательДаты]
					,_Fld8662 [ПоказательНомера]
					,_Fld8663 [ПоказательОснования]
					,_Fld8664 [ПоказательПериода]
					,_Fld8665 [ПоказательТипа]
					,_Fld8666 [СтатусСоставителя]
					,_Fld8671 [СуммаДокумента]
					,_Fld8639RRef [ВидОперации]
					,_Fld8667RRef [СтатьяДвиженияДенежныхСредств]
					,_Fld8674RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld8668RRef [СубконтоДт1]
					,_Fld8669RRef [СубконтоДт2]
					,_Fld8670RRef [СубконтоДт3]
					,_Fld8658 [ОтражатьВНалоговомУчете]
					,_Fld8677RRef [ФизЛицо]
					,_Fld8642RRef [ДоговорЗайма]
					,_Fld8637RRef [ВалютаВзаиморасчетовРаботника]
					,_Fld8678 [ЧастичнаяОплата]
					,_Fld8679 [Содержание_УСН]
					,_Fld8680 [Графа4_УСН]
					,_Fld8681 [Графа5_УСН]
					,_Fld8682 [Графа6_УСН]
					,_Fld8683 [Графа7_УСН]
					,_Fld8684 [ДоходыЕНВД_УСН]
					,_Fld8685 [РасходыЕНВД_УСН]
					,_Fld8686 [НДС_УСН]
					,_Fld8687 [РучнаяНастройка_УСН]
					,_Fld8688RRef [Подразделение]
					,_Fld8689RRef [СчетУчетаРасчетовСКонтрагентомНУ]
					,_Fld8690RRef [СубконтоНУДт1]
					,_Fld8691RRef [СубконтоНУДт2]
					,_Fld8692RRef [СубконтоНУДт3]
					,_Fld21841 [ДатаПогашенияАванса]
					,_Fld21842RRef [РасчетныйДокументРаботника]
					,_Fld27234 [УдалитьПеречислениеВБюджет]
					,_Fld27235RRef [УдалитьВидПеречисленияВБюджет]
					,_Fld27236 [ПеречислениеВБюджет]
					,_Fld27237RRef [ВидПеречисленияВБюджет]
					From _Document389(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ПлатежноеПоручениеИсходящее();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПлатежноеПоручениеИсходящее();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ДатаОплаты = Читалка.GetDateTime(9);
							Ссылка.ВидПлатежа = Читалка.GetString(12);
							Ссылка.ОчередностьПлатежа = Читалка.GetDecimal(13);
							Ссылка.НазначениеПлатежа = Читалка.GetString(14);
							Ссылка.ТекстПлательщика = Читалка.GetString(15);
							Ссылка.ТекстПолучателя = Читалка.GetString(17);
							Ссылка.Комментарий = Читалка.GetString(18);
							Ссылка.Оплачено = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.ИННПлательщика = Читалка.GetString(20);
							Ссылка.КПППлательщика = Читалка.GetString(21);
							Ссылка.ИННПолучателя = Читалка.GetString(22);
							Ссылка.КПППолучателя = Читалка.GetString(23);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.КодБК = Читалка.GetString(26);
							Ссылка.ОтраженоВОперУчете = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.КодОКАТО = Читалка.GetString(28);
							Ссылка.ПоказательДаты = Читалка.GetDateTime(29);
							Ссылка.ПоказательНомера = Читалка.GetString(30);
							Ссылка.ПоказательОснования = Читалка.GetString(31);
							Ссылка.ПоказательПериода = Читалка.GetString(32);
							Ссылка.ПоказательТипа = Читалка.GetString(33);
							Ссылка.СтатусСоставителя = Читалка.GetString(34);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(35);
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийППИсходящее.ПустаяСсылка.Получить((byte[])Читалка.GetValue(36));
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(42))[0]==1;
							Ссылка.ДоговорЗайма = V82.ДокументыСсылка.ДоговорЗаймаСРаботником.ВзятьИзКэша((byte[])Читалка.GetValue(44));
							Ссылка.ЧастичнаяОплата = ((byte[])Читалка.GetValue(46))[0]==1;
							Ссылка.Содержание_УСН = Читалка.GetString(47);
							Ссылка.Графа4_УСН = Читалка.GetDecimal(48);
							Ссылка.Графа5_УСН = Читалка.GetDecimal(49);
							Ссылка.Графа6_УСН = Читалка.GetDecimal(50);
							Ссылка.Графа7_УСН = Читалка.GetDecimal(51);
							Ссылка.ДоходыЕНВД_УСН = ((byte[])Читалка.GetValue(52))[0]==1;
							Ссылка.РасходыЕНВД_УСН = ((byte[])Читалка.GetValue(53))[0]==1;
							Ссылка.НДС_УСН = Читалка.GetDecimal(54);
							Ссылка.РучнаяНастройка_УСН = ((byte[])Читалка.GetValue(55))[0]==1;
							Ссылка.ДатаПогашенияАванса = Читалка.GetDateTime(61);
							Ссылка.РасчетныйДокументРаботника = V82.ДокументыСсылка.АвансовыйОтчет.ВзятьИзКэша((byte[])Читалка.GetValue(62));
							Ссылка.УдалитьПеречислениеВБюджет = ((byte[])Читалка.GetValue(63))[0]==1;
							Ссылка.УдалитьВидПеречисленияВБюджет = V82.Перечисления/*Ссылка*/.УдалитьВидыПеречисленийВБюджет.ПустаяСсылка.Получить((byte[])Читалка.GetValue(64));
							Ссылка.ПеречислениеВБюджет = ((byte[])Читалка.GetValue(65))[0]==1;
							Ссылка.ВидПеречисленияВБюджет = V82.Перечисления/*Ссылка*/.ВидыПеречисленийВБюджет.ПустаяСсылка.Получить((byte[])Читалка.GetValue(66));
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПлатежноеПоручениеИсходящее СтраницаПоНомеру(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld8644_TYPE [ДокументОснование_Тип],_Fld8644_RRRef [ДокументОснование],_Fld8644_RTRef [ДокументОснование_Вид]
					,_Fld8655RRef [Организация]
					,_Fld8673RRef [СчетОрганизации]
					,_Fld8650RRef [Контрагент]
					,_Fld8641 [ДатаОплаты]
					,_Fld8672RRef [СчетКонтрагента]
					,_Fld8643RRef [ДоговорКонтрагента]
					,_Fld8640 [ВидПлатежа]
					,_Fld8660 [ОчередностьПлатежа]
					,_Fld8653 [НазначениеПлатежа]
					,_Fld8675 [ТекстПлательщика]
					,_Fld8638RRef [ВалютаДокумента]
					,_Fld8676 [ТекстПолучателя]
					,_Fld8649 [Комментарий]
					,_Fld8654 [Оплачено]
					,_Fld8645 [ИННПлательщика]
					,_Fld8651 [КПППлательщика]
					,_Fld8646 [ИННПолучателя]
					,_Fld8652 [КПППолучателя]
					,_Fld8656RRef [Ответственный]
					,_Fld8657 [ОтражатьВБухгалтерскомУчете]
					,_Fld8647 [КодБК]
					,_Fld8659 [ОтраженоВОперУчете]
					,_Fld8648 [КодОКАТО]
					,_Fld8661 [ПоказательДаты]
					,_Fld8662 [ПоказательНомера]
					,_Fld8663 [ПоказательОснования]
					,_Fld8664 [ПоказательПериода]
					,_Fld8665 [ПоказательТипа]
					,_Fld8666 [СтатусСоставителя]
					,_Fld8671 [СуммаДокумента]
					,_Fld8639RRef [ВидОперации]
					,_Fld8667RRef [СтатьяДвиженияДенежныхСредств]
					,_Fld8674RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld8668RRef [СубконтоДт1]
					,_Fld8669RRef [СубконтоДт2]
					,_Fld8670RRef [СубконтоДт3]
					,_Fld8658 [ОтражатьВНалоговомУчете]
					,_Fld8677RRef [ФизЛицо]
					,_Fld8642RRef [ДоговорЗайма]
					,_Fld8637RRef [ВалютаВзаиморасчетовРаботника]
					,_Fld8678 [ЧастичнаяОплата]
					,_Fld8679 [Содержание_УСН]
					,_Fld8680 [Графа4_УСН]
					,_Fld8681 [Графа5_УСН]
					,_Fld8682 [Графа6_УСН]
					,_Fld8683 [Графа7_УСН]
					,_Fld8684 [ДоходыЕНВД_УСН]
					,_Fld8685 [РасходыЕНВД_УСН]
					,_Fld8686 [НДС_УСН]
					,_Fld8687 [РучнаяНастройка_УСН]
					,_Fld8688RRef [Подразделение]
					,_Fld8689RRef [СчетУчетаРасчетовСКонтрагентомНУ]
					,_Fld8690RRef [СубконтоНУДт1]
					,_Fld8691RRef [СубконтоНУДт2]
					,_Fld8692RRef [СубконтоНУДт3]
					,_Fld21841 [ДатаПогашенияАванса]
					,_Fld21842RRef [РасчетныйДокументРаботника]
					,_Fld27234 [УдалитьПеречислениеВБюджет]
					,_Fld27235RRef [УдалитьВидПеречисленияВБюджет]
					,_Fld27236 [ПеречислениеВБюджет]
					,_Fld27237RRef [ВидПеречисленияВБюджет]
					From _Document389(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ПлатежноеПоручениеИсходящее();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПлатежноеПоручениеИсходящее();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ДатаОплаты = Читалка.GetDateTime(9);
							Ссылка.ВидПлатежа = Читалка.GetString(12);
							Ссылка.ОчередностьПлатежа = Читалка.GetDecimal(13);
							Ссылка.НазначениеПлатежа = Читалка.GetString(14);
							Ссылка.ТекстПлательщика = Читалка.GetString(15);
							Ссылка.ТекстПолучателя = Читалка.GetString(17);
							Ссылка.Комментарий = Читалка.GetString(18);
							Ссылка.Оплачено = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.ИННПлательщика = Читалка.GetString(20);
							Ссылка.КПППлательщика = Читалка.GetString(21);
							Ссылка.ИННПолучателя = Читалка.GetString(22);
							Ссылка.КПППолучателя = Читалка.GetString(23);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.КодБК = Читалка.GetString(26);
							Ссылка.ОтраженоВОперУчете = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.КодОКАТО = Читалка.GetString(28);
							Ссылка.ПоказательДаты = Читалка.GetDateTime(29);
							Ссылка.ПоказательНомера = Читалка.GetString(30);
							Ссылка.ПоказательОснования = Читалка.GetString(31);
							Ссылка.ПоказательПериода = Читалка.GetString(32);
							Ссылка.ПоказательТипа = Читалка.GetString(33);
							Ссылка.СтатусСоставителя = Читалка.GetString(34);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(35);
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийППИсходящее.ПустаяСсылка.Получить((byte[])Читалка.GetValue(36));
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(42))[0]==1;
							Ссылка.ДоговорЗайма = V82.ДокументыСсылка.ДоговорЗаймаСРаботником.ВзятьИзКэша((byte[])Читалка.GetValue(44));
							Ссылка.ЧастичнаяОплата = ((byte[])Читалка.GetValue(46))[0]==1;
							Ссылка.Содержание_УСН = Читалка.GetString(47);
							Ссылка.Графа4_УСН = Читалка.GetDecimal(48);
							Ссылка.Графа5_УСН = Читалка.GetDecimal(49);
							Ссылка.Графа6_УСН = Читалка.GetDecimal(50);
							Ссылка.Графа7_УСН = Читалка.GetDecimal(51);
							Ссылка.ДоходыЕНВД_УСН = ((byte[])Читалка.GetValue(52))[0]==1;
							Ссылка.РасходыЕНВД_УСН = ((byte[])Читалка.GetValue(53))[0]==1;
							Ссылка.НДС_УСН = Читалка.GetDecimal(54);
							Ссылка.РучнаяНастройка_УСН = ((byte[])Читалка.GetValue(55))[0]==1;
							Ссылка.ДатаПогашенияАванса = Читалка.GetDateTime(61);
							Ссылка.РасчетныйДокументРаботника = V82.ДокументыСсылка.АвансовыйОтчет.ВзятьИзКэша((byte[])Читалка.GetValue(62));
							Ссылка.УдалитьПеречислениеВБюджет = ((byte[])Читалка.GetValue(63))[0]==1;
							Ссылка.УдалитьВидПеречисленияВБюджет = V82.Перечисления/*Ссылка*/.УдалитьВидыПеречисленийВБюджет.ПустаяСсылка.Получить((byte[])Читалка.GetValue(64));
							Ссылка.ПеречислениеВБюджет = ((byte[])Читалка.GetValue(65))[0]==1;
							Ссылка.ВидПеречисленияВБюджет = V82.Перечисления/*Ссылка*/.ВидыПеречисленийВБюджет.ПустаяСсылка.Получить((byte[])Читалка.GetValue(66));
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.ДокументыОбъект.ПлатежноеПоручениеИсходящее СоздатьЭлемент()
		{
			var Объект = new V82.ДокументыОбъект.ПлатежноеПоручениеИсходящее();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.ВидПлатежа = "";
			Объект.НазначениеПлатежа = "";
			Объект.ТекстПлательщика = "";
			Объект.ТекстПолучателя = "";
			Объект.Комментарий = "";
			Объект.ИННПлательщика = "";
			Объект.КПППлательщика = "";
			Объект.ИННПолучателя = "";
			Объект.КПППолучателя = "";
			Объект.КодБК = "";
			Объект.КодОКАТО = "";
			Объект.ПоказательНомера = "";
			Объект.ПоказательОснования = "";
			Объект.ПоказательПериода = "";
			Объект.ПоказательТипа = "";
			Объект.СтатусСоставителя = "";
			Объект.Содержание_УСН = "";
			Объект.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийППИсходящее.ПустаяСсылка;
			Объект.ДоговорЗайма = new V82.ДокументыСсылка.ДоговорЗаймаСРаботником();
			Объект.РасчетныйДокументРаботника = new V82.ДокументыСсылка.АвансовыйОтчет();
			Объект.УдалитьВидПеречисленияВБюджет = V82.Перечисления/*Ссылка*/.УдалитьВидыПеречисленийВБюджет.ПустаяСсылка;
			Объект.ВидПеречисленияВБюджет = V82.Перечисления/*Ссылка*/.ВидыПеречисленийВБюджет.ПустаяСсылка;
			return Объект;
		}
	}
}