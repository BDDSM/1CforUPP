
using System;
using System.Data.SqlClient;
using V82;
using V82.ДокументыСсылка;
using V82.Документы;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Документы//Менеджер
{
	///<summary>
	///(Общ)
	///</summary>
	public partial class ВозвратТоваровПоставщикуИзНТТ:ДокументМенеджер
	{
		
		public static ДокументыСсылка.ВозвратТоваровПоставщикуИзНТТ НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld6378RRef [Организация]
					,_Fld6379RRef [БанковскийСчетОрганизации]
					,_Fld6380 [ОтражатьВУправленческомУчете]
					,_Fld6381 [ОтражатьВБухгалтерскомУчете]
					,_Fld6382 [ОтражатьВНалоговомУчете]
					,_Fld6383RRef [Подразделение]
					,_Fld6384 [Комментарий]
					,_Fld6385_TYPE [Сделка_Тип],_Fld6385_RRRef [Сделка],_Fld6385_RTRef [Сделка_Вид]
					,_Fld6386RRef [Склад]
					,_Fld6387RRef [ДоговорКонтрагента]
					,_Fld6388RRef [Контрагент]
					,_Fld6389RRef [ТипЦен]
					,_Fld6390RRef [ВалютаДокумента]
					,_Fld6391 [УчитыватьНДС]
					,_Fld6392 [СуммаВключаетНДС]
					,_Fld6393 [КурсВзаиморасчетов]
					,_Fld6394 [СуммаДокумента]
					,_Fld6395 [КратностьВзаиморасчетов]
					,_Fld6396RRef [Ответственный]
					,_Fld6397RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld6398RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld6399RRef [СчетУчетаРасчетовПоТаре]
					,_Fld6400 [НДСВключенВСтоимость]
					,_Fld6401RRef [Грузополучатель]
					,_Fld6402RRef [СчетУчетаРасчетовПоПретензиям]
					,_Fld6403RRef [СчетУчетаДоходовБУ]
					,_Fld6404RRef [СчетУчетаРасходовБУ]
					,_Fld6405RRef [СчетУчетаДоходовНУ]
					,_Fld6406RRef [СчетУчетаРасходовНУ]
					,_Fld6407RRef [СтатьяДоходовИРасходов]
					,_Fld6408 [ПоставщикуВыставляетсяСчетФактураНаВозврат]
					,_Fld6409_TYPE [Проект_Тип],_Fld6409_RRRef [Проект],_Fld6409_RTRef [Проект_Вид]
					From _Document339(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ВозвратТоваровПоставщикуИзНТТ();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(20);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(21);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(22);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ПоставщикуВыставляетсяСчетФактураНаВозврат = ((byte[])Читалка.GetValue(35))[0]==1;
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыСсылка.ВозвратТоваровПоставщикуИзНТТ НайтиПоНомеру(string Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld6378RRef [Организация]
					,_Fld6379RRef [БанковскийСчетОрганизации]
					,_Fld6380 [ОтражатьВУправленческомУчете]
					,_Fld6381 [ОтражатьВБухгалтерскомУчете]
					,_Fld6382 [ОтражатьВНалоговомУчете]
					,_Fld6383RRef [Подразделение]
					,_Fld6384 [Комментарий]
					,_Fld6385_TYPE [Сделка_Тип],_Fld6385_RRRef [Сделка],_Fld6385_RTRef [Сделка_Вид]
					,_Fld6386RRef [Склад]
					,_Fld6387RRef [ДоговорКонтрагента]
					,_Fld6388RRef [Контрагент]
					,_Fld6389RRef [ТипЦен]
					,_Fld6390RRef [ВалютаДокумента]
					,_Fld6391 [УчитыватьНДС]
					,_Fld6392 [СуммаВключаетНДС]
					,_Fld6393 [КурсВзаиморасчетов]
					,_Fld6394 [СуммаДокумента]
					,_Fld6395 [КратностьВзаиморасчетов]
					,_Fld6396RRef [Ответственный]
					,_Fld6397RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld6398RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld6399RRef [СчетУчетаРасчетовПоТаре]
					,_Fld6400 [НДСВключенВСтоимость]
					,_Fld6401RRef [Грузополучатель]
					,_Fld6402RRef [СчетУчетаРасчетовПоПретензиям]
					,_Fld6403RRef [СчетУчетаДоходовБУ]
					,_Fld6404RRef [СчетУчетаРасходовБУ]
					,_Fld6405RRef [СчетУчетаДоходовНУ]
					,_Fld6406RRef [СчетУчетаРасходовНУ]
					,_Fld6407RRef [СтатьяДоходовИРасходов]
					,_Fld6408 [ПоставщикуВыставляетсяСчетФактураНаВозврат]
					,_Fld6409_TYPE [Проект_Тип],_Fld6409_RRRef [Проект],_Fld6409_RTRef [Проект_Вид]
					From _Document339(NOLOCK)
					Where _Number = @Номер";
					Команда.Parameters.AddWithValue("Номер", Номер);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ВозвратТоваровПоставщикуИзНТТ();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(20);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(21);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(22);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ПоставщикуВыставляетсяСчетФактураНаВозврат = ((byte[])Читалка.GetValue(35))[0]==1;
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыВыборка.ВозвратТоваровПоставщикуИзНТТ Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld6378RRef [Организация]
					,_Fld6379RRef [БанковскийСчетОрганизации]
					,_Fld6380 [ОтражатьВУправленческомУчете]
					,_Fld6381 [ОтражатьВБухгалтерскомУчете]
					,_Fld6382 [ОтражатьВНалоговомУчете]
					,_Fld6383RRef [Подразделение]
					,_Fld6384 [Комментарий]
					,_Fld6385_TYPE [Сделка_Тип],_Fld6385_RRRef [Сделка],_Fld6385_RTRef [Сделка_Вид]
					,_Fld6386RRef [Склад]
					,_Fld6387RRef [ДоговорКонтрагента]
					,_Fld6388RRef [Контрагент]
					,_Fld6389RRef [ТипЦен]
					,_Fld6390RRef [ВалютаДокумента]
					,_Fld6391 [УчитыватьНДС]
					,_Fld6392 [СуммаВключаетНДС]
					,_Fld6393 [КурсВзаиморасчетов]
					,_Fld6394 [СуммаДокумента]
					,_Fld6395 [КратностьВзаиморасчетов]
					,_Fld6396RRef [Ответственный]
					,_Fld6397RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld6398RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld6399RRef [СчетУчетаРасчетовПоТаре]
					,_Fld6400 [НДСВключенВСтоимость]
					,_Fld6401RRef [Грузополучатель]
					,_Fld6402RRef [СчетУчетаРасчетовПоПретензиям]
					,_Fld6403RRef [СчетУчетаДоходовБУ]
					,_Fld6404RRef [СчетУчетаРасходовБУ]
					,_Fld6405RRef [СчетУчетаДоходовНУ]
					,_Fld6406RRef [СчетУчетаРасходовНУ]
					,_Fld6407RRef [СтатьяДоходовИРасходов]
					,_Fld6408 [ПоставщикуВыставляетсяСчетФактураНаВозврат]
					,_Fld6409_TYPE [Проект_Тип],_Fld6409_RRRef [Проект],_Fld6409_RTRef [Проект_Вид]
					From _Document339(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ВозвратТоваровПоставщикуИзНТТ();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ВозвратТоваровПоставщикуИзНТТ();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(20);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(21);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(22);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ПоставщикуВыставляетсяСчетФактураНаВозврат = ((byte[])Читалка.GetValue(35))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ВозвратТоваровПоставщикуИзНТТ ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld6378RRef [Организация]
					,_Fld6379RRef [БанковскийСчетОрганизации]
					,_Fld6380 [ОтражатьВУправленческомУчете]
					,_Fld6381 [ОтражатьВБухгалтерскомУчете]
					,_Fld6382 [ОтражатьВНалоговомУчете]
					,_Fld6383RRef [Подразделение]
					,_Fld6384 [Комментарий]
					,_Fld6385_TYPE [Сделка_Тип],_Fld6385_RRRef [Сделка],_Fld6385_RTRef [Сделка_Вид]
					,_Fld6386RRef [Склад]
					,_Fld6387RRef [ДоговорКонтрагента]
					,_Fld6388RRef [Контрагент]
					,_Fld6389RRef [ТипЦен]
					,_Fld6390RRef [ВалютаДокумента]
					,_Fld6391 [УчитыватьНДС]
					,_Fld6392 [СуммаВключаетНДС]
					,_Fld6393 [КурсВзаиморасчетов]
					,_Fld6394 [СуммаДокумента]
					,_Fld6395 [КратностьВзаиморасчетов]
					,_Fld6396RRef [Ответственный]
					,_Fld6397RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld6398RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld6399RRef [СчетУчетаРасчетовПоТаре]
					,_Fld6400 [НДСВключенВСтоимость]
					,_Fld6401RRef [Грузополучатель]
					,_Fld6402RRef [СчетУчетаРасчетовПоПретензиям]
					,_Fld6403RRef [СчетУчетаДоходовБУ]
					,_Fld6404RRef [СчетУчетаРасходовБУ]
					,_Fld6405RRef [СчетУчетаДоходовНУ]
					,_Fld6406RRef [СчетУчетаРасходовНУ]
					,_Fld6407RRef [СтатьяДоходовИРасходов]
					,_Fld6408 [ПоставщикуВыставляетсяСчетФактураНаВозврат]
					,_Fld6409_TYPE [Проект_Тип],_Fld6409_RRRef [Проект],_Fld6409_RTRef [Проект_Вид]
					From _Document339(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ВозвратТоваровПоставщикуИзНТТ();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ВозвратТоваровПоставщикуИзНТТ();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(20);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(21);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(22);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ПоставщикуВыставляетсяСчетФактураНаВозврат = ((byte[])Читалка.GetValue(35))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ВозвратТоваровПоставщикуИзНТТ ВыбратьПоНомеру(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld6378RRef [Организация]
					,_Fld6379RRef [БанковскийСчетОрганизации]
					,_Fld6380 [ОтражатьВУправленческомУчете]
					,_Fld6381 [ОтражатьВБухгалтерскомУчете]
					,_Fld6382 [ОтражатьВНалоговомУчете]
					,_Fld6383RRef [Подразделение]
					,_Fld6384 [Комментарий]
					,_Fld6385_TYPE [Сделка_Тип],_Fld6385_RRRef [Сделка],_Fld6385_RTRef [Сделка_Вид]
					,_Fld6386RRef [Склад]
					,_Fld6387RRef [ДоговорКонтрагента]
					,_Fld6388RRef [Контрагент]
					,_Fld6389RRef [ТипЦен]
					,_Fld6390RRef [ВалютаДокумента]
					,_Fld6391 [УчитыватьНДС]
					,_Fld6392 [СуммаВключаетНДС]
					,_Fld6393 [КурсВзаиморасчетов]
					,_Fld6394 [СуммаДокумента]
					,_Fld6395 [КратностьВзаиморасчетов]
					,_Fld6396RRef [Ответственный]
					,_Fld6397RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld6398RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld6399RRef [СчетУчетаРасчетовПоТаре]
					,_Fld6400 [НДСВключенВСтоимость]
					,_Fld6401RRef [Грузополучатель]
					,_Fld6402RRef [СчетУчетаРасчетовПоПретензиям]
					,_Fld6403RRef [СчетУчетаДоходовБУ]
					,_Fld6404RRef [СчетУчетаРасходовБУ]
					,_Fld6405RRef [СчетУчетаДоходовНУ]
					,_Fld6406RRef [СчетУчетаРасходовНУ]
					,_Fld6407RRef [СтатьяДоходовИРасходов]
					,_Fld6408 [ПоставщикуВыставляетсяСчетФактураНаВозврат]
					,_Fld6409_TYPE [Проект_Тип],_Fld6409_RRRef [Проект],_Fld6409_RTRef [Проект_Вид]
					From _Document339(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ВозвратТоваровПоставщикуИзНТТ();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ВозвратТоваровПоставщикуИзНТТ();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(20);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(21);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(22);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ПоставщикуВыставляетсяСчетФактураНаВозврат = ((byte[])Читалка.GetValue(35))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ВозвратТоваровПоставщикуИзНТТ СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld6378RRef [Организация]
					,_Fld6379RRef [БанковскийСчетОрганизации]
					,_Fld6380 [ОтражатьВУправленческомУчете]
					,_Fld6381 [ОтражатьВБухгалтерскомУчете]
					,_Fld6382 [ОтражатьВНалоговомУчете]
					,_Fld6383RRef [Подразделение]
					,_Fld6384 [Комментарий]
					,_Fld6385_TYPE [Сделка_Тип],_Fld6385_RRRef [Сделка],_Fld6385_RTRef [Сделка_Вид]
					,_Fld6386RRef [Склад]
					,_Fld6387RRef [ДоговорКонтрагента]
					,_Fld6388RRef [Контрагент]
					,_Fld6389RRef [ТипЦен]
					,_Fld6390RRef [ВалютаДокумента]
					,_Fld6391 [УчитыватьНДС]
					,_Fld6392 [СуммаВключаетНДС]
					,_Fld6393 [КурсВзаиморасчетов]
					,_Fld6394 [СуммаДокумента]
					,_Fld6395 [КратностьВзаиморасчетов]
					,_Fld6396RRef [Ответственный]
					,_Fld6397RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld6398RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld6399RRef [СчетУчетаРасчетовПоТаре]
					,_Fld6400 [НДСВключенВСтоимость]
					,_Fld6401RRef [Грузополучатель]
					,_Fld6402RRef [СчетУчетаРасчетовПоПретензиям]
					,_Fld6403RRef [СчетУчетаДоходовБУ]
					,_Fld6404RRef [СчетУчетаРасходовБУ]
					,_Fld6405RRef [СчетУчетаДоходовНУ]
					,_Fld6406RRef [СчетУчетаРасходовНУ]
					,_Fld6407RRef [СтатьяДоходовИРасходов]
					,_Fld6408 [ПоставщикуВыставляетсяСчетФактураНаВозврат]
					,_Fld6409_TYPE [Проект_Тип],_Fld6409_RRRef [Проект],_Fld6409_RTRef [Проект_Вид]
					From _Document339(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ВозвратТоваровПоставщикуИзНТТ();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ВозвратТоваровПоставщикуИзНТТ();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(20);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(21);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(22);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ПоставщикуВыставляетсяСчетФактураНаВозврат = ((byte[])Читалка.GetValue(35))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ВозвратТоваровПоставщикуИзНТТ СтраницаПоНомеру(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld6378RRef [Организация]
					,_Fld6379RRef [БанковскийСчетОрганизации]
					,_Fld6380 [ОтражатьВУправленческомУчете]
					,_Fld6381 [ОтражатьВБухгалтерскомУчете]
					,_Fld6382 [ОтражатьВНалоговомУчете]
					,_Fld6383RRef [Подразделение]
					,_Fld6384 [Комментарий]
					,_Fld6385_TYPE [Сделка_Тип],_Fld6385_RRRef [Сделка],_Fld6385_RTRef [Сделка_Вид]
					,_Fld6386RRef [Склад]
					,_Fld6387RRef [ДоговорКонтрагента]
					,_Fld6388RRef [Контрагент]
					,_Fld6389RRef [ТипЦен]
					,_Fld6390RRef [ВалютаДокумента]
					,_Fld6391 [УчитыватьНДС]
					,_Fld6392 [СуммаВключаетНДС]
					,_Fld6393 [КурсВзаиморасчетов]
					,_Fld6394 [СуммаДокумента]
					,_Fld6395 [КратностьВзаиморасчетов]
					,_Fld6396RRef [Ответственный]
					,_Fld6397RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld6398RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld6399RRef [СчетУчетаРасчетовПоТаре]
					,_Fld6400 [НДСВключенВСтоимость]
					,_Fld6401RRef [Грузополучатель]
					,_Fld6402RRef [СчетУчетаРасчетовПоПретензиям]
					,_Fld6403RRef [СчетУчетаДоходовБУ]
					,_Fld6404RRef [СчетУчетаРасходовБУ]
					,_Fld6405RRef [СчетУчетаДоходовНУ]
					,_Fld6406RRef [СчетУчетаРасходовНУ]
					,_Fld6407RRef [СтатьяДоходовИРасходов]
					,_Fld6408 [ПоставщикуВыставляетсяСчетФактураНаВозврат]
					,_Fld6409_TYPE [Проект_Тип],_Fld6409_RRRef [Проект],_Fld6409_RTRef [Проект_Вид]
					From _Document339(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ВозвратТоваровПоставщикуИзНТТ();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ВозвратТоваровПоставщикуИзНТТ();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(20);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(21);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(22);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ПоставщикуВыставляетсяСчетФактураНаВозврат = ((byte[])Читалка.GetValue(35))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.ДокументыОбъект.ВозвратТоваровПоставщикуИзНТТ СоздатьЭлемент()
		{
			var Объект = new V82.ДокументыОбъект.ВозвратТоваровПоставщикуИзНТТ();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.Комментарий = "";
			return Объект;
		}
	}
}