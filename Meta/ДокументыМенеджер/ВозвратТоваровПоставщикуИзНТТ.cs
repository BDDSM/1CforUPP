
using System;
using System.Data.SqlClient;
using V82;
using V82.ДокументыСсылка;
using V82.Документы;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Документы//Менеджер
{
	///<summary>
	///(Общ)
	///</summary>
	public partial class ВозвратТоваровПоставщикуИзНТТ:ДокументМенеджер
	{
		
		public static ДокументыСсылка.ВозвратТоваровПоставщикуИзНТТ НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld3883RRef [Организация]
					,_Fld3884RRef [БанковскийСчетОрганизации]
					,_Fld3885 [ОтражатьВУправленческомУчете]
					,_Fld3886 [ОтражатьВБухгалтерскомУчете]
					,_Fld3887 [ОтражатьВНалоговомУчете]
					,_Fld3888RRef [Подразделение]
					,_Fld3889 [Комментарий]
					,_Fld3890_TYPE [Сделка_Тип],_Fld3890_RRRef [Сделка],_Fld3890_RTRef [Сделка_Вид]
					,_Fld3891RRef [Склад]
					,_Fld3892RRef [ДоговорКонтрагента]
					,_Fld3893RRef [Контрагент]
					,_Fld3894RRef [ТипЦен]
					,_Fld3895RRef [ВалютаДокумента]
					,_Fld3896 [УчитыватьНДС]
					,_Fld3897 [СуммаВключаетНДС]
					,_Fld3898 [КурсВзаиморасчетов]
					,_Fld3899 [СуммаДокумента]
					,_Fld3900 [КратностьВзаиморасчетов]
					,_Fld3901RRef [Ответственный]
					,_Fld3902RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld3903RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld3904RRef [СчетУчетаРасчетовПоТаре]
					,_Fld3905 [НДСВключенВСтоимость]
					,_Fld3906RRef [Грузополучатель]
					,_Fld3907RRef [СчетУчетаРасчетовПоПретензиям]
					,_Fld18952RRef [СчетУчетаДоходовБУ]
					,_Fld18953RRef [СчетУчетаРасходовБУ]
					,_Fld18954RRef [СчетУчетаДоходовНУ]
					,_Fld18955RRef [СчетУчетаРасходовНУ]
					,_Fld18956RRef [СтатьяДоходовИРасходов]
					,_Fld18957 [ПоставщикуВыставляетсяСчетФактураНаВозврат]
					,_Fld19471_TYPE [Проект_Тип],_Fld19471_RRRef [Проект],_Fld19471_RTRef [Проект_Вид]
					From _Document238(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ВозвратТоваровПоставщикуИзНТТ();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(20);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(21);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(22);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ПоставщикуВыставляетсяСчетФактураНаВозврат = ((byte[])Читалка.GetValue(35))[0]==1;
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыСсылка.ВозвратТоваровПоставщикуИзНТТ НайтиПоНомеру(string Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld3883RRef [Организация]
					,_Fld3884RRef [БанковскийСчетОрганизации]
					,_Fld3885 [ОтражатьВУправленческомУчете]
					,_Fld3886 [ОтражатьВБухгалтерскомУчете]
					,_Fld3887 [ОтражатьВНалоговомУчете]
					,_Fld3888RRef [Подразделение]
					,_Fld3889 [Комментарий]
					,_Fld3890_TYPE [Сделка_Тип],_Fld3890_RRRef [Сделка],_Fld3890_RTRef [Сделка_Вид]
					,_Fld3891RRef [Склад]
					,_Fld3892RRef [ДоговорКонтрагента]
					,_Fld3893RRef [Контрагент]
					,_Fld3894RRef [ТипЦен]
					,_Fld3895RRef [ВалютаДокумента]
					,_Fld3896 [УчитыватьНДС]
					,_Fld3897 [СуммаВключаетНДС]
					,_Fld3898 [КурсВзаиморасчетов]
					,_Fld3899 [СуммаДокумента]
					,_Fld3900 [КратностьВзаиморасчетов]
					,_Fld3901RRef [Ответственный]
					,_Fld3902RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld3903RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld3904RRef [СчетУчетаРасчетовПоТаре]
					,_Fld3905 [НДСВключенВСтоимость]
					,_Fld3906RRef [Грузополучатель]
					,_Fld3907RRef [СчетУчетаРасчетовПоПретензиям]
					,_Fld18952RRef [СчетУчетаДоходовБУ]
					,_Fld18953RRef [СчетУчетаРасходовБУ]
					,_Fld18954RRef [СчетУчетаДоходовНУ]
					,_Fld18955RRef [СчетУчетаРасходовНУ]
					,_Fld18956RRef [СтатьяДоходовИРасходов]
					,_Fld18957 [ПоставщикуВыставляетсяСчетФактураНаВозврат]
					,_Fld19471_TYPE [Проект_Тип],_Fld19471_RRRef [Проект],_Fld19471_RTRef [Проект_Вид]
					From _Document238(NOLOCK)
					Where _Number = @Номер";
					Команда.Parameters.AddWithValue("Номер", Номер);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ВозвратТоваровПоставщикуИзНТТ();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(20);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(21);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(22);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ПоставщикуВыставляетсяСчетФактураНаВозврат = ((byte[])Читалка.GetValue(35))[0]==1;
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыВыборка.ВозвратТоваровПоставщикуИзНТТ Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld3883RRef [Организация]
					,_Fld3884RRef [БанковскийСчетОрганизации]
					,_Fld3885 [ОтражатьВУправленческомУчете]
					,_Fld3886 [ОтражатьВБухгалтерскомУчете]
					,_Fld3887 [ОтражатьВНалоговомУчете]
					,_Fld3888RRef [Подразделение]
					,_Fld3889 [Комментарий]
					,_Fld3890_TYPE [Сделка_Тип],_Fld3890_RRRef [Сделка],_Fld3890_RTRef [Сделка_Вид]
					,_Fld3891RRef [Склад]
					,_Fld3892RRef [ДоговорКонтрагента]
					,_Fld3893RRef [Контрагент]
					,_Fld3894RRef [ТипЦен]
					,_Fld3895RRef [ВалютаДокумента]
					,_Fld3896 [УчитыватьНДС]
					,_Fld3897 [СуммаВключаетНДС]
					,_Fld3898 [КурсВзаиморасчетов]
					,_Fld3899 [СуммаДокумента]
					,_Fld3900 [КратностьВзаиморасчетов]
					,_Fld3901RRef [Ответственный]
					,_Fld3902RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld3903RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld3904RRef [СчетУчетаРасчетовПоТаре]
					,_Fld3905 [НДСВключенВСтоимость]
					,_Fld3906RRef [Грузополучатель]
					,_Fld3907RRef [СчетУчетаРасчетовПоПретензиям]
					,_Fld18952RRef [СчетУчетаДоходовБУ]
					,_Fld18953RRef [СчетУчетаРасходовБУ]
					,_Fld18954RRef [СчетУчетаДоходовНУ]
					,_Fld18955RRef [СчетУчетаРасходовНУ]
					,_Fld18956RRef [СтатьяДоходовИРасходов]
					,_Fld18957 [ПоставщикуВыставляетсяСчетФактураНаВозврат]
					,_Fld19471_TYPE [Проект_Тип],_Fld19471_RRRef [Проект],_Fld19471_RTRef [Проект_Вид]
					From _Document238(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ВозвратТоваровПоставщикуИзНТТ();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ВозвратТоваровПоставщикуИзНТТ();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(20);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(21);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(22);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ПоставщикуВыставляетсяСчетФактураНаВозврат = ((byte[])Читалка.GetValue(35))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ВозвратТоваровПоставщикуИзНТТ ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld3883RRef [Организация]
					,_Fld3884RRef [БанковскийСчетОрганизации]
					,_Fld3885 [ОтражатьВУправленческомУчете]
					,_Fld3886 [ОтражатьВБухгалтерскомУчете]
					,_Fld3887 [ОтражатьВНалоговомУчете]
					,_Fld3888RRef [Подразделение]
					,_Fld3889 [Комментарий]
					,_Fld3890_TYPE [Сделка_Тип],_Fld3890_RRRef [Сделка],_Fld3890_RTRef [Сделка_Вид]
					,_Fld3891RRef [Склад]
					,_Fld3892RRef [ДоговорКонтрагента]
					,_Fld3893RRef [Контрагент]
					,_Fld3894RRef [ТипЦен]
					,_Fld3895RRef [ВалютаДокумента]
					,_Fld3896 [УчитыватьНДС]
					,_Fld3897 [СуммаВключаетНДС]
					,_Fld3898 [КурсВзаиморасчетов]
					,_Fld3899 [СуммаДокумента]
					,_Fld3900 [КратностьВзаиморасчетов]
					,_Fld3901RRef [Ответственный]
					,_Fld3902RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld3903RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld3904RRef [СчетУчетаРасчетовПоТаре]
					,_Fld3905 [НДСВключенВСтоимость]
					,_Fld3906RRef [Грузополучатель]
					,_Fld3907RRef [СчетУчетаРасчетовПоПретензиям]
					,_Fld18952RRef [СчетУчетаДоходовБУ]
					,_Fld18953RRef [СчетУчетаРасходовБУ]
					,_Fld18954RRef [СчетУчетаДоходовНУ]
					,_Fld18955RRef [СчетУчетаРасходовНУ]
					,_Fld18956RRef [СтатьяДоходовИРасходов]
					,_Fld18957 [ПоставщикуВыставляетсяСчетФактураНаВозврат]
					,_Fld19471_TYPE [Проект_Тип],_Fld19471_RRRef [Проект],_Fld19471_RTRef [Проект_Вид]
					From _Document238(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ВозвратТоваровПоставщикуИзНТТ();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ВозвратТоваровПоставщикуИзНТТ();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(20);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(21);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(22);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ПоставщикуВыставляетсяСчетФактураНаВозврат = ((byte[])Читалка.GetValue(35))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ВозвратТоваровПоставщикуИзНТТ ВыбратьПоНомеру(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld3883RRef [Организация]
					,_Fld3884RRef [БанковскийСчетОрганизации]
					,_Fld3885 [ОтражатьВУправленческомУчете]
					,_Fld3886 [ОтражатьВБухгалтерскомУчете]
					,_Fld3887 [ОтражатьВНалоговомУчете]
					,_Fld3888RRef [Подразделение]
					,_Fld3889 [Комментарий]
					,_Fld3890_TYPE [Сделка_Тип],_Fld3890_RRRef [Сделка],_Fld3890_RTRef [Сделка_Вид]
					,_Fld3891RRef [Склад]
					,_Fld3892RRef [ДоговорКонтрагента]
					,_Fld3893RRef [Контрагент]
					,_Fld3894RRef [ТипЦен]
					,_Fld3895RRef [ВалютаДокумента]
					,_Fld3896 [УчитыватьНДС]
					,_Fld3897 [СуммаВключаетНДС]
					,_Fld3898 [КурсВзаиморасчетов]
					,_Fld3899 [СуммаДокумента]
					,_Fld3900 [КратностьВзаиморасчетов]
					,_Fld3901RRef [Ответственный]
					,_Fld3902RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld3903RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld3904RRef [СчетУчетаРасчетовПоТаре]
					,_Fld3905 [НДСВключенВСтоимость]
					,_Fld3906RRef [Грузополучатель]
					,_Fld3907RRef [СчетУчетаРасчетовПоПретензиям]
					,_Fld18952RRef [СчетУчетаДоходовБУ]
					,_Fld18953RRef [СчетУчетаРасходовБУ]
					,_Fld18954RRef [СчетУчетаДоходовНУ]
					,_Fld18955RRef [СчетУчетаРасходовНУ]
					,_Fld18956RRef [СтатьяДоходовИРасходов]
					,_Fld18957 [ПоставщикуВыставляетсяСчетФактураНаВозврат]
					,_Fld19471_TYPE [Проект_Тип],_Fld19471_RRRef [Проект],_Fld19471_RTRef [Проект_Вид]
					From _Document238(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ВозвратТоваровПоставщикуИзНТТ();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ВозвратТоваровПоставщикуИзНТТ();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(20);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(21);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(22);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ПоставщикуВыставляетсяСчетФактураНаВозврат = ((byte[])Читалка.GetValue(35))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ВозвратТоваровПоставщикуИзНТТ СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld3883RRef [Организация]
					,_Fld3884RRef [БанковскийСчетОрганизации]
					,_Fld3885 [ОтражатьВУправленческомУчете]
					,_Fld3886 [ОтражатьВБухгалтерскомУчете]
					,_Fld3887 [ОтражатьВНалоговомУчете]
					,_Fld3888RRef [Подразделение]
					,_Fld3889 [Комментарий]
					,_Fld3890_TYPE [Сделка_Тип],_Fld3890_RRRef [Сделка],_Fld3890_RTRef [Сделка_Вид]
					,_Fld3891RRef [Склад]
					,_Fld3892RRef [ДоговорКонтрагента]
					,_Fld3893RRef [Контрагент]
					,_Fld3894RRef [ТипЦен]
					,_Fld3895RRef [ВалютаДокумента]
					,_Fld3896 [УчитыватьНДС]
					,_Fld3897 [СуммаВключаетНДС]
					,_Fld3898 [КурсВзаиморасчетов]
					,_Fld3899 [СуммаДокумента]
					,_Fld3900 [КратностьВзаиморасчетов]
					,_Fld3901RRef [Ответственный]
					,_Fld3902RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld3903RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld3904RRef [СчетУчетаРасчетовПоТаре]
					,_Fld3905 [НДСВключенВСтоимость]
					,_Fld3906RRef [Грузополучатель]
					,_Fld3907RRef [СчетУчетаРасчетовПоПретензиям]
					,_Fld18952RRef [СчетУчетаДоходовБУ]
					,_Fld18953RRef [СчетУчетаРасходовБУ]
					,_Fld18954RRef [СчетУчетаДоходовНУ]
					,_Fld18955RRef [СчетУчетаРасходовНУ]
					,_Fld18956RRef [СтатьяДоходовИРасходов]
					,_Fld18957 [ПоставщикуВыставляетсяСчетФактураНаВозврат]
					,_Fld19471_TYPE [Проект_Тип],_Fld19471_RRRef [Проект],_Fld19471_RTRef [Проект_Вид]
					From _Document238(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ВозвратТоваровПоставщикуИзНТТ();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ВозвратТоваровПоставщикуИзНТТ();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(20);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(21);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(22);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ПоставщикуВыставляетсяСчетФактураНаВозврат = ((byte[])Читалка.GetValue(35))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ВозвратТоваровПоставщикуИзНТТ СтраницаПоНомеру(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld3883RRef [Организация]
					,_Fld3884RRef [БанковскийСчетОрганизации]
					,_Fld3885 [ОтражатьВУправленческомУчете]
					,_Fld3886 [ОтражатьВБухгалтерскомУчете]
					,_Fld3887 [ОтражатьВНалоговомУчете]
					,_Fld3888RRef [Подразделение]
					,_Fld3889 [Комментарий]
					,_Fld3890_TYPE [Сделка_Тип],_Fld3890_RRRef [Сделка],_Fld3890_RTRef [Сделка_Вид]
					,_Fld3891RRef [Склад]
					,_Fld3892RRef [ДоговорКонтрагента]
					,_Fld3893RRef [Контрагент]
					,_Fld3894RRef [ТипЦен]
					,_Fld3895RRef [ВалютаДокумента]
					,_Fld3896 [УчитыватьНДС]
					,_Fld3897 [СуммаВключаетНДС]
					,_Fld3898 [КурсВзаиморасчетов]
					,_Fld3899 [СуммаДокумента]
					,_Fld3900 [КратностьВзаиморасчетов]
					,_Fld3901RRef [Ответственный]
					,_Fld3902RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld3903RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld3904RRef [СчетУчетаРасчетовПоТаре]
					,_Fld3905 [НДСВключенВСтоимость]
					,_Fld3906RRef [Грузополучатель]
					,_Fld3907RRef [СчетУчетаРасчетовПоПретензиям]
					,_Fld18952RRef [СчетУчетаДоходовБУ]
					,_Fld18953RRef [СчетУчетаРасходовБУ]
					,_Fld18954RRef [СчетУчетаДоходовНУ]
					,_Fld18955RRef [СчетУчетаРасходовНУ]
					,_Fld18956RRef [СтатьяДоходовИРасходов]
					,_Fld18957 [ПоставщикуВыставляетсяСчетФактураНаВозврат]
					,_Fld19471_TYPE [Проект_Тип],_Fld19471_RRRef [Проект],_Fld19471_RTRef [Проект_Вид]
					From _Document238(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ВозвратТоваровПоставщикуИзНТТ();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ВозвратТоваровПоставщикуИзНТТ();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(7))[0]==1;
							Ссылка.Комментарий = Читалка.GetString(9);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(20);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(21);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(22);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(27))[0]==1;
							Ссылка.ПоставщикуВыставляетсяСчетФактураНаВозврат = ((byte[])Читалка.GetValue(35))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.ДокументыОбъект.ВозвратТоваровПоставщикуИзНТТ СоздатьЭлемент()
		{
			var Объект = new V82.ДокументыОбъект.ВозвратТоваровПоставщикуИзНТТ();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.Комментарий = "";
			return Объект;
		}
	}
}