
using System;
using System.Data.SqlClient;
using V82;
using V82.ДокументыСсылка;
using V82.Документы;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Документы//Менеджер
{
	///<summary>
	///(Общ)
	///</summary>
	public partial class АккредитивПереданный:ДокументМенеджер
	{
		
		public static ДокументыСсылка.АккредитивПереданный НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld4528RRef [ВалютаДокумента]
					,_Fld4529RRef [ВидАккредитива]
					,_Fld4530RRef [ВидОперации]
					,_Fld4531 [ВидПлатежа]
					,_Fld4532 [ДатаОплаты]
					,_Fld4533RRef [ДоговорКонтрагента]
					,_Fld4534_TYPE [ДокументОснование_Тип],_Fld4534_RRRef [ДокументОснование],_Fld4534_RTRef [ДокументОснование_Вид]
					,_Fld4535 [ДокументыКПредъявлению]
					,_Fld4536 [ДополнительныеУсловия]
					,_Fld4537 [ИННПлательщика]
					,_Fld4538 [ИННПолучателя]
					,_Fld4539 [Комментарий]
					,_Fld4540RRef [Контрагент]
					,_Fld4541 [КПППлательщика]
					,_Fld4542 [КПППолучателя]
					,_Fld4543 [НазначениеПлатежа]
					,_Fld4544 [Оплачено]
					,_Fld4545RRef [Организация]
					,_Fld4546RRef [Ответственный]
					,_Fld4547 [ОтражатьВБухгалтерскомУчете]
					,_Fld4548 [ОтражатьВНалоговомУчете]
					,_Fld4549 [ОтраженоВОперУчете]
					,_Fld4550 [СрокДействия]
					,_Fld4551RRef [СтатьяДвиженияДенежныхСредств]
					,_Fld4552RRef [СубконтоДт1]
					,_Fld4553RRef [СубконтоДт2]
					,_Fld4554RRef [СубконтоДт3]
					,_Fld4555 [СуммаДокумента]
					,_Fld4556 [СчетДепонента]
					,_Fld4557RRef [СчетКонтрагента]
					,_Fld4558RRef [СчетОрганизации]
					,_Fld4559RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld4560 [ТекстПлательщика]
					,_Fld4561 [ТекстПолучателя]
					,_Fld4562RRef [УсловиеОплаты]
					,_Fld4563 [ЧастичнаяОплата]
					,_Fld4564 [Содержание_УСН]
					,_Fld4565 [Графа4_УСН]
					,_Fld4566 [Графа5_УСН]
					,_Fld4567 [Графа6_УСН]
					,_Fld4568 [Графа7_УСН]
					,_Fld4569 [ДоходыЕНВД_УСН]
					,_Fld4570 [РасходыЕНВД_УСН]
					,_Fld4571 [НДС_УСН]
					,_Fld4572 [РучнаяНастройка_УСН]
					,_Fld4573RRef [Подразделение]
					From _Document299(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.АккредитивПереданный();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидАккредитива = V82.Перечисления/*Ссылка*/.ВидыАккредитивов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.ВидПлатежа = Читалка.GetString(6);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(7);
							Ссылка.ДокументыКПредъявлению = Читалка.GetString(12);
							Ссылка.ДополнительныеУсловия = Читалка.GetString(13);
							Ссылка.ИННПлательщика = Читалка.GetString(14);
							Ссылка.ИННПолучателя = Читалка.GetString(15);
							Ссылка.Комментарий = Читалка.GetString(16);
							Ссылка.КПППлательщика = Читалка.GetString(18);
							Ссылка.КПППолучателя = Читалка.GetString(19);
							Ссылка.НазначениеПлатежа = Читалка.GetString(20);
							Ссылка.Оплачено = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.ОтраженоВОперУчете = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.СрокДействия = Читалка.GetDateTime(27);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(32);
							Ссылка.СчетДепонента = Читалка.GetString(33);
							Ссылка.ТекстПлательщика = Читалка.GetString(37);
							Ссылка.ТекстПолучателя = Читалка.GetString(38);
							Ссылка.УсловиеОплаты = V82.Перечисления/*Ссылка*/.УсловияОплатыРасчетныхДокументов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(39));
							Ссылка.ЧастичнаяОплата = ((byte[])Читалка.GetValue(40))[0]==1;
							Ссылка.Содержание_УСН = Читалка.GetString(41);
							Ссылка.Графа4_УСН = Читалка.GetDecimal(42);
							Ссылка.Графа5_УСН = Читалка.GetDecimal(43);
							Ссылка.Графа6_УСН = Читалка.GetDecimal(44);
							Ссылка.Графа7_УСН = Читалка.GetDecimal(45);
							Ссылка.ДоходыЕНВД_УСН = ((byte[])Читалка.GetValue(46))[0]==1;
							Ссылка.РасходыЕНВД_УСН = ((byte[])Читалка.GetValue(47))[0]==1;
							Ссылка.НДС_УСН = Читалка.GetDecimal(48);
							Ссылка.РучнаяНастройка_УСН = ((byte[])Читалка.GetValue(49))[0]==1;
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыСсылка.АккредитивПереданный НайтиПоНомеру(string Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld4528RRef [ВалютаДокумента]
					,_Fld4529RRef [ВидАккредитива]
					,_Fld4530RRef [ВидОперации]
					,_Fld4531 [ВидПлатежа]
					,_Fld4532 [ДатаОплаты]
					,_Fld4533RRef [ДоговорКонтрагента]
					,_Fld4534_TYPE [ДокументОснование_Тип],_Fld4534_RRRef [ДокументОснование],_Fld4534_RTRef [ДокументОснование_Вид]
					,_Fld4535 [ДокументыКПредъявлению]
					,_Fld4536 [ДополнительныеУсловия]
					,_Fld4537 [ИННПлательщика]
					,_Fld4538 [ИННПолучателя]
					,_Fld4539 [Комментарий]
					,_Fld4540RRef [Контрагент]
					,_Fld4541 [КПППлательщика]
					,_Fld4542 [КПППолучателя]
					,_Fld4543 [НазначениеПлатежа]
					,_Fld4544 [Оплачено]
					,_Fld4545RRef [Организация]
					,_Fld4546RRef [Ответственный]
					,_Fld4547 [ОтражатьВБухгалтерскомУчете]
					,_Fld4548 [ОтражатьВНалоговомУчете]
					,_Fld4549 [ОтраженоВОперУчете]
					,_Fld4550 [СрокДействия]
					,_Fld4551RRef [СтатьяДвиженияДенежныхСредств]
					,_Fld4552RRef [СубконтоДт1]
					,_Fld4553RRef [СубконтоДт2]
					,_Fld4554RRef [СубконтоДт3]
					,_Fld4555 [СуммаДокумента]
					,_Fld4556 [СчетДепонента]
					,_Fld4557RRef [СчетКонтрагента]
					,_Fld4558RRef [СчетОрганизации]
					,_Fld4559RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld4560 [ТекстПлательщика]
					,_Fld4561 [ТекстПолучателя]
					,_Fld4562RRef [УсловиеОплаты]
					,_Fld4563 [ЧастичнаяОплата]
					,_Fld4564 [Содержание_УСН]
					,_Fld4565 [Графа4_УСН]
					,_Fld4566 [Графа5_УСН]
					,_Fld4567 [Графа6_УСН]
					,_Fld4568 [Графа7_УСН]
					,_Fld4569 [ДоходыЕНВД_УСН]
					,_Fld4570 [РасходыЕНВД_УСН]
					,_Fld4571 [НДС_УСН]
					,_Fld4572 [РучнаяНастройка_УСН]
					,_Fld4573RRef [Подразделение]
					From _Document299(NOLOCK)
					Where _Number = @Номер";
					Команда.Parameters.AddWithValue("Номер", Номер);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.АккредитивПереданный();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидАккредитива = V82.Перечисления/*Ссылка*/.ВидыАккредитивов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.ВидПлатежа = Читалка.GetString(6);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(7);
							Ссылка.ДокументыКПредъявлению = Читалка.GetString(12);
							Ссылка.ДополнительныеУсловия = Читалка.GetString(13);
							Ссылка.ИННПлательщика = Читалка.GetString(14);
							Ссылка.ИННПолучателя = Читалка.GetString(15);
							Ссылка.Комментарий = Читалка.GetString(16);
							Ссылка.КПППлательщика = Читалка.GetString(18);
							Ссылка.КПППолучателя = Читалка.GetString(19);
							Ссылка.НазначениеПлатежа = Читалка.GetString(20);
							Ссылка.Оплачено = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.ОтраженоВОперУчете = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.СрокДействия = Читалка.GetDateTime(27);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(32);
							Ссылка.СчетДепонента = Читалка.GetString(33);
							Ссылка.ТекстПлательщика = Читалка.GetString(37);
							Ссылка.ТекстПолучателя = Читалка.GetString(38);
							Ссылка.УсловиеОплаты = V82.Перечисления/*Ссылка*/.УсловияОплатыРасчетныхДокументов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(39));
							Ссылка.ЧастичнаяОплата = ((byte[])Читалка.GetValue(40))[0]==1;
							Ссылка.Содержание_УСН = Читалка.GetString(41);
							Ссылка.Графа4_УСН = Читалка.GetDecimal(42);
							Ссылка.Графа5_УСН = Читалка.GetDecimal(43);
							Ссылка.Графа6_УСН = Читалка.GetDecimal(44);
							Ссылка.Графа7_УСН = Читалка.GetDecimal(45);
							Ссылка.ДоходыЕНВД_УСН = ((byte[])Читалка.GetValue(46))[0]==1;
							Ссылка.РасходыЕНВД_УСН = ((byte[])Читалка.GetValue(47))[0]==1;
							Ссылка.НДС_УСН = Читалка.GetDecimal(48);
							Ссылка.РучнаяНастройка_УСН = ((byte[])Читалка.GetValue(49))[0]==1;
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыВыборка.АккредитивПереданный Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld4528RRef [ВалютаДокумента]
					,_Fld4529RRef [ВидАккредитива]
					,_Fld4530RRef [ВидОперации]
					,_Fld4531 [ВидПлатежа]
					,_Fld4532 [ДатаОплаты]
					,_Fld4533RRef [ДоговорКонтрагента]
					,_Fld4534_TYPE [ДокументОснование_Тип],_Fld4534_RRRef [ДокументОснование],_Fld4534_RTRef [ДокументОснование_Вид]
					,_Fld4535 [ДокументыКПредъявлению]
					,_Fld4536 [ДополнительныеУсловия]
					,_Fld4537 [ИННПлательщика]
					,_Fld4538 [ИННПолучателя]
					,_Fld4539 [Комментарий]
					,_Fld4540RRef [Контрагент]
					,_Fld4541 [КПППлательщика]
					,_Fld4542 [КПППолучателя]
					,_Fld4543 [НазначениеПлатежа]
					,_Fld4544 [Оплачено]
					,_Fld4545RRef [Организация]
					,_Fld4546RRef [Ответственный]
					,_Fld4547 [ОтражатьВБухгалтерскомУчете]
					,_Fld4548 [ОтражатьВНалоговомУчете]
					,_Fld4549 [ОтраженоВОперУчете]
					,_Fld4550 [СрокДействия]
					,_Fld4551RRef [СтатьяДвиженияДенежныхСредств]
					,_Fld4552RRef [СубконтоДт1]
					,_Fld4553RRef [СубконтоДт2]
					,_Fld4554RRef [СубконтоДт3]
					,_Fld4555 [СуммаДокумента]
					,_Fld4556 [СчетДепонента]
					,_Fld4557RRef [СчетКонтрагента]
					,_Fld4558RRef [СчетОрганизации]
					,_Fld4559RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld4560 [ТекстПлательщика]
					,_Fld4561 [ТекстПолучателя]
					,_Fld4562RRef [УсловиеОплаты]
					,_Fld4563 [ЧастичнаяОплата]
					,_Fld4564 [Содержание_УСН]
					,_Fld4565 [Графа4_УСН]
					,_Fld4566 [Графа5_УСН]
					,_Fld4567 [Графа6_УСН]
					,_Fld4568 [Графа7_УСН]
					,_Fld4569 [ДоходыЕНВД_УСН]
					,_Fld4570 [РасходыЕНВД_УСН]
					,_Fld4571 [НДС_УСН]
					,_Fld4572 [РучнаяНастройка_УСН]
					,_Fld4573RRef [Подразделение]
					From _Document299(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.АккредитивПереданный();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.АккредитивПереданный();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидАккредитива = V82.Перечисления/*Ссылка*/.ВидыАккредитивов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.ВидПлатежа = Читалка.GetString(6);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(7);
							Ссылка.ДокументыКПредъявлению = Читалка.GetString(12);
							Ссылка.ДополнительныеУсловия = Читалка.GetString(13);
							Ссылка.ИННПлательщика = Читалка.GetString(14);
							Ссылка.ИННПолучателя = Читалка.GetString(15);
							Ссылка.Комментарий = Читалка.GetString(16);
							Ссылка.КПППлательщика = Читалка.GetString(18);
							Ссылка.КПППолучателя = Читалка.GetString(19);
							Ссылка.НазначениеПлатежа = Читалка.GetString(20);
							Ссылка.Оплачено = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.ОтраженоВОперУчете = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.СрокДействия = Читалка.GetDateTime(27);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(32);
							Ссылка.СчетДепонента = Читалка.GetString(33);
							Ссылка.ТекстПлательщика = Читалка.GetString(37);
							Ссылка.ТекстПолучателя = Читалка.GetString(38);
							Ссылка.УсловиеОплаты = V82.Перечисления/*Ссылка*/.УсловияОплатыРасчетныхДокументов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(39));
							Ссылка.ЧастичнаяОплата = ((byte[])Читалка.GetValue(40))[0]==1;
							Ссылка.Содержание_УСН = Читалка.GetString(41);
							Ссылка.Графа4_УСН = Читалка.GetDecimal(42);
							Ссылка.Графа5_УСН = Читалка.GetDecimal(43);
							Ссылка.Графа6_УСН = Читалка.GetDecimal(44);
							Ссылка.Графа7_УСН = Читалка.GetDecimal(45);
							Ссылка.ДоходыЕНВД_УСН = ((byte[])Читалка.GetValue(46))[0]==1;
							Ссылка.РасходыЕНВД_УСН = ((byte[])Читалка.GetValue(47))[0]==1;
							Ссылка.НДС_УСН = Читалка.GetDecimal(48);
							Ссылка.РучнаяНастройка_УСН = ((byte[])Читалка.GetValue(49))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.АккредитивПереданный ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld4528RRef [ВалютаДокумента]
					,_Fld4529RRef [ВидАккредитива]
					,_Fld4530RRef [ВидОперации]
					,_Fld4531 [ВидПлатежа]
					,_Fld4532 [ДатаОплаты]
					,_Fld4533RRef [ДоговорКонтрагента]
					,_Fld4534_TYPE [ДокументОснование_Тип],_Fld4534_RRRef [ДокументОснование],_Fld4534_RTRef [ДокументОснование_Вид]
					,_Fld4535 [ДокументыКПредъявлению]
					,_Fld4536 [ДополнительныеУсловия]
					,_Fld4537 [ИННПлательщика]
					,_Fld4538 [ИННПолучателя]
					,_Fld4539 [Комментарий]
					,_Fld4540RRef [Контрагент]
					,_Fld4541 [КПППлательщика]
					,_Fld4542 [КПППолучателя]
					,_Fld4543 [НазначениеПлатежа]
					,_Fld4544 [Оплачено]
					,_Fld4545RRef [Организация]
					,_Fld4546RRef [Ответственный]
					,_Fld4547 [ОтражатьВБухгалтерскомУчете]
					,_Fld4548 [ОтражатьВНалоговомУчете]
					,_Fld4549 [ОтраженоВОперУчете]
					,_Fld4550 [СрокДействия]
					,_Fld4551RRef [СтатьяДвиженияДенежныхСредств]
					,_Fld4552RRef [СубконтоДт1]
					,_Fld4553RRef [СубконтоДт2]
					,_Fld4554RRef [СубконтоДт3]
					,_Fld4555 [СуммаДокумента]
					,_Fld4556 [СчетДепонента]
					,_Fld4557RRef [СчетКонтрагента]
					,_Fld4558RRef [СчетОрганизации]
					,_Fld4559RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld4560 [ТекстПлательщика]
					,_Fld4561 [ТекстПолучателя]
					,_Fld4562RRef [УсловиеОплаты]
					,_Fld4563 [ЧастичнаяОплата]
					,_Fld4564 [Содержание_УСН]
					,_Fld4565 [Графа4_УСН]
					,_Fld4566 [Графа5_УСН]
					,_Fld4567 [Графа6_УСН]
					,_Fld4568 [Графа7_УСН]
					,_Fld4569 [ДоходыЕНВД_УСН]
					,_Fld4570 [РасходыЕНВД_УСН]
					,_Fld4571 [НДС_УСН]
					,_Fld4572 [РучнаяНастройка_УСН]
					,_Fld4573RRef [Подразделение]
					From _Document299(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.АккредитивПереданный();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.АккредитивПереданный();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидАккредитива = V82.Перечисления/*Ссылка*/.ВидыАккредитивов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.ВидПлатежа = Читалка.GetString(6);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(7);
							Ссылка.ДокументыКПредъявлению = Читалка.GetString(12);
							Ссылка.ДополнительныеУсловия = Читалка.GetString(13);
							Ссылка.ИННПлательщика = Читалка.GetString(14);
							Ссылка.ИННПолучателя = Читалка.GetString(15);
							Ссылка.Комментарий = Читалка.GetString(16);
							Ссылка.КПППлательщика = Читалка.GetString(18);
							Ссылка.КПППолучателя = Читалка.GetString(19);
							Ссылка.НазначениеПлатежа = Читалка.GetString(20);
							Ссылка.Оплачено = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.ОтраженоВОперУчете = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.СрокДействия = Читалка.GetDateTime(27);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(32);
							Ссылка.СчетДепонента = Читалка.GetString(33);
							Ссылка.ТекстПлательщика = Читалка.GetString(37);
							Ссылка.ТекстПолучателя = Читалка.GetString(38);
							Ссылка.УсловиеОплаты = V82.Перечисления/*Ссылка*/.УсловияОплатыРасчетныхДокументов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(39));
							Ссылка.ЧастичнаяОплата = ((byte[])Читалка.GetValue(40))[0]==1;
							Ссылка.Содержание_УСН = Читалка.GetString(41);
							Ссылка.Графа4_УСН = Читалка.GetDecimal(42);
							Ссылка.Графа5_УСН = Читалка.GetDecimal(43);
							Ссылка.Графа6_УСН = Читалка.GetDecimal(44);
							Ссылка.Графа7_УСН = Читалка.GetDecimal(45);
							Ссылка.ДоходыЕНВД_УСН = ((byte[])Читалка.GetValue(46))[0]==1;
							Ссылка.РасходыЕНВД_УСН = ((byte[])Читалка.GetValue(47))[0]==1;
							Ссылка.НДС_УСН = Читалка.GetDecimal(48);
							Ссылка.РучнаяНастройка_УСН = ((byte[])Читалка.GetValue(49))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.АккредитивПереданный ВыбратьПоНомеру(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld4528RRef [ВалютаДокумента]
					,_Fld4529RRef [ВидАккредитива]
					,_Fld4530RRef [ВидОперации]
					,_Fld4531 [ВидПлатежа]
					,_Fld4532 [ДатаОплаты]
					,_Fld4533RRef [ДоговорКонтрагента]
					,_Fld4534_TYPE [ДокументОснование_Тип],_Fld4534_RRRef [ДокументОснование],_Fld4534_RTRef [ДокументОснование_Вид]
					,_Fld4535 [ДокументыКПредъявлению]
					,_Fld4536 [ДополнительныеУсловия]
					,_Fld4537 [ИННПлательщика]
					,_Fld4538 [ИННПолучателя]
					,_Fld4539 [Комментарий]
					,_Fld4540RRef [Контрагент]
					,_Fld4541 [КПППлательщика]
					,_Fld4542 [КПППолучателя]
					,_Fld4543 [НазначениеПлатежа]
					,_Fld4544 [Оплачено]
					,_Fld4545RRef [Организация]
					,_Fld4546RRef [Ответственный]
					,_Fld4547 [ОтражатьВБухгалтерскомУчете]
					,_Fld4548 [ОтражатьВНалоговомУчете]
					,_Fld4549 [ОтраженоВОперУчете]
					,_Fld4550 [СрокДействия]
					,_Fld4551RRef [СтатьяДвиженияДенежныхСредств]
					,_Fld4552RRef [СубконтоДт1]
					,_Fld4553RRef [СубконтоДт2]
					,_Fld4554RRef [СубконтоДт3]
					,_Fld4555 [СуммаДокумента]
					,_Fld4556 [СчетДепонента]
					,_Fld4557RRef [СчетКонтрагента]
					,_Fld4558RRef [СчетОрганизации]
					,_Fld4559RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld4560 [ТекстПлательщика]
					,_Fld4561 [ТекстПолучателя]
					,_Fld4562RRef [УсловиеОплаты]
					,_Fld4563 [ЧастичнаяОплата]
					,_Fld4564 [Содержание_УСН]
					,_Fld4565 [Графа4_УСН]
					,_Fld4566 [Графа5_УСН]
					,_Fld4567 [Графа6_УСН]
					,_Fld4568 [Графа7_УСН]
					,_Fld4569 [ДоходыЕНВД_УСН]
					,_Fld4570 [РасходыЕНВД_УСН]
					,_Fld4571 [НДС_УСН]
					,_Fld4572 [РучнаяНастройка_УСН]
					,_Fld4573RRef [Подразделение]
					From _Document299(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.АккредитивПереданный();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.АккредитивПереданный();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидАккредитива = V82.Перечисления/*Ссылка*/.ВидыАккредитивов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.ВидПлатежа = Читалка.GetString(6);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(7);
							Ссылка.ДокументыКПредъявлению = Читалка.GetString(12);
							Ссылка.ДополнительныеУсловия = Читалка.GetString(13);
							Ссылка.ИННПлательщика = Читалка.GetString(14);
							Ссылка.ИННПолучателя = Читалка.GetString(15);
							Ссылка.Комментарий = Читалка.GetString(16);
							Ссылка.КПППлательщика = Читалка.GetString(18);
							Ссылка.КПППолучателя = Читалка.GetString(19);
							Ссылка.НазначениеПлатежа = Читалка.GetString(20);
							Ссылка.Оплачено = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.ОтраженоВОперУчете = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.СрокДействия = Читалка.GetDateTime(27);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(32);
							Ссылка.СчетДепонента = Читалка.GetString(33);
							Ссылка.ТекстПлательщика = Читалка.GetString(37);
							Ссылка.ТекстПолучателя = Читалка.GetString(38);
							Ссылка.УсловиеОплаты = V82.Перечисления/*Ссылка*/.УсловияОплатыРасчетныхДокументов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(39));
							Ссылка.ЧастичнаяОплата = ((byte[])Читалка.GetValue(40))[0]==1;
							Ссылка.Содержание_УСН = Читалка.GetString(41);
							Ссылка.Графа4_УСН = Читалка.GetDecimal(42);
							Ссылка.Графа5_УСН = Читалка.GetDecimal(43);
							Ссылка.Графа6_УСН = Читалка.GetDecimal(44);
							Ссылка.Графа7_УСН = Читалка.GetDecimal(45);
							Ссылка.ДоходыЕНВД_УСН = ((byte[])Читалка.GetValue(46))[0]==1;
							Ссылка.РасходыЕНВД_УСН = ((byte[])Читалка.GetValue(47))[0]==1;
							Ссылка.НДС_УСН = Читалка.GetDecimal(48);
							Ссылка.РучнаяНастройка_УСН = ((byte[])Читалка.GetValue(49))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.АккредитивПереданный СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld4528RRef [ВалютаДокумента]
					,_Fld4529RRef [ВидАккредитива]
					,_Fld4530RRef [ВидОперации]
					,_Fld4531 [ВидПлатежа]
					,_Fld4532 [ДатаОплаты]
					,_Fld4533RRef [ДоговорКонтрагента]
					,_Fld4534_TYPE [ДокументОснование_Тип],_Fld4534_RRRef [ДокументОснование],_Fld4534_RTRef [ДокументОснование_Вид]
					,_Fld4535 [ДокументыКПредъявлению]
					,_Fld4536 [ДополнительныеУсловия]
					,_Fld4537 [ИННПлательщика]
					,_Fld4538 [ИННПолучателя]
					,_Fld4539 [Комментарий]
					,_Fld4540RRef [Контрагент]
					,_Fld4541 [КПППлательщика]
					,_Fld4542 [КПППолучателя]
					,_Fld4543 [НазначениеПлатежа]
					,_Fld4544 [Оплачено]
					,_Fld4545RRef [Организация]
					,_Fld4546RRef [Ответственный]
					,_Fld4547 [ОтражатьВБухгалтерскомУчете]
					,_Fld4548 [ОтражатьВНалоговомУчете]
					,_Fld4549 [ОтраженоВОперУчете]
					,_Fld4550 [СрокДействия]
					,_Fld4551RRef [СтатьяДвиженияДенежныхСредств]
					,_Fld4552RRef [СубконтоДт1]
					,_Fld4553RRef [СубконтоДт2]
					,_Fld4554RRef [СубконтоДт3]
					,_Fld4555 [СуммаДокумента]
					,_Fld4556 [СчетДепонента]
					,_Fld4557RRef [СчетКонтрагента]
					,_Fld4558RRef [СчетОрганизации]
					,_Fld4559RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld4560 [ТекстПлательщика]
					,_Fld4561 [ТекстПолучателя]
					,_Fld4562RRef [УсловиеОплаты]
					,_Fld4563 [ЧастичнаяОплата]
					,_Fld4564 [Содержание_УСН]
					,_Fld4565 [Графа4_УСН]
					,_Fld4566 [Графа5_УСН]
					,_Fld4567 [Графа6_УСН]
					,_Fld4568 [Графа7_УСН]
					,_Fld4569 [ДоходыЕНВД_УСН]
					,_Fld4570 [РасходыЕНВД_УСН]
					,_Fld4571 [НДС_УСН]
					,_Fld4572 [РучнаяНастройка_УСН]
					,_Fld4573RRef [Подразделение]
					From _Document299(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.АккредитивПереданный();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.АккредитивПереданный();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидАккредитива = V82.Перечисления/*Ссылка*/.ВидыАккредитивов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.ВидПлатежа = Читалка.GetString(6);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(7);
							Ссылка.ДокументыКПредъявлению = Читалка.GetString(12);
							Ссылка.ДополнительныеУсловия = Читалка.GetString(13);
							Ссылка.ИННПлательщика = Читалка.GetString(14);
							Ссылка.ИННПолучателя = Читалка.GetString(15);
							Ссылка.Комментарий = Читалка.GetString(16);
							Ссылка.КПППлательщика = Читалка.GetString(18);
							Ссылка.КПППолучателя = Читалка.GetString(19);
							Ссылка.НазначениеПлатежа = Читалка.GetString(20);
							Ссылка.Оплачено = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.ОтраженоВОперУчете = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.СрокДействия = Читалка.GetDateTime(27);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(32);
							Ссылка.СчетДепонента = Читалка.GetString(33);
							Ссылка.ТекстПлательщика = Читалка.GetString(37);
							Ссылка.ТекстПолучателя = Читалка.GetString(38);
							Ссылка.УсловиеОплаты = V82.Перечисления/*Ссылка*/.УсловияОплатыРасчетныхДокументов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(39));
							Ссылка.ЧастичнаяОплата = ((byte[])Читалка.GetValue(40))[0]==1;
							Ссылка.Содержание_УСН = Читалка.GetString(41);
							Ссылка.Графа4_УСН = Читалка.GetDecimal(42);
							Ссылка.Графа5_УСН = Читалка.GetDecimal(43);
							Ссылка.Графа6_УСН = Читалка.GetDecimal(44);
							Ссылка.Графа7_УСН = Читалка.GetDecimal(45);
							Ссылка.ДоходыЕНВД_УСН = ((byte[])Читалка.GetValue(46))[0]==1;
							Ссылка.РасходыЕНВД_УСН = ((byte[])Читалка.GetValue(47))[0]==1;
							Ссылка.НДС_УСН = Читалка.GetDecimal(48);
							Ссылка.РучнаяНастройка_УСН = ((byte[])Читалка.GetValue(49))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.АккредитивПереданный СтраницаПоНомеру(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld4528RRef [ВалютаДокумента]
					,_Fld4529RRef [ВидАккредитива]
					,_Fld4530RRef [ВидОперации]
					,_Fld4531 [ВидПлатежа]
					,_Fld4532 [ДатаОплаты]
					,_Fld4533RRef [ДоговорКонтрагента]
					,_Fld4534_TYPE [ДокументОснование_Тип],_Fld4534_RRRef [ДокументОснование],_Fld4534_RTRef [ДокументОснование_Вид]
					,_Fld4535 [ДокументыКПредъявлению]
					,_Fld4536 [ДополнительныеУсловия]
					,_Fld4537 [ИННПлательщика]
					,_Fld4538 [ИННПолучателя]
					,_Fld4539 [Комментарий]
					,_Fld4540RRef [Контрагент]
					,_Fld4541 [КПППлательщика]
					,_Fld4542 [КПППолучателя]
					,_Fld4543 [НазначениеПлатежа]
					,_Fld4544 [Оплачено]
					,_Fld4545RRef [Организация]
					,_Fld4546RRef [Ответственный]
					,_Fld4547 [ОтражатьВБухгалтерскомУчете]
					,_Fld4548 [ОтражатьВНалоговомУчете]
					,_Fld4549 [ОтраженоВОперУчете]
					,_Fld4550 [СрокДействия]
					,_Fld4551RRef [СтатьяДвиженияДенежныхСредств]
					,_Fld4552RRef [СубконтоДт1]
					,_Fld4553RRef [СубконтоДт2]
					,_Fld4554RRef [СубконтоДт3]
					,_Fld4555 [СуммаДокумента]
					,_Fld4556 [СчетДепонента]
					,_Fld4557RRef [СчетКонтрагента]
					,_Fld4558RRef [СчетОрганизации]
					,_Fld4559RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld4560 [ТекстПлательщика]
					,_Fld4561 [ТекстПолучателя]
					,_Fld4562RRef [УсловиеОплаты]
					,_Fld4563 [ЧастичнаяОплата]
					,_Fld4564 [Содержание_УСН]
					,_Fld4565 [Графа4_УСН]
					,_Fld4566 [Графа5_УСН]
					,_Fld4567 [Графа6_УСН]
					,_Fld4568 [Графа7_УСН]
					,_Fld4569 [ДоходыЕНВД_УСН]
					,_Fld4570 [РасходыЕНВД_УСН]
					,_Fld4571 [НДС_УСН]
					,_Fld4572 [РучнаяНастройка_УСН]
					,_Fld4573RRef [Подразделение]
					From _Document299(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.АккредитивПереданный();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.АккредитивПереданный();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидАккредитива = V82.Перечисления/*Ссылка*/.ВидыАккредитивов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.ВидПлатежа = Читалка.GetString(6);
							Ссылка.ДатаОплаты = Читалка.GetDateTime(7);
							Ссылка.ДокументыКПредъявлению = Читалка.GetString(12);
							Ссылка.ДополнительныеУсловия = Читалка.GetString(13);
							Ссылка.ИННПлательщика = Читалка.GetString(14);
							Ссылка.ИННПолучателя = Читалка.GetString(15);
							Ссылка.Комментарий = Читалка.GetString(16);
							Ссылка.КПППлательщика = Читалка.GetString(18);
							Ссылка.КПППолучателя = Читалка.GetString(19);
							Ссылка.НазначениеПлатежа = Читалка.GetString(20);
							Ссылка.Оплачено = ((byte[])Читалка.GetValue(21))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.ОтраженоВОперУчете = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.СрокДействия = Читалка.GetDateTime(27);
							Ссылка.СуммаДокумента = Читалка.GetDecimal(32);
							Ссылка.СчетДепонента = Читалка.GetString(33);
							Ссылка.ТекстПлательщика = Читалка.GetString(37);
							Ссылка.ТекстПолучателя = Читалка.GetString(38);
							Ссылка.УсловиеОплаты = V82.Перечисления/*Ссылка*/.УсловияОплатыРасчетныхДокументов.ПустаяСсылка.Получить((byte[])Читалка.GetValue(39));
							Ссылка.ЧастичнаяОплата = ((byte[])Читалка.GetValue(40))[0]==1;
							Ссылка.Содержание_УСН = Читалка.GetString(41);
							Ссылка.Графа4_УСН = Читалка.GetDecimal(42);
							Ссылка.Графа5_УСН = Читалка.GetDecimal(43);
							Ссылка.Графа6_УСН = Читалка.GetDecimal(44);
							Ссылка.Графа7_УСН = Читалка.GetDecimal(45);
							Ссылка.ДоходыЕНВД_УСН = ((byte[])Читалка.GetValue(46))[0]==1;
							Ссылка.РасходыЕНВД_УСН = ((byte[])Читалка.GetValue(47))[0]==1;
							Ссылка.НДС_УСН = Читалка.GetDecimal(48);
							Ссылка.РучнаяНастройка_УСН = ((byte[])Читалка.GetValue(49))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.ДокументыОбъект.АккредитивПереданный СоздатьЭлемент()
		{
			var Объект = new V82.ДокументыОбъект.АккредитивПереданный();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.ВидПлатежа = "";
			Объект.ДокументыКПредъявлению = "";
			Объект.ДополнительныеУсловия = "";
			Объект.ИННПлательщика = "";
			Объект.ИННПолучателя = "";
			Объект.Комментарий = "";
			Объект.КПППлательщика = "";
			Объект.КПППолучателя = "";
			Объект.НазначениеПлатежа = "";
			Объект.СчетДепонента = "";
			Объект.ТекстПлательщика = "";
			Объект.ТекстПолучателя = "";
			Объект.Содержание_УСН = "";
			Объект.ВидАккредитива = V82.Перечисления/*Ссылка*/.ВидыАккредитивов.ПустаяСсылка;
			Объект.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ПустаяСсылка;
			Объект.УсловиеОплаты = V82.Перечисления/*Ссылка*/.УсловияОплатыРасчетныхДокументов.ПустаяСсылка;
			return Объект;
		}
	}
}