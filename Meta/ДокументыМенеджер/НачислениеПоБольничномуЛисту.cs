
using System;
using System.Data.SqlClient;
using V82;
using V82.ДокументыСсылка;
using V82.Документы;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Документы//Менеджер
{
	///<summary>
	///(Регл)
	///</summary>
	public partial class НачислениеПоБольничномуЛисту:ДокументМенеджер
	{
		
		public static ДокументыСсылка.НачислениеПоБольничномуЛисту НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld10021 [ПериодРегистрации]
					,_Fld10022RRef [Организация]
					,_Fld10023 [Комментарий]
					,_Fld10024RRef [Ответственный]
					,_Fld10025RRef [Сотрудник]
					,_Fld10026RRef [Физлицо]
					,_Fld10027RRef [ПричинаНетрудоспособности]
					,_Fld10028 [ПроцентОплаты]
					,_Fld10029 [ЯвляетсяПродолжениемБолезни]
					,_Fld10030RRef [ПервичныйБольничныйЛист]
					,_Fld10031 [ДатаНачалаСобытия]
					,_Fld10032 [ДатаНачала]
					,_Fld10033 [ДатаНачалаОплаты]
					,_Fld10034 [ДатаОкончания]
					,_Fld10035 [ДатаНарушенияРежима]
					,_Fld10036 [ПособиеОтражаетсяВРеглУчетеТекущимДокументом]
					,_Fld10037RRef [ОграничениеПособия]
					,_Fld10038 [НомерВходящегоДокумента]
					,_Fld10039 [СерияВходящегоДокумента]
					,_Fld10040RRef [ПерерассчитываемыйДокумент]
					,_Fld10041RRef [ПричинаНетрудоспособностиПереходногоПериода]
					,_Fld10042 [ПроцентОплатыПереходногоПериода]
					,_Fld10043RRef [ОграничениеПособияПереходногоПериода]
					,_Fld10044RRef [СлучайУходаЗаБольнымРебенкомПереходногоПериода]
					,_Fld10045RRef [СтратегияОтраженияВУчете]
					,_Fld10046RRef [УдалитьПриказ]
					,_Fld10047 [ПодпадаетПодЕНВД]
					,_Fld10048RRef [СлучайУходаЗаБольнымРебенком]
					,_Fld10049 [ДнейОплаты]
					,_Fld10050RRef [ВидРасчета]
					,_Fld10051 [ДоплачиватьДоПолногоСреднегоЗаработка]
					,_Fld10052RRef [ВидРасчетаДоплаты]
					,_Fld10053 [ПериодРасчетаСреднегоЗаработкаНачало]
					,_Fld10054 [ПериодРасчетаСреднегоЗаработкаОкончание]
					,_Fld10055 [ПроцентОплатыБезЛьгот]
					,_Fld10056RRef [ОграничениеПособияБезЛьгот]
					,_Fld10057 [ПрименятьЛьготыПриНачисленииПособия]
					,_Fld10058RRef [ВыплатаЗаСчетФедеральногоБюджета]
					,_Fld10059RRef [ВидРасчетаЗаСчетРаботодателя]
					,_Fld10060 [УчитыватьЗаработокПредыдущихСтрахователей]
					,_Fld10061 [ДнейОплатыРаботодателем]
					,_Fld10062 [НеВыплачиватьПособие]
					,_Fld10063 [РасчетПоПравилам2010Года]
					,_Fld10064 [УсловияИсчисленияКод1]
					,_Fld10065 [УсловияИсчисленияКод2]
					,_Fld10066 [УсловияИсчисленияКод3]
					,_Fld10067 [СтажЛет]
					,_Fld10068 [СтажМесяцев]
					,_Fld10069 [СтажБезНестраховыхПериодовЛет]
					,_Fld10070 [СтажБезНестраховыхПериодовСтажМесяцев]
					,_Fld10071 [ПеречислятьПособиеПочтовымПереводом]
					,_Fld10072RRef [Банк]
					,_Fld10073 [НаименованиеБанка]
					,_Fld10074 [БИКБанка]
					,_Fld10075 [НомерЛицевогоСчета]
					,_Fld10076 [АдресПочтовый]
					,_Fld10077 [Фамилия]
					,_Fld10078 [Имя]
					,_Fld10079 [Отчество]
					,_Fld10080RRef [ВидДокумента]
					,_Fld10081 [СерияДокумента]
					,_Fld10082 [НомерДокумента]
					,_Fld10083 [ДатаВыдачиДокумента]
					,_Fld10084 [ДатаДействияДокумента]
					,_Fld10085 [ПериодПростояС]
					,_Fld10086 [ПериодПростояПо]
					,_Fld10087 [РасчетПособияИзТарифнойСтавки]
					,_Fld10088RRef [ДолжностьУполномоченного]
					,_Fld10089RRef [Уполномоченный]
					,_Fld10090 [ПоставленаНаУчетВРанниеСрокиБеременности]
					,_Fld10091 [ДатаВыдачиБольничного]
					,_Fld10092 [КодПричиныНетрудоспособности]
					,_Fld10093 [ДополнительныйКодПричиныНетрудоспособности]
					,_Fld10094 [ВторойКодПричиныНетрудоспособности]
					,_Fld10095 [ДатаИзмененияКодаПричиныНетрудоспособности]
					,_Fld10096 [ДатаСправкиБеременной]
					,_Fld10097 [ПериодНахожденияВСтационареСРебенкомС]
					,_Fld10098 [ПериодНахожденияВСтационареСРебенкомПо]
					,_Fld10099 [КодНарушенияРежима]
					,_Fld10100 [ДатаРегистрацииДокументовМСЭ]
					,_Fld10101 [УстановленаИзмененаГруппаИнвалидности]
					,_Fld10102 [ДатаВыходаНаРаботу]
					,_Fld10103 [ЯвляетсяДубликатом]
					,_Fld10104 [АдресЛПУ]
					,_Fld10105 [НаименованиеЛПУ]
					,_Fld10106 [ОГРН_ЛПУ]
					,_Fld10107 [НомерЛисткаПоОсновномуМестуРаботы]
					,_Fld10108 [ДатаОкончанияПутевки]
					,_Fld10109 [НомерПутевки]
					,_Fld10110 [ОГРН_Санатория]
					,_Fld10111 [НомерЛисткаПродолжения]
					,_Fld10112 [ДатаНаправленияВБюроМСЭ]
					,_Fld10113 [ДатаОсвидетельствованияМСЭ]
					,_Fld10114 [НовыйСтатусНетрудопособного]
					,_Fld10115 [ДатаНовыйСтатусНетрудопособного]
					,_Fld10116 [КемВыданДокумент]
					,_Fld10117 [ГруппаИнвалидности]
					,_Fld10118 [КодПричиныПерерасчета]
					,_Fld10119 [НДФЛсПособия]
					,_Fld10120 [КоррСчетБанка]
					,_Fld10121 [НомерСправкиБеременной]
					,_Fld10122 [НаименованиеДокументаНаПроживание]
					,_Fld10123 [СерияДокументаНаПроживание]
					,_Fld10124 [НомерДокументаНаПроживание]
					,_Fld10125 [ДатаВыдачиДокументаНаПроживание]
					,_Fld10126 [АдресРегистрации]
					,_Fld10127 [Телефон]
					,_Fld10128 [ТарифнаяСтавкаОклад]
					,_Fld10129 [СреднедневнойЗаработокНаПериодПростоя]
					,_Fld10130 [ТелефонСоставителя]
					,_Fld10131 [АдресПочтовыйКодПоКЛАДР]
					,_Fld10132 [АдресРегистрацииКодПоКЛАДР]
					,_Fld10133 [АдресЛПУКодПоКЛАДР]
					,_Fld10134RRef [ЛПУ]
					,_Fld10135 [НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении]
					From _Document440(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.НачислениеПоБольничномуЛисту();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ПериодРегистрации = Читалка.GetDateTime(3);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.ПричинаНетрудоспособности = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(9));
							Ссылка.ПроцентОплаты = Читалка.GetDecimal(10);
							Ссылка.ЯвляетсяПродолжениемБолезни = ((byte[])Читалка.GetValue(11))[0]==1;
							Ссылка.ПервичныйБольничныйЛист = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(12));
							Ссылка.ДатаНачалаСобытия = Читалка.GetDateTime(13);
							Ссылка.ДатаНачала = Читалка.GetDateTime(14);
							Ссылка.ДатаНачалаОплаты = Читалка.GetDateTime(15);
							Ссылка.ДатаОкончания = Читалка.GetDateTime(16);
							Ссылка.ДатаНарушенияРежима = Читалка.GetDateTime(17);
							Ссылка.ПособиеОтражаетсяВРеглУчетеТекущимДокументом = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОграничениеПособия = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(19));
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(20);
							Ссылка.СерияВходящегоДокумента = Читалка.GetString(21);
							Ссылка.ПерерассчитываемыйДокумент = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(22));
							Ссылка.ПричинаНетрудоспособностиПереходногоПериода = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(23));
							Ссылка.ПроцентОплатыПереходногоПериода = Читалка.GetDecimal(24);
							Ссылка.ОграничениеПособияПереходногоПериода = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(25));
							Ссылка.СлучайУходаЗаБольнымРебенкомПереходногоПериода = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(26));
							Ссылка.СтратегияОтраженияВУчете = V82.Перечисления/*Ссылка*/.СтратегииОтраженияВРеглУчетеНачислений.ПустаяСсылка.Получить((byte[])Читалка.GetValue(27));
							Ссылка.УдалитьПриказ = V82.ДокументыСсылка.ПриемНаРаботуВОрганизацию.ВзятьИзКэша((byte[])Читалка.GetValue(28));
							Ссылка.ПодпадаетПодЕНВД = Читалка.GetDecimal(29);
							Ссылка.СлучайУходаЗаБольнымРебенком = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(30));
							Ссылка.ДнейОплаты = Читалка.GetDecimal(31);
							Ссылка.ДоплачиватьДоПолногоСреднегоЗаработка = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.ПериодРасчетаСреднегоЗаработкаНачало = Читалка.GetDateTime(35);
							Ссылка.ПериодРасчетаСреднегоЗаработкаОкончание = Читалка.GetDateTime(36);
							Ссылка.ПроцентОплатыБезЛьгот = Читалка.GetDecimal(37);
							Ссылка.ОграничениеПособияБезЛьгот = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(38));
							Ссылка.ПрименятьЛьготыПриНачисленииПособия = ((byte[])Читалка.GetValue(39))[0]==1;
							Ссылка.ВыплатаЗаСчетФедеральногоБюджета = V82.Перечисления/*Ссылка*/.ВыплатыПособийЗаСчетФедеральногоБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(40));
							Ссылка.УчитыватьЗаработокПредыдущихСтрахователей = ((byte[])Читалка.GetValue(42))[0]==1;
							Ссылка.ДнейОплатыРаботодателем = Читалка.GetDecimal(43);
							Ссылка.НеВыплачиватьПособие = ((byte[])Читалка.GetValue(44))[0]==1;
							Ссылка.РасчетПоПравилам2010Года = ((byte[])Читалка.GetValue(45))[0]==1;
							Ссылка.УсловияИсчисленияКод1 = Читалка.GetString(46);
							Ссылка.УсловияИсчисленияКод2 = Читалка.GetString(47);
							Ссылка.УсловияИсчисленияКод3 = Читалка.GetString(48);
							Ссылка.СтажЛет = Читалка.GetDecimal(49);
							Ссылка.СтажМесяцев = Читалка.GetDecimal(50);
							Ссылка.СтажБезНестраховыхПериодовЛет = Читалка.GetDecimal(51);
							Ссылка.СтажБезНестраховыхПериодовСтажМесяцев = Читалка.GetDecimal(52);
							Ссылка.ПеречислятьПособиеПочтовымПереводом = ((byte[])Читалка.GetValue(53))[0]==1;
							Ссылка.НаименованиеБанка = Читалка.GetString(55);
							Ссылка.БИКБанка = Читалка.GetString(56);
							Ссылка.НомерЛицевогоСчета = Читалка.GetString(57);
							Ссылка.АдресПочтовый = Читалка.GetString(58);
							Ссылка.Фамилия = Читалка.GetString(59);
							Ссылка.Имя = Читалка.GetString(60);
							Ссылка.Отчество = Читалка.GetString(61);
							Ссылка.СерияДокумента = Читалка.GetString(63);
							Ссылка.НомерДокумента = Читалка.GetString(64);
							Ссылка.ДатаВыдачиДокумента = Читалка.GetDateTime(65);
							Ссылка.ДатаДействияДокумента = Читалка.GetDateTime(66);
							Ссылка.ПериодПростояС = Читалка.GetDateTime(67);
							Ссылка.ПериодПростояПо = Читалка.GetDateTime(68);
							Ссылка.РасчетПособияИзТарифнойСтавки = ((byte[])Читалка.GetValue(69))[0]==1;
							Ссылка.ПоставленаНаУчетВРанниеСрокиБеременности = ((byte[])Читалка.GetValue(72))[0]==1;
							Ссылка.ДатаВыдачиБольничного = Читалка.GetDateTime(73);
							Ссылка.КодПричиныНетрудоспособности = Читалка.GetString(74);
							Ссылка.ДополнительныйКодПричиныНетрудоспособности = Читалка.GetString(75);
							Ссылка.ВторойКодПричиныНетрудоспособности = Читалка.GetString(76);
							Ссылка.ДатаИзмененияКодаПричиныНетрудоспособности = Читалка.GetDateTime(77);
							Ссылка.ДатаСправкиБеременной = Читалка.GetDateTime(78);
							Ссылка.ПериодНахожденияВСтационареСРебенкомС = Читалка.GetDateTime(79);
							Ссылка.ПериодНахожденияВСтационареСРебенкомПо = Читалка.GetDateTime(80);
							Ссылка.КодНарушенияРежима = Читалка.GetString(81);
							Ссылка.ДатаРегистрацииДокументовМСЭ = Читалка.GetDateTime(82);
							Ссылка.УстановленаИзмененаГруппаИнвалидности = ((byte[])Читалка.GetValue(83))[0]==1;
							Ссылка.ДатаВыходаНаРаботу = Читалка.GetDateTime(84);
							Ссылка.ЯвляетсяДубликатом = ((byte[])Читалка.GetValue(85))[0]==1;
							Ссылка.АдресЛПУ = Читалка.GetString(86);
							Ссылка.НаименованиеЛПУ = Читалка.GetString(87);
							Ссылка.ОГРН_ЛПУ = Читалка.GetString(88);
							Ссылка.НомерЛисткаПоОсновномуМестуРаботы = Читалка.GetString(89);
							Ссылка.ДатаОкончанияПутевки = Читалка.GetDateTime(90);
							Ссылка.НомерПутевки = Читалка.GetString(91);
							Ссылка.ОГРН_Санатория = Читалка.GetString(92);
							Ссылка.НомерЛисткаПродолжения = Читалка.GetString(93);
							Ссылка.ДатаНаправленияВБюроМСЭ = Читалка.GetDateTime(94);
							Ссылка.ДатаОсвидетельствованияМСЭ = Читалка.GetDateTime(95);
							Ссылка.НовыйСтатусНетрудопособного = Читалка.GetString(96);
							Ссылка.ДатаНовыйСтатусНетрудопособного = Читалка.GetDateTime(97);
							Ссылка.КемВыданДокумент = Читалка.GetString(98);
							Ссылка.ГруппаИнвалидности = Читалка.GetString(99);
							Ссылка.КодПричиныПерерасчета = Читалка.GetString(100);
							Ссылка.НДФЛсПособия = Читалка.GetDecimal(101);
							Ссылка.КоррСчетБанка = Читалка.GetString(102);
							Ссылка.НомерСправкиБеременной = Читалка.GetString(103);
							Ссылка.НаименованиеДокументаНаПроживание = Читалка.GetString(104);
							Ссылка.СерияДокументаНаПроживание = Читалка.GetString(105);
							Ссылка.НомерДокументаНаПроживание = Читалка.GetString(106);
							Ссылка.ДатаВыдачиДокументаНаПроживание = Читалка.GetDateTime(107);
							Ссылка.АдресРегистрации = Читалка.GetString(108);
							Ссылка.Телефон = Читалка.GetString(109);
							Ссылка.ТарифнаяСтавкаОклад = Читалка.GetDecimal(110);
							Ссылка.СреднедневнойЗаработокНаПериодПростоя = Читалка.GetDecimal(111);
							Ссылка.ТелефонСоставителя = Читалка.GetString(112);
							Ссылка.АдресПочтовыйКодПоКЛАДР = Читалка.GetString(113);
							Ссылка.АдресРегистрацииКодПоКЛАДР = Читалка.GetString(114);
							Ссылка.АдресЛПУКодПоКЛАДР = Читалка.GetString(115);
							Ссылка.НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении = ((byte[])Читалка.GetValue(117))[0]==1;
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыСсылка.НачислениеПоБольничномуЛисту НайтиПоНомеру(string Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld10021 [ПериодРегистрации]
					,_Fld10022RRef [Организация]
					,_Fld10023 [Комментарий]
					,_Fld10024RRef [Ответственный]
					,_Fld10025RRef [Сотрудник]
					,_Fld10026RRef [Физлицо]
					,_Fld10027RRef [ПричинаНетрудоспособности]
					,_Fld10028 [ПроцентОплаты]
					,_Fld10029 [ЯвляетсяПродолжениемБолезни]
					,_Fld10030RRef [ПервичныйБольничныйЛист]
					,_Fld10031 [ДатаНачалаСобытия]
					,_Fld10032 [ДатаНачала]
					,_Fld10033 [ДатаНачалаОплаты]
					,_Fld10034 [ДатаОкончания]
					,_Fld10035 [ДатаНарушенияРежима]
					,_Fld10036 [ПособиеОтражаетсяВРеглУчетеТекущимДокументом]
					,_Fld10037RRef [ОграничениеПособия]
					,_Fld10038 [НомерВходящегоДокумента]
					,_Fld10039 [СерияВходящегоДокумента]
					,_Fld10040RRef [ПерерассчитываемыйДокумент]
					,_Fld10041RRef [ПричинаНетрудоспособностиПереходногоПериода]
					,_Fld10042 [ПроцентОплатыПереходногоПериода]
					,_Fld10043RRef [ОграничениеПособияПереходногоПериода]
					,_Fld10044RRef [СлучайУходаЗаБольнымРебенкомПереходногоПериода]
					,_Fld10045RRef [СтратегияОтраженияВУчете]
					,_Fld10046RRef [УдалитьПриказ]
					,_Fld10047 [ПодпадаетПодЕНВД]
					,_Fld10048RRef [СлучайУходаЗаБольнымРебенком]
					,_Fld10049 [ДнейОплаты]
					,_Fld10050RRef [ВидРасчета]
					,_Fld10051 [ДоплачиватьДоПолногоСреднегоЗаработка]
					,_Fld10052RRef [ВидРасчетаДоплаты]
					,_Fld10053 [ПериодРасчетаСреднегоЗаработкаНачало]
					,_Fld10054 [ПериодРасчетаСреднегоЗаработкаОкончание]
					,_Fld10055 [ПроцентОплатыБезЛьгот]
					,_Fld10056RRef [ОграничениеПособияБезЛьгот]
					,_Fld10057 [ПрименятьЛьготыПриНачисленииПособия]
					,_Fld10058RRef [ВыплатаЗаСчетФедеральногоБюджета]
					,_Fld10059RRef [ВидРасчетаЗаСчетРаботодателя]
					,_Fld10060 [УчитыватьЗаработокПредыдущихСтрахователей]
					,_Fld10061 [ДнейОплатыРаботодателем]
					,_Fld10062 [НеВыплачиватьПособие]
					,_Fld10063 [РасчетПоПравилам2010Года]
					,_Fld10064 [УсловияИсчисленияКод1]
					,_Fld10065 [УсловияИсчисленияКод2]
					,_Fld10066 [УсловияИсчисленияКод3]
					,_Fld10067 [СтажЛет]
					,_Fld10068 [СтажМесяцев]
					,_Fld10069 [СтажБезНестраховыхПериодовЛет]
					,_Fld10070 [СтажБезНестраховыхПериодовСтажМесяцев]
					,_Fld10071 [ПеречислятьПособиеПочтовымПереводом]
					,_Fld10072RRef [Банк]
					,_Fld10073 [НаименованиеБанка]
					,_Fld10074 [БИКБанка]
					,_Fld10075 [НомерЛицевогоСчета]
					,_Fld10076 [АдресПочтовый]
					,_Fld10077 [Фамилия]
					,_Fld10078 [Имя]
					,_Fld10079 [Отчество]
					,_Fld10080RRef [ВидДокумента]
					,_Fld10081 [СерияДокумента]
					,_Fld10082 [НомерДокумента]
					,_Fld10083 [ДатаВыдачиДокумента]
					,_Fld10084 [ДатаДействияДокумента]
					,_Fld10085 [ПериодПростояС]
					,_Fld10086 [ПериодПростояПо]
					,_Fld10087 [РасчетПособияИзТарифнойСтавки]
					,_Fld10088RRef [ДолжностьУполномоченного]
					,_Fld10089RRef [Уполномоченный]
					,_Fld10090 [ПоставленаНаУчетВРанниеСрокиБеременности]
					,_Fld10091 [ДатаВыдачиБольничного]
					,_Fld10092 [КодПричиныНетрудоспособности]
					,_Fld10093 [ДополнительныйКодПричиныНетрудоспособности]
					,_Fld10094 [ВторойКодПричиныНетрудоспособности]
					,_Fld10095 [ДатаИзмененияКодаПричиныНетрудоспособности]
					,_Fld10096 [ДатаСправкиБеременной]
					,_Fld10097 [ПериодНахожденияВСтационареСРебенкомС]
					,_Fld10098 [ПериодНахожденияВСтационареСРебенкомПо]
					,_Fld10099 [КодНарушенияРежима]
					,_Fld10100 [ДатаРегистрацииДокументовМСЭ]
					,_Fld10101 [УстановленаИзмененаГруппаИнвалидности]
					,_Fld10102 [ДатаВыходаНаРаботу]
					,_Fld10103 [ЯвляетсяДубликатом]
					,_Fld10104 [АдресЛПУ]
					,_Fld10105 [НаименованиеЛПУ]
					,_Fld10106 [ОГРН_ЛПУ]
					,_Fld10107 [НомерЛисткаПоОсновномуМестуРаботы]
					,_Fld10108 [ДатаОкончанияПутевки]
					,_Fld10109 [НомерПутевки]
					,_Fld10110 [ОГРН_Санатория]
					,_Fld10111 [НомерЛисткаПродолжения]
					,_Fld10112 [ДатаНаправленияВБюроМСЭ]
					,_Fld10113 [ДатаОсвидетельствованияМСЭ]
					,_Fld10114 [НовыйСтатусНетрудопособного]
					,_Fld10115 [ДатаНовыйСтатусНетрудопособного]
					,_Fld10116 [КемВыданДокумент]
					,_Fld10117 [ГруппаИнвалидности]
					,_Fld10118 [КодПричиныПерерасчета]
					,_Fld10119 [НДФЛсПособия]
					,_Fld10120 [КоррСчетБанка]
					,_Fld10121 [НомерСправкиБеременной]
					,_Fld10122 [НаименованиеДокументаНаПроживание]
					,_Fld10123 [СерияДокументаНаПроживание]
					,_Fld10124 [НомерДокументаНаПроживание]
					,_Fld10125 [ДатаВыдачиДокументаНаПроживание]
					,_Fld10126 [АдресРегистрации]
					,_Fld10127 [Телефон]
					,_Fld10128 [ТарифнаяСтавкаОклад]
					,_Fld10129 [СреднедневнойЗаработокНаПериодПростоя]
					,_Fld10130 [ТелефонСоставителя]
					,_Fld10131 [АдресПочтовыйКодПоКЛАДР]
					,_Fld10132 [АдресРегистрацииКодПоКЛАДР]
					,_Fld10133 [АдресЛПУКодПоКЛАДР]
					,_Fld10134RRef [ЛПУ]
					,_Fld10135 [НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении]
					From _Document440(NOLOCK)
					Where _Number = @Номер";
					Команда.Parameters.AddWithValue("Номер", Номер);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.НачислениеПоБольничномуЛисту();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ПериодРегистрации = Читалка.GetDateTime(3);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.ПричинаНетрудоспособности = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(9));
							Ссылка.ПроцентОплаты = Читалка.GetDecimal(10);
							Ссылка.ЯвляетсяПродолжениемБолезни = ((byte[])Читалка.GetValue(11))[0]==1;
							Ссылка.ПервичныйБольничныйЛист = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(12));
							Ссылка.ДатаНачалаСобытия = Читалка.GetDateTime(13);
							Ссылка.ДатаНачала = Читалка.GetDateTime(14);
							Ссылка.ДатаНачалаОплаты = Читалка.GetDateTime(15);
							Ссылка.ДатаОкончания = Читалка.GetDateTime(16);
							Ссылка.ДатаНарушенияРежима = Читалка.GetDateTime(17);
							Ссылка.ПособиеОтражаетсяВРеглУчетеТекущимДокументом = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОграничениеПособия = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(19));
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(20);
							Ссылка.СерияВходящегоДокумента = Читалка.GetString(21);
							Ссылка.ПерерассчитываемыйДокумент = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(22));
							Ссылка.ПричинаНетрудоспособностиПереходногоПериода = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(23));
							Ссылка.ПроцентОплатыПереходногоПериода = Читалка.GetDecimal(24);
							Ссылка.ОграничениеПособияПереходногоПериода = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(25));
							Ссылка.СлучайУходаЗаБольнымРебенкомПереходногоПериода = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(26));
							Ссылка.СтратегияОтраженияВУчете = V82.Перечисления/*Ссылка*/.СтратегииОтраженияВРеглУчетеНачислений.ПустаяСсылка.Получить((byte[])Читалка.GetValue(27));
							Ссылка.УдалитьПриказ = V82.ДокументыСсылка.ПриемНаРаботуВОрганизацию.ВзятьИзКэша((byte[])Читалка.GetValue(28));
							Ссылка.ПодпадаетПодЕНВД = Читалка.GetDecimal(29);
							Ссылка.СлучайУходаЗаБольнымРебенком = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(30));
							Ссылка.ДнейОплаты = Читалка.GetDecimal(31);
							Ссылка.ДоплачиватьДоПолногоСреднегоЗаработка = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.ПериодРасчетаСреднегоЗаработкаНачало = Читалка.GetDateTime(35);
							Ссылка.ПериодРасчетаСреднегоЗаработкаОкончание = Читалка.GetDateTime(36);
							Ссылка.ПроцентОплатыБезЛьгот = Читалка.GetDecimal(37);
							Ссылка.ОграничениеПособияБезЛьгот = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(38));
							Ссылка.ПрименятьЛьготыПриНачисленииПособия = ((byte[])Читалка.GetValue(39))[0]==1;
							Ссылка.ВыплатаЗаСчетФедеральногоБюджета = V82.Перечисления/*Ссылка*/.ВыплатыПособийЗаСчетФедеральногоБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(40));
							Ссылка.УчитыватьЗаработокПредыдущихСтрахователей = ((byte[])Читалка.GetValue(42))[0]==1;
							Ссылка.ДнейОплатыРаботодателем = Читалка.GetDecimal(43);
							Ссылка.НеВыплачиватьПособие = ((byte[])Читалка.GetValue(44))[0]==1;
							Ссылка.РасчетПоПравилам2010Года = ((byte[])Читалка.GetValue(45))[0]==1;
							Ссылка.УсловияИсчисленияКод1 = Читалка.GetString(46);
							Ссылка.УсловияИсчисленияКод2 = Читалка.GetString(47);
							Ссылка.УсловияИсчисленияКод3 = Читалка.GetString(48);
							Ссылка.СтажЛет = Читалка.GetDecimal(49);
							Ссылка.СтажМесяцев = Читалка.GetDecimal(50);
							Ссылка.СтажБезНестраховыхПериодовЛет = Читалка.GetDecimal(51);
							Ссылка.СтажБезНестраховыхПериодовСтажМесяцев = Читалка.GetDecimal(52);
							Ссылка.ПеречислятьПособиеПочтовымПереводом = ((byte[])Читалка.GetValue(53))[0]==1;
							Ссылка.НаименованиеБанка = Читалка.GetString(55);
							Ссылка.БИКБанка = Читалка.GetString(56);
							Ссылка.НомерЛицевогоСчета = Читалка.GetString(57);
							Ссылка.АдресПочтовый = Читалка.GetString(58);
							Ссылка.Фамилия = Читалка.GetString(59);
							Ссылка.Имя = Читалка.GetString(60);
							Ссылка.Отчество = Читалка.GetString(61);
							Ссылка.СерияДокумента = Читалка.GetString(63);
							Ссылка.НомерДокумента = Читалка.GetString(64);
							Ссылка.ДатаВыдачиДокумента = Читалка.GetDateTime(65);
							Ссылка.ДатаДействияДокумента = Читалка.GetDateTime(66);
							Ссылка.ПериодПростояС = Читалка.GetDateTime(67);
							Ссылка.ПериодПростояПо = Читалка.GetDateTime(68);
							Ссылка.РасчетПособияИзТарифнойСтавки = ((byte[])Читалка.GetValue(69))[0]==1;
							Ссылка.ПоставленаНаУчетВРанниеСрокиБеременности = ((byte[])Читалка.GetValue(72))[0]==1;
							Ссылка.ДатаВыдачиБольничного = Читалка.GetDateTime(73);
							Ссылка.КодПричиныНетрудоспособности = Читалка.GetString(74);
							Ссылка.ДополнительныйКодПричиныНетрудоспособности = Читалка.GetString(75);
							Ссылка.ВторойКодПричиныНетрудоспособности = Читалка.GetString(76);
							Ссылка.ДатаИзмененияКодаПричиныНетрудоспособности = Читалка.GetDateTime(77);
							Ссылка.ДатаСправкиБеременной = Читалка.GetDateTime(78);
							Ссылка.ПериодНахожденияВСтационареСРебенкомС = Читалка.GetDateTime(79);
							Ссылка.ПериодНахожденияВСтационареСРебенкомПо = Читалка.GetDateTime(80);
							Ссылка.КодНарушенияРежима = Читалка.GetString(81);
							Ссылка.ДатаРегистрацииДокументовМСЭ = Читалка.GetDateTime(82);
							Ссылка.УстановленаИзмененаГруппаИнвалидности = ((byte[])Читалка.GetValue(83))[0]==1;
							Ссылка.ДатаВыходаНаРаботу = Читалка.GetDateTime(84);
							Ссылка.ЯвляетсяДубликатом = ((byte[])Читалка.GetValue(85))[0]==1;
							Ссылка.АдресЛПУ = Читалка.GetString(86);
							Ссылка.НаименованиеЛПУ = Читалка.GetString(87);
							Ссылка.ОГРН_ЛПУ = Читалка.GetString(88);
							Ссылка.НомерЛисткаПоОсновномуМестуРаботы = Читалка.GetString(89);
							Ссылка.ДатаОкончанияПутевки = Читалка.GetDateTime(90);
							Ссылка.НомерПутевки = Читалка.GetString(91);
							Ссылка.ОГРН_Санатория = Читалка.GetString(92);
							Ссылка.НомерЛисткаПродолжения = Читалка.GetString(93);
							Ссылка.ДатаНаправленияВБюроМСЭ = Читалка.GetDateTime(94);
							Ссылка.ДатаОсвидетельствованияМСЭ = Читалка.GetDateTime(95);
							Ссылка.НовыйСтатусНетрудопособного = Читалка.GetString(96);
							Ссылка.ДатаНовыйСтатусНетрудопособного = Читалка.GetDateTime(97);
							Ссылка.КемВыданДокумент = Читалка.GetString(98);
							Ссылка.ГруппаИнвалидности = Читалка.GetString(99);
							Ссылка.КодПричиныПерерасчета = Читалка.GetString(100);
							Ссылка.НДФЛсПособия = Читалка.GetDecimal(101);
							Ссылка.КоррСчетБанка = Читалка.GetString(102);
							Ссылка.НомерСправкиБеременной = Читалка.GetString(103);
							Ссылка.НаименованиеДокументаНаПроживание = Читалка.GetString(104);
							Ссылка.СерияДокументаНаПроживание = Читалка.GetString(105);
							Ссылка.НомерДокументаНаПроживание = Читалка.GetString(106);
							Ссылка.ДатаВыдачиДокументаНаПроживание = Читалка.GetDateTime(107);
							Ссылка.АдресРегистрации = Читалка.GetString(108);
							Ссылка.Телефон = Читалка.GetString(109);
							Ссылка.ТарифнаяСтавкаОклад = Читалка.GetDecimal(110);
							Ссылка.СреднедневнойЗаработокНаПериодПростоя = Читалка.GetDecimal(111);
							Ссылка.ТелефонСоставителя = Читалка.GetString(112);
							Ссылка.АдресПочтовыйКодПоКЛАДР = Читалка.GetString(113);
							Ссылка.АдресРегистрацииКодПоКЛАДР = Читалка.GetString(114);
							Ссылка.АдресЛПУКодПоКЛАДР = Читалка.GetString(115);
							Ссылка.НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении = ((byte[])Читалка.GetValue(117))[0]==1;
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыВыборка.НачислениеПоБольничномуЛисту Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld10021 [ПериодРегистрации]
					,_Fld10022RRef [Организация]
					,_Fld10023 [Комментарий]
					,_Fld10024RRef [Ответственный]
					,_Fld10025RRef [Сотрудник]
					,_Fld10026RRef [Физлицо]
					,_Fld10027RRef [ПричинаНетрудоспособности]
					,_Fld10028 [ПроцентОплаты]
					,_Fld10029 [ЯвляетсяПродолжениемБолезни]
					,_Fld10030RRef [ПервичныйБольничныйЛист]
					,_Fld10031 [ДатаНачалаСобытия]
					,_Fld10032 [ДатаНачала]
					,_Fld10033 [ДатаНачалаОплаты]
					,_Fld10034 [ДатаОкончания]
					,_Fld10035 [ДатаНарушенияРежима]
					,_Fld10036 [ПособиеОтражаетсяВРеглУчетеТекущимДокументом]
					,_Fld10037RRef [ОграничениеПособия]
					,_Fld10038 [НомерВходящегоДокумента]
					,_Fld10039 [СерияВходящегоДокумента]
					,_Fld10040RRef [ПерерассчитываемыйДокумент]
					,_Fld10041RRef [ПричинаНетрудоспособностиПереходногоПериода]
					,_Fld10042 [ПроцентОплатыПереходногоПериода]
					,_Fld10043RRef [ОграничениеПособияПереходногоПериода]
					,_Fld10044RRef [СлучайУходаЗаБольнымРебенкомПереходногоПериода]
					,_Fld10045RRef [СтратегияОтраженияВУчете]
					,_Fld10046RRef [УдалитьПриказ]
					,_Fld10047 [ПодпадаетПодЕНВД]
					,_Fld10048RRef [СлучайУходаЗаБольнымРебенком]
					,_Fld10049 [ДнейОплаты]
					,_Fld10050RRef [ВидРасчета]
					,_Fld10051 [ДоплачиватьДоПолногоСреднегоЗаработка]
					,_Fld10052RRef [ВидРасчетаДоплаты]
					,_Fld10053 [ПериодРасчетаСреднегоЗаработкаНачало]
					,_Fld10054 [ПериодРасчетаСреднегоЗаработкаОкончание]
					,_Fld10055 [ПроцентОплатыБезЛьгот]
					,_Fld10056RRef [ОграничениеПособияБезЛьгот]
					,_Fld10057 [ПрименятьЛьготыПриНачисленииПособия]
					,_Fld10058RRef [ВыплатаЗаСчетФедеральногоБюджета]
					,_Fld10059RRef [ВидРасчетаЗаСчетРаботодателя]
					,_Fld10060 [УчитыватьЗаработокПредыдущихСтрахователей]
					,_Fld10061 [ДнейОплатыРаботодателем]
					,_Fld10062 [НеВыплачиватьПособие]
					,_Fld10063 [РасчетПоПравилам2010Года]
					,_Fld10064 [УсловияИсчисленияКод1]
					,_Fld10065 [УсловияИсчисленияКод2]
					,_Fld10066 [УсловияИсчисленияКод3]
					,_Fld10067 [СтажЛет]
					,_Fld10068 [СтажМесяцев]
					,_Fld10069 [СтажБезНестраховыхПериодовЛет]
					,_Fld10070 [СтажБезНестраховыхПериодовСтажМесяцев]
					,_Fld10071 [ПеречислятьПособиеПочтовымПереводом]
					,_Fld10072RRef [Банк]
					,_Fld10073 [НаименованиеБанка]
					,_Fld10074 [БИКБанка]
					,_Fld10075 [НомерЛицевогоСчета]
					,_Fld10076 [АдресПочтовый]
					,_Fld10077 [Фамилия]
					,_Fld10078 [Имя]
					,_Fld10079 [Отчество]
					,_Fld10080RRef [ВидДокумента]
					,_Fld10081 [СерияДокумента]
					,_Fld10082 [НомерДокумента]
					,_Fld10083 [ДатаВыдачиДокумента]
					,_Fld10084 [ДатаДействияДокумента]
					,_Fld10085 [ПериодПростояС]
					,_Fld10086 [ПериодПростояПо]
					,_Fld10087 [РасчетПособияИзТарифнойСтавки]
					,_Fld10088RRef [ДолжностьУполномоченного]
					,_Fld10089RRef [Уполномоченный]
					,_Fld10090 [ПоставленаНаУчетВРанниеСрокиБеременности]
					,_Fld10091 [ДатаВыдачиБольничного]
					,_Fld10092 [КодПричиныНетрудоспособности]
					,_Fld10093 [ДополнительныйКодПричиныНетрудоспособности]
					,_Fld10094 [ВторойКодПричиныНетрудоспособности]
					,_Fld10095 [ДатаИзмененияКодаПричиныНетрудоспособности]
					,_Fld10096 [ДатаСправкиБеременной]
					,_Fld10097 [ПериодНахожденияВСтационареСРебенкомС]
					,_Fld10098 [ПериодНахожденияВСтационареСРебенкомПо]
					,_Fld10099 [КодНарушенияРежима]
					,_Fld10100 [ДатаРегистрацииДокументовМСЭ]
					,_Fld10101 [УстановленаИзмененаГруппаИнвалидности]
					,_Fld10102 [ДатаВыходаНаРаботу]
					,_Fld10103 [ЯвляетсяДубликатом]
					,_Fld10104 [АдресЛПУ]
					,_Fld10105 [НаименованиеЛПУ]
					,_Fld10106 [ОГРН_ЛПУ]
					,_Fld10107 [НомерЛисткаПоОсновномуМестуРаботы]
					,_Fld10108 [ДатаОкончанияПутевки]
					,_Fld10109 [НомерПутевки]
					,_Fld10110 [ОГРН_Санатория]
					,_Fld10111 [НомерЛисткаПродолжения]
					,_Fld10112 [ДатаНаправленияВБюроМСЭ]
					,_Fld10113 [ДатаОсвидетельствованияМСЭ]
					,_Fld10114 [НовыйСтатусНетрудопособного]
					,_Fld10115 [ДатаНовыйСтатусНетрудопособного]
					,_Fld10116 [КемВыданДокумент]
					,_Fld10117 [ГруппаИнвалидности]
					,_Fld10118 [КодПричиныПерерасчета]
					,_Fld10119 [НДФЛсПособия]
					,_Fld10120 [КоррСчетБанка]
					,_Fld10121 [НомерСправкиБеременной]
					,_Fld10122 [НаименованиеДокументаНаПроживание]
					,_Fld10123 [СерияДокументаНаПроживание]
					,_Fld10124 [НомерДокументаНаПроживание]
					,_Fld10125 [ДатаВыдачиДокументаНаПроживание]
					,_Fld10126 [АдресРегистрации]
					,_Fld10127 [Телефон]
					,_Fld10128 [ТарифнаяСтавкаОклад]
					,_Fld10129 [СреднедневнойЗаработокНаПериодПростоя]
					,_Fld10130 [ТелефонСоставителя]
					,_Fld10131 [АдресПочтовыйКодПоКЛАДР]
					,_Fld10132 [АдресРегистрацииКодПоКЛАДР]
					,_Fld10133 [АдресЛПУКодПоКЛАДР]
					,_Fld10134RRef [ЛПУ]
					,_Fld10135 [НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении]
					From _Document440(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.НачислениеПоБольничномуЛисту();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.НачислениеПоБольничномуЛисту();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ПериодРегистрации = Читалка.GetDateTime(3);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.ПричинаНетрудоспособности = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(9));
							Ссылка.ПроцентОплаты = Читалка.GetDecimal(10);
							Ссылка.ЯвляетсяПродолжениемБолезни = ((byte[])Читалка.GetValue(11))[0]==1;
							Ссылка.ПервичныйБольничныйЛист = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(12));
							Ссылка.ДатаНачалаСобытия = Читалка.GetDateTime(13);
							Ссылка.ДатаНачала = Читалка.GetDateTime(14);
							Ссылка.ДатаНачалаОплаты = Читалка.GetDateTime(15);
							Ссылка.ДатаОкончания = Читалка.GetDateTime(16);
							Ссылка.ДатаНарушенияРежима = Читалка.GetDateTime(17);
							Ссылка.ПособиеОтражаетсяВРеглУчетеТекущимДокументом = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОграничениеПособия = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(19));
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(20);
							Ссылка.СерияВходящегоДокумента = Читалка.GetString(21);
							Ссылка.ПерерассчитываемыйДокумент = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(22));
							Ссылка.ПричинаНетрудоспособностиПереходногоПериода = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(23));
							Ссылка.ПроцентОплатыПереходногоПериода = Читалка.GetDecimal(24);
							Ссылка.ОграничениеПособияПереходногоПериода = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(25));
							Ссылка.СлучайУходаЗаБольнымРебенкомПереходногоПериода = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(26));
							Ссылка.СтратегияОтраженияВУчете = V82.Перечисления/*Ссылка*/.СтратегииОтраженияВРеглУчетеНачислений.ПустаяСсылка.Получить((byte[])Читалка.GetValue(27));
							Ссылка.УдалитьПриказ = V82.ДокументыСсылка.ПриемНаРаботуВОрганизацию.ВзятьИзКэша((byte[])Читалка.GetValue(28));
							Ссылка.ПодпадаетПодЕНВД = Читалка.GetDecimal(29);
							Ссылка.СлучайУходаЗаБольнымРебенком = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(30));
							Ссылка.ДнейОплаты = Читалка.GetDecimal(31);
							Ссылка.ДоплачиватьДоПолногоСреднегоЗаработка = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.ПериодРасчетаСреднегоЗаработкаНачало = Читалка.GetDateTime(35);
							Ссылка.ПериодРасчетаСреднегоЗаработкаОкончание = Читалка.GetDateTime(36);
							Ссылка.ПроцентОплатыБезЛьгот = Читалка.GetDecimal(37);
							Ссылка.ОграничениеПособияБезЛьгот = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(38));
							Ссылка.ПрименятьЛьготыПриНачисленииПособия = ((byte[])Читалка.GetValue(39))[0]==1;
							Ссылка.ВыплатаЗаСчетФедеральногоБюджета = V82.Перечисления/*Ссылка*/.ВыплатыПособийЗаСчетФедеральногоБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(40));
							Ссылка.УчитыватьЗаработокПредыдущихСтрахователей = ((byte[])Читалка.GetValue(42))[0]==1;
							Ссылка.ДнейОплатыРаботодателем = Читалка.GetDecimal(43);
							Ссылка.НеВыплачиватьПособие = ((byte[])Читалка.GetValue(44))[0]==1;
							Ссылка.РасчетПоПравилам2010Года = ((byte[])Читалка.GetValue(45))[0]==1;
							Ссылка.УсловияИсчисленияКод1 = Читалка.GetString(46);
							Ссылка.УсловияИсчисленияКод2 = Читалка.GetString(47);
							Ссылка.УсловияИсчисленияКод3 = Читалка.GetString(48);
							Ссылка.СтажЛет = Читалка.GetDecimal(49);
							Ссылка.СтажМесяцев = Читалка.GetDecimal(50);
							Ссылка.СтажБезНестраховыхПериодовЛет = Читалка.GetDecimal(51);
							Ссылка.СтажБезНестраховыхПериодовСтажМесяцев = Читалка.GetDecimal(52);
							Ссылка.ПеречислятьПособиеПочтовымПереводом = ((byte[])Читалка.GetValue(53))[0]==1;
							Ссылка.НаименованиеБанка = Читалка.GetString(55);
							Ссылка.БИКБанка = Читалка.GetString(56);
							Ссылка.НомерЛицевогоСчета = Читалка.GetString(57);
							Ссылка.АдресПочтовый = Читалка.GetString(58);
							Ссылка.Фамилия = Читалка.GetString(59);
							Ссылка.Имя = Читалка.GetString(60);
							Ссылка.Отчество = Читалка.GetString(61);
							Ссылка.СерияДокумента = Читалка.GetString(63);
							Ссылка.НомерДокумента = Читалка.GetString(64);
							Ссылка.ДатаВыдачиДокумента = Читалка.GetDateTime(65);
							Ссылка.ДатаДействияДокумента = Читалка.GetDateTime(66);
							Ссылка.ПериодПростояС = Читалка.GetDateTime(67);
							Ссылка.ПериодПростояПо = Читалка.GetDateTime(68);
							Ссылка.РасчетПособияИзТарифнойСтавки = ((byte[])Читалка.GetValue(69))[0]==1;
							Ссылка.ПоставленаНаУчетВРанниеСрокиБеременности = ((byte[])Читалка.GetValue(72))[0]==1;
							Ссылка.ДатаВыдачиБольничного = Читалка.GetDateTime(73);
							Ссылка.КодПричиныНетрудоспособности = Читалка.GetString(74);
							Ссылка.ДополнительныйКодПричиныНетрудоспособности = Читалка.GetString(75);
							Ссылка.ВторойКодПричиныНетрудоспособности = Читалка.GetString(76);
							Ссылка.ДатаИзмененияКодаПричиныНетрудоспособности = Читалка.GetDateTime(77);
							Ссылка.ДатаСправкиБеременной = Читалка.GetDateTime(78);
							Ссылка.ПериодНахожденияВСтационареСРебенкомС = Читалка.GetDateTime(79);
							Ссылка.ПериодНахожденияВСтационареСРебенкомПо = Читалка.GetDateTime(80);
							Ссылка.КодНарушенияРежима = Читалка.GetString(81);
							Ссылка.ДатаРегистрацииДокументовМСЭ = Читалка.GetDateTime(82);
							Ссылка.УстановленаИзмененаГруппаИнвалидности = ((byte[])Читалка.GetValue(83))[0]==1;
							Ссылка.ДатаВыходаНаРаботу = Читалка.GetDateTime(84);
							Ссылка.ЯвляетсяДубликатом = ((byte[])Читалка.GetValue(85))[0]==1;
							Ссылка.АдресЛПУ = Читалка.GetString(86);
							Ссылка.НаименованиеЛПУ = Читалка.GetString(87);
							Ссылка.ОГРН_ЛПУ = Читалка.GetString(88);
							Ссылка.НомерЛисткаПоОсновномуМестуРаботы = Читалка.GetString(89);
							Ссылка.ДатаОкончанияПутевки = Читалка.GetDateTime(90);
							Ссылка.НомерПутевки = Читалка.GetString(91);
							Ссылка.ОГРН_Санатория = Читалка.GetString(92);
							Ссылка.НомерЛисткаПродолжения = Читалка.GetString(93);
							Ссылка.ДатаНаправленияВБюроМСЭ = Читалка.GetDateTime(94);
							Ссылка.ДатаОсвидетельствованияМСЭ = Читалка.GetDateTime(95);
							Ссылка.НовыйСтатусНетрудопособного = Читалка.GetString(96);
							Ссылка.ДатаНовыйСтатусНетрудопособного = Читалка.GetDateTime(97);
							Ссылка.КемВыданДокумент = Читалка.GetString(98);
							Ссылка.ГруппаИнвалидности = Читалка.GetString(99);
							Ссылка.КодПричиныПерерасчета = Читалка.GetString(100);
							Ссылка.НДФЛсПособия = Читалка.GetDecimal(101);
							Ссылка.КоррСчетБанка = Читалка.GetString(102);
							Ссылка.НомерСправкиБеременной = Читалка.GetString(103);
							Ссылка.НаименованиеДокументаНаПроживание = Читалка.GetString(104);
							Ссылка.СерияДокументаНаПроживание = Читалка.GetString(105);
							Ссылка.НомерДокументаНаПроживание = Читалка.GetString(106);
							Ссылка.ДатаВыдачиДокументаНаПроживание = Читалка.GetDateTime(107);
							Ссылка.АдресРегистрации = Читалка.GetString(108);
							Ссылка.Телефон = Читалка.GetString(109);
							Ссылка.ТарифнаяСтавкаОклад = Читалка.GetDecimal(110);
							Ссылка.СреднедневнойЗаработокНаПериодПростоя = Читалка.GetDecimal(111);
							Ссылка.ТелефонСоставителя = Читалка.GetString(112);
							Ссылка.АдресПочтовыйКодПоКЛАДР = Читалка.GetString(113);
							Ссылка.АдресРегистрацииКодПоКЛАДР = Читалка.GetString(114);
							Ссылка.АдресЛПУКодПоКЛАДР = Читалка.GetString(115);
							Ссылка.НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении = ((byte[])Читалка.GetValue(117))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.НачислениеПоБольничномуЛисту ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld10021 [ПериодРегистрации]
					,_Fld10022RRef [Организация]
					,_Fld10023 [Комментарий]
					,_Fld10024RRef [Ответственный]
					,_Fld10025RRef [Сотрудник]
					,_Fld10026RRef [Физлицо]
					,_Fld10027RRef [ПричинаНетрудоспособности]
					,_Fld10028 [ПроцентОплаты]
					,_Fld10029 [ЯвляетсяПродолжениемБолезни]
					,_Fld10030RRef [ПервичныйБольничныйЛист]
					,_Fld10031 [ДатаНачалаСобытия]
					,_Fld10032 [ДатаНачала]
					,_Fld10033 [ДатаНачалаОплаты]
					,_Fld10034 [ДатаОкончания]
					,_Fld10035 [ДатаНарушенияРежима]
					,_Fld10036 [ПособиеОтражаетсяВРеглУчетеТекущимДокументом]
					,_Fld10037RRef [ОграничениеПособия]
					,_Fld10038 [НомерВходящегоДокумента]
					,_Fld10039 [СерияВходящегоДокумента]
					,_Fld10040RRef [ПерерассчитываемыйДокумент]
					,_Fld10041RRef [ПричинаНетрудоспособностиПереходногоПериода]
					,_Fld10042 [ПроцентОплатыПереходногоПериода]
					,_Fld10043RRef [ОграничениеПособияПереходногоПериода]
					,_Fld10044RRef [СлучайУходаЗаБольнымРебенкомПереходногоПериода]
					,_Fld10045RRef [СтратегияОтраженияВУчете]
					,_Fld10046RRef [УдалитьПриказ]
					,_Fld10047 [ПодпадаетПодЕНВД]
					,_Fld10048RRef [СлучайУходаЗаБольнымРебенком]
					,_Fld10049 [ДнейОплаты]
					,_Fld10050RRef [ВидРасчета]
					,_Fld10051 [ДоплачиватьДоПолногоСреднегоЗаработка]
					,_Fld10052RRef [ВидРасчетаДоплаты]
					,_Fld10053 [ПериодРасчетаСреднегоЗаработкаНачало]
					,_Fld10054 [ПериодРасчетаСреднегоЗаработкаОкончание]
					,_Fld10055 [ПроцентОплатыБезЛьгот]
					,_Fld10056RRef [ОграничениеПособияБезЛьгот]
					,_Fld10057 [ПрименятьЛьготыПриНачисленииПособия]
					,_Fld10058RRef [ВыплатаЗаСчетФедеральногоБюджета]
					,_Fld10059RRef [ВидРасчетаЗаСчетРаботодателя]
					,_Fld10060 [УчитыватьЗаработокПредыдущихСтрахователей]
					,_Fld10061 [ДнейОплатыРаботодателем]
					,_Fld10062 [НеВыплачиватьПособие]
					,_Fld10063 [РасчетПоПравилам2010Года]
					,_Fld10064 [УсловияИсчисленияКод1]
					,_Fld10065 [УсловияИсчисленияКод2]
					,_Fld10066 [УсловияИсчисленияКод3]
					,_Fld10067 [СтажЛет]
					,_Fld10068 [СтажМесяцев]
					,_Fld10069 [СтажБезНестраховыхПериодовЛет]
					,_Fld10070 [СтажБезНестраховыхПериодовСтажМесяцев]
					,_Fld10071 [ПеречислятьПособиеПочтовымПереводом]
					,_Fld10072RRef [Банк]
					,_Fld10073 [НаименованиеБанка]
					,_Fld10074 [БИКБанка]
					,_Fld10075 [НомерЛицевогоСчета]
					,_Fld10076 [АдресПочтовый]
					,_Fld10077 [Фамилия]
					,_Fld10078 [Имя]
					,_Fld10079 [Отчество]
					,_Fld10080RRef [ВидДокумента]
					,_Fld10081 [СерияДокумента]
					,_Fld10082 [НомерДокумента]
					,_Fld10083 [ДатаВыдачиДокумента]
					,_Fld10084 [ДатаДействияДокумента]
					,_Fld10085 [ПериодПростояС]
					,_Fld10086 [ПериодПростояПо]
					,_Fld10087 [РасчетПособияИзТарифнойСтавки]
					,_Fld10088RRef [ДолжностьУполномоченного]
					,_Fld10089RRef [Уполномоченный]
					,_Fld10090 [ПоставленаНаУчетВРанниеСрокиБеременности]
					,_Fld10091 [ДатаВыдачиБольничного]
					,_Fld10092 [КодПричиныНетрудоспособности]
					,_Fld10093 [ДополнительныйКодПричиныНетрудоспособности]
					,_Fld10094 [ВторойКодПричиныНетрудоспособности]
					,_Fld10095 [ДатаИзмененияКодаПричиныНетрудоспособности]
					,_Fld10096 [ДатаСправкиБеременной]
					,_Fld10097 [ПериодНахожденияВСтационареСРебенкомС]
					,_Fld10098 [ПериодНахожденияВСтационареСРебенкомПо]
					,_Fld10099 [КодНарушенияРежима]
					,_Fld10100 [ДатаРегистрацииДокументовМСЭ]
					,_Fld10101 [УстановленаИзмененаГруппаИнвалидности]
					,_Fld10102 [ДатаВыходаНаРаботу]
					,_Fld10103 [ЯвляетсяДубликатом]
					,_Fld10104 [АдресЛПУ]
					,_Fld10105 [НаименованиеЛПУ]
					,_Fld10106 [ОГРН_ЛПУ]
					,_Fld10107 [НомерЛисткаПоОсновномуМестуРаботы]
					,_Fld10108 [ДатаОкончанияПутевки]
					,_Fld10109 [НомерПутевки]
					,_Fld10110 [ОГРН_Санатория]
					,_Fld10111 [НомерЛисткаПродолжения]
					,_Fld10112 [ДатаНаправленияВБюроМСЭ]
					,_Fld10113 [ДатаОсвидетельствованияМСЭ]
					,_Fld10114 [НовыйСтатусНетрудопособного]
					,_Fld10115 [ДатаНовыйСтатусНетрудопособного]
					,_Fld10116 [КемВыданДокумент]
					,_Fld10117 [ГруппаИнвалидности]
					,_Fld10118 [КодПричиныПерерасчета]
					,_Fld10119 [НДФЛсПособия]
					,_Fld10120 [КоррСчетБанка]
					,_Fld10121 [НомерСправкиБеременной]
					,_Fld10122 [НаименованиеДокументаНаПроживание]
					,_Fld10123 [СерияДокументаНаПроживание]
					,_Fld10124 [НомерДокументаНаПроживание]
					,_Fld10125 [ДатаВыдачиДокументаНаПроживание]
					,_Fld10126 [АдресРегистрации]
					,_Fld10127 [Телефон]
					,_Fld10128 [ТарифнаяСтавкаОклад]
					,_Fld10129 [СреднедневнойЗаработокНаПериодПростоя]
					,_Fld10130 [ТелефонСоставителя]
					,_Fld10131 [АдресПочтовыйКодПоКЛАДР]
					,_Fld10132 [АдресРегистрацииКодПоКЛАДР]
					,_Fld10133 [АдресЛПУКодПоКЛАДР]
					,_Fld10134RRef [ЛПУ]
					,_Fld10135 [НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении]
					From _Document440(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.НачислениеПоБольничномуЛисту();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.НачислениеПоБольничномуЛисту();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ПериодРегистрации = Читалка.GetDateTime(3);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.ПричинаНетрудоспособности = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(9));
							Ссылка.ПроцентОплаты = Читалка.GetDecimal(10);
							Ссылка.ЯвляетсяПродолжениемБолезни = ((byte[])Читалка.GetValue(11))[0]==1;
							Ссылка.ПервичныйБольничныйЛист = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(12));
							Ссылка.ДатаНачалаСобытия = Читалка.GetDateTime(13);
							Ссылка.ДатаНачала = Читалка.GetDateTime(14);
							Ссылка.ДатаНачалаОплаты = Читалка.GetDateTime(15);
							Ссылка.ДатаОкончания = Читалка.GetDateTime(16);
							Ссылка.ДатаНарушенияРежима = Читалка.GetDateTime(17);
							Ссылка.ПособиеОтражаетсяВРеглУчетеТекущимДокументом = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОграничениеПособия = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(19));
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(20);
							Ссылка.СерияВходящегоДокумента = Читалка.GetString(21);
							Ссылка.ПерерассчитываемыйДокумент = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(22));
							Ссылка.ПричинаНетрудоспособностиПереходногоПериода = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(23));
							Ссылка.ПроцентОплатыПереходногоПериода = Читалка.GetDecimal(24);
							Ссылка.ОграничениеПособияПереходногоПериода = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(25));
							Ссылка.СлучайУходаЗаБольнымРебенкомПереходногоПериода = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(26));
							Ссылка.СтратегияОтраженияВУчете = V82.Перечисления/*Ссылка*/.СтратегииОтраженияВРеглУчетеНачислений.ПустаяСсылка.Получить((byte[])Читалка.GetValue(27));
							Ссылка.УдалитьПриказ = V82.ДокументыСсылка.ПриемНаРаботуВОрганизацию.ВзятьИзКэша((byte[])Читалка.GetValue(28));
							Ссылка.ПодпадаетПодЕНВД = Читалка.GetDecimal(29);
							Ссылка.СлучайУходаЗаБольнымРебенком = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(30));
							Ссылка.ДнейОплаты = Читалка.GetDecimal(31);
							Ссылка.ДоплачиватьДоПолногоСреднегоЗаработка = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.ПериодРасчетаСреднегоЗаработкаНачало = Читалка.GetDateTime(35);
							Ссылка.ПериодРасчетаСреднегоЗаработкаОкончание = Читалка.GetDateTime(36);
							Ссылка.ПроцентОплатыБезЛьгот = Читалка.GetDecimal(37);
							Ссылка.ОграничениеПособияБезЛьгот = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(38));
							Ссылка.ПрименятьЛьготыПриНачисленииПособия = ((byte[])Читалка.GetValue(39))[0]==1;
							Ссылка.ВыплатаЗаСчетФедеральногоБюджета = V82.Перечисления/*Ссылка*/.ВыплатыПособийЗаСчетФедеральногоБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(40));
							Ссылка.УчитыватьЗаработокПредыдущихСтрахователей = ((byte[])Читалка.GetValue(42))[0]==1;
							Ссылка.ДнейОплатыРаботодателем = Читалка.GetDecimal(43);
							Ссылка.НеВыплачиватьПособие = ((byte[])Читалка.GetValue(44))[0]==1;
							Ссылка.РасчетПоПравилам2010Года = ((byte[])Читалка.GetValue(45))[0]==1;
							Ссылка.УсловияИсчисленияКод1 = Читалка.GetString(46);
							Ссылка.УсловияИсчисленияКод2 = Читалка.GetString(47);
							Ссылка.УсловияИсчисленияКод3 = Читалка.GetString(48);
							Ссылка.СтажЛет = Читалка.GetDecimal(49);
							Ссылка.СтажМесяцев = Читалка.GetDecimal(50);
							Ссылка.СтажБезНестраховыхПериодовЛет = Читалка.GetDecimal(51);
							Ссылка.СтажБезНестраховыхПериодовСтажМесяцев = Читалка.GetDecimal(52);
							Ссылка.ПеречислятьПособиеПочтовымПереводом = ((byte[])Читалка.GetValue(53))[0]==1;
							Ссылка.НаименованиеБанка = Читалка.GetString(55);
							Ссылка.БИКБанка = Читалка.GetString(56);
							Ссылка.НомерЛицевогоСчета = Читалка.GetString(57);
							Ссылка.АдресПочтовый = Читалка.GetString(58);
							Ссылка.Фамилия = Читалка.GetString(59);
							Ссылка.Имя = Читалка.GetString(60);
							Ссылка.Отчество = Читалка.GetString(61);
							Ссылка.СерияДокумента = Читалка.GetString(63);
							Ссылка.НомерДокумента = Читалка.GetString(64);
							Ссылка.ДатаВыдачиДокумента = Читалка.GetDateTime(65);
							Ссылка.ДатаДействияДокумента = Читалка.GetDateTime(66);
							Ссылка.ПериодПростояС = Читалка.GetDateTime(67);
							Ссылка.ПериодПростояПо = Читалка.GetDateTime(68);
							Ссылка.РасчетПособияИзТарифнойСтавки = ((byte[])Читалка.GetValue(69))[0]==1;
							Ссылка.ПоставленаНаУчетВРанниеСрокиБеременности = ((byte[])Читалка.GetValue(72))[0]==1;
							Ссылка.ДатаВыдачиБольничного = Читалка.GetDateTime(73);
							Ссылка.КодПричиныНетрудоспособности = Читалка.GetString(74);
							Ссылка.ДополнительныйКодПричиныНетрудоспособности = Читалка.GetString(75);
							Ссылка.ВторойКодПричиныНетрудоспособности = Читалка.GetString(76);
							Ссылка.ДатаИзмененияКодаПричиныНетрудоспособности = Читалка.GetDateTime(77);
							Ссылка.ДатаСправкиБеременной = Читалка.GetDateTime(78);
							Ссылка.ПериодНахожденияВСтационареСРебенкомС = Читалка.GetDateTime(79);
							Ссылка.ПериодНахожденияВСтационареСРебенкомПо = Читалка.GetDateTime(80);
							Ссылка.КодНарушенияРежима = Читалка.GetString(81);
							Ссылка.ДатаРегистрацииДокументовМСЭ = Читалка.GetDateTime(82);
							Ссылка.УстановленаИзмененаГруппаИнвалидности = ((byte[])Читалка.GetValue(83))[0]==1;
							Ссылка.ДатаВыходаНаРаботу = Читалка.GetDateTime(84);
							Ссылка.ЯвляетсяДубликатом = ((byte[])Читалка.GetValue(85))[0]==1;
							Ссылка.АдресЛПУ = Читалка.GetString(86);
							Ссылка.НаименованиеЛПУ = Читалка.GetString(87);
							Ссылка.ОГРН_ЛПУ = Читалка.GetString(88);
							Ссылка.НомерЛисткаПоОсновномуМестуРаботы = Читалка.GetString(89);
							Ссылка.ДатаОкончанияПутевки = Читалка.GetDateTime(90);
							Ссылка.НомерПутевки = Читалка.GetString(91);
							Ссылка.ОГРН_Санатория = Читалка.GetString(92);
							Ссылка.НомерЛисткаПродолжения = Читалка.GetString(93);
							Ссылка.ДатаНаправленияВБюроМСЭ = Читалка.GetDateTime(94);
							Ссылка.ДатаОсвидетельствованияМСЭ = Читалка.GetDateTime(95);
							Ссылка.НовыйСтатусНетрудопособного = Читалка.GetString(96);
							Ссылка.ДатаНовыйСтатусНетрудопособного = Читалка.GetDateTime(97);
							Ссылка.КемВыданДокумент = Читалка.GetString(98);
							Ссылка.ГруппаИнвалидности = Читалка.GetString(99);
							Ссылка.КодПричиныПерерасчета = Читалка.GetString(100);
							Ссылка.НДФЛсПособия = Читалка.GetDecimal(101);
							Ссылка.КоррСчетБанка = Читалка.GetString(102);
							Ссылка.НомерСправкиБеременной = Читалка.GetString(103);
							Ссылка.НаименованиеДокументаНаПроживание = Читалка.GetString(104);
							Ссылка.СерияДокументаНаПроживание = Читалка.GetString(105);
							Ссылка.НомерДокументаНаПроживание = Читалка.GetString(106);
							Ссылка.ДатаВыдачиДокументаНаПроживание = Читалка.GetDateTime(107);
							Ссылка.АдресРегистрации = Читалка.GetString(108);
							Ссылка.Телефон = Читалка.GetString(109);
							Ссылка.ТарифнаяСтавкаОклад = Читалка.GetDecimal(110);
							Ссылка.СреднедневнойЗаработокНаПериодПростоя = Читалка.GetDecimal(111);
							Ссылка.ТелефонСоставителя = Читалка.GetString(112);
							Ссылка.АдресПочтовыйКодПоКЛАДР = Читалка.GetString(113);
							Ссылка.АдресРегистрацииКодПоКЛАДР = Читалка.GetString(114);
							Ссылка.АдресЛПУКодПоКЛАДР = Читалка.GetString(115);
							Ссылка.НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении = ((byte[])Читалка.GetValue(117))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.НачислениеПоБольничномуЛисту ВыбратьПоНомеру(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld10021 [ПериодРегистрации]
					,_Fld10022RRef [Организация]
					,_Fld10023 [Комментарий]
					,_Fld10024RRef [Ответственный]
					,_Fld10025RRef [Сотрудник]
					,_Fld10026RRef [Физлицо]
					,_Fld10027RRef [ПричинаНетрудоспособности]
					,_Fld10028 [ПроцентОплаты]
					,_Fld10029 [ЯвляетсяПродолжениемБолезни]
					,_Fld10030RRef [ПервичныйБольничныйЛист]
					,_Fld10031 [ДатаНачалаСобытия]
					,_Fld10032 [ДатаНачала]
					,_Fld10033 [ДатаНачалаОплаты]
					,_Fld10034 [ДатаОкончания]
					,_Fld10035 [ДатаНарушенияРежима]
					,_Fld10036 [ПособиеОтражаетсяВРеглУчетеТекущимДокументом]
					,_Fld10037RRef [ОграничениеПособия]
					,_Fld10038 [НомерВходящегоДокумента]
					,_Fld10039 [СерияВходящегоДокумента]
					,_Fld10040RRef [ПерерассчитываемыйДокумент]
					,_Fld10041RRef [ПричинаНетрудоспособностиПереходногоПериода]
					,_Fld10042 [ПроцентОплатыПереходногоПериода]
					,_Fld10043RRef [ОграничениеПособияПереходногоПериода]
					,_Fld10044RRef [СлучайУходаЗаБольнымРебенкомПереходногоПериода]
					,_Fld10045RRef [СтратегияОтраженияВУчете]
					,_Fld10046RRef [УдалитьПриказ]
					,_Fld10047 [ПодпадаетПодЕНВД]
					,_Fld10048RRef [СлучайУходаЗаБольнымРебенком]
					,_Fld10049 [ДнейОплаты]
					,_Fld10050RRef [ВидРасчета]
					,_Fld10051 [ДоплачиватьДоПолногоСреднегоЗаработка]
					,_Fld10052RRef [ВидРасчетаДоплаты]
					,_Fld10053 [ПериодРасчетаСреднегоЗаработкаНачало]
					,_Fld10054 [ПериодРасчетаСреднегоЗаработкаОкончание]
					,_Fld10055 [ПроцентОплатыБезЛьгот]
					,_Fld10056RRef [ОграничениеПособияБезЛьгот]
					,_Fld10057 [ПрименятьЛьготыПриНачисленииПособия]
					,_Fld10058RRef [ВыплатаЗаСчетФедеральногоБюджета]
					,_Fld10059RRef [ВидРасчетаЗаСчетРаботодателя]
					,_Fld10060 [УчитыватьЗаработокПредыдущихСтрахователей]
					,_Fld10061 [ДнейОплатыРаботодателем]
					,_Fld10062 [НеВыплачиватьПособие]
					,_Fld10063 [РасчетПоПравилам2010Года]
					,_Fld10064 [УсловияИсчисленияКод1]
					,_Fld10065 [УсловияИсчисленияКод2]
					,_Fld10066 [УсловияИсчисленияКод3]
					,_Fld10067 [СтажЛет]
					,_Fld10068 [СтажМесяцев]
					,_Fld10069 [СтажБезНестраховыхПериодовЛет]
					,_Fld10070 [СтажБезНестраховыхПериодовСтажМесяцев]
					,_Fld10071 [ПеречислятьПособиеПочтовымПереводом]
					,_Fld10072RRef [Банк]
					,_Fld10073 [НаименованиеБанка]
					,_Fld10074 [БИКБанка]
					,_Fld10075 [НомерЛицевогоСчета]
					,_Fld10076 [АдресПочтовый]
					,_Fld10077 [Фамилия]
					,_Fld10078 [Имя]
					,_Fld10079 [Отчество]
					,_Fld10080RRef [ВидДокумента]
					,_Fld10081 [СерияДокумента]
					,_Fld10082 [НомерДокумента]
					,_Fld10083 [ДатаВыдачиДокумента]
					,_Fld10084 [ДатаДействияДокумента]
					,_Fld10085 [ПериодПростояС]
					,_Fld10086 [ПериодПростояПо]
					,_Fld10087 [РасчетПособияИзТарифнойСтавки]
					,_Fld10088RRef [ДолжностьУполномоченного]
					,_Fld10089RRef [Уполномоченный]
					,_Fld10090 [ПоставленаНаУчетВРанниеСрокиБеременности]
					,_Fld10091 [ДатаВыдачиБольничного]
					,_Fld10092 [КодПричиныНетрудоспособности]
					,_Fld10093 [ДополнительныйКодПричиныНетрудоспособности]
					,_Fld10094 [ВторойКодПричиныНетрудоспособности]
					,_Fld10095 [ДатаИзмененияКодаПричиныНетрудоспособности]
					,_Fld10096 [ДатаСправкиБеременной]
					,_Fld10097 [ПериодНахожденияВСтационареСРебенкомС]
					,_Fld10098 [ПериодНахожденияВСтационареСРебенкомПо]
					,_Fld10099 [КодНарушенияРежима]
					,_Fld10100 [ДатаРегистрацииДокументовМСЭ]
					,_Fld10101 [УстановленаИзмененаГруппаИнвалидности]
					,_Fld10102 [ДатаВыходаНаРаботу]
					,_Fld10103 [ЯвляетсяДубликатом]
					,_Fld10104 [АдресЛПУ]
					,_Fld10105 [НаименованиеЛПУ]
					,_Fld10106 [ОГРН_ЛПУ]
					,_Fld10107 [НомерЛисткаПоОсновномуМестуРаботы]
					,_Fld10108 [ДатаОкончанияПутевки]
					,_Fld10109 [НомерПутевки]
					,_Fld10110 [ОГРН_Санатория]
					,_Fld10111 [НомерЛисткаПродолжения]
					,_Fld10112 [ДатаНаправленияВБюроМСЭ]
					,_Fld10113 [ДатаОсвидетельствованияМСЭ]
					,_Fld10114 [НовыйСтатусНетрудопособного]
					,_Fld10115 [ДатаНовыйСтатусНетрудопособного]
					,_Fld10116 [КемВыданДокумент]
					,_Fld10117 [ГруппаИнвалидности]
					,_Fld10118 [КодПричиныПерерасчета]
					,_Fld10119 [НДФЛсПособия]
					,_Fld10120 [КоррСчетБанка]
					,_Fld10121 [НомерСправкиБеременной]
					,_Fld10122 [НаименованиеДокументаНаПроживание]
					,_Fld10123 [СерияДокументаНаПроживание]
					,_Fld10124 [НомерДокументаНаПроживание]
					,_Fld10125 [ДатаВыдачиДокументаНаПроживание]
					,_Fld10126 [АдресРегистрации]
					,_Fld10127 [Телефон]
					,_Fld10128 [ТарифнаяСтавкаОклад]
					,_Fld10129 [СреднедневнойЗаработокНаПериодПростоя]
					,_Fld10130 [ТелефонСоставителя]
					,_Fld10131 [АдресПочтовыйКодПоКЛАДР]
					,_Fld10132 [АдресРегистрацииКодПоКЛАДР]
					,_Fld10133 [АдресЛПУКодПоКЛАДР]
					,_Fld10134RRef [ЛПУ]
					,_Fld10135 [НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении]
					From _Document440(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.НачислениеПоБольничномуЛисту();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.НачислениеПоБольничномуЛисту();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ПериодРегистрации = Читалка.GetDateTime(3);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.ПричинаНетрудоспособности = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(9));
							Ссылка.ПроцентОплаты = Читалка.GetDecimal(10);
							Ссылка.ЯвляетсяПродолжениемБолезни = ((byte[])Читалка.GetValue(11))[0]==1;
							Ссылка.ПервичныйБольничныйЛист = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(12));
							Ссылка.ДатаНачалаСобытия = Читалка.GetDateTime(13);
							Ссылка.ДатаНачала = Читалка.GetDateTime(14);
							Ссылка.ДатаНачалаОплаты = Читалка.GetDateTime(15);
							Ссылка.ДатаОкончания = Читалка.GetDateTime(16);
							Ссылка.ДатаНарушенияРежима = Читалка.GetDateTime(17);
							Ссылка.ПособиеОтражаетсяВРеглУчетеТекущимДокументом = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОграничениеПособия = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(19));
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(20);
							Ссылка.СерияВходящегоДокумента = Читалка.GetString(21);
							Ссылка.ПерерассчитываемыйДокумент = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(22));
							Ссылка.ПричинаНетрудоспособностиПереходногоПериода = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(23));
							Ссылка.ПроцентОплатыПереходногоПериода = Читалка.GetDecimal(24);
							Ссылка.ОграничениеПособияПереходногоПериода = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(25));
							Ссылка.СлучайУходаЗаБольнымРебенкомПереходногоПериода = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(26));
							Ссылка.СтратегияОтраженияВУчете = V82.Перечисления/*Ссылка*/.СтратегииОтраженияВРеглУчетеНачислений.ПустаяСсылка.Получить((byte[])Читалка.GetValue(27));
							Ссылка.УдалитьПриказ = V82.ДокументыСсылка.ПриемНаРаботуВОрганизацию.ВзятьИзКэша((byte[])Читалка.GetValue(28));
							Ссылка.ПодпадаетПодЕНВД = Читалка.GetDecimal(29);
							Ссылка.СлучайУходаЗаБольнымРебенком = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(30));
							Ссылка.ДнейОплаты = Читалка.GetDecimal(31);
							Ссылка.ДоплачиватьДоПолногоСреднегоЗаработка = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.ПериодРасчетаСреднегоЗаработкаНачало = Читалка.GetDateTime(35);
							Ссылка.ПериодРасчетаСреднегоЗаработкаОкончание = Читалка.GetDateTime(36);
							Ссылка.ПроцентОплатыБезЛьгот = Читалка.GetDecimal(37);
							Ссылка.ОграничениеПособияБезЛьгот = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(38));
							Ссылка.ПрименятьЛьготыПриНачисленииПособия = ((byte[])Читалка.GetValue(39))[0]==1;
							Ссылка.ВыплатаЗаСчетФедеральногоБюджета = V82.Перечисления/*Ссылка*/.ВыплатыПособийЗаСчетФедеральногоБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(40));
							Ссылка.УчитыватьЗаработокПредыдущихСтрахователей = ((byte[])Читалка.GetValue(42))[0]==1;
							Ссылка.ДнейОплатыРаботодателем = Читалка.GetDecimal(43);
							Ссылка.НеВыплачиватьПособие = ((byte[])Читалка.GetValue(44))[0]==1;
							Ссылка.РасчетПоПравилам2010Года = ((byte[])Читалка.GetValue(45))[0]==1;
							Ссылка.УсловияИсчисленияКод1 = Читалка.GetString(46);
							Ссылка.УсловияИсчисленияКод2 = Читалка.GetString(47);
							Ссылка.УсловияИсчисленияКод3 = Читалка.GetString(48);
							Ссылка.СтажЛет = Читалка.GetDecimal(49);
							Ссылка.СтажМесяцев = Читалка.GetDecimal(50);
							Ссылка.СтажБезНестраховыхПериодовЛет = Читалка.GetDecimal(51);
							Ссылка.СтажБезНестраховыхПериодовСтажМесяцев = Читалка.GetDecimal(52);
							Ссылка.ПеречислятьПособиеПочтовымПереводом = ((byte[])Читалка.GetValue(53))[0]==1;
							Ссылка.НаименованиеБанка = Читалка.GetString(55);
							Ссылка.БИКБанка = Читалка.GetString(56);
							Ссылка.НомерЛицевогоСчета = Читалка.GetString(57);
							Ссылка.АдресПочтовый = Читалка.GetString(58);
							Ссылка.Фамилия = Читалка.GetString(59);
							Ссылка.Имя = Читалка.GetString(60);
							Ссылка.Отчество = Читалка.GetString(61);
							Ссылка.СерияДокумента = Читалка.GetString(63);
							Ссылка.НомерДокумента = Читалка.GetString(64);
							Ссылка.ДатаВыдачиДокумента = Читалка.GetDateTime(65);
							Ссылка.ДатаДействияДокумента = Читалка.GetDateTime(66);
							Ссылка.ПериодПростояС = Читалка.GetDateTime(67);
							Ссылка.ПериодПростояПо = Читалка.GetDateTime(68);
							Ссылка.РасчетПособияИзТарифнойСтавки = ((byte[])Читалка.GetValue(69))[0]==1;
							Ссылка.ПоставленаНаУчетВРанниеСрокиБеременности = ((byte[])Читалка.GetValue(72))[0]==1;
							Ссылка.ДатаВыдачиБольничного = Читалка.GetDateTime(73);
							Ссылка.КодПричиныНетрудоспособности = Читалка.GetString(74);
							Ссылка.ДополнительныйКодПричиныНетрудоспособности = Читалка.GetString(75);
							Ссылка.ВторойКодПричиныНетрудоспособности = Читалка.GetString(76);
							Ссылка.ДатаИзмененияКодаПричиныНетрудоспособности = Читалка.GetDateTime(77);
							Ссылка.ДатаСправкиБеременной = Читалка.GetDateTime(78);
							Ссылка.ПериодНахожденияВСтационареСРебенкомС = Читалка.GetDateTime(79);
							Ссылка.ПериодНахожденияВСтационареСРебенкомПо = Читалка.GetDateTime(80);
							Ссылка.КодНарушенияРежима = Читалка.GetString(81);
							Ссылка.ДатаРегистрацииДокументовМСЭ = Читалка.GetDateTime(82);
							Ссылка.УстановленаИзмененаГруппаИнвалидности = ((byte[])Читалка.GetValue(83))[0]==1;
							Ссылка.ДатаВыходаНаРаботу = Читалка.GetDateTime(84);
							Ссылка.ЯвляетсяДубликатом = ((byte[])Читалка.GetValue(85))[0]==1;
							Ссылка.АдресЛПУ = Читалка.GetString(86);
							Ссылка.НаименованиеЛПУ = Читалка.GetString(87);
							Ссылка.ОГРН_ЛПУ = Читалка.GetString(88);
							Ссылка.НомерЛисткаПоОсновномуМестуРаботы = Читалка.GetString(89);
							Ссылка.ДатаОкончанияПутевки = Читалка.GetDateTime(90);
							Ссылка.НомерПутевки = Читалка.GetString(91);
							Ссылка.ОГРН_Санатория = Читалка.GetString(92);
							Ссылка.НомерЛисткаПродолжения = Читалка.GetString(93);
							Ссылка.ДатаНаправленияВБюроМСЭ = Читалка.GetDateTime(94);
							Ссылка.ДатаОсвидетельствованияМСЭ = Читалка.GetDateTime(95);
							Ссылка.НовыйСтатусНетрудопособного = Читалка.GetString(96);
							Ссылка.ДатаНовыйСтатусНетрудопособного = Читалка.GetDateTime(97);
							Ссылка.КемВыданДокумент = Читалка.GetString(98);
							Ссылка.ГруппаИнвалидности = Читалка.GetString(99);
							Ссылка.КодПричиныПерерасчета = Читалка.GetString(100);
							Ссылка.НДФЛсПособия = Читалка.GetDecimal(101);
							Ссылка.КоррСчетБанка = Читалка.GetString(102);
							Ссылка.НомерСправкиБеременной = Читалка.GetString(103);
							Ссылка.НаименованиеДокументаНаПроживание = Читалка.GetString(104);
							Ссылка.СерияДокументаНаПроживание = Читалка.GetString(105);
							Ссылка.НомерДокументаНаПроживание = Читалка.GetString(106);
							Ссылка.ДатаВыдачиДокументаНаПроживание = Читалка.GetDateTime(107);
							Ссылка.АдресРегистрации = Читалка.GetString(108);
							Ссылка.Телефон = Читалка.GetString(109);
							Ссылка.ТарифнаяСтавкаОклад = Читалка.GetDecimal(110);
							Ссылка.СреднедневнойЗаработокНаПериодПростоя = Читалка.GetDecimal(111);
							Ссылка.ТелефонСоставителя = Читалка.GetString(112);
							Ссылка.АдресПочтовыйКодПоКЛАДР = Читалка.GetString(113);
							Ссылка.АдресРегистрацииКодПоКЛАДР = Читалка.GetString(114);
							Ссылка.АдресЛПУКодПоКЛАДР = Читалка.GetString(115);
							Ссылка.НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении = ((byte[])Читалка.GetValue(117))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.НачислениеПоБольничномуЛисту СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld10021 [ПериодРегистрации]
					,_Fld10022RRef [Организация]
					,_Fld10023 [Комментарий]
					,_Fld10024RRef [Ответственный]
					,_Fld10025RRef [Сотрудник]
					,_Fld10026RRef [Физлицо]
					,_Fld10027RRef [ПричинаНетрудоспособности]
					,_Fld10028 [ПроцентОплаты]
					,_Fld10029 [ЯвляетсяПродолжениемБолезни]
					,_Fld10030RRef [ПервичныйБольничныйЛист]
					,_Fld10031 [ДатаНачалаСобытия]
					,_Fld10032 [ДатаНачала]
					,_Fld10033 [ДатаНачалаОплаты]
					,_Fld10034 [ДатаОкончания]
					,_Fld10035 [ДатаНарушенияРежима]
					,_Fld10036 [ПособиеОтражаетсяВРеглУчетеТекущимДокументом]
					,_Fld10037RRef [ОграничениеПособия]
					,_Fld10038 [НомерВходящегоДокумента]
					,_Fld10039 [СерияВходящегоДокумента]
					,_Fld10040RRef [ПерерассчитываемыйДокумент]
					,_Fld10041RRef [ПричинаНетрудоспособностиПереходногоПериода]
					,_Fld10042 [ПроцентОплатыПереходногоПериода]
					,_Fld10043RRef [ОграничениеПособияПереходногоПериода]
					,_Fld10044RRef [СлучайУходаЗаБольнымРебенкомПереходногоПериода]
					,_Fld10045RRef [СтратегияОтраженияВУчете]
					,_Fld10046RRef [УдалитьПриказ]
					,_Fld10047 [ПодпадаетПодЕНВД]
					,_Fld10048RRef [СлучайУходаЗаБольнымРебенком]
					,_Fld10049 [ДнейОплаты]
					,_Fld10050RRef [ВидРасчета]
					,_Fld10051 [ДоплачиватьДоПолногоСреднегоЗаработка]
					,_Fld10052RRef [ВидРасчетаДоплаты]
					,_Fld10053 [ПериодРасчетаСреднегоЗаработкаНачало]
					,_Fld10054 [ПериодРасчетаСреднегоЗаработкаОкончание]
					,_Fld10055 [ПроцентОплатыБезЛьгот]
					,_Fld10056RRef [ОграничениеПособияБезЛьгот]
					,_Fld10057 [ПрименятьЛьготыПриНачисленииПособия]
					,_Fld10058RRef [ВыплатаЗаСчетФедеральногоБюджета]
					,_Fld10059RRef [ВидРасчетаЗаСчетРаботодателя]
					,_Fld10060 [УчитыватьЗаработокПредыдущихСтрахователей]
					,_Fld10061 [ДнейОплатыРаботодателем]
					,_Fld10062 [НеВыплачиватьПособие]
					,_Fld10063 [РасчетПоПравилам2010Года]
					,_Fld10064 [УсловияИсчисленияКод1]
					,_Fld10065 [УсловияИсчисленияКод2]
					,_Fld10066 [УсловияИсчисленияКод3]
					,_Fld10067 [СтажЛет]
					,_Fld10068 [СтажМесяцев]
					,_Fld10069 [СтажБезНестраховыхПериодовЛет]
					,_Fld10070 [СтажБезНестраховыхПериодовСтажМесяцев]
					,_Fld10071 [ПеречислятьПособиеПочтовымПереводом]
					,_Fld10072RRef [Банк]
					,_Fld10073 [НаименованиеБанка]
					,_Fld10074 [БИКБанка]
					,_Fld10075 [НомерЛицевогоСчета]
					,_Fld10076 [АдресПочтовый]
					,_Fld10077 [Фамилия]
					,_Fld10078 [Имя]
					,_Fld10079 [Отчество]
					,_Fld10080RRef [ВидДокумента]
					,_Fld10081 [СерияДокумента]
					,_Fld10082 [НомерДокумента]
					,_Fld10083 [ДатаВыдачиДокумента]
					,_Fld10084 [ДатаДействияДокумента]
					,_Fld10085 [ПериодПростояС]
					,_Fld10086 [ПериодПростояПо]
					,_Fld10087 [РасчетПособияИзТарифнойСтавки]
					,_Fld10088RRef [ДолжностьУполномоченного]
					,_Fld10089RRef [Уполномоченный]
					,_Fld10090 [ПоставленаНаУчетВРанниеСрокиБеременности]
					,_Fld10091 [ДатаВыдачиБольничного]
					,_Fld10092 [КодПричиныНетрудоспособности]
					,_Fld10093 [ДополнительныйКодПричиныНетрудоспособности]
					,_Fld10094 [ВторойКодПричиныНетрудоспособности]
					,_Fld10095 [ДатаИзмененияКодаПричиныНетрудоспособности]
					,_Fld10096 [ДатаСправкиБеременной]
					,_Fld10097 [ПериодНахожденияВСтационареСРебенкомС]
					,_Fld10098 [ПериодНахожденияВСтационареСРебенкомПо]
					,_Fld10099 [КодНарушенияРежима]
					,_Fld10100 [ДатаРегистрацииДокументовМСЭ]
					,_Fld10101 [УстановленаИзмененаГруппаИнвалидности]
					,_Fld10102 [ДатаВыходаНаРаботу]
					,_Fld10103 [ЯвляетсяДубликатом]
					,_Fld10104 [АдресЛПУ]
					,_Fld10105 [НаименованиеЛПУ]
					,_Fld10106 [ОГРН_ЛПУ]
					,_Fld10107 [НомерЛисткаПоОсновномуМестуРаботы]
					,_Fld10108 [ДатаОкончанияПутевки]
					,_Fld10109 [НомерПутевки]
					,_Fld10110 [ОГРН_Санатория]
					,_Fld10111 [НомерЛисткаПродолжения]
					,_Fld10112 [ДатаНаправленияВБюроМСЭ]
					,_Fld10113 [ДатаОсвидетельствованияМСЭ]
					,_Fld10114 [НовыйСтатусНетрудопособного]
					,_Fld10115 [ДатаНовыйСтатусНетрудопособного]
					,_Fld10116 [КемВыданДокумент]
					,_Fld10117 [ГруппаИнвалидности]
					,_Fld10118 [КодПричиныПерерасчета]
					,_Fld10119 [НДФЛсПособия]
					,_Fld10120 [КоррСчетБанка]
					,_Fld10121 [НомерСправкиБеременной]
					,_Fld10122 [НаименованиеДокументаНаПроживание]
					,_Fld10123 [СерияДокументаНаПроживание]
					,_Fld10124 [НомерДокументаНаПроживание]
					,_Fld10125 [ДатаВыдачиДокументаНаПроживание]
					,_Fld10126 [АдресРегистрации]
					,_Fld10127 [Телефон]
					,_Fld10128 [ТарифнаяСтавкаОклад]
					,_Fld10129 [СреднедневнойЗаработокНаПериодПростоя]
					,_Fld10130 [ТелефонСоставителя]
					,_Fld10131 [АдресПочтовыйКодПоКЛАДР]
					,_Fld10132 [АдресРегистрацииКодПоКЛАДР]
					,_Fld10133 [АдресЛПУКодПоКЛАДР]
					,_Fld10134RRef [ЛПУ]
					,_Fld10135 [НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении]
					From _Document440(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.НачислениеПоБольничномуЛисту();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.НачислениеПоБольничномуЛисту();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ПериодРегистрации = Читалка.GetDateTime(3);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.ПричинаНетрудоспособности = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(9));
							Ссылка.ПроцентОплаты = Читалка.GetDecimal(10);
							Ссылка.ЯвляетсяПродолжениемБолезни = ((byte[])Читалка.GetValue(11))[0]==1;
							Ссылка.ПервичныйБольничныйЛист = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(12));
							Ссылка.ДатаНачалаСобытия = Читалка.GetDateTime(13);
							Ссылка.ДатаНачала = Читалка.GetDateTime(14);
							Ссылка.ДатаНачалаОплаты = Читалка.GetDateTime(15);
							Ссылка.ДатаОкончания = Читалка.GetDateTime(16);
							Ссылка.ДатаНарушенияРежима = Читалка.GetDateTime(17);
							Ссылка.ПособиеОтражаетсяВРеглУчетеТекущимДокументом = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОграничениеПособия = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(19));
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(20);
							Ссылка.СерияВходящегоДокумента = Читалка.GetString(21);
							Ссылка.ПерерассчитываемыйДокумент = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(22));
							Ссылка.ПричинаНетрудоспособностиПереходногоПериода = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(23));
							Ссылка.ПроцентОплатыПереходногоПериода = Читалка.GetDecimal(24);
							Ссылка.ОграничениеПособияПереходногоПериода = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(25));
							Ссылка.СлучайУходаЗаБольнымРебенкомПереходногоПериода = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(26));
							Ссылка.СтратегияОтраженияВУчете = V82.Перечисления/*Ссылка*/.СтратегииОтраженияВРеглУчетеНачислений.ПустаяСсылка.Получить((byte[])Читалка.GetValue(27));
							Ссылка.УдалитьПриказ = V82.ДокументыСсылка.ПриемНаРаботуВОрганизацию.ВзятьИзКэша((byte[])Читалка.GetValue(28));
							Ссылка.ПодпадаетПодЕНВД = Читалка.GetDecimal(29);
							Ссылка.СлучайУходаЗаБольнымРебенком = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(30));
							Ссылка.ДнейОплаты = Читалка.GetDecimal(31);
							Ссылка.ДоплачиватьДоПолногоСреднегоЗаработка = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.ПериодРасчетаСреднегоЗаработкаНачало = Читалка.GetDateTime(35);
							Ссылка.ПериодРасчетаСреднегоЗаработкаОкончание = Читалка.GetDateTime(36);
							Ссылка.ПроцентОплатыБезЛьгот = Читалка.GetDecimal(37);
							Ссылка.ОграничениеПособияБезЛьгот = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(38));
							Ссылка.ПрименятьЛьготыПриНачисленииПособия = ((byte[])Читалка.GetValue(39))[0]==1;
							Ссылка.ВыплатаЗаСчетФедеральногоБюджета = V82.Перечисления/*Ссылка*/.ВыплатыПособийЗаСчетФедеральногоБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(40));
							Ссылка.УчитыватьЗаработокПредыдущихСтрахователей = ((byte[])Читалка.GetValue(42))[0]==1;
							Ссылка.ДнейОплатыРаботодателем = Читалка.GetDecimal(43);
							Ссылка.НеВыплачиватьПособие = ((byte[])Читалка.GetValue(44))[0]==1;
							Ссылка.РасчетПоПравилам2010Года = ((byte[])Читалка.GetValue(45))[0]==1;
							Ссылка.УсловияИсчисленияКод1 = Читалка.GetString(46);
							Ссылка.УсловияИсчисленияКод2 = Читалка.GetString(47);
							Ссылка.УсловияИсчисленияКод3 = Читалка.GetString(48);
							Ссылка.СтажЛет = Читалка.GetDecimal(49);
							Ссылка.СтажМесяцев = Читалка.GetDecimal(50);
							Ссылка.СтажБезНестраховыхПериодовЛет = Читалка.GetDecimal(51);
							Ссылка.СтажБезНестраховыхПериодовСтажМесяцев = Читалка.GetDecimal(52);
							Ссылка.ПеречислятьПособиеПочтовымПереводом = ((byte[])Читалка.GetValue(53))[0]==1;
							Ссылка.НаименованиеБанка = Читалка.GetString(55);
							Ссылка.БИКБанка = Читалка.GetString(56);
							Ссылка.НомерЛицевогоСчета = Читалка.GetString(57);
							Ссылка.АдресПочтовый = Читалка.GetString(58);
							Ссылка.Фамилия = Читалка.GetString(59);
							Ссылка.Имя = Читалка.GetString(60);
							Ссылка.Отчество = Читалка.GetString(61);
							Ссылка.СерияДокумента = Читалка.GetString(63);
							Ссылка.НомерДокумента = Читалка.GetString(64);
							Ссылка.ДатаВыдачиДокумента = Читалка.GetDateTime(65);
							Ссылка.ДатаДействияДокумента = Читалка.GetDateTime(66);
							Ссылка.ПериодПростояС = Читалка.GetDateTime(67);
							Ссылка.ПериодПростояПо = Читалка.GetDateTime(68);
							Ссылка.РасчетПособияИзТарифнойСтавки = ((byte[])Читалка.GetValue(69))[0]==1;
							Ссылка.ПоставленаНаУчетВРанниеСрокиБеременности = ((byte[])Читалка.GetValue(72))[0]==1;
							Ссылка.ДатаВыдачиБольничного = Читалка.GetDateTime(73);
							Ссылка.КодПричиныНетрудоспособности = Читалка.GetString(74);
							Ссылка.ДополнительныйКодПричиныНетрудоспособности = Читалка.GetString(75);
							Ссылка.ВторойКодПричиныНетрудоспособности = Читалка.GetString(76);
							Ссылка.ДатаИзмененияКодаПричиныНетрудоспособности = Читалка.GetDateTime(77);
							Ссылка.ДатаСправкиБеременной = Читалка.GetDateTime(78);
							Ссылка.ПериодНахожденияВСтационареСРебенкомС = Читалка.GetDateTime(79);
							Ссылка.ПериодНахожденияВСтационареСРебенкомПо = Читалка.GetDateTime(80);
							Ссылка.КодНарушенияРежима = Читалка.GetString(81);
							Ссылка.ДатаРегистрацииДокументовМСЭ = Читалка.GetDateTime(82);
							Ссылка.УстановленаИзмененаГруппаИнвалидности = ((byte[])Читалка.GetValue(83))[0]==1;
							Ссылка.ДатаВыходаНаРаботу = Читалка.GetDateTime(84);
							Ссылка.ЯвляетсяДубликатом = ((byte[])Читалка.GetValue(85))[0]==1;
							Ссылка.АдресЛПУ = Читалка.GetString(86);
							Ссылка.НаименованиеЛПУ = Читалка.GetString(87);
							Ссылка.ОГРН_ЛПУ = Читалка.GetString(88);
							Ссылка.НомерЛисткаПоОсновномуМестуРаботы = Читалка.GetString(89);
							Ссылка.ДатаОкончанияПутевки = Читалка.GetDateTime(90);
							Ссылка.НомерПутевки = Читалка.GetString(91);
							Ссылка.ОГРН_Санатория = Читалка.GetString(92);
							Ссылка.НомерЛисткаПродолжения = Читалка.GetString(93);
							Ссылка.ДатаНаправленияВБюроМСЭ = Читалка.GetDateTime(94);
							Ссылка.ДатаОсвидетельствованияМСЭ = Читалка.GetDateTime(95);
							Ссылка.НовыйСтатусНетрудопособного = Читалка.GetString(96);
							Ссылка.ДатаНовыйСтатусНетрудопособного = Читалка.GetDateTime(97);
							Ссылка.КемВыданДокумент = Читалка.GetString(98);
							Ссылка.ГруппаИнвалидности = Читалка.GetString(99);
							Ссылка.КодПричиныПерерасчета = Читалка.GetString(100);
							Ссылка.НДФЛсПособия = Читалка.GetDecimal(101);
							Ссылка.КоррСчетБанка = Читалка.GetString(102);
							Ссылка.НомерСправкиБеременной = Читалка.GetString(103);
							Ссылка.НаименованиеДокументаНаПроживание = Читалка.GetString(104);
							Ссылка.СерияДокументаНаПроживание = Читалка.GetString(105);
							Ссылка.НомерДокументаНаПроживание = Читалка.GetString(106);
							Ссылка.ДатаВыдачиДокументаНаПроживание = Читалка.GetDateTime(107);
							Ссылка.АдресРегистрации = Читалка.GetString(108);
							Ссылка.Телефон = Читалка.GetString(109);
							Ссылка.ТарифнаяСтавкаОклад = Читалка.GetDecimal(110);
							Ссылка.СреднедневнойЗаработокНаПериодПростоя = Читалка.GetDecimal(111);
							Ссылка.ТелефонСоставителя = Читалка.GetString(112);
							Ссылка.АдресПочтовыйКодПоКЛАДР = Читалка.GetString(113);
							Ссылка.АдресРегистрацииКодПоКЛАДР = Читалка.GetString(114);
							Ссылка.АдресЛПУКодПоКЛАДР = Читалка.GetString(115);
							Ссылка.НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении = ((byte[])Читалка.GetValue(117))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.НачислениеПоБольничномуЛисту СтраницаПоНомеру(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld10021 [ПериодРегистрации]
					,_Fld10022RRef [Организация]
					,_Fld10023 [Комментарий]
					,_Fld10024RRef [Ответственный]
					,_Fld10025RRef [Сотрудник]
					,_Fld10026RRef [Физлицо]
					,_Fld10027RRef [ПричинаНетрудоспособности]
					,_Fld10028 [ПроцентОплаты]
					,_Fld10029 [ЯвляетсяПродолжениемБолезни]
					,_Fld10030RRef [ПервичныйБольничныйЛист]
					,_Fld10031 [ДатаНачалаСобытия]
					,_Fld10032 [ДатаНачала]
					,_Fld10033 [ДатаНачалаОплаты]
					,_Fld10034 [ДатаОкончания]
					,_Fld10035 [ДатаНарушенияРежима]
					,_Fld10036 [ПособиеОтражаетсяВРеглУчетеТекущимДокументом]
					,_Fld10037RRef [ОграничениеПособия]
					,_Fld10038 [НомерВходящегоДокумента]
					,_Fld10039 [СерияВходящегоДокумента]
					,_Fld10040RRef [ПерерассчитываемыйДокумент]
					,_Fld10041RRef [ПричинаНетрудоспособностиПереходногоПериода]
					,_Fld10042 [ПроцентОплатыПереходногоПериода]
					,_Fld10043RRef [ОграничениеПособияПереходногоПериода]
					,_Fld10044RRef [СлучайУходаЗаБольнымРебенкомПереходногоПериода]
					,_Fld10045RRef [СтратегияОтраженияВУчете]
					,_Fld10046RRef [УдалитьПриказ]
					,_Fld10047 [ПодпадаетПодЕНВД]
					,_Fld10048RRef [СлучайУходаЗаБольнымРебенком]
					,_Fld10049 [ДнейОплаты]
					,_Fld10050RRef [ВидРасчета]
					,_Fld10051 [ДоплачиватьДоПолногоСреднегоЗаработка]
					,_Fld10052RRef [ВидРасчетаДоплаты]
					,_Fld10053 [ПериодРасчетаСреднегоЗаработкаНачало]
					,_Fld10054 [ПериодРасчетаСреднегоЗаработкаОкончание]
					,_Fld10055 [ПроцентОплатыБезЛьгот]
					,_Fld10056RRef [ОграничениеПособияБезЛьгот]
					,_Fld10057 [ПрименятьЛьготыПриНачисленииПособия]
					,_Fld10058RRef [ВыплатаЗаСчетФедеральногоБюджета]
					,_Fld10059RRef [ВидРасчетаЗаСчетРаботодателя]
					,_Fld10060 [УчитыватьЗаработокПредыдущихСтрахователей]
					,_Fld10061 [ДнейОплатыРаботодателем]
					,_Fld10062 [НеВыплачиватьПособие]
					,_Fld10063 [РасчетПоПравилам2010Года]
					,_Fld10064 [УсловияИсчисленияКод1]
					,_Fld10065 [УсловияИсчисленияКод2]
					,_Fld10066 [УсловияИсчисленияКод3]
					,_Fld10067 [СтажЛет]
					,_Fld10068 [СтажМесяцев]
					,_Fld10069 [СтажБезНестраховыхПериодовЛет]
					,_Fld10070 [СтажБезНестраховыхПериодовСтажМесяцев]
					,_Fld10071 [ПеречислятьПособиеПочтовымПереводом]
					,_Fld10072RRef [Банк]
					,_Fld10073 [НаименованиеБанка]
					,_Fld10074 [БИКБанка]
					,_Fld10075 [НомерЛицевогоСчета]
					,_Fld10076 [АдресПочтовый]
					,_Fld10077 [Фамилия]
					,_Fld10078 [Имя]
					,_Fld10079 [Отчество]
					,_Fld10080RRef [ВидДокумента]
					,_Fld10081 [СерияДокумента]
					,_Fld10082 [НомерДокумента]
					,_Fld10083 [ДатаВыдачиДокумента]
					,_Fld10084 [ДатаДействияДокумента]
					,_Fld10085 [ПериодПростояС]
					,_Fld10086 [ПериодПростояПо]
					,_Fld10087 [РасчетПособияИзТарифнойСтавки]
					,_Fld10088RRef [ДолжностьУполномоченного]
					,_Fld10089RRef [Уполномоченный]
					,_Fld10090 [ПоставленаНаУчетВРанниеСрокиБеременности]
					,_Fld10091 [ДатаВыдачиБольничного]
					,_Fld10092 [КодПричиныНетрудоспособности]
					,_Fld10093 [ДополнительныйКодПричиныНетрудоспособности]
					,_Fld10094 [ВторойКодПричиныНетрудоспособности]
					,_Fld10095 [ДатаИзмененияКодаПричиныНетрудоспособности]
					,_Fld10096 [ДатаСправкиБеременной]
					,_Fld10097 [ПериодНахожденияВСтационареСРебенкомС]
					,_Fld10098 [ПериодНахожденияВСтационареСРебенкомПо]
					,_Fld10099 [КодНарушенияРежима]
					,_Fld10100 [ДатаРегистрацииДокументовМСЭ]
					,_Fld10101 [УстановленаИзмененаГруппаИнвалидности]
					,_Fld10102 [ДатаВыходаНаРаботу]
					,_Fld10103 [ЯвляетсяДубликатом]
					,_Fld10104 [АдресЛПУ]
					,_Fld10105 [НаименованиеЛПУ]
					,_Fld10106 [ОГРН_ЛПУ]
					,_Fld10107 [НомерЛисткаПоОсновномуМестуРаботы]
					,_Fld10108 [ДатаОкончанияПутевки]
					,_Fld10109 [НомерПутевки]
					,_Fld10110 [ОГРН_Санатория]
					,_Fld10111 [НомерЛисткаПродолжения]
					,_Fld10112 [ДатаНаправленияВБюроМСЭ]
					,_Fld10113 [ДатаОсвидетельствованияМСЭ]
					,_Fld10114 [НовыйСтатусНетрудопособного]
					,_Fld10115 [ДатаНовыйСтатусНетрудопособного]
					,_Fld10116 [КемВыданДокумент]
					,_Fld10117 [ГруппаИнвалидности]
					,_Fld10118 [КодПричиныПерерасчета]
					,_Fld10119 [НДФЛсПособия]
					,_Fld10120 [КоррСчетБанка]
					,_Fld10121 [НомерСправкиБеременной]
					,_Fld10122 [НаименованиеДокументаНаПроживание]
					,_Fld10123 [СерияДокументаНаПроживание]
					,_Fld10124 [НомерДокументаНаПроживание]
					,_Fld10125 [ДатаВыдачиДокументаНаПроживание]
					,_Fld10126 [АдресРегистрации]
					,_Fld10127 [Телефон]
					,_Fld10128 [ТарифнаяСтавкаОклад]
					,_Fld10129 [СреднедневнойЗаработокНаПериодПростоя]
					,_Fld10130 [ТелефонСоставителя]
					,_Fld10131 [АдресПочтовыйКодПоКЛАДР]
					,_Fld10132 [АдресРегистрацииКодПоКЛАДР]
					,_Fld10133 [АдресЛПУКодПоКЛАДР]
					,_Fld10134RRef [ЛПУ]
					,_Fld10135 [НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении]
					From _Document440(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.НачислениеПоБольничномуЛисту();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.НачислениеПоБольничномуЛисту();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ПериодРегистрации = Читалка.GetDateTime(3);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.ПричинаНетрудоспособности = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(9));
							Ссылка.ПроцентОплаты = Читалка.GetDecimal(10);
							Ссылка.ЯвляетсяПродолжениемБолезни = ((byte[])Читалка.GetValue(11))[0]==1;
							Ссылка.ПервичныйБольничныйЛист = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(12));
							Ссылка.ДатаНачалаСобытия = Читалка.GetDateTime(13);
							Ссылка.ДатаНачала = Читалка.GetDateTime(14);
							Ссылка.ДатаНачалаОплаты = Читалка.GetDateTime(15);
							Ссылка.ДатаОкончания = Читалка.GetDateTime(16);
							Ссылка.ДатаНарушенияРежима = Читалка.GetDateTime(17);
							Ссылка.ПособиеОтражаетсяВРеглУчетеТекущимДокументом = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОграничениеПособия = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(19));
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(20);
							Ссылка.СерияВходящегоДокумента = Читалка.GetString(21);
							Ссылка.ПерерассчитываемыйДокумент = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(22));
							Ссылка.ПричинаНетрудоспособностиПереходногоПериода = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(23));
							Ссылка.ПроцентОплатыПереходногоПериода = Читалка.GetDecimal(24);
							Ссылка.ОграничениеПособияПереходногоПериода = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(25));
							Ссылка.СлучайУходаЗаБольнымРебенкомПереходногоПериода = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(26));
							Ссылка.СтратегияОтраженияВУчете = V82.Перечисления/*Ссылка*/.СтратегииОтраженияВРеглУчетеНачислений.ПустаяСсылка.Получить((byte[])Читалка.GetValue(27));
							Ссылка.УдалитьПриказ = V82.ДокументыСсылка.ПриемНаРаботуВОрганизацию.ВзятьИзКэша((byte[])Читалка.GetValue(28));
							Ссылка.ПодпадаетПодЕНВД = Читалка.GetDecimal(29);
							Ссылка.СлучайУходаЗаБольнымРебенком = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(30));
							Ссылка.ДнейОплаты = Читалка.GetDecimal(31);
							Ссылка.ДоплачиватьДоПолногоСреднегоЗаработка = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.ПериодРасчетаСреднегоЗаработкаНачало = Читалка.GetDateTime(35);
							Ссылка.ПериодРасчетаСреднегоЗаработкаОкончание = Читалка.GetDateTime(36);
							Ссылка.ПроцентОплатыБезЛьгот = Читалка.GetDecimal(37);
							Ссылка.ОграничениеПособияБезЛьгот = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(38));
							Ссылка.ПрименятьЛьготыПриНачисленииПособия = ((byte[])Читалка.GetValue(39))[0]==1;
							Ссылка.ВыплатаЗаСчетФедеральногоБюджета = V82.Перечисления/*Ссылка*/.ВыплатыПособийЗаСчетФедеральногоБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(40));
							Ссылка.УчитыватьЗаработокПредыдущихСтрахователей = ((byte[])Читалка.GetValue(42))[0]==1;
							Ссылка.ДнейОплатыРаботодателем = Читалка.GetDecimal(43);
							Ссылка.НеВыплачиватьПособие = ((byte[])Читалка.GetValue(44))[0]==1;
							Ссылка.РасчетПоПравилам2010Года = ((byte[])Читалка.GetValue(45))[0]==1;
							Ссылка.УсловияИсчисленияКод1 = Читалка.GetString(46);
							Ссылка.УсловияИсчисленияКод2 = Читалка.GetString(47);
							Ссылка.УсловияИсчисленияКод3 = Читалка.GetString(48);
							Ссылка.СтажЛет = Читалка.GetDecimal(49);
							Ссылка.СтажМесяцев = Читалка.GetDecimal(50);
							Ссылка.СтажБезНестраховыхПериодовЛет = Читалка.GetDecimal(51);
							Ссылка.СтажБезНестраховыхПериодовСтажМесяцев = Читалка.GetDecimal(52);
							Ссылка.ПеречислятьПособиеПочтовымПереводом = ((byte[])Читалка.GetValue(53))[0]==1;
							Ссылка.НаименованиеБанка = Читалка.GetString(55);
							Ссылка.БИКБанка = Читалка.GetString(56);
							Ссылка.НомерЛицевогоСчета = Читалка.GetString(57);
							Ссылка.АдресПочтовый = Читалка.GetString(58);
							Ссылка.Фамилия = Читалка.GetString(59);
							Ссылка.Имя = Читалка.GetString(60);
							Ссылка.Отчество = Читалка.GetString(61);
							Ссылка.СерияДокумента = Читалка.GetString(63);
							Ссылка.НомерДокумента = Читалка.GetString(64);
							Ссылка.ДатаВыдачиДокумента = Читалка.GetDateTime(65);
							Ссылка.ДатаДействияДокумента = Читалка.GetDateTime(66);
							Ссылка.ПериодПростояС = Читалка.GetDateTime(67);
							Ссылка.ПериодПростояПо = Читалка.GetDateTime(68);
							Ссылка.РасчетПособияИзТарифнойСтавки = ((byte[])Читалка.GetValue(69))[0]==1;
							Ссылка.ПоставленаНаУчетВРанниеСрокиБеременности = ((byte[])Читалка.GetValue(72))[0]==1;
							Ссылка.ДатаВыдачиБольничного = Читалка.GetDateTime(73);
							Ссылка.КодПричиныНетрудоспособности = Читалка.GetString(74);
							Ссылка.ДополнительныйКодПричиныНетрудоспособности = Читалка.GetString(75);
							Ссылка.ВторойКодПричиныНетрудоспособности = Читалка.GetString(76);
							Ссылка.ДатаИзмененияКодаПричиныНетрудоспособности = Читалка.GetDateTime(77);
							Ссылка.ДатаСправкиБеременной = Читалка.GetDateTime(78);
							Ссылка.ПериодНахожденияВСтационареСРебенкомС = Читалка.GetDateTime(79);
							Ссылка.ПериодНахожденияВСтационареСРебенкомПо = Читалка.GetDateTime(80);
							Ссылка.КодНарушенияРежима = Читалка.GetString(81);
							Ссылка.ДатаРегистрацииДокументовМСЭ = Читалка.GetDateTime(82);
							Ссылка.УстановленаИзмененаГруппаИнвалидности = ((byte[])Читалка.GetValue(83))[0]==1;
							Ссылка.ДатаВыходаНаРаботу = Читалка.GetDateTime(84);
							Ссылка.ЯвляетсяДубликатом = ((byte[])Читалка.GetValue(85))[0]==1;
							Ссылка.АдресЛПУ = Читалка.GetString(86);
							Ссылка.НаименованиеЛПУ = Читалка.GetString(87);
							Ссылка.ОГРН_ЛПУ = Читалка.GetString(88);
							Ссылка.НомерЛисткаПоОсновномуМестуРаботы = Читалка.GetString(89);
							Ссылка.ДатаОкончанияПутевки = Читалка.GetDateTime(90);
							Ссылка.НомерПутевки = Читалка.GetString(91);
							Ссылка.ОГРН_Санатория = Читалка.GetString(92);
							Ссылка.НомерЛисткаПродолжения = Читалка.GetString(93);
							Ссылка.ДатаНаправленияВБюроМСЭ = Читалка.GetDateTime(94);
							Ссылка.ДатаОсвидетельствованияМСЭ = Читалка.GetDateTime(95);
							Ссылка.НовыйСтатусНетрудопособного = Читалка.GetString(96);
							Ссылка.ДатаНовыйСтатусНетрудопособного = Читалка.GetDateTime(97);
							Ссылка.КемВыданДокумент = Читалка.GetString(98);
							Ссылка.ГруппаИнвалидности = Читалка.GetString(99);
							Ссылка.КодПричиныПерерасчета = Читалка.GetString(100);
							Ссылка.НДФЛсПособия = Читалка.GetDecimal(101);
							Ссылка.КоррСчетБанка = Читалка.GetString(102);
							Ссылка.НомерСправкиБеременной = Читалка.GetString(103);
							Ссылка.НаименованиеДокументаНаПроживание = Читалка.GetString(104);
							Ссылка.СерияДокументаНаПроживание = Читалка.GetString(105);
							Ссылка.НомерДокументаНаПроживание = Читалка.GetString(106);
							Ссылка.ДатаВыдачиДокументаНаПроживание = Читалка.GetDateTime(107);
							Ссылка.АдресРегистрации = Читалка.GetString(108);
							Ссылка.Телефон = Читалка.GetString(109);
							Ссылка.ТарифнаяСтавкаОклад = Читалка.GetDecimal(110);
							Ссылка.СреднедневнойЗаработокНаПериодПростоя = Читалка.GetDecimal(111);
							Ссылка.ТелефонСоставителя = Читалка.GetString(112);
							Ссылка.АдресПочтовыйКодПоКЛАДР = Читалка.GetString(113);
							Ссылка.АдресРегистрацииКодПоКЛАДР = Читалка.GetString(114);
							Ссылка.АдресЛПУКодПоКЛАДР = Читалка.GetString(115);
							Ссылка.НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении = ((byte[])Читалка.GetValue(117))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.ДокументыОбъект.НачислениеПоБольничномуЛисту СоздатьЭлемент()
		{
			var Объект = new V82.ДокументыОбъект.НачислениеПоБольничномуЛисту();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.Комментарий = "";
			Объект.НомерВходящегоДокумента = "";
			Объект.СерияВходящегоДокумента = "";
			Объект.УсловияИсчисленияКод1 = "";
			Объект.УсловияИсчисленияКод2 = "";
			Объект.УсловияИсчисленияКод3 = "";
			Объект.НаименованиеБанка = "";
			Объект.БИКБанка = "";
			Объект.НомерЛицевогоСчета = "";
			Объект.АдресПочтовый = "";
			Объект.Фамилия = "";
			Объект.Имя = "";
			Объект.Отчество = "";
			Объект.СерияДокумента = "";
			Объект.НомерДокумента = "";
			Объект.КодПричиныНетрудоспособности = "";
			Объект.ДополнительныйКодПричиныНетрудоспособности = "";
			Объект.ВторойКодПричиныНетрудоспособности = "";
			Объект.КодНарушенияРежима = "";
			Объект.АдресЛПУ = "";
			Объект.НаименованиеЛПУ = "";
			Объект.ОГРН_ЛПУ = "";
			Объект.НомерЛисткаПоОсновномуМестуРаботы = "";
			Объект.НомерПутевки = "";
			Объект.ОГРН_Санатория = "";
			Объект.НомерЛисткаПродолжения = "";
			Объект.НовыйСтатусНетрудопособного = "";
			Объект.КемВыданДокумент = "";
			Объект.ГруппаИнвалидности = "";
			Объект.КодПричиныПерерасчета = "";
			Объект.КоррСчетБанка = "";
			Объект.НомерСправкиБеременной = "";
			Объект.НаименованиеДокументаНаПроживание = "";
			Объект.СерияДокументаНаПроживание = "";
			Объект.НомерДокументаНаПроживание = "";
			Объект.АдресРегистрации = "";
			Объект.Телефон = "";
			Объект.ТелефонСоставителя = "";
			Объект.АдресПочтовыйКодПоКЛАДР = "";
			Объект.АдресРегистрацииКодПоКЛАДР = "";
			Объект.АдресЛПУКодПоКЛАДР = "";
			Объект.ПричинаНетрудоспособности = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка;
			Объект.ПервичныйБольничныйЛист = new V82.ДокументыСсылка.НачислениеПоБольничномуЛисту();
			Объект.ОграничениеПособия = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка;
			Объект.ПерерассчитываемыйДокумент = new V82.ДокументыСсылка.НачислениеПоБольничномуЛисту();
			Объект.ПричинаНетрудоспособностиПереходногоПериода = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка;
			Объект.ОграничениеПособияПереходногоПериода = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка;
			Объект.СлучайУходаЗаБольнымРебенкомПереходногоПериода = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка;
			Объект.СтратегияОтраженияВУчете = V82.Перечисления/*Ссылка*/.СтратегииОтраженияВРеглУчетеНачислений.ПустаяСсылка;
			Объект.УдалитьПриказ = new V82.ДокументыСсылка.ПриемНаРаботуВОрганизацию();
			Объект.СлучайУходаЗаБольнымРебенком = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка;
			Объект.ОграничениеПособияБезЛьгот = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка;
			Объект.ВыплатаЗаСчетФедеральногоБюджета = V82.Перечисления/*Ссылка*/.ВыплатыПособийЗаСчетФедеральногоБюджета.ПустаяСсылка;
			return Объект;
		}
	}
}