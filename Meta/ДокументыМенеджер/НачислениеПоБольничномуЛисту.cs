
using System;
using System.Data.SqlClient;
using V82;
using V82.ДокументыСсылка;
using V82.Документы;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Документы//Менеджер
{
	///<summary>
	///(Регл)
	///</summary>
	public partial class НачислениеПоБольничномуЛисту:ДокументМенеджер
	{
		
		public static ДокументыСсылка.НачислениеПоБольничномуЛисту НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld6376 [ПериодРегистрации]
					,_Fld6377RRef [Организация]
					,_Fld6378 [Комментарий]
					,_Fld6379RRef [Ответственный]
					,_Fld21604RRef [Сотрудник]
					,_Fld6380RRef [Физлицо]
					,_Fld6382RRef [ПричинаНетрудоспособности]
					,_Fld6383 [ПроцентОплаты]
					,_Fld26875 [ЯвляетсяПродолжениемБолезни]
					,_Fld6384RRef [ПервичныйБольничныйЛист]
					,_Fld26876 [ДатаНачалаСобытия]
					,_Fld6385 [ДатаНачала]
					,_Fld26877 [ДатаНачалаОплаты]
					,_Fld6386 [ДатаОкончания]
					,_Fld18769 [ДатаНарушенияРежима]
					,_Fld21605 [ПособиеОтражаетсяВРеглУчетеТекущимДокументом]
					,_Fld6387RRef [ОграничениеПособия]
					,_Fld6388 [НомерВходящегоДокумента]
					,_Fld6389 [СерияВходящегоДокумента]
					,_Fld6390RRef [ПерерассчитываемыйДокумент]
					,_Fld18765RRef [ПричинаНетрудоспособностиПереходногоПериода]
					,_Fld18766 [ПроцентОплатыПереходногоПериода]
					,_Fld18767RRef [ОграничениеПособияПереходногоПериода]
					,_Fld18768RRef [СлучайУходаЗаБольнымРебенкомПереходногоПериода]
					,_Fld21606RRef [СтратегияОтраженияВУчете]
					,_Fld6381RRef [УдалитьПриказ]
					,_Fld21607 [ПодпадаетПодЕНВД]
					,_Fld18763RRef [СлучайУходаЗаБольнымРебенком]
					,_Fld18764 [ДнейОплаты]
					,_Fld21608RRef [ВидРасчета]
					,_Fld26878 [ДоплачиватьДоПолногоСреднегоЗаработка]
					,_Fld26879RRef [ВидРасчетаДоплаты]
					,_Fld26880 [ПериодРасчетаСреднегоЗаработкаНачало]
					,_Fld26881 [ПериодРасчетаСреднегоЗаработкаОкончание]
					,_Fld26882 [ПроцентОплатыБезЛьгот]
					,_Fld26883RRef [ОграничениеПособияБезЛьгот]
					,_Fld26884 [ПрименятьЛьготыПриНачисленииПособия]
					,_Fld26885RRef [ВыплатаЗаСчетФедеральногоБюджета]
					,_Fld26886RRef [ВидРасчетаЗаСчетРаботодателя]
					,_Fld26887 [УчитыватьЗаработокПредыдущихСтрахователей]
					,_Fld26888 [ДнейОплатыРаботодателем]
					,_Fld26889 [НеВыплачиватьПособие]
					,_Fld26890 [РасчетПоПравилам2010Года]
					,_Fld26891 [УсловияИсчисленияКод1]
					,_Fld26892 [УсловияИсчисленияКод2]
					,_Fld26893 [УсловияИсчисленияКод3]
					,_Fld26894 [СтажЛет]
					,_Fld26895 [СтажМесяцев]
					,_Fld26896 [СтажБезНестраховыхПериодовЛет]
					,_Fld26897 [СтажБезНестраховыхПериодовСтажМесяцев]
					,_Fld26898 [ПеречислятьПособиеПочтовымПереводом]
					,_Fld26899RRef [Банк]
					,_Fld26900 [НаименованиеБанка]
					,_Fld26901 [БИКБанка]
					,_Fld26902 [НомерЛицевогоСчета]
					,_Fld26903 [АдресПочтовый]
					,_Fld26904 [Фамилия]
					,_Fld26905 [Имя]
					,_Fld26906 [Отчество]
					,_Fld26907RRef [ВидДокумента]
					,_Fld26908 [СерияДокумента]
					,_Fld26909 [НомерДокумента]
					,_Fld26910 [ДатаВыдачиДокумента]
					,_Fld26911 [ДатаДействияДокумента]
					,_Fld26912 [ПериодПростояС]
					,_Fld26913 [ПериодПростояПо]
					,_Fld26914 [РасчетПособияИзТарифнойСтавки]
					,_Fld26915RRef [ДолжностьУполномоченного]
					,_Fld26916RRef [Уполномоченный]
					,_Fld26917 [ПоставленаНаУчетВРанниеСрокиБеременности]
					,_Fld26918 [ДатаВыдачиБольничного]
					,_Fld26919 [КодПричиныНетрудоспособности]
					,_Fld26920 [ДополнительныйКодПричиныНетрудоспособности]
					,_Fld26921 [ВторойКодПричиныНетрудоспособности]
					,_Fld26922 [ДатаИзмененияКодаПричиныНетрудоспособности]
					,_Fld26923 [ДатаСправкиБеременной]
					,_Fld26924 [ПериодНахожденияВСтационареСРебенкомС]
					,_Fld26925 [ПериодНахожденияВСтационареСРебенкомПо]
					,_Fld26926 [КодНарушенияРежима]
					,_Fld26927 [ДатаРегистрацииДокументовМСЭ]
					,_Fld26928 [УстановленаИзмененаГруппаИнвалидности]
					,_Fld26929 [ДатаВыходаНаРаботу]
					,_Fld26930 [ЯвляетсяДубликатом]
					,_Fld26931 [АдресЛПУ]
					,_Fld26932 [НаименованиеЛПУ]
					,_Fld26933 [ОГРН_ЛПУ]
					,_Fld26934 [НомерЛисткаПоОсновномуМестуРаботы]
					,_Fld26935 [ДатаОкончанияПутевки]
					,_Fld26936 [НомерПутевки]
					,_Fld26937 [ОГРН_Санатория]
					,_Fld26938 [НомерЛисткаПродолжения]
					,_Fld26939 [ДатаНаправленияВБюроМСЭ]
					,_Fld26940 [ДатаОсвидетельствованияМСЭ]
					,_Fld26941 [НовыйСтатусНетрудопособного]
					,_Fld26942 [ДатаНовыйСтатусНетрудопособного]
					,_Fld26943 [КемВыданДокумент]
					,_Fld26944 [ГруппаИнвалидности]
					,_Fld26945 [КодПричиныПерерасчета]
					,_Fld26946 [НДФЛсПособия]
					,_Fld26947 [КоррСчетБанка]
					,_Fld26948 [НомерСправкиБеременной]
					,_Fld26949 [НаименованиеДокументаНаПроживание]
					,_Fld26950 [СерияДокументаНаПроживание]
					,_Fld26951 [НомерДокументаНаПроживание]
					,_Fld26952 [ДатаВыдачиДокументаНаПроживание]
					,_Fld26953 [АдресРегистрации]
					,_Fld26954 [Телефон]
					,_Fld26955 [ТарифнаяСтавкаОклад]
					,_Fld26956 [СреднедневнойЗаработокНаПериодПростоя]
					,_Fld26957 [ТелефонСоставителя]
					,_Fld26958 [АдресПочтовыйКодПоКЛАДР]
					,_Fld26959 [АдресРегистрацииКодПоКЛАДР]
					,_Fld26960 [АдресЛПУКодПоКЛАДР]
					,_Fld26961RRef [ЛПУ]
					,_Fld26962 [НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении]
					From _Document323(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.НачислениеПоБольничномуЛисту();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ПериодРегистрации = Читалка.GetDateTime(3);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.ПричинаНетрудоспособности = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(9));
							Ссылка.ПроцентОплаты = Читалка.GetDecimal(10);
							Ссылка.ЯвляетсяПродолжениемБолезни = ((byte[])Читалка.GetValue(11))[0]==1;
							Ссылка.ПервичныйБольничныйЛист = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(12));
							Ссылка.ДатаНачалаСобытия = Читалка.GetDateTime(13);
							Ссылка.ДатаНачала = Читалка.GetDateTime(14);
							Ссылка.ДатаНачалаОплаты = Читалка.GetDateTime(15);
							Ссылка.ДатаОкончания = Читалка.GetDateTime(16);
							Ссылка.ДатаНарушенияРежима = Читалка.GetDateTime(17);
							Ссылка.ПособиеОтражаетсяВРеглУчетеТекущимДокументом = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОграничениеПособия = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(19));
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(20);
							Ссылка.СерияВходящегоДокумента = Читалка.GetString(21);
							Ссылка.ПерерассчитываемыйДокумент = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(22));
							Ссылка.ПричинаНетрудоспособностиПереходногоПериода = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(23));
							Ссылка.ПроцентОплатыПереходногоПериода = Читалка.GetDecimal(24);
							Ссылка.ОграничениеПособияПереходногоПериода = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(25));
							Ссылка.СлучайУходаЗаБольнымРебенкомПереходногоПериода = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(26));
							Ссылка.СтратегияОтраженияВУчете = V82.Перечисления/*Ссылка*/.СтратегииОтраженияВРеглУчетеНачислений.ПустаяСсылка.Получить((byte[])Читалка.GetValue(27));
							Ссылка.УдалитьПриказ = V82.ДокументыСсылка.ПриемНаРаботуВОрганизацию.ВзятьИзКэша((byte[])Читалка.GetValue(28));
							Ссылка.ПодпадаетПодЕНВД = Читалка.GetDecimal(29);
							Ссылка.СлучайУходаЗаБольнымРебенком = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(30));
							Ссылка.ДнейОплаты = Читалка.GetDecimal(31);
							Ссылка.ДоплачиватьДоПолногоСреднегоЗаработка = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.ПериодРасчетаСреднегоЗаработкаНачало = Читалка.GetDateTime(35);
							Ссылка.ПериодРасчетаСреднегоЗаработкаОкончание = Читалка.GetDateTime(36);
							Ссылка.ПроцентОплатыБезЛьгот = Читалка.GetDecimal(37);
							Ссылка.ОграничениеПособияБезЛьгот = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(38));
							Ссылка.ПрименятьЛьготыПриНачисленииПособия = ((byte[])Читалка.GetValue(39))[0]==1;
							Ссылка.ВыплатаЗаСчетФедеральногоБюджета = V82.Перечисления/*Ссылка*/.ВыплатыПособийЗаСчетФедеральногоБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(40));
							Ссылка.УчитыватьЗаработокПредыдущихСтрахователей = ((byte[])Читалка.GetValue(42))[0]==1;
							Ссылка.ДнейОплатыРаботодателем = Читалка.GetDecimal(43);
							Ссылка.НеВыплачиватьПособие = ((byte[])Читалка.GetValue(44))[0]==1;
							Ссылка.РасчетПоПравилам2010Года = ((byte[])Читалка.GetValue(45))[0]==1;
							Ссылка.УсловияИсчисленияКод1 = Читалка.GetString(46);
							Ссылка.УсловияИсчисленияКод2 = Читалка.GetString(47);
							Ссылка.УсловияИсчисленияКод3 = Читалка.GetString(48);
							Ссылка.СтажЛет = Читалка.GetDecimal(49);
							Ссылка.СтажМесяцев = Читалка.GetDecimal(50);
							Ссылка.СтажБезНестраховыхПериодовЛет = Читалка.GetDecimal(51);
							Ссылка.СтажБезНестраховыхПериодовСтажМесяцев = Читалка.GetDecimal(52);
							Ссылка.ПеречислятьПособиеПочтовымПереводом = ((byte[])Читалка.GetValue(53))[0]==1;
							Ссылка.НаименованиеБанка = Читалка.GetString(55);
							Ссылка.БИКБанка = Читалка.GetString(56);
							Ссылка.НомерЛицевогоСчета = Читалка.GetString(57);
							Ссылка.АдресПочтовый = Читалка.GetString(58);
							Ссылка.Фамилия = Читалка.GetString(59);
							Ссылка.Имя = Читалка.GetString(60);
							Ссылка.Отчество = Читалка.GetString(61);
							Ссылка.СерияДокумента = Читалка.GetString(63);
							Ссылка.НомерДокумента = Читалка.GetString(64);
							Ссылка.ДатаВыдачиДокумента = Читалка.GetDateTime(65);
							Ссылка.ДатаДействияДокумента = Читалка.GetDateTime(66);
							Ссылка.ПериодПростояС = Читалка.GetDateTime(67);
							Ссылка.ПериодПростояПо = Читалка.GetDateTime(68);
							Ссылка.РасчетПособияИзТарифнойСтавки = ((byte[])Читалка.GetValue(69))[0]==1;
							Ссылка.ПоставленаНаУчетВРанниеСрокиБеременности = ((byte[])Читалка.GetValue(72))[0]==1;
							Ссылка.ДатаВыдачиБольничного = Читалка.GetDateTime(73);
							Ссылка.КодПричиныНетрудоспособности = Читалка.GetString(74);
							Ссылка.ДополнительныйКодПричиныНетрудоспособности = Читалка.GetString(75);
							Ссылка.ВторойКодПричиныНетрудоспособности = Читалка.GetString(76);
							Ссылка.ДатаИзмененияКодаПричиныНетрудоспособности = Читалка.GetDateTime(77);
							Ссылка.ДатаСправкиБеременной = Читалка.GetDateTime(78);
							Ссылка.ПериодНахожденияВСтационареСРебенкомС = Читалка.GetDateTime(79);
							Ссылка.ПериодНахожденияВСтационареСРебенкомПо = Читалка.GetDateTime(80);
							Ссылка.КодНарушенияРежима = Читалка.GetString(81);
							Ссылка.ДатаРегистрацииДокументовМСЭ = Читалка.GetDateTime(82);
							Ссылка.УстановленаИзмененаГруппаИнвалидности = ((byte[])Читалка.GetValue(83))[0]==1;
							Ссылка.ДатаВыходаНаРаботу = Читалка.GetDateTime(84);
							Ссылка.ЯвляетсяДубликатом = ((byte[])Читалка.GetValue(85))[0]==1;
							Ссылка.АдресЛПУ = Читалка.GetString(86);
							Ссылка.НаименованиеЛПУ = Читалка.GetString(87);
							Ссылка.ОГРН_ЛПУ = Читалка.GetString(88);
							Ссылка.НомерЛисткаПоОсновномуМестуРаботы = Читалка.GetString(89);
							Ссылка.ДатаОкончанияПутевки = Читалка.GetDateTime(90);
							Ссылка.НомерПутевки = Читалка.GetString(91);
							Ссылка.ОГРН_Санатория = Читалка.GetString(92);
							Ссылка.НомерЛисткаПродолжения = Читалка.GetString(93);
							Ссылка.ДатаНаправленияВБюроМСЭ = Читалка.GetDateTime(94);
							Ссылка.ДатаОсвидетельствованияМСЭ = Читалка.GetDateTime(95);
							Ссылка.НовыйСтатусНетрудопособного = Читалка.GetString(96);
							Ссылка.ДатаНовыйСтатусНетрудопособного = Читалка.GetDateTime(97);
							Ссылка.КемВыданДокумент = Читалка.GetString(98);
							Ссылка.ГруппаИнвалидности = Читалка.GetString(99);
							Ссылка.КодПричиныПерерасчета = Читалка.GetString(100);
							Ссылка.НДФЛсПособия = Читалка.GetDecimal(101);
							Ссылка.КоррСчетБанка = Читалка.GetString(102);
							Ссылка.НомерСправкиБеременной = Читалка.GetString(103);
							Ссылка.НаименованиеДокументаНаПроживание = Читалка.GetString(104);
							Ссылка.СерияДокументаНаПроживание = Читалка.GetString(105);
							Ссылка.НомерДокументаНаПроживание = Читалка.GetString(106);
							Ссылка.ДатаВыдачиДокументаНаПроживание = Читалка.GetDateTime(107);
							Ссылка.АдресРегистрации = Читалка.GetString(108);
							Ссылка.Телефон = Читалка.GetString(109);
							Ссылка.ТарифнаяСтавкаОклад = Читалка.GetDecimal(110);
							Ссылка.СреднедневнойЗаработокНаПериодПростоя = Читалка.GetDecimal(111);
							Ссылка.ТелефонСоставителя = Читалка.GetString(112);
							Ссылка.АдресПочтовыйКодПоКЛАДР = Читалка.GetString(113);
							Ссылка.АдресРегистрацииКодПоКЛАДР = Читалка.GetString(114);
							Ссылка.АдресЛПУКодПоКЛАДР = Читалка.GetString(115);
							Ссылка.НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении = ((byte[])Читалка.GetValue(117))[0]==1;
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыСсылка.НачислениеПоБольничномуЛисту НайтиПоНомеру(string Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld6376 [ПериодРегистрации]
					,_Fld6377RRef [Организация]
					,_Fld6378 [Комментарий]
					,_Fld6379RRef [Ответственный]
					,_Fld21604RRef [Сотрудник]
					,_Fld6380RRef [Физлицо]
					,_Fld6382RRef [ПричинаНетрудоспособности]
					,_Fld6383 [ПроцентОплаты]
					,_Fld26875 [ЯвляетсяПродолжениемБолезни]
					,_Fld6384RRef [ПервичныйБольничныйЛист]
					,_Fld26876 [ДатаНачалаСобытия]
					,_Fld6385 [ДатаНачала]
					,_Fld26877 [ДатаНачалаОплаты]
					,_Fld6386 [ДатаОкончания]
					,_Fld18769 [ДатаНарушенияРежима]
					,_Fld21605 [ПособиеОтражаетсяВРеглУчетеТекущимДокументом]
					,_Fld6387RRef [ОграничениеПособия]
					,_Fld6388 [НомерВходящегоДокумента]
					,_Fld6389 [СерияВходящегоДокумента]
					,_Fld6390RRef [ПерерассчитываемыйДокумент]
					,_Fld18765RRef [ПричинаНетрудоспособностиПереходногоПериода]
					,_Fld18766 [ПроцентОплатыПереходногоПериода]
					,_Fld18767RRef [ОграничениеПособияПереходногоПериода]
					,_Fld18768RRef [СлучайУходаЗаБольнымРебенкомПереходногоПериода]
					,_Fld21606RRef [СтратегияОтраженияВУчете]
					,_Fld6381RRef [УдалитьПриказ]
					,_Fld21607 [ПодпадаетПодЕНВД]
					,_Fld18763RRef [СлучайУходаЗаБольнымРебенком]
					,_Fld18764 [ДнейОплаты]
					,_Fld21608RRef [ВидРасчета]
					,_Fld26878 [ДоплачиватьДоПолногоСреднегоЗаработка]
					,_Fld26879RRef [ВидРасчетаДоплаты]
					,_Fld26880 [ПериодРасчетаСреднегоЗаработкаНачало]
					,_Fld26881 [ПериодРасчетаСреднегоЗаработкаОкончание]
					,_Fld26882 [ПроцентОплатыБезЛьгот]
					,_Fld26883RRef [ОграничениеПособияБезЛьгот]
					,_Fld26884 [ПрименятьЛьготыПриНачисленииПособия]
					,_Fld26885RRef [ВыплатаЗаСчетФедеральногоБюджета]
					,_Fld26886RRef [ВидРасчетаЗаСчетРаботодателя]
					,_Fld26887 [УчитыватьЗаработокПредыдущихСтрахователей]
					,_Fld26888 [ДнейОплатыРаботодателем]
					,_Fld26889 [НеВыплачиватьПособие]
					,_Fld26890 [РасчетПоПравилам2010Года]
					,_Fld26891 [УсловияИсчисленияКод1]
					,_Fld26892 [УсловияИсчисленияКод2]
					,_Fld26893 [УсловияИсчисленияКод3]
					,_Fld26894 [СтажЛет]
					,_Fld26895 [СтажМесяцев]
					,_Fld26896 [СтажБезНестраховыхПериодовЛет]
					,_Fld26897 [СтажБезНестраховыхПериодовСтажМесяцев]
					,_Fld26898 [ПеречислятьПособиеПочтовымПереводом]
					,_Fld26899RRef [Банк]
					,_Fld26900 [НаименованиеБанка]
					,_Fld26901 [БИКБанка]
					,_Fld26902 [НомерЛицевогоСчета]
					,_Fld26903 [АдресПочтовый]
					,_Fld26904 [Фамилия]
					,_Fld26905 [Имя]
					,_Fld26906 [Отчество]
					,_Fld26907RRef [ВидДокумента]
					,_Fld26908 [СерияДокумента]
					,_Fld26909 [НомерДокумента]
					,_Fld26910 [ДатаВыдачиДокумента]
					,_Fld26911 [ДатаДействияДокумента]
					,_Fld26912 [ПериодПростояС]
					,_Fld26913 [ПериодПростояПо]
					,_Fld26914 [РасчетПособияИзТарифнойСтавки]
					,_Fld26915RRef [ДолжностьУполномоченного]
					,_Fld26916RRef [Уполномоченный]
					,_Fld26917 [ПоставленаНаУчетВРанниеСрокиБеременности]
					,_Fld26918 [ДатаВыдачиБольничного]
					,_Fld26919 [КодПричиныНетрудоспособности]
					,_Fld26920 [ДополнительныйКодПричиныНетрудоспособности]
					,_Fld26921 [ВторойКодПричиныНетрудоспособности]
					,_Fld26922 [ДатаИзмененияКодаПричиныНетрудоспособности]
					,_Fld26923 [ДатаСправкиБеременной]
					,_Fld26924 [ПериодНахожденияВСтационареСРебенкомС]
					,_Fld26925 [ПериодНахожденияВСтационареСРебенкомПо]
					,_Fld26926 [КодНарушенияРежима]
					,_Fld26927 [ДатаРегистрацииДокументовМСЭ]
					,_Fld26928 [УстановленаИзмененаГруппаИнвалидности]
					,_Fld26929 [ДатаВыходаНаРаботу]
					,_Fld26930 [ЯвляетсяДубликатом]
					,_Fld26931 [АдресЛПУ]
					,_Fld26932 [НаименованиеЛПУ]
					,_Fld26933 [ОГРН_ЛПУ]
					,_Fld26934 [НомерЛисткаПоОсновномуМестуРаботы]
					,_Fld26935 [ДатаОкончанияПутевки]
					,_Fld26936 [НомерПутевки]
					,_Fld26937 [ОГРН_Санатория]
					,_Fld26938 [НомерЛисткаПродолжения]
					,_Fld26939 [ДатаНаправленияВБюроМСЭ]
					,_Fld26940 [ДатаОсвидетельствованияМСЭ]
					,_Fld26941 [НовыйСтатусНетрудопособного]
					,_Fld26942 [ДатаНовыйСтатусНетрудопособного]
					,_Fld26943 [КемВыданДокумент]
					,_Fld26944 [ГруппаИнвалидности]
					,_Fld26945 [КодПричиныПерерасчета]
					,_Fld26946 [НДФЛсПособия]
					,_Fld26947 [КоррСчетБанка]
					,_Fld26948 [НомерСправкиБеременной]
					,_Fld26949 [НаименованиеДокументаНаПроживание]
					,_Fld26950 [СерияДокументаНаПроживание]
					,_Fld26951 [НомерДокументаНаПроживание]
					,_Fld26952 [ДатаВыдачиДокументаНаПроживание]
					,_Fld26953 [АдресРегистрации]
					,_Fld26954 [Телефон]
					,_Fld26955 [ТарифнаяСтавкаОклад]
					,_Fld26956 [СреднедневнойЗаработокНаПериодПростоя]
					,_Fld26957 [ТелефонСоставителя]
					,_Fld26958 [АдресПочтовыйКодПоКЛАДР]
					,_Fld26959 [АдресРегистрацииКодПоКЛАДР]
					,_Fld26960 [АдресЛПУКодПоКЛАДР]
					,_Fld26961RRef [ЛПУ]
					,_Fld26962 [НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении]
					From _Document323(NOLOCK)
					Where _Number = @Номер";
					Команда.Parameters.AddWithValue("Номер", Номер);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.НачислениеПоБольничномуЛисту();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ПериодРегистрации = Читалка.GetDateTime(3);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.ПричинаНетрудоспособности = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(9));
							Ссылка.ПроцентОплаты = Читалка.GetDecimal(10);
							Ссылка.ЯвляетсяПродолжениемБолезни = ((byte[])Читалка.GetValue(11))[0]==1;
							Ссылка.ПервичныйБольничныйЛист = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(12));
							Ссылка.ДатаНачалаСобытия = Читалка.GetDateTime(13);
							Ссылка.ДатаНачала = Читалка.GetDateTime(14);
							Ссылка.ДатаНачалаОплаты = Читалка.GetDateTime(15);
							Ссылка.ДатаОкончания = Читалка.GetDateTime(16);
							Ссылка.ДатаНарушенияРежима = Читалка.GetDateTime(17);
							Ссылка.ПособиеОтражаетсяВРеглУчетеТекущимДокументом = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОграничениеПособия = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(19));
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(20);
							Ссылка.СерияВходящегоДокумента = Читалка.GetString(21);
							Ссылка.ПерерассчитываемыйДокумент = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(22));
							Ссылка.ПричинаНетрудоспособностиПереходногоПериода = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(23));
							Ссылка.ПроцентОплатыПереходногоПериода = Читалка.GetDecimal(24);
							Ссылка.ОграничениеПособияПереходногоПериода = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(25));
							Ссылка.СлучайУходаЗаБольнымРебенкомПереходногоПериода = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(26));
							Ссылка.СтратегияОтраженияВУчете = V82.Перечисления/*Ссылка*/.СтратегииОтраженияВРеглУчетеНачислений.ПустаяСсылка.Получить((byte[])Читалка.GetValue(27));
							Ссылка.УдалитьПриказ = V82.ДокументыСсылка.ПриемНаРаботуВОрганизацию.ВзятьИзКэша((byte[])Читалка.GetValue(28));
							Ссылка.ПодпадаетПодЕНВД = Читалка.GetDecimal(29);
							Ссылка.СлучайУходаЗаБольнымРебенком = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(30));
							Ссылка.ДнейОплаты = Читалка.GetDecimal(31);
							Ссылка.ДоплачиватьДоПолногоСреднегоЗаработка = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.ПериодРасчетаСреднегоЗаработкаНачало = Читалка.GetDateTime(35);
							Ссылка.ПериодРасчетаСреднегоЗаработкаОкончание = Читалка.GetDateTime(36);
							Ссылка.ПроцентОплатыБезЛьгот = Читалка.GetDecimal(37);
							Ссылка.ОграничениеПособияБезЛьгот = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(38));
							Ссылка.ПрименятьЛьготыПриНачисленииПособия = ((byte[])Читалка.GetValue(39))[0]==1;
							Ссылка.ВыплатаЗаСчетФедеральногоБюджета = V82.Перечисления/*Ссылка*/.ВыплатыПособийЗаСчетФедеральногоБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(40));
							Ссылка.УчитыватьЗаработокПредыдущихСтрахователей = ((byte[])Читалка.GetValue(42))[0]==1;
							Ссылка.ДнейОплатыРаботодателем = Читалка.GetDecimal(43);
							Ссылка.НеВыплачиватьПособие = ((byte[])Читалка.GetValue(44))[0]==1;
							Ссылка.РасчетПоПравилам2010Года = ((byte[])Читалка.GetValue(45))[0]==1;
							Ссылка.УсловияИсчисленияКод1 = Читалка.GetString(46);
							Ссылка.УсловияИсчисленияКод2 = Читалка.GetString(47);
							Ссылка.УсловияИсчисленияКод3 = Читалка.GetString(48);
							Ссылка.СтажЛет = Читалка.GetDecimal(49);
							Ссылка.СтажМесяцев = Читалка.GetDecimal(50);
							Ссылка.СтажБезНестраховыхПериодовЛет = Читалка.GetDecimal(51);
							Ссылка.СтажБезНестраховыхПериодовСтажМесяцев = Читалка.GetDecimal(52);
							Ссылка.ПеречислятьПособиеПочтовымПереводом = ((byte[])Читалка.GetValue(53))[0]==1;
							Ссылка.НаименованиеБанка = Читалка.GetString(55);
							Ссылка.БИКБанка = Читалка.GetString(56);
							Ссылка.НомерЛицевогоСчета = Читалка.GetString(57);
							Ссылка.АдресПочтовый = Читалка.GetString(58);
							Ссылка.Фамилия = Читалка.GetString(59);
							Ссылка.Имя = Читалка.GetString(60);
							Ссылка.Отчество = Читалка.GetString(61);
							Ссылка.СерияДокумента = Читалка.GetString(63);
							Ссылка.НомерДокумента = Читалка.GetString(64);
							Ссылка.ДатаВыдачиДокумента = Читалка.GetDateTime(65);
							Ссылка.ДатаДействияДокумента = Читалка.GetDateTime(66);
							Ссылка.ПериодПростояС = Читалка.GetDateTime(67);
							Ссылка.ПериодПростояПо = Читалка.GetDateTime(68);
							Ссылка.РасчетПособияИзТарифнойСтавки = ((byte[])Читалка.GetValue(69))[0]==1;
							Ссылка.ПоставленаНаУчетВРанниеСрокиБеременности = ((byte[])Читалка.GetValue(72))[0]==1;
							Ссылка.ДатаВыдачиБольничного = Читалка.GetDateTime(73);
							Ссылка.КодПричиныНетрудоспособности = Читалка.GetString(74);
							Ссылка.ДополнительныйКодПричиныНетрудоспособности = Читалка.GetString(75);
							Ссылка.ВторойКодПричиныНетрудоспособности = Читалка.GetString(76);
							Ссылка.ДатаИзмененияКодаПричиныНетрудоспособности = Читалка.GetDateTime(77);
							Ссылка.ДатаСправкиБеременной = Читалка.GetDateTime(78);
							Ссылка.ПериодНахожденияВСтационареСРебенкомС = Читалка.GetDateTime(79);
							Ссылка.ПериодНахожденияВСтационареСРебенкомПо = Читалка.GetDateTime(80);
							Ссылка.КодНарушенияРежима = Читалка.GetString(81);
							Ссылка.ДатаРегистрацииДокументовМСЭ = Читалка.GetDateTime(82);
							Ссылка.УстановленаИзмененаГруппаИнвалидности = ((byte[])Читалка.GetValue(83))[0]==1;
							Ссылка.ДатаВыходаНаРаботу = Читалка.GetDateTime(84);
							Ссылка.ЯвляетсяДубликатом = ((byte[])Читалка.GetValue(85))[0]==1;
							Ссылка.АдресЛПУ = Читалка.GetString(86);
							Ссылка.НаименованиеЛПУ = Читалка.GetString(87);
							Ссылка.ОГРН_ЛПУ = Читалка.GetString(88);
							Ссылка.НомерЛисткаПоОсновномуМестуРаботы = Читалка.GetString(89);
							Ссылка.ДатаОкончанияПутевки = Читалка.GetDateTime(90);
							Ссылка.НомерПутевки = Читалка.GetString(91);
							Ссылка.ОГРН_Санатория = Читалка.GetString(92);
							Ссылка.НомерЛисткаПродолжения = Читалка.GetString(93);
							Ссылка.ДатаНаправленияВБюроМСЭ = Читалка.GetDateTime(94);
							Ссылка.ДатаОсвидетельствованияМСЭ = Читалка.GetDateTime(95);
							Ссылка.НовыйСтатусНетрудопособного = Читалка.GetString(96);
							Ссылка.ДатаНовыйСтатусНетрудопособного = Читалка.GetDateTime(97);
							Ссылка.КемВыданДокумент = Читалка.GetString(98);
							Ссылка.ГруппаИнвалидности = Читалка.GetString(99);
							Ссылка.КодПричиныПерерасчета = Читалка.GetString(100);
							Ссылка.НДФЛсПособия = Читалка.GetDecimal(101);
							Ссылка.КоррСчетБанка = Читалка.GetString(102);
							Ссылка.НомерСправкиБеременной = Читалка.GetString(103);
							Ссылка.НаименованиеДокументаНаПроживание = Читалка.GetString(104);
							Ссылка.СерияДокументаНаПроживание = Читалка.GetString(105);
							Ссылка.НомерДокументаНаПроживание = Читалка.GetString(106);
							Ссылка.ДатаВыдачиДокументаНаПроживание = Читалка.GetDateTime(107);
							Ссылка.АдресРегистрации = Читалка.GetString(108);
							Ссылка.Телефон = Читалка.GetString(109);
							Ссылка.ТарифнаяСтавкаОклад = Читалка.GetDecimal(110);
							Ссылка.СреднедневнойЗаработокНаПериодПростоя = Читалка.GetDecimal(111);
							Ссылка.ТелефонСоставителя = Читалка.GetString(112);
							Ссылка.АдресПочтовыйКодПоКЛАДР = Читалка.GetString(113);
							Ссылка.АдресРегистрацииКодПоКЛАДР = Читалка.GetString(114);
							Ссылка.АдресЛПУКодПоКЛАДР = Читалка.GetString(115);
							Ссылка.НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении = ((byte[])Читалка.GetValue(117))[0]==1;
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыВыборка.НачислениеПоБольничномуЛисту Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld6376 [ПериодРегистрации]
					,_Fld6377RRef [Организация]
					,_Fld6378 [Комментарий]
					,_Fld6379RRef [Ответственный]
					,_Fld21604RRef [Сотрудник]
					,_Fld6380RRef [Физлицо]
					,_Fld6382RRef [ПричинаНетрудоспособности]
					,_Fld6383 [ПроцентОплаты]
					,_Fld26875 [ЯвляетсяПродолжениемБолезни]
					,_Fld6384RRef [ПервичныйБольничныйЛист]
					,_Fld26876 [ДатаНачалаСобытия]
					,_Fld6385 [ДатаНачала]
					,_Fld26877 [ДатаНачалаОплаты]
					,_Fld6386 [ДатаОкончания]
					,_Fld18769 [ДатаНарушенияРежима]
					,_Fld21605 [ПособиеОтражаетсяВРеглУчетеТекущимДокументом]
					,_Fld6387RRef [ОграничениеПособия]
					,_Fld6388 [НомерВходящегоДокумента]
					,_Fld6389 [СерияВходящегоДокумента]
					,_Fld6390RRef [ПерерассчитываемыйДокумент]
					,_Fld18765RRef [ПричинаНетрудоспособностиПереходногоПериода]
					,_Fld18766 [ПроцентОплатыПереходногоПериода]
					,_Fld18767RRef [ОграничениеПособияПереходногоПериода]
					,_Fld18768RRef [СлучайУходаЗаБольнымРебенкомПереходногоПериода]
					,_Fld21606RRef [СтратегияОтраженияВУчете]
					,_Fld6381RRef [УдалитьПриказ]
					,_Fld21607 [ПодпадаетПодЕНВД]
					,_Fld18763RRef [СлучайУходаЗаБольнымРебенком]
					,_Fld18764 [ДнейОплаты]
					,_Fld21608RRef [ВидРасчета]
					,_Fld26878 [ДоплачиватьДоПолногоСреднегоЗаработка]
					,_Fld26879RRef [ВидРасчетаДоплаты]
					,_Fld26880 [ПериодРасчетаСреднегоЗаработкаНачало]
					,_Fld26881 [ПериодРасчетаСреднегоЗаработкаОкончание]
					,_Fld26882 [ПроцентОплатыБезЛьгот]
					,_Fld26883RRef [ОграничениеПособияБезЛьгот]
					,_Fld26884 [ПрименятьЛьготыПриНачисленииПособия]
					,_Fld26885RRef [ВыплатаЗаСчетФедеральногоБюджета]
					,_Fld26886RRef [ВидРасчетаЗаСчетРаботодателя]
					,_Fld26887 [УчитыватьЗаработокПредыдущихСтрахователей]
					,_Fld26888 [ДнейОплатыРаботодателем]
					,_Fld26889 [НеВыплачиватьПособие]
					,_Fld26890 [РасчетПоПравилам2010Года]
					,_Fld26891 [УсловияИсчисленияКод1]
					,_Fld26892 [УсловияИсчисленияКод2]
					,_Fld26893 [УсловияИсчисленияКод3]
					,_Fld26894 [СтажЛет]
					,_Fld26895 [СтажМесяцев]
					,_Fld26896 [СтажБезНестраховыхПериодовЛет]
					,_Fld26897 [СтажБезНестраховыхПериодовСтажМесяцев]
					,_Fld26898 [ПеречислятьПособиеПочтовымПереводом]
					,_Fld26899RRef [Банк]
					,_Fld26900 [НаименованиеБанка]
					,_Fld26901 [БИКБанка]
					,_Fld26902 [НомерЛицевогоСчета]
					,_Fld26903 [АдресПочтовый]
					,_Fld26904 [Фамилия]
					,_Fld26905 [Имя]
					,_Fld26906 [Отчество]
					,_Fld26907RRef [ВидДокумента]
					,_Fld26908 [СерияДокумента]
					,_Fld26909 [НомерДокумента]
					,_Fld26910 [ДатаВыдачиДокумента]
					,_Fld26911 [ДатаДействияДокумента]
					,_Fld26912 [ПериодПростояС]
					,_Fld26913 [ПериодПростояПо]
					,_Fld26914 [РасчетПособияИзТарифнойСтавки]
					,_Fld26915RRef [ДолжностьУполномоченного]
					,_Fld26916RRef [Уполномоченный]
					,_Fld26917 [ПоставленаНаУчетВРанниеСрокиБеременности]
					,_Fld26918 [ДатаВыдачиБольничного]
					,_Fld26919 [КодПричиныНетрудоспособности]
					,_Fld26920 [ДополнительныйКодПричиныНетрудоспособности]
					,_Fld26921 [ВторойКодПричиныНетрудоспособности]
					,_Fld26922 [ДатаИзмененияКодаПричиныНетрудоспособности]
					,_Fld26923 [ДатаСправкиБеременной]
					,_Fld26924 [ПериодНахожденияВСтационареСРебенкомС]
					,_Fld26925 [ПериодНахожденияВСтационареСРебенкомПо]
					,_Fld26926 [КодНарушенияРежима]
					,_Fld26927 [ДатаРегистрацииДокументовМСЭ]
					,_Fld26928 [УстановленаИзмененаГруппаИнвалидности]
					,_Fld26929 [ДатаВыходаНаРаботу]
					,_Fld26930 [ЯвляетсяДубликатом]
					,_Fld26931 [АдресЛПУ]
					,_Fld26932 [НаименованиеЛПУ]
					,_Fld26933 [ОГРН_ЛПУ]
					,_Fld26934 [НомерЛисткаПоОсновномуМестуРаботы]
					,_Fld26935 [ДатаОкончанияПутевки]
					,_Fld26936 [НомерПутевки]
					,_Fld26937 [ОГРН_Санатория]
					,_Fld26938 [НомерЛисткаПродолжения]
					,_Fld26939 [ДатаНаправленияВБюроМСЭ]
					,_Fld26940 [ДатаОсвидетельствованияМСЭ]
					,_Fld26941 [НовыйСтатусНетрудопособного]
					,_Fld26942 [ДатаНовыйСтатусНетрудопособного]
					,_Fld26943 [КемВыданДокумент]
					,_Fld26944 [ГруппаИнвалидности]
					,_Fld26945 [КодПричиныПерерасчета]
					,_Fld26946 [НДФЛсПособия]
					,_Fld26947 [КоррСчетБанка]
					,_Fld26948 [НомерСправкиБеременной]
					,_Fld26949 [НаименованиеДокументаНаПроживание]
					,_Fld26950 [СерияДокументаНаПроживание]
					,_Fld26951 [НомерДокументаНаПроживание]
					,_Fld26952 [ДатаВыдачиДокументаНаПроживание]
					,_Fld26953 [АдресРегистрации]
					,_Fld26954 [Телефон]
					,_Fld26955 [ТарифнаяСтавкаОклад]
					,_Fld26956 [СреднедневнойЗаработокНаПериодПростоя]
					,_Fld26957 [ТелефонСоставителя]
					,_Fld26958 [АдресПочтовыйКодПоКЛАДР]
					,_Fld26959 [АдресРегистрацииКодПоКЛАДР]
					,_Fld26960 [АдресЛПУКодПоКЛАДР]
					,_Fld26961RRef [ЛПУ]
					,_Fld26962 [НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении]
					From _Document323(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.НачислениеПоБольничномуЛисту();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.НачислениеПоБольничномуЛисту();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ПериодРегистрации = Читалка.GetDateTime(3);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.ПричинаНетрудоспособности = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(9));
							Ссылка.ПроцентОплаты = Читалка.GetDecimal(10);
							Ссылка.ЯвляетсяПродолжениемБолезни = ((byte[])Читалка.GetValue(11))[0]==1;
							Ссылка.ПервичныйБольничныйЛист = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(12));
							Ссылка.ДатаНачалаСобытия = Читалка.GetDateTime(13);
							Ссылка.ДатаНачала = Читалка.GetDateTime(14);
							Ссылка.ДатаНачалаОплаты = Читалка.GetDateTime(15);
							Ссылка.ДатаОкончания = Читалка.GetDateTime(16);
							Ссылка.ДатаНарушенияРежима = Читалка.GetDateTime(17);
							Ссылка.ПособиеОтражаетсяВРеглУчетеТекущимДокументом = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОграничениеПособия = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(19));
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(20);
							Ссылка.СерияВходящегоДокумента = Читалка.GetString(21);
							Ссылка.ПерерассчитываемыйДокумент = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(22));
							Ссылка.ПричинаНетрудоспособностиПереходногоПериода = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(23));
							Ссылка.ПроцентОплатыПереходногоПериода = Читалка.GetDecimal(24);
							Ссылка.ОграничениеПособияПереходногоПериода = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(25));
							Ссылка.СлучайУходаЗаБольнымРебенкомПереходногоПериода = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(26));
							Ссылка.СтратегияОтраженияВУчете = V82.Перечисления/*Ссылка*/.СтратегииОтраженияВРеглУчетеНачислений.ПустаяСсылка.Получить((byte[])Читалка.GetValue(27));
							Ссылка.УдалитьПриказ = V82.ДокументыСсылка.ПриемНаРаботуВОрганизацию.ВзятьИзКэша((byte[])Читалка.GetValue(28));
							Ссылка.ПодпадаетПодЕНВД = Читалка.GetDecimal(29);
							Ссылка.СлучайУходаЗаБольнымРебенком = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(30));
							Ссылка.ДнейОплаты = Читалка.GetDecimal(31);
							Ссылка.ДоплачиватьДоПолногоСреднегоЗаработка = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.ПериодРасчетаСреднегоЗаработкаНачало = Читалка.GetDateTime(35);
							Ссылка.ПериодРасчетаСреднегоЗаработкаОкончание = Читалка.GetDateTime(36);
							Ссылка.ПроцентОплатыБезЛьгот = Читалка.GetDecimal(37);
							Ссылка.ОграничениеПособияБезЛьгот = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(38));
							Ссылка.ПрименятьЛьготыПриНачисленииПособия = ((byte[])Читалка.GetValue(39))[0]==1;
							Ссылка.ВыплатаЗаСчетФедеральногоБюджета = V82.Перечисления/*Ссылка*/.ВыплатыПособийЗаСчетФедеральногоБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(40));
							Ссылка.УчитыватьЗаработокПредыдущихСтрахователей = ((byte[])Читалка.GetValue(42))[0]==1;
							Ссылка.ДнейОплатыРаботодателем = Читалка.GetDecimal(43);
							Ссылка.НеВыплачиватьПособие = ((byte[])Читалка.GetValue(44))[0]==1;
							Ссылка.РасчетПоПравилам2010Года = ((byte[])Читалка.GetValue(45))[0]==1;
							Ссылка.УсловияИсчисленияКод1 = Читалка.GetString(46);
							Ссылка.УсловияИсчисленияКод2 = Читалка.GetString(47);
							Ссылка.УсловияИсчисленияКод3 = Читалка.GetString(48);
							Ссылка.СтажЛет = Читалка.GetDecimal(49);
							Ссылка.СтажМесяцев = Читалка.GetDecimal(50);
							Ссылка.СтажБезНестраховыхПериодовЛет = Читалка.GetDecimal(51);
							Ссылка.СтажБезНестраховыхПериодовСтажМесяцев = Читалка.GetDecimal(52);
							Ссылка.ПеречислятьПособиеПочтовымПереводом = ((byte[])Читалка.GetValue(53))[0]==1;
							Ссылка.НаименованиеБанка = Читалка.GetString(55);
							Ссылка.БИКБанка = Читалка.GetString(56);
							Ссылка.НомерЛицевогоСчета = Читалка.GetString(57);
							Ссылка.АдресПочтовый = Читалка.GetString(58);
							Ссылка.Фамилия = Читалка.GetString(59);
							Ссылка.Имя = Читалка.GetString(60);
							Ссылка.Отчество = Читалка.GetString(61);
							Ссылка.СерияДокумента = Читалка.GetString(63);
							Ссылка.НомерДокумента = Читалка.GetString(64);
							Ссылка.ДатаВыдачиДокумента = Читалка.GetDateTime(65);
							Ссылка.ДатаДействияДокумента = Читалка.GetDateTime(66);
							Ссылка.ПериодПростояС = Читалка.GetDateTime(67);
							Ссылка.ПериодПростояПо = Читалка.GetDateTime(68);
							Ссылка.РасчетПособияИзТарифнойСтавки = ((byte[])Читалка.GetValue(69))[0]==1;
							Ссылка.ПоставленаНаУчетВРанниеСрокиБеременности = ((byte[])Читалка.GetValue(72))[0]==1;
							Ссылка.ДатаВыдачиБольничного = Читалка.GetDateTime(73);
							Ссылка.КодПричиныНетрудоспособности = Читалка.GetString(74);
							Ссылка.ДополнительныйКодПричиныНетрудоспособности = Читалка.GetString(75);
							Ссылка.ВторойКодПричиныНетрудоспособности = Читалка.GetString(76);
							Ссылка.ДатаИзмененияКодаПричиныНетрудоспособности = Читалка.GetDateTime(77);
							Ссылка.ДатаСправкиБеременной = Читалка.GetDateTime(78);
							Ссылка.ПериодНахожденияВСтационареСРебенкомС = Читалка.GetDateTime(79);
							Ссылка.ПериодНахожденияВСтационареСРебенкомПо = Читалка.GetDateTime(80);
							Ссылка.КодНарушенияРежима = Читалка.GetString(81);
							Ссылка.ДатаРегистрацииДокументовМСЭ = Читалка.GetDateTime(82);
							Ссылка.УстановленаИзмененаГруппаИнвалидности = ((byte[])Читалка.GetValue(83))[0]==1;
							Ссылка.ДатаВыходаНаРаботу = Читалка.GetDateTime(84);
							Ссылка.ЯвляетсяДубликатом = ((byte[])Читалка.GetValue(85))[0]==1;
							Ссылка.АдресЛПУ = Читалка.GetString(86);
							Ссылка.НаименованиеЛПУ = Читалка.GetString(87);
							Ссылка.ОГРН_ЛПУ = Читалка.GetString(88);
							Ссылка.НомерЛисткаПоОсновномуМестуРаботы = Читалка.GetString(89);
							Ссылка.ДатаОкончанияПутевки = Читалка.GetDateTime(90);
							Ссылка.НомерПутевки = Читалка.GetString(91);
							Ссылка.ОГРН_Санатория = Читалка.GetString(92);
							Ссылка.НомерЛисткаПродолжения = Читалка.GetString(93);
							Ссылка.ДатаНаправленияВБюроМСЭ = Читалка.GetDateTime(94);
							Ссылка.ДатаОсвидетельствованияМСЭ = Читалка.GetDateTime(95);
							Ссылка.НовыйСтатусНетрудопособного = Читалка.GetString(96);
							Ссылка.ДатаНовыйСтатусНетрудопособного = Читалка.GetDateTime(97);
							Ссылка.КемВыданДокумент = Читалка.GetString(98);
							Ссылка.ГруппаИнвалидности = Читалка.GetString(99);
							Ссылка.КодПричиныПерерасчета = Читалка.GetString(100);
							Ссылка.НДФЛсПособия = Читалка.GetDecimal(101);
							Ссылка.КоррСчетБанка = Читалка.GetString(102);
							Ссылка.НомерСправкиБеременной = Читалка.GetString(103);
							Ссылка.НаименованиеДокументаНаПроживание = Читалка.GetString(104);
							Ссылка.СерияДокументаНаПроживание = Читалка.GetString(105);
							Ссылка.НомерДокументаНаПроживание = Читалка.GetString(106);
							Ссылка.ДатаВыдачиДокументаНаПроживание = Читалка.GetDateTime(107);
							Ссылка.АдресРегистрации = Читалка.GetString(108);
							Ссылка.Телефон = Читалка.GetString(109);
							Ссылка.ТарифнаяСтавкаОклад = Читалка.GetDecimal(110);
							Ссылка.СреднедневнойЗаработокНаПериодПростоя = Читалка.GetDecimal(111);
							Ссылка.ТелефонСоставителя = Читалка.GetString(112);
							Ссылка.АдресПочтовыйКодПоКЛАДР = Читалка.GetString(113);
							Ссылка.АдресРегистрацииКодПоКЛАДР = Читалка.GetString(114);
							Ссылка.АдресЛПУКодПоКЛАДР = Читалка.GetString(115);
							Ссылка.НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении = ((byte[])Читалка.GetValue(117))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.НачислениеПоБольничномуЛисту ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld6376 [ПериодРегистрации]
					,_Fld6377RRef [Организация]
					,_Fld6378 [Комментарий]
					,_Fld6379RRef [Ответственный]
					,_Fld21604RRef [Сотрудник]
					,_Fld6380RRef [Физлицо]
					,_Fld6382RRef [ПричинаНетрудоспособности]
					,_Fld6383 [ПроцентОплаты]
					,_Fld26875 [ЯвляетсяПродолжениемБолезни]
					,_Fld6384RRef [ПервичныйБольничныйЛист]
					,_Fld26876 [ДатаНачалаСобытия]
					,_Fld6385 [ДатаНачала]
					,_Fld26877 [ДатаНачалаОплаты]
					,_Fld6386 [ДатаОкончания]
					,_Fld18769 [ДатаНарушенияРежима]
					,_Fld21605 [ПособиеОтражаетсяВРеглУчетеТекущимДокументом]
					,_Fld6387RRef [ОграничениеПособия]
					,_Fld6388 [НомерВходящегоДокумента]
					,_Fld6389 [СерияВходящегоДокумента]
					,_Fld6390RRef [ПерерассчитываемыйДокумент]
					,_Fld18765RRef [ПричинаНетрудоспособностиПереходногоПериода]
					,_Fld18766 [ПроцентОплатыПереходногоПериода]
					,_Fld18767RRef [ОграничениеПособияПереходногоПериода]
					,_Fld18768RRef [СлучайУходаЗаБольнымРебенкомПереходногоПериода]
					,_Fld21606RRef [СтратегияОтраженияВУчете]
					,_Fld6381RRef [УдалитьПриказ]
					,_Fld21607 [ПодпадаетПодЕНВД]
					,_Fld18763RRef [СлучайУходаЗаБольнымРебенком]
					,_Fld18764 [ДнейОплаты]
					,_Fld21608RRef [ВидРасчета]
					,_Fld26878 [ДоплачиватьДоПолногоСреднегоЗаработка]
					,_Fld26879RRef [ВидРасчетаДоплаты]
					,_Fld26880 [ПериодРасчетаСреднегоЗаработкаНачало]
					,_Fld26881 [ПериодРасчетаСреднегоЗаработкаОкончание]
					,_Fld26882 [ПроцентОплатыБезЛьгот]
					,_Fld26883RRef [ОграничениеПособияБезЛьгот]
					,_Fld26884 [ПрименятьЛьготыПриНачисленииПособия]
					,_Fld26885RRef [ВыплатаЗаСчетФедеральногоБюджета]
					,_Fld26886RRef [ВидРасчетаЗаСчетРаботодателя]
					,_Fld26887 [УчитыватьЗаработокПредыдущихСтрахователей]
					,_Fld26888 [ДнейОплатыРаботодателем]
					,_Fld26889 [НеВыплачиватьПособие]
					,_Fld26890 [РасчетПоПравилам2010Года]
					,_Fld26891 [УсловияИсчисленияКод1]
					,_Fld26892 [УсловияИсчисленияКод2]
					,_Fld26893 [УсловияИсчисленияКод3]
					,_Fld26894 [СтажЛет]
					,_Fld26895 [СтажМесяцев]
					,_Fld26896 [СтажБезНестраховыхПериодовЛет]
					,_Fld26897 [СтажБезНестраховыхПериодовСтажМесяцев]
					,_Fld26898 [ПеречислятьПособиеПочтовымПереводом]
					,_Fld26899RRef [Банк]
					,_Fld26900 [НаименованиеБанка]
					,_Fld26901 [БИКБанка]
					,_Fld26902 [НомерЛицевогоСчета]
					,_Fld26903 [АдресПочтовый]
					,_Fld26904 [Фамилия]
					,_Fld26905 [Имя]
					,_Fld26906 [Отчество]
					,_Fld26907RRef [ВидДокумента]
					,_Fld26908 [СерияДокумента]
					,_Fld26909 [НомерДокумента]
					,_Fld26910 [ДатаВыдачиДокумента]
					,_Fld26911 [ДатаДействияДокумента]
					,_Fld26912 [ПериодПростояС]
					,_Fld26913 [ПериодПростояПо]
					,_Fld26914 [РасчетПособияИзТарифнойСтавки]
					,_Fld26915RRef [ДолжностьУполномоченного]
					,_Fld26916RRef [Уполномоченный]
					,_Fld26917 [ПоставленаНаУчетВРанниеСрокиБеременности]
					,_Fld26918 [ДатаВыдачиБольничного]
					,_Fld26919 [КодПричиныНетрудоспособности]
					,_Fld26920 [ДополнительныйКодПричиныНетрудоспособности]
					,_Fld26921 [ВторойКодПричиныНетрудоспособности]
					,_Fld26922 [ДатаИзмененияКодаПричиныНетрудоспособности]
					,_Fld26923 [ДатаСправкиБеременной]
					,_Fld26924 [ПериодНахожденияВСтационареСРебенкомС]
					,_Fld26925 [ПериодНахожденияВСтационареСРебенкомПо]
					,_Fld26926 [КодНарушенияРежима]
					,_Fld26927 [ДатаРегистрацииДокументовМСЭ]
					,_Fld26928 [УстановленаИзмененаГруппаИнвалидности]
					,_Fld26929 [ДатаВыходаНаРаботу]
					,_Fld26930 [ЯвляетсяДубликатом]
					,_Fld26931 [АдресЛПУ]
					,_Fld26932 [НаименованиеЛПУ]
					,_Fld26933 [ОГРН_ЛПУ]
					,_Fld26934 [НомерЛисткаПоОсновномуМестуРаботы]
					,_Fld26935 [ДатаОкончанияПутевки]
					,_Fld26936 [НомерПутевки]
					,_Fld26937 [ОГРН_Санатория]
					,_Fld26938 [НомерЛисткаПродолжения]
					,_Fld26939 [ДатаНаправленияВБюроМСЭ]
					,_Fld26940 [ДатаОсвидетельствованияМСЭ]
					,_Fld26941 [НовыйСтатусНетрудопособного]
					,_Fld26942 [ДатаНовыйСтатусНетрудопособного]
					,_Fld26943 [КемВыданДокумент]
					,_Fld26944 [ГруппаИнвалидности]
					,_Fld26945 [КодПричиныПерерасчета]
					,_Fld26946 [НДФЛсПособия]
					,_Fld26947 [КоррСчетБанка]
					,_Fld26948 [НомерСправкиБеременной]
					,_Fld26949 [НаименованиеДокументаНаПроживание]
					,_Fld26950 [СерияДокументаНаПроживание]
					,_Fld26951 [НомерДокументаНаПроживание]
					,_Fld26952 [ДатаВыдачиДокументаНаПроживание]
					,_Fld26953 [АдресРегистрации]
					,_Fld26954 [Телефон]
					,_Fld26955 [ТарифнаяСтавкаОклад]
					,_Fld26956 [СреднедневнойЗаработокНаПериодПростоя]
					,_Fld26957 [ТелефонСоставителя]
					,_Fld26958 [АдресПочтовыйКодПоКЛАДР]
					,_Fld26959 [АдресРегистрацииКодПоКЛАДР]
					,_Fld26960 [АдресЛПУКодПоКЛАДР]
					,_Fld26961RRef [ЛПУ]
					,_Fld26962 [НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении]
					From _Document323(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.НачислениеПоБольничномуЛисту();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.НачислениеПоБольничномуЛисту();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ПериодРегистрации = Читалка.GetDateTime(3);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.ПричинаНетрудоспособности = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(9));
							Ссылка.ПроцентОплаты = Читалка.GetDecimal(10);
							Ссылка.ЯвляетсяПродолжениемБолезни = ((byte[])Читалка.GetValue(11))[0]==1;
							Ссылка.ПервичныйБольничныйЛист = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(12));
							Ссылка.ДатаНачалаСобытия = Читалка.GetDateTime(13);
							Ссылка.ДатаНачала = Читалка.GetDateTime(14);
							Ссылка.ДатаНачалаОплаты = Читалка.GetDateTime(15);
							Ссылка.ДатаОкончания = Читалка.GetDateTime(16);
							Ссылка.ДатаНарушенияРежима = Читалка.GetDateTime(17);
							Ссылка.ПособиеОтражаетсяВРеглУчетеТекущимДокументом = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОграничениеПособия = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(19));
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(20);
							Ссылка.СерияВходящегоДокумента = Читалка.GetString(21);
							Ссылка.ПерерассчитываемыйДокумент = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(22));
							Ссылка.ПричинаНетрудоспособностиПереходногоПериода = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(23));
							Ссылка.ПроцентОплатыПереходногоПериода = Читалка.GetDecimal(24);
							Ссылка.ОграничениеПособияПереходногоПериода = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(25));
							Ссылка.СлучайУходаЗаБольнымРебенкомПереходногоПериода = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(26));
							Ссылка.СтратегияОтраженияВУчете = V82.Перечисления/*Ссылка*/.СтратегииОтраженияВРеглУчетеНачислений.ПустаяСсылка.Получить((byte[])Читалка.GetValue(27));
							Ссылка.УдалитьПриказ = V82.ДокументыСсылка.ПриемНаРаботуВОрганизацию.ВзятьИзКэша((byte[])Читалка.GetValue(28));
							Ссылка.ПодпадаетПодЕНВД = Читалка.GetDecimal(29);
							Ссылка.СлучайУходаЗаБольнымРебенком = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(30));
							Ссылка.ДнейОплаты = Читалка.GetDecimal(31);
							Ссылка.ДоплачиватьДоПолногоСреднегоЗаработка = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.ПериодРасчетаСреднегоЗаработкаНачало = Читалка.GetDateTime(35);
							Ссылка.ПериодРасчетаСреднегоЗаработкаОкончание = Читалка.GetDateTime(36);
							Ссылка.ПроцентОплатыБезЛьгот = Читалка.GetDecimal(37);
							Ссылка.ОграничениеПособияБезЛьгот = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(38));
							Ссылка.ПрименятьЛьготыПриНачисленииПособия = ((byte[])Читалка.GetValue(39))[0]==1;
							Ссылка.ВыплатаЗаСчетФедеральногоБюджета = V82.Перечисления/*Ссылка*/.ВыплатыПособийЗаСчетФедеральногоБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(40));
							Ссылка.УчитыватьЗаработокПредыдущихСтрахователей = ((byte[])Читалка.GetValue(42))[0]==1;
							Ссылка.ДнейОплатыРаботодателем = Читалка.GetDecimal(43);
							Ссылка.НеВыплачиватьПособие = ((byte[])Читалка.GetValue(44))[0]==1;
							Ссылка.РасчетПоПравилам2010Года = ((byte[])Читалка.GetValue(45))[0]==1;
							Ссылка.УсловияИсчисленияКод1 = Читалка.GetString(46);
							Ссылка.УсловияИсчисленияКод2 = Читалка.GetString(47);
							Ссылка.УсловияИсчисленияКод3 = Читалка.GetString(48);
							Ссылка.СтажЛет = Читалка.GetDecimal(49);
							Ссылка.СтажМесяцев = Читалка.GetDecimal(50);
							Ссылка.СтажБезНестраховыхПериодовЛет = Читалка.GetDecimal(51);
							Ссылка.СтажБезНестраховыхПериодовСтажМесяцев = Читалка.GetDecimal(52);
							Ссылка.ПеречислятьПособиеПочтовымПереводом = ((byte[])Читалка.GetValue(53))[0]==1;
							Ссылка.НаименованиеБанка = Читалка.GetString(55);
							Ссылка.БИКБанка = Читалка.GetString(56);
							Ссылка.НомерЛицевогоСчета = Читалка.GetString(57);
							Ссылка.АдресПочтовый = Читалка.GetString(58);
							Ссылка.Фамилия = Читалка.GetString(59);
							Ссылка.Имя = Читалка.GetString(60);
							Ссылка.Отчество = Читалка.GetString(61);
							Ссылка.СерияДокумента = Читалка.GetString(63);
							Ссылка.НомерДокумента = Читалка.GetString(64);
							Ссылка.ДатаВыдачиДокумента = Читалка.GetDateTime(65);
							Ссылка.ДатаДействияДокумента = Читалка.GetDateTime(66);
							Ссылка.ПериодПростояС = Читалка.GetDateTime(67);
							Ссылка.ПериодПростояПо = Читалка.GetDateTime(68);
							Ссылка.РасчетПособияИзТарифнойСтавки = ((byte[])Читалка.GetValue(69))[0]==1;
							Ссылка.ПоставленаНаУчетВРанниеСрокиБеременности = ((byte[])Читалка.GetValue(72))[0]==1;
							Ссылка.ДатаВыдачиБольничного = Читалка.GetDateTime(73);
							Ссылка.КодПричиныНетрудоспособности = Читалка.GetString(74);
							Ссылка.ДополнительныйКодПричиныНетрудоспособности = Читалка.GetString(75);
							Ссылка.ВторойКодПричиныНетрудоспособности = Читалка.GetString(76);
							Ссылка.ДатаИзмененияКодаПричиныНетрудоспособности = Читалка.GetDateTime(77);
							Ссылка.ДатаСправкиБеременной = Читалка.GetDateTime(78);
							Ссылка.ПериодНахожденияВСтационареСРебенкомС = Читалка.GetDateTime(79);
							Ссылка.ПериодНахожденияВСтационареСРебенкомПо = Читалка.GetDateTime(80);
							Ссылка.КодНарушенияРежима = Читалка.GetString(81);
							Ссылка.ДатаРегистрацииДокументовМСЭ = Читалка.GetDateTime(82);
							Ссылка.УстановленаИзмененаГруппаИнвалидности = ((byte[])Читалка.GetValue(83))[0]==1;
							Ссылка.ДатаВыходаНаРаботу = Читалка.GetDateTime(84);
							Ссылка.ЯвляетсяДубликатом = ((byte[])Читалка.GetValue(85))[0]==1;
							Ссылка.АдресЛПУ = Читалка.GetString(86);
							Ссылка.НаименованиеЛПУ = Читалка.GetString(87);
							Ссылка.ОГРН_ЛПУ = Читалка.GetString(88);
							Ссылка.НомерЛисткаПоОсновномуМестуРаботы = Читалка.GetString(89);
							Ссылка.ДатаОкончанияПутевки = Читалка.GetDateTime(90);
							Ссылка.НомерПутевки = Читалка.GetString(91);
							Ссылка.ОГРН_Санатория = Читалка.GetString(92);
							Ссылка.НомерЛисткаПродолжения = Читалка.GetString(93);
							Ссылка.ДатаНаправленияВБюроМСЭ = Читалка.GetDateTime(94);
							Ссылка.ДатаОсвидетельствованияМСЭ = Читалка.GetDateTime(95);
							Ссылка.НовыйСтатусНетрудопособного = Читалка.GetString(96);
							Ссылка.ДатаНовыйСтатусНетрудопособного = Читалка.GetDateTime(97);
							Ссылка.КемВыданДокумент = Читалка.GetString(98);
							Ссылка.ГруппаИнвалидности = Читалка.GetString(99);
							Ссылка.КодПричиныПерерасчета = Читалка.GetString(100);
							Ссылка.НДФЛсПособия = Читалка.GetDecimal(101);
							Ссылка.КоррСчетБанка = Читалка.GetString(102);
							Ссылка.НомерСправкиБеременной = Читалка.GetString(103);
							Ссылка.НаименованиеДокументаНаПроживание = Читалка.GetString(104);
							Ссылка.СерияДокументаНаПроживание = Читалка.GetString(105);
							Ссылка.НомерДокументаНаПроживание = Читалка.GetString(106);
							Ссылка.ДатаВыдачиДокументаНаПроживание = Читалка.GetDateTime(107);
							Ссылка.АдресРегистрации = Читалка.GetString(108);
							Ссылка.Телефон = Читалка.GetString(109);
							Ссылка.ТарифнаяСтавкаОклад = Читалка.GetDecimal(110);
							Ссылка.СреднедневнойЗаработокНаПериодПростоя = Читалка.GetDecimal(111);
							Ссылка.ТелефонСоставителя = Читалка.GetString(112);
							Ссылка.АдресПочтовыйКодПоКЛАДР = Читалка.GetString(113);
							Ссылка.АдресРегистрацииКодПоКЛАДР = Читалка.GetString(114);
							Ссылка.АдресЛПУКодПоКЛАДР = Читалка.GetString(115);
							Ссылка.НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении = ((byte[])Читалка.GetValue(117))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.НачислениеПоБольничномуЛисту ВыбратьПоНомеру(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld6376 [ПериодРегистрации]
					,_Fld6377RRef [Организация]
					,_Fld6378 [Комментарий]
					,_Fld6379RRef [Ответственный]
					,_Fld21604RRef [Сотрудник]
					,_Fld6380RRef [Физлицо]
					,_Fld6382RRef [ПричинаНетрудоспособности]
					,_Fld6383 [ПроцентОплаты]
					,_Fld26875 [ЯвляетсяПродолжениемБолезни]
					,_Fld6384RRef [ПервичныйБольничныйЛист]
					,_Fld26876 [ДатаНачалаСобытия]
					,_Fld6385 [ДатаНачала]
					,_Fld26877 [ДатаНачалаОплаты]
					,_Fld6386 [ДатаОкончания]
					,_Fld18769 [ДатаНарушенияРежима]
					,_Fld21605 [ПособиеОтражаетсяВРеглУчетеТекущимДокументом]
					,_Fld6387RRef [ОграничениеПособия]
					,_Fld6388 [НомерВходящегоДокумента]
					,_Fld6389 [СерияВходящегоДокумента]
					,_Fld6390RRef [ПерерассчитываемыйДокумент]
					,_Fld18765RRef [ПричинаНетрудоспособностиПереходногоПериода]
					,_Fld18766 [ПроцентОплатыПереходногоПериода]
					,_Fld18767RRef [ОграничениеПособияПереходногоПериода]
					,_Fld18768RRef [СлучайУходаЗаБольнымРебенкомПереходногоПериода]
					,_Fld21606RRef [СтратегияОтраженияВУчете]
					,_Fld6381RRef [УдалитьПриказ]
					,_Fld21607 [ПодпадаетПодЕНВД]
					,_Fld18763RRef [СлучайУходаЗаБольнымРебенком]
					,_Fld18764 [ДнейОплаты]
					,_Fld21608RRef [ВидРасчета]
					,_Fld26878 [ДоплачиватьДоПолногоСреднегоЗаработка]
					,_Fld26879RRef [ВидРасчетаДоплаты]
					,_Fld26880 [ПериодРасчетаСреднегоЗаработкаНачало]
					,_Fld26881 [ПериодРасчетаСреднегоЗаработкаОкончание]
					,_Fld26882 [ПроцентОплатыБезЛьгот]
					,_Fld26883RRef [ОграничениеПособияБезЛьгот]
					,_Fld26884 [ПрименятьЛьготыПриНачисленииПособия]
					,_Fld26885RRef [ВыплатаЗаСчетФедеральногоБюджета]
					,_Fld26886RRef [ВидРасчетаЗаСчетРаботодателя]
					,_Fld26887 [УчитыватьЗаработокПредыдущихСтрахователей]
					,_Fld26888 [ДнейОплатыРаботодателем]
					,_Fld26889 [НеВыплачиватьПособие]
					,_Fld26890 [РасчетПоПравилам2010Года]
					,_Fld26891 [УсловияИсчисленияКод1]
					,_Fld26892 [УсловияИсчисленияКод2]
					,_Fld26893 [УсловияИсчисленияКод3]
					,_Fld26894 [СтажЛет]
					,_Fld26895 [СтажМесяцев]
					,_Fld26896 [СтажБезНестраховыхПериодовЛет]
					,_Fld26897 [СтажБезНестраховыхПериодовСтажМесяцев]
					,_Fld26898 [ПеречислятьПособиеПочтовымПереводом]
					,_Fld26899RRef [Банк]
					,_Fld26900 [НаименованиеБанка]
					,_Fld26901 [БИКБанка]
					,_Fld26902 [НомерЛицевогоСчета]
					,_Fld26903 [АдресПочтовый]
					,_Fld26904 [Фамилия]
					,_Fld26905 [Имя]
					,_Fld26906 [Отчество]
					,_Fld26907RRef [ВидДокумента]
					,_Fld26908 [СерияДокумента]
					,_Fld26909 [НомерДокумента]
					,_Fld26910 [ДатаВыдачиДокумента]
					,_Fld26911 [ДатаДействияДокумента]
					,_Fld26912 [ПериодПростояС]
					,_Fld26913 [ПериодПростояПо]
					,_Fld26914 [РасчетПособияИзТарифнойСтавки]
					,_Fld26915RRef [ДолжностьУполномоченного]
					,_Fld26916RRef [Уполномоченный]
					,_Fld26917 [ПоставленаНаУчетВРанниеСрокиБеременности]
					,_Fld26918 [ДатаВыдачиБольничного]
					,_Fld26919 [КодПричиныНетрудоспособности]
					,_Fld26920 [ДополнительныйКодПричиныНетрудоспособности]
					,_Fld26921 [ВторойКодПричиныНетрудоспособности]
					,_Fld26922 [ДатаИзмененияКодаПричиныНетрудоспособности]
					,_Fld26923 [ДатаСправкиБеременной]
					,_Fld26924 [ПериодНахожденияВСтационареСРебенкомС]
					,_Fld26925 [ПериодНахожденияВСтационареСРебенкомПо]
					,_Fld26926 [КодНарушенияРежима]
					,_Fld26927 [ДатаРегистрацииДокументовМСЭ]
					,_Fld26928 [УстановленаИзмененаГруппаИнвалидности]
					,_Fld26929 [ДатаВыходаНаРаботу]
					,_Fld26930 [ЯвляетсяДубликатом]
					,_Fld26931 [АдресЛПУ]
					,_Fld26932 [НаименованиеЛПУ]
					,_Fld26933 [ОГРН_ЛПУ]
					,_Fld26934 [НомерЛисткаПоОсновномуМестуРаботы]
					,_Fld26935 [ДатаОкончанияПутевки]
					,_Fld26936 [НомерПутевки]
					,_Fld26937 [ОГРН_Санатория]
					,_Fld26938 [НомерЛисткаПродолжения]
					,_Fld26939 [ДатаНаправленияВБюроМСЭ]
					,_Fld26940 [ДатаОсвидетельствованияМСЭ]
					,_Fld26941 [НовыйСтатусНетрудопособного]
					,_Fld26942 [ДатаНовыйСтатусНетрудопособного]
					,_Fld26943 [КемВыданДокумент]
					,_Fld26944 [ГруппаИнвалидности]
					,_Fld26945 [КодПричиныПерерасчета]
					,_Fld26946 [НДФЛсПособия]
					,_Fld26947 [КоррСчетБанка]
					,_Fld26948 [НомерСправкиБеременной]
					,_Fld26949 [НаименованиеДокументаНаПроживание]
					,_Fld26950 [СерияДокументаНаПроживание]
					,_Fld26951 [НомерДокументаНаПроживание]
					,_Fld26952 [ДатаВыдачиДокументаНаПроживание]
					,_Fld26953 [АдресРегистрации]
					,_Fld26954 [Телефон]
					,_Fld26955 [ТарифнаяСтавкаОклад]
					,_Fld26956 [СреднедневнойЗаработокНаПериодПростоя]
					,_Fld26957 [ТелефонСоставителя]
					,_Fld26958 [АдресПочтовыйКодПоКЛАДР]
					,_Fld26959 [АдресРегистрацииКодПоКЛАДР]
					,_Fld26960 [АдресЛПУКодПоКЛАДР]
					,_Fld26961RRef [ЛПУ]
					,_Fld26962 [НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении]
					From _Document323(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.НачислениеПоБольничномуЛисту();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.НачислениеПоБольничномуЛисту();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ПериодРегистрации = Читалка.GetDateTime(3);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.ПричинаНетрудоспособности = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(9));
							Ссылка.ПроцентОплаты = Читалка.GetDecimal(10);
							Ссылка.ЯвляетсяПродолжениемБолезни = ((byte[])Читалка.GetValue(11))[0]==1;
							Ссылка.ПервичныйБольничныйЛист = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(12));
							Ссылка.ДатаНачалаСобытия = Читалка.GetDateTime(13);
							Ссылка.ДатаНачала = Читалка.GetDateTime(14);
							Ссылка.ДатаНачалаОплаты = Читалка.GetDateTime(15);
							Ссылка.ДатаОкончания = Читалка.GetDateTime(16);
							Ссылка.ДатаНарушенияРежима = Читалка.GetDateTime(17);
							Ссылка.ПособиеОтражаетсяВРеглУчетеТекущимДокументом = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОграничениеПособия = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(19));
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(20);
							Ссылка.СерияВходящегоДокумента = Читалка.GetString(21);
							Ссылка.ПерерассчитываемыйДокумент = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(22));
							Ссылка.ПричинаНетрудоспособностиПереходногоПериода = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(23));
							Ссылка.ПроцентОплатыПереходногоПериода = Читалка.GetDecimal(24);
							Ссылка.ОграничениеПособияПереходногоПериода = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(25));
							Ссылка.СлучайУходаЗаБольнымРебенкомПереходногоПериода = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(26));
							Ссылка.СтратегияОтраженияВУчете = V82.Перечисления/*Ссылка*/.СтратегииОтраженияВРеглУчетеНачислений.ПустаяСсылка.Получить((byte[])Читалка.GetValue(27));
							Ссылка.УдалитьПриказ = V82.ДокументыСсылка.ПриемНаРаботуВОрганизацию.ВзятьИзКэша((byte[])Читалка.GetValue(28));
							Ссылка.ПодпадаетПодЕНВД = Читалка.GetDecimal(29);
							Ссылка.СлучайУходаЗаБольнымРебенком = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(30));
							Ссылка.ДнейОплаты = Читалка.GetDecimal(31);
							Ссылка.ДоплачиватьДоПолногоСреднегоЗаработка = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.ПериодРасчетаСреднегоЗаработкаНачало = Читалка.GetDateTime(35);
							Ссылка.ПериодРасчетаСреднегоЗаработкаОкончание = Читалка.GetDateTime(36);
							Ссылка.ПроцентОплатыБезЛьгот = Читалка.GetDecimal(37);
							Ссылка.ОграничениеПособияБезЛьгот = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(38));
							Ссылка.ПрименятьЛьготыПриНачисленииПособия = ((byte[])Читалка.GetValue(39))[0]==1;
							Ссылка.ВыплатаЗаСчетФедеральногоБюджета = V82.Перечисления/*Ссылка*/.ВыплатыПособийЗаСчетФедеральногоБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(40));
							Ссылка.УчитыватьЗаработокПредыдущихСтрахователей = ((byte[])Читалка.GetValue(42))[0]==1;
							Ссылка.ДнейОплатыРаботодателем = Читалка.GetDecimal(43);
							Ссылка.НеВыплачиватьПособие = ((byte[])Читалка.GetValue(44))[0]==1;
							Ссылка.РасчетПоПравилам2010Года = ((byte[])Читалка.GetValue(45))[0]==1;
							Ссылка.УсловияИсчисленияКод1 = Читалка.GetString(46);
							Ссылка.УсловияИсчисленияКод2 = Читалка.GetString(47);
							Ссылка.УсловияИсчисленияКод3 = Читалка.GetString(48);
							Ссылка.СтажЛет = Читалка.GetDecimal(49);
							Ссылка.СтажМесяцев = Читалка.GetDecimal(50);
							Ссылка.СтажБезНестраховыхПериодовЛет = Читалка.GetDecimal(51);
							Ссылка.СтажБезНестраховыхПериодовСтажМесяцев = Читалка.GetDecimal(52);
							Ссылка.ПеречислятьПособиеПочтовымПереводом = ((byte[])Читалка.GetValue(53))[0]==1;
							Ссылка.НаименованиеБанка = Читалка.GetString(55);
							Ссылка.БИКБанка = Читалка.GetString(56);
							Ссылка.НомерЛицевогоСчета = Читалка.GetString(57);
							Ссылка.АдресПочтовый = Читалка.GetString(58);
							Ссылка.Фамилия = Читалка.GetString(59);
							Ссылка.Имя = Читалка.GetString(60);
							Ссылка.Отчество = Читалка.GetString(61);
							Ссылка.СерияДокумента = Читалка.GetString(63);
							Ссылка.НомерДокумента = Читалка.GetString(64);
							Ссылка.ДатаВыдачиДокумента = Читалка.GetDateTime(65);
							Ссылка.ДатаДействияДокумента = Читалка.GetDateTime(66);
							Ссылка.ПериодПростояС = Читалка.GetDateTime(67);
							Ссылка.ПериодПростояПо = Читалка.GetDateTime(68);
							Ссылка.РасчетПособияИзТарифнойСтавки = ((byte[])Читалка.GetValue(69))[0]==1;
							Ссылка.ПоставленаНаУчетВРанниеСрокиБеременности = ((byte[])Читалка.GetValue(72))[0]==1;
							Ссылка.ДатаВыдачиБольничного = Читалка.GetDateTime(73);
							Ссылка.КодПричиныНетрудоспособности = Читалка.GetString(74);
							Ссылка.ДополнительныйКодПричиныНетрудоспособности = Читалка.GetString(75);
							Ссылка.ВторойКодПричиныНетрудоспособности = Читалка.GetString(76);
							Ссылка.ДатаИзмененияКодаПричиныНетрудоспособности = Читалка.GetDateTime(77);
							Ссылка.ДатаСправкиБеременной = Читалка.GetDateTime(78);
							Ссылка.ПериодНахожденияВСтационареСРебенкомС = Читалка.GetDateTime(79);
							Ссылка.ПериодНахожденияВСтационареСРебенкомПо = Читалка.GetDateTime(80);
							Ссылка.КодНарушенияРежима = Читалка.GetString(81);
							Ссылка.ДатаРегистрацииДокументовМСЭ = Читалка.GetDateTime(82);
							Ссылка.УстановленаИзмененаГруппаИнвалидности = ((byte[])Читалка.GetValue(83))[0]==1;
							Ссылка.ДатаВыходаНаРаботу = Читалка.GetDateTime(84);
							Ссылка.ЯвляетсяДубликатом = ((byte[])Читалка.GetValue(85))[0]==1;
							Ссылка.АдресЛПУ = Читалка.GetString(86);
							Ссылка.НаименованиеЛПУ = Читалка.GetString(87);
							Ссылка.ОГРН_ЛПУ = Читалка.GetString(88);
							Ссылка.НомерЛисткаПоОсновномуМестуРаботы = Читалка.GetString(89);
							Ссылка.ДатаОкончанияПутевки = Читалка.GetDateTime(90);
							Ссылка.НомерПутевки = Читалка.GetString(91);
							Ссылка.ОГРН_Санатория = Читалка.GetString(92);
							Ссылка.НомерЛисткаПродолжения = Читалка.GetString(93);
							Ссылка.ДатаНаправленияВБюроМСЭ = Читалка.GetDateTime(94);
							Ссылка.ДатаОсвидетельствованияМСЭ = Читалка.GetDateTime(95);
							Ссылка.НовыйСтатусНетрудопособного = Читалка.GetString(96);
							Ссылка.ДатаНовыйСтатусНетрудопособного = Читалка.GetDateTime(97);
							Ссылка.КемВыданДокумент = Читалка.GetString(98);
							Ссылка.ГруппаИнвалидности = Читалка.GetString(99);
							Ссылка.КодПричиныПерерасчета = Читалка.GetString(100);
							Ссылка.НДФЛсПособия = Читалка.GetDecimal(101);
							Ссылка.КоррСчетБанка = Читалка.GetString(102);
							Ссылка.НомерСправкиБеременной = Читалка.GetString(103);
							Ссылка.НаименованиеДокументаНаПроживание = Читалка.GetString(104);
							Ссылка.СерияДокументаНаПроживание = Читалка.GetString(105);
							Ссылка.НомерДокументаНаПроживание = Читалка.GetString(106);
							Ссылка.ДатаВыдачиДокументаНаПроживание = Читалка.GetDateTime(107);
							Ссылка.АдресРегистрации = Читалка.GetString(108);
							Ссылка.Телефон = Читалка.GetString(109);
							Ссылка.ТарифнаяСтавкаОклад = Читалка.GetDecimal(110);
							Ссылка.СреднедневнойЗаработокНаПериодПростоя = Читалка.GetDecimal(111);
							Ссылка.ТелефонСоставителя = Читалка.GetString(112);
							Ссылка.АдресПочтовыйКодПоКЛАДР = Читалка.GetString(113);
							Ссылка.АдресРегистрацииКодПоКЛАДР = Читалка.GetString(114);
							Ссылка.АдресЛПУКодПоКЛАДР = Читалка.GetString(115);
							Ссылка.НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении = ((byte[])Читалка.GetValue(117))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.НачислениеПоБольничномуЛисту СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld6376 [ПериодРегистрации]
					,_Fld6377RRef [Организация]
					,_Fld6378 [Комментарий]
					,_Fld6379RRef [Ответственный]
					,_Fld21604RRef [Сотрудник]
					,_Fld6380RRef [Физлицо]
					,_Fld6382RRef [ПричинаНетрудоспособности]
					,_Fld6383 [ПроцентОплаты]
					,_Fld26875 [ЯвляетсяПродолжениемБолезни]
					,_Fld6384RRef [ПервичныйБольничныйЛист]
					,_Fld26876 [ДатаНачалаСобытия]
					,_Fld6385 [ДатаНачала]
					,_Fld26877 [ДатаНачалаОплаты]
					,_Fld6386 [ДатаОкончания]
					,_Fld18769 [ДатаНарушенияРежима]
					,_Fld21605 [ПособиеОтражаетсяВРеглУчетеТекущимДокументом]
					,_Fld6387RRef [ОграничениеПособия]
					,_Fld6388 [НомерВходящегоДокумента]
					,_Fld6389 [СерияВходящегоДокумента]
					,_Fld6390RRef [ПерерассчитываемыйДокумент]
					,_Fld18765RRef [ПричинаНетрудоспособностиПереходногоПериода]
					,_Fld18766 [ПроцентОплатыПереходногоПериода]
					,_Fld18767RRef [ОграничениеПособияПереходногоПериода]
					,_Fld18768RRef [СлучайУходаЗаБольнымРебенкомПереходногоПериода]
					,_Fld21606RRef [СтратегияОтраженияВУчете]
					,_Fld6381RRef [УдалитьПриказ]
					,_Fld21607 [ПодпадаетПодЕНВД]
					,_Fld18763RRef [СлучайУходаЗаБольнымРебенком]
					,_Fld18764 [ДнейОплаты]
					,_Fld21608RRef [ВидРасчета]
					,_Fld26878 [ДоплачиватьДоПолногоСреднегоЗаработка]
					,_Fld26879RRef [ВидРасчетаДоплаты]
					,_Fld26880 [ПериодРасчетаСреднегоЗаработкаНачало]
					,_Fld26881 [ПериодРасчетаСреднегоЗаработкаОкончание]
					,_Fld26882 [ПроцентОплатыБезЛьгот]
					,_Fld26883RRef [ОграничениеПособияБезЛьгот]
					,_Fld26884 [ПрименятьЛьготыПриНачисленииПособия]
					,_Fld26885RRef [ВыплатаЗаСчетФедеральногоБюджета]
					,_Fld26886RRef [ВидРасчетаЗаСчетРаботодателя]
					,_Fld26887 [УчитыватьЗаработокПредыдущихСтрахователей]
					,_Fld26888 [ДнейОплатыРаботодателем]
					,_Fld26889 [НеВыплачиватьПособие]
					,_Fld26890 [РасчетПоПравилам2010Года]
					,_Fld26891 [УсловияИсчисленияКод1]
					,_Fld26892 [УсловияИсчисленияКод2]
					,_Fld26893 [УсловияИсчисленияКод3]
					,_Fld26894 [СтажЛет]
					,_Fld26895 [СтажМесяцев]
					,_Fld26896 [СтажБезНестраховыхПериодовЛет]
					,_Fld26897 [СтажБезНестраховыхПериодовСтажМесяцев]
					,_Fld26898 [ПеречислятьПособиеПочтовымПереводом]
					,_Fld26899RRef [Банк]
					,_Fld26900 [НаименованиеБанка]
					,_Fld26901 [БИКБанка]
					,_Fld26902 [НомерЛицевогоСчета]
					,_Fld26903 [АдресПочтовый]
					,_Fld26904 [Фамилия]
					,_Fld26905 [Имя]
					,_Fld26906 [Отчество]
					,_Fld26907RRef [ВидДокумента]
					,_Fld26908 [СерияДокумента]
					,_Fld26909 [НомерДокумента]
					,_Fld26910 [ДатаВыдачиДокумента]
					,_Fld26911 [ДатаДействияДокумента]
					,_Fld26912 [ПериодПростояС]
					,_Fld26913 [ПериодПростояПо]
					,_Fld26914 [РасчетПособияИзТарифнойСтавки]
					,_Fld26915RRef [ДолжностьУполномоченного]
					,_Fld26916RRef [Уполномоченный]
					,_Fld26917 [ПоставленаНаУчетВРанниеСрокиБеременности]
					,_Fld26918 [ДатаВыдачиБольничного]
					,_Fld26919 [КодПричиныНетрудоспособности]
					,_Fld26920 [ДополнительныйКодПричиныНетрудоспособности]
					,_Fld26921 [ВторойКодПричиныНетрудоспособности]
					,_Fld26922 [ДатаИзмененияКодаПричиныНетрудоспособности]
					,_Fld26923 [ДатаСправкиБеременной]
					,_Fld26924 [ПериодНахожденияВСтационареСРебенкомС]
					,_Fld26925 [ПериодНахожденияВСтационареСРебенкомПо]
					,_Fld26926 [КодНарушенияРежима]
					,_Fld26927 [ДатаРегистрацииДокументовМСЭ]
					,_Fld26928 [УстановленаИзмененаГруппаИнвалидности]
					,_Fld26929 [ДатаВыходаНаРаботу]
					,_Fld26930 [ЯвляетсяДубликатом]
					,_Fld26931 [АдресЛПУ]
					,_Fld26932 [НаименованиеЛПУ]
					,_Fld26933 [ОГРН_ЛПУ]
					,_Fld26934 [НомерЛисткаПоОсновномуМестуРаботы]
					,_Fld26935 [ДатаОкончанияПутевки]
					,_Fld26936 [НомерПутевки]
					,_Fld26937 [ОГРН_Санатория]
					,_Fld26938 [НомерЛисткаПродолжения]
					,_Fld26939 [ДатаНаправленияВБюроМСЭ]
					,_Fld26940 [ДатаОсвидетельствованияМСЭ]
					,_Fld26941 [НовыйСтатусНетрудопособного]
					,_Fld26942 [ДатаНовыйСтатусНетрудопособного]
					,_Fld26943 [КемВыданДокумент]
					,_Fld26944 [ГруппаИнвалидности]
					,_Fld26945 [КодПричиныПерерасчета]
					,_Fld26946 [НДФЛсПособия]
					,_Fld26947 [КоррСчетБанка]
					,_Fld26948 [НомерСправкиБеременной]
					,_Fld26949 [НаименованиеДокументаНаПроживание]
					,_Fld26950 [СерияДокументаНаПроживание]
					,_Fld26951 [НомерДокументаНаПроживание]
					,_Fld26952 [ДатаВыдачиДокументаНаПроживание]
					,_Fld26953 [АдресРегистрации]
					,_Fld26954 [Телефон]
					,_Fld26955 [ТарифнаяСтавкаОклад]
					,_Fld26956 [СреднедневнойЗаработокНаПериодПростоя]
					,_Fld26957 [ТелефонСоставителя]
					,_Fld26958 [АдресПочтовыйКодПоКЛАДР]
					,_Fld26959 [АдресРегистрацииКодПоКЛАДР]
					,_Fld26960 [АдресЛПУКодПоКЛАДР]
					,_Fld26961RRef [ЛПУ]
					,_Fld26962 [НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении]
					From _Document323(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.НачислениеПоБольничномуЛисту();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.НачислениеПоБольничномуЛисту();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ПериодРегистрации = Читалка.GetDateTime(3);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.ПричинаНетрудоспособности = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(9));
							Ссылка.ПроцентОплаты = Читалка.GetDecimal(10);
							Ссылка.ЯвляетсяПродолжениемБолезни = ((byte[])Читалка.GetValue(11))[0]==1;
							Ссылка.ПервичныйБольничныйЛист = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(12));
							Ссылка.ДатаНачалаСобытия = Читалка.GetDateTime(13);
							Ссылка.ДатаНачала = Читалка.GetDateTime(14);
							Ссылка.ДатаНачалаОплаты = Читалка.GetDateTime(15);
							Ссылка.ДатаОкончания = Читалка.GetDateTime(16);
							Ссылка.ДатаНарушенияРежима = Читалка.GetDateTime(17);
							Ссылка.ПособиеОтражаетсяВРеглУчетеТекущимДокументом = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОграничениеПособия = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(19));
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(20);
							Ссылка.СерияВходящегоДокумента = Читалка.GetString(21);
							Ссылка.ПерерассчитываемыйДокумент = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(22));
							Ссылка.ПричинаНетрудоспособностиПереходногоПериода = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(23));
							Ссылка.ПроцентОплатыПереходногоПериода = Читалка.GetDecimal(24);
							Ссылка.ОграничениеПособияПереходногоПериода = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(25));
							Ссылка.СлучайУходаЗаБольнымРебенкомПереходногоПериода = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(26));
							Ссылка.СтратегияОтраженияВУчете = V82.Перечисления/*Ссылка*/.СтратегииОтраженияВРеглУчетеНачислений.ПустаяСсылка.Получить((byte[])Читалка.GetValue(27));
							Ссылка.УдалитьПриказ = V82.ДокументыСсылка.ПриемНаРаботуВОрганизацию.ВзятьИзКэша((byte[])Читалка.GetValue(28));
							Ссылка.ПодпадаетПодЕНВД = Читалка.GetDecimal(29);
							Ссылка.СлучайУходаЗаБольнымРебенком = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(30));
							Ссылка.ДнейОплаты = Читалка.GetDecimal(31);
							Ссылка.ДоплачиватьДоПолногоСреднегоЗаработка = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.ПериодРасчетаСреднегоЗаработкаНачало = Читалка.GetDateTime(35);
							Ссылка.ПериодРасчетаСреднегоЗаработкаОкончание = Читалка.GetDateTime(36);
							Ссылка.ПроцентОплатыБезЛьгот = Читалка.GetDecimal(37);
							Ссылка.ОграничениеПособияБезЛьгот = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(38));
							Ссылка.ПрименятьЛьготыПриНачисленииПособия = ((byte[])Читалка.GetValue(39))[0]==1;
							Ссылка.ВыплатаЗаСчетФедеральногоБюджета = V82.Перечисления/*Ссылка*/.ВыплатыПособийЗаСчетФедеральногоБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(40));
							Ссылка.УчитыватьЗаработокПредыдущихСтрахователей = ((byte[])Читалка.GetValue(42))[0]==1;
							Ссылка.ДнейОплатыРаботодателем = Читалка.GetDecimal(43);
							Ссылка.НеВыплачиватьПособие = ((byte[])Читалка.GetValue(44))[0]==1;
							Ссылка.РасчетПоПравилам2010Года = ((byte[])Читалка.GetValue(45))[0]==1;
							Ссылка.УсловияИсчисленияКод1 = Читалка.GetString(46);
							Ссылка.УсловияИсчисленияКод2 = Читалка.GetString(47);
							Ссылка.УсловияИсчисленияКод3 = Читалка.GetString(48);
							Ссылка.СтажЛет = Читалка.GetDecimal(49);
							Ссылка.СтажМесяцев = Читалка.GetDecimal(50);
							Ссылка.СтажБезНестраховыхПериодовЛет = Читалка.GetDecimal(51);
							Ссылка.СтажБезНестраховыхПериодовСтажМесяцев = Читалка.GetDecimal(52);
							Ссылка.ПеречислятьПособиеПочтовымПереводом = ((byte[])Читалка.GetValue(53))[0]==1;
							Ссылка.НаименованиеБанка = Читалка.GetString(55);
							Ссылка.БИКБанка = Читалка.GetString(56);
							Ссылка.НомерЛицевогоСчета = Читалка.GetString(57);
							Ссылка.АдресПочтовый = Читалка.GetString(58);
							Ссылка.Фамилия = Читалка.GetString(59);
							Ссылка.Имя = Читалка.GetString(60);
							Ссылка.Отчество = Читалка.GetString(61);
							Ссылка.СерияДокумента = Читалка.GetString(63);
							Ссылка.НомерДокумента = Читалка.GetString(64);
							Ссылка.ДатаВыдачиДокумента = Читалка.GetDateTime(65);
							Ссылка.ДатаДействияДокумента = Читалка.GetDateTime(66);
							Ссылка.ПериодПростояС = Читалка.GetDateTime(67);
							Ссылка.ПериодПростояПо = Читалка.GetDateTime(68);
							Ссылка.РасчетПособияИзТарифнойСтавки = ((byte[])Читалка.GetValue(69))[0]==1;
							Ссылка.ПоставленаНаУчетВРанниеСрокиБеременности = ((byte[])Читалка.GetValue(72))[0]==1;
							Ссылка.ДатаВыдачиБольничного = Читалка.GetDateTime(73);
							Ссылка.КодПричиныНетрудоспособности = Читалка.GetString(74);
							Ссылка.ДополнительныйКодПричиныНетрудоспособности = Читалка.GetString(75);
							Ссылка.ВторойКодПричиныНетрудоспособности = Читалка.GetString(76);
							Ссылка.ДатаИзмененияКодаПричиныНетрудоспособности = Читалка.GetDateTime(77);
							Ссылка.ДатаСправкиБеременной = Читалка.GetDateTime(78);
							Ссылка.ПериодНахожденияВСтационареСРебенкомС = Читалка.GetDateTime(79);
							Ссылка.ПериодНахожденияВСтационареСРебенкомПо = Читалка.GetDateTime(80);
							Ссылка.КодНарушенияРежима = Читалка.GetString(81);
							Ссылка.ДатаРегистрацииДокументовМСЭ = Читалка.GetDateTime(82);
							Ссылка.УстановленаИзмененаГруппаИнвалидности = ((byte[])Читалка.GetValue(83))[0]==1;
							Ссылка.ДатаВыходаНаРаботу = Читалка.GetDateTime(84);
							Ссылка.ЯвляетсяДубликатом = ((byte[])Читалка.GetValue(85))[0]==1;
							Ссылка.АдресЛПУ = Читалка.GetString(86);
							Ссылка.НаименованиеЛПУ = Читалка.GetString(87);
							Ссылка.ОГРН_ЛПУ = Читалка.GetString(88);
							Ссылка.НомерЛисткаПоОсновномуМестуРаботы = Читалка.GetString(89);
							Ссылка.ДатаОкончанияПутевки = Читалка.GetDateTime(90);
							Ссылка.НомерПутевки = Читалка.GetString(91);
							Ссылка.ОГРН_Санатория = Читалка.GetString(92);
							Ссылка.НомерЛисткаПродолжения = Читалка.GetString(93);
							Ссылка.ДатаНаправленияВБюроМСЭ = Читалка.GetDateTime(94);
							Ссылка.ДатаОсвидетельствованияМСЭ = Читалка.GetDateTime(95);
							Ссылка.НовыйСтатусНетрудопособного = Читалка.GetString(96);
							Ссылка.ДатаНовыйСтатусНетрудопособного = Читалка.GetDateTime(97);
							Ссылка.КемВыданДокумент = Читалка.GetString(98);
							Ссылка.ГруппаИнвалидности = Читалка.GetString(99);
							Ссылка.КодПричиныПерерасчета = Читалка.GetString(100);
							Ссылка.НДФЛсПособия = Читалка.GetDecimal(101);
							Ссылка.КоррСчетБанка = Читалка.GetString(102);
							Ссылка.НомерСправкиБеременной = Читалка.GetString(103);
							Ссылка.НаименованиеДокументаНаПроживание = Читалка.GetString(104);
							Ссылка.СерияДокументаНаПроживание = Читалка.GetString(105);
							Ссылка.НомерДокументаНаПроживание = Читалка.GetString(106);
							Ссылка.ДатаВыдачиДокументаНаПроживание = Читалка.GetDateTime(107);
							Ссылка.АдресРегистрации = Читалка.GetString(108);
							Ссылка.Телефон = Читалка.GetString(109);
							Ссылка.ТарифнаяСтавкаОклад = Читалка.GetDecimal(110);
							Ссылка.СреднедневнойЗаработокНаПериодПростоя = Читалка.GetDecimal(111);
							Ссылка.ТелефонСоставителя = Читалка.GetString(112);
							Ссылка.АдресПочтовыйКодПоКЛАДР = Читалка.GetString(113);
							Ссылка.АдресРегистрацииКодПоКЛАДР = Читалка.GetString(114);
							Ссылка.АдресЛПУКодПоКЛАДР = Читалка.GetString(115);
							Ссылка.НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении = ((byte[])Читалка.GetValue(117))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.НачислениеПоБольничномуЛисту СтраницаПоНомеру(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld6376 [ПериодРегистрации]
					,_Fld6377RRef [Организация]
					,_Fld6378 [Комментарий]
					,_Fld6379RRef [Ответственный]
					,_Fld21604RRef [Сотрудник]
					,_Fld6380RRef [Физлицо]
					,_Fld6382RRef [ПричинаНетрудоспособности]
					,_Fld6383 [ПроцентОплаты]
					,_Fld26875 [ЯвляетсяПродолжениемБолезни]
					,_Fld6384RRef [ПервичныйБольничныйЛист]
					,_Fld26876 [ДатаНачалаСобытия]
					,_Fld6385 [ДатаНачала]
					,_Fld26877 [ДатаНачалаОплаты]
					,_Fld6386 [ДатаОкончания]
					,_Fld18769 [ДатаНарушенияРежима]
					,_Fld21605 [ПособиеОтражаетсяВРеглУчетеТекущимДокументом]
					,_Fld6387RRef [ОграничениеПособия]
					,_Fld6388 [НомерВходящегоДокумента]
					,_Fld6389 [СерияВходящегоДокумента]
					,_Fld6390RRef [ПерерассчитываемыйДокумент]
					,_Fld18765RRef [ПричинаНетрудоспособностиПереходногоПериода]
					,_Fld18766 [ПроцентОплатыПереходногоПериода]
					,_Fld18767RRef [ОграничениеПособияПереходногоПериода]
					,_Fld18768RRef [СлучайУходаЗаБольнымРебенкомПереходногоПериода]
					,_Fld21606RRef [СтратегияОтраженияВУчете]
					,_Fld6381RRef [УдалитьПриказ]
					,_Fld21607 [ПодпадаетПодЕНВД]
					,_Fld18763RRef [СлучайУходаЗаБольнымРебенком]
					,_Fld18764 [ДнейОплаты]
					,_Fld21608RRef [ВидРасчета]
					,_Fld26878 [ДоплачиватьДоПолногоСреднегоЗаработка]
					,_Fld26879RRef [ВидРасчетаДоплаты]
					,_Fld26880 [ПериодРасчетаСреднегоЗаработкаНачало]
					,_Fld26881 [ПериодРасчетаСреднегоЗаработкаОкончание]
					,_Fld26882 [ПроцентОплатыБезЛьгот]
					,_Fld26883RRef [ОграничениеПособияБезЛьгот]
					,_Fld26884 [ПрименятьЛьготыПриНачисленииПособия]
					,_Fld26885RRef [ВыплатаЗаСчетФедеральногоБюджета]
					,_Fld26886RRef [ВидРасчетаЗаСчетРаботодателя]
					,_Fld26887 [УчитыватьЗаработокПредыдущихСтрахователей]
					,_Fld26888 [ДнейОплатыРаботодателем]
					,_Fld26889 [НеВыплачиватьПособие]
					,_Fld26890 [РасчетПоПравилам2010Года]
					,_Fld26891 [УсловияИсчисленияКод1]
					,_Fld26892 [УсловияИсчисленияКод2]
					,_Fld26893 [УсловияИсчисленияКод3]
					,_Fld26894 [СтажЛет]
					,_Fld26895 [СтажМесяцев]
					,_Fld26896 [СтажБезНестраховыхПериодовЛет]
					,_Fld26897 [СтажБезНестраховыхПериодовСтажМесяцев]
					,_Fld26898 [ПеречислятьПособиеПочтовымПереводом]
					,_Fld26899RRef [Банк]
					,_Fld26900 [НаименованиеБанка]
					,_Fld26901 [БИКБанка]
					,_Fld26902 [НомерЛицевогоСчета]
					,_Fld26903 [АдресПочтовый]
					,_Fld26904 [Фамилия]
					,_Fld26905 [Имя]
					,_Fld26906 [Отчество]
					,_Fld26907RRef [ВидДокумента]
					,_Fld26908 [СерияДокумента]
					,_Fld26909 [НомерДокумента]
					,_Fld26910 [ДатаВыдачиДокумента]
					,_Fld26911 [ДатаДействияДокумента]
					,_Fld26912 [ПериодПростояС]
					,_Fld26913 [ПериодПростояПо]
					,_Fld26914 [РасчетПособияИзТарифнойСтавки]
					,_Fld26915RRef [ДолжностьУполномоченного]
					,_Fld26916RRef [Уполномоченный]
					,_Fld26917 [ПоставленаНаУчетВРанниеСрокиБеременности]
					,_Fld26918 [ДатаВыдачиБольничного]
					,_Fld26919 [КодПричиныНетрудоспособности]
					,_Fld26920 [ДополнительныйКодПричиныНетрудоспособности]
					,_Fld26921 [ВторойКодПричиныНетрудоспособности]
					,_Fld26922 [ДатаИзмененияКодаПричиныНетрудоспособности]
					,_Fld26923 [ДатаСправкиБеременной]
					,_Fld26924 [ПериодНахожденияВСтационареСРебенкомС]
					,_Fld26925 [ПериодНахожденияВСтационареСРебенкомПо]
					,_Fld26926 [КодНарушенияРежима]
					,_Fld26927 [ДатаРегистрацииДокументовМСЭ]
					,_Fld26928 [УстановленаИзмененаГруппаИнвалидности]
					,_Fld26929 [ДатаВыходаНаРаботу]
					,_Fld26930 [ЯвляетсяДубликатом]
					,_Fld26931 [АдресЛПУ]
					,_Fld26932 [НаименованиеЛПУ]
					,_Fld26933 [ОГРН_ЛПУ]
					,_Fld26934 [НомерЛисткаПоОсновномуМестуРаботы]
					,_Fld26935 [ДатаОкончанияПутевки]
					,_Fld26936 [НомерПутевки]
					,_Fld26937 [ОГРН_Санатория]
					,_Fld26938 [НомерЛисткаПродолжения]
					,_Fld26939 [ДатаНаправленияВБюроМСЭ]
					,_Fld26940 [ДатаОсвидетельствованияМСЭ]
					,_Fld26941 [НовыйСтатусНетрудопособного]
					,_Fld26942 [ДатаНовыйСтатусНетрудопособного]
					,_Fld26943 [КемВыданДокумент]
					,_Fld26944 [ГруппаИнвалидности]
					,_Fld26945 [КодПричиныПерерасчета]
					,_Fld26946 [НДФЛсПособия]
					,_Fld26947 [КоррСчетБанка]
					,_Fld26948 [НомерСправкиБеременной]
					,_Fld26949 [НаименованиеДокументаНаПроживание]
					,_Fld26950 [СерияДокументаНаПроживание]
					,_Fld26951 [НомерДокументаНаПроживание]
					,_Fld26952 [ДатаВыдачиДокументаНаПроживание]
					,_Fld26953 [АдресРегистрации]
					,_Fld26954 [Телефон]
					,_Fld26955 [ТарифнаяСтавкаОклад]
					,_Fld26956 [СреднедневнойЗаработокНаПериодПростоя]
					,_Fld26957 [ТелефонСоставителя]
					,_Fld26958 [АдресПочтовыйКодПоКЛАДР]
					,_Fld26959 [АдресРегистрацииКодПоКЛАДР]
					,_Fld26960 [АдресЛПУКодПоКЛАДР]
					,_Fld26961RRef [ЛПУ]
					,_Fld26962 [НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении]
					From _Document323(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.НачислениеПоБольничномуЛисту();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.НачислениеПоБольничномуЛисту();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ПериодРегистрации = Читалка.GetDateTime(3);
							Ссылка.Комментарий = Читалка.GetString(5);
							Ссылка.ПричинаНетрудоспособности = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(9));
							Ссылка.ПроцентОплаты = Читалка.GetDecimal(10);
							Ссылка.ЯвляетсяПродолжениемБолезни = ((byte[])Читалка.GetValue(11))[0]==1;
							Ссылка.ПервичныйБольничныйЛист = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(12));
							Ссылка.ДатаНачалаСобытия = Читалка.GetDateTime(13);
							Ссылка.ДатаНачала = Читалка.GetDateTime(14);
							Ссылка.ДатаНачалаОплаты = Читалка.GetDateTime(15);
							Ссылка.ДатаОкончания = Читалка.GetDateTime(16);
							Ссылка.ДатаНарушенияРежима = Читалка.GetDateTime(17);
							Ссылка.ПособиеОтражаетсяВРеглУчетеТекущимДокументом = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОграничениеПособия = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(19));
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(20);
							Ссылка.СерияВходящегоДокумента = Читалка.GetString(21);
							Ссылка.ПерерассчитываемыйДокумент = V82.ДокументыСсылка.НачислениеПоБольничномуЛисту.ВзятьИзКэша((byte[])Читалка.GetValue(22));
							Ссылка.ПричинаНетрудоспособностиПереходногоПериода = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка.Получить((byte[])Читалка.GetValue(23));
							Ссылка.ПроцентОплатыПереходногоПериода = Читалка.GetDecimal(24);
							Ссылка.ОграничениеПособияПереходногоПериода = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(25));
							Ссылка.СлучайУходаЗаБольнымРебенкомПереходногоПериода = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(26));
							Ссылка.СтратегияОтраженияВУчете = V82.Перечисления/*Ссылка*/.СтратегииОтраженияВРеглУчетеНачислений.ПустаяСсылка.Получить((byte[])Читалка.GetValue(27));
							Ссылка.УдалитьПриказ = V82.ДокументыСсылка.ПриемНаРаботуВОрганизацию.ВзятьИзКэша((byte[])Читалка.GetValue(28));
							Ссылка.ПодпадаетПодЕНВД = Читалка.GetDecimal(29);
							Ссылка.СлучайУходаЗаБольнымРебенком = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка.Получить((byte[])Читалка.GetValue(30));
							Ссылка.ДнейОплаты = Читалка.GetDecimal(31);
							Ссылка.ДоплачиватьДоПолногоСреднегоЗаработка = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.ПериодРасчетаСреднегоЗаработкаНачало = Читалка.GetDateTime(35);
							Ссылка.ПериодРасчетаСреднегоЗаработкаОкончание = Читалка.GetDateTime(36);
							Ссылка.ПроцентОплатыБезЛьгот = Читалка.GetDecimal(37);
							Ссылка.ОграничениеПособияБезЛьгот = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка.Получить((byte[])Читалка.GetValue(38));
							Ссылка.ПрименятьЛьготыПриНачисленииПособия = ((byte[])Читалка.GetValue(39))[0]==1;
							Ссылка.ВыплатаЗаСчетФедеральногоБюджета = V82.Перечисления/*Ссылка*/.ВыплатыПособийЗаСчетФедеральногоБюджета.ПустаяСсылка.Получить((byte[])Читалка.GetValue(40));
							Ссылка.УчитыватьЗаработокПредыдущихСтрахователей = ((byte[])Читалка.GetValue(42))[0]==1;
							Ссылка.ДнейОплатыРаботодателем = Читалка.GetDecimal(43);
							Ссылка.НеВыплачиватьПособие = ((byte[])Читалка.GetValue(44))[0]==1;
							Ссылка.РасчетПоПравилам2010Года = ((byte[])Читалка.GetValue(45))[0]==1;
							Ссылка.УсловияИсчисленияКод1 = Читалка.GetString(46);
							Ссылка.УсловияИсчисленияКод2 = Читалка.GetString(47);
							Ссылка.УсловияИсчисленияКод3 = Читалка.GetString(48);
							Ссылка.СтажЛет = Читалка.GetDecimal(49);
							Ссылка.СтажМесяцев = Читалка.GetDecimal(50);
							Ссылка.СтажБезНестраховыхПериодовЛет = Читалка.GetDecimal(51);
							Ссылка.СтажБезНестраховыхПериодовСтажМесяцев = Читалка.GetDecimal(52);
							Ссылка.ПеречислятьПособиеПочтовымПереводом = ((byte[])Читалка.GetValue(53))[0]==1;
							Ссылка.НаименованиеБанка = Читалка.GetString(55);
							Ссылка.БИКБанка = Читалка.GetString(56);
							Ссылка.НомерЛицевогоСчета = Читалка.GetString(57);
							Ссылка.АдресПочтовый = Читалка.GetString(58);
							Ссылка.Фамилия = Читалка.GetString(59);
							Ссылка.Имя = Читалка.GetString(60);
							Ссылка.Отчество = Читалка.GetString(61);
							Ссылка.СерияДокумента = Читалка.GetString(63);
							Ссылка.НомерДокумента = Читалка.GetString(64);
							Ссылка.ДатаВыдачиДокумента = Читалка.GetDateTime(65);
							Ссылка.ДатаДействияДокумента = Читалка.GetDateTime(66);
							Ссылка.ПериодПростояС = Читалка.GetDateTime(67);
							Ссылка.ПериодПростояПо = Читалка.GetDateTime(68);
							Ссылка.РасчетПособияИзТарифнойСтавки = ((byte[])Читалка.GetValue(69))[0]==1;
							Ссылка.ПоставленаНаУчетВРанниеСрокиБеременности = ((byte[])Читалка.GetValue(72))[0]==1;
							Ссылка.ДатаВыдачиБольничного = Читалка.GetDateTime(73);
							Ссылка.КодПричиныНетрудоспособности = Читалка.GetString(74);
							Ссылка.ДополнительныйКодПричиныНетрудоспособности = Читалка.GetString(75);
							Ссылка.ВторойКодПричиныНетрудоспособности = Читалка.GetString(76);
							Ссылка.ДатаИзмененияКодаПричиныНетрудоспособности = Читалка.GetDateTime(77);
							Ссылка.ДатаСправкиБеременной = Читалка.GetDateTime(78);
							Ссылка.ПериодНахожденияВСтационареСРебенкомС = Читалка.GetDateTime(79);
							Ссылка.ПериодНахожденияВСтационареСРебенкомПо = Читалка.GetDateTime(80);
							Ссылка.КодНарушенияРежима = Читалка.GetString(81);
							Ссылка.ДатаРегистрацииДокументовМСЭ = Читалка.GetDateTime(82);
							Ссылка.УстановленаИзмененаГруппаИнвалидности = ((byte[])Читалка.GetValue(83))[0]==1;
							Ссылка.ДатаВыходаНаРаботу = Читалка.GetDateTime(84);
							Ссылка.ЯвляетсяДубликатом = ((byte[])Читалка.GetValue(85))[0]==1;
							Ссылка.АдресЛПУ = Читалка.GetString(86);
							Ссылка.НаименованиеЛПУ = Читалка.GetString(87);
							Ссылка.ОГРН_ЛПУ = Читалка.GetString(88);
							Ссылка.НомерЛисткаПоОсновномуМестуРаботы = Читалка.GetString(89);
							Ссылка.ДатаОкончанияПутевки = Читалка.GetDateTime(90);
							Ссылка.НомерПутевки = Читалка.GetString(91);
							Ссылка.ОГРН_Санатория = Читалка.GetString(92);
							Ссылка.НомерЛисткаПродолжения = Читалка.GetString(93);
							Ссылка.ДатаНаправленияВБюроМСЭ = Читалка.GetDateTime(94);
							Ссылка.ДатаОсвидетельствованияМСЭ = Читалка.GetDateTime(95);
							Ссылка.НовыйСтатусНетрудопособного = Читалка.GetString(96);
							Ссылка.ДатаНовыйСтатусНетрудопособного = Читалка.GetDateTime(97);
							Ссылка.КемВыданДокумент = Читалка.GetString(98);
							Ссылка.ГруппаИнвалидности = Читалка.GetString(99);
							Ссылка.КодПричиныПерерасчета = Читалка.GetString(100);
							Ссылка.НДФЛсПособия = Читалка.GetDecimal(101);
							Ссылка.КоррСчетБанка = Читалка.GetString(102);
							Ссылка.НомерСправкиБеременной = Читалка.GetString(103);
							Ссылка.НаименованиеДокументаНаПроживание = Читалка.GetString(104);
							Ссылка.СерияДокументаНаПроживание = Читалка.GetString(105);
							Ссылка.НомерДокументаНаПроживание = Читалка.GetString(106);
							Ссылка.ДатаВыдачиДокументаНаПроживание = Читалка.GetDateTime(107);
							Ссылка.АдресРегистрации = Читалка.GetString(108);
							Ссылка.Телефон = Читалка.GetString(109);
							Ссылка.ТарифнаяСтавкаОклад = Читалка.GetDecimal(110);
							Ссылка.СреднедневнойЗаработокНаПериодПростоя = Читалка.GetDecimal(111);
							Ссылка.ТелефонСоставителя = Читалка.GetString(112);
							Ссылка.АдресПочтовыйКодПоКЛАДР = Читалка.GetString(113);
							Ссылка.АдресРегистрацииКодПоКЛАДР = Читалка.GetString(114);
							Ссылка.АдресЛПУКодПоКЛАДР = Читалка.GetString(115);
							Ссылка.НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении = ((byte[])Читалка.GetValue(117))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.ДокументыОбъект.НачислениеПоБольничномуЛисту СоздатьЭлемент()
		{
			var Объект = new V82.ДокументыОбъект.НачислениеПоБольничномуЛисту();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.Комментарий = "";
			Объект.НомерВходящегоДокумента = "";
			Объект.СерияВходящегоДокумента = "";
			Объект.УсловияИсчисленияКод1 = "";
			Объект.УсловияИсчисленияКод2 = "";
			Объект.УсловияИсчисленияКод3 = "";
			Объект.НаименованиеБанка = "";
			Объект.БИКБанка = "";
			Объект.НомерЛицевогоСчета = "";
			Объект.АдресПочтовый = "";
			Объект.Фамилия = "";
			Объект.Имя = "";
			Объект.Отчество = "";
			Объект.СерияДокумента = "";
			Объект.НомерДокумента = "";
			Объект.КодПричиныНетрудоспособности = "";
			Объект.ДополнительныйКодПричиныНетрудоспособности = "";
			Объект.ВторойКодПричиныНетрудоспособности = "";
			Объект.КодНарушенияРежима = "";
			Объект.АдресЛПУ = "";
			Объект.НаименованиеЛПУ = "";
			Объект.ОГРН_ЛПУ = "";
			Объект.НомерЛисткаПоОсновномуМестуРаботы = "";
			Объект.НомерПутевки = "";
			Объект.ОГРН_Санатория = "";
			Объект.НомерЛисткаПродолжения = "";
			Объект.НовыйСтатусНетрудопособного = "";
			Объект.КемВыданДокумент = "";
			Объект.ГруппаИнвалидности = "";
			Объект.КодПричиныПерерасчета = "";
			Объект.КоррСчетБанка = "";
			Объект.НомерСправкиБеременной = "";
			Объект.НаименованиеДокументаНаПроживание = "";
			Объект.СерияДокументаНаПроживание = "";
			Объект.НомерДокументаНаПроживание = "";
			Объект.АдресРегистрации = "";
			Объект.Телефон = "";
			Объект.ТелефонСоставителя = "";
			Объект.АдресПочтовыйКодПоКЛАДР = "";
			Объект.АдресРегистрацииКодПоКЛАДР = "";
			Объект.АдресЛПУКодПоКЛАДР = "";
			Объект.ПричинаНетрудоспособности = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка;
			Объект.ПервичныйБольничныйЛист = new V82.ДокументыСсылка.НачислениеПоБольничномуЛисту();
			Объект.ОграничениеПособия = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка;
			Объект.ПерерассчитываемыйДокумент = new V82.ДокументыСсылка.НачислениеПоБольничномуЛисту();
			Объект.ПричинаНетрудоспособностиПереходногоПериода = V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности.ПустаяСсылка;
			Объект.ОграничениеПособияПереходногоПериода = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка;
			Объект.СлучайУходаЗаБольнымРебенкомПереходногоПериода = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка;
			Объект.СтратегияОтраженияВУчете = V82.Перечисления/*Ссылка*/.СтратегииОтраженияВРеглУчетеНачислений.ПустаяСсылка;
			Объект.УдалитьПриказ = new V82.ДокументыСсылка.ПриемНаРаботуВОрганизацию();
			Объект.СлучайУходаЗаБольнымРебенком = V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка;
			Объект.ОграничениеПособияБезЛьгот = V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия.ПустаяСсылка;
			Объект.ВыплатаЗаСчетФедеральногоБюджета = V82.Перечисления/*Ссылка*/.ВыплатыПособийЗаСчетФедеральногоБюджета.ПустаяСсылка;
			return Объект;
		}
	}
}