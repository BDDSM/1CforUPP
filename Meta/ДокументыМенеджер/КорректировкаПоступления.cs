
using System;
using System.Data.SqlClient;
using V82;
using V82.ДокументыСсылка;
using V82.Документы;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Документы//Менеджер
{
	///<summary>
	///(Общ)
	///</summary>
	public partial class КорректировкаПоступления:ДокументМенеджер
	{
		
		public static ДокументыСсылка.КорректировкаПоступления НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld24388RRef [ВалютаДокумента]
					,_Fld24389RRef [ВидОперации]
					,_Fld24390 [ДатаВходящегоДокумента]
					,_Fld24391RRef [ДоговорКонтрагента]
					,_Fld24392RRef [БанковскийСчетКонтрагента]
					,_Fld24393 [Комментарий]
					,_Fld24394RRef [Контрагент]
					,_Fld24395 [КратностьВзаиморасчетов]
					,_Fld24396 [КурсВзаиморасчетов]
					,_Fld24397 [НДСВключенВСтоимость]
					,_Fld24398 [НомерВходящегоДокумента]
					,_Fld24399RRef [Организация]
					,_Fld24400RRef [Ответственный]
					,_Fld24401 [ОтражатьВБухгалтерскомУчете]
					,_Fld24402 [ОтражатьВНалоговомУчете]
					,_Fld24403 [ОтражатьВУправленческомУчете]
					,_Fld24404RRef [ПодразделениеОрганизации]
					,_Fld24405RRef [Подразделение]
					,_Fld24406_TYPE [Сделка_Тип],_Fld24406_RRRef [Сделка],_Fld24406_RTRef [Сделка_Вид]
					,_Fld24407RRef [Склад]
					,_Fld24408 [СуммаВключаетНДС]
					,_Fld24409RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld24410RRef [СчетУчетаРасчетовПоТаре]
					,_Fld24411RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld24412 [СуммаДокумента]
					,_Fld24413RRef [ТипЦен]
					,_Fld24414 [УчитыватьНДС]
					,_Fld24415RRef [УсловиеПродаж]
					,_Fld24416_TYPE [Проект_Тип],_Fld24416_RRRef [Проект],_Fld24416_RTRef [Проект_Вид]
					,_Fld24417RRef [Грузоотправитель]
					,_Fld24418RRef [Грузополучатель]
					,_Fld24419 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld24420 [ДатаВходящегоДокументаЭлектронногоОбмена]
					,_Fld24421_TYPE [ДокументПоступления_Тип],_Fld24421_RRRef [ДокументПоступления],_Fld24421_RTRef [ДокументПоступления_Вид]
					,_Fld24422 [ВосстановитьНДС]
					,_Fld24423_TYPE [ИсправляемыйДокументПоступления_Тип],_Fld24423_RRRef [ИсправляемыйДокументПоступления],_Fld24423_RTRef [ИсправляемыйДокументПоступления_Вид]
					,_Fld24424 [КорректироватьБУиНУ]
					,_Fld24425RRef [СтатьяПрочихДоходовИРасходов]
					From _Document23152(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.КорректировкаПоступления();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийИсправленияПоступленияРеализации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(5);
							Ссылка.Комментарий = Читалка.GetString(8);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(10);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(11);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(12))[0]==1;
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(13);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(29);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(38);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(39);
							Ссылка.ВосстановитьНДС = ((byte[])Читалка.GetValue(43))[0]==1;
							Ссылка.КорректироватьБУиНУ = ((byte[])Читалка.GetValue(47))[0]==1;
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыСсылка.КорректировкаПоступления НайтиПоНомеру(string Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld24388RRef [ВалютаДокумента]
					,_Fld24389RRef [ВидОперации]
					,_Fld24390 [ДатаВходящегоДокумента]
					,_Fld24391RRef [ДоговорКонтрагента]
					,_Fld24392RRef [БанковскийСчетКонтрагента]
					,_Fld24393 [Комментарий]
					,_Fld24394RRef [Контрагент]
					,_Fld24395 [КратностьВзаиморасчетов]
					,_Fld24396 [КурсВзаиморасчетов]
					,_Fld24397 [НДСВключенВСтоимость]
					,_Fld24398 [НомерВходящегоДокумента]
					,_Fld24399RRef [Организация]
					,_Fld24400RRef [Ответственный]
					,_Fld24401 [ОтражатьВБухгалтерскомУчете]
					,_Fld24402 [ОтражатьВНалоговомУчете]
					,_Fld24403 [ОтражатьВУправленческомУчете]
					,_Fld24404RRef [ПодразделениеОрганизации]
					,_Fld24405RRef [Подразделение]
					,_Fld24406_TYPE [Сделка_Тип],_Fld24406_RRRef [Сделка],_Fld24406_RTRef [Сделка_Вид]
					,_Fld24407RRef [Склад]
					,_Fld24408 [СуммаВключаетНДС]
					,_Fld24409RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld24410RRef [СчетУчетаРасчетовПоТаре]
					,_Fld24411RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld24412 [СуммаДокумента]
					,_Fld24413RRef [ТипЦен]
					,_Fld24414 [УчитыватьНДС]
					,_Fld24415RRef [УсловиеПродаж]
					,_Fld24416_TYPE [Проект_Тип],_Fld24416_RRRef [Проект],_Fld24416_RTRef [Проект_Вид]
					,_Fld24417RRef [Грузоотправитель]
					,_Fld24418RRef [Грузополучатель]
					,_Fld24419 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld24420 [ДатаВходящегоДокументаЭлектронногоОбмена]
					,_Fld24421_TYPE [ДокументПоступления_Тип],_Fld24421_RRRef [ДокументПоступления],_Fld24421_RTRef [ДокументПоступления_Вид]
					,_Fld24422 [ВосстановитьНДС]
					,_Fld24423_TYPE [ИсправляемыйДокументПоступления_Тип],_Fld24423_RRRef [ИсправляемыйДокументПоступления],_Fld24423_RTRef [ИсправляемыйДокументПоступления_Вид]
					,_Fld24424 [КорректироватьБУиНУ]
					,_Fld24425RRef [СтатьяПрочихДоходовИРасходов]
					From _Document23152(NOLOCK)
					Where _Number = @Номер";
					Команда.Parameters.AddWithValue("Номер", Номер);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.КорректировкаПоступления();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийИсправленияПоступленияРеализации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(5);
							Ссылка.Комментарий = Читалка.GetString(8);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(10);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(11);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(12))[0]==1;
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(13);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(29);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(38);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(39);
							Ссылка.ВосстановитьНДС = ((byte[])Читалка.GetValue(43))[0]==1;
							Ссылка.КорректироватьБУиНУ = ((byte[])Читалка.GetValue(47))[0]==1;
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыВыборка.КорректировкаПоступления Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld24388RRef [ВалютаДокумента]
					,_Fld24389RRef [ВидОперации]
					,_Fld24390 [ДатаВходящегоДокумента]
					,_Fld24391RRef [ДоговорКонтрагента]
					,_Fld24392RRef [БанковскийСчетКонтрагента]
					,_Fld24393 [Комментарий]
					,_Fld24394RRef [Контрагент]
					,_Fld24395 [КратностьВзаиморасчетов]
					,_Fld24396 [КурсВзаиморасчетов]
					,_Fld24397 [НДСВключенВСтоимость]
					,_Fld24398 [НомерВходящегоДокумента]
					,_Fld24399RRef [Организация]
					,_Fld24400RRef [Ответственный]
					,_Fld24401 [ОтражатьВБухгалтерскомУчете]
					,_Fld24402 [ОтражатьВНалоговомУчете]
					,_Fld24403 [ОтражатьВУправленческомУчете]
					,_Fld24404RRef [ПодразделениеОрганизации]
					,_Fld24405RRef [Подразделение]
					,_Fld24406_TYPE [Сделка_Тип],_Fld24406_RRRef [Сделка],_Fld24406_RTRef [Сделка_Вид]
					,_Fld24407RRef [Склад]
					,_Fld24408 [СуммаВключаетНДС]
					,_Fld24409RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld24410RRef [СчетУчетаРасчетовПоТаре]
					,_Fld24411RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld24412 [СуммаДокумента]
					,_Fld24413RRef [ТипЦен]
					,_Fld24414 [УчитыватьНДС]
					,_Fld24415RRef [УсловиеПродаж]
					,_Fld24416_TYPE [Проект_Тип],_Fld24416_RRRef [Проект],_Fld24416_RTRef [Проект_Вид]
					,_Fld24417RRef [Грузоотправитель]
					,_Fld24418RRef [Грузополучатель]
					,_Fld24419 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld24420 [ДатаВходящегоДокументаЭлектронногоОбмена]
					,_Fld24421_TYPE [ДокументПоступления_Тип],_Fld24421_RRRef [ДокументПоступления],_Fld24421_RTRef [ДокументПоступления_Вид]
					,_Fld24422 [ВосстановитьНДС]
					,_Fld24423_TYPE [ИсправляемыйДокументПоступления_Тип],_Fld24423_RRRef [ИсправляемыйДокументПоступления],_Fld24423_RTRef [ИсправляемыйДокументПоступления_Вид]
					,_Fld24424 [КорректироватьБУиНУ]
					,_Fld24425RRef [СтатьяПрочихДоходовИРасходов]
					From _Document23152(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.КорректировкаПоступления();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.КорректировкаПоступления();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийИсправленияПоступленияРеализации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(5);
							Ссылка.Комментарий = Читалка.GetString(8);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(10);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(11);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(12))[0]==1;
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(13);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(29);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(38);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(39);
							Ссылка.ВосстановитьНДС = ((byte[])Читалка.GetValue(43))[0]==1;
							Ссылка.КорректироватьБУиНУ = ((byte[])Читалка.GetValue(47))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.КорректировкаПоступления ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld24388RRef [ВалютаДокумента]
					,_Fld24389RRef [ВидОперации]
					,_Fld24390 [ДатаВходящегоДокумента]
					,_Fld24391RRef [ДоговорКонтрагента]
					,_Fld24392RRef [БанковскийСчетКонтрагента]
					,_Fld24393 [Комментарий]
					,_Fld24394RRef [Контрагент]
					,_Fld24395 [КратностьВзаиморасчетов]
					,_Fld24396 [КурсВзаиморасчетов]
					,_Fld24397 [НДСВключенВСтоимость]
					,_Fld24398 [НомерВходящегоДокумента]
					,_Fld24399RRef [Организация]
					,_Fld24400RRef [Ответственный]
					,_Fld24401 [ОтражатьВБухгалтерскомУчете]
					,_Fld24402 [ОтражатьВНалоговомУчете]
					,_Fld24403 [ОтражатьВУправленческомУчете]
					,_Fld24404RRef [ПодразделениеОрганизации]
					,_Fld24405RRef [Подразделение]
					,_Fld24406_TYPE [Сделка_Тип],_Fld24406_RRRef [Сделка],_Fld24406_RTRef [Сделка_Вид]
					,_Fld24407RRef [Склад]
					,_Fld24408 [СуммаВключаетНДС]
					,_Fld24409RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld24410RRef [СчетУчетаРасчетовПоТаре]
					,_Fld24411RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld24412 [СуммаДокумента]
					,_Fld24413RRef [ТипЦен]
					,_Fld24414 [УчитыватьНДС]
					,_Fld24415RRef [УсловиеПродаж]
					,_Fld24416_TYPE [Проект_Тип],_Fld24416_RRRef [Проект],_Fld24416_RTRef [Проект_Вид]
					,_Fld24417RRef [Грузоотправитель]
					,_Fld24418RRef [Грузополучатель]
					,_Fld24419 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld24420 [ДатаВходящегоДокументаЭлектронногоОбмена]
					,_Fld24421_TYPE [ДокументПоступления_Тип],_Fld24421_RRRef [ДокументПоступления],_Fld24421_RTRef [ДокументПоступления_Вид]
					,_Fld24422 [ВосстановитьНДС]
					,_Fld24423_TYPE [ИсправляемыйДокументПоступления_Тип],_Fld24423_RRRef [ИсправляемыйДокументПоступления],_Fld24423_RTRef [ИсправляемыйДокументПоступления_Вид]
					,_Fld24424 [КорректироватьБУиНУ]
					,_Fld24425RRef [СтатьяПрочихДоходовИРасходов]
					From _Document23152(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.КорректировкаПоступления();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.КорректировкаПоступления();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийИсправленияПоступленияРеализации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(5);
							Ссылка.Комментарий = Читалка.GetString(8);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(10);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(11);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(12))[0]==1;
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(13);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(29);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(38);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(39);
							Ссылка.ВосстановитьНДС = ((byte[])Читалка.GetValue(43))[0]==1;
							Ссылка.КорректироватьБУиНУ = ((byte[])Читалка.GetValue(47))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.КорректировкаПоступления ВыбратьПоНомеру(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld24388RRef [ВалютаДокумента]
					,_Fld24389RRef [ВидОперации]
					,_Fld24390 [ДатаВходящегоДокумента]
					,_Fld24391RRef [ДоговорКонтрагента]
					,_Fld24392RRef [БанковскийСчетКонтрагента]
					,_Fld24393 [Комментарий]
					,_Fld24394RRef [Контрагент]
					,_Fld24395 [КратностьВзаиморасчетов]
					,_Fld24396 [КурсВзаиморасчетов]
					,_Fld24397 [НДСВключенВСтоимость]
					,_Fld24398 [НомерВходящегоДокумента]
					,_Fld24399RRef [Организация]
					,_Fld24400RRef [Ответственный]
					,_Fld24401 [ОтражатьВБухгалтерскомУчете]
					,_Fld24402 [ОтражатьВНалоговомУчете]
					,_Fld24403 [ОтражатьВУправленческомУчете]
					,_Fld24404RRef [ПодразделениеОрганизации]
					,_Fld24405RRef [Подразделение]
					,_Fld24406_TYPE [Сделка_Тип],_Fld24406_RRRef [Сделка],_Fld24406_RTRef [Сделка_Вид]
					,_Fld24407RRef [Склад]
					,_Fld24408 [СуммаВключаетНДС]
					,_Fld24409RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld24410RRef [СчетУчетаРасчетовПоТаре]
					,_Fld24411RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld24412 [СуммаДокумента]
					,_Fld24413RRef [ТипЦен]
					,_Fld24414 [УчитыватьНДС]
					,_Fld24415RRef [УсловиеПродаж]
					,_Fld24416_TYPE [Проект_Тип],_Fld24416_RRRef [Проект],_Fld24416_RTRef [Проект_Вид]
					,_Fld24417RRef [Грузоотправитель]
					,_Fld24418RRef [Грузополучатель]
					,_Fld24419 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld24420 [ДатаВходящегоДокументаЭлектронногоОбмена]
					,_Fld24421_TYPE [ДокументПоступления_Тип],_Fld24421_RRRef [ДокументПоступления],_Fld24421_RTRef [ДокументПоступления_Вид]
					,_Fld24422 [ВосстановитьНДС]
					,_Fld24423_TYPE [ИсправляемыйДокументПоступления_Тип],_Fld24423_RRRef [ИсправляемыйДокументПоступления],_Fld24423_RTRef [ИсправляемыйДокументПоступления_Вид]
					,_Fld24424 [КорректироватьБУиНУ]
					,_Fld24425RRef [СтатьяПрочихДоходовИРасходов]
					From _Document23152(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.КорректировкаПоступления();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.КорректировкаПоступления();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийИсправленияПоступленияРеализации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(5);
							Ссылка.Комментарий = Читалка.GetString(8);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(10);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(11);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(12))[0]==1;
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(13);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(29);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(38);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(39);
							Ссылка.ВосстановитьНДС = ((byte[])Читалка.GetValue(43))[0]==1;
							Ссылка.КорректироватьБУиНУ = ((byte[])Читалка.GetValue(47))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.КорректировкаПоступления СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld24388RRef [ВалютаДокумента]
					,_Fld24389RRef [ВидОперации]
					,_Fld24390 [ДатаВходящегоДокумента]
					,_Fld24391RRef [ДоговорКонтрагента]
					,_Fld24392RRef [БанковскийСчетКонтрагента]
					,_Fld24393 [Комментарий]
					,_Fld24394RRef [Контрагент]
					,_Fld24395 [КратностьВзаиморасчетов]
					,_Fld24396 [КурсВзаиморасчетов]
					,_Fld24397 [НДСВключенВСтоимость]
					,_Fld24398 [НомерВходящегоДокумента]
					,_Fld24399RRef [Организация]
					,_Fld24400RRef [Ответственный]
					,_Fld24401 [ОтражатьВБухгалтерскомУчете]
					,_Fld24402 [ОтражатьВНалоговомУчете]
					,_Fld24403 [ОтражатьВУправленческомУчете]
					,_Fld24404RRef [ПодразделениеОрганизации]
					,_Fld24405RRef [Подразделение]
					,_Fld24406_TYPE [Сделка_Тип],_Fld24406_RRRef [Сделка],_Fld24406_RTRef [Сделка_Вид]
					,_Fld24407RRef [Склад]
					,_Fld24408 [СуммаВключаетНДС]
					,_Fld24409RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld24410RRef [СчетУчетаРасчетовПоТаре]
					,_Fld24411RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld24412 [СуммаДокумента]
					,_Fld24413RRef [ТипЦен]
					,_Fld24414 [УчитыватьНДС]
					,_Fld24415RRef [УсловиеПродаж]
					,_Fld24416_TYPE [Проект_Тип],_Fld24416_RRRef [Проект],_Fld24416_RTRef [Проект_Вид]
					,_Fld24417RRef [Грузоотправитель]
					,_Fld24418RRef [Грузополучатель]
					,_Fld24419 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld24420 [ДатаВходящегоДокументаЭлектронногоОбмена]
					,_Fld24421_TYPE [ДокументПоступления_Тип],_Fld24421_RRRef [ДокументПоступления],_Fld24421_RTRef [ДокументПоступления_Вид]
					,_Fld24422 [ВосстановитьНДС]
					,_Fld24423_TYPE [ИсправляемыйДокументПоступления_Тип],_Fld24423_RRRef [ИсправляемыйДокументПоступления],_Fld24423_RTRef [ИсправляемыйДокументПоступления_Вид]
					,_Fld24424 [КорректироватьБУиНУ]
					,_Fld24425RRef [СтатьяПрочихДоходовИРасходов]
					From _Document23152(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.КорректировкаПоступления();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.КорректировкаПоступления();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийИсправленияПоступленияРеализации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(5);
							Ссылка.Комментарий = Читалка.GetString(8);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(10);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(11);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(12))[0]==1;
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(13);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(29);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(38);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(39);
							Ссылка.ВосстановитьНДС = ((byte[])Читалка.GetValue(43))[0]==1;
							Ссылка.КорректироватьБУиНУ = ((byte[])Читалка.GetValue(47))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.КорректировкаПоступления СтраницаПоНомеру(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld24388RRef [ВалютаДокумента]
					,_Fld24389RRef [ВидОперации]
					,_Fld24390 [ДатаВходящегоДокумента]
					,_Fld24391RRef [ДоговорКонтрагента]
					,_Fld24392RRef [БанковскийСчетКонтрагента]
					,_Fld24393 [Комментарий]
					,_Fld24394RRef [Контрагент]
					,_Fld24395 [КратностьВзаиморасчетов]
					,_Fld24396 [КурсВзаиморасчетов]
					,_Fld24397 [НДСВключенВСтоимость]
					,_Fld24398 [НомерВходящегоДокумента]
					,_Fld24399RRef [Организация]
					,_Fld24400RRef [Ответственный]
					,_Fld24401 [ОтражатьВБухгалтерскомУчете]
					,_Fld24402 [ОтражатьВНалоговомУчете]
					,_Fld24403 [ОтражатьВУправленческомУчете]
					,_Fld24404RRef [ПодразделениеОрганизации]
					,_Fld24405RRef [Подразделение]
					,_Fld24406_TYPE [Сделка_Тип],_Fld24406_RRRef [Сделка],_Fld24406_RTRef [Сделка_Вид]
					,_Fld24407RRef [Склад]
					,_Fld24408 [СуммаВключаетНДС]
					,_Fld24409RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld24410RRef [СчетУчетаРасчетовПоТаре]
					,_Fld24411RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld24412 [СуммаДокумента]
					,_Fld24413RRef [ТипЦен]
					,_Fld24414 [УчитыватьНДС]
					,_Fld24415RRef [УсловиеПродаж]
					,_Fld24416_TYPE [Проект_Тип],_Fld24416_RRRef [Проект],_Fld24416_RTRef [Проект_Вид]
					,_Fld24417RRef [Грузоотправитель]
					,_Fld24418RRef [Грузополучатель]
					,_Fld24419 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld24420 [ДатаВходящегоДокументаЭлектронногоОбмена]
					,_Fld24421_TYPE [ДокументПоступления_Тип],_Fld24421_RRRef [ДокументПоступления],_Fld24421_RTRef [ДокументПоступления_Вид]
					,_Fld24422 [ВосстановитьНДС]
					,_Fld24423_TYPE [ИсправляемыйДокументПоступления_Тип],_Fld24423_RRRef [ИсправляемыйДокументПоступления],_Fld24423_RTRef [ИсправляемыйДокументПоступления_Вид]
					,_Fld24424 [КорректироватьБУиНУ]
					,_Fld24425RRef [СтатьяПрочихДоходовИРасходов]
					From _Document23152(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.КорректировкаПоступления();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.КорректировкаПоступления();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийИсправленияПоступленияРеализации.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ДатаВходящегоДокумента = Читалка.GetDateTime(5);
							Ссылка.Комментарий = Читалка.GetString(8);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(10);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(11);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(12))[0]==1;
							Ссылка.НомерВходящегоДокумента = Читалка.GetString(13);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(25))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(29);
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(38);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(39);
							Ссылка.ВосстановитьНДС = ((byte[])Читалка.GetValue(43))[0]==1;
							Ссылка.КорректироватьБУиНУ = ((byte[])Читалка.GetValue(47))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.ДокументыОбъект.КорректировкаПоступления СоздатьЭлемент()
		{
			var Объект = new V82.ДокументыОбъект.КорректировкаПоступления();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.Комментарий = "";
			Объект.НомерВходящегоДокумента = "";
			Объект.НомерВходящегоДокументаЭлектронногоОбмена = "";
			Объект.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийИсправленияПоступленияРеализации.ПустаяСсылка;
			return Объект;
		}
	}
}