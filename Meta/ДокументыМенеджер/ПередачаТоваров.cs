
using System;
using System.Data.SqlClient;
using V82;
using V82.ДокументыСсылка;
using V82.Документы;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Документы//Менеджер
{
	///<summary>
	///(Общ)
	///</summary>
	public partial class ПередачаТоваров:ДокументМенеджер
	{
		
		public static ДокументыСсылка.ПередачаТоваров НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld12321RRef [ВалютаДокумента]
					,_Fld12322RRef [ВидОперации]
					,_Fld12323RRef [ВидПередачи]
					,_Fld12324RRef [ДоговорКонтрагента]
					,_Fld12325_TYPE [Заказ_Тип],_Fld12325_RRRef [Заказ],_Fld12325_RTRef [Заказ_Вид]
					,_Fld12326 [Комментарий]
					,_Fld12327RRef [Контрагент]
					,_Fld12328 [КратностьВзаиморасчетов]
					,_Fld12329 [КурсВзаиморасчетов]
					,_Fld12330RRef [Организация]
					,_Fld12331RRef [Ответственный]
					,_Fld12332 [ОтражатьВБухгалтерскомУчете]
					,_Fld12333 [ОтражатьВНалоговомУчете]
					,_Fld12334 [ОтражатьВУправленческомУчете]
					,_Fld12335RRef [Склад]
					,_Fld12336 [СуммаДокумента]
					,_Fld12337RRef [СчетУчетаРасчетовПоТаре]
					,_Fld12338RRef [ТипЦен]
					,_Fld12339RRef [СтатьяПрочихДоходовРасходовПоТаре]
					,_Fld12340RRef [СчетУчетаДоходовПоТареБУ]
					,_Fld12341RRef [СчетУчетаРасходовПоТареБУ]
					,_Fld12342RRef [СчетУчетаДоходовПоТареНУ]
					,_Fld12343RRef [СчетУчетаРасходовПоТареНУ]
					,_Fld12344RRef [Грузоотправитель]
					,_Fld12345RRef [Грузополучатель]
					,_Fld12346 [АдресДоставки]
					,_Fld12347 [ДополнениеКАдресуДоставки]
					From _Document489(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПередачаТоваров();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПередачаТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ВидПередачи = V82.Перечисления/*Ссылка*/.ВидыПередачиТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.Комментарий = Читалка.GetString(10);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(12);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(20);
							Ссылка.АдресДоставки = Читалка.GetString(30);
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(31);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыСсылка.ПередачаТоваров НайтиПоНомеру(string Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld12321RRef [ВалютаДокумента]
					,_Fld12322RRef [ВидОперации]
					,_Fld12323RRef [ВидПередачи]
					,_Fld12324RRef [ДоговорКонтрагента]
					,_Fld12325_TYPE [Заказ_Тип],_Fld12325_RRRef [Заказ],_Fld12325_RTRef [Заказ_Вид]
					,_Fld12326 [Комментарий]
					,_Fld12327RRef [Контрагент]
					,_Fld12328 [КратностьВзаиморасчетов]
					,_Fld12329 [КурсВзаиморасчетов]
					,_Fld12330RRef [Организация]
					,_Fld12331RRef [Ответственный]
					,_Fld12332 [ОтражатьВБухгалтерскомУчете]
					,_Fld12333 [ОтражатьВНалоговомУчете]
					,_Fld12334 [ОтражатьВУправленческомУчете]
					,_Fld12335RRef [Склад]
					,_Fld12336 [СуммаДокумента]
					,_Fld12337RRef [СчетУчетаРасчетовПоТаре]
					,_Fld12338RRef [ТипЦен]
					,_Fld12339RRef [СтатьяПрочихДоходовРасходовПоТаре]
					,_Fld12340RRef [СчетУчетаДоходовПоТареБУ]
					,_Fld12341RRef [СчетУчетаРасходовПоТареБУ]
					,_Fld12342RRef [СчетУчетаДоходовПоТареНУ]
					,_Fld12343RRef [СчетУчетаРасходовПоТареНУ]
					,_Fld12344RRef [Грузоотправитель]
					,_Fld12345RRef [Грузополучатель]
					,_Fld12346 [АдресДоставки]
					,_Fld12347 [ДополнениеКАдресуДоставки]
					From _Document489(NOLOCK)
					Where _Number = @Номер";
					Команда.Parameters.AddWithValue("Номер", Номер);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПередачаТоваров();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПередачаТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ВидПередачи = V82.Перечисления/*Ссылка*/.ВидыПередачиТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.Комментарий = Читалка.GetString(10);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(12);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(20);
							Ссылка.АдресДоставки = Читалка.GetString(30);
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(31);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПередачаТоваров Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld12321RRef [ВалютаДокумента]
					,_Fld12322RRef [ВидОперации]
					,_Fld12323RRef [ВидПередачи]
					,_Fld12324RRef [ДоговорКонтрагента]
					,_Fld12325_TYPE [Заказ_Тип],_Fld12325_RRRef [Заказ],_Fld12325_RTRef [Заказ_Вид]
					,_Fld12326 [Комментарий]
					,_Fld12327RRef [Контрагент]
					,_Fld12328 [КратностьВзаиморасчетов]
					,_Fld12329 [КурсВзаиморасчетов]
					,_Fld12330RRef [Организация]
					,_Fld12331RRef [Ответственный]
					,_Fld12332 [ОтражатьВБухгалтерскомУчете]
					,_Fld12333 [ОтражатьВНалоговомУчете]
					,_Fld12334 [ОтражатьВУправленческомУчете]
					,_Fld12335RRef [Склад]
					,_Fld12336 [СуммаДокумента]
					,_Fld12337RRef [СчетУчетаРасчетовПоТаре]
					,_Fld12338RRef [ТипЦен]
					,_Fld12339RRef [СтатьяПрочихДоходовРасходовПоТаре]
					,_Fld12340RRef [СчетУчетаДоходовПоТареБУ]
					,_Fld12341RRef [СчетУчетаРасходовПоТареБУ]
					,_Fld12342RRef [СчетУчетаДоходовПоТареНУ]
					,_Fld12343RRef [СчетУчетаРасходовПоТареНУ]
					,_Fld12344RRef [Грузоотправитель]
					,_Fld12345RRef [Грузополучатель]
					,_Fld12346 [АдресДоставки]
					,_Fld12347 [ДополнениеКАдресуДоставки]
					From _Document489(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ПередачаТоваров();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПередачаТоваров();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПередачаТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ВидПередачи = V82.Перечисления/*Ссылка*/.ВидыПередачиТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.Комментарий = Читалка.GetString(10);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(12);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(20);
							Ссылка.АдресДоставки = Читалка.GetString(30);
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(31);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПередачаТоваров ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld12321RRef [ВалютаДокумента]
					,_Fld12322RRef [ВидОперации]
					,_Fld12323RRef [ВидПередачи]
					,_Fld12324RRef [ДоговорКонтрагента]
					,_Fld12325_TYPE [Заказ_Тип],_Fld12325_RRRef [Заказ],_Fld12325_RTRef [Заказ_Вид]
					,_Fld12326 [Комментарий]
					,_Fld12327RRef [Контрагент]
					,_Fld12328 [КратностьВзаиморасчетов]
					,_Fld12329 [КурсВзаиморасчетов]
					,_Fld12330RRef [Организация]
					,_Fld12331RRef [Ответственный]
					,_Fld12332 [ОтражатьВБухгалтерскомУчете]
					,_Fld12333 [ОтражатьВНалоговомУчете]
					,_Fld12334 [ОтражатьВУправленческомУчете]
					,_Fld12335RRef [Склад]
					,_Fld12336 [СуммаДокумента]
					,_Fld12337RRef [СчетУчетаРасчетовПоТаре]
					,_Fld12338RRef [ТипЦен]
					,_Fld12339RRef [СтатьяПрочихДоходовРасходовПоТаре]
					,_Fld12340RRef [СчетУчетаДоходовПоТареБУ]
					,_Fld12341RRef [СчетУчетаРасходовПоТареБУ]
					,_Fld12342RRef [СчетУчетаДоходовПоТареНУ]
					,_Fld12343RRef [СчетУчетаРасходовПоТареНУ]
					,_Fld12344RRef [Грузоотправитель]
					,_Fld12345RRef [Грузополучатель]
					,_Fld12346 [АдресДоставки]
					,_Fld12347 [ДополнениеКАдресуДоставки]
					From _Document489(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ПередачаТоваров();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПередачаТоваров();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПередачаТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ВидПередачи = V82.Перечисления/*Ссылка*/.ВидыПередачиТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.Комментарий = Читалка.GetString(10);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(12);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(20);
							Ссылка.АдресДоставки = Читалка.GetString(30);
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(31);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПередачаТоваров ВыбратьПоНомеру(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld12321RRef [ВалютаДокумента]
					,_Fld12322RRef [ВидОперации]
					,_Fld12323RRef [ВидПередачи]
					,_Fld12324RRef [ДоговорКонтрагента]
					,_Fld12325_TYPE [Заказ_Тип],_Fld12325_RRRef [Заказ],_Fld12325_RTRef [Заказ_Вид]
					,_Fld12326 [Комментарий]
					,_Fld12327RRef [Контрагент]
					,_Fld12328 [КратностьВзаиморасчетов]
					,_Fld12329 [КурсВзаиморасчетов]
					,_Fld12330RRef [Организация]
					,_Fld12331RRef [Ответственный]
					,_Fld12332 [ОтражатьВБухгалтерскомУчете]
					,_Fld12333 [ОтражатьВНалоговомУчете]
					,_Fld12334 [ОтражатьВУправленческомУчете]
					,_Fld12335RRef [Склад]
					,_Fld12336 [СуммаДокумента]
					,_Fld12337RRef [СчетУчетаРасчетовПоТаре]
					,_Fld12338RRef [ТипЦен]
					,_Fld12339RRef [СтатьяПрочихДоходовРасходовПоТаре]
					,_Fld12340RRef [СчетУчетаДоходовПоТареБУ]
					,_Fld12341RRef [СчетУчетаРасходовПоТареБУ]
					,_Fld12342RRef [СчетУчетаДоходовПоТареНУ]
					,_Fld12343RRef [СчетУчетаРасходовПоТареНУ]
					,_Fld12344RRef [Грузоотправитель]
					,_Fld12345RRef [Грузополучатель]
					,_Fld12346 [АдресДоставки]
					,_Fld12347 [ДополнениеКАдресуДоставки]
					From _Document489(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ПередачаТоваров();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПередачаТоваров();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПередачаТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ВидПередачи = V82.Перечисления/*Ссылка*/.ВидыПередачиТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.Комментарий = Читалка.GetString(10);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(12);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(20);
							Ссылка.АдресДоставки = Читалка.GetString(30);
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(31);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПередачаТоваров СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld12321RRef [ВалютаДокумента]
					,_Fld12322RRef [ВидОперации]
					,_Fld12323RRef [ВидПередачи]
					,_Fld12324RRef [ДоговорКонтрагента]
					,_Fld12325_TYPE [Заказ_Тип],_Fld12325_RRRef [Заказ],_Fld12325_RTRef [Заказ_Вид]
					,_Fld12326 [Комментарий]
					,_Fld12327RRef [Контрагент]
					,_Fld12328 [КратностьВзаиморасчетов]
					,_Fld12329 [КурсВзаиморасчетов]
					,_Fld12330RRef [Организация]
					,_Fld12331RRef [Ответственный]
					,_Fld12332 [ОтражатьВБухгалтерскомУчете]
					,_Fld12333 [ОтражатьВНалоговомУчете]
					,_Fld12334 [ОтражатьВУправленческомУчете]
					,_Fld12335RRef [Склад]
					,_Fld12336 [СуммаДокумента]
					,_Fld12337RRef [СчетУчетаРасчетовПоТаре]
					,_Fld12338RRef [ТипЦен]
					,_Fld12339RRef [СтатьяПрочихДоходовРасходовПоТаре]
					,_Fld12340RRef [СчетУчетаДоходовПоТареБУ]
					,_Fld12341RRef [СчетУчетаРасходовПоТареБУ]
					,_Fld12342RRef [СчетУчетаДоходовПоТареНУ]
					,_Fld12343RRef [СчетУчетаРасходовПоТареНУ]
					,_Fld12344RRef [Грузоотправитель]
					,_Fld12345RRef [Грузополучатель]
					,_Fld12346 [АдресДоставки]
					,_Fld12347 [ДополнениеКАдресуДоставки]
					From _Document489(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ПередачаТоваров();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПередачаТоваров();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПередачаТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ВидПередачи = V82.Перечисления/*Ссылка*/.ВидыПередачиТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.Комментарий = Читалка.GetString(10);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(12);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(20);
							Ссылка.АдресДоставки = Читалка.GetString(30);
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(31);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПередачаТоваров СтраницаПоНомеру(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld12321RRef [ВалютаДокумента]
					,_Fld12322RRef [ВидОперации]
					,_Fld12323RRef [ВидПередачи]
					,_Fld12324RRef [ДоговорКонтрагента]
					,_Fld12325_TYPE [Заказ_Тип],_Fld12325_RRRef [Заказ],_Fld12325_RTRef [Заказ_Вид]
					,_Fld12326 [Комментарий]
					,_Fld12327RRef [Контрагент]
					,_Fld12328 [КратностьВзаиморасчетов]
					,_Fld12329 [КурсВзаиморасчетов]
					,_Fld12330RRef [Организация]
					,_Fld12331RRef [Ответственный]
					,_Fld12332 [ОтражатьВБухгалтерскомУчете]
					,_Fld12333 [ОтражатьВНалоговомУчете]
					,_Fld12334 [ОтражатьВУправленческомУчете]
					,_Fld12335RRef [Склад]
					,_Fld12336 [СуммаДокумента]
					,_Fld12337RRef [СчетУчетаРасчетовПоТаре]
					,_Fld12338RRef [ТипЦен]
					,_Fld12339RRef [СтатьяПрочихДоходовРасходовПоТаре]
					,_Fld12340RRef [СчетУчетаДоходовПоТареБУ]
					,_Fld12341RRef [СчетУчетаРасходовПоТареБУ]
					,_Fld12342RRef [СчетУчетаДоходовПоТареНУ]
					,_Fld12343RRef [СчетУчетаРасходовПоТареНУ]
					,_Fld12344RRef [Грузоотправитель]
					,_Fld12345RRef [Грузополучатель]
					,_Fld12346 [АдресДоставки]
					,_Fld12347 [ДополнениеКАдресуДоставки]
					From _Document489(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ПередачаТоваров();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПередачаТоваров();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПередачаТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(4));
							Ссылка.ВидПередачи = V82.Перечисления/*Ссылка*/.ВидыПередачиТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(5));
							Ссылка.Комментарий = Читалка.GetString(10);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(12);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(16))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(20);
							Ссылка.АдресДоставки = Читалка.GetString(30);
							Ссылка.ДополнениеКАдресуДоставки = Читалка.GetString(31);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.ДокументыОбъект.ПередачаТоваров СоздатьЭлемент()
		{
			var Объект = new V82.ДокументыОбъект.ПередачаТоваров();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.Комментарий = "";
			Объект.АдресДоставки = "";
			Объект.ДополнениеКАдресуДоставки = "";
			Объект.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийПередачаТоваров.ПустаяСсылка;
			Объект.ВидПередачи = V82.Перечисления/*Ссылка*/.ВидыПередачиТоваров.ПустаяСсылка;
			return Объект;
		}
	}
}