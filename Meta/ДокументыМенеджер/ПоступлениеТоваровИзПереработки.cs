
using System;
using System.Data.SqlClient;
using V82;
using V82.ДокументыСсылка;
using V82.Документы;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Документы//Менеджер
{
	///<summary>
	///(Общ)
	///</summary>
	public partial class ПоступлениеТоваровИзПереработки:ДокументМенеджер
	{
		
		public static ДокументыСсылка.ПоступлениеТоваровИзПереработки НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld9417 [АвтораспределениеМатериалов]
					,_Fld9418 [АвтораспределениеПрочихЗатрат]
					,_Fld9419RRef [ВалютаДокумента]
					,_Fld9420 [ВводитьСтатьиЗатратПоСтрокам]
					,_Fld9421RRef [ВидПоступления]
					,_Fld9422RRef [ДоговорКонтрагента]
					,_Fld9423RRef [Заказ]
					,_Fld9424 [Комментарий]
					,_Fld9425RRef [Контрагент]
					,_Fld9426 [КратностьВзаиморасчетов]
					,_Fld9427 [КурсВзаиморасчетов]
					,_Fld9428 [НДСВключенВСтоимость]
					,_Fld9429RRef [Организация]
					,_Fld9430RRef [Ответственный]
					,_Fld9431 [ОтражатьВБухгалтерскомУчете]
					,_Fld9432 [ОтражатьВНалоговомУчете]
					,_Fld9433 [ОтражатьВУправленческомУчете]
					,_Fld9434RRef [Подразделение]
					,_Fld9435RRef [ПодразделениеОрганизации]
					,_Fld9436_TYPE [СкладОрдер_Тип],_Fld9436_RRRef [СкладОрдер],_Fld9436_RTRef [СкладОрдер_Вид]
					,_Fld9437RRef [СтатьяЗатрат]
					,_Fld9438 [СуммаВключаетНДС]
					,_Fld9439RRef [СчетУчетаРасчетовПоТаре]
					,_Fld9440RRef [ТипЦен]
					,_Fld9441 [УчитыватьНДС]
					,_Fld9442 [ИспользоватьЗаказы]
					,_Fld9443 [ИспользоватьМатериалы]
					,_Fld9444 [ИспользоватьПрочиеЗатраты]
					,_Fld9445 [АвтораспределениеВозвратныхОтходов]
					,_Fld9446 [ИспользоватьВозвратныеОтходы]
					,_Fld9447RRef [СкладОтходов]
					From _Document404(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПоступлениеТоваровИзПереработки();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АвтораспределениеМатериалов = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.АвтораспределениеПрочихЗатрат = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.ВводитьСтатьиЗатратПоСтрокам = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ВидПоступления = V82.Перечисления/*Ссылка*/.ВидыПоступленияТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(7));
							Ссылка.Заказ = V82.ДокументыСсылка.ЗаказПоставщику.ВзятьИзКэша((byte[])Читалка.GetValue(9));
							Ссылка.Комментарий = Читалка.GetString(10);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(12);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.ИспользоватьЗаказы = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ИспользоватьМатериалы = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.ИспользоватьПрочиеЗатраты = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.АвтораспределениеВозвратныхОтходов = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(34))[0]==1;
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыСсылка.ПоступлениеТоваровИзПереработки НайтиПоНомеру(string Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld9417 [АвтораспределениеМатериалов]
					,_Fld9418 [АвтораспределениеПрочихЗатрат]
					,_Fld9419RRef [ВалютаДокумента]
					,_Fld9420 [ВводитьСтатьиЗатратПоСтрокам]
					,_Fld9421RRef [ВидПоступления]
					,_Fld9422RRef [ДоговорКонтрагента]
					,_Fld9423RRef [Заказ]
					,_Fld9424 [Комментарий]
					,_Fld9425RRef [Контрагент]
					,_Fld9426 [КратностьВзаиморасчетов]
					,_Fld9427 [КурсВзаиморасчетов]
					,_Fld9428 [НДСВключенВСтоимость]
					,_Fld9429RRef [Организация]
					,_Fld9430RRef [Ответственный]
					,_Fld9431 [ОтражатьВБухгалтерскомУчете]
					,_Fld9432 [ОтражатьВНалоговомУчете]
					,_Fld9433 [ОтражатьВУправленческомУчете]
					,_Fld9434RRef [Подразделение]
					,_Fld9435RRef [ПодразделениеОрганизации]
					,_Fld9436_TYPE [СкладОрдер_Тип],_Fld9436_RRRef [СкладОрдер],_Fld9436_RTRef [СкладОрдер_Вид]
					,_Fld9437RRef [СтатьяЗатрат]
					,_Fld9438 [СуммаВключаетНДС]
					,_Fld9439RRef [СчетУчетаРасчетовПоТаре]
					,_Fld9440RRef [ТипЦен]
					,_Fld9441 [УчитыватьНДС]
					,_Fld9442 [ИспользоватьЗаказы]
					,_Fld9443 [ИспользоватьМатериалы]
					,_Fld9444 [ИспользоватьПрочиеЗатраты]
					,_Fld9445 [АвтораспределениеВозвратныхОтходов]
					,_Fld9446 [ИспользоватьВозвратныеОтходы]
					,_Fld9447RRef [СкладОтходов]
					From _Document404(NOLOCK)
					Where _Number = @Номер";
					Команда.Parameters.AddWithValue("Номер", Номер);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПоступлениеТоваровИзПереработки();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АвтораспределениеМатериалов = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.АвтораспределениеПрочихЗатрат = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.ВводитьСтатьиЗатратПоСтрокам = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ВидПоступления = V82.Перечисления/*Ссылка*/.ВидыПоступленияТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(7));
							Ссылка.Заказ = V82.ДокументыСсылка.ЗаказПоставщику.ВзятьИзКэша((byte[])Читалка.GetValue(9));
							Ссылка.Комментарий = Читалка.GetString(10);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(12);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.ИспользоватьЗаказы = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ИспользоватьМатериалы = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.ИспользоватьПрочиеЗатраты = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.АвтораспределениеВозвратныхОтходов = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(34))[0]==1;
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПоступлениеТоваровИзПереработки Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld9417 [АвтораспределениеМатериалов]
					,_Fld9418 [АвтораспределениеПрочихЗатрат]
					,_Fld9419RRef [ВалютаДокумента]
					,_Fld9420 [ВводитьСтатьиЗатратПоСтрокам]
					,_Fld9421RRef [ВидПоступления]
					,_Fld9422RRef [ДоговорКонтрагента]
					,_Fld9423RRef [Заказ]
					,_Fld9424 [Комментарий]
					,_Fld9425RRef [Контрагент]
					,_Fld9426 [КратностьВзаиморасчетов]
					,_Fld9427 [КурсВзаиморасчетов]
					,_Fld9428 [НДСВключенВСтоимость]
					,_Fld9429RRef [Организация]
					,_Fld9430RRef [Ответственный]
					,_Fld9431 [ОтражатьВБухгалтерскомУчете]
					,_Fld9432 [ОтражатьВНалоговомУчете]
					,_Fld9433 [ОтражатьВУправленческомУчете]
					,_Fld9434RRef [Подразделение]
					,_Fld9435RRef [ПодразделениеОрганизации]
					,_Fld9436_TYPE [СкладОрдер_Тип],_Fld9436_RRRef [СкладОрдер],_Fld9436_RTRef [СкладОрдер_Вид]
					,_Fld9437RRef [СтатьяЗатрат]
					,_Fld9438 [СуммаВключаетНДС]
					,_Fld9439RRef [СчетУчетаРасчетовПоТаре]
					,_Fld9440RRef [ТипЦен]
					,_Fld9441 [УчитыватьНДС]
					,_Fld9442 [ИспользоватьЗаказы]
					,_Fld9443 [ИспользоватьМатериалы]
					,_Fld9444 [ИспользоватьПрочиеЗатраты]
					,_Fld9445 [АвтораспределениеВозвратныхОтходов]
					,_Fld9446 [ИспользоватьВозвратныеОтходы]
					,_Fld9447RRef [СкладОтходов]
					From _Document404(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ПоступлениеТоваровИзПереработки();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПоступлениеТоваровИзПереработки();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АвтораспределениеМатериалов = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.АвтораспределениеПрочихЗатрат = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.ВводитьСтатьиЗатратПоСтрокам = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ВидПоступления = V82.Перечисления/*Ссылка*/.ВидыПоступленияТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(7));
							Ссылка.Заказ = V82.ДокументыСсылка.ЗаказПоставщику.ВзятьИзКэша((byte[])Читалка.GetValue(9));
							Ссылка.Комментарий = Читалка.GetString(10);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(12);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.ИспользоватьЗаказы = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ИспользоватьМатериалы = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.ИспользоватьПрочиеЗатраты = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.АвтораспределениеВозвратныхОтходов = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(34))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПоступлениеТоваровИзПереработки ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld9417 [АвтораспределениеМатериалов]
					,_Fld9418 [АвтораспределениеПрочихЗатрат]
					,_Fld9419RRef [ВалютаДокумента]
					,_Fld9420 [ВводитьСтатьиЗатратПоСтрокам]
					,_Fld9421RRef [ВидПоступления]
					,_Fld9422RRef [ДоговорКонтрагента]
					,_Fld9423RRef [Заказ]
					,_Fld9424 [Комментарий]
					,_Fld9425RRef [Контрагент]
					,_Fld9426 [КратностьВзаиморасчетов]
					,_Fld9427 [КурсВзаиморасчетов]
					,_Fld9428 [НДСВключенВСтоимость]
					,_Fld9429RRef [Организация]
					,_Fld9430RRef [Ответственный]
					,_Fld9431 [ОтражатьВБухгалтерскомУчете]
					,_Fld9432 [ОтражатьВНалоговомУчете]
					,_Fld9433 [ОтражатьВУправленческомУчете]
					,_Fld9434RRef [Подразделение]
					,_Fld9435RRef [ПодразделениеОрганизации]
					,_Fld9436_TYPE [СкладОрдер_Тип],_Fld9436_RRRef [СкладОрдер],_Fld9436_RTRef [СкладОрдер_Вид]
					,_Fld9437RRef [СтатьяЗатрат]
					,_Fld9438 [СуммаВключаетНДС]
					,_Fld9439RRef [СчетУчетаРасчетовПоТаре]
					,_Fld9440RRef [ТипЦен]
					,_Fld9441 [УчитыватьНДС]
					,_Fld9442 [ИспользоватьЗаказы]
					,_Fld9443 [ИспользоватьМатериалы]
					,_Fld9444 [ИспользоватьПрочиеЗатраты]
					,_Fld9445 [АвтораспределениеВозвратныхОтходов]
					,_Fld9446 [ИспользоватьВозвратныеОтходы]
					,_Fld9447RRef [СкладОтходов]
					From _Document404(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ПоступлениеТоваровИзПереработки();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПоступлениеТоваровИзПереработки();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АвтораспределениеМатериалов = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.АвтораспределениеПрочихЗатрат = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.ВводитьСтатьиЗатратПоСтрокам = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ВидПоступления = V82.Перечисления/*Ссылка*/.ВидыПоступленияТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(7));
							Ссылка.Заказ = V82.ДокументыСсылка.ЗаказПоставщику.ВзятьИзКэша((byte[])Читалка.GetValue(9));
							Ссылка.Комментарий = Читалка.GetString(10);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(12);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.ИспользоватьЗаказы = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ИспользоватьМатериалы = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.ИспользоватьПрочиеЗатраты = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.АвтораспределениеВозвратныхОтходов = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(34))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПоступлениеТоваровИзПереработки ВыбратьПоНомеру(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld9417 [АвтораспределениеМатериалов]
					,_Fld9418 [АвтораспределениеПрочихЗатрат]
					,_Fld9419RRef [ВалютаДокумента]
					,_Fld9420 [ВводитьСтатьиЗатратПоСтрокам]
					,_Fld9421RRef [ВидПоступления]
					,_Fld9422RRef [ДоговорКонтрагента]
					,_Fld9423RRef [Заказ]
					,_Fld9424 [Комментарий]
					,_Fld9425RRef [Контрагент]
					,_Fld9426 [КратностьВзаиморасчетов]
					,_Fld9427 [КурсВзаиморасчетов]
					,_Fld9428 [НДСВключенВСтоимость]
					,_Fld9429RRef [Организация]
					,_Fld9430RRef [Ответственный]
					,_Fld9431 [ОтражатьВБухгалтерскомУчете]
					,_Fld9432 [ОтражатьВНалоговомУчете]
					,_Fld9433 [ОтражатьВУправленческомУчете]
					,_Fld9434RRef [Подразделение]
					,_Fld9435RRef [ПодразделениеОрганизации]
					,_Fld9436_TYPE [СкладОрдер_Тип],_Fld9436_RRRef [СкладОрдер],_Fld9436_RTRef [СкладОрдер_Вид]
					,_Fld9437RRef [СтатьяЗатрат]
					,_Fld9438 [СуммаВключаетНДС]
					,_Fld9439RRef [СчетУчетаРасчетовПоТаре]
					,_Fld9440RRef [ТипЦен]
					,_Fld9441 [УчитыватьНДС]
					,_Fld9442 [ИспользоватьЗаказы]
					,_Fld9443 [ИспользоватьМатериалы]
					,_Fld9444 [ИспользоватьПрочиеЗатраты]
					,_Fld9445 [АвтораспределениеВозвратныхОтходов]
					,_Fld9446 [ИспользоватьВозвратныеОтходы]
					,_Fld9447RRef [СкладОтходов]
					From _Document404(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ПоступлениеТоваровИзПереработки();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПоступлениеТоваровИзПереработки();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АвтораспределениеМатериалов = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.АвтораспределениеПрочихЗатрат = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.ВводитьСтатьиЗатратПоСтрокам = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ВидПоступления = V82.Перечисления/*Ссылка*/.ВидыПоступленияТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(7));
							Ссылка.Заказ = V82.ДокументыСсылка.ЗаказПоставщику.ВзятьИзКэша((byte[])Читалка.GetValue(9));
							Ссылка.Комментарий = Читалка.GetString(10);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(12);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.ИспользоватьЗаказы = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ИспользоватьМатериалы = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.ИспользоватьПрочиеЗатраты = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.АвтораспределениеВозвратныхОтходов = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(34))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПоступлениеТоваровИзПереработки СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld9417 [АвтораспределениеМатериалов]
					,_Fld9418 [АвтораспределениеПрочихЗатрат]
					,_Fld9419RRef [ВалютаДокумента]
					,_Fld9420 [ВводитьСтатьиЗатратПоСтрокам]
					,_Fld9421RRef [ВидПоступления]
					,_Fld9422RRef [ДоговорКонтрагента]
					,_Fld9423RRef [Заказ]
					,_Fld9424 [Комментарий]
					,_Fld9425RRef [Контрагент]
					,_Fld9426 [КратностьВзаиморасчетов]
					,_Fld9427 [КурсВзаиморасчетов]
					,_Fld9428 [НДСВключенВСтоимость]
					,_Fld9429RRef [Организация]
					,_Fld9430RRef [Ответственный]
					,_Fld9431 [ОтражатьВБухгалтерскомУчете]
					,_Fld9432 [ОтражатьВНалоговомУчете]
					,_Fld9433 [ОтражатьВУправленческомУчете]
					,_Fld9434RRef [Подразделение]
					,_Fld9435RRef [ПодразделениеОрганизации]
					,_Fld9436_TYPE [СкладОрдер_Тип],_Fld9436_RRRef [СкладОрдер],_Fld9436_RTRef [СкладОрдер_Вид]
					,_Fld9437RRef [СтатьяЗатрат]
					,_Fld9438 [СуммаВключаетНДС]
					,_Fld9439RRef [СчетУчетаРасчетовПоТаре]
					,_Fld9440RRef [ТипЦен]
					,_Fld9441 [УчитыватьНДС]
					,_Fld9442 [ИспользоватьЗаказы]
					,_Fld9443 [ИспользоватьМатериалы]
					,_Fld9444 [ИспользоватьПрочиеЗатраты]
					,_Fld9445 [АвтораспределениеВозвратныхОтходов]
					,_Fld9446 [ИспользоватьВозвратныеОтходы]
					,_Fld9447RRef [СкладОтходов]
					From _Document404(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ПоступлениеТоваровИзПереработки();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПоступлениеТоваровИзПереработки();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АвтораспределениеМатериалов = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.АвтораспределениеПрочихЗатрат = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.ВводитьСтатьиЗатратПоСтрокам = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ВидПоступления = V82.Перечисления/*Ссылка*/.ВидыПоступленияТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(7));
							Ссылка.Заказ = V82.ДокументыСсылка.ЗаказПоставщику.ВзятьИзКэша((byte[])Читалка.GetValue(9));
							Ссылка.Комментарий = Читалка.GetString(10);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(12);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.ИспользоватьЗаказы = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ИспользоватьМатериалы = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.ИспользоватьПрочиеЗатраты = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.АвтораспределениеВозвратныхОтходов = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(34))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ПоступлениеТоваровИзПереработки СтраницаПоНомеру(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld9417 [АвтораспределениеМатериалов]
					,_Fld9418 [АвтораспределениеПрочихЗатрат]
					,_Fld9419RRef [ВалютаДокумента]
					,_Fld9420 [ВводитьСтатьиЗатратПоСтрокам]
					,_Fld9421RRef [ВидПоступления]
					,_Fld9422RRef [ДоговорКонтрагента]
					,_Fld9423RRef [Заказ]
					,_Fld9424 [Комментарий]
					,_Fld9425RRef [Контрагент]
					,_Fld9426 [КратностьВзаиморасчетов]
					,_Fld9427 [КурсВзаиморасчетов]
					,_Fld9428 [НДСВключенВСтоимость]
					,_Fld9429RRef [Организация]
					,_Fld9430RRef [Ответственный]
					,_Fld9431 [ОтражатьВБухгалтерскомУчете]
					,_Fld9432 [ОтражатьВНалоговомУчете]
					,_Fld9433 [ОтражатьВУправленческомУчете]
					,_Fld9434RRef [Подразделение]
					,_Fld9435RRef [ПодразделениеОрганизации]
					,_Fld9436_TYPE [СкладОрдер_Тип],_Fld9436_RRRef [СкладОрдер],_Fld9436_RTRef [СкладОрдер_Вид]
					,_Fld9437RRef [СтатьяЗатрат]
					,_Fld9438 [СуммаВключаетНДС]
					,_Fld9439RRef [СчетУчетаРасчетовПоТаре]
					,_Fld9440RRef [ТипЦен]
					,_Fld9441 [УчитыватьНДС]
					,_Fld9442 [ИспользоватьЗаказы]
					,_Fld9443 [ИспользоватьМатериалы]
					,_Fld9444 [ИспользоватьПрочиеЗатраты]
					,_Fld9445 [АвтораспределениеВозвратныхОтходов]
					,_Fld9446 [ИспользоватьВозвратныеОтходы]
					,_Fld9447RRef [СкладОтходов]
					From _Document404(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ПоступлениеТоваровИзПереработки();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ПоступлениеТоваровИзПереработки();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.АвтораспределениеМатериалов = ((byte[])Читалка.GetValue(3))[0]==1;
							Ссылка.АвтораспределениеПрочихЗатрат = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.ВводитьСтатьиЗатратПоСтрокам = ((byte[])Читалка.GetValue(6))[0]==1;
							Ссылка.ВидПоступления = V82.Перечисления/*Ссылка*/.ВидыПоступленияТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(7));
							Ссылка.Заказ = V82.ДокументыСсылка.ЗаказПоставщику.ВзятьИзКэша((byte[])Читалка.GetValue(9));
							Ссылка.Комментарий = Читалка.GetString(10);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(12);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.НДСВключенВСтоимость = ((byte[])Читалка.GetValue(14))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(26))[0]==1;
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(29))[0]==1;
							Ссылка.ИспользоватьЗаказы = ((byte[])Читалка.GetValue(30))[0]==1;
							Ссылка.ИспользоватьМатериалы = ((byte[])Читалка.GetValue(31))[0]==1;
							Ссылка.ИспользоватьПрочиеЗатраты = ((byte[])Читалка.GetValue(32))[0]==1;
							Ссылка.АвтораспределениеВозвратныхОтходов = ((byte[])Читалка.GetValue(33))[0]==1;
							Ссылка.ИспользоватьВозвратныеОтходы = ((byte[])Читалка.GetValue(34))[0]==1;
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.ДокументыОбъект.ПоступлениеТоваровИзПереработки СоздатьЭлемент()
		{
			var Объект = new V82.ДокументыОбъект.ПоступлениеТоваровИзПереработки();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.Комментарий = "";
			Объект.ВидПоступления = V82.Перечисления/*Ссылка*/.ВидыПоступленияТоваров.ПустаяСсылка;
			Объект.Заказ = new V82.ДокументыСсылка.ЗаказПоставщику();
			return Объект;
		}
	}
}