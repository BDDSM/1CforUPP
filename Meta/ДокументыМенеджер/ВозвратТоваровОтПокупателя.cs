
using System;
using System.Data.SqlClient;
using V82;
using V82.ДокументыСсылка;
using V82.Документы;//Менеджер;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.Документы//Менеджер
{
	///<summary>
	///(Общ)
	///</summary>
	public partial class ВозвратТоваровОтПокупателя:ДокументМенеджер
	{
		
		public static ДокументыСсылка.ВозвратТоваровОтПокупателя НайтиПоСсылке(Guid _Ссылка)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld3667RRef [ВалютаДокумента]
					,_Fld3661 [ОтражатьВУправленческомУчете]
					,_Fld3662 [ОтражатьВБухгалтерскомУчете]
					,_Fld3660RRef [ВидОперации]
					,_Fld3672RRef [ДоговорКонтрагента]
					,_Fld3665_TYPE [СкладОрдер_Тип],_Fld3665_RRRef [СкладОрдер],_Fld3665_RTRef [СкладОрдер_Вид]
					,_Fld3676 [Комментарий]
					,_Fld3671RRef [Контрагент]
					,_Fld3677 [КратностьВзаиморасчетов]
					,_Fld3674 [КурсВзаиморасчетов]
					,_Fld3664RRef [Организация]
					,_Fld3678RRef [Ответственный]
					,_Fld3663 [ОтражатьВНалоговомУчете]
					,_Fld18947 [ОтразитьВКнигеПокупок]
					,_Fld18948 [ПокупателемВыставляетсяСчетФактураНаВозврат]
					,_Fld3675RRef [Подразделение]
					,_Fld3673_TYPE [Сделка_Тип],_Fld3673_RRRef [Сделка],_Fld3673_RTRef [Сделка_Вид]
					,_Fld3669 [СуммаВключаетНДС]
					,_Fld3670 [СуммаДокумента]
					,_Fld3679RRef [ВидПоступления]
					,_Fld18949RRef [СчетУчетаНДС]
					,_Fld3681RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld3682RRef [СчетУчетаРасчетовПоТаре]
					,_Fld3683_TYPE [Проект_Тип],_Fld3683_RRRef [Проект],_Fld3683_RTRef [Проект_Вид]
					,_Fld3684RRef [УсловиеПродаж]
					,_Fld3685RRef [ДисконтнаяКарта]
					,_Fld3680RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld3666RRef [ТипЦен]
					,_Fld3668 [УчитыватьНДС]
					,_Fld21409 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld21410 [ДатаВходящегоДокументаЭлектронногоОбмена]
					From _Document236(NOLOCK)
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", _Ссылка);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ВозвратТоваровОтПокупателя();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийВозвратТоваровОтПокупателя.ПустаяСсылка.Получить((byte[])Читалка.GetValue(6));
							Ссылка.Комментарий = Читалка.GetString(11);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(14);
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтразитьВКнигеПокупок = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ПокупателемВыставляетсяСчетФактураНаВозврат = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(25);
							Ссылка.ВидПоступления = V82.Перечисления/*Ссылка*/.ВидыПоступленияТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(26));
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(37))[0]==1;
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(38);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(39);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыСсылка.ВозвратТоваровОтПокупателя НайтиПоНомеру(string Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld3667RRef [ВалютаДокумента]
					,_Fld3661 [ОтражатьВУправленческомУчете]
					,_Fld3662 [ОтражатьВБухгалтерскомУчете]
					,_Fld3660RRef [ВидОперации]
					,_Fld3672RRef [ДоговорКонтрагента]
					,_Fld3665_TYPE [СкладОрдер_Тип],_Fld3665_RRRef [СкладОрдер],_Fld3665_RTRef [СкладОрдер_Вид]
					,_Fld3676 [Комментарий]
					,_Fld3671RRef [Контрагент]
					,_Fld3677 [КратностьВзаиморасчетов]
					,_Fld3674 [КурсВзаиморасчетов]
					,_Fld3664RRef [Организация]
					,_Fld3678RRef [Ответственный]
					,_Fld3663 [ОтражатьВНалоговомУчете]
					,_Fld18947 [ОтразитьВКнигеПокупок]
					,_Fld18948 [ПокупателемВыставляетсяСчетФактураНаВозврат]
					,_Fld3675RRef [Подразделение]
					,_Fld3673_TYPE [Сделка_Тип],_Fld3673_RRRef [Сделка],_Fld3673_RTRef [Сделка_Вид]
					,_Fld3669 [СуммаВключаетНДС]
					,_Fld3670 [СуммаДокумента]
					,_Fld3679RRef [ВидПоступления]
					,_Fld18949RRef [СчетУчетаНДС]
					,_Fld3681RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld3682RRef [СчетУчетаРасчетовПоТаре]
					,_Fld3683_TYPE [Проект_Тип],_Fld3683_RRRef [Проект],_Fld3683_RTRef [Проект_Вид]
					,_Fld3684RRef [УсловиеПродаж]
					,_Fld3685RRef [ДисконтнаяКарта]
					,_Fld3680RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld3666RRef [ТипЦен]
					,_Fld3668 [УчитыватьНДС]
					,_Fld21409 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld21410 [ДатаВходящегоДокументаЭлектронногоОбмена]
					From _Document236(NOLOCK)
					Where _Number = @Номер";
					Команда.Parameters.AddWithValue("Номер", Номер);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ВозвратТоваровОтПокупателя();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийВозвратТоваровОтПокупателя.ПустаяСсылка.Получить((byte[])Читалка.GetValue(6));
							Ссылка.Комментарий = Читалка.GetString(11);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(14);
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтразитьВКнигеПокупок = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ПокупателемВыставляетсяСчетФактураНаВозврат = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(25);
							Ссылка.ВидПоступления = V82.Перечисления/*Ссылка*/.ВидыПоступленияТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(26));
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(37))[0]==1;
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(38);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(39);
							return Ссылка;
						}
						else
						{
							return null;
						}
					}
				}
			}
		}
		
		public static ДокументыВыборка.ВозвратТоваровОтПокупателя Выбрать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld3667RRef [ВалютаДокумента]
					,_Fld3661 [ОтражатьВУправленческомУчете]
					,_Fld3662 [ОтражатьВБухгалтерскомУчете]
					,_Fld3660RRef [ВидОперации]
					,_Fld3672RRef [ДоговорКонтрагента]
					,_Fld3665_TYPE [СкладОрдер_Тип],_Fld3665_RRRef [СкладОрдер],_Fld3665_RTRef [СкладОрдер_Вид]
					,_Fld3676 [Комментарий]
					,_Fld3671RRef [Контрагент]
					,_Fld3677 [КратностьВзаиморасчетов]
					,_Fld3674 [КурсВзаиморасчетов]
					,_Fld3664RRef [Организация]
					,_Fld3678RRef [Ответственный]
					,_Fld3663 [ОтражатьВНалоговомУчете]
					,_Fld18947 [ОтразитьВКнигеПокупок]
					,_Fld18948 [ПокупателемВыставляетсяСчетФактураНаВозврат]
					,_Fld3675RRef [Подразделение]
					,_Fld3673_TYPE [Сделка_Тип],_Fld3673_RRRef [Сделка],_Fld3673_RTRef [Сделка_Вид]
					,_Fld3669 [СуммаВключаетНДС]
					,_Fld3670 [СуммаДокумента]
					,_Fld3679RRef [ВидПоступления]
					,_Fld18949RRef [СчетУчетаНДС]
					,_Fld3681RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld3682RRef [СчетУчетаРасчетовПоТаре]
					,_Fld3683_TYPE [Проект_Тип],_Fld3683_RRRef [Проект],_Fld3683_RTRef [Проект_Вид]
					,_Fld3684RRef [УсловиеПродаж]
					,_Fld3685RRef [ДисконтнаяКарта]
					,_Fld3680RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld3666RRef [ТипЦен]
					,_Fld3668 [УчитыватьНДС]
					,_Fld21409 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld21410 [ДатаВходящегоДокументаЭлектронногоОбмена]
					From _Document236(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ВозвратТоваровОтПокупателя();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ВозвратТоваровОтПокупателя();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийВозвратТоваровОтПокупателя.ПустаяСсылка.Получить((byte[])Читалка.GetValue(6));
							Ссылка.Комментарий = Читалка.GetString(11);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(14);
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтразитьВКнигеПокупок = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ПокупателемВыставляетсяСчетФактураНаВозврат = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(25);
							Ссылка.ВидПоступления = V82.Перечисления/*Ссылка*/.ВидыПоступленияТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(26));
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(37))[0]==1;
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(38);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(39);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ВозвратТоваровОтПокупателя ВыбратьПоСсылке(int Первые,Guid Мин,Guid Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld3667RRef [ВалютаДокумента]
					,_Fld3661 [ОтражатьВУправленческомУчете]
					,_Fld3662 [ОтражатьВБухгалтерскомУчете]
					,_Fld3660RRef [ВидОперации]
					,_Fld3672RRef [ДоговорКонтрагента]
					,_Fld3665_TYPE [СкладОрдер_Тип],_Fld3665_RRRef [СкладОрдер],_Fld3665_RTRef [СкладОрдер_Вид]
					,_Fld3676 [Комментарий]
					,_Fld3671RRef [Контрагент]
					,_Fld3677 [КратностьВзаиморасчетов]
					,_Fld3674 [КурсВзаиморасчетов]
					,_Fld3664RRef [Организация]
					,_Fld3678RRef [Ответственный]
					,_Fld3663 [ОтражатьВНалоговомУчете]
					,_Fld18947 [ОтразитьВКнигеПокупок]
					,_Fld18948 [ПокупателемВыставляетсяСчетФактураНаВозврат]
					,_Fld3675RRef [Подразделение]
					,_Fld3673_TYPE [Сделка_Тип],_Fld3673_RRRef [Сделка],_Fld3673_RTRef [Сделка_Вид]
					,_Fld3669 [СуммаВключаетНДС]
					,_Fld3670 [СуммаДокумента]
					,_Fld3679RRef [ВидПоступления]
					,_Fld18949RRef [СчетУчетаНДС]
					,_Fld3681RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld3682RRef [СчетУчетаРасчетовПоТаре]
					,_Fld3683_TYPE [Проект_Тип],_Fld3683_RRRef [Проект],_Fld3683_RTRef [Проект_Вид]
					,_Fld3684RRef [УсловиеПродаж]
					,_Fld3685RRef [ДисконтнаяКарта]
					,_Fld3680RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld3666RRef [ТипЦен]
					,_Fld3668 [УчитыватьНДС]
					,_Fld21409 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld21410 [ДатаВходящегоДокументаЭлектронногоОбмена]
					From _Document236(NOLOCK)
					Where _IDRRef between @Мин and @Макс
					Order by _IDRRef", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ВозвратТоваровОтПокупателя();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ВозвратТоваровОтПокупателя();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийВозвратТоваровОтПокупателя.ПустаяСсылка.Получить((byte[])Читалка.GetValue(6));
							Ссылка.Комментарий = Читалка.GetString(11);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(14);
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтразитьВКнигеПокупок = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ПокупателемВыставляетсяСчетФактураНаВозврат = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(25);
							Ссылка.ВидПоступления = V82.Перечисления/*Ссылка*/.ВидыПоступленияТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(26));
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(37))[0]==1;
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(38);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(39);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ВозвратТоваровОтПокупателя ВыбратьПоНомеру(int Первые,string Мин,string Макс)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = string.Format(@"Select top {0} 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld3667RRef [ВалютаДокумента]
					,_Fld3661 [ОтражатьВУправленческомУчете]
					,_Fld3662 [ОтражатьВБухгалтерскомУчете]
					,_Fld3660RRef [ВидОперации]
					,_Fld3672RRef [ДоговорКонтрагента]
					,_Fld3665_TYPE [СкладОрдер_Тип],_Fld3665_RRRef [СкладОрдер],_Fld3665_RTRef [СкладОрдер_Вид]
					,_Fld3676 [Комментарий]
					,_Fld3671RRef [Контрагент]
					,_Fld3677 [КратностьВзаиморасчетов]
					,_Fld3674 [КурсВзаиморасчетов]
					,_Fld3664RRef [Организация]
					,_Fld3678RRef [Ответственный]
					,_Fld3663 [ОтражатьВНалоговомУчете]
					,_Fld18947 [ОтразитьВКнигеПокупок]
					,_Fld18948 [ПокупателемВыставляетсяСчетФактураНаВозврат]
					,_Fld3675RRef [Подразделение]
					,_Fld3673_TYPE [Сделка_Тип],_Fld3673_RRRef [Сделка],_Fld3673_RTRef [Сделка_Вид]
					,_Fld3669 [СуммаВключаетНДС]
					,_Fld3670 [СуммаДокумента]
					,_Fld3679RRef [ВидПоступления]
					,_Fld18949RRef [СчетУчетаНДС]
					,_Fld3681RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld3682RRef [СчетУчетаРасчетовПоТаре]
					,_Fld3683_TYPE [Проект_Тип],_Fld3683_RRRef [Проект],_Fld3683_RTRef [Проект_Вид]
					,_Fld3684RRef [УсловиеПродаж]
					,_Fld3685RRef [ДисконтнаяКарта]
					,_Fld3680RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld3666RRef [ТипЦен]
					,_Fld3668 [УчитыватьНДС]
					,_Fld21409 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld21410 [ДатаВходящегоДокументаЭлектронногоОбмена]
					From _Document236(NOLOCK)
					Where _Code between @Мин and @Макс
					Order by _Code", Первые);
					Команда.Parameters.AddWithValue("Мин", Мин);
					Команда.Parameters.AddWithValue("Макс", Макс);
					var Выборка = new V82.ДокументыВыборка.ВозвратТоваровОтПокупателя();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ВозвратТоваровОтПокупателя();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийВозвратТоваровОтПокупателя.ПустаяСсылка.Получить((byte[])Читалка.GetValue(6));
							Ссылка.Комментарий = Читалка.GetString(11);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(14);
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтразитьВКнигеПокупок = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ПокупателемВыставляетсяСчетФактураНаВозврат = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(25);
							Ссылка.ВидПоступления = V82.Перечисления/*Ссылка*/.ВидыПоступленияТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(26));
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(37))[0]==1;
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(38);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(39);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ВозвратТоваровОтПокупателя СтраницаПоСсылке(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld3667RRef [ВалютаДокумента]
					,_Fld3661 [ОтражатьВУправленческомУчете]
					,_Fld3662 [ОтражатьВБухгалтерскомУчете]
					,_Fld3660RRef [ВидОперации]
					,_Fld3672RRef [ДоговорКонтрагента]
					,_Fld3665_TYPE [СкладОрдер_Тип],_Fld3665_RRRef [СкладОрдер],_Fld3665_RTRef [СкладОрдер_Вид]
					,_Fld3676 [Комментарий]
					,_Fld3671RRef [Контрагент]
					,_Fld3677 [КратностьВзаиморасчетов]
					,_Fld3674 [КурсВзаиморасчетов]
					,_Fld3664RRef [Организация]
					,_Fld3678RRef [Ответственный]
					,_Fld3663 [ОтражатьВНалоговомУчете]
					,_Fld18947 [ОтразитьВКнигеПокупок]
					,_Fld18948 [ПокупателемВыставляетсяСчетФактураНаВозврат]
					,_Fld3675RRef [Подразделение]
					,_Fld3673_TYPE [Сделка_Тип],_Fld3673_RRRef [Сделка],_Fld3673_RTRef [Сделка_Вид]
					,_Fld3669 [СуммаВключаетНДС]
					,_Fld3670 [СуммаДокумента]
					,_Fld3679RRef [ВидПоступления]
					,_Fld18949RRef [СчетУчетаНДС]
					,_Fld3681RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld3682RRef [СчетУчетаРасчетовПоТаре]
					,_Fld3683_TYPE [Проект_Тип],_Fld3683_RRRef [Проект],_Fld3683_RTRef [Проект_Вид]
					,_Fld3684RRef [УсловиеПродаж]
					,_Fld3685RRef [ДисконтнаяКарта]
					,_Fld3680RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld3666RRef [ТипЦен]
					,_Fld3668 [УчитыватьНДС]
					,_Fld21409 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld21410 [ДатаВходящегоДокументаЭлектронногоОбмена]
					From _Document236(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ВозвратТоваровОтПокупателя();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ВозвратТоваровОтПокупателя();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийВозвратТоваровОтПокупателя.ПустаяСсылка.Получить((byte[])Читалка.GetValue(6));
							Ссылка.Комментарий = Читалка.GetString(11);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(14);
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтразитьВКнигеПокупок = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ПокупателемВыставляетсяСчетФактураНаВозврат = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(25);
							Ссылка.ВидПоступления = V82.Перечисления/*Ссылка*/.ВидыПоступленияТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(26));
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(37))[0]==1;
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(38);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(39);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static ДокументыВыборка.ВозвратТоваровОтПокупателя СтраницаПоНомеру(int Размер,int Номер)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1000 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_Fld3667RRef [ВалютаДокумента]
					,_Fld3661 [ОтражатьВУправленческомУчете]
					,_Fld3662 [ОтражатьВБухгалтерскомУчете]
					,_Fld3660RRef [ВидОперации]
					,_Fld3672RRef [ДоговорКонтрагента]
					,_Fld3665_TYPE [СкладОрдер_Тип],_Fld3665_RRRef [СкладОрдер],_Fld3665_RTRef [СкладОрдер_Вид]
					,_Fld3676 [Комментарий]
					,_Fld3671RRef [Контрагент]
					,_Fld3677 [КратностьВзаиморасчетов]
					,_Fld3674 [КурсВзаиморасчетов]
					,_Fld3664RRef [Организация]
					,_Fld3678RRef [Ответственный]
					,_Fld3663 [ОтражатьВНалоговомУчете]
					,_Fld18947 [ОтразитьВКнигеПокупок]
					,_Fld18948 [ПокупателемВыставляетсяСчетФактураНаВозврат]
					,_Fld3675RRef [Подразделение]
					,_Fld3673_TYPE [Сделка_Тип],_Fld3673_RRRef [Сделка],_Fld3673_RTRef [Сделка_Вид]
					,_Fld3669 [СуммаВключаетНДС]
					,_Fld3670 [СуммаДокумента]
					,_Fld3679RRef [ВидПоступления]
					,_Fld18949RRef [СчетУчетаНДС]
					,_Fld3681RRef [СчетУчетаРасчетовПоАвансам]
					,_Fld3682RRef [СчетУчетаРасчетовПоТаре]
					,_Fld3683_TYPE [Проект_Тип],_Fld3683_RRRef [Проект],_Fld3683_RTRef [Проект_Вид]
					,_Fld3684RRef [УсловиеПродаж]
					,_Fld3685RRef [ДисконтнаяКарта]
					,_Fld3680RRef [СчетУчетаРасчетовСКонтрагентом]
					,_Fld3666RRef [ТипЦен]
					,_Fld3668 [УчитыватьНДС]
					,_Fld21409 [НомерВходящегоДокументаЭлектронногоОбмена]
					,_Fld21410 [ДатаВходящегоДокументаЭлектронногоОбмена]
					From _Document236(NOLOCK)";
					var Выборка = new V82.ДокументыВыборка.ВозвратТоваровОтПокупателя();
					using (var Читалка = Команда.ExecuteReader())
					{
						while (Читалка.Read())
						{
							var Ссылка = new ДокументыСсылка.ВозвратТоваровОтПокупателя();
							//ToDo: Читать нужно через GetValues()
							Ссылка.Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Ссылка.Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							Ссылка.ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							Ссылка.ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Ссылка.ОтражатьВУправленческомУчете = ((byte[])Читалка.GetValue(4))[0]==1;
							Ссылка.ОтражатьВБухгалтерскомУчете = ((byte[])Читалка.GetValue(5))[0]==1;
							Ссылка.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийВозвратТоваровОтПокупателя.ПустаяСсылка.Получить((byte[])Читалка.GetValue(6));
							Ссылка.Комментарий = Читалка.GetString(11);
							Ссылка.КратностьВзаиморасчетов = Читалка.GetDecimal(13);
							Ссылка.КурсВзаиморасчетов = Читалка.GetDecimal(14);
							Ссылка.ОтражатьВНалоговомУчете = ((byte[])Читалка.GetValue(17))[0]==1;
							Ссылка.ОтразитьВКнигеПокупок = ((byte[])Читалка.GetValue(18))[0]==1;
							Ссылка.ПокупателемВыставляетсяСчетФактураНаВозврат = ((byte[])Читалка.GetValue(19))[0]==1;
							Ссылка.СуммаВключаетНДС = ((byte[])Читалка.GetValue(24))[0]==1;
							Ссылка.СуммаДокумента = Читалка.GetDecimal(25);
							Ссылка.ВидПоступления = V82.Перечисления/*Ссылка*/.ВидыПоступленияТоваров.ПустаяСсылка.Получить((byte[])Читалка.GetValue(26));
							Ссылка.УчитыватьНДС = ((byte[])Читалка.GetValue(37))[0]==1;
							Ссылка.НомерВходящегоДокументаЭлектронногоОбмена = Читалка.GetString(38);
							Ссылка.ДатаВходящегоДокументаЭлектронногоОбмена = Читалка.GetDateTime(39);
							Выборка.Add(Ссылка);
						}
							return Выборка;
					}
				}
			}
		}
		
		public static V82.ДокументыОбъект.ВозвратТоваровОтПокупателя СоздатьЭлемент()
		{
			var Объект = new V82.ДокументыОбъект.ВозвратТоваровОтПокупателя();
			Объект._ЭтоНовый = true;
			Объект.Ссылка = Guid.NewGuid();/*http://msdn.microsoft.com/ru-ru/library/aa379322(VS.85).aspx*/
			Объект.Комментарий = "";
			Объект.НомерВходящегоДокументаЭлектронногоОбмена = "";
			Объект.ВидОперации = V82.Перечисления/*Ссылка*/.ВидыОперацийВозвратТоваровОтПокупателя.ПустаяСсылка;
			Объект.ВидПоступления = V82.Перечисления/*Ссылка*/.ВидыПоступленияТоваров.ПустаяСсылка;
			return Объект;
		}
	}
}