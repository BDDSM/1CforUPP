
using System;
using System.Data.SqlClient;
using V82;
using V82.ОбщиеОбъекты;
using V82.СправочникиСсылка;
using V82.СправочникиОбъект;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.СправочникиОбъект
{
	///<summary>
	///(Упр)
	///</summary>
	public partial class ИсточникиДанныхДляРасчетовБюджетирования:СправочникОбъект
	{
		public bool _ЭтоНовый;
		public bool ЭтоНовый()
		{
			return _ЭтоНовый;
		}
		public Guid Ссылка;
		public long Версия;
		/*static хэш сумма состава и порядка реквизитов*/
		/*версия класса восстановленного из пакета*/
		public bool ПометкаУдаления;
		public bool Предопределенный;
		public Guid Владелец;
		public bool ЭтоГруппа;
		public Guid Родитель;
		public string/*9*/ Код;
		public string/*100*/ Наименование;
		public string/*(0)*/ ИмяРегистра;//Имя регистра
		public string/*(0)*/ ПредставлениеРегистра;//Представление регистра
		public string/*(0)*/ ТекстЗапроса;//Текст запроса
		public ХранилищеЗначения НастройкиПостроителя;//Настройки построителя
		public bool ПроизвольныйЗапрос;//Произвольный запрос
		public void Записать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					if(_ЭтоНовый)
					{
						Команда.CommandText = @"
						Insert Into _Reference106(
						_IDRRef
						/*,_Version*/
						,_Marked
						,_IsMetadata
						,_ParentIDRRef
						,_Folder
						,_Code
						,_Description
						,_Fld2358
						,_Fld2359
						,_Fld2360
						,_Fld2361
						,_Fld2362)
						Values(
						@Ссылка
						/*,@Версия*/
						,@ПометкаУдаления
						,@Предопределенный
						,@Родитель
						,@ЭтоГруппа
						,@Код
						,@Наименование
						,@ИмяРегистра
						,@ПредставлениеРегистра
						,@ТекстЗапроса
						,@НастройкиПостроителя
						,@ПроизвольныйЗапрос)";
					}
					else
					{
						Команда.CommandText = @"
						Update _Reference106
						Set
						/*_IDRRef	= @Ссылка*/
						/*,_Version	= @Версия*/
						_Marked	= @ПометкаУдаления
						,_IsMetadata	= @Предопределенный
						,_ParentIDRRef	= @Родитель
						,_Folder	= @ЭтоГруппа
						,_Code	= @Код
						,_Description	= @Наименование
						,_Fld2358	= @ИмяРегистра
						,_Fld2359	= @ПредставлениеРегистра
						,_Fld2360	= @ТекстЗапроса
						,_Fld2361	= @НастройкиПостроителя
						,_Fld2362	= @ПроизвольныйЗапрос
						Where _IDRRef = @Ссылка";
					}
					Команда.Parameters.AddWithValue("Ссылка", Ссылка.ToByteArray());
					/*Команда.Parameters.AddWithValue("Версия", Версия);*/
					Команда.Parameters.AddWithValue("ПометкаУдаления", ПометкаУдаления);
					Команда.Parameters.AddWithValue("Предопределенный", Предопределенный);
					Команда.Parameters.AddWithValue("Родитель", Родитель);
					Команда.Parameters.AddWithValue("ЭтоГруппа", ЭтоГруппа?new byte[]{0}:new byte[]{1});
					Команда.Parameters.AddWithValue("Код", Код);
					Команда.Parameters.AddWithValue("Наименование", Наименование);
					Команда.Parameters.AddWithValue("ИмяРегистра", ИмяРегистра);
					Команда.Parameters.AddWithValue("ПредставлениеРегистра", ПредставлениеРегистра);
					Команда.Parameters.AddWithValue("ТекстЗапроса", ТекстЗапроса);
					Команда.Parameters.AddWithValue("НастройкиПостроителя",new byte[0]);
					Команда.Parameters.AddWithValue("ПроизвольныйЗапрос", ПроизвольныйЗапрос);
					Команда.ExecuteNonQuery();
				}
			}
		}
		public void Удалить()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Delete _Reference106
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", Ссылка.ToByteArray());
					Команда.ExecuteNonQuery();
				}
			}
		}
		/*МодульОбъекта*/

		public void ЗаполнитьДеревоРегистров(/**/)
		{
			//НовыйИсточник=мДеревоРегистров.Строки.Добавить();
			//НовыйИсточник.ОписаниеПоля="Разделы управленческого учета";
			//НовыйИсточник=мДеревоРегистров.Строки.Добавить();
			//НовыйИсточник.ОписаниеПоля="Справочная информация";
			//НовыйИсточник=мДеревоРегистров.Строки.Добавить();
			//НовыйИсточник.ОписаниеПоля="Остатки и обороты по планам счетов";
			//НовыйИсточник=мДеревоРегистров.Строки.Добавить();
			//НовыйИсточник.ОписаниеПоля="Отборы, определенные пользователем";
			//ЗапросИсточникТаблица=НовыйИсточник.Строки.Добавить();
			//ЗапросИсточникТаблица.Регистр="Запрос.НДСПоПланамПродаж";
			//ЗапросИсточникТаблица.ПредставлениеПоля="НДС по планам продаж";
			//ЗапросИсточникТаблица.ОписаниеПоля="НДС по планам продаж";
			//ЗапросИсточникТаблица.ИмяПоля="НДСпоПланамПродаж";
		}
		// ЗаполнитьДеревоРегистров()
		////////////////////////////////////////////////////////////////////////////////
		// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
		//
	}
}