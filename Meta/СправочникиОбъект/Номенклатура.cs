
using System;
using System.Data.SqlClient;
using V82;
using V82.СправочникиСсылка;
using V82.СправочникиОбъект;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.СправочникиОбъект
{
	public partial class Номенклатура:СправочникОбъект
	{
		public bool _ЭтоНовый;
		public bool ЭтоНовый()
		{
			return _ЭтоНовый;
		}
		public Guid Ссылка;
		public long Версия;
		/*static хэш сумма состава и порядка реквизитов*/
		/*версия класса восстановленного из пакета*/
		public bool ПометкаУдаления;
		public bool Предопределенный;
		public Guid Владелец;
		public bool ЭтоГруппа;
		public Guid Родитель;
		public string/*11*/ Код;
		public string/*100*/ Наименование;
		///<summary>
		///(Общ) Код производителя
		///</summary>
		public string/*(25)*/ Артикул;//Артикул 
		///<summary>
		///(Общ) Полное наименование, например, для печати
		///</summary>
		public string/*(0)*/ НаименованиеПолное;//Полное наименование
		public bool Весовой;
		///<summary>
		///(Упр)
		///</summary>
		public decimal/*(10)*/ ВесовойКоэффициентВхождения;//Весовой коэффициент вхождения
		///<summary>
		///(Упр)
		///</summary>
		public bool ВестиОперативныйУчетОстатковНЗП;//Вести оперативный учет остатков НЗП
		///<summary>
		///(Общ)
		///</summary>
		public bool ВестиПартионныйУчетПоСериям;//Вести партионный учет по сериям
		///<summary>
		///(Общ)
		///</summary>
		public bool ВестиУчетПоСериям;//Вести учет по сериям
		///<summary>
		///(Общ)
		///</summary>
		public bool ВестиУчетПоСериямВНЗП;//Вести учет по сериям в НЗП
		///<summary>
		///(Общ)
		///</summary>
		public bool ВестиУчетПоХарактеристикам;//Вести учет по характеристикам
		///<summary>
		///(Упр)
		///</summary>
		public V82.Перечисления/*Ссылка*/.ВидыВоспроизводстваНоменклатуры ВидВоспроизводства;//Вид воспроизводства
		public V82.СправочникиСсылка.ВидыНоменклатуры ВидНоменклатуры;//Вид номенклатуры
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.ЕдиницыИзмерения ЕдиницаДляОтчетов;//Единица для отчетов
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.ЕдиницыИзмерения ЕдиницаХраненияОстатков;//Единица хранения остатков
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.КлассификаторЕдиницИзмерения БазоваяЕдиницаИзмерения;//Базовая единица измерения
		///<summary>
		///(Общ)
		///</summary>
		public bool Набор;
		public V82.СправочникиСсылка.НазначенияИспользования НазначениеИспользования;//Назначение использования
		///<summary>
		///(Общ) Ставка НДС по умолчанию для оформления документов
		///</summary>
		public V82.Перечисления/*Ссылка*/.СтавкиНДС СтавкаНДС;//Ставка НДС
		///<summary>
		///(Общ) Любая дополнительная информация
		///</summary>
		public string/*(0)*/ Комментарий;
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.НоменклатурныеГруппы НоменклатурнаяГруппаЗатрат;//Номенклатурная группа затрат
		///<summary>
		///(Общ)
		///</summary>
		public bool Услуга;
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.ХранилищеДополнительнойИнформации ОсновноеИзображение;//Основное изображение
		///<summary>
		///(Упр)
		///</summary>
		public V82.СправочникиСсылка.Контрагенты ОсновнойПоставщик;//Основной поставщик
		///<summary>
		///(Упр)
		///</summary>
		public V82.СправочникиСсылка.Пользователи ОтветственныйМенеджерЗаПокупки;//Ответственный менеджер за покупки
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.НоменклатурныеГруппы НоменклатурнаяГруппа;//Номенклатурная группа
		///<summary>
		///(Регл)
		///</summary>
		public V82.СправочникиСсылка.КлассификаторСтранМира СтранаПроисхождения;//Страна происхождения
		///<summary>
		///(Регл) Номер ГТД по умолчанию
		///</summary>
		public V82.СправочникиСсылка.НомераГТД НомерГТД;//Номер ГТД
		public bool ТребуетсяВнешняяСертификация;//Требуется внешняя сертификация
		public bool ТребуетсяВнутренняяСертификация;//Требуется внутренняя сертификация
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.СтатьиЗатрат СтатьяЗатрат;//Статья затрат
		public bool ВестиСерийныеНомера;//Вести серийные номера
		///<summary>
		///(Общ)
		///</summary>
		public bool Комплект;
		public V82.Перечисления/*Ссылка*/.НаправленияВыпуска НаправлениеВыпуска;//Направление выпуска
		public V82.СправочникиСсылка.НаправленияСписанияВыпущеннойПродукции НаправлениеСписанияВыпущеннойПродукции;//Направление списания выпущенной продукции
		public V82.СправочникиСсылка.ПорядокПрисвоенияСерийныхНомеров ПорядокПрисвоенияСерийногоНомера;//Порядок присвоения серийного номера
		public V82.СправочникиСсылка.ЦеновыеГруппы ЦеноваяГруппа;//Ценовая группа
		///<summary>
		///Общероссийский классификатор продукции
		///</summary>
		public V82.СправочникиСсылка.ОбщероссийскийКлассификаторПродукции ОКП;
		///<summary>
		///(Общ)
		///</summary>
		public V82.СправочникиСсылка.ЕдиницыИзмерения ЕдиницаИзмеренияМест;//Единица измерения мест
		public string/*(0)*/ ДополнительноеОписаниеНоменклатуры;//Дополнительное описание
		public V82.СправочникиСсылка.Контрагенты Производитель;
		public V82.СправочникиСсылка.Контрагенты Импортер;
		public void Записать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					if(_ЭтоНовый)
					{
						Команда.CommandText = @"
						Insert Into _Reference162(
						_IDRRef
						/*,_Version*/
						,_Marked
						,_IsMetadata
						,_ParentIDRRef
						,_Folder
						,_Code
						,_Description
						,_Fld2904
						,_Fld2905
						,_Fld2906
						,_Fld2907
						,_Fld2908
						,_Fld2909
						,_Fld2910
						,_Fld2911
						,_Fld2912
						,_Fld2913RRef
						,_Fld2914RRef
						,_Fld2915RRef
						,_Fld2916RRef
						,_Fld2917RRef
						,_Fld2918
						,_Fld2919RRef
						,_Fld2920RRef
						,_Fld2921
						,_Fld2922RRef
						,_Fld2923
						,_Fld2924RRef
						,_Fld2925RRef
						,_Fld2926RRef
						,_Fld2927RRef
						,_Fld2928RRef
						,_Fld2929RRef
						,_Fld2930
						,_Fld2931
						,_Fld2932RRef
						,_Fld2933
						,_Fld2934
						,_Fld2935RRef
						,_Fld2936RRef
						,_Fld2937RRef
						,_Fld2938RRef
						,_Fld2939RRef
						,_Fld2940RRef
						,_Fld2941
						,_Fld2942RRef
						,_Fld2943RRef)
						Values (
						@Ссылка
						/*,@Версия*/
						,@ПометкаУдаления
						,@Предопределенный
						,@Родитель
						,@ЭтоГруппа
						,@Код
						,@Наименование
						,@Артикул
						,@НаименованиеПолное
						,@Весовой
						,@ВесовойКоэффициентВхождения
						,@ВестиОперативныйУчетОстатковНЗП
						,@ВестиПартионныйУчетПоСериям
						,@ВестиУчетПоСериям
						,@ВестиУчетПоСериямВНЗП
						,@ВестиУчетПоХарактеристикам
						,@ВидВоспроизводства
						,@ВидНоменклатуры
						,@ЕдиницаДляОтчетов
						,@ЕдиницаХраненияОстатков
						,@БазоваяЕдиницаИзмерения
						,@Набор
						,@НазначениеИспользования
						,@СтавкаНДС
						,@Комментарий
						,@НоменклатурнаяГруппаЗатрат
						,@Услуга
						,@ОсновноеИзображение
						,@ОсновнойПоставщик
						,@ОтветственныйМенеджерЗаПокупки
						,@НоменклатурнаяГруппа
						,@СтранаПроисхождения
						,@НомерГТД
						,@ТребуетсяВнешняяСертификация
						,@ТребуетсяВнутренняяСертификация
						,@СтатьяЗатрат
						,@ВестиСерийныеНомера
						,@Комплект
						,@НаправлениеВыпуска
						,@НаправлениеСписанияВыпущеннойПродукции
						,@ПорядокПрисвоенияСерийногоНомера
						,@ЦеноваяГруппа
						,@ОКП
						,@ЕдиницаИзмеренияМест
						,@ДополнительноеОписаниеНоменклатуры
						,@Производитель
						,@Импортер)";
					}
					else
					{
						Команда.CommandText = @"
						Update _Reference162
						Set
						/*_IDRRef	= @Ссылка*/
						/*,_Version	= @Версия*/
						_Marked	= @ПометкаУдаления
						,_IsMetadata	= @Предопределенный
						,_ParentIDRRef	= @Родитель
						,_Folder	= @ЭтоГруппа
						,_Code	= @Код
						,_Description	= @Наименование
						,_Fld2904	= @Артикул
						,_Fld2905	= @НаименованиеПолное
						,_Fld2906	= @Весовой
						,_Fld2907	= @ВесовойКоэффициентВхождения
						,_Fld2908	= @ВестиОперативныйУчетОстатковНЗП
						,_Fld2909	= @ВестиПартионныйУчетПоСериям
						,_Fld2910	= @ВестиУчетПоСериям
						,_Fld2911	= @ВестиУчетПоСериямВНЗП
						,_Fld2912	= @ВестиУчетПоХарактеристикам
						,_Fld2913RRef	= @ВидВоспроизводства
						,_Fld2914RRef	= @ВидНоменклатуры
						,_Fld2915RRef	= @ЕдиницаДляОтчетов
						,_Fld2916RRef	= @ЕдиницаХраненияОстатков
						,_Fld2917RRef	= @БазоваяЕдиницаИзмерения
						,_Fld2918	= @Набор
						,_Fld2919RRef	= @НазначениеИспользования
						,_Fld2920RRef	= @СтавкаНДС
						,_Fld2921	= @Комментарий
						,_Fld2922RRef	= @НоменклатурнаяГруппаЗатрат
						,_Fld2923	= @Услуга
						,_Fld2924RRef	= @ОсновноеИзображение
						,_Fld2925RRef	= @ОсновнойПоставщик
						,_Fld2926RRef	= @ОтветственныйМенеджерЗаПокупки
						,_Fld2927RRef	= @НоменклатурнаяГруппа
						,_Fld2928RRef	= @СтранаПроисхождения
						,_Fld2929RRef	= @НомерГТД
						,_Fld2930	= @ТребуетсяВнешняяСертификация
						,_Fld2931	= @ТребуетсяВнутренняяСертификация
						,_Fld2932RRef	= @СтатьяЗатрат
						,_Fld2933	= @ВестиСерийныеНомера
						,_Fld2934	= @Комплект
						,_Fld2935RRef	= @НаправлениеВыпуска
						,_Fld2936RRef	= @НаправлениеСписанияВыпущеннойПродукции
						,_Fld2937RRef	= @ПорядокПрисвоенияСерийногоНомера
						,_Fld2938RRef	= @ЦеноваяГруппа
						,_Fld2939RRef	= @ОКП
						,_Fld2940RRef	= @ЕдиницаИзмеренияМест
						,_Fld2941	= @ДополнительноеОписаниеНоменклатуры
						,_Fld2942RRef	= @Производитель
						,_Fld2943RRef	= @Импортер
						Where _IDRRef = @Ссылка";
					}
					Команда.Parameters.AddWithValue("Ссылка", Ссылка.ToByteArray());
					/*Команда.Parameters.AddWithValue("Версия", Версия);*/
					Команда.Parameters.AddWithValue("ПометкаУдаления", ПометкаУдаления);
					Команда.Parameters.AddWithValue("Предопределенный", Предопределенный);
					Команда.Parameters.AddWithValue("Родитель", Родитель);
					Команда.Parameters.AddWithValue("ЭтоГруппа", ЭтоГруппа?new byte[]{0}:new byte[]{1});
					Команда.Parameters.AddWithValue("Код", Код);
					Команда.Parameters.AddWithValue("Наименование", Наименование);
					Команда.Parameters.AddWithValue("Артикул", Артикул);
					Команда.Parameters.AddWithValue("НаименованиеПолное", НаименованиеПолное);
					Команда.Parameters.AddWithValue("Весовой", Весовой);
					Команда.Parameters.AddWithValue("ВесовойКоэффициентВхождения", ВесовойКоэффициентВхождения);
					Команда.Parameters.AddWithValue("ВестиОперативныйУчетОстатковНЗП", ВестиОперативныйУчетОстатковНЗП);
					Команда.Parameters.AddWithValue("ВестиПартионныйУчетПоСериям", ВестиПартионныйУчетПоСериям);
					Команда.Parameters.AddWithValue("ВестиУчетПоСериям", ВестиУчетПоСериям);
					Команда.Parameters.AddWithValue("ВестиУчетПоСериямВНЗП", ВестиУчетПоСериямВНЗП);
					Команда.Parameters.AddWithValue("ВестиУчетПоХарактеристикам", ВестиУчетПоХарактеристикам);
					Команда.Parameters.AddWithValue("ВидВоспроизводства", ВидВоспроизводства.Ключ());
					Команда.Parameters.AddWithValue("ВидНоменклатуры", ВидНоменклатуры.Ссылка);
					Команда.Parameters.AddWithValue("ЕдиницаДляОтчетов", ЕдиницаДляОтчетов.Ссылка);
					Команда.Parameters.AddWithValue("ЕдиницаХраненияОстатков", ЕдиницаХраненияОстатков.Ссылка);
					Команда.Parameters.AddWithValue("БазоваяЕдиницаИзмерения", БазоваяЕдиницаИзмерения.Ссылка);
					Команда.Parameters.AddWithValue("Набор", Набор);
					Команда.Parameters.AddWithValue("НазначениеИспользования", НазначениеИспользования.Ссылка);
					Команда.Parameters.AddWithValue("СтавкаНДС", СтавкаНДС.Ключ());
					Команда.Parameters.AddWithValue("Комментарий", Комментарий);
					Команда.Parameters.AddWithValue("НоменклатурнаяГруппаЗатрат", НоменклатурнаяГруппаЗатрат.Ссылка);
					Команда.Parameters.AddWithValue("Услуга", Услуга);
					Команда.Parameters.AddWithValue("ОсновноеИзображение", ОсновноеИзображение.Ссылка);
					Команда.Parameters.AddWithValue("ОсновнойПоставщик", ОсновнойПоставщик.Ссылка);
					Команда.Parameters.AddWithValue("ОтветственныйМенеджерЗаПокупки", ОтветственныйМенеджерЗаПокупки.Ссылка);
					Команда.Parameters.AddWithValue("НоменклатурнаяГруппа", НоменклатурнаяГруппа.Ссылка);
					Команда.Parameters.AddWithValue("СтранаПроисхождения", СтранаПроисхождения.Ссылка);
					Команда.Parameters.AddWithValue("НомерГТД", НомерГТД.Ссылка);
					Команда.Parameters.AddWithValue("ТребуетсяВнешняяСертификация", ТребуетсяВнешняяСертификация);
					Команда.Parameters.AddWithValue("ТребуетсяВнутренняяСертификация", ТребуетсяВнутренняяСертификация);
					Команда.Parameters.AddWithValue("СтатьяЗатрат", СтатьяЗатрат.Ссылка);
					Команда.Parameters.AddWithValue("ВестиСерийныеНомера", ВестиСерийныеНомера);
					Команда.Parameters.AddWithValue("Комплект", Комплект);
					Команда.Parameters.AddWithValue("НаправлениеВыпуска", НаправлениеВыпуска.Ключ());
					Команда.Parameters.AddWithValue("НаправлениеСписанияВыпущеннойПродукции", НаправлениеСписанияВыпущеннойПродукции.Ссылка);
					Команда.Parameters.AddWithValue("ПорядокПрисвоенияСерийногоНомера", ПорядокПрисвоенияСерийногоНомера.Ссылка);
					Команда.Parameters.AddWithValue("ЦеноваяГруппа", ЦеноваяГруппа.Ссылка);
					Команда.Parameters.AddWithValue("ОКП", ОКП.Ссылка);
					Команда.Parameters.AddWithValue("ЕдиницаИзмеренияМест", ЕдиницаИзмеренияМест.Ссылка);
					Команда.Parameters.AddWithValue("ДополнительноеОписаниеНоменклатуры", ДополнительноеОписаниеНоменклатуры);
					Команда.Parameters.AddWithValue("Производитель", Производитель.Ссылка);
					Команда.Parameters.AddWithValue("Импортер", Импортер.Ссылка);
					Команда.ExecuteNonQuery();
				}
			}
		}
		public void Удалить()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Delete _Reference162
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", Ссылка.ToByteArray());
					Команда.ExecuteNonQuery();
				}
			}
		}
		/*МодульОбъекта*/

		public void ОбработкаПроверкиЗаполнения(/*Отказ, ПроверяемыеРеквизиты*/)
		{
			if(true/*ОбменДанными.Загрузка*/)
			{
			}
			if(true/*мЭтоНеНовый = Неопределено*/)
			{
				/*мЭтоНеНовый = Не ЭтоНовый();*/
			}
			if(true/*НЕ ЭтоГруппа*/)
			{
				/*//Для элемента требуется проверять заполнение реквизита ВидНоменклатуры
*/
				/*ПроверяемыеРеквизиты.Добавить("ВидНоменклатуры");*/
			}
			if(true/*(ВидНоменклатуры.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга)*/)
			{
				/*// Базовая единица может быть не заполнена
*/
				/*НомерУдаляемогоЭлемента = ПроверяемыеРеквизиты.Найти("БазоваяЕдиницаИзмерения");*/
				if(true/*НомерУдаляемогоЭлемента <> Неопределено*/)
				{
					/*ПроверяемыеРеквизиты.Удалить(НомерУдаляемогоЭлемента);*/
				}
			}
			/*// Надо проверить владельца единицы хранения остатков.
*/
			if(true/*ЗначениеЗаполнено(ЕдиницаХраненияОстатков)
		И ЕдиницаХраненияОстатков.Владелец <> Ссылка*/)
			{
				/*ТекстСообщения = НСтр("ru = 'Неверно указан владелец единицы хранения остатков!'");*/
				/*ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ЕдиницаХраненияОстатков",, Отказ);*/
			}
			/*// Надо проверить владельца единицы для отчетов.
*/
			if(true/*ЗначениеЗаполнено(ЕдиницаДляОтчетов)
		И ЕдиницаДляОтчетов.Владелец <> Ссылка*/)
			{
				/*ТекстСообщения = НСтр("ru = 'Неверно указан владелец единицы для отчетов!'");*/
				/*ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ЕдиницаДляОтчетов",, Отказ);*/
			}
			if(true/*мЭтоНеНовый И НЕ ЭтоГруппа*/)
			{
				/*СуществуютСсылки = Неопределено;*/
				if(true/*(ВидНоменклатуры.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Услуга)
			И Ссылка.ЕдиницаХраненияОстатков <> ЕдиницаХраненияОстатков 
			И ПолныеПрава.Номенклатура_СуществуютСсылки(Ссылка, СуществуютСсылки)*/)
				{
					/*ТекстСообщения = НСтр("ru = 'Номенклатура уже участвует в товародвижении. 
                             |Изменить единицу хранения остатков уже нельзя!'");*/
					/*ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ЕдиницаХраненияОстатков",, Отказ);*/
				}
				if(true/*ВидНоменклатуры.ТипНоменклатуры <> Ссылка.ВидНоменклатуры.ТипНоменклатуры
			И ПолныеПрава.Номенклатура_СуществуютСсылки(Ссылка, СуществуютСсылки)*/)
				{
					/*ТекстСообщения = НСтр("ru = 'Номенклатура уже участвует в товародвижении. 
                             |Тип номенклатуры не может быть изменен'");*/
					/*ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ВидНоменклатуры",, Отказ);*/
				}
				if(true/*Не ВестиУчетПоСериям И Ссылка.ВестиУчетПоСериям И ПолныеПрава.Номенклатура_СуществуютСсылкиНаСерииВРегистрахНакопления(Ссылка)*/)
				{
					/*ТекстСообщения = НСтр("ru = 'Номенклатура уже участвует в товародвижении. 
                             |Признак ""Вести учет по сериям"" не может быть изменен!'");*/
					/*ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ВестиУчетПоСериям",, Отказ);*/
				}
			}
		}
		// Обработчик события элемента ПриКопировании.
		//

		public void ПриКопировании(/*ОбъектКопирования*/)
		{
			if(true/*Не ЭтоГруппа*/)
			{
				/*ЕдиницаХраненияОстатков = Неопределено;*/
				/*ЕдиницаДляОтчетов       = Неопределено;*/
				/*ЕдиницаИзмеренияМест    = Неопределено;*/
				/*ОсновноеИзображение     = Неопределено;*/
				/*НазначениеИспользования = Неопределено;*/
			}
		}
		// ПриКопировании()

		public void ПередЗаписью(/*Отказ*/)
		{
			if(true/*ОбменДанными.Загрузка*/)
			{
			}
			if(true/*ЭтоГруппа*/)
			{
				/*ПрошлыйИзмененныйРодительОбъектаДоступа = ?(Не ЭтоНовый() и Не Ссылка.Родитель = Родитель, Ссылка.Родитель, Неопределено);*/
				/*НастройкаПравДоступа.ПередЗаписьюНовогоОбъектаСПравамиДоступаПользователей(ЭтотОбъект, Отказ, Родитель);*/
			}
		}
		// ПередЗаписью()

		public void ПриЗаписи(/*Отказ*/)
		{
			if(true/*НЕ ОбменДанными.Загрузка*/)
			{
				/*НастройкаПравДоступа.ОбновитьПраваДоступаКИерархическимОбъектамПриНеобходимости(Ссылка,ПрошлыйИзмененныйРодительОбъектаДоступа, Отказ);*/
			}
		}
	}
}
