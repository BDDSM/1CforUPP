
using System;
using System.Data.SqlClient;
using V82;
using V82.СправочникиСсылка;
using V82.СправочникиОбъект;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.СправочникиОбъект
{
	public partial class ВерсииФайлов:СправочникОбъект
	{
		public bool _ЭтоНовый;
		public bool ЭтоНовый()
		{
			return _ЭтоНовый;
		}
		public Guid Ссылка;
		public long Версия;
		/*static хэш сумма состава и порядка реквизитов*/
		/*версия класса восстановленного из пакета*/
		public bool ПометкаУдаления;
		public bool Предопределенный;
		public Guid Владелец;
		public bool ЭтоГруппа;
		public Guid Родитель;
		public string/*11*/ Код;
		public string/*150*/ Наименование;
		///<summary>
		///Автор - пользователь, создавший версию
		///</summary>
		public V82.СправочникиСсылка.Пользователи Автор;
		///<summary>
		///Дата модификации файла - приведенная к Гринвичу (очищенная от смещения летнего времени и смещения зоны)
		///</summary>
		public DateTime ДатаМодификацииУниверсальная;//Дата модификации универсальная
		///<summary>
		///Дата создания версии
		///</summary>
		public DateTime ДатаСоздания;//Дата создания
		///<summary>
		///Файл версии зашифрован
		///</summary>
		public bool Зашифрован;
		///<summary>
		///Индекс иконки, соответствующей расширению файла, для показа в списке
		///</summary>
		public decimal/*(10)*/ ИндексКартинки;//Индекс картинки
		///<summary>
		///Комментарий к версии
		///</summary>
		public string/*(0)*/ Комментарий;
		///<summary>
		///Номер данной версии
		///</summary>
		public decimal/*(5)*/ НомерВерсии;//Номер версии
		///<summary>
		///Файл версии подписан ЭЦП
		///</summary>
		public bool ПодписанЭЦП;//Подписан ЭЦП
		///<summary>
		///Полное наименование (длиной до 256 символов)
		///</summary>
		public string/*(256)*/ ПолноеНаименование;//Полное наименование
		///<summary>
		///Дополнительный путь к файлу на диске (в случае если ТипХраненияФайла - на диске)
		///</summary>
		public string/*(0)*/ ПутьКФайлу;//Путь к файлу
		///<summary>
		///Размер файла версии
		///</summary>
		public decimal/*(10)*/ Размер;
		///<summary>
		///Расширение файла версии
		///</summary>
		public string/*(10)*/ Расширение;
		///<summary>
		///Родительская версия для данной версии - возможна древесная структура версий
		///</summary>
		public V82.СправочникиСсылка.ВерсииФайлов РодительскаяВерсия;//Родительская версия
		///<summary>
		///Статус извлечения текста - для фонового задания извлечения текста
		///</summary>
		public V82.Перечисления/*Ссылка*/.СтатусыИзвлеченияТекстаФайлов СтатусИзвлеченияТекста;//Статус извлечения текста
		///<summary>
		///Текст, извлеченный из файла - для полнотекстового поиска
		///</summary>
		public ХранилищеЗначения ТекстХранилище;//Текст
		///<summary>
		///Где хранятся файлы - в базе как ХранилищеЗначения или в каталоге на диске
		///</summary>
		public V82.Перечисления/*Ссылка*/.ТипыХраненияФайлов ТипХраненияФайла;//Тип хранения файла
		///<summary>
		///Ссылка на том (в случае если ТипХраненияФайла - на диске)
		///</summary>
		public V82.СправочникиСсылка.ТомаХраненияФайлов Том;
		///<summary>
		///Файл версии
		///</summary>
		public ХранилищеЗначения ФайлХранилище;//Файл
		public void Записать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					if(_ЭтоНовый)
					{
						Команда.CommandText = @"
						Insert Into _Reference44(
						_IDRRef
						/*,_Version*/
						,_Marked
						,_IsMetadata
						,_Code
						,_Description
						,_Fld1895RRef
						,_Fld1896
						,_Fld1897
						,_Fld1898
						,_Fld1899
						,_Fld1900
						,_Fld1901
						,_Fld1902
						,_Fld1903
						,_Fld1904
						,_Fld1905
						,_Fld1906
						,_Fld1907RRef
						,_Fld1908RRef
						,_Fld1909
						,_Fld1910RRef
						,_Fld1911RRef
						,_Fld1912)
						Values (
						@Ссылка
						/*,@Версия*/
						,@ПометкаУдаления
						,@Предопределенный
						,@Код
						,@Наименование
						,@Автор
						,@ДатаМодификацииУниверсальная
						,@ДатаСоздания
						,@Зашифрован
						,@ИндексКартинки
						,@Комментарий
						,@НомерВерсии
						,@ПодписанЭЦП
						,@ПолноеНаименование
						,@ПутьКФайлу
						,@Размер
						,@Расширение
						,@РодительскаяВерсия
						,@СтатусИзвлеченияТекста
						,@ТекстХранилище
						,@ТипХраненияФайла
						,@Том
						,@ФайлХранилище)";
					}
					else
					{
						Команда.CommandText = @"
						Update _Reference44
						Set
						/*_IDRRef	= @Ссылка*/
						/*,_Version	= @Версия*/
						_Marked	= @ПометкаУдаления
						,_IsMetadata	= @Предопределенный
						,_Code	= @Код
						,_Description	= @Наименование
						,_Fld1895RRef	= @Автор
						,_Fld1896	= @ДатаМодификацииУниверсальная
						,_Fld1897	= @ДатаСоздания
						,_Fld1898	= @Зашифрован
						,_Fld1899	= @ИндексКартинки
						,_Fld1900	= @Комментарий
						,_Fld1901	= @НомерВерсии
						,_Fld1902	= @ПодписанЭЦП
						,_Fld1903	= @ПолноеНаименование
						,_Fld1904	= @ПутьКФайлу
						,_Fld1905	= @Размер
						,_Fld1906	= @Расширение
						,_Fld1907RRef	= @РодительскаяВерсия
						,_Fld1908RRef	= @СтатусИзвлеченияТекста
						,_Fld1909	= @ТекстХранилище
						,_Fld1910RRef	= @ТипХраненияФайла
						,_Fld1911RRef	= @Том
						,_Fld1912	= @ФайлХранилище
						Where _IDRRef = @Ссылка";
					}
					Команда.Parameters.AddWithValue("Ссылка", Ссылка.ToByteArray());
					/*Команда.Parameters.AddWithValue("Версия", Версия);*/
					Команда.Parameters.AddWithValue("ПометкаУдаления", ПометкаУдаления);
					Команда.Parameters.AddWithValue("Предопределенный", Предопределенный);
					Команда.Parameters.AddWithValue("Код", Код);
					Команда.Parameters.AddWithValue("Наименование", Наименование);
					Команда.Parameters.AddWithValue("Автор", Автор.Ссылка);
					Команда.Parameters.AddWithValue("ДатаМодификацииУниверсальная", ДатаМодификацииУниверсальная);
					Команда.Parameters.AddWithValue("ДатаСоздания", ДатаСоздания);
					Команда.Parameters.AddWithValue("Зашифрован", Зашифрован);
					Команда.Parameters.AddWithValue("ИндексКартинки", ИндексКартинки);
					Команда.Parameters.AddWithValue("Комментарий", Комментарий);
					Команда.Parameters.AddWithValue("НомерВерсии", НомерВерсии);
					Команда.Parameters.AddWithValue("ПодписанЭЦП", ПодписанЭЦП);
					Команда.Parameters.AddWithValue("ПолноеНаименование", ПолноеНаименование);
					Команда.Parameters.AddWithValue("ПутьКФайлу", ПутьКФайлу);
					Команда.Parameters.AddWithValue("Размер", Размер);
					Команда.Parameters.AddWithValue("Расширение", Расширение);
					Команда.Parameters.AddWithValue("РодительскаяВерсия", РодительскаяВерсия.Ссылка);
					Команда.Parameters.AddWithValue("СтатусИзвлеченияТекста", СтатусИзвлеченияТекста.Ключ());
					Команда.Parameters.AddWithValue("ТипХраненияФайла", ТипХраненияФайла.Ключ());
					Команда.Parameters.AddWithValue("Том", Том.Ссылка);
					Команда.ExecuteNonQuery();
				}
			}
		}
		public void Удалить()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Delete _Reference44
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", Ссылка.ToByteArray());
					Команда.ExecuteNonQuery();
				}
			}
		}
	}
}
