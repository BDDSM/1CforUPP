
using System;
using System.Data.SqlClient;
using V82;
using V82.СправочникиСсылка;
using V82.СправочникиОбъект;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.СправочникиОбъект
{
	///<summary>
	///(Общ)
	///</summary>
	public partial class СпособыРаспределенияЗатратНаВыпуск:СправочникОбъект
	{
		public bool _ЭтоНовый;
		public bool ЭтоНовый()
		{
			return _ЭтоНовый;
		}
		public Guid Ссылка;
		public long Версия;
		/*static хэш сумма состава и порядка реквизитов*/
		/*версия класса восстановленного из пакета*/
		public bool ПометкаУдаления;
		public bool Предопределенный;
		public Guid Владелец;
		public bool ЭтоГруппа;
		public Guid Родитель;
		public string/*9*/ Код;
		public string/*50*/ Наименование;
		///<summary>
		///(Общ)
		///</summary>
		public string/*(0)*/ Комментарий;
		///<summary>
		///(Общ)
		///</summary>
		public V82.Перечисления/*Ссылка*/.СпособыРаспределенияЗатратНаВыпуск СпособРаспределенияЗатратНаВыпуск;//Способ распределения затрат на выпуск
		///<summary>
		///(Общ)
		///</summary>
		public V82.Перечисления/*Ссылка*/.ТипыФильтровПриРаспределенииЗатратНаВыпуск ТипФильтраПриРаспределенииЗатратНаВыпуск;//Тип фильтра при распределении затрат на выпуск
		public V82.Перечисления/*Ссылка*/.БазыРаспределенияЗатрат БазаРаспределенияЗатрат;//База распределения затрат
		public V82.Перечисления/*Ссылка*/.ВидыПоказателейБазыРаспределения ПоказательБазыРаспределения;//Показатель базы распределения
		public V82.СправочникиСсылка.ТипыЦенНоменклатуры ТипЦен;//Тип цен
		public V82.СправочникиСсылка.ОсновноеСырье ОсновноеСырье;//Основное сырье
		public V82.СправочникиСсылка.СпособыРаспределенияЗатратНаВыпуск СпособРаспределенияЗатратПоПодразделениям;//Способ распределения затрат по подразделениям
		public bool РаспределятьНаСобственнуюПродукцию;//Распределять на собственную продукцию
		public bool РаспределятьНаПродукциюСтороннегоПереработчика;//Распределять на продукцию стороннего переработчика
		public bool РаспределятьНаПродукциюИзДавальческогоСырья;//Распределять на продукцию из давальческого сырья
		public bool РаспределятьНаПодчиненныеПодразделения;//Распределять на подчиненные подразделения
		public bool РаспределятьНаНаработку;//Распределять на наработку
		public decimal/*(5.2)*/ Процент;
		public decimal/*(15.3)*/ Коэффициент;
		public V82.Перечисления/*Ссылка*/.ПорядкиОкругления ПорядокОкругления;//Порядок округления
		public ХранилищеЗначения НастройкиПостроителя;//Настройки построителя
		public bool ИзменитьНаПроцент;//Изменить на процент
		public bool ИзменитьНаКоэффициент;//Изменить на коэффициент
		public bool ОкруглитьДо;//Округлить до
		public ХранилищеЗначения СхемаКомпоновкиДанных;//Схема компоновки данных
		public V82.Перечисления/*Ссылка*/.ХарактерЗатрат Применимость;//Для каких расходов применять
		///<summary>
		///При использовании этой базы распределение будет выполняться алгоритмом, основанным на схемах компоновки данных
		///</summary>
		public bool ИспользоватьПростоеРаспределение;//Использовать упрощенный алгоритм распределения расходов
		public V82.Перечисления/*Ссылка*/.НаправленияРаспределенияЗатрат НаправлениеРаспределения;//Куда распределять
		///<summary>
		///(Общ)
		///</summary>
		public string/*(0)*/ КогдаПрименять;//Область, условия применения
		public V82.Перечисления/*Ссылка*/.ТипыБазРаспределения ТипБазыРаспределения;//Тип базы
		public void Записать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					if(_ЭтоНовый)
					{
						Команда.CommandText = @"
						Insert Into _Reference244(
						_IDRRef
						/*,_Version*/
						,_Marked
						,_IsMetadata
						,_Code
						,_Description
						,_Fld3740
						,_Fld3741RRef
						,_Fld3742RRef
						,_Fld3743RRef
						,_Fld3744RRef
						,_Fld3745RRef
						,_Fld3746RRef
						,_Fld3747RRef
						,_Fld3748
						,_Fld3749
						,_Fld3750
						,_Fld3751
						,_Fld3752
						,_Fld3753
						,_Fld3754
						,_Fld3755RRef
						,_Fld3756
						,_Fld3757
						,_Fld3758
						,_Fld3759
						,_Fld3760
						,_Fld3761RRef
						,_Fld3762
						,_Fld3763RRef
						,_Fld3764
						,_Fld3765RRef)
						Values(
						@Ссылка
						/*,@Версия*/
						,@ПометкаУдаления
						,@Предопределенный
						,@Код
						,@Наименование
						,@Комментарий
						,@СпособРаспределенияЗатратНаВыпуск
						,@ТипФильтраПриРаспределенииЗатратНаВыпуск
						,@БазаРаспределенияЗатрат
						,@ПоказательБазыРаспределения
						,@ТипЦен
						,@ОсновноеСырье
						,@СпособРаспределенияЗатратПоПодразделениям
						,@РаспределятьНаСобственнуюПродукцию
						,@РаспределятьНаПродукциюСтороннегоПереработчика
						,@РаспределятьНаПродукциюИзДавальческогоСырья
						,@РаспределятьНаПодчиненныеПодразделения
						,@РаспределятьНаНаработку
						,@Процент
						,@Коэффициент
						,@ПорядокОкругления
						,@НастройкиПостроителя
						,@ИзменитьНаПроцент
						,@ИзменитьНаКоэффициент
						,@ОкруглитьДо
						,@СхемаКомпоновкиДанных
						,@Применимость
						,@ИспользоватьПростоеРаспределение
						,@НаправлениеРаспределения
						,@КогдаПрименять
						,@ТипБазыРаспределения)";
					}
					else
					{
						Команда.CommandText = @"
						Update _Reference244
						Set
						/*_IDRRef	= @Ссылка*/
						/*,_Version	= @Версия*/
						_Marked	= @ПометкаУдаления
						,_IsMetadata	= @Предопределенный
						,_Code	= @Код
						,_Description	= @Наименование
						,_Fld3740	= @Комментарий
						,_Fld3741RRef	= @СпособРаспределенияЗатратНаВыпуск
						,_Fld3742RRef	= @ТипФильтраПриРаспределенииЗатратНаВыпуск
						,_Fld3743RRef	= @БазаРаспределенияЗатрат
						,_Fld3744RRef	= @ПоказательБазыРаспределения
						,_Fld3745RRef	= @ТипЦен
						,_Fld3746RRef	= @ОсновноеСырье
						,_Fld3747RRef	= @СпособРаспределенияЗатратПоПодразделениям
						,_Fld3748	= @РаспределятьНаСобственнуюПродукцию
						,_Fld3749	= @РаспределятьНаПродукциюСтороннегоПереработчика
						,_Fld3750	= @РаспределятьНаПродукциюИзДавальческогоСырья
						,_Fld3751	= @РаспределятьНаПодчиненныеПодразделения
						,_Fld3752	= @РаспределятьНаНаработку
						,_Fld3753	= @Процент
						,_Fld3754	= @Коэффициент
						,_Fld3755RRef	= @ПорядокОкругления
						,_Fld3756	= @НастройкиПостроителя
						,_Fld3757	= @ИзменитьНаПроцент
						,_Fld3758	= @ИзменитьНаКоэффициент
						,_Fld3759	= @ОкруглитьДо
						,_Fld3760	= @СхемаКомпоновкиДанных
						,_Fld3761RRef	= @Применимость
						,_Fld3762	= @ИспользоватьПростоеРаспределение
						,_Fld3763RRef	= @НаправлениеРаспределения
						,_Fld3764	= @КогдаПрименять
						,_Fld3765RRef	= @ТипБазыРаспределения
						Where _IDRRef = @Ссылка";
					}
					Команда.Parameters.AddWithValue("Ссылка", Ссылка.ToByteArray());
					/*Команда.Parameters.AddWithValue("Версия", Версия);*/
					Команда.Parameters.AddWithValue("ПометкаУдаления", ПометкаУдаления);
					Команда.Parameters.AddWithValue("Предопределенный", Предопределенный);
					Команда.Parameters.AddWithValue("Код", Код);
					Команда.Parameters.AddWithValue("Наименование", Наименование);
					Команда.Parameters.AddWithValue("Комментарий", Комментарий);
					Команда.Parameters.AddWithValue("СпособРаспределенияЗатратНаВыпуск", СпособРаспределенияЗатратНаВыпуск.Ключ());
					Команда.Parameters.AddWithValue("ТипФильтраПриРаспределенииЗатратНаВыпуск", ТипФильтраПриРаспределенииЗатратНаВыпуск.Ключ());
					Команда.Parameters.AddWithValue("БазаРаспределенияЗатрат", БазаРаспределенияЗатрат.Ключ());
					Команда.Parameters.AddWithValue("ПоказательБазыРаспределения", ПоказательБазыРаспределения.Ключ());
					Команда.Parameters.AddWithValue("ТипЦен", ТипЦен.Ссылка);
					Команда.Parameters.AddWithValue("ОсновноеСырье", ОсновноеСырье.Ссылка);
					Команда.Parameters.AddWithValue("СпособРаспределенияЗатратПоПодразделениям", СпособРаспределенияЗатратПоПодразделениям.Ссылка);
					Команда.Parameters.AddWithValue("РаспределятьНаСобственнуюПродукцию", РаспределятьНаСобственнуюПродукцию);
					Команда.Parameters.AddWithValue("РаспределятьНаПродукциюСтороннегоПереработчика", РаспределятьНаПродукциюСтороннегоПереработчика);
					Команда.Parameters.AddWithValue("РаспределятьНаПродукциюИзДавальческогоСырья", РаспределятьНаПродукциюИзДавальческогоСырья);
					Команда.Parameters.AddWithValue("РаспределятьНаПодчиненныеПодразделения", РаспределятьНаПодчиненныеПодразделения);
					Команда.Parameters.AddWithValue("РаспределятьНаНаработку", РаспределятьНаНаработку);
					Команда.Parameters.AddWithValue("Процент", Процент);
					Команда.Parameters.AddWithValue("Коэффициент", Коэффициент);
					Команда.Parameters.AddWithValue("ПорядокОкругления", ПорядокОкругления.Ключ());
					Команда.Parameters.AddWithValue("НастройкиПостроителя",new byte[0]);
					Команда.Parameters.AddWithValue("ИзменитьНаПроцент", ИзменитьНаПроцент);
					Команда.Parameters.AddWithValue("ИзменитьНаКоэффициент", ИзменитьНаКоэффициент);
					Команда.Parameters.AddWithValue("ОкруглитьДо", ОкруглитьДо);
					Команда.Parameters.AddWithValue("СхемаКомпоновкиДанных",new byte[0]);
					Команда.Parameters.AddWithValue("Применимость", Применимость.Ключ());
					Команда.Parameters.AddWithValue("ИспользоватьПростоеРаспределение", ИспользоватьПростоеРаспределение);
					Команда.Parameters.AddWithValue("НаправлениеРаспределения", НаправлениеРаспределения.Ключ());
					Команда.Parameters.AddWithValue("КогдаПрименять", КогдаПрименять);
					Команда.Parameters.AddWithValue("ТипБазыРаспределения", ТипБазыРаспределения.Ключ());
					Команда.ExecuteNonQuery();
				}
			}
		}
		public void Удалить()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Delete _Reference244
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", Ссылка.ToByteArray());
					Команда.ExecuteNonQuery();
				}
			}
		}
		/*МодульОбъекта*/
		////////////////////////////////////////////////////////////////////////////////
		// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
		// Процедура заполняет начальные настройки построителя отчетов.
		//

		public void ЗаполнитьНачальныеНастройки(/*ПостроительОтчета*/)
		{
			//СтруктураПредставлениеПолей = Новый Структура;
			//МассивОтбора = Новый Массив;
			//МассивОтбора.Добавить("Подразделение");
			//МассивОтбора.Добавить("ПодразделениеОрганизации");
			if(true/*БазаРаспределенияЗатрат = Перечисления.БазыРаспределенияЗатрат.ПоОбъемуВыпуска
	 ИЛИ БазаРаспределенияЗатрат = Перечисления.БазыРаспределенияЗатрат.ПоОбъемуПродаж*/)
			{
				/*Текст = " 
		|ВЫБРАТЬ
		|	Подразделения.Ссылка 					КАК Подразделение
		|{ВЫБРАТЬ
		|	Подразделения.Ссылка.* 					КАК Подразделение,
		|	ПодразделенияОрганизаций.Ссылка.* 		КАК ПодразделениеОрганизации
		|}
		|ИЗ 
		|	Справочник.Подразделения 			КАК Подразделения,
		|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
		|{ГДЕ
		|	Подразделения.Ссылка.* 					КАК Подразделение,
		|	ПодразделенияОрганизаций.Ссылка.* 		КАК ПодразделениеОрганизации
		|}
		|";*/
			}
			/*// Соответствие имен полей в запросе и их представлений в отчете.
*/
			//СтруктураПредставлениеПолей = Новый Структура;
			//СтруктураПредставлениеПолей.Вставить("Подразделение", 			"Подразделение");
			//СтруктураПредставлениеПолей.Вставить("ПодразделениеОрганизации", "Подразделение организации");
			if(true/*БазаРаспределенияЗатрат <> Перечисления.БазыРаспределенияЗатрат.ПоОбъемуВыпуска
	   И БазаРаспределенияЗатрат <> Перечисления.БазыРаспределенияЗатрат.ПоОбъемуПродаж*/)
			{
				//СтруктураПредставлениеПолей.Вставить("ВидЗатрат",        		"Вид затрат");
				//СтруктураПредставлениеПолей.Вставить("СтатусМатериальныхЗатрат","Статус мат. затрат");
				//СтруктураПредставлениеПолей.Вставить("ХарактерЗатрат", 			"Характер затрат");
				//СтруктураПредставлениеПолей.Вставить("СтатьяЗатрат", 			"Статья затрат");
			}
			//ПостроительОтчета.Текст = Текст;
			//УправлениеОтчетами.ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
			//УправлениеОтчетами.ОчиститьДополнительныеПоляПостроителя(ПостроительОтчета);
			if(true/*(БазаРаспределенияЗатрат = Перечисления.БазыРаспределенияЗатрат.ПоОбъемуВыпуска
		ИЛИ БазаРаспределенияЗатрат = Перечисления.БазыРаспределенияЗатрат.ПоОбъемуПродаж)
		И ПостроительОтчета.Отбор.Количество() > 0*/)
			{
				//КолвоЭлементов = ПостроительОтчета.Отбор.Количество();
			}
		}
		// ЗаполнитьНачальныеНастройки()
		////////////////////////////////////////////////////////////////////////////////
		// ОБРАБОТЧИКИ СОБЫТИЙ
		// Процедура обработчик события "ПриКопировании"
		//

		public void ПриКопировании(/*ОбъектКопирования*/)
		{
			if(true/*ОбъектКопирования.ТипБазыРаспределения = Перечисления.ТипыБазРаспределения.Предопределенный*/)
			{
				//ТипБазыРаспределения = Перечисления.ТипыБазРаспределения.СКД;
				/*// тип базы Предопределенный преобразуем в СКД
*/
			}
		}
		// Процедура обработчик события "ОбработкаПроверкиЗаполнения"
		//

		public void ОбработкаПроверкиЗаполнения(/*Отказ, ПроверяемыеРеквизиты*/)
		{
			if(true/*ОбменДанными.Загрузка*/)
			{
			}
			if(true/*БазаРаспределенияЗатрат = Перечисления.БазыРаспределенияЗатрат.ПоСтоимостиЗатрат
	 И ТипФильтраПриРаспределенииЗатратНаВыпуск = Перечисления.ТипыФильтровПриРаспределенииЗатратНаВыпуск.Продукция*/)
			{
				//Заголовок = НСтр("ru = 'Запись способа распределения на выпуск ""%Наименование%""'");
				//Заголовок = СтрЗаменить(Заголовок, "%Наименование%", Наименование);
				//ОбщегоНазначения.СообщитьОбОшибке(Нстр("ru = 'Для базы ""По стоимости затрат"" нельзя использовать направление распределения ""На некоторую продукцию""'"), Отказ, Заголовок,СтатусСообщения.Важное, Ссылка);
			}
			/*// Исключим из проверки реквизиты табличных частей, не используемых для указанного направления распределения
*/
			//ТабличныеЧасти 			  = Справочники.СпособыРаспределенияЗатратНаВыпуск.ПолучитьИменаНеиспользуемыхТабличныхЧастей(ЭтотОбъект);
			//СтруктураНеиспользуемыхТЧ = Новый Структура(ТабличныеЧасти);
			//НепроверяемыеРеквизиты 	  = Новый Массив;
			/*// Удалим реквизиты, которые не надо проверять, из массива проверяемых реквизитов
*/
		}
		// Процедура обработчик события "ПередЗаписью"
		//

		public void ПередЗаписью(/*Отказ*/)
		{
			if(true/*ОбменДанными.Загрузка*/)
			{
			}
			/*// Очистим неиспользуемые табличные части
*/
			//ТабличныеЧасти 		 = Справочники.СпособыРаспределенияЗатратНаВыпуск.ПолучитьИменаНеиспользуемыхТабличныхЧастей(ЭтотОбъект);
			//СтруктураОчищаемыхТЧ = Новый Структура(ТабличныеЧасти);
			/*// Очистим СКД если она не используется в текущем способе распределения
*/
			if(true/*ТипБазыРаспределения <> Перечисления.ТипыБазРаспределения.Предопределенный
	 И ТипБазыРаспределения <> Перечисления.ТипыБазРаспределения.СКД
	 И СхемаКомпоновкиДанных.Получить() <> Неопределено*/)
			{
				//СхемаКомпоновкиДанных = Новый ХранилищеЗначения(Неопределено);
			}
			/*// Очистим настройки построителя отчета если они не используются в текущем способе распределения
*/
			if(true/*ИспользоватьПростоеРаспределение
	 И НастройкиПостроителя.Получить() <> Неопределено*/)
			{
				//НастройкиПостроителя = Новый ХранилищеЗначения(Неопределено);
			}
		}
	}
}