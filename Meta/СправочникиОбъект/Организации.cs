
using System;
using System.Data.SqlClient;
using System.Globalization;
using System.Runtime.Serialization;
using ProtoBuf;/*https://github.com/ServiceStack/ServiceStack/tree/master/lib*/
using ServiceStack.Text;/*https://github.com/ServiceStack/ServiceStack.Text*/
using V82;
using V82.ОбщиеОбъекты;
using V82.СправочникиСсылка;
using V82.СправочникиОбъект;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.СправочникиОбъект
{
	///<summary>
	///(Общ)
	///</summary>
	[ProtoContract]
	[DataContract]
	public partial class Организации:СправочникОбъект
	{
		public bool _ЭтоНовый;
		public bool ЭтоНовый()
		{
			return _ЭтоНовый;
		}
		[DataMember]
		[ProtoMember(1)]
		public Guid Ссылка {get;set;}
		[DataMember]
		[ProtoMember(2)]
		public long Версия {get;set;}
		[DataMember]
		[ProtoMember(3)]
		public string ВерсияДанных {get;set;}
		/*static хэш сумма состава и порядка реквизитов*/
		/*версия класса восстановленного из пакета*/
		[DataMember]
		[ProtoMember(4)]
		public bool ПометкаУдаления {get;set;}
		[DataMember]
		[ProtoMember(5)]
		public bool Предопределенный {get;set;}
		[DataMember]
		[ProtoMember(6)]
		public string/*9*/ Код {get;set;}
		[DataMember]
		[ProtoMember(7)]
		public string/*50*/ Наименование {get;set;}
		///<summary>
		///(Общ)
		///</summary>
		[DataMember]
		[ProtoMember(8)]
		public string/*(3)*/ Префикс {get;set;}
		///<summary>
		///(Регл)
		///</summary>
		[DataMember]
		[ProtoMember(9)]
		public string/*(12)*/ ИНН {get;set;}
		///<summary>
		///(Регл)
		///</summary>
		[DataMember]
		[ProtoMember(10)]
		public string/*(9)*/ КПП {get;set;}
		///<summary>
		///(Регл)
		///</summary>
		[DataMember]
		[ProtoMember(11)]
		public string/*(14)*/ РегистрационныйНомерПФР {get;set;}//Регистрационный номер ПФР
		///<summary>
		///(Общ)
		///</summary>
		[DataMember]
		[ProtoMember(12)]
		public V82.СправочникиСсылка.Организации ГоловнаяОрганизация {get;set;}//Головная организация
		///<summary>
		///(Общ)
		///</summary>
		[DataMember]
		[ProtoMember(13)]
		public string/*(0)*/ НаименованиеПолное {get;set;}//Полное наименование
		///<summary>
		///(Регл)
		///</summary>
		[DataMember]
		[ProtoMember(14)]
		public string/*(10)*/ КодПоОКПО {get;set;}//Код по ОКПО
		///<summary>
		///(Регл)
		///</summary>
		[DataMember]
		[ProtoMember(15)]
		public string/*(11)*/ КодПоОКАТО {get;set;}//Код по ОКАТО
		///<summary>
		///(Регл)
		///</summary>
		[DataMember]
		[ProtoMember(16)]
		public string/*(4)*/ КодИМНС {get;set;}//Код ИФНС
		///<summary>
		///(Регл)
		///</summary>
		[DataMember]
		[ProtoMember(17)]
		public decimal/*(5.2)*/ РайонныйКоэффициент {get;set;}//Районный коэффициент
		///<summary>
		///(Общ)
		///</summary>
		[DataMember]
		[ProtoMember(18)]
		public V82.Перечисления/*Ссылка*/.ЮрФизЛицо ЮрФизЛицо {get;set;}//Юр. / физ. лицо
		///<summary>
		///(Регл)
		///</summary>
		[DataMember]
		[ProtoMember(19)]
		public V82.СправочникиСсылка.ТерриториальныеУсловия ТерриториальныеУсловияПФР {get;set;}//Территориальные условия ПФР
		///<summary>
		///(Общ)
		///</summary>
		[DataMember]
		[ProtoMember(20)]
		public V82.СправочникиСсылка.БанковскиеСчета ОсновнойБанковскийСчет {get;set;}//Основной банковский счет
		[DataMember]
		[ProtoMember(21)]
		public V82.Перечисления/*Ссылка*/.ВидыСтавокЕСНиПФР ВидСтавокЕСНиПФР {get;set;}//Вид ставок ЕСН и ПФР
		[DataMember]
		[ProtoMember(22)]
		public string/*(150)*/ НаименованиеПлательщикаПриПеречисленииНалогов {get;set;}//Наименование плательщика при перечислении в бюджет
		[DataMember]
		[ProtoMember(23)]
		public bool ИностраннаяОрганизация {get;set;}//Иностранная организация
		[DataMember]
		[ProtoMember(24)]
		public DateTime ДатаРегистрации {get;set;}//Дата государственной регистрации
		[DataMember]
		[ProtoMember(25)]
		public string/*(2)*/ КодОКОПФ {get;set;}//Код ОКОПФ
		[DataMember]
		[ProtoMember(26)]
		public string/*(254)*/ НаименованиеОКОПФ {get;set;}//Наименование ОКОПФ
		[DataMember]
		[ProtoMember(27)]
		public string/*(2)*/ КодОКФС {get;set;}//Код ОКФС
		[DataMember]
		[ProtoMember(28)]
		public string/*(254)*/ НаименованиеОКФС {get;set;}//Наименование ОКФС
		[DataMember]
		[ProtoMember(29)]
		public string/*(25)*/ СвидетельствоСерияНомер {get;set;}//Серия и номер свидетельства о постановке на учет
		[DataMember]
		[ProtoMember(30)]
		public DateTime СвидетельствоДатаВыдачи {get;set;}//Дата выдачи свидетельства о постановке на учет
		[DataMember]
		[ProtoMember(31)]
		public string/*(254)*/ СвидетельствоНаименованиеОргана {get;set;}//Наименование налогового органа, выдавшего свидетельство
		[DataMember]
		[ProtoMember(32)]
		public string/*(4)*/ СвидетельствоКодОргана {get;set;}//Код налогового органа, выдавшего свидетельство
		///<summary>
		///Заполняется в случае, если организация не российская
		///</summary>
		[DataMember]
		[ProtoMember(33)]
		public V82.СправочникиСсылка.КлассификаторСтранМира СтранаРегистрации {get;set;}//Страна регистрации
		[DataMember]
		[ProtoMember(34)]
		public V82.СправочникиСсылка.КлассификаторСтранМира СтранаПостоянногоМестонахождения {get;set;}//Страна постоянного местонахождения
		[DataMember]
		[ProtoMember(35)]
		public string/*(50)*/ КодВСтранеРегистрации {get;set;}//Код налогоплательщика в стране регистрации
		[DataMember]
		[ProtoMember(36)]
		public string/*(15)*/ ОГРН {get;set;}
		///<summary>
		///(Общ)
		///</summary>
		[DataMember]
		[ProtoMember(37)]
		public string/*(254)*/ НаименованиеИнострОрганизации {get;set;}//Полное наименование иностранной организации
		///<summary>
		///(Регл)
		///</summary>
		[DataMember]
		[ProtoMember(38)]
		public string/*(14)*/ РегистрационныйНомерФСС {get;set;}//Регистрационный номер ФСС
		[DataMember]
		[ProtoMember(39)]
		public string/*(254)*/ НаименованиеИМНС {get;set;}//Наименование ИФНС
		[DataMember]
		[ProtoMember(40)]
		public string/*(8)*/ КодОКВЭД {get;set;}//Код основного вида деятельности по ОКВЭД
		[DataMember]
		[ProtoMember(41)]
		public string/*(254)*/ НаименованиеОКВЭД {get;set;}//Наименование основного вида деятельности по ОКВЭД
		[DataMember]
		[ProtoMember(42)]
		public string/*(5)*/ КодОКОНХ {get;set;}//Код ОКОНХ
		[DataMember]
		[ProtoMember(43)]
		public V82.СправочникиСсылка.ФизическиеЛица ИндивидуальныйПредприниматель {get;set;}//Индивидуальный предприниматель
		[DataMember]
		[ProtoMember(44)]
		public bool УдалитьОбменЗадействован {get;set;}//Удалить обмен задействован
		[DataMember]
		[ProtoMember(45)]
		public string/*(7)*/ ОбменКодАбонента {get;set;}//Код абонента
		[DataMember]
		[ProtoMember(46)]
		public string/*(0)*/ ОбменКаталогОтправкиДанныхОтчетности {get;set;}//Каталог выкладки данных отчетности для обмена с ИФНС
		[DataMember]
		[ProtoMember(47)]
		public string/*(0)*/ ОбменКаталогПрограммыЭлектроннойПочты {get;set;}//Каталог программы электронной почты для обмена с ИФНС
		///<summary>
		///(Регл)
		///</summary>
		[DataMember]
		[ProtoMember(48)]
		public decimal/*(5.2)*/ РайонныйКоэффициентРФ {get;set;}//Районный коэффициент РФ
		///<summary>
		///(Общ)
		///</summary>
		[DataMember]
		[ProtoMember(49)]
		public bool ОтражатьВРегламентированномУчете {get;set;}//Отражать в регламентированном учете
		[DataMember]
		[ProtoMember(50)]
		public string/*(4)*/ КодИФНСПолучателя {get;set;}//Код ИФНС - получателя отчетности
		[DataMember]
		[ProtoMember(51)]
		public string/*(100)*/ НаименованиеТерриториальногоОрганаПФР {get;set;}//Наименование территориального органа ПФР
		[DataMember]
		[ProtoMember(52)]
		public string/*(160)*/ НаименованиеСокращенное {get;set;}//Наименование сокращенное
		[DataMember]
		[ProtoMember(53)]
		public V82.Перечисления/*Ссылка*/.ВидыОбменаСКонтролирующимиОрганами ВидОбменаСКонтролирующимиОрганами {get;set;}//Вид обмена с контролирующими органами
		[DataMember]
		[ProtoMember(54)]
		public V82.СправочникиСсылка.УчетныеЗаписиДокументооборота УчетнаяЗаписьОбмена {get;set;}//Учетная запись обмена
		[DataMember]
		[ProtoMember(55)]
		public string/*(7)*/ КодОрганаПФР {get;set;}//Код органа ПФР
		///<summary>
		///Код органа Федеральной службы государственной статистики
		///</summary>
		[DataMember]
		[ProtoMember(56)]
		public string/*(5)*/ КодОрганаФСГС {get;set;}//Код органа ФСГС
		///<summary>
		///(Регл)
		///</summary>
		[DataMember]
		[ProtoMember(57)]
		public string/*(14)*/ ДополнительныйКодФСС {get;set;}//Дополнительный код ФСС
		///<summary>
		///(Регл)
		///</summary>
		[DataMember]
		[ProtoMember(58)]
		public string/*(5)*/ КодПодчиненностиФСС {get;set;}//Код подчиненности ФСС
		[DataMember]
		[ProtoMember(59)]
		public decimal/*(5)*/ ЦифровойИндексОбособленногоПодразделения {get;set;}//Цифровой индекс обособленного подразделения:
		///<summary>
		///(Регл)
		///</summary>
		[DataMember]
		[ProtoMember(60)]
		public string/*(15)*/ РегистрационныйНомерТФОМС {get;set;}//Регистрационный номер ТФОМС
		///<summary>
		///(Регл)
		///</summary>
		[DataMember]
		[ProtoMember(61)]
		public string/*(14)*/ ИПРегистрационныйНомерПФР {get;set;}//Регистрационный номер ПФР индивидуального предпринимателя
		///<summary>
		///(Регл)
		///</summary>
		[DataMember]
		[ProtoMember(62)]
		public string/*(10)*/ ИПРегистрационныйНомерФСС {get;set;}//Регистрационный номер ФСС индивидуального предпринимателя
		///<summary>
		///(Регл)
		///</summary>
		[DataMember]
		[ProtoMember(63)]
		public string/*(5)*/ ИПКодПодчиненностиФСС {get;set;}//Код подчиненности ФСС индивидуального предпринимателя
		///<summary>
		///(Регл)
		///</summary>
		[DataMember]
		[ProtoMember(64)]
		public string/*(15)*/ ИПРегистрационныйНомерТФОМС {get;set;}//Регистрационный номер ТФОМС индивидуального предпринимателя
		[DataMember]
		[ProtoMember(65)]
		public string/*(135)*/ НаименованиеТерриториальногоОрганаФСС {get;set;}//Наименование территориального органа ФСС
		public void Записать()
		{
			//Установка блокировки элемента на горизантально масштабированный кластер.
			//Опционально введение тайм аута на запись одного и того же объекта, не чаще раза в 5-секунд. Защита от спама. упращение алгоритма блокировки.
			//Выделение сервиса для блокировки элемента и генерации кода
			//Выполнение операций контроля без обращений к sql-серверу.
			//Контроль конфликта блокировок.
			//Контроль загрузки булкинсертом гетерогенной коллекции.
			//Контроль уникальности кода для справочников.
			//Контроль уникальности номера для документов, в границах префикса.
			//Контроль владельца, он не может быть группой.
			//Контроль владельца он должен быть задан.
			//Контроль родителя он должен быть группой.
			//Контроль количества уровней, должен соотвествовать метаданным.
			//Контроль версии, объект не должен был быть записан перед чтением текущей записи, алгоритм версионника.
			//Контроль уникальности ссылки
			//Контроль зацикливания
			//Опционально контроль битых ссылок.
			//Соблюдейние транзакционности. ПередЗаписью. Открытие транзации. Валидации. ПриЗаписи. Фиксация транзакции. Информирование о записи элемента.
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					if(_ЭтоНовый)
					{
						Команда.CommandText = @"
						Insert Into _Reference105(
						_IDRRef
						/*,_Version*/
						,_Marked
						,_IsMetadata
						,_Code
						,_Description
						,_Fld1550
						,_Fld1526
						,_Fld1536
						,_Fld1553
						,_Fld1524RRef
						,_Fld1543
						,_Fld1535
						,_Fld1534
						,_Fld1529
						,_Fld1551
						,_Fld1562RRef
						,_Fld1561RRef
						,_Fld1549RRef
						,_Fld1523RRef
						,_Fld1542
						,_Fld1527
						,_Fld1525
						,_Fld1532
						,_Fld1540
						,_Fld1533
						,_Fld1541
						,_Fld1558
						,_Fld1555
						,_Fld1557
						,_Fld1556
						,_Fld1560RRef
						,_Fld1559RRef
						,_Fld1528
						,_Fld1548
						,_Fld1538
						,_Fld1554
						,_Fld1537
						,_Fld1530
						,_Fld1539
						,_Fld1531
						,_Fld1563RRef
						,_Fld1544
						,_Fld1547
						,_Fld1545
						,_Fld1546
						,_Fld1552
						,_Fld1564
						,_Fld22976
						,_Fld22669
						,_Fld26550
						,_Fld26551RRef
						,_Fld26552RRef
						,_Fld26553
						,_Fld26554
						,_Fld26555
						,_Fld26556
						,_Fld26557
						,_Fld26558
						,_Fld26559
						,_Fld26560
						,_Fld26561
						,_Fld26562
						,_Fld26563)
						Values(
						@Ссылка
						/*,@Версия*/
						,@ПометкаУдаления
						,@Предопределенный
						,@Код
						,@Наименование
						,@Префикс
						,@ИНН
						,@КПП
						,@РегистрационныйНомерПФР
						,@ГоловнаяОрганизация
						,@НаименованиеПолное
						,@КодПоОКПО
						,@КодПоОКАТО
						,@КодИМНС
						,@РайонныйКоэффициент
						,@ЮрФизЛицо
						,@ТерриториальныеУсловияПФР
						,@ОсновнойБанковскийСчет
						,@ВидСтавокЕСНиПФР
						,@НаименованиеПлательщикаПриПеречисленииНалогов
						,@ИностраннаяОрганизация
						,@ДатаРегистрации
						,@КодОКОПФ
						,@НаименованиеОКОПФ
						,@КодОКФС
						,@НаименованиеОКФС
						,@СвидетельствоСерияНомер
						,@СвидетельствоДатаВыдачи
						,@СвидетельствоНаименованиеОргана
						,@СвидетельствоКодОргана
						,@СтранаРегистрации
						,@СтранаПостоянногоМестонахождения
						,@КодВСтранеРегистрации
						,@ОГРН
						,@НаименованиеИнострОрганизации
						,@РегистрационныйНомерФСС
						,@НаименованиеИМНС
						,@КодОКВЭД
						,@НаименованиеОКВЭД
						,@КодОКОНХ
						,@ИндивидуальныйПредприниматель
						,@УдалитьОбменЗадействован
						,@ОбменКодАбонента
						,@ОбменКаталогОтправкиДанныхОтчетности
						,@ОбменКаталогПрограммыЭлектроннойПочты
						,@РайонныйКоэффициентРФ
						,@ОтражатьВРегламентированномУчете
						,@КодИФНСПолучателя
						,@НаименованиеТерриториальногоОрганаПФР
						,@НаименованиеСокращенное
						,@ВидОбменаСКонтролирующимиОрганами
						,@УчетнаяЗаписьОбмена
						,@КодОрганаПФР
						,@КодОрганаФСГС
						,@ДополнительныйКодФСС
						,@КодПодчиненностиФСС
						,@ЦифровойИндексОбособленногоПодразделения
						,@РегистрационныйНомерТФОМС
						,@ИПРегистрационныйНомерПФР
						,@ИПРегистрационныйНомерФСС
						,@ИПКодПодчиненностиФСС
						,@ИПРегистрационныйНомерТФОМС
						,@НаименованиеТерриториальногоОрганаФСС)";
					}
					else
					{
						Команда.CommandText = @"
						Update _Reference105
						Set
						/*_IDRRef	= @Ссылка*/
						/*,_Version	= @Версия*/
						_Marked	= @ПометкаУдаления
						,_IsMetadata	= @Предопределенный
						,_Code	= @Код
						,_Description	= @Наименование
						,_Fld1550	= @Префикс
						,_Fld1526	= @ИНН
						,_Fld1536	= @КПП
						,_Fld1553	= @РегистрационныйНомерПФР
						,_Fld1524RRef	= @ГоловнаяОрганизация
						,_Fld1543	= @НаименованиеПолное
						,_Fld1535	= @КодПоОКПО
						,_Fld1534	= @КодПоОКАТО
						,_Fld1529	= @КодИМНС
						,_Fld1551	= @РайонныйКоэффициент
						,_Fld1562RRef	= @ЮрФизЛицо
						,_Fld1561RRef	= @ТерриториальныеУсловияПФР
						,_Fld1549RRef	= @ОсновнойБанковскийСчет
						,_Fld1523RRef	= @ВидСтавокЕСНиПФР
						,_Fld1542	= @НаименованиеПлательщикаПриПеречисленииНалогов
						,_Fld1527	= @ИностраннаяОрганизация
						,_Fld1525	= @ДатаРегистрации
						,_Fld1532	= @КодОКОПФ
						,_Fld1540	= @НаименованиеОКОПФ
						,_Fld1533	= @КодОКФС
						,_Fld1541	= @НаименованиеОКФС
						,_Fld1558	= @СвидетельствоСерияНомер
						,_Fld1555	= @СвидетельствоДатаВыдачи
						,_Fld1557	= @СвидетельствоНаименованиеОргана
						,_Fld1556	= @СвидетельствоКодОргана
						,_Fld1560RRef	= @СтранаРегистрации
						,_Fld1559RRef	= @СтранаПостоянногоМестонахождения
						,_Fld1528	= @КодВСтранеРегистрации
						,_Fld1548	= @ОГРН
						,_Fld1538	= @НаименованиеИнострОрганизации
						,_Fld1554	= @РегистрационныйНомерФСС
						,_Fld1537	= @НаименованиеИМНС
						,_Fld1530	= @КодОКВЭД
						,_Fld1539	= @НаименованиеОКВЭД
						,_Fld1531	= @КодОКОНХ
						,_Fld1563RRef	= @ИндивидуальныйПредприниматель
						,_Fld1544	= @УдалитьОбменЗадействован
						,_Fld1547	= @ОбменКодАбонента
						,_Fld1545	= @ОбменКаталогОтправкиДанныхОтчетности
						,_Fld1546	= @ОбменКаталогПрограммыЭлектроннойПочты
						,_Fld1552	= @РайонныйКоэффициентРФ
						,_Fld1564	= @ОтражатьВРегламентированномУчете
						,_Fld22976	= @КодИФНСПолучателя
						,_Fld22669	= @НаименованиеТерриториальногоОрганаПФР
						,_Fld26550	= @НаименованиеСокращенное
						,_Fld26551RRef	= @ВидОбменаСКонтролирующимиОрганами
						,_Fld26552RRef	= @УчетнаяЗаписьОбмена
						,_Fld26553	= @КодОрганаПФР
						,_Fld26554	= @КодОрганаФСГС
						,_Fld26555	= @ДополнительныйКодФСС
						,_Fld26556	= @КодПодчиненностиФСС
						,_Fld26557	= @ЦифровойИндексОбособленногоПодразделения
						,_Fld26558	= @РегистрационныйНомерТФОМС
						,_Fld26559	= @ИПРегистрационныйНомерПФР
						,_Fld26560	= @ИПРегистрационныйНомерФСС
						,_Fld26561	= @ИПКодПодчиненностиФСС
						,_Fld26562	= @ИПРегистрационныйНомерТФОМС
						,_Fld26563	= @НаименованиеТерриториальногоОрганаФСС
						Where _IDRRef = @Ссылка";
					}
					Команда.Parameters.AddWithValue("Ссылка", Ссылка.ToByteArray());
					/*Команда.Parameters.AddWithValue("Версия", Версия);*/
					Команда.Parameters.AddWithValue("ПометкаУдаления", ПометкаУдаления);
					Команда.Parameters.AddWithValue("Предопределенный", Предопределенный);
					Команда.Parameters.AddWithValue("Код", Код);
					Команда.Parameters.AddWithValue("Наименование", Наименование);
					Команда.Parameters.AddWithValue("Префикс", Префикс);
					Команда.Parameters.AddWithValue("ИНН", ИНН);
					Команда.Parameters.AddWithValue("КПП", КПП);
					Команда.Parameters.AddWithValue("РегистрационныйНомерПФР", РегистрационныйНомерПФР);
					Команда.Parameters.AddWithValue("ГоловнаяОрганизация", ГоловнаяОрганизация.Ссылка);
					Команда.Parameters.AddWithValue("НаименованиеПолное", НаименованиеПолное);
					Команда.Parameters.AddWithValue("КодПоОКПО", КодПоОКПО);
					Команда.Parameters.AddWithValue("КодПоОКАТО", КодПоОКАТО);
					Команда.Parameters.AddWithValue("КодИМНС", КодИМНС);
					Команда.Parameters.AddWithValue("РайонныйКоэффициент", РайонныйКоэффициент);
					Команда.Parameters.AddWithValue("ЮрФизЛицо", ЮрФизЛицо.Ключ());
					Команда.Parameters.AddWithValue("ТерриториальныеУсловияПФР", ТерриториальныеУсловияПФР.Ссылка);
					Команда.Parameters.AddWithValue("ОсновнойБанковскийСчет", ОсновнойБанковскийСчет.Ссылка);
					Команда.Parameters.AddWithValue("ВидСтавокЕСНиПФР", ВидСтавокЕСНиПФР.Ключ());
					Команда.Parameters.AddWithValue("НаименованиеПлательщикаПриПеречисленииНалогов", НаименованиеПлательщикаПриПеречисленииНалогов);
					Команда.Parameters.AddWithValue("ИностраннаяОрганизация", ИностраннаяОрганизация);
					Команда.Parameters.AddWithValue("ДатаРегистрации", ДатаРегистрации);
					Команда.Parameters.AddWithValue("КодОКОПФ", КодОКОПФ);
					Команда.Parameters.AddWithValue("НаименованиеОКОПФ", НаименованиеОКОПФ);
					Команда.Parameters.AddWithValue("КодОКФС", КодОКФС);
					Команда.Parameters.AddWithValue("НаименованиеОКФС", НаименованиеОКФС);
					Команда.Parameters.AddWithValue("СвидетельствоСерияНомер", СвидетельствоСерияНомер);
					Команда.Parameters.AddWithValue("СвидетельствоДатаВыдачи", СвидетельствоДатаВыдачи);
					Команда.Parameters.AddWithValue("СвидетельствоНаименованиеОргана", СвидетельствоНаименованиеОргана);
					Команда.Parameters.AddWithValue("СвидетельствоКодОргана", СвидетельствоКодОргана);
					Команда.Parameters.AddWithValue("СтранаРегистрации", СтранаРегистрации.Ссылка);
					Команда.Parameters.AddWithValue("СтранаПостоянногоМестонахождения", СтранаПостоянногоМестонахождения.Ссылка);
					Команда.Parameters.AddWithValue("КодВСтранеРегистрации", КодВСтранеРегистрации);
					Команда.Parameters.AddWithValue("ОГРН", ОГРН);
					Команда.Parameters.AddWithValue("НаименованиеИнострОрганизации", НаименованиеИнострОрганизации);
					Команда.Parameters.AddWithValue("РегистрационныйНомерФСС", РегистрационныйНомерФСС);
					Команда.Parameters.AddWithValue("НаименованиеИМНС", НаименованиеИМНС);
					Команда.Parameters.AddWithValue("КодОКВЭД", КодОКВЭД);
					Команда.Parameters.AddWithValue("НаименованиеОКВЭД", НаименованиеОКВЭД);
					Команда.Parameters.AddWithValue("КодОКОНХ", КодОКОНХ);
					Команда.Parameters.AddWithValue("ИндивидуальныйПредприниматель", ИндивидуальныйПредприниматель.Ссылка);
					Команда.Parameters.AddWithValue("УдалитьОбменЗадействован", УдалитьОбменЗадействован);
					Команда.Parameters.AddWithValue("ОбменКодАбонента", ОбменКодАбонента);
					Команда.Parameters.AddWithValue("ОбменКаталогОтправкиДанныхОтчетности", ОбменКаталогОтправкиДанныхОтчетности);
					Команда.Parameters.AddWithValue("ОбменКаталогПрограммыЭлектроннойПочты", ОбменКаталогПрограммыЭлектроннойПочты);
					Команда.Parameters.AddWithValue("РайонныйКоэффициентРФ", РайонныйКоэффициентРФ);
					Команда.Parameters.AddWithValue("ОтражатьВРегламентированномУчете", ОтражатьВРегламентированномУчете);
					Команда.Parameters.AddWithValue("КодИФНСПолучателя", КодИФНСПолучателя);
					Команда.Parameters.AddWithValue("НаименованиеТерриториальногоОрганаПФР", НаименованиеТерриториальногоОрганаПФР);
					Команда.Parameters.AddWithValue("НаименованиеСокращенное", НаименованиеСокращенное);
					Команда.Parameters.AddWithValue("ВидОбменаСКонтролирующимиОрганами", ВидОбменаСКонтролирующимиОрганами.Ключ());
					Команда.Parameters.AddWithValue("УчетнаяЗаписьОбмена", УчетнаяЗаписьОбмена.Ссылка);
					Команда.Parameters.AddWithValue("КодОрганаПФР", КодОрганаПФР);
					Команда.Parameters.AddWithValue("КодОрганаФСГС", КодОрганаФСГС);
					Команда.Parameters.AddWithValue("ДополнительныйКодФСС", ДополнительныйКодФСС);
					Команда.Parameters.AddWithValue("КодПодчиненностиФСС", КодПодчиненностиФСС);
					Команда.Parameters.AddWithValue("ЦифровойИндексОбособленногоПодразделения", ЦифровойИндексОбособленногоПодразделения);
					Команда.Parameters.AddWithValue("РегистрационныйНомерТФОМС", РегистрационныйНомерТФОМС);
					Команда.Parameters.AddWithValue("ИПРегистрационныйНомерПФР", ИПРегистрационныйНомерПФР);
					Команда.Parameters.AddWithValue("ИПРегистрационныйНомерФСС", ИПРегистрационныйНомерФСС);
					Команда.Parameters.AddWithValue("ИПКодПодчиненностиФСС", ИПКодПодчиненностиФСС);
					Команда.Parameters.AddWithValue("ИПРегистрационныйНомерТФОМС", ИПРегистрационныйНомерТФОМС);
					Команда.Parameters.AddWithValue("НаименованиеТерриториальногоОрганаФСС", НаименованиеТерриториальногоОрганаФСС);
					Команда.ExecuteNonQuery();
				}
			}
		}
		public void Удалить()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Delete _Reference105
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", Ссылка.ToByteArray());
					Команда.ExecuteNonQuery();
				}
			}
		}
	}
}