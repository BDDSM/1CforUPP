
using System;
using System.Data.SqlClient;
using V82;
using V82.СправочникиСсылка;
using V82.СправочникиОбъект;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.СправочникиОбъект
{
	public partial class УчетныеЗаписиЭлектроннойПочты:СправочникОбъект
	{
		public bool _ЭтоНовый;
		public bool ЭтоНовый()
		{
			return _ЭтоНовый;
		}
		public Guid Ссылка;
		public long Версия;
		/*static хэш сумма состава и порядка реквизитов*/
		/*версия класса восстановленного из пакета*/
		public bool ПометкаУдаления;
		public bool Предопределенный;
		public Guid Владелец;
		public bool ЭтоГруппа;
		public Guid Родитель;
		public string/*9*/ Код;
		public string/*150*/ Наименование;
		public string/*(100)*/ SMTPСервер;//Сервер исходящей почты (SMTP)
		public string/*(100)*/ POP3Сервер;//Сервер входящей почты (POP3)
		public decimal/*(4)*/ ПортSMTP;//Порт SMTP
		public decimal/*(4)*/ ПортPOP3;//Порт POP3
		public string/*(200)*/ Логин;
		public string/*(200)*/ Пароль;
		public bool ТребуетсяSMTPАутентификация;//Требуется SMTP Аутентификация
		public string/*(200)*/ ЛогинSMTP;//Логин SMTP
		public string/*(200)*/ ПарольSMTP;//Пароль SMTP
		public decimal/*(4)*/ ВремяОжиданияСервера;//Время ожидания сервера
		public bool ОставлятьКопииСообщенийНаСервере;//Оставлять копии сообщений на сервере
		public bool УдалятьПисьмаССервераЧерез;//Удалять письма с сервера через
		public decimal/*(3)*/ КоличествоДнейУдаленияПисемССервера;//Количество дней удаления писем с сервера
		public string/*(150)*/ АдресЭлектроннойПочты;//Адрес электронной почты
		public V82.СправочникиСсылка.ГруппыПисемЭлектроннойПочты ГруппаВходящие;//Группа входящие
		public V82.СправочникиСсылка.ГруппыПисемЭлектроннойПочты ГруппаИсходящие;//Группа исходящие
		public V82.СправочникиСсылка.ГруппыПисемЭлектроннойПочты ГруппаУдаленные;//Группа удаленные
		public V82.СправочникиСсылка.ГруппыПисемЭлектроннойПочты ГруппаЧерновики;//Группа черновики
		public V82.СправочникиСсылка.ГруппыПисемЭлектроннойПочты ГруппаНежелательные;//Группа нежелательные
		public V82.Перечисления/*Ссылка*/.ВидыТекстовЭлектронныхПисем ФорматТекстаПисьмаПоУмолчанию;//Формат текста письма по умолчанию
		public string/*(0)*/ ТекстПодписи;//Текст подписи
		public bool ДобавлятьПодписьКИсходящимПисьмам;//Добавлять подпись к исходящим письмам
		public bool ДобавлятьПодписьКОтветамИПересылкам;//Добавлять подпись к ответам и пересылкам
		public bool АвтоПолучениеОтправкаСообщений;//Авто получение/отправка сообщений
		public decimal/*(2)*/ ИнтервалАвтоПолученияОтправкиСообщений;//Интервал авто получения/отправки сообщений (в минутах)
		public V82.СправочникиСсылка.Пользователи ОтветственныйЗаАвтоПолучениеОтправкуСообщений;//Ответственный за авто получение отправку сообщений
		public bool ПомещатьОтветыИПереадресацииВТужеГруппу;//Помещать ответы и переадресации в туже группу
		public V82.Перечисления/*Ссылка*/.ВидыДействийАвтоПолученияОтправкиЭлектронныхПисем ДействиеАвтополученияОтправкиСообщений;//Действие автополучения отправки сообщений
		public bool АвтоматическаяУстановкаПометкиРассмотрено;//Автоматическая установка пометки рассмотрено
		public decimal/*(2)*/ ИнтервалАвтоматическойУстановкиОтметкиРассмотрено;//Интервал автоматической установки отметки рассмотрено
		public bool АвтоматическаяУстановкаПометкиРассмотреноПриОтвете;//Автоматическая установка пометки рассмотрено при ответе
		public bool АвтоматическаяУстановкаПометкиРассмотреноПриПолученииОтвета;//Автоматическая установка пометки рассмотрено при ответе или переадресации
		public bool ИспользоватьКлассификациюПисемПоПредметам;//Использовать классификацию писем по предметам
		public bool ЗаполнятьПустойПредметДляНовыхПисемИзТемыПисьма;//Заполнять пустой предмет для новых писем из темы письма
		public bool ДляВходящихОтветовИПереадресацийИскатьПисьмаОснованияИЗаполнятьПредмет;//Для входящих ответов и переадресаций искать письма основания и заполнять предмет
		public bool ДляВходящихОтветовИПереадресацийИскатьПисьмаОснованияИЗаполнятьОснованиеНовогоПисьма;//Для входящих ответов и переадресаций искать письма основания и заполнять основание нового письма
		public bool ДляВходящихОтветовИПереадресацийИскатьПисьмаОснованияИЗаполнятьГруппуПисемНовогоПисьма;//Для входящих ответов и переадресаций искать письма основания и заполнять группу писем нового письма
		public bool АвтосохранениеПисем;//Автосохранение писем
		public decimal/*(3)*/ ИнтервалАвтосохраненияПисем;//Интервал автосохранения писем
		public bool ФорматПисьмаДляОтветовИПереадресацийБратьИзИсходного;//Формат письма для ответов и переадресаций брать из исходного
		public string/*(200)*/ КодировкаПисемПоУмолчанию;//Кодировка писем по умолчанию
		public bool КодировкуПисьмаДляОтветовБратьИзИсходного;//Кодировку письма для ответов брать из исходного
		public bool ЗаполнятьОбъектыИзАдресовПервогоПисьма;//Заполнять объекты из адресов первого письма
		public V82.Перечисления/*Ссылка*/.НазначенияУчетнойЗаписи НазначениеУчетнойЗаписи;//Назначение учетной записи
		///<summary>
		///И
		///</summary>
		public bool ИспользоватьДляОтправки;//Использовать для отправки
		public bool ИспользоватьДляПолучения;//Использовать для получения
		public void Записать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					if(_ЭтоНовый)
					{
						Команда.CommandText = @"
						Insert Into _Reference282(
						_IDRRef
						/*,_Version*/
						,_Marked
						,_IsMetadata
						,_Code
						,_Description
						,_Fld4064
						,_Fld4065
						,_Fld4066
						,_Fld4067
						,_Fld4068
						,_Fld4069
						,_Fld4070
						,_Fld4071
						,_Fld4072
						,_Fld4073
						,_Fld4074
						,_Fld4075
						,_Fld4076
						,_Fld4077
						,_Fld4078RRef
						,_Fld4079RRef
						,_Fld4080RRef
						,_Fld4081RRef
						,_Fld4082RRef
						,_Fld4083RRef
						,_Fld4084
						,_Fld4085
						,_Fld4086
						,_Fld4087
						,_Fld4088
						,_Fld4089RRef
						,_Fld4090
						,_Fld4091RRef
						,_Fld4092
						,_Fld4093
						,_Fld4094
						,_Fld4095
						,_Fld4096
						,_Fld4097
						,_Fld4098
						,_Fld4099
						,_Fld4100
						,_Fld4101
						,_Fld4102
						,_Fld4103
						,_Fld4104
						,_Fld4105
						,_Fld4106
						,_Fld4107RRef
						,_Fld4108
						,_Fld4109)
						Values (
						@Ссылка
						/*,@Версия*/
						,@ПометкаУдаления
						,@Предопределенный
						,@Код
						,@Наименование
						,@SMTPСервер
						,@POP3Сервер
						,@ПортSMTP
						,@ПортPOP3
						,@Логин
						,@Пароль
						,@ТребуетсяSMTPАутентификация
						,@ЛогинSMTP
						,@ПарольSMTP
						,@ВремяОжиданияСервера
						,@ОставлятьКопииСообщенийНаСервере
						,@УдалятьПисьмаССервераЧерез
						,@КоличествоДнейУдаленияПисемССервера
						,@АдресЭлектроннойПочты
						,@ГруппаВходящие
						,@ГруппаИсходящие
						,@ГруппаУдаленные
						,@ГруппаЧерновики
						,@ГруппаНежелательные
						,@ФорматТекстаПисьмаПоУмолчанию
						,@ТекстПодписи
						,@ДобавлятьПодписьКИсходящимПисьмам
						,@ДобавлятьПодписьКОтветамИПересылкам
						,@АвтоПолучениеОтправкаСообщений
						,@ИнтервалАвтоПолученияОтправкиСообщений
						,@ОтветственныйЗаАвтоПолучениеОтправкуСообщений
						,@ПомещатьОтветыИПереадресацииВТужеГруппу
						,@ДействиеАвтополученияОтправкиСообщений
						,@АвтоматическаяУстановкаПометкиРассмотрено
						,@ИнтервалАвтоматическойУстановкиОтметкиРассмотрено
						,@АвтоматическаяУстановкаПометкиРассмотреноПриОтвете
						,@АвтоматическаяУстановкаПометкиРассмотреноПриПолученииОтвета
						,@ИспользоватьКлассификациюПисемПоПредметам
						,@ЗаполнятьПустойПредметДляНовыхПисемИзТемыПисьма
						,@ДляВходящихОтветовИПереадресацийИскатьПисьмаОснованияИЗаполнятьПредмет
						,@ДляВходящихОтветовИПереадресацийИскатьПисьмаОснованияИЗаполнятьОснованиеНовогоПисьма
						,@ДляВходящихОтветовИПереадресацийИскатьПисьмаОснованияИЗаполнятьГруппуПисемНовогоПисьма
						,@АвтосохранениеПисем
						,@ИнтервалАвтосохраненияПисем
						,@ФорматПисьмаДляОтветовИПереадресацийБратьИзИсходного
						,@КодировкаПисемПоУмолчанию
						,@КодировкуПисьмаДляОтветовБратьИзИсходного
						,@ЗаполнятьОбъектыИзАдресовПервогоПисьма
						,@НазначениеУчетнойЗаписи
						,@ИспользоватьДляОтправки
						,@ИспользоватьДляПолучения)";
					}
					else
					{
						Команда.CommandText = @"
						Update _Reference282
						Set
						/*_IDRRef	= @Ссылка*/
						/*,_Version	= @Версия*/
						_Marked	= @ПометкаУдаления
						,_IsMetadata	= @Предопределенный
						,_Code	= @Код
						,_Description	= @Наименование
						,_Fld4064	= @SMTPСервер
						,_Fld4065	= @POP3Сервер
						,_Fld4066	= @ПортSMTP
						,_Fld4067	= @ПортPOP3
						,_Fld4068	= @Логин
						,_Fld4069	= @Пароль
						,_Fld4070	= @ТребуетсяSMTPАутентификация
						,_Fld4071	= @ЛогинSMTP
						,_Fld4072	= @ПарольSMTP
						,_Fld4073	= @ВремяОжиданияСервера
						,_Fld4074	= @ОставлятьКопииСообщенийНаСервере
						,_Fld4075	= @УдалятьПисьмаССервераЧерез
						,_Fld4076	= @КоличествоДнейУдаленияПисемССервера
						,_Fld4077	= @АдресЭлектроннойПочты
						,_Fld4078RRef	= @ГруппаВходящие
						,_Fld4079RRef	= @ГруппаИсходящие
						,_Fld4080RRef	= @ГруппаУдаленные
						,_Fld4081RRef	= @ГруппаЧерновики
						,_Fld4082RRef	= @ГруппаНежелательные
						,_Fld4083RRef	= @ФорматТекстаПисьмаПоУмолчанию
						,_Fld4084	= @ТекстПодписи
						,_Fld4085	= @ДобавлятьПодписьКИсходящимПисьмам
						,_Fld4086	= @ДобавлятьПодписьКОтветамИПересылкам
						,_Fld4087	= @АвтоПолучениеОтправкаСообщений
						,_Fld4088	= @ИнтервалАвтоПолученияОтправкиСообщений
						,_Fld4089RRef	= @ОтветственныйЗаАвтоПолучениеОтправкуСообщений
						,_Fld4090	= @ПомещатьОтветыИПереадресацииВТужеГруппу
						,_Fld4091RRef	= @ДействиеАвтополученияОтправкиСообщений
						,_Fld4092	= @АвтоматическаяУстановкаПометкиРассмотрено
						,_Fld4093	= @ИнтервалАвтоматическойУстановкиОтметкиРассмотрено
						,_Fld4094	= @АвтоматическаяУстановкаПометкиРассмотреноПриОтвете
						,_Fld4095	= @АвтоматическаяУстановкаПометкиРассмотреноПриПолученииОтвета
						,_Fld4096	= @ИспользоватьКлассификациюПисемПоПредметам
						,_Fld4097	= @ЗаполнятьПустойПредметДляНовыхПисемИзТемыПисьма
						,_Fld4098	= @ДляВходящихОтветовИПереадресацийИскатьПисьмаОснованияИЗаполнятьПредмет
						,_Fld4099	= @ДляВходящихОтветовИПереадресацийИскатьПисьмаОснованияИЗаполнятьОснованиеНовогоПисьма
						,_Fld4100	= @ДляВходящихОтветовИПереадресацийИскатьПисьмаОснованияИЗаполнятьГруппуПисемНовогоПисьма
						,_Fld4101	= @АвтосохранениеПисем
						,_Fld4102	= @ИнтервалАвтосохраненияПисем
						,_Fld4103	= @ФорматПисьмаДляОтветовИПереадресацийБратьИзИсходного
						,_Fld4104	= @КодировкаПисемПоУмолчанию
						,_Fld4105	= @КодировкуПисьмаДляОтветовБратьИзИсходного
						,_Fld4106	= @ЗаполнятьОбъектыИзАдресовПервогоПисьма
						,_Fld4107RRef	= @НазначениеУчетнойЗаписи
						,_Fld4108	= @ИспользоватьДляОтправки
						,_Fld4109	= @ИспользоватьДляПолучения
						Where _IDRRef = @Ссылка";
					}
					Команда.Parameters.AddWithValue("Ссылка", Ссылка.ToByteArray());
					/*Команда.Parameters.AddWithValue("Версия", Версия);*/
					Команда.Parameters.AddWithValue("ПометкаУдаления", ПометкаУдаления);
					Команда.Parameters.AddWithValue("Предопределенный", Предопределенный);
					Команда.Parameters.AddWithValue("Код", Код);
					Команда.Parameters.AddWithValue("Наименование", Наименование);
					Команда.Parameters.AddWithValue("SMTPСервер", SMTPСервер);
					Команда.Parameters.AddWithValue("POP3Сервер", POP3Сервер);
					Команда.Parameters.AddWithValue("ПортSMTP", ПортSMTP);
					Команда.Parameters.AddWithValue("ПортPOP3", ПортPOP3);
					Команда.Parameters.AddWithValue("Логин", Логин);
					Команда.Parameters.AddWithValue("Пароль", Пароль);
					Команда.Parameters.AddWithValue("ТребуетсяSMTPАутентификация", ТребуетсяSMTPАутентификация);
					Команда.Parameters.AddWithValue("ЛогинSMTP", ЛогинSMTP);
					Команда.Parameters.AddWithValue("ПарольSMTP", ПарольSMTP);
					Команда.Parameters.AddWithValue("ВремяОжиданияСервера", ВремяОжиданияСервера);
					Команда.Parameters.AddWithValue("ОставлятьКопииСообщенийНаСервере", ОставлятьКопииСообщенийНаСервере);
					Команда.Parameters.AddWithValue("УдалятьПисьмаССервераЧерез", УдалятьПисьмаССервераЧерез);
					Команда.Parameters.AddWithValue("КоличествоДнейУдаленияПисемССервера", КоличествоДнейУдаленияПисемССервера);
					Команда.Parameters.AddWithValue("АдресЭлектроннойПочты", АдресЭлектроннойПочты);
					Команда.Parameters.AddWithValue("ГруппаВходящие", ГруппаВходящие.Ссылка);
					Команда.Parameters.AddWithValue("ГруппаИсходящие", ГруппаИсходящие.Ссылка);
					Команда.Parameters.AddWithValue("ГруппаУдаленные", ГруппаУдаленные.Ссылка);
					Команда.Parameters.AddWithValue("ГруппаЧерновики", ГруппаЧерновики.Ссылка);
					Команда.Parameters.AddWithValue("ГруппаНежелательные", ГруппаНежелательные.Ссылка);
					Команда.Parameters.AddWithValue("ФорматТекстаПисьмаПоУмолчанию", ФорматТекстаПисьмаПоУмолчанию.Ключ());
					Команда.Parameters.AddWithValue("ТекстПодписи", ТекстПодписи);
					Команда.Parameters.AddWithValue("ДобавлятьПодписьКИсходящимПисьмам", ДобавлятьПодписьКИсходящимПисьмам);
					Команда.Parameters.AddWithValue("ДобавлятьПодписьКОтветамИПересылкам", ДобавлятьПодписьКОтветамИПересылкам);
					Команда.Parameters.AddWithValue("АвтоПолучениеОтправкаСообщений", АвтоПолучениеОтправкаСообщений);
					Команда.Parameters.AddWithValue("ИнтервалАвтоПолученияОтправкиСообщений", ИнтервалАвтоПолученияОтправкиСообщений);
					Команда.Parameters.AddWithValue("ОтветственныйЗаАвтоПолучениеОтправкуСообщений", ОтветственныйЗаАвтоПолучениеОтправкуСообщений.Ссылка);
					Команда.Parameters.AddWithValue("ПомещатьОтветыИПереадресацииВТужеГруппу", ПомещатьОтветыИПереадресацииВТужеГруппу);
					Команда.Parameters.AddWithValue("ДействиеАвтополученияОтправкиСообщений", ДействиеАвтополученияОтправкиСообщений.Ключ());
					Команда.Parameters.AddWithValue("АвтоматическаяУстановкаПометкиРассмотрено", АвтоматическаяУстановкаПометкиРассмотрено);
					Команда.Parameters.AddWithValue("ИнтервалАвтоматическойУстановкиОтметкиРассмотрено", ИнтервалАвтоматическойУстановкиОтметкиРассмотрено);
					Команда.Parameters.AddWithValue("АвтоматическаяУстановкаПометкиРассмотреноПриОтвете", АвтоматическаяУстановкаПометкиРассмотреноПриОтвете);
					Команда.Parameters.AddWithValue("АвтоматическаяУстановкаПометкиРассмотреноПриПолученииОтвета", АвтоматическаяУстановкаПометкиРассмотреноПриПолученииОтвета);
					Команда.Parameters.AddWithValue("ИспользоватьКлассификациюПисемПоПредметам", ИспользоватьКлассификациюПисемПоПредметам);
					Команда.Parameters.AddWithValue("ЗаполнятьПустойПредметДляНовыхПисемИзТемыПисьма", ЗаполнятьПустойПредметДляНовыхПисемИзТемыПисьма);
					Команда.Parameters.AddWithValue("ДляВходящихОтветовИПереадресацийИскатьПисьмаОснованияИЗаполнятьПредмет", ДляВходящихОтветовИПереадресацийИскатьПисьмаОснованияИЗаполнятьПредмет);
					Команда.Parameters.AddWithValue("ДляВходящихОтветовИПереадресацийИскатьПисьмаОснованияИЗаполнятьОснованиеНовогоПисьма", ДляВходящихОтветовИПереадресацийИскатьПисьмаОснованияИЗаполнятьОснованиеНовогоПисьма);
					Команда.Parameters.AddWithValue("ДляВходящихОтветовИПереадресацийИскатьПисьмаОснованияИЗаполнятьГруппуПисемНовогоПисьма", ДляВходящихОтветовИПереадресацийИскатьПисьмаОснованияИЗаполнятьГруппуПисемНовогоПисьма);
					Команда.Parameters.AddWithValue("АвтосохранениеПисем", АвтосохранениеПисем);
					Команда.Parameters.AddWithValue("ИнтервалАвтосохраненияПисем", ИнтервалАвтосохраненияПисем);
					Команда.Parameters.AddWithValue("ФорматПисьмаДляОтветовИПереадресацийБратьИзИсходного", ФорматПисьмаДляОтветовИПереадресацийБратьИзИсходного);
					Команда.Parameters.AddWithValue("КодировкаПисемПоУмолчанию", КодировкаПисемПоУмолчанию);
					Команда.Parameters.AddWithValue("КодировкуПисьмаДляОтветовБратьИзИсходного", КодировкуПисьмаДляОтветовБратьИзИсходного);
					Команда.Parameters.AddWithValue("ЗаполнятьОбъектыИзАдресовПервогоПисьма", ЗаполнятьОбъектыИзАдресовПервогоПисьма);
					Команда.Parameters.AddWithValue("НазначениеУчетнойЗаписи", НазначениеУчетнойЗаписи.Ключ());
					Команда.Parameters.AddWithValue("ИспользоватьДляОтправки", ИспользоватьДляОтправки);
					Команда.Parameters.AddWithValue("ИспользоватьДляПолучения", ИспользоватьДляПолучения);
					Команда.ExecuteNonQuery();
				}
			}
		}
		public void Удалить()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Delete _Reference282
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", Ссылка.ToByteArray());
					Команда.ExecuteNonQuery();
				}
			}
		}
		/*МодульОбъекта*/

		public object ПроверитьЗаполнениеОбязательныхПолей(/**/)
		{
			/*ТекстОшибок = "";*/
			if(true/*НЕ ЗначениеЗаполнено(АдресЭлектроннойПочты)*/)
			{
				/*ТекстОшибок = ТекстОшибок + Символы.ПС + "Не указан адрес (E-mail) учетной записи.";*/
			}
			if(true/*НЕ ЗначениеЗаполнено(SMTPСервер)*/)
			{
				/*ТекстОшибок = ТекстОшибок + Символы.ПС + "Не указано имя SMTP сервера.";*/
			}
			if(true/*НЕ ЗначениеЗаполнено(ПортSMTP)*/)
			{
				/*ТекстОшибок = ТекстОшибок + Символы.ПС + "Не указан порт SMTP сервера.";*/
			}
			if(true/*НЕ ЗначениеЗаполнено(POP3Сервер)*/)
			{
				/*ТекстОшибок = ТекстОшибок + Символы.ПС + "Не указано имя POP3 сервера.";*/
			}
			if(true/*НЕ ЗначениеЗаполнено(ПортPOP3)*/)
			{
				/*ТекстОшибок = ТекстОшибок + Символы.ПС + "Не указан порт POP3 сервера.";*/
			}
			if(true/*НЕ ЗначениеЗаполнено(Логин)*/)
			{
				/*ТекстОшибок = ТекстОшибок + Символы.ПС + "Не указано имя пользователя для доступа к почтовому серверу.";*/
			}
			return null;
		}
		// Функция определяет, есть ли ссылки в документах ЭлектронноеПисьмо
		//  на группу записей электронных писем
		//
		// Параметры
		//  ГруппаУчетнойЗаписи - СправочникСсылка.ГруппыПисемУчетнойЗаписи
		//
		// Возвращаемое значение:
		//   Булево, если есть ссылки
		//

		public object ЕстьСсылки(/*ГруппаУчетнойЗаписи*/)
		{
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ЭлектронноеПисьмо.Ссылка
	|ИЗ
	|	Документ.ЭлектронноеПисьмо КАК ЭлектронноеПисьмо
	|ГДЕ
	|	ЭлектронноеПисьмо.ГруппаУчетнойЗаписи = &ГруппаУчетнойЗаписи
	|";*/
			/*Запрос.УстановитьПараметр("ГруппаУчетнойЗаписи", ГруппаУчетнойЗаписи);*/
			return null;
		}
		// Процедура, обработчик события ПередЗаписью объекта
		//

		public void ПередЗаписью(/*Отказ*/)
		{
			if(true/*ОбменДанными.Загрузка*/)
			{
			}
			/*СтрокаОшибки = "Учетная запись """ + Наименование + "<" + АдресЭлектроннойПочты + ">" + " не записана.";*/
			/*мНовыеГруппы = Неопределено;*/
			if(true/*НЕ Константы.ИспользованиеВстроенногоПочтовогоКлиента.Получить()*/)
			{
				/*// Если не установлено использование встроенного почтового клиента разрешим только пометку на удаление.
*/
				if(true/*ЭтоНовый() Или (Не ПометкаУдаления) Или Ссылка.ПометкаУдаления*/)
				{
					/*ОбщегоНазначения.СообщитьОбОшибке("В настройках учета не установлено использование встроенного почтового клиента.",, СтрокаОшибки);*/
					/*Отказ = Истина;*/
				}
			}
			if(true/*НЕ ЗначениеЗаполнено(Наименование)*/)
			{
				/*ОбщегоНазначения.СообщитьОбОшибке("Не указано представление учетной записи.",, СтрокаОшибки);*/
				/*Отказ = Истина;*/
			}
			if(true/*ЗначениеЗаполнено(ГруппаУдаленные) И ЕстьСсылки(ГруппаУдаленные)*/)
			{
				/*ОбщегоНазначения.СообщитьОбОшибке(("В группе """ + ГруппаУдаленные + """ есть электронные письма. Данную группу нельзя устанавливать в качестве группы удаленных писем."),, СтрокаОшибки);*/
				/*Отказ = Истина;*/
			}
			if(true/*ЗначениеЗаполнено(ГруппаЧерновики) И ЕстьСсылки(ГруппаЧерновики)*/)
			{
				/*ОбщегоНазначения.СообщитьОбОшибке(("В группе """ + ГруппаЧерновики + """ есть электронные письма. Данную группу нельзя устанавливать в качестве группы черновиков."),, СтрокаОшибки);*/
				/*Отказ = Истина;*/
			}
			if(true/*ЭтоНовый()*/)
			{
				if(true/*Не ЗначениеЗаполнено(ПолучитьСсылкуНового())*/)
				{
					/*УстановитьСсылкуНового(Справочники.УчетныеЗаписиЭлектроннойПочты.ПолучитьСсылку(Новый УникальныйИдентификатор));*/
				}
				/*мНовыеГруппы = Истина;*/
				/*ЭтотОбъект.ГруппаВходящие  = Справочники.ГруппыПисемЭлектроннойПочты.ПолучитьСсылку(Новый УникальныйИдентификатор);*/
				/*ЭтотОбъект.ГруппаИсходящие = Справочники.ГруппыПисемЭлектроннойПочты.ПолучитьСсылку(Новый УникальныйИдентификатор);*/
				/*ЭтотОбъект.ГруппаУдаленные = Справочники.ГруппыПисемЭлектроннойПочты.ПолучитьСсылку(Новый УникальныйИдентификатор);*/
				/*ЭтотОбъект.ГруппаЧерновики = Справочники.ГруппыПисемЭлектроннойПочты.ПолучитьСсылку(Новый УникальныйИдентификатор);*/
			}
			/*// Проверим предопределенные группы, в них не должно быть одинаковых значений
*/
			/*ТаблицаПроверкиГрупп = Новый ТаблицаЗначений;*/
			/*ТаблицаПроверкиГрупп.Колонки.Добавить("Группа");*/
			/*ТаблицаПроверкиГрупп.Колонки.Добавить("Количество");*/
			if(true/*ЗначениеЗаполнено(ГруппаВходящие)*/)
			{
				/*НоваяСтрока = ТаблицаПроверкиГрупп.Добавить();*/
				/*НоваяСтрока.Группа     = ГруппаВходящие;*/
				/*НоваяСтрока.Количество = 1;*/
			}
			if(true/*ЗначениеЗаполнено(ГруппаИсходящие)*/)
			{
				/*НоваяСтрока = ТаблицаПроверкиГрупп.Добавить();*/
				/*НоваяСтрока.Группа     = ГруппаИсходящие;*/
				/*НоваяСтрока.Количество = 1;*/
			}
			if(true/*ЗначениеЗаполнено(ГруппаУдаленные)*/)
			{
				/*НоваяСтрока = ТаблицаПроверкиГрупп.Добавить();*/
				/*НоваяСтрока.Группа     = ГруппаУдаленные;*/
				/*НоваяСтрока.Количество = 1;*/
			}
			if(true/*ЗначениеЗаполнено(ГруппаЧерновики)*/)
			{
				/*НоваяСтрока = ТаблицаПроверкиГрупп.Добавить();*/
				/*НоваяСтрока.Группа     = ГруппаЧерновики;*/
				/*НоваяСтрока.Количество = 1;*/
			}
			if(true/*ТаблицаПроверкиГрупп.Количество() > 0*/)
			{
				/*ТаблицаПроверкиГрупп.Свернуть("Группа", "Количество");*/
			}
			if(true/*АвтоПолучениеОтправкаСообщений*/)
			{
				if(true/*НЕ ЗначениеЗаполнено(ОтветственныйЗаАвтоПолучениеОтправкуСообщений)*/)
				{
					/*ОбщегоНазначения.СообщитьОбОшибке("Не указан ответственный за автополучение/отправку писем.",, СтрокаОшибки);*/
					/*Отказ = Истина;*/
				}
			}
			if(true/*НЕ ПометкаУдаления*/)
			{
				/*Проверка = СокрЛП(ПроверитьЗаполнениеОбязательныхПолей());*/
				if(true/*ЗначениеЗаполнено(Проверка)*/)
				{
					/*ОбщегоНазначения.СообщитьОбОшибке(Проверка,, СтрокаОшибки);*/
					/*Отказ = Истина;*/
				}
			}
		}
		// Процедура, обработчик события ПриЗаписи объекта
		//

		public void ПриЗаписи(/*Отказ*/)
		{
			if(true/*ОбменДанными.Загрузка*/)
			{
			}
			if(true/*мНовыеГруппы = Истина*/)
			{
				/*СтрокаОшибки = "Учетная запись """ + Наименование + "<" + АдресЭлектроннойПочты + ">" + " не записана.";*/
				/*// Входящие
*/
				/*НовыйОбъект = Справочники.ГруппыПисемЭлектроннойПочты.СоздатьЭлемент();*/
				/*НовыйОбъект.УстановитьСсылкуНового(ГруппаВходящие);*/
				/*НовыйОбъект.Владелец                  = Ссылка;*/
				/*НовыйОбъект.Наименование              = "Входящие";*/
				/*НовыйОбъект.ИспользоватьПредметыПисем = ИспользоватьКлассификациюПисемПоПредметам;*/
				/*Попытка
			НовыйОбъект.Записать();*/
				/*Исключение
			ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки(),, СтрокаОшибки);*/
				/*Отказ = Истина;*/
				/*КонецПопытки;*/
				/*// Исходящие
*/
				/*НовыйОбъект = Справочники.ГруппыПисемЭлектроннойПочты.СоздатьЭлемент();*/
				/*НовыйОбъект.УстановитьСсылкуНового(ГруппаИсходящие);*/
				/*НовыйОбъект.Владелец                  = Ссылка;*/
				/*НовыйОбъект.Наименование              = "Исходящие";*/
				/*НовыйОбъект.ИспользоватьПредметыПисем = ИспользоватьКлассификациюПисемПоПредметам;*/
				/*Попытка
			НовыйОбъект.Записать();*/
				/*Исключение
			ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки(),, СтрокаОшибки);*/
				/*Отказ = Истина;*/
				/*КонецПопытки;*/
				/*// Удаленные
*/
				/*НовыйОбъект = Справочники.ГруппыПисемЭлектроннойПочты.СоздатьЭлемент();*/
				/*НовыйОбъект.УстановитьСсылкуНового(ГруппаУдаленные);*/
				/*НовыйОбъект.Владелец                  = Ссылка;*/
				/*НовыйОбъект.Наименование              = "Удаленные";*/
				/*НовыйОбъект.ИспользоватьПредметыПисем = ИспользоватьКлассификациюПисемПоПредметам;*/
				/*Попытка
			НовыйОбъект.Записать();*/
				/*Исключение
			ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки(),, СтрокаОшибки);*/
				/*Отказ = Истина;*/
				/*КонецПопытки;*/
				/*// Черновики
*/
				/*НовыйОбъект = Справочники.ГруппыПисемЭлектроннойПочты.СоздатьЭлемент();*/
				/*НовыйОбъект.УстановитьСсылкуНового(ГруппаЧерновики);*/
				/*НовыйОбъект.Владелец                  = Ссылка;*/
				/*НовыйОбъект.Наименование              = "Черновики";*/
				/*НовыйОбъект.ИспользоватьПредметыПисем = ИспользоватьКлассификациюПисемПоПредметам;*/
				/*Попытка
			НовыйОбъект.Записать();*/
				/*Исключение
			ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки(),, СтрокаОшибки);*/
				/*Отказ = Истина;*/
				/*КонецПопытки;*/
			}
		}
	}
}
