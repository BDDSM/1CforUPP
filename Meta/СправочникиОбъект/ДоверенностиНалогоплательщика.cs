
using System;
using System.Data.SqlClient;
using V82;
using V82.СправочникиСсылка;
using V82.СправочникиОбъект;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.СправочникиОбъект
{
	///<summary>
	///Доверенности налогоплательщика на представителя
	///</summary>
	public partial class ДоверенностиНалогоплательщика:СправочникОбъект
	{
		public bool _ЭтоНовый;
		public bool ЭтоНовый()
		{
			return _ЭтоНовый;
		}
		public Guid Ссылка;
		public long Версия;
		/*static хэш сумма состава и порядка реквизитов*/
		/*версия класса восстановленного из пакета*/
		public bool ПометкаУдаления;
		public bool Предопределенный;
		public Guid Владелец;
		public bool ЭтоГруппа;
		public Guid Родитель;
		public string/*9*/ Код;
		public string/*100*/ Наименование;
		public string/*(50)*/ НомерДовер;//Номер доверенности
		///<summary>
		///Дата выдачи доверенности
		///</summary>
		public DateTime ДатаВыдачи;//Дата выдачи
		///<summary>
		///Дата окончания действия доверенности
		///</summary>
		public DateTime ДатаОкончания;//Дата окончания
		public decimal/*(1)*/ ПризнакДоверителя;//Признак доверителя
		public string/*(1000)*/ ДоверительЮЛ_НаимОрг;//Наименование организации
		public string/*(10)*/ ДоверительЮЛ_ИНН;//ИНН
		public string/*(9)*/ ДоверительЮЛ_КПП;//КПП
		public string/*(13)*/ ДоверительЮЛ_ОГРН;//ОГРН
		///<summary>
		///ИНН руководителя доверителя
		///</summary>
		public string/*(12)*/ ДоверительРук_ИНН;//ИНН руководителя доверителя
		public string/*(12)*/ ДоверительФЛ_ИНН;//ИНН
		public string/*(15)*/ ДоверительФЛ_ОГРН;//ОГРН
		public V82.СправочникиСсылка.КлассификаторСтранМира ДоверительФЛ_Гражданство;//Гражданство
		public DateTime ДоверительФЛ_ДатаРождения;//ДатаРождения
		public string/*(1000)*/ ПредставительЮЛ_НаимОрг;//Наименование организации
		public string/*(10)*/ ПредставительЮЛ_ИНН;//ИНН
		public string/*(9)*/ ПредставительЮЛ_КПП;//КПП
		public string/*(13)*/ ПредставительЮЛ_ОГРН;//ОГРН
		public string/*(12)*/ ПредставительФЛ_ИНН;//ИНН
		public string/*(15)*/ ПредставительФЛ_ОГРН;//ОГРН
		public V82.СправочникиСсылка.КлассификаторСтранМира ПредставительФЛ_Гражданство;//Гражданство
		public DateTime ПредставительФЛ_ДатаРождения;//ДатаРождения
		public string/*(1000)*/ НотариусЮЛ_НаимОрг;//Наименование организации
		public string/*(10)*/ НотариусЮЛ_ИНН;//ИНН
		public string/*(9)*/ НотариусЮЛ_КПП;//КПП
		public string/*(13)*/ НотариусЮЛ_ОГРН;//ОГРН
		public string/*(12)*/ НотариусФЛ_ИНН;//ИНН
		public bool ДоверительЯвляетсяЮЛ;//Доверитель является ЮЛ
		public bool ПредставительЯвляетсяЮЛ;//Представитель является ЮЛ
		public bool НотариусЯвляетсяЮЛ;//Нотариус является ЮЛ
		public bool ЗаверенаНотариально;//Заверена нотариально
		///<summary>
		///наличие уполномоченного лица у доверителя - юл
		///</summary>
		public bool ДоверительИмеетУЛ;//Доверитель имеет УЛ
		public bool ПредставительЯвляетсяСотрудником;//Представитель является сотрудником
		public void Записать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					if(_ЭтоНовый)
					{
						Команда.CommandText = @"
						Insert Into _Reference85(
						_IDRRef
						/*,_Version*/
						,_Marked
						,_IsMetadata
						,_Code
						,_Description
						,_Fld2116
						,_Fld2117
						,_Fld2118
						,_Fld2119
						,_Fld2120
						,_Fld2121
						,_Fld2122
						,_Fld2123
						,_Fld2124
						,_Fld2125
						,_Fld2126
						,_Fld2127RRef
						,_Fld2128
						,_Fld2129
						,_Fld2130
						,_Fld2131
						,_Fld2132
						,_Fld2133
						,_Fld2134
						,_Fld2135RRef
						,_Fld2136
						,_Fld2137
						,_Fld2138
						,_Fld2139
						,_Fld2140
						,_Fld2141
						,_Fld2142
						,_Fld2143
						,_Fld2144
						,_Fld2145
						,_Fld2146
						,_Fld2147)
						Values(
						@Ссылка
						/*,@Версия*/
						,@ПометкаУдаления
						,@Предопределенный
						,@Код
						,@Наименование
						,@НомерДовер
						,@ДатаВыдачи
						,@ДатаОкончания
						,@ПризнакДоверителя
						,@ДоверительЮЛ_НаимОрг
						,@ДоверительЮЛ_ИНН
						,@ДоверительЮЛ_КПП
						,@ДоверительЮЛ_ОГРН
						,@ДоверительРук_ИНН
						,@ДоверительФЛ_ИНН
						,@ДоверительФЛ_ОГРН
						,@ДоверительФЛ_Гражданство
						,@ДоверительФЛ_ДатаРождения
						,@ПредставительЮЛ_НаимОрг
						,@ПредставительЮЛ_ИНН
						,@ПредставительЮЛ_КПП
						,@ПредставительЮЛ_ОГРН
						,@ПредставительФЛ_ИНН
						,@ПредставительФЛ_ОГРН
						,@ПредставительФЛ_Гражданство
						,@ПредставительФЛ_ДатаРождения
						,@НотариусЮЛ_НаимОрг
						,@НотариусЮЛ_ИНН
						,@НотариусЮЛ_КПП
						,@НотариусЮЛ_ОГРН
						,@НотариусФЛ_ИНН
						,@ДоверительЯвляетсяЮЛ
						,@ПредставительЯвляетсяЮЛ
						,@НотариусЯвляетсяЮЛ
						,@ЗаверенаНотариально
						,@ДоверительИмеетУЛ
						,@ПредставительЯвляетсяСотрудником)";
					}
					else
					{
						Команда.CommandText = @"
						Update _Reference85
						Set
						/*_IDRRef	= @Ссылка*/
						/*,_Version	= @Версия*/
						_Marked	= @ПометкаУдаления
						,_IsMetadata	= @Предопределенный
						,_Code	= @Код
						,_Description	= @Наименование
						,_Fld2116	= @НомерДовер
						,_Fld2117	= @ДатаВыдачи
						,_Fld2118	= @ДатаОкончания
						,_Fld2119	= @ПризнакДоверителя
						,_Fld2120	= @ДоверительЮЛ_НаимОрг
						,_Fld2121	= @ДоверительЮЛ_ИНН
						,_Fld2122	= @ДоверительЮЛ_КПП
						,_Fld2123	= @ДоверительЮЛ_ОГРН
						,_Fld2124	= @ДоверительРук_ИНН
						,_Fld2125	= @ДоверительФЛ_ИНН
						,_Fld2126	= @ДоверительФЛ_ОГРН
						,_Fld2127RRef	= @ДоверительФЛ_Гражданство
						,_Fld2128	= @ДоверительФЛ_ДатаРождения
						,_Fld2129	= @ПредставительЮЛ_НаимОрг
						,_Fld2130	= @ПредставительЮЛ_ИНН
						,_Fld2131	= @ПредставительЮЛ_КПП
						,_Fld2132	= @ПредставительЮЛ_ОГРН
						,_Fld2133	= @ПредставительФЛ_ИНН
						,_Fld2134	= @ПредставительФЛ_ОГРН
						,_Fld2135RRef	= @ПредставительФЛ_Гражданство
						,_Fld2136	= @ПредставительФЛ_ДатаРождения
						,_Fld2137	= @НотариусЮЛ_НаимОрг
						,_Fld2138	= @НотариусЮЛ_ИНН
						,_Fld2139	= @НотариусЮЛ_КПП
						,_Fld2140	= @НотариусЮЛ_ОГРН
						,_Fld2141	= @НотариусФЛ_ИНН
						,_Fld2142	= @ДоверительЯвляетсяЮЛ
						,_Fld2143	= @ПредставительЯвляетсяЮЛ
						,_Fld2144	= @НотариусЯвляетсяЮЛ
						,_Fld2145	= @ЗаверенаНотариально
						,_Fld2146	= @ДоверительИмеетУЛ
						,_Fld2147	= @ПредставительЯвляетсяСотрудником
						Where _IDRRef = @Ссылка";
					}
					Команда.Parameters.AddWithValue("Ссылка", Ссылка.ToByteArray());
					/*Команда.Parameters.AddWithValue("Версия", Версия);*/
					Команда.Parameters.AddWithValue("ПометкаУдаления", ПометкаУдаления);
					Команда.Parameters.AddWithValue("Предопределенный", Предопределенный);
					Команда.Parameters.AddWithValue("Код", Код);
					Команда.Parameters.AddWithValue("Наименование", Наименование);
					Команда.Parameters.AddWithValue("НомерДовер", НомерДовер);
					Команда.Parameters.AddWithValue("ДатаВыдачи", ДатаВыдачи);
					Команда.Parameters.AddWithValue("ДатаОкончания", ДатаОкончания);
					Команда.Parameters.AddWithValue("ПризнакДоверителя", ПризнакДоверителя);
					Команда.Parameters.AddWithValue("ДоверительЮЛ_НаимОрг", ДоверительЮЛ_НаимОрг);
					Команда.Parameters.AddWithValue("ДоверительЮЛ_ИНН", ДоверительЮЛ_ИНН);
					Команда.Parameters.AddWithValue("ДоверительЮЛ_КПП", ДоверительЮЛ_КПП);
					Команда.Parameters.AddWithValue("ДоверительЮЛ_ОГРН", ДоверительЮЛ_ОГРН);
					Команда.Parameters.AddWithValue("ДоверительРук_ИНН", ДоверительРук_ИНН);
					Команда.Parameters.AddWithValue("ДоверительФЛ_ИНН", ДоверительФЛ_ИНН);
					Команда.Parameters.AddWithValue("ДоверительФЛ_ОГРН", ДоверительФЛ_ОГРН);
					Команда.Parameters.AddWithValue("ДоверительФЛ_Гражданство", ДоверительФЛ_Гражданство.Ссылка);
					Команда.Parameters.AddWithValue("ДоверительФЛ_ДатаРождения", ДоверительФЛ_ДатаРождения);
					Команда.Parameters.AddWithValue("ПредставительЮЛ_НаимОрг", ПредставительЮЛ_НаимОрг);
					Команда.Parameters.AddWithValue("ПредставительЮЛ_ИНН", ПредставительЮЛ_ИНН);
					Команда.Parameters.AddWithValue("ПредставительЮЛ_КПП", ПредставительЮЛ_КПП);
					Команда.Parameters.AddWithValue("ПредставительЮЛ_ОГРН", ПредставительЮЛ_ОГРН);
					Команда.Parameters.AddWithValue("ПредставительФЛ_ИНН", ПредставительФЛ_ИНН);
					Команда.Parameters.AddWithValue("ПредставительФЛ_ОГРН", ПредставительФЛ_ОГРН);
					Команда.Parameters.AddWithValue("ПредставительФЛ_Гражданство", ПредставительФЛ_Гражданство.Ссылка);
					Команда.Parameters.AddWithValue("ПредставительФЛ_ДатаРождения", ПредставительФЛ_ДатаРождения);
					Команда.Parameters.AddWithValue("НотариусЮЛ_НаимОрг", НотариусЮЛ_НаимОрг);
					Команда.Parameters.AddWithValue("НотариусЮЛ_ИНН", НотариусЮЛ_ИНН);
					Команда.Parameters.AddWithValue("НотариусЮЛ_КПП", НотариусЮЛ_КПП);
					Команда.Parameters.AddWithValue("НотариусЮЛ_ОГРН", НотариусЮЛ_ОГРН);
					Команда.Parameters.AddWithValue("НотариусФЛ_ИНН", НотариусФЛ_ИНН);
					Команда.Parameters.AddWithValue("ДоверительЯвляетсяЮЛ", ДоверительЯвляетсяЮЛ);
					Команда.Parameters.AddWithValue("ПредставительЯвляетсяЮЛ", ПредставительЯвляетсяЮЛ);
					Команда.Parameters.AddWithValue("НотариусЯвляетсяЮЛ", НотариусЯвляетсяЮЛ);
					Команда.Parameters.AddWithValue("ЗаверенаНотариально", ЗаверенаНотариально);
					Команда.Parameters.AddWithValue("ДоверительИмеетУЛ", ДоверительИмеетУЛ);
					Команда.Parameters.AddWithValue("ПредставительЯвляетсяСотрудником", ПредставительЯвляетсяСотрудником);
					Команда.ExecuteNonQuery();
				}
			}
		}
		public void Удалить()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Delete _Reference85
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", Ссылка.ToByteArray());
					Команда.ExecuteNonQuery();
				}
			}
		}
		/*МодульОбъекта*/

		public void ПередЗаписью(/*Отказ*/)
		{
			if(true/*ОбменДанными.Загрузка*/)
			{
			}
			if(true/*ПометкаУдаления ИЛИ Ссылка.ПометкаУдаления*/)
			{
			}
			//Наименование = "Доверенность" + ?(ЗначениеЗаполнено(НомерДовер), " №" + НомерДовер, "") + " от " + Формат(ДатаВыдачи, "ДФ='dd.MM.yyyy ""г.""'");
			//Заголовок = "Запись доверенности налогоплательщика (" + Владелец + ") " + Наименование + ", код " + Код;
			/*// Проверка заполнения обязательных реквизитов
*/
			if(true/*НЕ ЗначениеЗаполнено(Владелец)*/)
			{
				//ОбщегоНазначения.СообщитьОбОшибке("Не выбрана организация налогоплательщика", Отказ, Заголовок);
			}
			if(true/*НЕ ЗначениеЗаполнено(ДатаВыдачи)*/)
			{
				//ОбщегоНазначения.СообщитьОбОшибке("Не указана дата выдачи доверенности", Отказ, Заголовок);
			}
			if(true/*ПолномочияПредставителя.Количество() = 0*/)
			{
				//ОбщегоНазначения.СообщитьОбОшибке("Не заполнены сведения о полномочиях представителя", Отказ, Заголовок);
			}
		}
	}
}
