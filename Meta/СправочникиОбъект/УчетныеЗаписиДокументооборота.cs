
using System;
using System.Data.SqlClient;
using V82;
using V82.СправочникиСсылка;
using V82.СправочникиОбъект;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.СправочникиОбъект
{
	public partial class УчетныеЗаписиДокументооборота:СправочникОбъект
	{
		public bool _ЭтоНовый;
		public bool ЭтоНовый()
		{
			return _ЭтоНовый;
		}
		public Guid Ссылка;
		public long Версия;
		/*static хэш сумма состава и порядка реквизитов*/
		/*версия класса восстановленного из пакета*/
		public bool ПометкаУдаления;
		public bool Предопределенный;
		public Guid Владелец;
		public bool ЭтоГруппа;
		public Guid Родитель;
		public string/*5*/ Код;
		public string/*150*/ Наименование;
		public string/*(255)*/ ИмяПользователяPOP3;//Имя пользователя POP3
		public string/*(255)*/ ПарольPOP3;//Пароль POP3
		public string/*(255)*/ СерверPOP3;//Сервер POP3
		public decimal/*(5)*/ ПортPOP3;//Порт POP3
		public string/*(255)*/ ИмяПользователяSMTP;//Имя пользователя SMTP
		public string/*(255)*/ ПарольSMTP;//Пароль SMTP
		public string/*(255)*/ СерверSMTP;//Сервер SMTP
		public decimal/*(5)*/ ПортSMTP;//Порт SMTP
		public bool ТребуетсяSMTPАутентификация;//Требуется SMTP Аутентификация
		public string/*(255)*/ АдресЭлектроннойПочты;//Адрес электронной почты
		public V82.СправочникиСсылка.НалоговыеОрганы НалоговыйОрган;//Налоговый орган
		public V82.СправочникиСсылка.СерверыДокументооборота СерверДокументооборота;//Сервер документооборота
		public string/*(40)*/ СертификатРуководителя;//Сертификат руководителя
		public string/*(40)*/ СертификатГлавногоБухгалтера;//Сертификат главного бухгалтера
		public string/*(40)*/ СертификатДляШифрования;//Сертификат для шифрования
		public bool УдалитьАвтоматическоеОпределениеНабораПодписей;//Удалить автоматическое определение набора подписей
		public bool ИспользуютсяСъемныеКлючевыеНосители;//Используются съемные ключевые носители
		public bool УдалитьНестандартныеТаймауты;//Нестандартные таймауты
		public decimal/*(2)*/ УдалитьТаймаутНалоговогоОргана;//Таймаут налогового органа
		public decimal/*(2)*/ УдалитьТаймаутНалогоплательщика;//Таймаут налогоплательщика
		public bool УдалитьИспользуетсяОбособленнымиПодразделениями;//Удалить используется обособленными подразделениями
		public bool ОбменНапрямую;//Используется возможность документооборота без посредничества специализированного оператора связи
		public bool ОбменНапрямуюСФСГС;//Используется возможность документооборота с Росстатом без посредничества специализированного оператора связи
		public bool НеФормироватьПодтвержденияАвтоматически;//Не формировать подтверждения автоматически
		public V82.Перечисления/*Ссылка*/.РежимыАвтонастройкиУчетнойЗаписиДокументооборота РежимАвтонастройки;//Режим автонастройки
		public bool ИспользоватьСервисОнлайнПроверкиОтчетов;//Использовать сервис онлайн-проверки отчетов
		public bool ПредназначенаДляДокументооборотаСФНС;//Предназначена для документооборота с ФНС
		public bool ПредназначенаДляДокументооборотаСПФР;//Предназначена для документооборота с ПФР
		public bool ПредназначенаДляДокументооборотаСФСГС;//Предназначена для документооборота с Росстатом
		public string/*(3)*/ ИдентификаторСпецоператора;//Идентификатор спецоператора
		public string/*(43)*/ ИдентификаторАбонента;
		public string/*(40)*/ ИдентификаторСистемыОтправителяПФР;//Идентификатор системы отправителя (ПФР)
		public string/*(40)*/ ИдентификаторСистемыОтправителяФСГС;//Идентификатор системы отправителя (ФСГС)
		public bool ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя;//Является учетной записью уполномоченного представителя
		public string/*(12)*/ ИННУполномоченногоПредставителя;//ИНН уполномоченного представителя
		public string/*(9)*/ КППУполномоченногоПредставителя;//КПП уполномоченного представителя
		public string/*(0)*/ ПолноеНаименованиеУполномоченногоПредставителя;//Полное наименование уполномоченного представителя
		public V82.Перечисления/*Ссылка*/.СтатусыУчетнойЗаписиДокументооборота СтатусУчетнойЗаписи;//Статус учетной записи
		public V82.Перечисления/*Ссылка*/.СпецоператорыСвязи СпецоператорСвязи;//Спецоператор связи
		public void Записать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					if(_ЭтоНовый)
					{
						Команда.CommandText = @"
						Insert Into _Reference281(
						_IDRRef
						/*,_Version*/
						,_Marked
						,_IsMetadata
						,_Code
						,_Description
						,_Fld4011
						,_Fld4012
						,_Fld4013
						,_Fld4014
						,_Fld4015
						,_Fld4016
						,_Fld4017
						,_Fld4018
						,_Fld4019
						,_Fld4020
						,_Fld4021RRef
						,_Fld4022RRef
						,_Fld4023
						,_Fld4024
						,_Fld4025
						,_Fld4026
						,_Fld4027
						,_Fld4028
						,_Fld4029
						,_Fld4030
						,_Fld4031
						,_Fld4032
						,_Fld4033
						,_Fld4034
						,_Fld4035RRef
						,_Fld4036
						,_Fld4037
						,_Fld4038
						,_Fld4039
						,_Fld4040
						,_Fld4041
						,_Fld4042
						,_Fld4043
						,_Fld4044
						,_Fld4045
						,_Fld4046
						,_Fld4047
						,_Fld4048RRef
						,_Fld4049RRef)
						Values (
						@Ссылка
						/*,@Версия*/
						,@ПометкаУдаления
						,@Предопределенный
						,@Код
						,@Наименование
						,@ИмяПользователяPOP3
						,@ПарольPOP3
						,@СерверPOP3
						,@ПортPOP3
						,@ИмяПользователяSMTP
						,@ПарольSMTP
						,@СерверSMTP
						,@ПортSMTP
						,@ТребуетсяSMTPАутентификация
						,@АдресЭлектроннойПочты
						,@НалоговыйОрган
						,@СерверДокументооборота
						,@СертификатРуководителя
						,@СертификатГлавногоБухгалтера
						,@СертификатДляШифрования
						,@УдалитьАвтоматическоеОпределениеНабораПодписей
						,@ИспользуютсяСъемныеКлючевыеНосители
						,@УдалитьНестандартныеТаймауты
						,@УдалитьТаймаутНалоговогоОргана
						,@УдалитьТаймаутНалогоплательщика
						,@УдалитьИспользуетсяОбособленнымиПодразделениями
						,@ОбменНапрямую
						,@ОбменНапрямуюСФСГС
						,@НеФормироватьПодтвержденияАвтоматически
						,@РежимАвтонастройки
						,@ИспользоватьСервисОнлайнПроверкиОтчетов
						,@ПредназначенаДляДокументооборотаСФНС
						,@ПредназначенаДляДокументооборотаСПФР
						,@ПредназначенаДляДокументооборотаСФСГС
						,@ИдентификаторСпецоператора
						,@ИдентификаторАбонента
						,@ИдентификаторСистемыОтправителяПФР
						,@ИдентификаторСистемыОтправителяФСГС
						,@ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя
						,@ИННУполномоченногоПредставителя
						,@КППУполномоченногоПредставителя
						,@ПолноеНаименованиеУполномоченногоПредставителя
						,@СтатусУчетнойЗаписи
						,@СпецоператорСвязи)";
					}
					else
					{
						Команда.CommandText = @"
						Update _Reference281
						Set
						/*_IDRRef	= @Ссылка*/
						/*,_Version	= @Версия*/
						_Marked	= @ПометкаУдаления
						,_IsMetadata	= @Предопределенный
						,_Code	= @Код
						,_Description	= @Наименование
						,_Fld4011	= @ИмяПользователяPOP3
						,_Fld4012	= @ПарольPOP3
						,_Fld4013	= @СерверPOP3
						,_Fld4014	= @ПортPOP3
						,_Fld4015	= @ИмяПользователяSMTP
						,_Fld4016	= @ПарольSMTP
						,_Fld4017	= @СерверSMTP
						,_Fld4018	= @ПортSMTP
						,_Fld4019	= @ТребуетсяSMTPАутентификация
						,_Fld4020	= @АдресЭлектроннойПочты
						,_Fld4021RRef	= @НалоговыйОрган
						,_Fld4022RRef	= @СерверДокументооборота
						,_Fld4023	= @СертификатРуководителя
						,_Fld4024	= @СертификатГлавногоБухгалтера
						,_Fld4025	= @СертификатДляШифрования
						,_Fld4026	= @УдалитьАвтоматическоеОпределениеНабораПодписей
						,_Fld4027	= @ИспользуютсяСъемныеКлючевыеНосители
						,_Fld4028	= @УдалитьНестандартныеТаймауты
						,_Fld4029	= @УдалитьТаймаутНалоговогоОргана
						,_Fld4030	= @УдалитьТаймаутНалогоплательщика
						,_Fld4031	= @УдалитьИспользуетсяОбособленнымиПодразделениями
						,_Fld4032	= @ОбменНапрямую
						,_Fld4033	= @ОбменНапрямуюСФСГС
						,_Fld4034	= @НеФормироватьПодтвержденияАвтоматически
						,_Fld4035RRef	= @РежимАвтонастройки
						,_Fld4036	= @ИспользоватьСервисОнлайнПроверкиОтчетов
						,_Fld4037	= @ПредназначенаДляДокументооборотаСФНС
						,_Fld4038	= @ПредназначенаДляДокументооборотаСПФР
						,_Fld4039	= @ПредназначенаДляДокументооборотаСФСГС
						,_Fld4040	= @ИдентификаторСпецоператора
						,_Fld4041	= @ИдентификаторАбонента
						,_Fld4042	= @ИдентификаторСистемыОтправителяПФР
						,_Fld4043	= @ИдентификаторСистемыОтправителяФСГС
						,_Fld4044	= @ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя
						,_Fld4045	= @ИННУполномоченногоПредставителя
						,_Fld4046	= @КППУполномоченногоПредставителя
						,_Fld4047	= @ПолноеНаименованиеУполномоченногоПредставителя
						,_Fld4048RRef	= @СтатусУчетнойЗаписи
						,_Fld4049RRef	= @СпецоператорСвязи
						Where _IDRRef = @Ссылка";
					}
					Команда.Parameters.AddWithValue("Ссылка", Ссылка.ToByteArray());
					/*Команда.Parameters.AddWithValue("Версия", Версия);*/
					Команда.Parameters.AddWithValue("ПометкаУдаления", ПометкаУдаления);
					Команда.Parameters.AddWithValue("Предопределенный", Предопределенный);
					Команда.Parameters.AddWithValue("Код", Код);
					Команда.Parameters.AddWithValue("Наименование", Наименование);
					Команда.Parameters.AddWithValue("ИмяПользователяPOP3", ИмяПользователяPOP3);
					Команда.Parameters.AddWithValue("ПарольPOP3", ПарольPOP3);
					Команда.Parameters.AddWithValue("СерверPOP3", СерверPOP3);
					Команда.Parameters.AddWithValue("ПортPOP3", ПортPOP3);
					Команда.Parameters.AddWithValue("ИмяПользователяSMTP", ИмяПользователяSMTP);
					Команда.Parameters.AddWithValue("ПарольSMTP", ПарольSMTP);
					Команда.Parameters.AddWithValue("СерверSMTP", СерверSMTP);
					Команда.Parameters.AddWithValue("ПортSMTP", ПортSMTP);
					Команда.Parameters.AddWithValue("ТребуетсяSMTPАутентификация", ТребуетсяSMTPАутентификация);
					Команда.Parameters.AddWithValue("АдресЭлектроннойПочты", АдресЭлектроннойПочты);
					Команда.Parameters.AddWithValue("НалоговыйОрган", НалоговыйОрган.Ссылка);
					Команда.Parameters.AddWithValue("СерверДокументооборота", СерверДокументооборота.Ссылка);
					Команда.Parameters.AddWithValue("СертификатРуководителя", СертификатРуководителя);
					Команда.Parameters.AddWithValue("СертификатГлавногоБухгалтера", СертификатГлавногоБухгалтера);
					Команда.Parameters.AddWithValue("СертификатДляШифрования", СертификатДляШифрования);
					Команда.Parameters.AddWithValue("УдалитьАвтоматическоеОпределениеНабораПодписей", УдалитьАвтоматическоеОпределениеНабораПодписей);
					Команда.Parameters.AddWithValue("ИспользуютсяСъемныеКлючевыеНосители", ИспользуютсяСъемныеКлючевыеНосители);
					Команда.Parameters.AddWithValue("УдалитьНестандартныеТаймауты", УдалитьНестандартныеТаймауты);
					Команда.Parameters.AddWithValue("УдалитьТаймаутНалоговогоОргана", УдалитьТаймаутНалоговогоОргана);
					Команда.Parameters.AddWithValue("УдалитьТаймаутНалогоплательщика", УдалитьТаймаутНалогоплательщика);
					Команда.Parameters.AddWithValue("УдалитьИспользуетсяОбособленнымиПодразделениями", УдалитьИспользуетсяОбособленнымиПодразделениями);
					Команда.Parameters.AddWithValue("ОбменНапрямую", ОбменНапрямую);
					Команда.Parameters.AddWithValue("ОбменНапрямуюСФСГС", ОбменНапрямуюСФСГС);
					Команда.Parameters.AddWithValue("НеФормироватьПодтвержденияАвтоматически", НеФормироватьПодтвержденияАвтоматически);
					Команда.Parameters.AddWithValue("РежимАвтонастройки", РежимАвтонастройки.Ключ());
					Команда.Parameters.AddWithValue("ИспользоватьСервисОнлайнПроверкиОтчетов", ИспользоватьСервисОнлайнПроверкиОтчетов);
					Команда.Parameters.AddWithValue("ПредназначенаДляДокументооборотаСФНС", ПредназначенаДляДокументооборотаСФНС);
					Команда.Parameters.AddWithValue("ПредназначенаДляДокументооборотаСПФР", ПредназначенаДляДокументооборотаСПФР);
					Команда.Parameters.AddWithValue("ПредназначенаДляДокументооборотаСФСГС", ПредназначенаДляДокументооборотаСФСГС);
					Команда.Parameters.AddWithValue("ИдентификаторСпецоператора", ИдентификаторСпецоператора);
					Команда.Parameters.AddWithValue("ИдентификаторАбонента", ИдентификаторАбонента);
					Команда.Parameters.AddWithValue("ИдентификаторСистемыОтправителяПФР", ИдентификаторСистемыОтправителяПФР);
					Команда.Parameters.AddWithValue("ИдентификаторСистемыОтправителяФСГС", ИдентификаторСистемыОтправителяФСГС);
					Команда.Parameters.AddWithValue("ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя", ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя);
					Команда.Parameters.AddWithValue("ИННУполномоченногоПредставителя", ИННУполномоченногоПредставителя);
					Команда.Parameters.AddWithValue("КППУполномоченногоПредставителя", КППУполномоченногоПредставителя);
					Команда.Parameters.AddWithValue("ПолноеНаименованиеУполномоченногоПредставителя", ПолноеНаименованиеУполномоченногоПредставителя);
					Команда.Parameters.AddWithValue("СтатусУчетнойЗаписи", СтатусУчетнойЗаписи.Ключ());
					Команда.Parameters.AddWithValue("СпецоператорСвязи", СпецоператорСвязи.Ключ());
					Команда.ExecuteNonQuery();
				}
			}
		}
		public void Удалить()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Delete _Reference281
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", Ссылка.ToByteArray());
					Команда.ExecuteNonQuery();
				}
			}
		}
		/*МодульОбъекта*/

		public void ПередЗаписью(/*Отказ*/)
		{
			if(true/*ОбменДанными.Загрузка*/)
			{
			}
			if(true/*КонтекстЭДО <> Неопределено*/)
			{
				/*КонтекстЭДО.ПередЗаписьюОбъекта(ЭтотОбъект, Отказ);*/
			}
			/*#КонецЕсли;*/
		}

		public void ПриЗаписи(/*Отказ*/)
		{
			if(true/*ОбменДанными.Загрузка*/)
			{
			}
			if(true/*КонтекстЭДО <> Неопределено*/)
			{
				/*КонтекстЭДО.ПриЗаписиОбъекта(ЭтотОбъект, Отказ);*/
			}
			/*#КонецЕсли;*/
		}

		public void ОбработкаЗаполнения(/*СообщениеОснование*/)
		{
			if(true/*КонтекстЭДО <> Неопределено*/)
			{
				/*КонтекстЭДО.ОбработкаЗаполненияОбъекта(ЭтотОбъект, СообщениеОснование);*/
			}
			/*#КонецЕсли;*/
		}
	}
}
