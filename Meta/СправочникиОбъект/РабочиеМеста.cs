
using System;
using System.Data.SqlClient;
using V82;
using V82.СправочникиСсылка;
using V82.СправочникиОбъект;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.СправочникиОбъект
{
	public partial class РабочиеМеста:СправочникОбъект
	{
		public bool _ЭтоНовый;
		public bool ЭтоНовый()
		{
			return _ЭтоНовый;
		}
		public Guid Ссылка;
		public long Версия;
		/*static хэш сумма состава и порядка реквизитов*/
		/*версия класса восстановленного из пакета*/
		public bool ПометкаУдаления;
		public bool Предопределенный;
		public Guid Владелец;
		public bool ЭтоГруппа;
		public Guid Родитель;
		public string/*50*/ Код;
		public string/*100*/ Наименование;
		public string/*(50)*/ ИмяКомпьютера;//Имя компьютера
		public decimal/*(6)*/ СетевойПорт;//Сетевой порт
		public void Записать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					if(_ЭтоНовый)
					{
						Команда.CommandText = @"
						Insert Into _Reference213(
						_IDRRef
						/*,_Version*/
						,_Marked
						,_IsMetadata
						,_Code
						,_Description
						,_Fld3322
						,_Fld3323)
						Values(
						@Ссылка
						/*,@Версия*/
						,@ПометкаУдаления
						,@Предопределенный
						,@Код
						,@Наименование
						,@ИмяКомпьютера
						,@СетевойПорт)";
					}
					else
					{
						Команда.CommandText = @"
						Update _Reference213
						Set
						/*_IDRRef	= @Ссылка*/
						/*,_Version	= @Версия*/
						_Marked	= @ПометкаУдаления
						,_IsMetadata	= @Предопределенный
						,_Code	= @Код
						,_Description	= @Наименование
						,_Fld3322	= @ИмяКомпьютера
						,_Fld3323	= @СетевойПорт
						Where _IDRRef = @Ссылка";
					}
					Команда.Parameters.AddWithValue("Ссылка", Ссылка.ToByteArray());
					/*Команда.Parameters.AddWithValue("Версия", Версия);*/
					Команда.Parameters.AddWithValue("ПометкаУдаления", ПометкаУдаления);
					Команда.Parameters.AddWithValue("Предопределенный", Предопределенный);
					Команда.Parameters.AddWithValue("Код", Код);
					Команда.Parameters.AddWithValue("Наименование", Наименование);
					Команда.Parameters.AddWithValue("ИмяКомпьютера", ИмяКомпьютера);
					Команда.Parameters.AddWithValue("СетевойПорт", СетевойПорт);
					Команда.ExecuteNonQuery();
				}
			}
		}
		public void Удалить()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Delete _Reference213
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", Ссылка.ToByteArray());
					Команда.ExecuteNonQuery();
				}
			}
		}
		/*МодульОбъекта*/
		///////////////////////////////////////////////////////////////////////////////
		// ОБРАБОТЧИКИ СОБЫТИЙ

		public void ПриКопировании(/*ОбъектКопирования*/)
		{
			//ТекущийПользователь = ПользователиИнформационнойБазы.ТекущийПользователь();
			/*Наименование = ?(ПустаяСтрока(Строка(Код)), "Рабочее место", Строка(Код))
	             + ?(ПустаяСтрока(Строка(Код)), ": ", "/")
	             + ?(ПустаяСтрока(Строка(ТекущийПользователь)), "Пользователь", Строка(ТекущийПользователь));*/
			/*// Добавить проверку наличия элемента с таким наименованием
*/
			/*Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|    КОЛИЧЕСТВО(*) КАК Количество
	|ИЗ
	|    Справочник.РабочиеМеста КАК РабочиеМеста
	|ГДЕ
	|    РабочиеМеста.Наименование ПОДОБНО &Наименование
	|    И РабочиеМеста.Ссылка <> &Ссылка
	|");*/
			//Запрос.УстановитьПараметр("Наименование", "%" + Наименование + "%");
			//Запрос.УстановитьПараметр("Ссылка"      , Ссылка);
			//Количество = Запрос.Выполнить().Выгрузить()[0].Количество;
			if(true/*Количество > 0*/)
			{
				//Наименование = Наименование + " (" + Строка(Количество + 1) + ")";
			}
		}

		public void ПередЗаписью(/*Отказ*/)
		{
			if(true/*ОбменДанными.Загрузка*/)
			{
			}
			if(true/*ПометкаУдаления*/)
			{
				if(true/*МенеджерОборудованияСервер.ПолучитьРабочееМестоКлиента() = Ссылка*/)
				{
					//МенеджерОборудованияСервер.УстановитьРабочееМестоКлиента(Справочники.РабочиеМеста.ПустаяСсылка());
				}
			}
		}

		public void ПриЗаписи(/*Отказ*/)
		{
			if(true/*ОбменДанными.Загрузка*/)
			{
			}
		}
	}
}