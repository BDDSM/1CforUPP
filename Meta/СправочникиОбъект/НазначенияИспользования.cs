
using System;
using System.Data.SqlClient;
using V82;
using V82.СправочникиСсылка;
using V82.СправочникиОбъект;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.СправочникиОбъект
{
	public partial class НазначенияИспользования:СправочникОбъект
	{
		public bool _ЭтоНовый;
		public bool ЭтоНовый()
		{
			return _ЭтоНовый;
		}
		public Guid Ссылка;
		public long Версия;
		/*static хэш сумма состава и порядка реквизитов*/
		/*версия класса восстановленного из пакета*/
		public bool ПометкаУдаления;
		public bool Предопределенный;
		public Guid Владелец;
		public bool ЭтоГруппа;
		public Guid Родитель;
		public string/*9*/ Код;
		public string/*50*/ Наименование;
		public V82.Перечисления/*Ссылка*/.СпособыПогашенияСтоимости СпособПогашенияСтоимости;//Способ погашения стоимости
		public decimal/*(4)*/ СрокПолезногоИспользования;//Срок полезного использования
		public decimal/*(15.3)*/ Количество;
		public V82.СправочникиСсылка.ЕдиницыИзмерения ЕдиницаИзмерения;//Единица измерения
		public V82.СправочникиСсылка.СпособыОтраженияРасходовПоАмортизации СпособОтраженияРасходов;//Способ отражения расходов
		public void Записать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					if(_ЭтоНовый)
					{
						Команда.CommandText = @"
						Insert Into _Reference141(
						_IDRRef
						/*,_Version*/
						,_Marked
						,_IsMetadata
						,_Code
						,_Description
						,_Fld2567RRef
						,_Fld2568
						,_Fld2569
						,_Fld2570RRef
						,_Fld2571RRef)
						Values (
						@Ссылка
						/*,@Версия*/
						,@ПометкаУдаления
						,@Предопределенный
						,@Код
						,@Наименование
						,@СпособПогашенияСтоимости
						,@СрокПолезногоИспользования
						,@Количество
						,@ЕдиницаИзмерения
						,@СпособОтраженияРасходов)";
					}
					else
					{
						Команда.CommandText = @"
						Update _Reference141
						Set
						/*_IDRRef	= @Ссылка*/
						/*,_Version	= @Версия*/
						_Marked	= @ПометкаУдаления
						,_IsMetadata	= @Предопределенный
						,_Code	= @Код
						,_Description	= @Наименование
						,_Fld2567RRef	= @СпособПогашенияСтоимости
						,_Fld2568	= @СрокПолезногоИспользования
						,_Fld2569	= @Количество
						,_Fld2570RRef	= @ЕдиницаИзмерения
						,_Fld2571RRef	= @СпособОтраженияРасходов
						Where _IDRRef = @Ссылка";
					}
					Команда.Parameters.AddWithValue("Ссылка", Ссылка.ToByteArray());
					/*Команда.Parameters.AddWithValue("Версия", Версия);*/
					Команда.Parameters.AddWithValue("ПометкаУдаления", ПометкаУдаления);
					Команда.Parameters.AddWithValue("Предопределенный", Предопределенный);
					Команда.Parameters.AddWithValue("Код", Код);
					Команда.Parameters.AddWithValue("Наименование", Наименование);
					Команда.Parameters.AddWithValue("СпособПогашенияСтоимости", СпособПогашенияСтоимости.Ключ());
					Команда.Parameters.AddWithValue("СрокПолезногоИспользования", СрокПолезногоИспользования);
					Команда.Parameters.AddWithValue("Количество", Количество);
					Команда.Parameters.AddWithValue("ЕдиницаИзмерения", ЕдиницаИзмерения.Ссылка);
					Команда.Parameters.AddWithValue("СпособОтраженияРасходов", СпособОтраженияРасходов.Ссылка);
					Команда.ExecuteNonQuery();
				}
			}
		}
		public void Удалить()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Delete _Reference141
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", Ссылка.ToByteArray());
					Команда.ExecuteNonQuery();
				}
			}
		}
		/*МодульОбъекта*/
		// Процедура - обработчик события "ПередЗаписью".
		//

		public void ПередЗаписью(/*Отказ*/)
		{
			if(true/*НЕ ОбменДанными.Загрузка И НЕ ЭтоГруппа*/)
			{
				if(true/*СпособПогашенияСтоимости.Пустая()*/)
				{
					/*Сообщить("Укажите способ погашения стоимости!", СтатусСообщения.Важное);*/
					/*Отказ = Истина;*/
				}
				if(true/*СпособОтраженияРасходов.Пустая()*/)
				{
					/*Сообщить("Укажите способ отражения расходов!", СтатусСообщения.Важное);*/
					/*Отказ = Истина;*/
				}
				if(true/*СрокПолезногоИспользования <= 0*/)
				{
					/*Сообщить("Укажите срок полезного использования!", СтатусСообщения.Важное);*/
					/*Отказ = Истина;*/
				}
			}
		}
	}
}
