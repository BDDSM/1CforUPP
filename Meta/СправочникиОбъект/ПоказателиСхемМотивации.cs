
using System;
using System.Data.SqlClient;
using V82;
using V82.СправочникиСсылка;
using V82.СправочникиОбъект;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.СправочникиОбъект
{
	public partial class ПоказателиСхемМотивации:СправочникОбъект
	{
		public bool _ЭтоНовый;
		public bool ЭтоНовый()
		{
			return _ЭтоНовый;
		}
		public Guid Ссылка;
		public long Версия;
		/*static хэш сумма состава и порядка реквизитов*/
		/*версия класса восстановленного из пакета*/
		public bool ПометкаУдаления;
		public bool Предопределенный;
		public Guid Владелец;
		public bool ЭтоГруппа;
		public Guid Родитель;
		public string/*100*/ Наименование;
		public V82.Перечисления/*Ссылка*/.ТипыПоказателейСхемМотивации ТипПоказателя;//Тип показателя
		public V82.Перечисления/*Ссылка*/.ИзменениеПоказателейСхемМотивации ВозможностьИзменения;//Возможность изменения
		public V82.Перечисления/*Ссылка*/.ВидыПоказателейСхемМотивации ВидПоказателя;//Вид показателя
		public bool ПоказательЭффективности;//Показатель эффективности
		public string/*(100)*/ Идентификатор;
		public bool ТарифнаяСтавка;//Тарифная ставка
		public V82.СправочникиСсылка.ПоказателиСхемМотивации ФактическийПоказатель;//Фактический показатель
		public V82.Перечисления/*Ссылка*/.СпособыРасчетаСуммыПоказателей СпособРасчетаСуммы;//Способ расчета суммы
		public V82.СправочникиСсылка.ПоказателиСхемМотивации СуммируемыйПоказатель;//Суммируемый показатель 
		public V82.СправочникиСсылка.Валюты Валюта;
		public V82.СправочникиСсылка.ВидыСтажа ВидСтажа;//Вид стажа
		public void Записать()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					if(_ЭтоНовый)
					{
						Команда.CommandText = @"
						Insert Into _Reference194(
						_IDRRef
						/*,_Version*/
						,_Marked
						,_IsMetadata
						,_Description
						,_Fld3222RRef
						,_Fld3223RRef
						,_Fld3224RRef
						,_Fld3225
						,_Fld3226
						,_Fld3227
						,_Fld3228RRef
						,_Fld3229RRef
						,_Fld3230RRef
						,_Fld3231RRef
						,_Fld3232RRef)
						Values (
						@Ссылка
						/*,@Версия*/
						,@ПометкаУдаления
						,@Предопределенный
						,@Наименование
						,@ТипПоказателя
						,@ВозможностьИзменения
						,@ВидПоказателя
						,@ПоказательЭффективности
						,@Идентификатор
						,@ТарифнаяСтавка
						,@ФактическийПоказатель
						,@СпособРасчетаСуммы
						,@СуммируемыйПоказатель
						,@Валюта
						,@ВидСтажа)";
					}
					else
					{
						Команда.CommandText = @"
						Update _Reference194
						Set
						/*_IDRRef	= @Ссылка*/
						/*,_Version	= @Версия*/
						_Marked	= @ПометкаУдаления
						,_IsMetadata	= @Предопределенный
						,_Description	= @Наименование
						,_Fld3222RRef	= @ТипПоказателя
						,_Fld3223RRef	= @ВозможностьИзменения
						,_Fld3224RRef	= @ВидПоказателя
						,_Fld3225	= @ПоказательЭффективности
						,_Fld3226	= @Идентификатор
						,_Fld3227	= @ТарифнаяСтавка
						,_Fld3228RRef	= @ФактическийПоказатель
						,_Fld3229RRef	= @СпособРасчетаСуммы
						,_Fld3230RRef	= @СуммируемыйПоказатель
						,_Fld3231RRef	= @Валюта
						,_Fld3232RRef	= @ВидСтажа
						Where _IDRRef = @Ссылка";
					}
					Команда.Parameters.AddWithValue("Ссылка", Ссылка.ToByteArray());
					/*Команда.Parameters.AddWithValue("Версия", Версия);*/
					Команда.Parameters.AddWithValue("ПометкаУдаления", ПометкаУдаления);
					Команда.Parameters.AddWithValue("Предопределенный", Предопределенный);
					Команда.Parameters.AddWithValue("Наименование", Наименование);
					Команда.Parameters.AddWithValue("ТипПоказателя", ТипПоказателя.Ключ());
					Команда.Parameters.AddWithValue("ВозможностьИзменения", ВозможностьИзменения.Ключ());
					Команда.Parameters.AddWithValue("ВидПоказателя", ВидПоказателя.Ключ());
					Команда.Parameters.AddWithValue("ПоказательЭффективности", ПоказательЭффективности);
					Команда.Parameters.AddWithValue("Идентификатор", Идентификатор);
					Команда.Parameters.AddWithValue("ТарифнаяСтавка", ТарифнаяСтавка);
					Команда.Parameters.AddWithValue("ФактическийПоказатель", ФактическийПоказатель.Ссылка);
					Команда.Parameters.AddWithValue("СпособРасчетаСуммы", СпособРасчетаСуммы.Ключ());
					Команда.Parameters.AddWithValue("СуммируемыйПоказатель", СуммируемыйПоказатель.Ссылка);
					Команда.Parameters.AddWithValue("Валюта", Валюта.Ссылка);
					Команда.Parameters.AddWithValue("ВидСтажа", ВидСтажа.Ссылка);
					Команда.ExecuteNonQuery();
				}
			}
		}
		public void Удалить()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Delete _Reference194
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", Ссылка.ToByteArray());
					Команда.ExecuteNonQuery();
				}
			}
		}
	}
}
