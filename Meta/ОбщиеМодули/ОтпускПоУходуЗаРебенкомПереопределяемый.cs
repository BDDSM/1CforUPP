using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace V82.ОбщиеМодули
{
	public partial class ОтпускПоУходуЗаРебенкомПереопределяемый
	{
		////////////////////////////////////////////////////////////////////////////////
		// Вспомогательные процедуры, функции
		////////////////////////////////////////////////////////////////////////////////
		// Процедуры, функции объекта
		// По строке выборок из результатов запроса по документу формируем движения по регистру
		//
		// Параметры:
		//  ВыборкаПоСтрокамДокумента				- спозиционированная на определенной строке выборка
		//				  							  из результата запроса к ТЧ документа,
		// Возвращаемое значение:
		//  Нет.
		//

		public void ДобавитьСтрокуРасчетаСреднего(/*ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, НаборОсновныеНачисления*/)
		{
			/*Движение = НаборОсновныеНачисления.Добавить();*/
			/*// Свойства
*/
			/*Движение.ПериодРегистрации				= НачалоМесяца(ВыборкаПоШапкеДокумента.Дата);*/
			/*Движение.БазовыйПериодНачало			= ВыборкаПоСтрокамДокумента.БазовыйПериодНачало;*/
			/*Движение.БазовыйПериодКонец				= ВыборкаПоСтрокамДокумента.БазовыйПериодКонец;*/
			/*Движение.ВидРасчета						= ВыборкаПоСтрокамДокумента.ВидРасчета;*/
			/*// Измерения
*/
			/*Движение.Сотрудник						= ВыборкаПоСтрокамДокумента.Сотрудник;*/
			/*Движение.ФизЛицо						= ВыборкаПоСтрокамДокумента.ФизЛицо;*/
			/*Движение.Организация					= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;*/
			/*// Ресурсы
*/
			/*Движение.Результат						= ВыборкаПоСтрокамДокумента.Результат;*/
			/*Движение.СкидкаПоСтраховымВзносам		= ВыборкаПоСтрокамДокумента.СкидкаПоСтраховымВзносам;*/
			/*Движение.ОтработаноПоПятидневке			= ВыборкаПоСтрокамДокумента.ОтработаноПоПятидневке;*/
			/*Движение.НормаПоПятидневке				= ВыборкаПоСтрокамДокумента.НормаПоПятидневке;*/
			/*Движение.ОтработаноДней					= ВыборкаПоСтрокамДокумента.ОтработаноДней;*/
			/*Движение.ОтработаноЧасов				= ВыборкаПоСтрокамДокумента.ОтработаноЧасов;*/
			/*// Реквизиты
*/
			/*Движение.КоэффициентИндексации 			= ВыборкаПоСтрокамДокумента.КоэффициентИндексации;*/
			if(true/*ВыборкаПоСтрокамДокумента.ВидРасчета = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010
		Или ВыборкаПоСтрокамДокумента.ВидРасчета = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010*/)
			{
				/*Движение.ДатаНачалаСобытия				= Макс(НачалоДня(ВыборкаПоШапкеДокумента.ДатаНачала),НачалоМесяца(ВыборкаПоШапкеДокумента.ДатаОкончания));*/
			}
			/*Движение.ДатаНачалаРасчетногоПериода	= ВыборкаПоШапкеДокумента.ПериодРасчетаСреднегоЗаработкаНачало;*/
			/*Движение.ДатаОкончанияРасчетногоПериода	= ВыборкаПоШапкеДокумента.ПериодРасчетаСреднегоЗаработкаОкончание;*/
			/*Движение.СпособРасчета					= ВыборкаПоШапкеДокумента.СпособРасчета;*/
			/*Движение.ПериодРасчетаСреднегоЗаработка	= 12;*/
			/*Движение.ЧислоМесяцев					= ВыборкаПоСтрокамДокумента.ЧислоМесяцев;*/
		}

		public object ПолучитьДополнительныеПоляРасчетаСреднего(/**/)
		{
			return null;
		}
		////////////////////////////////////////////////////////////////////////////////
		// Процедуры, функции для работы формы документа

		public void ПередОткрытиемДополнительно(/*ЭтаФорма*/)
		{
			/*РасчетСреднего = ЭтаФорма.РасчетСреднего;*/
			/*ПоказыватьУстаревшиеКолонки = РасчетСреднего.Найти(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямПособий, "ВидРасчета") <> Неопределено 
									Или РасчетСреднего.Найти(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииПособий, "ВидРасчета") <> Неопределено 
									Или РасчетСреднего.Найти(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииПособий, "ВидРасчета") <> Неопределено;*/
			if(true/*ПоказыватьУстаревшиеКолонки*/)
			{
				/*ТабличноеПоле = ЭтаФорма.ЭлементыФормы.РасчетСреднего;*/
				/*РаботаСДиалогами.ВставитьКолонкуВТабличноеПоле(, ТабличноеПоле, "КолонкаЗаголовок", "Для премий", , , , , , ПоложениеКолонки.НоваяКолонка);*/
				/*РаботаСДиалогами.ВставитьКолонкуВТабличноеПоле(, ТабличноеПоле, "ЧислоМесяцев", "Число месяцев", "ЧислоМесяцев", , , , Тип("ПолеВвода"), ПоложениеКолонки.НаСледующейСтроке);*/
				/*РаботаСДиалогами.ВставитьКолонкуВТабличноеПоле(, ТабличноеПоле, "ОтработаноДней", "Отработано", "ОтработаноПоПятидневке", , , , Тип("ПолеВвода"), ПоложениеКолонки.ВТойЖеКолонке);*/
				/*РаботаСДиалогами.ВставитьКолонкуВТабличноеПоле(, ТабличноеПоле, "НормаДней", "Норма", "НормаПоПятидневке", , , , Тип("ПолеВвода"), ПоложениеКолонки.ВТойЖеКолонке);*/
			}
		}

		public void ДополнитьСписокСоставляющихСреднегозаработка(/*ЭтаФорма, СписокСоставляющихСреднегозаработка*/)
		{
			/*РасчетСреднего = ЭтаФорма.РасчетСреднего;*/
			if(true/*РасчетСреднего.Количество() > 0*/)
			{
				if(true/*РасчетСреднего.Найти(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямПособий, "ВидРасчета") <> Неопределено*/)
				{
					/*СписокСоставляющихСреднегозаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямПособий);*/
				}
				if(true/*РасчетСреднего.Найти(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииПособий, "ВидРасчета") <> Неопределено*/)
				{
					/*СписокСоставляющихСреднегозаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииПособий);*/
				}
				if(true/*РасчетСреднего.Найти(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииПособий, "ВидРасчета") <> Неопределено*/)
				{
					/*СписокСоставляющихСреднегозаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииПособий);*/
				}
			}
		}

		public void УстановитьВидимостьДополнительныхКолонок(/*ЭтаФорма, СписокСоставляющихСреднегозаработка*/)
		{
			/*// В этой конфигурации дополнительных действий не предусмотрено
*/
		}

		public void РасчетСреднегоПриВыводеСтрокиДополнительно(/*Элемент, ОформлениеСтроки, ДанныеСтроки*/)
		{
			if(true/*Элемент.Колонки.Найти("КолонкаЗаголовок") <> Неопределено*/)
			{
				if(true/*Элемент.Колонки.КолонкаЗаголовок.Видимость*/)
				{
					/*ОформлениеСтроки.Ячейки.КолонкаЗаголовок.Видимость = Ложь;*/
				}
			}
		}

		public void ОбработатьСписокВидовДокументовДляЖурнала(/*СписокВидовДокументов*/)
		{
			/*// В этой конфигурации ничего не делается
*/
		}
		// ОбработатьСписокВидовДокументовДляЖурнала()
	}
}

