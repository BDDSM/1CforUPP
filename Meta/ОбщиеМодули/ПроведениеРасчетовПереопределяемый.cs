using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace V82.ОбщиеМодули
{
	public partial class ПроведениеРасчетовПереопределяемый
	{
		// Производит расчет записей набора записей регистра расчета
		// параметры:
		//  ИсходныеДанные - результат запроса к исходным данным
		//  НаборЗаписейРегистра - набор записей
		//  ЗаписиДоходыНДФЛ - набор записей регистра доходов НДФЛ
		//  ГоловнаяОрганизация - ссылка на организацию
		//  ОбособленноеПодразделение - ссылка на обособленное подразделение
		//	ТабличнаяЧастьДокумента - табличная часть документа, заполняется по результатам расчета
		//
		// возвращаемое значение:
		//	нет
		//

		public void РассчитатьЗаписиНабора(/*ИсходныеДанные,
									НаборЗаписейРегистра,
									НеобходимыеДанные,
									ЗаписиДоходыНДФЛ,
									ГоловнаяОрганизация,
									ОбособленноеПодразделение,
									ТабличнаяЧастьДокумента,
									ДанныеДляПрогнозаНДФЛ = Неопределено,
									СведенияОДоначислениях = Неопределено,
									КурсВалютыУпрУчета = Неопределено,
									ПовторныйРасчет = Ложь,
									МассивИндексыСтрокТабличнойЧасти = Неопределено,
									КомментироватьРасчет = Ложь, ФормаКомментариев = НеОпределено*/)
		{
			/*СтруктураПоиска = Новый Структура("НомерСтроки");*/
			/*ПустойКодДохода = Справочники.ДоходыНДФЛ.ПустаяСсылка();*/
			/*// признаки расчета набора записей определенного регистра
*/
			/*ОсновныеНачисленияОрганизаций = Ложь;*/
			/*ДополнительныеНачисленияОрганизаций = Ложь;*/
			/*УправленческиеНачисления = Ложь;*/
			/*РегламентированныеУдержания = Ложь;*/
			/*РегламентированныеНачисления = Ложь;*/
			if(true/*ТипЗнч(НаборЗаписейРегистра) = Тип("РегистрРасчетаНаборЗаписей.ОсновныеНачисленияРаботниковОрганизаций")*/)
			{
				/*ОсновныеНачисленияОрганизаций = Истина;*/
				/*РегламентированныеНачисления = Истина;*/
			}
			/*// Соответствие для хранения графика с ошибками
*/
			/*ГрафикиБезРабочегоВремени = Новый ТаблицаЗначений;*/
			/*ГрафикиБезРабочегоВремени.Колонки.Добавить("ГрафикРаботы");*/
			/*ГрафикиБезРабочегоВремени.Колонки.Добавить("ВидУчетаВремени");*/
			/*ВычетНДФЛКод405 = Справочники.ВычетыНДФЛ.Код405;*/
			/*ВычетНДФЛКод404 = Справочники.ВычетыНДФЛ.Код404;*/
			/*ВычетНДФЛКод403 = Справочники.ВычетыНДФЛ.Код403;*/
			/*ВычетНДФЛМатпомощьПриРожденииРебенка = Справочники.ВычетыНДФЛ.МатпомощьПриРожденииРебенка;*/
		}
		// РассчитатьЗаписиНабора
		// Рассчитывает значение ресурса записи регистра расчета по ее реквизитам и дополнительным данным
		//
		// Параметры:
		//  СтрокаДвижений	- рассчитываемая запись регистра расчета
		//  ИсходныеДанные	- выборка из результата запроса с исходными данными для расчета
		//  УправленческиеНачисления - булево, признак того, что это расчет управленческий
		//  РегламентированныеНачисления - булево, признак того, что это регламентированное начисление
		//  ОсновныеНачисленияОрганизаций - булево, признак того, что это именно основое регламентированное начисление
		//  ДанныеДляПрогнозаНДФЛ - выборка из результата запроса с данными для прогнозирования НДФЛ
		//  СведенияОДоначислениях - соответствие для хранения данных о доначислениях
		//  КурсВалютыУпрУчета
		//  ПовторныйРасчет - признак того, что выполняется повторный расчет (поддержка
		//              способа ДоначислениеПоУправленческомуУчету)
		//
		// Возвращаемое значение:
		//  Нет.
		//

		public void РассчитатьЗаписьРегистраРасчета(/*СтрокаДвижений,
							ИсходныеДанные,
							УправленческиеНачисления,
							РегламентированныеНачисления,
							РегламентированныеУдержания,
							ОсновныеНачисленияОрганизаций,
							ДополнительныеНачисленияОрганизаций,
							ДанныеДляПрогнозаНДФЛ,
							СведенияОДоначислениях,
							КурсВалютыУпрУчета,
							ПовторныйРасчет,
							КомментироватьРасчет, ФормаКомментариев, 
							ГрафикиБезРабочегоВремени*/)
		{
			/*ВидРасчета = СтрокаДвижений.ВидРасчета;*/
			/*СпособРасчета = ИсходныеДанные.СпособРасчета;*/
			/*Результат = 0;*/
			/*РезультатПолучен = Истина;*/
			/*ПоказательРазмер = "Показатель1";*/
			/*// предварительные действия перед расчетом для поддержки 
*/
			/*// способа расчета ДоначислениеПоУправленческомуУчету
*/
			/*РасчетДоначисления = Ложь;*/
			if(true/*РегламентированныеНачисления и СведенияОДоначислениях <> Неопределено*/)
			{
				/*Сведение = СведенияОДоначислениях.Получить(СтрокаДвижений.Сотрудник);*/
				if(true/*Сведение = Неопределено*/)
				{
					/*Сведение = Новый Структура("КВыплатеПоУпрУчету,ЕстьДоначисление,ПрогнозНДФЛ,СуммарныйПроцент,УжеНачисленоДоДоначисления");*/
					/*Сведение.КВыплатеПоУпрУчету = 0;*/
					/*Сведение.СуммарныйПроцент = 0;*/
					/*Сведение.УжеНачисленоДоДоначисления = 0;*/
					/*Сведение.ЕстьДоначисление = Ложь;*/
					/*Сведение.ПрогнозНДФЛ = Новый Соответствие();*/
					/*СведенияОДоначислениях[СтрокаДвижений.Сотрудник] = Сведение;*/
				}
				if(true/*ОсновныеНачисленияОрганизаций 
			И ИсходныеДанные.УчитыватьДоходПоПериодуДействия*/)
				{
					/*ПериодДохода = НачалоМесяца(ИсходныеДанные.ПериодДействияНачало);*/
				}
				/*СтрокаПрогноза = Сведение.ПрогнозНДФЛ.Получить(ПериодДохода);*/
				if(true/*СтрокаПрогноза = Неопределено*/)
				{
					/*СтрокаПрогноза = ПроведениеРасчетовДополнительный.СоздатьСтрокуПрогнозаНДФЛ();*/
					/*Сведение.ПрогнозНДФЛ[ПериодДохода] = СтрокаПрогноза;*/
				}
				if(true/*ИсходныеДанные.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ДоначислениеПоУправленческомуУчету*/)
				{
					/*РасчетДоначисления = Истина;*/
					if(true/*не ПовторныйРасчет*/)
					{
						/*Сведение.ЕстьДоначисление = Истина;*/
						if(true/*ОсновныеНачисленияОрганизаций*/)
						{
							/*Сведение.КВыплатеПоУпрУчету = ?(ИсходныеДанные.КВыплатеПоУпрУчету = Null, 0, ИсходныеДанные.КВыплатеПоУпрУчету) * КурсВалютыУпрУчета[НачалоМесяца(ИсходныеДанные.ПериодДействияНачало)];*/
						}
						/*Сведение.СуммарныйПроцент = ?(ИсходныеДанные.СуммарныйПроцент = Null, 0, ИсходныеДанные.СуммарныйПроцент);*/
						/*Сведение.УжеНачисленоДоДоначисления = ?(ИсходныеДанные.УжеНачисленоДоДоначисления = Null, 0, ИсходныеДанные.УжеНачисленоДоДоначисления);*/
						/*Физлицо = ИсходныеДанные.Физлицо;*/
						/*// запомним поле "резидентство"
*/
						if(true/*ПроведениеРасчетовДополнительный.ПозиционироватьДанныеПрогнозаНДФЛ(ДанныеДляПрогнозаНДФЛ, Физлицо)*/)
						{
							while(true/*Истина*/)
							{
								/*СтрокаДляЗаполнения = Сведение.ПрогнозНДФЛ.Получить(ДанныеДляПрогнозаНДФЛ.Период);*/
								if(true/*СтрокаДляЗаполнения = Неопределено*/)
								{
									/*СтрокаДляЗаполнения = ПроведениеРасчетовДополнительный.СоздатьСтрокуПрогнозаНДФЛ();*/
									/*Сведение.ПрогнозНДФЛ[ДанныеДляПрогнозаНДФЛ.Период] = СтрокаДляЗаполнения;*/
								}
								/*// запоним остальные поля
*/
								/*ПроведениеРасчетовДополнительный.ЗаполнитьСтрокуПрогнозаНДФЛ(СтрокаДляЗаполнения, ДанныеДляПрогнозаНДФЛ);*/
								if(true/*не ДанныеДляПрогнозаНДФЛ.Следующий()*/)
								{
									/*Прервать;*/
								}
								if(true/*ДанныеДляПрогнозаНДФЛ.Физлицо <> Физлицо*/)
								{
									/*Прервать;*/
								}
							}
							/*;;*/
						}
					}
				}
			}
			/*// расчет будем проводить только для авторассчитываемой записи
*/
			if(true/*СтрокаДвижений.Авторасчет*/)
			{
				/*ДатаЗакона255ФЗ = ПроведениеРасчетовДополнительный.ПолучитьДатуВступленияВСилуИзмененийПоСоциальнымПособиям2006();*/
				/*// этот Если... нужно расширять при появлении новых способов расчета или видов расчета,
*/
				/*// которые не укладываются в тот или иной способ
*/
				if(true/*КомментироватьРасчет*/)
				{
					/*КомментарийВидаРасчета = ОбщегоНазначенияЗК.КомментарийРасчета("Расчет ", , ИсходныеДанные.ВидРасчетаНаименование, СтрокаДвижений.ВидРасчета);*/
					/*ОбщегоНазначенияЗК.КомментарийРасчета("Способ расчета: " + ИсходныеДанные.СпособРасчета, КомментарийВидаРасчета);*/
					/*КомментарийПорядкаРасчета = ОбщегоНазначенияЗК.КомментарийРасчета("Порядок расчета: " + ПроведениеРасчетов.ВизуализироватьФормулуРасчета(ИсходныеДанные.ВидРасчета, "Текст", РегламентированныеУдержания), КомментарийВидаРасчета);*/
					if(true/*СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПочтовыйСбор
				ИЛИ СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.БанковскиеИздержки*/)
					{
						if(true/*ЗначениеЗаполнено(ИсходныеДанные.Получатель)*/)
						{
							/*ОбщегоНазначенияЗК.КомментарийРасчета("Получатель: " + ИсходныеДанные.Получатель, КомментарийПорядкаРасчета);*/
						}
						if(true/*ИсходныеДанные.ПоТарифу*/)
						{
							/*ОбщегоНазначенияЗК.КомментарийРасчета("Тариф: " + ИсходныеДанные.ПорядокИсчисленияИздержек, КомментарийПорядкаРасчета);*/
							/*ОбщегоНазначенияЗК.КомментарийРасчета("Процент: " + ИсходныеДанные.Процент, КомментарийПорядкаРасчета);*/
						}
						/*ОбщегоНазначенияЗК.КомментарийРасчета("Сумма перевода: " + ИсходныеДанные.СуммаАлиментов, КомментарийПорядкаРасчета);*/
					}
				}
				/*// Процентом и от стажа процентом
*/
				/*//	
*/
				if(true/*ПроведениеРасчетов.ПолучитьСписокНачисленийПроцентом().Найти(СпособРасчета) <> НеОпределено*/)
				{
					if(true/*ОсновныеНачисленияОрганизаций И СтрокаДвижений.Сторно И НЕ СтрокаДвижений.РасчетнаяБазаЗаЕдиницуНормыВремени = 0*/)
					{
						/*// при расчете сторно получаем "отнормированную" базу из реквизита записи регистра 
*/
						/*// и учтем отработанное время; для записей которые были рассчитаны ранее, этот реквизит пуст, 
*/
						/*// поэтому для них получим базу прежним способом
*/
						/*ОтработанноеВремя = ?(ИсходныеДанные.ВидУчетаВремени = Перечисления.ВидыУчетаВремени.ПоДням, ИсходныеДанные.ОтработаноДней, ИсходныеДанные.ОтработаноЧасов);*/
						/*РезультатБаза = СтрокаДвижений.РасчетнаяБазаЗаЕдиницуНормыВремени * ОтработанноеВремя;*/
					}
					/*// Размер - процент доплаты
*/
					if(true/*РезультатБаза = NULL*/)
					{
						if(true/*ВидРасчета <> ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.РайонныйКоэффициент И СпособРасчета <> Перечисления.СпособыРасчетаОплатыТруда.СевернаяНадбавка*/)
						{
							/*// оставляем поведение ред.2.1
*/
							/*ОбщегоНазначенияЗК.ОшибкаРасчета(ИсходныеДанные.СотрудникНаименование + "; " + ИсходныеДанные.ВидРасчетаНаименование + ": Не определены базовые начисления ");*/
						}
					}
					/*// Процентом от облагаемых ЕСН начислений - для добровольных страховых взносов в ПФР на накопительную часть пенсии
*/
					/*//
*/
				}
				if(true/*РегламентированныеУдержания И ИсходныеДанные.ЯвляетсяДСВ*/)
				{
					/*Результат = Цел(Результат);*/
				}
				if(true/*СтрокаДвижений.Сторно*/)
				{
					/*СтрокаДвижений.Результат = Результат * -1;*/
					if(true/*КомментироватьРасчет*/)
					{
						/*ОбщегоНазначенияЗК.КомментарийРасчета("Расчет сторно", КомментарийВидаРасчета, , , Перечисления.ВидыСообщений.ВажнаяИнформация);*/
					}
				}
				if(true/*КомментироватьРасчет*/)
				{
					/*ОбщегоНазначенияЗК.КомментарийРасчета("Результат расчета: " + СтрокаДвижений.Результат, КомментарийВидаРасчета);*/
				}
			}
			/*// финальные действия для поддержки 
*/
			/*// способа расчета ДоначислениеПоУправленческомуУчету
*/
			if(true/*РегламентированныеНачисления и СведенияОДоначислениях <> Неопределено*/)
			{
				if(true/*РасчетДоначисления*/)
				{
					/*СтрокаПрогноза.НачисленоПриДоначислении = СтрокаДвижений.Результат;*/
					/*СтрокаПрогноза.НачисленоПослеДоначисления = 0;*/
				}
			}
		}
		// РассчитатьЗаписьРегистраРасчета
		// Функция предназначена для получения структуры НеобходимыеДанные с элементами:
		//			База
		//			НормаВремени
		//			ОтработаноВремени
		// каждый из которых - булево и означает необходимость получения соотвю исходных данных для
		// расчета записей регистра расчета
		// Параметр:
		//	МассивСпособовРасчета - массив элементов типа СпособРасчетаСсылка или ПланВидовРасчетаСсылка

		public object ПолучитьСтруктуруНеобходимыхДанных(/*МассивСпособовРасчета, ТаблицаПоказателей*/)
		{
			/*НеобходимыеДанные = Новый Структура;*/
			/*НеобходимыеДанные.Вставить("База", Ложь);*/
			/*НеобходимыеДанные.Вставить("НормаВремени", Ложь);*/
			/*НеобходимыеДанные.Вставить("НормаВремениЗаМесяц", Ложь);*/
			/*НеобходимыеДанные.Вставить("ОтработаноВремени", Ложь);*/
			/*НеобходимыеДанные.Вставить("СдельныйЗаработок", Ложь);*/
			/*НеобходимыеДанные.Вставить("СреднийЗаработок", Ложь);*/
			/*НеобходимыеДанные.Вставить("СреднийЗаработокОтпуска", Ложь);*/
			/*НеобходимыеДанные.Вставить("СреднийЗаработокПособий", Ложь);*/
			/*НеобходимыеДанные.Вставить("ИсчисленныйНДФЛ", Ложь);*/
			/*НеобходимыеДанные.Вставить("ВычетыКДоходамНДФЛ", Ложь);*/
			/*НеобходимыеДанные.Вставить("ПределПоДокументуОснованию", Ложь);*/
			/*НеобходимыеДанные.Вставить("НакопленныеДанныеПоДокументуОснованию", Ложь);*/
			/*НеобходимыеДанные.Вставить("РазмерПособияПоУходуЗаРебенкомДо1_5Лет", Ложь);*/
			/*НеобходимыеДанные.Вставить("РазмерПособияПоУходуЗаРебенкомДо3Лет", Ложь);*/
			/*НеобходимыеДанные.Вставить("РайонныйКоэффициентРФОрганизации", Ложь);*/
			/*НеобходимыеДанные.Вставить("ПочтовыеПереводы", Ложь);*/
			/*НеобходимыеДанные.Вставить("БанковскиеИздержки", Ложь);*/
			/*НеобходимыеДанные.Вставить("РазмерОграниченияПособия", Ложь);*/
			/*НеобходимыеДанные.Вставить("ДанныеДляПрогнозаНДФЛ", Ложь);*/
			/*НеобходимыеДанные.Вставить("ПоказателиСхемМотивации", Ложь);*/
			/*НеобходимыеДанные.Вставить("Стаж", Ложь);*/
			/*НеобходимыеДанные.Вставить("ВремяВКалендарныхДнях", Ложь);*/
			/*НеобходимыеДанные.Вставить("КалендарныхДнейВмесяце", Ложь);*/
			/*НеобходимыеДанные.Вставить("ВсегоОтработаноВремени", Ложь);*/
			/*НеобходимыеДанные.Вставить("ДоходыОблагаемыеЕСН", Ложь);*/
			/*НеобходимыеДанные.Вставить("ПрожиточныйМинимум", Ложь);*/
			/*// данный Если... необходимо пополнять при появлении новых способ расчета или
*/
			/*// видов расчета, которые не укладываются ни в один из способов
*/
			/*НеобходимыеДанные.ПочтовыеПереводы = НеобходимыеДанные.ПочтовыеПереводы ИЛИ НеобходимыеДанные.БанковскиеИздержки;*/
			/*МассивСтажей = Новый Соответствие;*/
			/*НеобходимыеДанные.Вставить("ПроизвольныеСтажи", МассивСтажей);*/
			return null;
		}
		// Функция предназначена для получения оплачиваемого времени по результату запроса при расчете:
		//
		// Параметры:
		//	ИсходныеДанные - строка выборки из результат запроса, по которой вернуть время
		//
		// Возвращаемое значение:
		//	Число - размер оплачиваемого времени в днях/часах
		//

		public object ОплачиваемоеВремя(/*ИсходныеДанные, СтрокаДвижений, КомментироватьРасчет, КомментарийВладелец, СообщениеОбОшибке = Ложь, ГрафикиБезРабочегоВремени*/)
		{
			/*ОплачиваемоеВремя = 0;*/
			/*РасшифровкаКомментария = НеОпределено;*/
			/*ВажностьКомментария = НеОпределено;*/
			/*ТипВР = ТипЗнч(ИсходныеДанные.ВидРасчета);*/
			/*ЭтоРегламентированноеНачисление = ТипВР <> Тип("ПланВидовРасчетаСсылка.УправленческиеНачисления") И ТипВР <> Тип("ПланВидовРасчетаСсылка.УправленческиеУдержания");*/
			/*УчтеныВнутрисменныеОтклонения = Ложь;*/
			if(true/*ИсходныеДанные.ВидРасчетаЯвляетсяПочасовымОтклонением*/)
			{
				/*ОплачиваемоеВремя = ИсходныеДанные.ОтработаноЧасов;*/
			}
			if(true/*КомментироватьРасчет*/)
			{
				if(true/*ЭтоРегламентированноеНачисление*/)
				{
					if(true/*ИсходныеДанные.СпособВводаВремени = 1 Или ИсходныеДанные.СпособВводаВремени = 2*/)
					{
						/*// введено сводно табелем или индивид. графиком
*/
						/*РасшифровкаКомментария = Новый Массив;*/
						/*РасшифровкаКомментария.Добавить("РаботаСДиалогамиЗК.ОткрытьГрафик");*/
						/*РасшифровкаКомментария.Добавить(СтрокаДвижений.Сотрудник);*/
						/*РасшифровкаКомментария.Добавить(СтрокаДвижений.ПериодДействия);*/
						/*ТекстКомментария = "Оплачиваемое время введено сводно за весь период работы ";*/
						if(true/*ИсходныеДанные.СпособВводаВремени = 1*/)
						{
							/*ПредставлениеРасшифровки = "табелем учета рабочего времени или сдельным нарядом";*/
						}
						/*ВажностьКомментария = Перечисления.ВидыСообщений.ВажнаяИнформация;*/
					}
				}
				/*ОбщегоНазначенияЗК.КомментарийРасчета("Оплачиваемое время " + ?(ИсходныеДанные.ВидУчетаВремени = Перечисления.ВидыУчетаВремени.ПоДням, "(в днях) ", "(в часах) ") + ОплачиваемоеВремя, КомментарийВладелец);*/
				if(true/*УчтеныВнутрисменныеОтклонения*/)
				{
					/*ОбщегоНазначенияЗК.КомментарийРасчета("При расчете оплачиваемого времени учтены внутрисменные невыходы (в часах) " + ИсходныеДанные.ОтработаноЧасовПоТабелюОтклонение, КомментарийВладелец);*/
				}
				/*ОбщегоНазначенияЗК.КомментарийРасчета("Вид учета времени: " + ИсходныеДанные.ВидУчетаВремени, КомментарийВладелец);*/
				/*ОбщегоНазначенияЗК.КомментарийРасчета(ТекстКомментария, КомментарийВладелец, ПредставлениеРасшифровки, РасшифровкаКомментария, ВажностьКомментария);*/
			}
			if(true/*ЭтоРегламентированноеНачисление И Не ИсходныеДанные.ВидРасчетаЯвляетсяПочасовымОтклонением И ОплачиваемоеВремя = 0 И Не ЗначениеЗаполнено(ИсходныеДанные.НормаВремениЗаМесяц)*/)
			{
				/*КлючПоиска = Новый Структура("ГрафикРаботы,ВидУчетаВремени");*/
				/*КлючПоиска.ВидУчетаВремени = ИсходныеДанные.ВидУчетаВремени;*/
				if(true/*ИсходныеДанные.СпособВводаВремени = 1 Или ИсходныеДанные.СпособВводаВремени = 2*/)
				{
					/*КлючПоиска.ГрафикРаботы = СтрокаДвижений.Сотрудник;*/
				}
				/*КоличествоСтрокГрафика = ГрафикиБезРабочегоВремени.НайтиСтроки(КлючПоиска).Количество();*/
				if(true/*КомментироватьРасчет Или КоличествоСтрокГрафика = 0*/)
				{
					/*РасшифровкаКомментария = Новый Массив;*/
					/*РасшифровкаКомментария.Добавить("РаботаСДиалогамиЗК.ОткрытьГрафик");*/
					if(true/*ИсходныеДанные.ВидУчетаВремени = Перечисления.ВидыУчетаВремени.ПоВечернимЧасам*/)
					{
						/*ТекстВидаВремени = "вечерних часов";*/
					}
					if(true/*ИсходныеДанные.СпособВводаВремени = 1*/)
					{
						/*РасшифровкаКомментария.Добавить(СтрокаДвижений.Сотрудник);*/
						/*РасшифровкаКомментария.Добавить(СтрокаДвижений.ПериодДействия);*/
						if(true/*КомментироватьРасчет*/)
						{
							/*ТекстКомментария = "В сдельном наряде или табеле учета рабочего времени за " + Формат(СтрокаДвижений.ПериодДействия, "ДФ='MMММ yyyy ""г.""'") + " нет " + ТекстВидаВремени + "! Необходимо заполнить ";*/
						}
						/*ОбщегоНазначенияЗК.КомментарийРасчета(ТекстКомментария, КомментарийВладелец, "документ", РасшифровкаКомментария, Перечисления.ВидыСообщений.Ошибка);*/
						if(true/*КоличествоСтрокГрафика = 0*/)
						{
							/*НоваяСтрока = ГрафикиБезРабочегоВремени.Добавить();*/
							/*НоваяСтрока.ВидУчетаВремени = ИсходныеДанные.ВидУчетаВремени;*/
							/*НоваяСтрока.ГрафикРаботы = СтрокаДвижений.Сотрудник;*/
						}
					}
				}
				/*СообщениеОбОшибке = Истина;*/
			}
			return null;
		}
		// ОплачиваемоеВремя()
		// выполняет формирование и запись набора записей регистра РасчетСреднегоЗаработка
		// на основании данных набора записей регистра ОсновныеНачисленияРаботниковОрганизации
		// Параметры:
		//  ИмяРегистра - имя регистра расчетов
		//  Регистратор - регистратор набора записей регистра ОсновныеНачисленияРаботниковОрганизации
		//  НаборЗаписей
		//
		// Возвращаемое значение:
		//  нет
		//

		public void СформироватьИЗаписатьДанныеРасчетаСреднего(/*ИмяРегистра, Регистратор, НаборЗаписей, КомментироватьРасчет = Ложь*/)
		{
			/*Экспорт;*/
			/*// Вычислим наименьшую и наибольшую дату расчета среднего
*/
			/*ДатаНачалаРасчетаСреднего		= '00010101';*/
			/*ДатаОкончанияРасчетаСреднего	= '00010101';*/
			/*НГраница = НаборЗаписей.Количество();*/
			/*// Выберем данные о коэффициентах индексации за расчетные периоды (в общем случае может быть несколько 
*/
			/*// различных расчетных периодов, так как записей начислений в документе оплаты может быть несколько и мы позволяем 
*/
			/*// пользователю редактировать расчетный период)
*/
			/*// Реализация Федеральных законов:
*/
			/*//	от 22.12.2005 г. № 180-ФЗ и от 29 декабря 2006 г. № 255-ФЗ - по больничным листам
*/
			/*//	от 5 декабря 2006 г. № 207-ФЗ - по отпуску по уходу за детьми
*/
			/*// - поле "Сотрудник" с 1 января 2006 года для больничных листов и с 1 января 2007 года для отпуска по уходу за детьми
*/
			/*// может идентифицировать несколько мест работы, включая работу по внутреннему совместительству
*/
			/*// - выборка РаботникиОрганизацийСрезПоследних содержит все действующие на конец расчетного периода
*/
			/*// рабочие места
*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;*/
			/*ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(РаботникиОрганизацийСрезПоследних.Сотрудник, Основной.Сотрудник) КАК Сотрудник,
	|	Основной.ФизЛицо КАК Физлицо,
	|	Основной.Организация КАК Организация,
	|	Основной.ВидУчетаВремени КАК ВидУчетаВремени,
	|	ВЫБОР
	|		КОГДА Основной.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработкаФСС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
	|		ИНАЧЕ Основной.ВидРасчета.СпособРасчета
	|	КОНЕЦ КАК СпособРасчета,
	|	РАЗНОСТЬДАТ(Основной.ПериодРасчетаСреднегоЗаработкаНачало, НАЧАЛОПЕРИОДА(Основной.ПериодРасчетаСреднегоЗаработкаОкончание, МЕСЯЦ), МЕСЯЦ) + 1 КАК ПериодРасчетаСреднегоЗаработка,
	|	Основной.ПериодРасчетаСреднегоЗаработкаНачало КАК НачалоБП,
	|	КОНЕЦПЕРИОДА(Основной.ПериодРасчетаСреднегоЗаработкаОкончание, ДЕНЬ) КАК КонецБП,
	|	Основной.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
	|	ВЫБОР
	|		КОГДА Основной.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработкаФСС))
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(КоэффициентИндексацииЗаработка.Коэффициент, 1)
	|	КОНЕЦ КАК КоэффициентИндексации,
	|	ВЫБОР
	|		КОГДА Основной.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработкаФСС))
	|			ТОГДА ДОБАВИТЬКДАТЕ(Основной.ПериодРасчетаСреднегоЗаработкаНачало, МЕСЯЦ, 1)
	|		ИНАЧЕ ЕСТЬNULL(КоэффициентИндексацииЗаработка.Период, Основной.ДатаНачалаСобытия)
	|	КОНЕЦ КАК Период,
	|	НЕОПРЕДЕЛЕНО КАК ВариантЗаполненияСреднего,
	|	ВЫБОР
	|		КОГДА Основной.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет)
	|			ТОГДА НАЧАЛОПЕРИОДА(Основной.Регистратор.Дата, МЕСЯЦ)
	|		ИНАЧЕ Основной.Регистратор.ПериодРегистрации
	|	КОНЕЦ КАК ПериодРегистрации
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Основной
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КоэффициентИндексацииЗаработка КАК КоэффициентИндексацииЗаработка
	|		ПО ((НЕ Основной.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработкаФСС))))
	|			И (КоэффициентИндексацииЗаработка.Сотрудник = Основной.Сотрудник)
	|			И (КоэффициентИндексацииЗаработка.Период > Основной.ПериодРасчетаСреднегоЗаработкаНачало)
	|			И (КоэффициентИндексацииЗаработка.Период < Основной.ДатаНачалаСобытия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ДатыРегистра.Сотрудник КАК Сотрудник,
	|			ДатыРегистра.Регистратор КАК Регистратор,
	|			ДатыРегистра.НомерСтроки КАК НомерСтроки
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ОсновныеНачисленияРаботниковОрганизаций.Регистратор КАК Регистратор,
	|				ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки КАК НомерСтроки,
	|				ОсновныеНачисленияРаботниковОрганизаций.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
	|				РаботникиОрганизаций.Сотрудник КАК Сотрудник,
	|				МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период
	|			ИЗ
	|				РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|					ПО ОсновныеНачисленияРаботниковОрганизаций.ДатаНачалаСобытия >= РаботникиОрганизаций.Период
	|						И ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо = РаботникиОрганизаций.Сотрудник.Физлицо
	|						И ОсновныеНачисленияРаботниковОрганизаций.Организация = РаботникиОрганизаций.Сотрудник.Организация
	|			ГДЕ
	|				ОсновныеНачисленияРаботниковОрганизаций.Регистратор = &парамРегистратор
	|				И ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработкаФСС))
	|				И ОсновныеНачисленияРаботниковОрганизаций.ДатаНачалаСобытия >= &парамДатаЗакона180ФЗ
	|				И (НЕ ОсновныеНачисленияРаботниковОрганизаций.Сторно)
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ОсновныеНачисленияРаботниковОрганизаций.Регистратор,
	|				ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки,
	|				ОсновныеНачисленияРаботниковОрганизаций.ДатаНачалаСобытия,
	|				РаботникиОрганизаций.Сотрудник) КАК ДатыРегистра
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|				ПО ДатыРегистра.Период = РаботникиОрганизаций.Период
	|					И ДатыРегистра.Сотрудник = РаботникиОрганизаций.Сотрудник
	|		ГДЕ
	|			ВЫБОР
	|					КОГДА ДатыРегистра.ДатаНачалаСобытия >= РаботникиОрганизаций.ПериодЗавершения
	|							И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА РаботникиОрганизаций.ПричинаИзмененияСостоянияЗавершения
	|					ИНАЧЕ РаботникиОрганизаций.ПричинаИзмененияСостояния
	|				КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)) КАК РаботникиОрганизацийСрезПоследних
	|		ПО Основной.Регистратор = РаботникиОрганизацийСрезПоследних.Регистратор
	|			И Основной.НомерСтроки = РаботникиОрганизацийСрезПоследних.НомерСтроки
	|ГДЕ
	|	Основной.Регистратор = &парамРегистратор
	|	И Основной.ВидРасчета.СпособРасчета В(&парамСпособыРасчета)
	|	И (НЕ Основной.Сторно)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Физлицо,
	|	Сотрудник,
	|	СпособРасчета,
	|	НачалоБП,
	|	КонецБП,
	|	Период УБЫВ";*/
			/*// уточним запрос для разных расчетных регистров
*/
			if(true/*ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций"*/)
			{
				/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"НЕОПРЕДЕЛЕНО КАК ВариантЗаполненияСреднего",
		"ВЫБОР
		|		КОГДА Основной.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет)
		|			ТОГДА ВЫБОР
		|					КОГДА Основной.ДатаНачалаСобытия >= &парамДатаЗакона213ФЗ
		|						ТОГДА ""ЗаСчетФССПо213ФЗ""
		|					ИНАЧЕ ""ЗаСчетФССПо255ФЗ""
		|				КОНЕЦ
		|		КОГДА Основной.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработкаФСС))
		|			ТОГДА ВЫБОР
		|					КОГДА Основной.ПериодРегистрации >= &парамДатаЗакона213ФЗ И Основной.ПериодДействияНачало >= &парамДатаЗакона213ФЗ
		|						ТОГДА ""ЗаСчетФССПо213ФЗ""
		|					КОГДА Основной.ДатаНачалаСобытия >= &парамДатаЗакона255ФЗ
		|						ТОГДА ""ЗаСчетФССПо255ФЗ""
		|					КОГДА Основной.ВариантАлгоритмаРасчета В (&БольничныеПереходногоПериода)
		|						ТОГДА ""ПереходныйПериодПо255ФЗ""
		|					ИНАЧЕ ""ЗаСчетФССПо180ФЗ""
		|				КОНЕЦ
		|		КОГДА Основной.ДатаНачалаСобытия >= &парамДатаПостановления922
		|			ТОГДА ""Средний2008""
		|		ИНАЧЕ ""Средний""
		|	КОНЕЦ КАК ВариантЗаполненияСреднего");*/
			}
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.УстановитьПараметр("парамДатаЗакона180ФЗ",		'20060101');*/
			/*Запрос.УстановитьПараметр("парамДатаЗакона255ФЗ",		ПроведениеРасчетовДополнительный.ПолучитьДатуВступленияВСилуИзмененийПоСоциальнымПособиям2006());*/
			/*Запрос.УстановитьПараметр("парамДатаЗакона213ФЗ",		ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами());*/
			/*ДатаПостановления922	= ПроведениеРасчетовДополнительный.ПолучитьДатуВступленияВСилуИзмененийПоОтпускам2008();*/
			/*Запрос.УстановитьПараметр("парамДатаПостановления922",	ДатаПостановления922);*/
			/*Запрос.УстановитьПараметр("парамРегистратор",			Регистратор);*/
			/*СпособыРасчетаПоСреднему = Новый Массив(7);*/
			/*СпособыРасчетаПоСреднему[0] = Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработку;*/
			/*СпособыРасчетаПоСреднему[1] = Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС;*/
			/*СпособыРасчетаПоСреднему[2] = Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням;*/
			/*СпособыРасчетаПоСреднему[3] = Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке;*/
			/*СпособыРасчетаПоСреднему[4] = Перечисления.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработка;*/
			/*СпособыРасчетаПоСреднему[5] = Перечисления.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет;*/
			/*СпособыРасчетаПоСреднему[6] = Перечисления.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработкаФСС;*/
			/*Запрос.УстановитьПараметр("парамСпособыРасчета", СпособыРасчетаПоСреднему);*/
			/*БольничныеПереходногоПериода = Новый Массив(7);*/
			/*БольничныеПереходногоПериода[0] = Перечисления.ВариантыАлгоритмовРасчета.БольничныйПереходногоПериодаБезОграничений;*/
			/*БольничныеПереходногоПериода[1] = Перечисления.ВариантыАлгоритмовРасчета.БольничныйПереходногоПериодаСОбщимОграничением;*/
			/*БольничныеПереходногоПериода[2] = Перечисления.ВариантыАлгоритмовРасчета.БольничныйПереходногоПериодаСОбщимОграничениемИБезОграничений;*/
			/*БольничныеПереходногоПериода[3] = Перечисления.ВариантыАлгоритмовРасчета.БольничныйПереходногоПериодаСОбщимОграничениемИВРазмереММОТ;*/
			/*БольничныеПереходногоПериода[4] = Перечисления.ВариантыАлгоритмовРасчета.БольничныйПереходногоПериодаСОграничениемВРазмереММОТ;*/
			/*БольничныеПереходногоПериода[5] = Перечисления.ВариантыАлгоритмовРасчета.БольничныйПереходногоПериодаСОграничениемВРазмереММОТиБезОграничений;*/
			/*БольничныеПереходногоПериода[6] = Перечисления.ВариантыАлгоритмовРасчета.БольничныйПереходногоПериодаСОграничениямиВРазмереММОТиОбщим;*/
			/*Запрос.УстановитьПараметр("БольничныеПереходногоПериода", БольничныеПереходногоПериода);*/
			/*Выборка = Запрос.Выполнить().Выбрать();*/
			/*ПредыдущаяСтрокаЗаработок	= Неопределено;*/
			/*ПредыдущаяСтрокаПремии		= Неопределено;*/
			/*ПредыдущаяСтрокаФиксПремии	= Неопределено;*/
			/*ТекущийСотрудник			= Неопределено;*/
			/*ТекущийСпособ				= Неопределено;*/
			/*ТекущийНачалоБП				= Неопределено;*/
			/*ТекущийКонецБП				= Неопределено;*/
			/*ТекущаяДатаНачалаСобытия	= Неопределено;*/
			/*ТекущийКоэффициент			= 1;*/
			/*ТекущийВариантЗаполненияСреднего = "";*/
			/*// предопределенные виды расчета среднего заработка
*/
			/*ПоЗаработку		= Неопределено;*/
			/*ПоПремиям		= Неопределено;*/
			/*ПоФиксПремиям	= Неопределено;*/
			/*ПоГодовойПремии	= Неопределено;*/
			/*ПоФиксГодовойПремии	= Неопределено;*/
			/*ПоЗаработкуБЛ			= ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛ;*/
			/*ПоЗаработкуБЛиПособий	= ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособий;*/
			/*ПоЗаработкуБЛиПособийС2010 = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010;*/
			/*ПоПремиямБЛ				= ПланыВидовРасчета.СреднийЗаработок.ПоПремиямБЛ;*/
			/*ПоФиксПремиямБЛ			= ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямБЛ;*/
			/*ПоПремиямБЛиПособий		= ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособий;*/
			/*ПоПремиямБЛиПособийС2010 = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010;*/
			/*ПоГодовойПремииБЛ		= ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииБЛ;*/
			/*ПоФиксГодовойПремииБЛ	= ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииБЛ;*/
			/*ПоЗаработкуДо			= ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку;*/
			/*ПоЗаработкуПосле		= ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые;*/
			/*ПоЗаработкуНеИндексируемый = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуНеИндексируемые;*/
			/*ПоПремиямДо				= ПланыВидовРасчета.СреднийЗаработок.ПоПремиям;*/
			/*ПоПремиямПосле			= ПланыВидовРасчета.СреднийЗаработок.ПоПремиямИндексируемые;*/
			/*ПоПремиямНеИндексируемый = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямНеИндексируемые;*/
			/*ПоФиксПремиямДо			= ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиям;*/
			/*ПоФиксПремиямПосле		= ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямНеИндексируемые;*/
			/*ПоГодовойПремииДо		= ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремии;*/
			/*ПоГодовойПремииПосле	= ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииНеИндексируемые;*/
			/*ПоГодовойПремииИндексируемый = ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииИндексируемые;*/
			/*ПоФиксГодовойПремииДо	= ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремии;*/
			/*ПоФиксГодовойПремииПосле = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииНеИндексируемые;*/
			/*Организация = Справочники.Организации.ПустаяСсылка();*/
			/*// Скопируем структуру набора записей
*/
			/*ТаблицаЗаписей = НаборЗаписей.Выгрузить();*/
			/*// Выборку обходим в порядке убывания дат случаев индексации
*/
			while(true/*Выборка.Следующий()*/)
			{
				if(true/*Не ЗначениеЗаполнено(Организация)*/)
				{
					/*Организация = Выборка.Организация;*/
				}
				/*// Проверим, не сменился ли работник
*/
				if(true/*ТекущийСотрудник <> Выборка.Сотрудник
			ИЛИ ТекущийСпособ <> Выборка.СпособРасчета
			ИЛИ ТекущийНачалоБП <> Выборка.НачалоБП
			ИЛИ ТекущийКонецБП <> Выборка.КонецБП
			ИЛИ ТекущийВариантЗаполненияСреднего <> Выборка.ВариантЗаполненияСреднего
			ИЛИ ТекущаяДатаНачалаСобытия <> Выборка.ДатаНачалаСобытия*/)
				{
					/*// Закроем строки по предыдущему работнику
*/
					if(true/*ПредыдущаяСтрокаЗаработок <> Неопределено*/)
					{
						/*ТекущийМесяц = НачалоМесяца(ПредыдущаяСтрокаЗаработок.БазовыйПериодКонец);*/
						/*МесяцБазовыйПериодНачало = НачалоМесяца(ТекущийНачалоБП);*/
						/*СтрокаЗаработок = ПредыдущаяСтрокаЗаработок;*/
						/*СтрокаПремии = ПредыдущаяСтрокаПремии;*/
						/*СтрокаФиксПремии = ПредыдущаяСтрокаФиксПремии;*/
						while(true/*ТекущийМесяц > МесяцБазовыйПериодНачало*/)
						{
							/*// дозаполним строки по работнику
*/
							/*СтрокаЗаработок.БазовыйПериодНачало		= ТекущийМесяц;*/
							/*СтрокаПремии.БазовыйПериодНачало		= ТекущийМесяц;*/
							/*СтрокаФиксПремии.БазовыйПериодНачало	= ТекущийМесяц;*/
							if(true/*ТекущийВариантЗаполненияСреднего = "ПереходныйПериодПо255ФЗ"*/)
							{
								/*СтрокаЗаработокПереходногоПериода = ПроведениеРасчетов.СоздатьСтрокуРасчетаСреднего(Выборка, ТаблицаЗаписей, Регистратор,ПоЗаработкуБЛиПособий);*/
								/*СтрокаПремииПереходногоПериода = ПроведениеРасчетов.СоздатьСтрокуРасчетаСреднего(Выборка, ТаблицаЗаписей, Регистратор, ПоПремиямБЛиПособий);*/
								/*ЗаполнитьЗначенияСвойств(СтрокаЗаработокПереходногоПериода,СтрокаЗаработок,,"ВидРасчета");*/
								/*ЗаполнитьЗначенияСвойств(СтрокаПремииПереходногоПериода,СтрокаПремии,,"ВидРасчета");*/
							}
							/*// Создадим по первой строке по работнику для заработка и премии
*/
							/*СтрокаЗаработок = ПроведениеРасчетов.СоздатьСтрокуРасчетаСреднего(Выборка, ТаблицаЗаписей, Регистратор,ПоЗаработку);*/
							/*СтрокаПремии = ПроведениеРасчетов.СоздатьСтрокуРасчетаСреднего(Выборка, ТаблицаЗаписей, Регистратор, ПоПремиям);*/
							if(true/*Выборка.ВариантЗаполненияСреднего = "ЗаСчетФССПо255ФЗ"
						Или Выборка.ВариантЗаполненияСреднего = "ЗаСчетФССПо213ФЗ"*/)
							{
								/*СтрокаФиксПремии = СтрокаПремии;*/
							}
							/*ЗаполнитьЗначенияСвойств(СтрокаЗаработок,ПредыдущаяСтрокаЗаработок);*/
							/*ЗаполнитьЗначенияСвойств(СтрокаПремии,ПредыдущаяСтрокаПремии);*/
							/*ЗаполнитьЗначенияСвойств(СтрокаФиксПремии,ПредыдущаяСтрокаФиксПремии);*/
							/*СтрокаЗаработок.БазовыйПериодКонец		= ТекущийМесяц - 1;*/
							/*СтрокаПремии.БазовыйПериодКонец			= ТекущийМесяц - 1;*/
							/*СтрокаФиксПремии.БазовыйПериодКонец		= ТекущийМесяц - 1;*/
							/*СтрокаЗаработок.КоэффициентИндексации	= ТекущийКоэффициент;*/
							/*СтрокаПремии.КоэффициентИндексации		= ТекущийКоэффициент;*/
							/*СтрокаФиксПремии.КоэффициентИндексации	= ТекущийКоэффициент;*/
							/*ТекущийМесяц = ДобавитьМесяц(ТекущийМесяц, -1);*/
						}
						/*// закроем последнюю строку по предыдущему работнику
*/
						/*СтрокаЗаработок.БазовыйПериодНачало		= ТекущийНачалоБП;*/
						/*СтрокаПремии.БазовыйПериодНачало		= ТекущийНачалоБП;*/
						/*СтрокаФиксПремии.БазовыйПериодНачало	= ТекущийНачалоБП;*/
						if(true/*ТекущийВариантЗаполненияСреднего = "ПереходныйПериодПо255ФЗ"*/)
						{
							/*СтрокаЗаработокПереходногоПериода = ПроведениеРасчетов.СоздатьСтрокуРасчетаСреднего(Выборка, ТаблицаЗаписей, Регистратор,ПоЗаработкуБЛиПособий);*/
							/*СтрокаПремииПереходногоПериода = ПроведениеРасчетов.СоздатьСтрокуРасчетаСреднего(Выборка, ТаблицаЗаписей, Регистратор, ПоПремиямБЛиПособий);*/
							/*ЗаполнитьЗначенияСвойств(СтрокаЗаработокПереходногоПериода,СтрокаЗаработок,,"ВидРасчета");*/
							/*ЗаполнитьЗначенияСвойств(СтрокаПремииПереходногоПериода,СтрокаПремии,,"ВидРасчета");*/
						}
						/*ПредыдущаяСтрокаЗаработок	= Неопределено;*/
						/*ПредыдущаяСтрокаПремии		= Неопределено;*/
						/*ПредыдущаяСтрокаФиксПремии	= Неопределено;*/
					}
					/*// Запомним новый набор идентификаторов начисления
*/
					/*ТекущийСотрудник			= Выборка.Сотрудник;*/
					/*ТекущийСпособ				= Выборка.СпособРасчета;*/
					/*ТекущийНачалоБП				= Выборка.НачалоБП;*/
					/*ТекущийКонецБП				= Выборка.КонецБП;*/
					/*ТекущаяДатаНачалаСобытия	= Выборка.ДатаНачалаСобытия;*/
					/*ТекущийВариантЗаполненияСреднего = Выборка.ВариантЗаполненияСреднего;*/
					/*ПоЗаработку		= ?(Выборка.ДатаНачалаСобытия < ДатаПостановления922, ПоЗаработкуДо, ПоЗаработкуПосле);*/
					/*ПоПремиям		= ?(Выборка.ДатаНачалаСобытия < ДатаПостановления922, ПоПремиямДо, ПоПремиямПосле);*/
					/*ПоФиксПремиям	= ?(Выборка.ДатаНачалаСобытия < ДатаПостановления922, ПоФиксПремиямДо, ПоФиксПремиямПосле);*/
					/*ПоГодовойПремии	= ?(Выборка.ДатаНачалаСобытия < ДатаПостановления922, ПоГодовойПремииДо, ПоГодовойПремииПосле);*/
					/*ПоФиксГодовойПремии	= ?(Выборка.ДатаНачалаСобытия < ДатаПостановления922, ПоФиксГодовойПремииДо, ПоФиксГодовойПремииПосле);*/
					/*// Инициализируем данные для нового работника
*/
					/*ТекущийКоэффициент = 1;*/
					/*// введем вид расчета по годовой премии
*/
					if(true/*Выборка.ВариантЗаполненияСреднего = "Средний" Или Выборка.ВариантЗаполненияСреднего = "Средний2008"*/)
					{
						/*СтрокаГП = ПроведениеРасчетов.СоздатьСтрокуРасчетаСреднего(Выборка, ТаблицаЗаписей, Регистратор,ПоГодовойПремии);*/
						/*// при расчете годовой премии в базовый период пишем расчетный период 
*/
						/*СтрокаГП.БазовыйПериодНачало	= ТекущийНачалоБП;*/
						/*СтрокаГП.БазовыйПериодКонец		= ТекущийКонецБП;*/
					}
					/*// введем вид расчета по годовой премии, начисляемых фиксированными суммами
*/
					if(true/*Выборка.ВариантЗаполненияСреднего = "Средний" Или Выборка.ВариантЗаполненияСреднего = "Средний2008"*/)
					{
						/*СтрокаГП = ПроведениеРасчетов.СоздатьСтрокуРасчетаСреднего(Выборка, ТаблицаЗаписей, Регистратор,ПоФиксГодовойПремии);*/
						/*// при расчете годовой премии в базовый период пишем расчетный период 
*/
						/*СтрокаГП.БазовыйПериодНачало	= ТекущийНачалоБП;*/
						/*СтрокаГП.БазовыйПериодКонец		= ТекущийКонецБП;*/
					}
					/*// Создадим по первой строке по работнику для заработка и премии
*/
					if(true/*Выборка.ВариантЗаполненияСреднего = "Средний" Или Выборка.ВариантЗаполненияСреднего = "Средний2008"*/)
					{
						/*СтрокаЗаработок = ПроведениеРасчетов.СоздатьСтрокуРасчетаСреднего(Выборка, ТаблицаЗаписей, Регистратор,ПоЗаработку);*/
						/*СтрокаПремии = ПроведениеРасчетов.СоздатьСтрокуРасчетаСреднего(Выборка, ТаблицаЗаписей, Регистратор, ПоПремиям);*/
						/*СтрокаФиксПремии = ПроведениеРасчетов.СоздатьСтрокуРасчетаСреднего(Выборка, ТаблицаЗаписей, Регистратор, ПоФиксПремиям);*/
					}
					/*СтрокаЗаработок.КоэффициентИндексации	= 1;*/
					/*СтрокаПремии.КоэффициентИндексации		= 1;*/
					/*СтрокаФиксПремии.КоэффициентИндексации	= 1;*/
					/*СтрокаЗаработок.БазовыйПериодКонец		= Выборка.КонецБП;*/
					/*СтрокаПремии.БазовыйПериодКонец			= Выборка.КонецБП;*/
					/*СтрокаФиксПремии.БазовыйПериодКонец		= Выборка.КонецБП;*/
					if(true/*Выборка.Период <= Выборка.КонецБП*/)
					{
						/*ТекущийМесяц = НачалоМесяца(СтрокаЗаработок.БазовыйПериодКонец);*/
						/*МесяцБазовыйПериодНачало = НачалоМесяца(Выборка.Период);*/
						while(true/*ТекущийМесяц > МесяцБазовыйПериодНачало*/)
						{
							/*// дозаполним строки по работнику
*/
							/*СтрокаЗаработок.БазовыйПериодНачало		= ТекущийМесяц;*/
							/*СтрокаПремии.БазовыйПериодНачало		= ТекущийМесяц;*/
							/*СтрокаФиксПремии.БазовыйПериодНачало	= ТекущийМесяц;*/
							if(true/*ТекущийВариантЗаполненияСреднего = "ПереходныйПериодПо255ФЗ"*/)
							{
								/*СтрокаЗаработокПереходногоПериода = ПроведениеРасчетов.СоздатьСтрокуРасчетаСреднего(Выборка, ТаблицаЗаписей, Регистратор,ПоЗаработкуБЛиПособий);*/
								/*СтрокаПремииПереходногоПериода = ПроведениеРасчетов.СоздатьСтрокуРасчетаСреднего(Выборка, ТаблицаЗаписей, Регистратор, ПоПремиямБЛиПособий);*/
								/*ЗаполнитьЗначенияСвойств(СтрокаЗаработокПереходногоПериода,СтрокаЗаработок,,"ВидРасчета");*/
								/*ЗаполнитьЗначенияСвойств(СтрокаПремииПереходногоПериода,СтрокаПремии,,"ВидРасчета");*/
							}
							/*// Создадим по первой строке по работнику для заработка и премии
*/
							if(true/*Выборка.ВариантЗаполненияСреднего = "Средний" Или Выборка.ВариантЗаполненияСреднего = "Средний2008"*/)
							{
								/*СтрокаЗаработок = ПроведениеРасчетов.СоздатьСтрокуРасчетаСреднего(Выборка, ТаблицаЗаписей, Регистратор,ПоЗаработку);*/
								/*СтрокаПремии = ПроведениеРасчетов.СоздатьСтрокуРасчетаСреднего(Выборка, ТаблицаЗаписей, Регистратор, ПоПремиям);*/
								/*СтрокаФиксПремии = ПроведениеРасчетов.СоздатьСтрокуРасчетаСреднего(Выборка, ТаблицаЗаписей, Регистратор, ПоФиксПремиям);*/
							}
							/*СтрокаЗаработок.БазовыйПериодКонец		= ТекущийМесяц - 1;*/
							/*СтрокаПремии.БазовыйПериодКонец			= ТекущийМесяц - 1;*/
							/*СтрокаФиксПремии.БазовыйПериодКонец		= ТекущийМесяц - 1;*/
							/*СтрокаЗаработок.КоэффициентИндексации	= ТекущийКоэффициент;*/
							/*СтрокаПремии.КоэффициентИндексации		= ТекущийКоэффициент;*/
							/*СтрокаФиксПремии.КоэффициентИндексации	= ?(Выборка.ВариантЗаполненияСреднего = "Средний2008",1,ТекущийКоэффициент);*/
							/*ТекущийМесяц = ДобавитьМесяц(ТекущийМесяц, -1);*/
						}
						/*// дозаполним первые строки по работнику
*/
						/*СтрокаЗаработок.БазовыйПериодНачало		= Выборка.Период;*/
						/*СтрокаПремии.БазовыйПериодНачало		= Выборка.Период;*/
						/*СтрокаФиксПремии.БазовыйПериодНачало	= Выборка.Период;*/
						if(true/*ТекущийВариантЗаполненияСреднего = "ПереходныйПериодПо255ФЗ"*/)
						{
							/*СтрокаЗаработокПереходногоПериода = ПроведениеРасчетов.СоздатьСтрокуРасчетаСреднего(Выборка, ТаблицаЗаписей, Регистратор,ПоЗаработкуБЛиПособий);*/
							/*СтрокаПремииПереходногоПериода = ПроведениеРасчетов.СоздатьСтрокуРасчетаСреднего(Выборка, ТаблицаЗаписей, Регистратор, ПоПремиямБЛиПособий);*/
							/*ЗаполнитьЗначенияСвойств(СтрокаЗаработокПереходногоПериода,СтрокаЗаработок,,"ВидРасчета");*/
							/*ЗаполнитьЗначенияСвойств(СтрокаПремииПереходногоПериода,СтрокаПремии,,"ВидРасчета");*/
						}
						/*// и создадим еще по одной строке
*/
						if(true/*Выборка.ВариантЗаполненияСреднего = "Средний" Или Выборка.ВариантЗаполненияСреднего = "Средний2008"*/)
						{
							/*СтрокаЗаработок = ПроведениеРасчетов.СоздатьСтрокуРасчетаСреднего(Выборка, ТаблицаЗаписей, Регистратор,ПоЗаработку);*/
							/*СтрокаПремии = ПроведениеРасчетов.СоздатьСтрокуРасчетаСреднего(Выборка, ТаблицаЗаписей, Регистратор, ПоПремиям);*/
							/*СтрокаФиксПремии = ПроведениеРасчетов.СоздатьСтрокуРасчетаСреднего(Выборка, ТаблицаЗаписей, Регистратор, ПоФиксПремиям);*/
						}
						/*// дозаполним - знаем все кроме БазовыйПериодНачало
*/
						/*ТекущийКоэффициент = Выборка.КоэффициентИндексации * ТекущийКоэффициент;*/
						/*СтрокаЗаработок.БазовыйПериодКонец	= Выборка.Период-1;*/
						/*СтрокаПремии.БазовыйПериодКонец		= Выборка.Период-1;*/
						/*СтрокаФиксПремии.БазовыйПериодКонец	= Выборка.Период-1;*/
					}
					/*СтрокаЗаработок.КоэффициентИндексации	= ТекущийКоэффициент;*/
					/*СтрокаПремии.КоэффициентИндексации		= ТекущийКоэффициент;*/
					/*СтрокаФиксПремии.КоэффициентИндексации	= ?(Выборка.ВариантЗаполненияСреднего = "Средний2008",1,ТекущийКоэффициент);*/
				}
				/*// Сохраним для следующей итерации
*/
				/*ПредыдущаяСтрокаЗаработок	= СтрокаЗаработок;*/
				/*ПредыдущаяСтрокаПремии		= СтрокаПремии;*/
				/*ПредыдущаяСтрокаФиксПремии	= СтрокаФиксПремии;*/
				/*// Расчет минимальной и максимальной из дат начала и окончания расчетных периодов 
*/
				/*//(эти данные нужны для процедуры ПолучитьДанныеДляРасчета
*/
				if(true/*ДатаНачалаРасчетаСреднего = '00010101'*/)
				{
					/*ДатаНачалаРасчетаСреднего = Выборка.НачалоБП;*/
				}
				if(true/*ДатаОкончанияРасчетаСреднего = '00010101'*/)
				{
					/*ДатаОкончанияРасчетаСреднего = Выборка.КонецБП;*/
				}
			}
			if(true/*ПредыдущаяСтрокаЗаработок <> Неопределено*/)
			{
				/*ТекущийМесяц = НачалоМесяца(ПредыдущаяСтрокаЗаработок.БазовыйПериодКонец);*/
				/*МесяцБазовыйПериодНачало = НачалоМесяца(ТекущийНачалоБП);*/
				/*СтрокаЗаработок		= ПредыдущаяСтрокаЗаработок;*/
				/*СтрокаПремии		= ПредыдущаяСтрокаПремии;*/
				/*СтрокаФиксПремии	= ПредыдущаяСтрокаФиксПремии;*/
				while(true/*ТекущийМесяц > МесяцБазовыйПериодНачало*/)
				{
					/*// дозаполним строки по работнику
*/
					/*СтрокаЗаработок.БазовыйПериодНачало		= ТекущийМесяц;*/
					/*СтрокаПремии.БазовыйПериодНачало		= ТекущийМесяц;*/
					/*СтрокаФиксПремии.БазовыйПериодНачало	= ТекущийМесяц;*/
					if(true/*ТекущийВариантЗаполненияСреднего = "ПереходныйПериодПо255ФЗ"*/)
					{
						/*СтрокаЗаработокПереходногоПериода = ПроведениеРасчетов.СоздатьСтрокуРасчетаСреднего(Выборка, ТаблицаЗаписей, Регистратор,ПоЗаработкуБЛиПособий);*/
						/*СтрокаПремииПереходногоПериода = ПроведениеРасчетов.СоздатьСтрокуРасчетаСреднего(Выборка, ТаблицаЗаписей, Регистратор, ПоПремиямБЛиПособий);*/
						/*ЗаполнитьЗначенияСвойств(СтрокаЗаработокПереходногоПериода,СтрокаЗаработок,,"ВидРасчета");*/
						/*ЗаполнитьЗначенияСвойств(СтрокаПремииПереходногоПериода,СтрокаПремии,,"ВидРасчета");*/
					}
					/*// Создадим по первой строке по работнику для заработка и премии
*/
					/*СтрокаЗаработок = ПроведениеРасчетов.СоздатьСтрокуРасчетаСреднего(Выборка, ТаблицаЗаписей, Регистратор,ПоЗаработку);*/
					/*СтрокаПремии = ПроведениеРасчетов.СоздатьСтрокуРасчетаСреднего(Выборка, ТаблицаЗаписей, Регистратор, ПоПремиям);*/
					if(true/*Выборка.ВариантЗаполненияСреднего = "ЗаСчетФССПо255ФЗ"
						Или Выборка.ВариантЗаполненияСреднего = "ЗаСчетФССПо213ФЗ"*/)
					{
						/*СтрокаФиксПремии = СтрокаПремии;*/
					}
					/*ЗаполнитьЗначенияСвойств(СтрокаЗаработок,ПредыдущаяСтрокаЗаработок);*/
					/*ЗаполнитьЗначенияСвойств(СтрокаПремии,ПредыдущаяСтрокаПремии);*/
					/*ЗаполнитьЗначенияСвойств(СтрокаФиксПремии,ПредыдущаяСтрокаФиксПремии);*/
					/*СтрокаЗаработок.БазовыйПериодКонец		= ТекущийМесяц - 1;*/
					/*СтрокаПремии.БазовыйПериодКонец			= ТекущийМесяц - 1;*/
					/*СтрокаФиксПремии.БазовыйПериодКонец		= ТекущийМесяц - 1;*/
					/*СтрокаЗаработок.КоэффициентИндексации	= ТекущийКоэффициент;*/
					/*СтрокаПремии.КоэффициентИндексации		= ТекущийКоэффициент;*/
					/*СтрокаФиксПремии.КоэффициентИндексации	= ?(Выборка.ВариантЗаполненияСреднего = "Средний2008",1,ТекущийКоэффициент);*/
					/*ТекущийМесяц = ДобавитьМесяц(ТекущийМесяц, -1);*/
				}
				/*// закроем последнюю строку по предыдущему работнику
*/
				/*СтрокаЗаработок.БазовыйПериодНачало		= ТекущийНачалоБП;*/
				/*СтрокаПремии.БазовыйПериодНачало		= ТекущийНачалоБП;*/
				/*СтрокаФиксПремии.БазовыйПериодНачало	= ТекущийНачалоБП;*/
				if(true/*ТекущийВариантЗаполненияСреднего = "ПереходныйПериодПо255ФЗ"*/)
				{
					/*СтрокаЗаработокПереходногоПериода = ПроведениеРасчетов.СоздатьСтрокуРасчетаСреднего(Выборка, ТаблицаЗаписей, Регистратор,ПоЗаработкуБЛиПособий);*/
					/*СтрокаПремииПереходногоПериода = ПроведениеРасчетов.СоздатьСтрокуРасчетаСреднего(Выборка, ТаблицаЗаписей, Регистратор, ПоПремиямБЛиПособий);*/
					/*ЗаполнитьЗначенияСвойств(СтрокаЗаработокПереходногоПериода,СтрокаЗаработок,,"ВидРасчета");*/
					/*ЗаполнитьЗначенияСвойств(СтрокаПремииПереходногоПериода,СтрокаПремии,,"ВидРасчета");*/
				}
			}
			/*// Загрузим полученные периоды в набор записей
*/
			/*НаборЗаписей.Загрузить(ТаблицаЗаписей);*/
			/*// Зафиксируем нарезанные записи
*/
			/*НаборЗаписей.Записать();*/
			/*////////////////////////////////////////////////////////////////////////////////
*/
			/*// базовые данные для расчета ресурсов
*/
			/*ПроведениеРасчетов.ДописатьАлгоритмВЗапрос("РасчетнаяБазаСреднегоЗаработка", КомментироватьРасчет, Запрос);*/
			/*ПоГодовойПремии = Новый Массив;*/
			/*ПоГодовойПремии.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремии);*/
			/*ПоГодовойПремии.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииБЛ);*/
			/*ПоГодовойПремии.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииПособий);*/
			/*ПоГодовойПремии.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремии);*/
			/*ПоГодовойПремии.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииБЛ);*/
			/*ПоГодовойПремии.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииПособий);*/
			/*ПоГодовойПремии.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииНеИндексируемые);*/
			/*ПоГодовойПремии.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииНеИндексируемые);*/
			/*Заработок = Новый Массив;*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛ);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособий);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуНеИндексируемые);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиям);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиямБЛ);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиямИндексируемые);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиямНеИндексируемые);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособий);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиям);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямБЛ);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямПособий);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямНеИндексируемые);*/
			/*Запрос.УстановитьПараметр("парамЗаработокБезБольничных", Заработок);*/
			/*Заработок = Новый Массив;*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛ);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособий);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуНеИндексируемые);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиям);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиямБЛ);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиямИндексируемые);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиямНеИндексируемые);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособий);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиям);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямБЛ);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямПособий);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямНеИндексируемые);*/
			/*Запрос.УстановитьПараметр("парамЗаработок",	Заработок);*/
			/*Запрос.УстановитьПараметр("парамПоГодовойПремии",	ПоГодовойПремии);*/
			/*Запрос.УстановитьПараметр("парамПоГодовойПремииИндексируемые", ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииИндексируемые);*/
			/*Запрос.УстановитьПараметр("парамДатаС", НачалоМесяца(ДатаНачалаРасчетаСреднего));*/
			/*Запрос.УстановитьПараметр("парамДатаПо", КонецМесяца(ДатаОкончанияРасчетаСреднего));*/
			/*ПропорциональныеПремии = Новый Массив;*/
			if(true/*Не ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, "НеУменьшатьПропорциональныеПремии")*/)
			{
				/*// в учетной политике записано дополнительно уменьшать премии при выходе их базового периода за пределы расчетного периода
*/
				/*ПропорциональныеПремии.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииИндексируемые);*/
				/*ПропорциональныеПремии.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииНеИндексируемые);*/
				/*ПропорциональныеПремии.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиямИндексируемые);*/
				/*ПропорциональныеПремии.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиямНеИндексируемые);*/
			}
			/*Запрос.УстановитьПараметр("ПропорциональныеПремии",ПропорциональныеПремии);*/
			/*ВыборкаБазы = Запрос.Выполнить().Выбрать();*/
			/*ТекстЗапроса = "";*/
			/*ПроведениеРасчетов.ДописатьАлгоритмВЗапрос("ВремяСреднегоЗаработка", КомментироватьРасчет, Запрос, ТекстЗапроса);*/
			/*ТекстДопТаблицы = 
	"ВЫБРАТЬ
	|	0 КАК НомерСтроки,
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК БазовыйПериодНачало,
	|	0 КАК ОтработаноПоПятидневке,
	|	0 КАК ОтработаноДней,
	|	0 КАК ОтработаноЧасов
	|ПОМЕСТИТЬ ВТДополнительныеДанные
	|ГДЕ
	|	ЛОЖЬ";*/
			/*Запрос.Текст = СтрЗаменить(ТекстЗапроса, ТекстДопТаблицы, ТекстДополнительнойТаблицыРасчетаСреднего());*/
			/*ПоФиксПремиям = ПропорциональныеПремии;*/
			/*ПоФиксПремиям.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиям);*/
			/*ПоФиксПремиям.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямБЛ);*/
			/*ПоФиксПремиям.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремии);*/
			/*ПоФиксПремиям.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииБЛ);*/
			/*ПоФиксПремиям.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямНеИндексируемые);*/
			/*ПоФиксПремиям.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииНеИндексируемые);*/
			/*Запрос.УстановитьПараметр("ФиксПремии", ПоФиксПремиям);*/
			/*Заработок = Новый Массив();*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку);*/
			/*Заработок.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛ);*/
			/*Запрос.УстановитьПараметр("ЗаработокПрошлыхЛет", Заработок);*/
			/*Заработок = Новый Массив();*/
			/*Запрос.УстановитьПараметр("парамДатаИзмененияПорядкаРасчета2006", ПроведениеРасчетовДополнительный.ПолучитьДатуВступленияВСилуИзмененийТрудовогоКодекса2006());*/
			/*СоответствиеФиксПремий = Новый Соответствие;*/
			/*СоответствиеФиксПремий.Вставить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиям,Истина);*/
			/*СоответствиеФиксПремий.Вставить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямНеИндексируемые,Истина);*/
			/*СоответствиеФиксПремий.Вставить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямБЛ,Истина);*/
			/*СоответствиеФиксПремий.Вставить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямПособий,Истина);*/
			/*СоответствиеФиксПремий.Вставить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремии,Истина);*/
			/*СоответствиеФиксПремий.Вставить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииНеИндексируемые,Истина);*/
			/*СоответствиеФиксПремий.Вставить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииБЛ,Истина);*/
			/*СоответствиеФиксПремий.Вставить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииПособий,Истина);*/
			/*СоответствиеОсновногозаработка = Новый Соответствие;*/
			/*СоответствиеОсновногозаработка.Вставить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку,Истина);*/
			/*СоответствиеОсновногозаработка.Вставить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые,Истина);*/
			/*СоответствиеОсновногозаработка.Вставить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛ,Истина);*/
			/*СоответствиеОсновногозаработка.Вставить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособий,Истина);*/
			/*СоответствиеОсновногозаработка.Вставить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010,Истина);*/
			/*ВыборкаОтработанноеВремя = Запрос.Выполнить().Выбрать();*/
			/*// заполним результаты в наборе записей
*/
			/*СтруктураПоиска = Новый Структура("НомерСтроки");*/
			/*ВГраница = НаборЗаписей.Количество() - 1;*/
			if(true/*КомментироватьРасчет*/)
			{
				/*КомментарийРасчетаСреднего = ОбщегоНазначенияЗК.КомментарийРасчета("Расчет среднего заработка");*/
			}
			/*// Отсортируем периоды в наборе записей
*/
			/*ТаблицаЗаписей = НаборЗаписей.Выгрузить();*/
			/*ТаблицаЗаписей.Сортировать("Сотрудник, СпособРасчета, ДатаНачалаСобытия, ДатаНачалаРасчетногоПериода, ДатаОкончанияРасчетногоПериода, БазовыйПериодНачало");*/
			/*НаборЗаписей.Загрузить(ТаблицаЗаписей);*/
			/*//Запишем результат
*/
			/*НаборЗаписей.Записать();*/
		}
		// Возвращает текст части запроса расчета среднего для отпусков 2007 года
		//
		// Параметры
		//  Нет
		//
		// Возвращаемое значение:
		//   Строка - текст временной таблицы
		//

		public object ТекстДополнительнойТаблицыРасчетаСреднего(/**/)
		{
			return null;
		}
		// ()
		// Получает данные для расчета ресурсов записей регистра расчета
		//
		//	ИмяРегистра - строка, имя регистра расчета
		//	КатегорияРасчета - ссылка на значение перечисленич КатегорииРасчетов
		//	НеобходимыеДанные - Структура с элементами
		//			База,
		//			НормаВремени,
		//			ОтработаноВремени,
		//			...
		//	Регистратор - ссылка на документ
		//	Организация - ссылка на организацию по которой проводится Регистратор
		//	ПериодРегистрации
		//	Перерасчет - булево - признак того, что получаем данные для случая перерасчета
		//	Физлица - массив ссылок на физлиц - выбранные для перерасчета физлица, или массив содержащий ссылку
		//			  на физлицо по которому производится расчет (расчет по одному работнику из документа)
		//
		// Возвращает выборку результата запроса

		public object ПолучитьДанныеДляРасчета(/*ИмяРегистра,
									КатегорияРасчета,
									НеобходимыеДанные,
									Регистратор,
									Организация,
									ПериодРегистрации,
									Перерасчет = Ложь,
									Физлица = Неопределено,
									КомментироватьРасчет = Ложь, ФормаКомментариев = НеОпределено*/)
		{
			/*/////////////////////////////////////////////////////////////////////
*/
			/*// Вложенные запросы
*/
			/*// для получения данных расчета
*/
			/*// Реализованы как временные таблицы
*/
			/*// таблица СотрудникиДляПерерасчетаТекст
*/
			/*// Список сотрудников по которым необходимо выполнить перерасчет
*/
			/*// Поля:
*/
			/*//		Сотрудник
*/
			/*// Описание:
*/
			/*// Получает список неповторяющихся сотрудников по которым есть записи
*/
			/*// перерасчета в одной из таблиц перерасчета - по основным или дополнительным начислениям
*/
			/*//
*/
			/*ФизлицаДляПерерасчетаТекст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Перерасчет.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТФизлицаДляПерерасчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		Перерасчет.Физлицо КАК Физлицо
	|	ИЗ
	|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ПерерасчетОсновныхНачислений КАК Перерасчет
	|	ГДЕ
	|		Перерасчет.ОбъектПерерасчета = &парамРегистратор
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Перерасчет.Физлицо
	|	ИЗ
	|		РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций.ПерерасчетДополнительныхНачислений КАК Перерасчет
	|	ГДЕ
	|		Перерасчет.ОбъектПерерасчета = &парамРегистратор) КАК Перерасчет
	|ИНДЕКСИРОВАТЬ ПО 
	|	Физлицо";*/
			/*// ДанныеОСреднемЗаработке
*/
			/*//		Таблица данных о среднем заработке
*/
			/*// 
*/
			/*//	Поля:
*/
			/*//		СреднийЗаработок - суммируем
*/
			/*//		ОтработаноДней - для расчета среднего
*/
			/*//		ОтработаноЧасов - для расчета среднего
*/
			/*//		Сотрудник,
*/
			/*//		СпособРасчета,                 - это для идентификации записи в основном регистре расчета
*/
			/*//		ДатаНачалаРасчетногоПериода,   - это для идентификации записи в основном регистре расчета
*/
			/*//		ДатаОкончанияРасчетногоПериода - это для идентификации записи в основном регистре расчета
*/
			/*// 
*/
			/*// Описание:
*/
			/*//
*/
			/*//	выбираем из РегистрРасчета.РасчетСреднегоЗаработка
*/
			/*//	по регистратору
*/
			/*ДанныеОСреднемЗаработкеТекст =
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&СоставляющиеСреднегоЗаработкаПособий)
	|				ТОГДА 0
	|			КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработок)
	|				ТОГДА РасчетСреднегоЗаработка.Результат * ВЫБОР
	|						КОГДА РасчетСреднегоЗаработка.КоэффициентИндексации < 1
	|							ТОГДА 1
	|						ИНАЧЕ РасчетСреднегоЗаработка.КоэффициентИндексации
	|					КОНЕЦ
	|			КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработокНеиндексируемый)
	|				ТОГДА РасчетСреднегоЗаработка.Результат
	|			КОГДА РасчетСреднегоЗаработка.ЧислоМесяцев = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ПоПремиям)
	|						ТОГДА РасчетСреднегоЗаработка.Результат * ВЫБОР
	|								КОГДА РасчетСреднегоЗаработка.КоэффициентИндексации < 1
	|									ТОГДА 1
	|								ИНАЧЕ РасчетСреднегоЗаработка.КоэффициентИндексации
	|							КОНЕЦ
	|					КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ПоФиксПремиям)
	|						ТОГДА РасчетСреднегоЗаработка.Результат * ВЫБОР
	|								КОГДА РасчетСреднегоЗаработка.КоэффициентИндексации < 1
	|									ТОГДА 1
	|								ИНАЧЕ РасчетСреднегоЗаработка.КоэффициентИндексации
	|							КОНЕЦ * ВЫБОР
	|								КОГДА РасчетСреднегоЗаработка.НормаПоПятидневке = 0
	|									ТОГДА 0
	|								ИНАЧЕ РасчетСреднегоЗаработка.ОтработаноПоПятидневке / РасчетСреднегоЗаработка.НормаПоПятидневке
	|							КОНЕЦ
	|					КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ПоФиксПремиямНеИндексируемые)
	|						ТОГДА РасчетСреднегоЗаработка.Результат * ВЫБОР
	|								КОГДА РасчетСреднегоЗаработка.НормаПоПятидневке = 0
	|									ТОГДА 0
	|								ИНАЧЕ РасчетСреднегоЗаработка.ОтработаноПоПятидневке / РасчетСреднегоЗаработка.НормаПоПятидневке
	|							КОНЕЦ
	|					ИНАЧЕ РасчетСреднегоЗаработка.Результат
	|				КОНЕЦ * ВЫБОР
	|					КОГДА РасчетСреднегоЗаработка.ЧислоМесяцев > РасчетСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
	|						ТОГДА РасчетСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / РасчетСреднегоЗаработка.ЧислоМесяцев
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		КОНЕЦ) КАК СреднийЗаработок,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&СоставляющиеСреднегоЗаработкаПособий)
	|				ТОГДА РасчетСреднегоЗаработка.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СреднийЗаработокПособий,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетСреднегоЗаработка.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010))
	|				ТОГДА РасчетСреднегоЗаработка.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СреднийЗаработокПособий2010,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработок)
	|					ИЛИ РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработокНеиндексируемый)
	|				ТОГДА ВЫБОР
	|						КОГДА РасчетСреднегоЗаработка.СпособРасчета В (&ПоСреднемуЗаработкуФСС)
	|							ТОГДА ВЫБОР
	|									КОГДА РасчетСреднегоЗаработка.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|										ТОГДА 0
	|									ИНАЧЕ РасчетСреднегоЗаработка.ОтработаноДней
	|								КОНЕЦ
	|						ИНАЧЕ РасчетСреднегоЗаработка.ОтработаноДней
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОтработаноДней,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработокПособий)
	|				ТОГДА ВЫБОР
	|						КОГДА РасчетСреднегоЗаработка.СпособРасчета В (&ПоСреднемуЗаработкуФСС)
	|							ТОГДА ВЫБОР
	|									КОГДА РасчетСреднегоЗаработка.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|										ТОГДА 0
	|									ИНАЧЕ РасчетСреднегоЗаработка.ОтработаноДней
	|								КОНЕЦ
	|						ИНАЧЕ РасчетСреднегоЗаработка.ОтработаноДней
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОтработаноДнейПособий,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетСреднегоЗаработка.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010)
	|				ТОГДА ВЫБОР
	|						КОГДА РасчетСреднегоЗаработка.СпособРасчета В (&ПоСреднемуЗаработкуФСС)
	|							ТОГДА ВЫБОР
	|									КОГДА РасчетСреднегоЗаработка.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|										ТОГДА 0
	|									ИНАЧЕ РасчетСреднегоЗаработка.ОтработаноДней
	|								КОНЕЦ
	|						ИНАЧЕ РасчетСреднегоЗаработка.ОтработаноДней
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОтработаноДнейПособий2010,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработок)
	|					ИЛИ РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработокНеиндексируемый)
	|				ТОГДА ВЫБОР
	|						КОГДА РасчетСреднегоЗаработка.СпособРасчета В (&ПоСреднемуЗаработкуФСС)
	|							ТОГДА ВЫБОР
	|									КОГДА РасчетСреднегоЗаработка.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|										ТОГДА 0
	|									ИНАЧЕ РасчетСреднегоЗаработка.ОтработаноЧасов
	|								КОНЕЦ
	|						ИНАЧЕ РасчетСреднегоЗаработка.ОтработаноЧасов
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОтработаноЧасов,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|				И РасчетСреднегоЗаработка.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработкаФСС), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет))
	|			ТОГДА ЕСТЬNULL(РасчетСреднегоЗаработка.Регистратор.Сотрудник, РасчетСреднегоЗаработка.Сотрудник)
	|		ИНАЧЕ РасчетСреднегоЗаработка.Сотрудник
	|	КОНЕЦ КАК Сотрудник,
	|	РасчетСреднегоЗаработка.СпособРасчета КАК СпособРасчета,
	|	РасчетСреднегоЗаработка.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
	|	РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода КАК ДатаНачалаРасчетногоПериода,
	|	РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода КАК ДатаОкончанияРасчетногоПериода
	|ПОМЕСТИТЬ ВТДанныеОСреднемЗаработке
	|ИЗ
	|	РегистрРасчета.РасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
	|ГДЕ
	|	РасчетСреднегоЗаработка.Регистратор = &парамРегистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|				И РасчетСреднегоЗаработка.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработкаФСС), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет))
	|			ТОГДА ЕСТЬNULL(РасчетСреднегоЗаработка.Регистратор.Сотрудник, РасчетСреднегоЗаработка.Сотрудник)
	|		ИНАЧЕ РасчетСреднегоЗаработка.Сотрудник
	|	КОНЕЦ,
	|	РасчетСреднегоЗаработка.СпособРасчета,
	|	РасчетСреднегоЗаработка.ДатаНачалаСобытия,
	|	РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода,
	|	РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	СпособРасчета,
	|	ДатаНачалаСобытия,
	|	ДатаНачалаРасчетногоПериода,
	|	ДатаОкончанияРасчетногоПериода";*/
			/*// РазмерПособияПоУходуЗаРебенкомДо1_5Лет
*/
			/*//	Поля:
*/
			/*//		НомерСтроки - номер строки рассчитываемых движений
*/
			/*//		РазмерПособия - размер пособия
*/
			/*//	Описание:
*/
			/*//		получает размер пособия по уходу за ребенком до 1.5 лет для каждой строки начислений
*/
			/*//
*/
			/*РазмерПособияПоУходуЗаРебенкомДо1_5ЛетТекст = 
	"ВЫБРАТЬ
	|	ДатыАктуальностиРазмераПособия.НомерСтроки КАК ОсновнойНомерСтроки,
	|	ГосударственныеПособия.Размер КАК РазмерПособия,
	|	ДатыАктуальностиРазмераПособия.ВидПособия КАК ВидПособия
	|ПОМЕСТИТЬ ВТРазмерПособияПоУходуЗаРебенкомДо1_5Лет
	|ИЗ
	|	(ВЫБРАТЬ
	|		Основной.НомерСтроки КАК НомерСтроки,
	|		МАКСИМУМ(ГосударственныеПособия.Период) КАК ДатаАктуальности,
	|		ГосударственныеПособия.ВидПособия КАК ВидПособия
	|	ИЗ
	|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Основной
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГосударственныеПособия КАК ГосударственныеПособия
	|			ПО ГосударственныеПособия.Период <= Основной.ПериодДействияНачало
	|				И (ГосударственныеПособия.ВидПособия В (&ВидПособияПоУходуЗаРебенкомДо1_5Лет))
	|	ГДЕ
	|		Основной.Регистратор = &парамРегистратор
	|		И Основной.Авторасчет
	|		И Основной.ВидРасчета.СпособРасчета = &СпособРасчетаПособиеПоУходуЗаРебенкомДо1_5Лет
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Основной.НомерСтроки,
	|		ГосударственныеПособия.ВидПособия) КАК ДатыАктуальностиРазмераПособия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГосударственныеПособия КАК ГосударственныеПособия
	|		ПО ГосударственныеПособия.Период = ДатыАктуальностиРазмераПособия.ДатаАктуальности
	|			И ДатыАктуальностиРазмераПособия.ВидПособия = ГосударственныеПособия.ВидПособия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновнойНомерСтроки,
	|	ВидПособия";*/
			/*// РазмерПособияПоУходуЗаРебенкомДо3Лет
*/
			/*//	Поля:
*/
			/*//		ОсновнойНомерСтроки - номер строки рассчитываемых движений
*/
			/*//		РазмерПособия - размер пособия
*/
			/*//	Описание:
*/
			/*//		получает размер пособия по уходу за ребенком до 3 лет для каждой строки начислений
*/
			/*//
*/
			/*РазмерПособияПоУходуЗаРебенкомДо3ЛетТекст = 
	"ВЫБРАТЬ
	|	ДатыАктуальностиРазмераПособия.НомерСтроки КАК ОсновнойНомерСтроки,
	|	ГосударственныеПособия.Размер КАК РазмерПособия
	|ПОМЕСТИТЬ ВТРазмерПособияПоУходуЗаРебенкомДо3Лет
	|ИЗ
	|	(ВЫБРАТЬ
	|		Основной.НомерСтроки КАК НомерСтроки,
	|		МАКСИМУМ(ГосударственныеПособия.Период) КАК ДатаАктуальности
	|	ИЗ
	|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Основной
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГосударственныеПособия КАК ГосударственныеПособия
	|			ПО (ГосударственныеПособия.ВидПособия = &ВидПособияПоУходуЗаРебенкомДо3Лет)
	|				И ГосударственныеПособия.Период <= Основной.ПериодДействияНачало
	|	ГДЕ
	|		Основной.Регистратор = &парамРегистратор
	|		И Основной.Авторасчет
	|		И Основной.ВидРасчета.СпособРасчета = &СпособРасчетаПособиеПоУходуЗаРебенкомДо3Лет
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Основной.НомерСтроки) КАК ДатыАктуальностиРазмераПособия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГосударственныеПособия КАК ГосударственныеПособия
	|		ПО (ГосударственныеПособия.ВидПособия = &ВидПособияПоУходуЗаРебенкомДо3Лет)
	|			И ГосударственныеПособия.Период = ДатыАктуальностиРазмераПособия.ДатаАктуальности
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновнойНомерСтроки";*/
			/*// СдельныйЗаработокКомпанииТекст
*/
			/*//	Поля:
*/
			/*//		ОсновнойНомерСтроки - номер строки рассчитываемых движений
*/
			/*//		РазмерЗаработка - размер сдельного заработка
*/
			/*//	Описание:
*/
			/*//		получает размер сдельного заработка для начислений со способом расчета "Сдельный заработок"
*/
			/*//
*/
			/*СдельныйЗаработокКомпанииТекст =
	"ВЫБРАТЬ
	|	НесгруппированныеДанные.ОсновнойНомерСтроки КАК ОсновнойНомерСтроки,
	|	СУММА(НесгруппированныеДанные.СуммаЗаработка) КАК СуммаЗаработка,
	|	МАКСИМУМ(НесгруппированныеДанные.ОшибкаВводаФактическойВыработки) КАК ОшибкаВводаФактическойВыработки
	|ПОМЕСТИТЬ ВТСдельныйЗаработокКомпании
	|ИЗ
	|	(ВЫБРАТЬ
	|		Начисления.НомерСтроки КАК ОсновнойНомерСтроки,
	|		ФактическаяВыработка.Выработка КАК СуммаЗаработка,
	|		ЛОЖЬ КАК ОшибкаВводаФактическойВыработки
	|	ИЗ
	|		РегистрРасчета.УправленческиеНачисления.ФактическийПериодДействия(
	|				Регистратор = &парамРегистратор
	|					И Авторасчет) КАК Начисления
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ФактическаяВыработкаРаботников КАК ФактическаяВыработка
	|			ПО Начисления.ФизЛицо = ФактическаяВыработка.Физлицо
	|				И (ФактическаяВыработка.Период МЕЖДУ Начисления.ПериодДействияНачало И Начисления.ПериодДействияКонец)
	|				И (ФактическаяВыработка.СпособВводаДанных В (ЗНАЧЕНИЕ(Перечисление.СпособыВводаДанныхОВремени.ПоДням), ЗНАЧЕНИЕ(Перечисление.СпособыВводаДанныхОВремени.ЗаДень)))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Начисления.НомерСтроки,
	|		ФактическаяВыработка.Выработка,
	|		ВЫБОР
	|			КОГДА ПроверкаКоличестваЗаписей.ФизЛицо ЕСТЬ НЕ NULL 
	|					И ФактическаяВыработка.Выработка ЕСТЬ НЕ NULL 
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	ИЗ
	|		РегистрРасчета.УправленческиеНачисления КАК Начисления
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ФактическаяВыработкаРаботников КАК ФактическаяВыработка
	|			ПО Начисления.ФизЛицо = ФактическаяВыработка.Физлицо
	|				И (ФактическаяВыработка.Период = Начисления.ПериодДействия)
	|				И (ФактическаяВыработка.СпособВводаДанных = ЗНАЧЕНИЕ(Перечисление.СпособыВводаДанныхОВремени.ВЦеломЗаПериод))
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.УправленческиеНачисления КАК ПроверкаКоличестваЗаписей
	|			ПО Начисления.ФизЛицо = ПроверкаКоличестваЗаписей.ФизЛицо
	|				И Начисления.ПериодДействия = ПроверкаКоличестваЗаписей.ПериодДействия
	|				И (Начисления.ВидРасчета.ЗачетОтработанногоВремени)
	|				И (ПроверкаКоличестваЗаписей.ВидРасчета.ЗачетОтработанногоВремени)
	|				И ((НЕ(Начисления.Регистратор = ПроверкаКоличестваЗаписей.Регистратор
	|						И Начисления.НомерСтроки = ПроверкаКоличестваЗаписей.НомерСтроки)))
	|	ГДЕ
	|		Начисления.Регистратор = &парамРегистратор
	|		И Начисления.Авторасчет) КАК НесгруппированныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	НесгруппированныеДанные.ОсновнойНомерСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновнойНомерСтроки";*/
			/*// ВремяПоТабелю
*/
			/*//	данные по отработанному времени и норме времени по методу "сплошной регистрации" в текущем периоде регистрации
*/
			/*//	Поля 
*/
			/*//		НомерСтроки
*/
			/*//		ОтработаноДнейПоТабелю
*/
			/*//		ОтработаноЧасовПоТабелю
*/
			/*//		ОтработаноЧасовПоТабелюОтклонение
*/
			/*//
*/
			/*//	Описание                       
*/
			/*//	Суммируем отработанное время и норму времени в заданном периоде действия для каждой строки начисления
*/
			/*//	из регистра РабочееВремяРаботниковОрганизаций 
*/
			/*ВремяПоТабелюТекст = 
	"ВЫБРАТЬ
	|	Основной.НомерСтроки КАК НомерСтроки,
	|	СУММА(ВЫБОР
	|			КОГДА Основной.ВидРасчета.ВидВремени В (ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ОтработанноеВПределахНормы), ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ДополнительноОплачиваемоеВПределахНормы))
	|				ТОГДА ОтработанноеВремя.Часов
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОтработаноЧасовПоТабелюОтклонение,
	|	СУММА(ВЫБОР
	|			КОГДА ОтработанноеВремя.Регистратор = &парамРегистратор
	|					И Основной.ВидРасчета.ВидВремени В (ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ЧасовоеНеотработанное), ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ЧасовоеОтработанноеВПределахНормы))
	|				ТОГДА ОтработанноеВремя.Часов
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВнутрисменныеЧасыОтклонение
	|ПОМЕСТИТЬ ВТВремяПоТабелю
	|ИЗ
	|	ВТФактическийПериодДействия КАК Основной
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ВнутрисменноеВремяРаботниковОрганизаций КАК ОтработанноеВремя
	|		ПО Основной.Сотрудник = ОтработанноеВремя.Сотрудник
	|			И (ОтработанноеВремя.Период МЕЖДУ Основной.ПериодДействияНачало И Основной.ПериодДействияКонец)
	|
	|СГРУППИРОВАТЬ ПО
	|	Основной.НомерСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки";*/
			/*// ОтработаноПоВидуВремениДляПоказателейТекст
*/
			/*//	Данные по отработанному времени введенное табелем по указанному в начислении виду учета времени
*/
			/*ОтработаноПоВидуВремениДляПоказателейТекст = 
	"ВЫБРАТЬ
	|	Основной.НомерСтроки КАК НомерСтроки,
	|	СУММА(РабочееВремяРаботников.Дней) КАК Дней,
	|	СУММА(РабочееВремяРаботников.Часов) КАК Часов
	|ПОМЕСТИТЬ ВТОтработаноПоВидуВремениДляПоказателей
	|ИЗ
	|	ВТФактическийПериодДействия КАК Основной
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РабочееВремяРаботниковОрганизаций КАК РабочееВремяРаботников
	|		ПО Основной.Сотрудник = РабочееВремяРаботников.Сотрудник
	|			И (РабочееВремяРаботников.Период МЕЖДУ Основной.ПериодДействияНачало И Основной.ПериодДействияКонец)
	|			И (РабочееВремяРаботников.ВидИспользованияРабочегоВремени = Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени)
	|			И (РабочееВремяРаботников.Регистратор <> &парамРегистратор)
	|			И (РабочееВремяРаботников.Регистратор ССЫЛКА Документ.ТабельУчетаРабочегоВремениОрганизации)
	|			И ((НЕ РабочееВремяРаботников.ВЦеломЗаПериод))
	|ГДЕ
	|	Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Основной.НомерСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки";*/
			/*// ОтработаноНЕПоВидуВремениДляПоказателейТекст
*/
			/*//	Данные по отработанному времени введенное табелем НЕ по указанному в начислении виду учета времени
*/
			/*ОтработаноНЕПоВидуВремениДляПоказателейТекст = 
	"ВЫБРАТЬ
	|	ГруппировкаДней.НомерСтроки КАК НомерСтроки,
	|	СУММА(ГруппировкаДней.Дней) КАК Дней,
	|	СУММА(ГруппировкаДней.Часов) КАК Часов
	|ПОМЕСТИТЬ ВТОтработаноНЕПоВидуВремениДляПоказателей
	|ИЗ
	|	(ВЫБРАТЬ
	|		Основной.НомерСтроки КАК НомерСтроки,
	|		РабочееВремяРаботников.Период КАК Период,
	|		ВЫБОР
	|			КОГДА ДругоеРабочееВремя.Сотрудник ЕСТЬ NULL 
	|				ТОГДА РабочееВремяРаботников.Дней
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Дней,
	|		СУММА(ВЫБОР
	|				КОГДА ДругоеРабочееВремя.Сотрудник ЕСТЬ НЕ NULL 
	|							И (НЕ РабочееВремяРаботников.ВидИспользованияРабочегоВремени.РабочееВремя)
	|						ИЛИ (НЕ ДругоеРабочееВремя.ВидИспользованияРабочегоВремени В (ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.РаботаНочныеЧасы), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.РаботаВечерниеЧасы)))
	|							И ((НЕ РабочееВремяРаботников.ВидИспользованияРабочегоВремени.РабочееВремя)
	|								ИЛИ РабочееВремяРаботников.ВидИспользованияРабочегоВремени В (ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.РаботаНочныеЧасы), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.РаботаВечерниеЧасы)))
	|					ТОГДА 0
	|				ИНАЧЕ РабочееВремяРаботников.Часов
	|			КОНЕЦ) КАК Часов
	|	ИЗ
	|		ВТФактическийПериодДействия КАК Основной
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РабочееВремяРаботниковОрганизаций КАК РабочееВремяРаботников
	|			ПО Основной.Сотрудник = РабочееВремяРаботников.Сотрудник
	|				И (РабочееВремяРаботников.Период МЕЖДУ Основной.ПериодДействияНачало И Основной.ПериодДействияКонец)
	|				И ((НЕ РабочееВремяРаботников.ВидИспользованияРабочегоВремени = Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени))
	|				И (РабочееВремяРаботников.Регистратор <> &парамРегистратор)
	|				И (РабочееВремяРаботников.Регистратор ССЫЛКА Документ.ТабельУчетаРабочегоВремениОрганизации)
	|				И ((НЕ РабочееВремяРаботников.ВидИспользованияРабочегоВремени В (ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.РаботаНочныеЧасы), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.РаботаВечерниеЧасы))))
	|				И ((НЕ РабочееВремяРаботников.ВЦеломЗаПериод))
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				РабочееВремяРаботников.Сотрудник КАК Сотрудник,
	|				РабочееВремяРаботников.Период КАК Период,
	|				РабочееВремяРаботников.ВидИспользованияРабочегоВремени КАК ВидИспользованияРабочегоВремени
	|			ИЗ
	|				РегистрНакопления.РабочееВремяРаботниковОрганизаций КАК РабочееВремяРаботников
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФактическийПериодДействия КАК Основной
	|					ПО (РабочееВремяРаботников.Период МЕЖДУ Основной.ПериодДействияНачало И Основной.ПериодДействияКонец)
	|						И РабочееВремяРаботников.ВидИспользованияРабочегоВремени = Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени
	|						И ((НЕ РабочееВремяРаботников.ВЦеломЗаПериод))
	|						И (РабочееВремяРаботников.Регистратор <> &парамРегистратор)
	|						И (РабочееВремяРаботников.Регистратор ССЫЛКА Документ.ТабельУчетаРабочегоВремениОрганизации)
	|			ГДЕ
	|				РабочееВремяРаботников.Регистратор <> &парамРегистратор
	|				И РабочееВремяРаботников.Регистратор ССЫЛКА Документ.ТабельУчетаРабочегоВремениОрганизации
	|				И (НЕ РабочееВремяРаботников.ВЦеломЗаПериод)) КАК ДругоеРабочееВремя
	|			ПО Основной.Сотрудник = ДругоеРабочееВремя.Сотрудник
	|				И (ДругоеРабочееВремя.Период МЕЖДУ Основной.ПериодДействияНачало И Основной.ПериодДействияКонец)
	|				И (ДругоеРабочееВремя.ВидИспользованияРабочегоВремени = Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени)
	|				И (ДругоеРабочееВремя.Период = РабочееВремяРаботников.Период)
	|	ГДЕ
	|		Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Основной.НомерСтроки,
	|		РабочееВремяРаботников.Период,
	|		ВЫБОР
	|			КОГДА ДругоеРабочееВремя.Сотрудник ЕСТЬ NULL 
	|				ТОГДА РабочееВремяРаботников.Дней
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ГруппировкаДней
	|
	|СГРУППИРОВАТЬ ПО
	|	ГруппировкаДней.НомерСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки";*/
			/*ВремяВведенноеВЦеломЗаПериодТекст = 
	"ВЫБРАТЬ
	|	Основной.НомерСтроки КАК НомерСтроки,
	|	СУММА(ВЫБОР
	|			КОГДА Основной.ВидУчетаВремени = &ПоДням
	|				ТОГДА ОтработанноеВремя.Дней
	|			ИНАЧЕ ОтработанноеВремя.Часов
	|		КОНЕЦ) КАК ОсновноеЗначениеПоТабелю,
	|	СУММА(ОтработанноеВремя.Дней) КАК ДнейПоТабелю,
	|	СУММА(ОтработанноеВремя.Часов) КАК ЧасовПоТабелю,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПроверкаКоличестваЗаписей.Сотрудник ЕСТЬ НЕ NULL 
	|					И ОтработанноеВремя.Дней ЕСТЬ НЕ NULL 
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ОшибкаВводаОтработанногоВремени
	|ПОМЕСТИТЬ ВТВремяВведенноеВЦеломЗаПериод
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Основной
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РабочееВремяРаботниковОрганизаций КАК ОтработанноеВремя
	|		ПО Основной.Сотрудник = ОтработанноеВремя.Сотрудник
	|			И Основной.ПериодДействия = ОтработанноеВремя.Период
	|			И Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ОтработанноеВремя.ВидИспользованияРабочегоВремени
	|			И (ОтработанноеВремя.ВЦеломЗаПериод)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ПроверкаКоличестваЗаписей
	|		ПО Основной.Сотрудник = ПроверкаКоличестваЗаписей.Сотрудник
	|			И Основной.ПериодДействия = ПроверкаКоличестваЗаписей.ПериодДействия
	|			И Основной.ПериодРегистрации >= ПроверкаКоличестваЗаписей.ПериодРегистрации
	|			И Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ПроверкаКоличестваЗаписей.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени
	|			И Основной.Организация = ПроверкаКоличестваЗаписей.Организация
	|			И (Основной.ВидРасчета.ВидВремени <> ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ДополнительноОплачиваемоеВПределахНормы))
	|			И (ПроверкаКоличестваЗаписей.ВидРасчета.ВидВремени <> ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ДополнительноОплачиваемоеВПределахНормы))
	|			И ((НЕ(Основной.Регистратор = ПроверкаКоличестваЗаписей.Регистратор
	|					И Основной.НомерСтроки = ПроверкаКоличестваЗаписей.НомерСтроки)))
	|			И ((НЕ(Основной.ВидРасчета = ПроверкаКоличестваЗаписей.ВидРасчета
	|					И Основной.ПериодДействияНачало = ПроверкаКоличестваЗаписей.ПериодДействияНачало
	|					И Основной.ПериодДействияКонец = ПроверкаКоличестваЗаписей.ПериодДействияКонец
	|					И (Основной.ПериодРегистрации <> ПроверкаКоличестваЗаписей.ПериодРегистрации
	|						ИЛИ Основной.Сторно <> ПроверкаКоличестваЗаписей.Сторно))))
	|ГДЕ
	|	Основной.Регистратор = &парамРегистратор
	|	И Основной.Авторасчет
	|
	|СГРУППИРОВАТЬ ПО
	|	Основной.НомерСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки";*/
			/*ДанныеТабеляТекст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Основной.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТВремяВведеноТабелем
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Основной
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РабочееВремяРаботниковОрганизаций КАК ОтработанноеВремя
	|		ПО Основной.Сотрудник = ОтработанноеВремя.Сотрудник
	|			И (Основной.ПериодДействия = НАЧАЛОПЕРИОДА(ОтработанноеВремя.Период, МЕСЯЦ))
	|ГДЕ
	|	Основной.Регистратор = &парамРегистратор
	|	И Основной.Авторасчет
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки";*/
			/*СводныеИндивидуальныеГрафикиТекст = 
	"ВЫБРАТЬ
	|	Основной.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА Основной.ВидУчетаВремени = &ПоДням
	|			ТОГДА СводныеИндивидуальныеГрафики.Дней
	|		КОГДА Основной.ВидУчетаВремени = &ПоЧасам
	|			ТОГДА СводныеИндивидуальныеГрафики.Часов
	|		КОГДА Основной.ВидУчетаВремени = &ПоВечернимЧасам
	|			ТОГДА СводныеИндивидуальныеГрафики.ЧасовВечерних
	|		КОГДА Основной.ВидУчетаВремени = &ПоНочнымЧасам
	|			ТОГДА СводныеИндивидуальныеГрафики.ЧасовНочных
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НормаВремени,
	|	ВЫБОР
	|		КОГДА Основной.ВидУчетаВремени = &ПоДням
	|			ТОГДА СводныеИндивидуальныеГрафики.Дней
	|		КОГДА Основной.ВидУчетаВремени = &ПоВечернимЧасам
	|			ТОГДА СводныеИндивидуальныеГрафики.ЧасовВечерних
	|		КОГДА Основной.ВидУчетаВремени = &ПоНочнымЧасам
	|			ТОГДА СводныеИндивидуальныеГрафики.ЧасовНочных
	|		ИНАЧЕ СводныеИндивидуальныеГрафики.Часов
	|	КОНЕЦ КАК ОсновноеЗначение,
	|	СводныеИндивидуальныеГрафики.Дней КАК ДнейПоГрафику,
	|	СводныеИндивидуальныеГрафики.Часов КАК ЧасовПоГрафику,
	|	СводныеИндивидуальныеГрафики.Дней КАК НормаДнейПоГрафику,
	|	СводныеИндивидуальныеГрафики.Часов КАК НормаЧасовПоГрафику,
	|	ВЫБОР
	|		КОГДА Основной.ВидРасчета.ВидВремени В (&парамСписокПочасовыхОтклонений)
	|			ТОГДА ЛОЖЬ
	|		КОГДА (НАЧАЛОПЕРИОДА(Основной.ПериодДействияНачало, ДЕНЬ) > Основной.ПериодДействия
	|				ИЛИ КОНЕЦПЕРИОДА(Основной.ПериодДействияКонец, ДЕНЬ) < КОНЕЦПЕРИОДА(Основной.ПериодДействия, МЕСЯЦ))
	|				И СводныеИндивидуальныеГрафики.Дней ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОшибкаВводаИндивидуальногоГрафикаРаботы
	|ПОМЕСТИТЬ ВТСводныеИндивидуальныеГрафики
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Основной
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СводныеИндивидуальныеГрафики КАК СводныеИндивидуальныеГрафики
	|		ПО Основной.Сотрудник = СводныеИндивидуальныеГрафики.Сотрудник
	|			И Основной.ПериодДействия = СводныеИндивидуальныеГрафики.Месяц
	|ГДЕ
	|	Основной.Регистратор = &парамРегистратор
	|	И Основной.Авторасчет
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки";*/
			/*НормаВремениПоОбщемуГрафикуТекст = 
	"ВЫБРАТЬ
	|	СУММА(ГрафикиРаботыПоВидамВремени.ОсновноеЗначениеНорма) КАК НормаДней,
	|	СУММА(ГрафикиРаботыПоВидамВремени.ДополнительноеЗначениеНорма) КАК НормаЧасов,
	|	Основной.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТНормаВремениПоОбщемуГрафику
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Основной
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|		ПО (ВЫБОР
	|				КОГДА Основной.ГрафикРаботыНорма = ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)
	|					ТОГДА Основной.ГрафикРаботы
	|				ИНАЧЕ Основной.ГрафикРаботыНорма
	|			КОНЕЦ = ГрафикиРаботыПоВидамВремени.ГрафикРаботы)
	|			И (ГрафикиРаботыПоВидамВремени.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням))
	|			И Основной.ПериодДействия = ГрафикиРаботыПоВидамВремени.Месяц
	|			И (ГрафикиРаботыПоВидамВремени.План)
	|ГДЕ
	|	Основной.Регистратор = &парамРегистратор
	|	И Основной.Авторасчет
	|	И (Основной.ГрафикРаботыНорма <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)
	|			ИЛИ Основной.ВидУчетаВремени В (ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоВечернимЧасам), ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоНочнымЧасам)))
	|
	|СГРУППИРОВАТЬ ПО
	|	Основной.НомерСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки";*/
			/*// СоответствиеТабеляИНачислений
*/
			/*// Данное по ошибке, возникающей в случае ввода табеля с отклонениями, на которые не введены документы
*/
			/*//	Поля 
*/
			/*//		НомерСтроки
*/
			/*//		ПредупреждениеОНесоответствииТабеляИНачисления
*/
			/*//
*/
			/*//	Описание                       
*/
			/*//	Суммируем отработанное время в заданном периоде действия для каждой строки начисления
*/
			/*//	из регистра РабочееВремяРаботниковОрганизаций 
*/
			/*СоответствиеТабеляИНачислений = 
	"ВЫБРАТЬ
	|	Основной.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА Основной.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
	|					И Основной.ОсновноеЗначениеФактическийПериодДействия = СУММА(РабочееВремяРаботниковОрганизаций.Дней)
	|				ИЛИ Основной.ВидУчетаВремени В (ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоЧасам), ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоВечернимЧасам), ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоНочнымЧасам))
	|					И Основной.ОсновноеЗначениеФактическийПериодДействия = СУММА(РабочееВремяРаботниковОрганизаций.Часов)
	|				ИЛИ СУММА(РабочееВремяРаботниковОрганизаций.Часов) ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		КОГДА  Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени <> 
	|			ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)
	|				И НЕ СУММА(РабочееВремяРаботниковОрганизаций.Дней) ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПредупреждениеОНесоответствииТабеляИНачисления
	|ПОМЕСТИТЬ ВТСоответствиеТабеляИНачислений
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ДанныеГрафика(Регистратор = &парамРегистратор) КАК Основной
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РабочееВремяРаботниковОрганизаций КАК РабочееВремяРаботниковОрганизаций
	|		ПО (РабочееВремяРаботниковОрганизаций.Период МЕЖДУ Основной.ПериодДействияНачало И Основной.ПериодДействияКонец)
	|			И Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = РабочееВремяРаботниковОрганизаций.ВидИспользованияРабочегоВремени
	|			И Основной.Сотрудник = РабочееВремяРаботниковОрганизаций.Сотрудник
	|			И (НАЧАЛОПЕРИОДА(РабочееВремяРаботниковОрганизаций.Период, МЕСЯЦ) = &парамПериодРегистрации)
	|			И ((НЕ РабочееВремяРаботниковОрганизаций.ВЦеломЗаПериод))
	|ГДЕ
	|	Основной.Авторасчет
	|	И Основной.Регистратор = &ПарамРегистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	Основной.НомерСтроки,
	|	Основной.ВидУчетаВремени,
	|	Основной.ОсновноеЗначениеФактическийПериодДействия,
	|	Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени";*/
			/*// Сумма отработанного времени по видам времени: 
*/
			/*//	ОтработанноеВПределахНормы,
*/
			/*//	ЧасовоеОтработанноеВПределахНормы,
*/
			/*//	ОтработанноеСверхНормы, необходим для расчета показателей ОтработаноВремениВДнях, ОтработаноВремениВЧасах
*/
			/*УпрВсегоОтработаноВремени = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УправленческиеНачисления.ФизЛицо КАК ФизЛицо,
	|	УправленческиеНачисления.ПериодДействия КАК ПериодДействия
	|ПОМЕСТИТЬ ВТ_ФизлицаПериодыДействия
	|ИЗ
	|	РегистрРасчета.УправленческиеНачисления КАК УправленческиеНачисления
	|ГДЕ
	|	УправленческиеНачисления.Регистратор = &парамРегистратор
	|	И УправленческиеНачисления.Авторасчет
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ПериодДействия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Основной.НомерСтроки КАК НомерСтроки,
	|	СУММА(ГрафикиРаботы.ОсновноеЗначение) КАК ВсегоОтработаноДней,
	|	СУММА(ГрафикиРаботы.ДополнительноеЗначение) КАК ВсегоОтработаноЧасов
	|ПОМЕСТИТЬ ВТУпрВсегоОтработаноВремени
	|ИЗ
	|	РегистрРасчета.УправленческиеНачисления.ФактическийПериодДействия(
	|			Регистратор = &парамРегистратор
	|				И Авторасчет) КАК Основной
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.УправленческиеНачисления.ФактическийПериодДействия(
	|				ВидРасчета.ЗачетОтработанногоВремени
	|					И (ФизЛицо, ПериодДействия) В
	|						(ВЫБРАТЬ
	|							УправленческиеНачисления.ФизЛицо,
	|							УправленческиеНачисления.ПериодДействия
	|						ИЗ
	|							ВТ_ФизлицаПериодыДействия КАК УправленческиеНачисления)) КАК Вспомогательный
	|		ПО Основной.ФизЛицо = Вспомогательный.ФизЛицо
	|			И Основной.ПериодДействия = Вспомогательный.ПериодДействия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботы
	|		ПО (Вспомогательный.ГрафикРаботы = ГрафикиРаботы.ГрафикРаботы)
	|			И (ГрафикиРаботы.Месяц = Вспомогательный.ПериодДействия)
	|			И (ГрафикиРаботы.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням))
	|			И (ГрафикиРаботы.Дата МЕЖДУ Основной.ПериодДействияНачало И Основной.ПериодДействияКонец)
	|			И (ГрафикиРаботы.Дата МЕЖДУ Вспомогательный.ПериодДействияНачало И Вспомогательный.ПериодДействияКонец)
	|
	|СГРУППИРОВАТЬ ПО
	|	Основной.НомерСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки";*/
			/*УпрСводныеИндивидуальныеГрафикиТекст = 
	"ВЫБРАТЬ
	|	Основной.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА Основной.ВидУчетаВремени = &ПоДням
	|			ТОГДА СводныеИндивидуальныеГрафики.Дней
	|		КОГДА Основной.ВидУчетаВремени = &ПоЧасам
	|			ТОГДА СводныеИндивидуальныеГрафики.Часов
	|		КОГДА Основной.ВидУчетаВремени = &ПоВечернимЧасам
	|			ТОГДА СводныеИндивидуальныеГрафики.ЧасовВечерних
	|		КОГДА Основной.ВидУчетаВремени = &ПоНочнымЧасам
	|			ТОГДА СводныеИндивидуальныеГрафики.ЧасовНочных
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НормаВремени,
	|	ВЫБОР
	|		КОГДА Основной.ВидУчетаВремени = &ПоДням
	|			ТОГДА СводныеИндивидуальныеГрафики.Дней
	|		КОГДА Основной.ВидУчетаВремени = &ПоВечернимЧасам
	|			ТОГДА СводныеИндивидуальныеГрафики.ЧасовВечерних
	|		КОГДА Основной.ВидУчетаВремени = &ПоНочнымЧасам
	|			ТОГДА СводныеИндивидуальныеГрафики.ЧасовНочных
	|		ИНАЧЕ СводныеИндивидуальныеГрафики.Часов
	|	КОНЕЦ КАК ОсновноеЗначение,
	|	СводныеИндивидуальныеГрафики.Дней КАК ДнейПоГрафику,
	|	СводныеИндивидуальныеГрафики.Часов КАК ЧасовПоГрафику,
	|	СводныеИндивидуальныеГрафики.Дней КАК НормаДнейПоГрафику,
	|	СводныеИндивидуальныеГрафики.Часов КАК НормаЧасовПоГрафику,
	|	ВЫБОР
	|		КОГДА (НАЧАЛОПЕРИОДА(Основной.ПериодДействияНачало, ДЕНЬ) > Основной.ПериодДействия
	|				ИЛИ КОНЕЦПЕРИОДА(Основной.ПериодДействияКонец, ДЕНЬ) < КОНЕЦПЕРИОДА(Основной.ПериодДействия, МЕСЯЦ))
	|				И СводныеИндивидуальныеГрафики.Дней ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОшибкаВводаИндивидуальногоГрафикаРаботы
	|ПОМЕСТИТЬ ВТУпрСводныеИндивидуальныеГрафики
	|ИЗ
	|	РегистрРасчета.УправленческиеНачисления КАК Основной
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СводныеИндивидуальныеГрафики КАК СводныеИндивидуальныеГрафики
	|		ПО Основной.ФизЛицо = СводныеИндивидуальныеГрафики.Сотрудник.ФизЛицо
	|			И (СводныеИндивидуальныеГрафики.Месяц = Основной.ПериодДействия)
	|ГДЕ
	|	Основной.Регистратор = &парамРегистратор
	|	И Основной.Авторасчет
	|ИНДЕКСИРОВАТЬ ПО 
	|	НомерСтроки";*/
			/*// Конец определения текстов вложенных запросов
*/
			/*/////////////////////////////////////////////////////////////////////
*/
			/*Запрос = Новый Запрос();*/
			/*НеобходимаБаза = НеобходимыеДанные.База;*/
			/*НеобходимГрафик = НеобходимыеДанные.НормаВремени ИЛИ НеобходимыеДанные.ОтработаноВремени ИЛИ НеобходимыеДанные.НормаВремениЗаМесяц;*/
			/*МенеджерВТ = Новый МенеджерВременныхТаблиц;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВТ;*/
			/*// параметры запросов
*/
			/*Запрос.УстановитьПараметр("парамРегистратор", Регистратор);*/
			/*Запрос.УстановитьПараметр("парамОрганизация", Организация);*/
			/*Запрос.УстановитьПараметр("парамПериодРегистрации", ПериодРегистрации);*/
			/*// категория начисления (удержания)
*/
			/*Запрос.УстановитьПараметр("парамКатегорияНачисления", КатегорияРасчета);*/
			/*Условие = "ВидРасчета.КатегорияРасчета = &парамКатегорияНачисления И Регистратор = &парамРегистратор И Авторасчет";*/
			/*ВнешнееУсловие = "Основной.ВидРасчета.КатегорияРасчета = &парамКатегорияНачисления И Основной.Регистратор = &парамРегистратор";*/
			if(true/*Перерасчет*/)
			{
				if(true/*Физлица = Неопределено*/)
				{
					/*Запрос.Текст = ФизлицаДляПерерасчетаТекст;*/
					/*Запрос.Выполнить();*/
					/*ФизлицаДляПерерасчетаТекст = "ВТФизлицаДляПерерасчета";*/
					/*УсловиеНаФизлицоТекст = "Физлицо В (ВЫБРАТЬ Физлицо ИЗ ВТФизлицаДляПерерасчета)";*/
					/*Условие = Условие + " И " + УсловиеНаФизлицоТекст + " И Авторасчет";*/
					/*// в данном случае внешнее условие не дополняется - выполняется внутреннее 
*/
					/*// соединение с таблицей СотрудникиДляПерерасчета
*/
				}
			}
			/*// для формирования ИТОГИ при комментировании расчета
*/
			/*ПоляЗапроса = Новый Массив;*/
			/*ПроцентныеПоказатели = Новый Массив;*/
			/*ПроцентныеПоказатели.Добавить(Перечисления.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная);*/
			/*ПроцентныеПоказатели.Добавить(Перечисления.ТипыПоказателейСхемМотивации.Процентный);*/
			/*Запрос.УстановитьПараметр("ПроцентныеПоказатели", ПроцентныеПоказатели);*/
			/*ШкальныеПоказатели = Новый Массив;*/
			/*ШкальныеПоказатели.Добавить(Перечисления.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная);*/
			/*ШкальныеПоказатели.Добавить(Перечисления.ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая);*/
			/*Запрос.УстановитьПараметр("ШкальныеПоказатели", ШкальныеПоказатели);*/
			if(true/*НеобходимыеДанные.ПоказателиСхемМотивации*/)
			{
				if(true/*ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций"*/)
				{
					/*ИмяПВР = "ОсновныеНачисленияОрганизаций";*/
				}
				/*// Получим максимальное число показателей			
*/
				/*КоличествоПоказателей = ПроведениеРасчетов.ПолучитьДанныеОПроизвольныхФормулахВЗапросе(Запрос,ИмяРегистра,ВнешнееУсловие,ИмяПВР);*/
				/*Показатель1Текст = ПолучитьТекстПоказателя(НеобходимыеДанные,ИмяРегистра,,КомментироватьРасчет);*/
				if(true/*КоличествоПоказателей > 6*/)
				{
					/*// получим текст запроса для предопределенных показателей
*/
					/*Показатель1ТекстПредопределенный = ПолучитьТекстПоказателя(НеобходимыеДанные,ИмяРегистра, Истина,КомментироватьРасчет);*/
				}
			}
			/*// установка параметров связанных с виртуальными таблицами регистов расчета
*/
			if(true/*ИмяРегистра = "ДополнительныеНачисленияРаботниковОрганизаций" или
			ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций"*/)
			{
				/*// измерения сопоставления
*/
				/*Измерения = Новый Массив(1);*/
				/*Измерения[0] = "Сотрудник";*/
				/*// для начислений сопоставляемые измерения основного и базового регистов совпадают
*/
				/*Запрос.УстановитьПараметр("парамИзмеренияОсновного", Измерения);*/
				/*Запрос.УстановитьПараметр("парамИзмеренияБазового", Измерения);*/
				/*// список способов расчета, являющихся почасовыми отклонениями
*/
				/*Запрос.УстановитьПараметр("парамСписокПочасовыхОтклонений", ПроведениеРасчетов.ПолучитьСписокНачисленийПочасовыхОтклонений());*/
			}
			/*МассивСтажей = НеобходимыеДанные["ПроизвольныеСтажи"];*/
			if(true/*ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций"*/)
			{
				/*ТекстЗапроса = 
		"ВЫБРАТЬ 
		|Основной.Регистратор Как Регистратор,
		|Основной.НомерСтроки Как НомерСтроки,
		|Основной.ВидРасчета Как ВидРасчета,
		|Основной.ВидРасчета.Наименование Как ВидРасчетаНаименование,
		|Основной.ВидРасчета.ПериодДействияБазовый Как ВидРасчетаПериодДействияБазовый,
		|Основной.ВидРасчета.БазовыйПериодПрошлыйМесяц Как БазовыйПериодПрошлыйМесяц,
		|Основной.Сотрудник Как Сотрудник,
		|Основной.Сотрудник.Наименование Как СотрудникНаименование,
		|Основной.Сотрудник.Физлицо Как Физлицо,
		|Основной.ПериодДействияНачало Как ПериодДействияНачало,
		|Основной.ПериодДействияКонец Как ПериодДействияКонец,
		|Основной.ВидРасчета.ЗачетОтработанногоВремени Как ЗачетОтработанногоВремени,
		|Основной.ВидРасчета.ЗачетНормыВремени Как ЗачетНормыВремени,
		|Основной.ВидРасчета.ВидПособияСоциальногоСтрахования Как ВидПособияСоциальногоСтрахования,
		|Ложь Как ЯвляетсяДСВ,
		|Основной.ВидУчетаВремени Как ВидУчетаВремени,
		|Основной.ВидРасчета.СпособРасчета Как СпособРасчета, 
		|Основной.ВариантАлгоритмаРасчета Как ВариантАлгоритмаРасчета, 
		|ВЫБОР КОГДА Основной.ВидРасчета.ВидВремени В(&парамСписокПочасовыхОтклонений) ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ КАК ВидРасчетаЯвляетсяПочасовымОтклонением,
		|ЕСТЬNULL(Основной.ВидРасчета.КодДоходаНДФЛ.УчитыватьПоПериодуДействия,Ложь) Как УчитыватьДоходПоПериодуДействия,
		|Основной.ВидРасчета.КодДоходаНДФЛ Как КодДоходаНДФЛ";*/
				if(true/*КомментироватьРасчет*/)
				{
					/*ПоляЗапроса.Добавить("Сотрудник");*/
					/*ПоляЗапроса.Добавить("СотрудникНаименование");*/
					/*ПоляЗапроса.Добавить("ПериодДействияНачало");*/
					/*ПоляЗапроса.Добавить("ПериодДействияКонец");*/
					/*ПоляЗапроса.Добавить("ЗачетОтработанногоВремени");*/
					/*ПоляЗапроса.Добавить("ЗачетНормыВремени");*/
					/*ПоляЗапроса.Добавить("ВидУчетаВремени");*/
					/*ПоляЗапроса.Добавить("СпособРасчета");*/
					/*ПоляЗапроса.Добавить("ВариантАлгоритмаРасчета");*/
					/*ПоляЗапроса.Добавить("ВидРасчетаЯвляетсяПочасовымОтклонением");*/
					/*ПоляЗапроса.Добавить("УчитыватьДоходПоПериодуДействия");*/
					/*ПоляЗапроса.Добавить("КодДоходаНДФЛ");*/
					/*ПоляЗапроса.Добавить("ВидРасчета");*/
					/*ПоляЗапроса.Добавить("ВидРасчетаНаименование");*/
					/*ПоляЗапроса.Добавить("ВидРасчетаПериодДействияБазовый");*/
					/*ПоляЗапроса.Добавить("БазовыйПериодПрошлыйМесяц");*/
					/*ПоляЗапроса.Добавить("ЯвляетсяДСВ");*/
				}
				if(true/*НеобходимыеДанные.ПоказателиСхемМотивации*/)
				{
					/*ПроведениеРасчетов.ДобавитьПоказатели(НеобходимыеДанные, КоличествоПоказателей, ТекстЗапроса, КомментироватьРасчет, ПоляЗапроса, Показатель1Текст, Показатель1ТекстПредопределенный);*/
				}
				if(true/*НеобходимаБаза*/)
				{
					if(true/*КомментироватьРасчет*/)
					{
						/*ТекстЗапроса = ТекстЗапроса + ",
				|База.РезультатБаза Как РезультатБаза,
				|База.ВидРасчетаРазрез КАК ВидРасчетаРазрез,
				|База.ВидРасчетаРазрез.Наименование КАК ВидРасчетаРазрезНаименование";*/
						/*ПоляЗапроса.Добавить("РезультатБаза");*/
						/*ПоляЗапроса.Добавить("ВидРасчетаРазрез");*/
						/*ПоляЗапроса.Добавить("ВидРасчетаРазрезНаименование");*/
					}
				}
				if(true/*НеобходимГрафик*/)
				{
					/*ТекстЗапроса = ТекстЗапроса + ",
			|	ЕСТЬNULL(СводныеИндивидуальныеГрафики.ОшибкаВводаИндивидуальногоГрафикаРаботы, ЛОЖЬ) КАК ОшибкаВводаИндивидуальногоГрафикаРаботы,
			|	ЕСТЬNULL(ВремяВведенноеВЦеломЗаПериод.ОшибкаВводаОтработанногоВремени, ЛОЖЬ) КАК ОшибкаВводаОтработанногоВремени,
			|	ЕСТЬNULL(СоответствиеТабеляИНачислений.ПредупреждениеОНесоответствииТабеляИНачисления, ЛОЖЬ) КАК ПредупреждениеНесоответствияТабеляИНачисления,
			|	Основной.ГрафикРаботы.Наименование КАК ГрафикРаботыНаименование";*/
					if(true/*КомментироватьРасчет*/)
					{
						/*ПоляЗапроса.Добавить("ГрафикРаботыНаименование");*/
						/*ПоляЗапроса.Добавить("ОшибкаВводаИндивидуальногоГрафикаРаботы");*/
						/*ПоляЗапроса.Добавить("ОшибкаВводаОтработанногоВремени");*/
						/*ПоляЗапроса.Добавить("ПредупреждениеНесоответствияТабеляИНачисления");*/
					}
				}
				if(true/*НеобходимыеДанные.НормаВремениЗаМесяц*/)
				{
					/*ТекстЗапроса = ТекстЗапроса + ", 
			|	ЕСТЬNULL(
			|		ВЫБОР  
			|			КОГДА НормаВремениПоОбщемуГрафику.НомерСтроки ЕСТЬ NULL	
			|				ТОГДА ЕСТЬNULL(СводныеИндивидуальныеГрафики.НормаВремени,ДанныеГрафика.ОсновноеЗначениеНормаПериодДействия) 
			|			КОГДА Основной.ВидУчетаВремени = &ПоДням
			|				ТОГДА НормаВремениПоОбщемуГрафику.НормаДней
			|	    	ИНАЧЕ НормаВремениПоОбщемуГрафику.НормаЧасов
			|		КОНЕЦ, 0) КАК НормаВремениЗаМесяц";*/
					if(true/*КомментироватьРасчет*/)
					{
						/*ПоляЗапроса.Добавить("НормаВремениЗаМесяц");*/
					}
				}
				if(true/*НеобходимыеДанные.НормаВремени*/)
				{
					/*ТекстЗапроса = ТекстЗапроса + ", 
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(СводныеИндивидуальныеГрафики.ОшибкаВводаИндивидуальногоГрафикаРаботы, ЛОЖЬ)
			|			ТОГДА NULL
			|		ИНАЧЕ ЕСТЬNULL(СводныеИндивидуальныеГрафики.НормаЧасовПоГрафику, ЕСТЬNULL(ВЫБОР
			|						КОГДА Основной.ВидУчетаВремени = &ПоДням
			|							ТОГДА ДанныеГрафика.ДополнительноеЗначениеНормаФактическийПериодДействия
			|						ИНАЧЕ ДанныеГрафика.ОсновноеЗначениеНормаФактическийПериодДействия
			|					КОНЕЦ, 0))
			|	КОНЕЦ КАК НормаОплачиваемыхЧасов,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(СводныеИндивидуальныеГрафики.ОшибкаВводаИндивидуальногоГрафикаРаботы, ЛОЖЬ)
			|			ТОГДА NULL
			|		ИНАЧЕ ЕСТЬNULL(СводныеИндивидуальныеГрафики.НормаДнейПоГрафику, ЕСТЬNULL(ВЫБОР
			|						КОГДА Основной.ВидУчетаВремени = &ПоДням
			|							ТОГДА ДанныеГрафика.ОсновноеЗначениеНормаФактическийПериодДействия
			|						ИНАЧЕ ДанныеГрафика.ДополнительноеЗначениеНормаФактическийПериодДействия
			|					КОНЕЦ, 0))
			|	КОНЕЦ КАК НормаОплачиваемыхДней,
			|	ЕСТЬNULL(ДанныеГрафика.ПроизводственныйКалендарьПятидневкаЧасыФактическийПериодДействия,0) КАК ПроизводственныйКалендарьПятидневкаЧасыФактическийПериодДействия,
			|	ЕСТЬNULL(ДанныеГрафика.ПроизводственныйКалендарьПятидневкаФактическийПериодДействия,0) КАК ПроизводственныйКалендарьПятидневкаФактическийПериодДействия";*/
					if(true/*КомментироватьРасчет*/)
					{
						/*ПоляЗапроса.Добавить("НормаОплачиваемыхЧасов");*/
						/*ПоляЗапроса.Добавить("НормаОплачиваемыхДней");*/
						/*ПоляЗапроса.Добавить("ПроизводственныйКалендарьПятидневкаЧасыФактическийПериодДействия");*/
						/*ПоляЗапроса.Добавить("ПроизводственныйКалендарьПятидневкаФактическийПериодДействия");*/
					}
				}
				if(true/*НеобходимыеДанные.ОтработаноВремени*/)
				{
					/*ТекстЗапроса = ТекстЗапроса + ", 
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ВремяВведенноеВЦеломЗаПериод.ОшибкаВводаОтработанногоВремени, ЛОЖЬ)
			|			ТОГДА NULL
			|		КОГДА ВремяВведенноеВЦеломЗаПериод.ОсновноеЗначениеПоТабелю ЕСТЬ НЕ NULL 
			|			ТОГДА 1 
			|		КОГДА НЕ (Основной.ГрафикРаботы ССЫЛКА Справочник.ГрафикиРаботы)
			|			ТОГДА 4 
			|		КОГДА ЕСТЬNULL(СводныеИндивидуальныеГрафики.ОшибкаВводаИндивидуальногоГрафикаРаботы, ЛОЖЬ)
			|			ТОГДА NULL
			|		КОГДА СводныеИндивидуальныеГрафики.ОсновноеЗначение ЕСТЬ НЕ NULL 
			|			ТОГДА 2 
			|		ИНАЧЕ 3 
			|	КОНЕЦ КАК СпособВводаВремени,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ВремяВведенноеВЦеломЗаПериод.ОшибкаВводаОтработанногоВремени, ЛОЖЬ)
			|			ТОГДА NULL
			|		КОГДА НЕ ВремяВведенноеВЦеломЗаПериод.ОсновноеЗначениеПоТабелю ЕСТЬ NULL 
			|			ТОГДА ВремяВведенноеВЦеломЗаПериод.ОсновноеЗначениеПоТабелю 
			|		КОГДА Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени <>
			|			ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)
			|			 И НЕ ОтработаноПоВидуВремениНачисления.Дней ЕСТЬ NULL
			|			ТОГДА 
			|				ВЫБОР КОГДА Основной.ВидРасчета.ВидВремени = ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ДополнительноОплачиваемоеВПределахНормы)
			|					ТОГДА 
			|					ВЫБОР КОГДА Основной.ВидУчетаВремени = &ПоДням
			|						ТОГДА ЕСТЬNULL(ОтработаноПоВидуВремениНачисления.Дней, 0)
			|						ИНАЧЕ ЕСТЬNULL(ОтработаноПоВидуВремениНачисления.Часов, 0)
			|			    	КОНЕЦ
			|				ИНАЧЕ
			|					ЕСТЬNULL(ДанныеГрафика.ОсновноеЗначениеФактическийПериодДействия, 0) - 
			|					ВЫБОР КОГДА Основной.ВидУчетаВремени = &ПоДням
			|						ТОГДА ЕСТЬNULL(ОтработаноНЕПоВидуВремениНачисления.Дней, 0)
			|						ИНАЧЕ ЕСТЬNULL(ОтработаноНЕПоВидуВремениНачисления.Часов, 0)
			|			    	КОНЕЦ
			|			    КОНЕЦ
			|		КОГДА НЕ (Основной.ГрафикРаботы ССЫЛКА Справочник.ГрафикиРаботы)
			|			ТОГДА ЕСТЬNULL(ДанныеГрафика.ОсновноеЗначениеФактическийПериодДействия, 0)
			|		КОГДА ЕСТЬNULL(СводныеИндивидуальныеГрафики.ОшибкаВводаИндивидуальногоГрафикаРаботы, ЛОЖЬ)
			|			ТОГДА NULL
			|		ИНАЧЕ ЕСТЬNULL(СводныеИндивидуальныеГрафики.ОсновноеЗначение, ЕСТЬNULL(ДанныеГрафика.ОсновноеЗначениеФактическийПериодДействия, 0))
			|		КОНЕЦ КАК ОтработаноВремени,
			|	ВЫБОР
			|		КОГДА Основной.ВидРасчета.ВидВремени В (Значение(Перечисление.ВидыВремени.ЧасовоеНеотработанное), Значение(Перечисление.ВидыВремени.ЧасовоеОтработанноеВПределахНормы))
			|			ТОГДА 0
			|		КОГДА ЕСТЬNULL(ВремяВведенноеВЦеломЗаПериод.ОшибкаВводаОтработанногоВремени, ЛОЖЬ)
			|			ТОГДА 0
			|		КОГДА НЕ ВремяВведенноеВЦеломЗаПериод.ДнейПоТабелю ЕСТЬ NULL
			|			ТОГДА ВремяВведенноеВЦеломЗаПериод.ДнейПоТабелю 
			|		КОГДА Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени.РабочееВремя
			|			 И НЕ ОтработаноПоВидуВремениНачисления.Дней ЕСТЬ NULL
			|			ТОГДА ВЫБОР КОГДА Основной.ВидРасчета.ВидВремени = ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ДополнительноОплачиваемоеВПределахНормы)
			|					ТОГДА ЕСТЬNULL(ОтработаноПоВидуВремениНачисления.Дней, 0)
			|				ИНАЧЕ ЕСТЬNULL(ВЫБОР
			|						КОГДА Основной.ВидУчетаВремени = &ПоДням
			|							ТОГДА ДанныеГрафика.ОсновноеЗначениеФактическийПериодДействия
			|						ИНАЧЕ ДанныеГрафика.ДополнительноеЗначениеФактическийПериодДействия
			|						КОНЕЦ, 0) - ЕСТЬNULL(ОтработаноНЕПоВидуВремениНачисления.Дней, 0)
			|				КОНЕЦ
			|		КОГДА НЕ (Основной.ГрафикРаботы ССЫЛКА Справочник.ГрафикиРаботы)
			|			ТОГДА ЕСТЬNULL(ВЫБОР
			|					КОГДА Основной.ВидУчетаВремени = &ПоДням
			|						ТОГДА ДанныеГрафика.ОсновноеЗначениеФактическийПериодДействия
			|					ИНАЧЕ ДанныеГрафика.ДополнительноеЗначениеФактическийПериодДействия
			|					КОНЕЦ, 0)
			|		КОГДА ЕСТЬNULL(СводныеИндивидуальныеГрафики.ОшибкаВводаИндивидуальногоГрафикаРаботы, ЛОЖЬ)
			|			ТОГДА 0
			|		ИНАЧЕ ЕСТЬNULL(СводныеИндивидуальныеГрафики.ДнейПоГрафику, ЕСТЬNULL(ВЫБОР
			|				КОГДА Основной.ВидУчетаВремени = &ПоДням
			|					ТОГДА ДанныеГрафика.ОсновноеЗначениеФактическийПериодДействия
			|				ИНАЧЕ ДанныеГрафика.ДополнительноеЗначениеФактическийПериодДействия
			|				КОНЕЦ, 0))
			|	КОНЕЦ КАК ОтработаноДней,
			|	ВЫБОР
			|		КОГДА Основной.ВидРасчета.ВидВремени В (Значение(Перечисление.ВидыВремени.ЧасовоеНеотработанное), Значение(Перечисление.ВидыВремени.ЧасовоеОтработанноеВПределахНормы))
			|			ТОГДА ЕСТЬNULL(ВремяПоТабелю.ВнутрисменныеЧасыОтклонение, 0)
			|		КОГДА ЕСТЬNULL(ВремяВведенноеВЦеломЗаПериод.ОшибкаВводаОтработанногоВремени, ЛОЖЬ)
			|			ТОГДА 0
			|		КОГДА НЕ ВремяВведенноеВЦеломЗаПериод.ЧасовПоТабелю ЕСТЬ NULL
			|			ТОГДА ВремяВведенноеВЦеломЗаПериод.ЧасовПоТабелю 
			|		КОГДА Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени.РабочееВремя
			|			 И ОтработаноПоВидуВремениНачисления.Часов ЕСТЬ НЕ NULL
			|			ТОГДА ВЫБОР КОГДА Основной.ВидРасчета.ВидВремени = ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ДополнительноОплачиваемоеВПределахНормы)
			|					ТОГДА ОтработаноПоВидуВремениНачисления.Часов
			|					ИНАЧЕ ЕСТЬNULL(ВЫБОР
			|							КОГДА Основной.ВидУчетаВремени = &ПоДням
			|								ТОГДА ДанныеГрафика.ДополнительноеЗначениеФактическийПериодДействия
			|							ИНАЧЕ ДанныеГрафика.ОсновноеЗначениеФактическийПериодДействия
			|							КОНЕЦ, 0) - ЕСТЬNULL(ОтработаноНЕПоВидуВремениНачисления.Часов, 0)
			|					КОНЕЦ
			|		КОГДА НЕ (Основной.ГрафикРаботы ССЫЛКА Справочник.ГрафикиРаботы)
			|			ТОГДА ЕСТЬNULL(ВЫБОР
			|					КОГДА Основной.ВидУчетаВремени = &ПоДням
			|						ТОГДА ДанныеГрафика.ДополнительноеЗначениеФактическийПериодДействия
			|						ИНАЧЕ ДанныеГрафика.ОсновноеЗначениеФактическийПериодДействия
			|					КОНЕЦ, 0) - ВЫБОР
			|								КОГДА ВремяВведеноТабелем.НомерСтроки ЕСТЬ НЕ NULL
			|									ТОГДА 0
			|									ИНАЧЕ ЕСТЬNULL(ВремяПоТабелю.ОтработаноЧасовПоТабелюОтклонение,0)
			|								КОНЕЦ
			|		КОГДА ЕСТЬNULL(СводныеИндивидуальныеГрафики.ОшибкаВводаИндивидуальногоГрафикаРаботы, ЛОЖЬ)
			|			ТОГДА 0
			|		ИНАЧЕ ЕСТЬNULL(СводныеИндивидуальныеГрафики.ЧасовПоГрафику, ЕСТЬNULL(ВЫБОР
			|				КОГДА Основной.ВидУчетаВремени = &ПоДням
			|					ТОГДА ДанныеГрафика.ДополнительноеЗначениеФактическийПериодДействия
			|					ИНАЧЕ ДанныеГрафика.ОсновноеЗначениеФактическийПериодДействия
			|				КОНЕЦ, 0)) - ЕСТЬNULL(ВремяПоТабелю.ОтработаноЧасовПоТабелюОтклонение,0)
			|	КОНЕЦ КАК ОтработаноЧасов,
			|	ВЫБОР
			|		КОГДА ВремяВведеноТабелем.НомерСтроки ЕСТЬ НЕ NULL
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ВремяВведеноТабелем,
			|	ЕСТЬNULL(ДанныеГрафика.ПроизводственныйКалендарьПятидневкаЧасыФактическийПериодДействия,0) КАК ОтработаноЧасовПроизводственныйГрафик,
			|	ЕСТЬNULL(ДанныеГрафика.ПроизводственныйКалендарьПятидневкаФактическийПериодДействия, 0) КАК ОтработаноВремениПроизводственныйГрафик,
			|	ЕСТЬNULL(ВремяПоТабелю.ОтработаноЧасовПоТабелюОтклонение,0) КАК ОтработаноЧасовПоТабелюОтклонение";*/
					if(true/*КомментироватьРасчет*/)
					{
						/*ПоляЗапроса.Добавить("ОтработаноВремени");*/
						/*ПоляЗапроса.Добавить("ОтработаноДней");*/
						/*ПоляЗапроса.Добавить("ОтработаноЧасов");*/
						/*ПоляЗапроса.Добавить("ОтработаноВремениПроизводственныйГрафик");*/
						/*ПоляЗапроса.Добавить("ОтработаноЧасовПроизводственныйГрафик");*/
						/*ПоляЗапроса.Добавить("ОтработаноЧасовПоТабелюОтклонение");*/
						/*ПоляЗапроса.Добавить("ВремяВведеноТабелем");*/
					}
				}
				if(true/*НеобходимыеДанные.СреднийЗаработок*/)
				{
					/*ТекстЗапроса = ТекстЗапроса + ", 
			|ЕСТЬNULL(ДанныеДляРасчетаСреднего.ОтработаноДней,0) Как ОтработаноДнейПоСреднему, 
			|ЕСТЬNULL(ДанныеДляРасчетаСреднего.ОтработаноЧасов,0) Как ОтработаноЧасовПоСреднему, 
			|ДанныеДляРасчетаСреднего.СреднийЗаработок Как СреднийЗаработок";*/
					if(true/*КомментироватьРасчет*/)
					{
						/*ПоляЗапроса.Добавить("ОтработаноДнейПоСреднему");*/
						/*ПоляЗапроса.Добавить("ОтработаноЧасовПоСреднему");*/
						/*ПоляЗапроса.Добавить("СреднийЗаработок");*/
					}
				}
				if(true/*НеобходимыеДанные.РазмерОграниченияПособия*/)
				{
					/*ПроведениеРасчетов.ДописатьПоляАлгоритмов("РазмерОграниченияПособия", КомментироватьРасчет, ТекстЗапроса, ПоляЗапроса);*/
				}
				if(true/*НеобходимыеДанные.СреднийЗаработокПособий*/)
				{
					/*ПроведениеРасчетов.ДописатьПоляАлгоритмов("СреднийЗаработокПособий", КомментироватьРасчет, ТекстЗапроса, ПоляЗапроса);*/
				}
				if(true/*НеобходимыеДанные.СреднийЗаработокОтпуска*/)
				{
					/*// выбираем число дней по шестидневке или календарных рабочих дней 
*/
					/*// из производственного календаря и ЧислоДнейВНеделе
*/
					/*ТекстЗапроса = ТекстЗапроса + ", 
			|ВЫБОР КОГДА Основной.ВариантАлгоритмаРасчета = ЗНАЧЕНИЕ(Перечисление.ВариантыАлгоритмовРасчета.ОтпускСОплатойПраздничныхДней) ТОГДА ВремяВКалендарныхДнях.КалендарныхДней КОГДА Основной.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке) ТОГДА ДанныеГрафика.ПроизводственныйКалендарьШестидневкаФактическийПериодДействия ИНАЧЕ ДанныеГрафика.ПроизводственныйКалендарьКалендарныеДниФактическийПериодДействия КОНЕЦ КАК ОплачиваемыеДниОтпуска,
			|ВЫБОР КОГДА Основной.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке) ТОГДА 6 ИНАЧЕ 7 КОНЕЦ КАК ЧислоДнейВНеделе,
			|Основной.ГрафикРаботы.ДлительностьРабочейНедели КАК ДлительностьРабочейНедели";*/
					if(true/*КомментироватьРасчет*/)
					{
						/*ПоляЗапроса.Добавить("ОплачиваемыеДниОтпуска");*/
						/*ПоляЗапроса.Добавить("ЧислоДнейВНеделе");*/
						/*ПоляЗапроса.Добавить("ДлительностьРабочейНедели");*/
					}
				}
				if(true/*НеобходимыеДанные.ВремяВКалендарныхДнях*/)
				{
					/*ПроведениеРасчетов.ДописатьПоляАлгоритмов("ВремяВКалендарныхДнях", КомментироватьРасчет, ТекстЗапроса, ПоляЗапроса);*/
				}
				if(true/*НеобходимыеДанные.РазмерПособияПоУходуЗаРебенкомДо1_5Лет*/)
				{
					/*// выбираем размер пособия по уходу за ребенком до 1.5 лет
*/
					/*ТекстЗапроса = ТекстЗапроса + ", 
			|ДанныеОРазмереПособияПоУходуЗаРебенкомДоПолутораЛет.РазмерПособия КАК ПоУходуЗаРебенкомДоПолутораЛет,
			|МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет.РазмерПособия КАК МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет,
			|МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет.РазмерПособия КАК МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет,
			|МаксимумПособияПоУходуЗаРебенкомДоПолутораЛет.РазмерПособия КАК МаксимумПособияПоУходуЗаРебенкомДоПолутораЛет";*/
					if(true/*КомментироватьРасчет*/)
					{
						/*ПоляЗапроса.Добавить("ПоУходуЗаРебенкомДоПолутораЛет");*/
						/*ПоляЗапроса.Добавить("МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет");*/
						/*ПоляЗапроса.Добавить("МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет");*/
						/*ПоляЗапроса.Добавить("МаксимумПособияПоУходуЗаРебенкомДоПолутораЛет");*/
					}
				}
				if(true/*НеобходимыеДанные.РазмерПособияПоУходуЗаРебенкомДо3Лет*/)
				{
					/*// выбираем размер пособия по уходу за ребенком до 3 лет
*/
					/*ТекстЗапроса = ТекстЗапроса + ", 
			|ДанныеОРазмереПособияПоУходуЗаРебенкомДо3Лет.РазмерПособия КАК РазмерПособияПоУходуЗаРебенкомДо3Лет";*/
					if(true/*КомментироватьРасчет*/)
					{
						/*ПоляЗапроса.Добавить("РазмерПособияПоУходуЗаРебенкомДо3Лет");*/
					}
				}
				if(true/*НеобходимыеДанные.РайонныйКоэффициентРФОрганизации*/)
				{
					/*// размер районного коэфиициента, установленного для организации
*/
					/*ТекстЗапроса = ТекстЗапроса + ", 
			|	ВЫБОР
			|		КОГДА Основной.ПодразделениеОрганизации.КодПоОКАТО <> """"
			|			ТОГДА ВЫБОР
			|					КОГДА Основной.ПодразделениеОрганизации.РайонныйКоэффициентРФ > 1
			|						ТОГДА Основной.ПодразделениеОрганизации.РайонныйКоэффициентРФ
			|					ИНАЧЕ 1
			|				КОНЕЦ
			|		КОГДА Основной.ОбособленноеПодразделение.РайонныйКоэффициентРФ > 1
			|			ТОГДА Основной.ОбособленноеПодразделение.РайонныйКоэффициентРФ
			|		ИНАЧЕ 1
			|	КОНЕЦ КАК РайонныйКоэффициентРФОрганизации";*/
					if(true/*КомментироватьРасчет*/)
					{
						/*ПоляЗапроса.Добавить("РайонныйКоэффициентРФОрганизации");*/
					}
				}
				if(true/*НеобходимыеДанные.СдельныйЗаработок*/)
				{
					/*ПроведениеРасчетов.ДописатьПоляАлгоритмов("СдельныйЗаработок", КомментироватьРасчет, ТекстЗапроса, ПоляЗапроса);*/
				}
				if(true/*НеобходимыеДанные.ДанныеДляПрогнозаНДФЛ*/)
				{
					/*ТекстЗапроса = ТекстЗапроса + ", 
			|ВзаиморасчетыСРаботниками.СуммаУпрКонечныйОстаток Как КВыплатеПоУпрУчету,
			|ВзаиморасчетыСРаботникамиОрганизаций.УжеНачисленоДоДоначисления Как УжеНачисленоДоДоначисления,
			|ЕСТЬNULL(СуммарныйПроцент.Процент, 0) Как СуммарныйПроцент,
			|ВЫБОР КОГДА НеРезиденты.ФизЛицо ЕСТЬ NULL ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ Как Резидент";*/
					if(true/*КомментироватьРасчет*/)
					{
						/*ПоляЗапроса.Добавить("КВыплатеПоУпрУчету");*/
						/*ПоляЗапроса.Добавить("УжеНачисленоДоДоначисления");*/
						/*ПоляЗапроса.Добавить("СуммарныйПроцент");*/
						/*ПоляЗапроса.Добавить("Резидент");*/
					}
				}
				if(true/*НеобходимыеДанные.ДоходыОблагаемыеЕСН*/)
				{
					/*ПроведениеРасчетов.ДописатьПоляАлгоритмов("ДоходыОблагаемыеСтраховымиВзносамиЕСН", КомментироватьРасчет, ТекстЗапроса, ПоляЗапроса);*/
				}
				/*ТекстЗапроса = ТекстЗапроса + "
		|ИЗ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций Как Основной";*/
				if(true/*НеобходимыеДанные.ВремяВКалендарныхДнях Или НеобходимыеДанные.ОтработаноВремени Или НеобходимыеДанные.СдельныйЗаработок*/)
				{
					/*// все случаи использования таблицы ФПД
*/
					/*ПроведениеРасчетов.ДописатьАлгоритмВЗапрос("ФактическийПериодДействия", КомментироватьРасчет, Запрос, ТекстЗапроса);*/
				}
				if(true/*НеобходимыеДанные.ПоказателиСхемМотивации*/)
				{
					/*ТекстЗапроса = ТекстЗапроса + "
            |ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК Показатели
			|ПО Показатели.ВидРасчета = Основной.ВидРасчета";*/
				}
				if(true/*НеобходимыеДанные.ВсегоОтработаноВремени*/)
				{
					/*ПроведениеРасчетов.ДописатьАлгоритмВЗапрос("ВсегоОтработаноВремени", КомментироватьРасчет, Запрос, ТекстЗапроса);*/
				}
				if(true/*НеобходимыеДанные.Стаж*/)
				{
					/*// присоединение к данным о стаже
*/
					/*ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ДанныеОСтаже			
			|ПО ДанныеОСтаже.Сотрудник = Основной.Сотрудник
			|И	ДанныеОСтаже.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)";*/
					/*Запрос.УстановитьПараметр("ПериодРегистрации",	ПериодРегистрации);*/
				}
				/*// если перерасчет - нужно сузить выборку 
*/
				if(true/*Перерасчет И Физлица = Неопределено*/)
				{
					/*// перерасчет по всем физлицам перерасчета
*/
					/*ТекстЗапроса = ТекстЗапроса + "
			|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизлицаДляПерерасчета КАК ФизлицаДляПерерасчета
			|ПО ФизлицаДляПерерасчета.Физлицо = Основной.Физлицо";*/
				}
				if(true/*НеобходимаБаза*/)
				{
					/*Разрезы = Новый Массив;*/
					/*Разрезы.Добавить("ПериодРегистрации");*/
					if(true/*КомментироватьРасчет*/)
					{
						/*Запрос.Текст = 
                "ВЫБРАТЬ
                |	СУММА(База.РезультатБаза) КАК РезультатБаза,
                |	База.ВидРасчетаРазрез КАК ВидРасчетаРазрез,
                |	База.Регистратор КАК Регистратор,
                |	База.НомерСтроки КАК НомерСтроки
                |ПОМЕСТИТЬ ВТБаза
                |ИЗ
                |	(ВЫБРАТЬ
                |		База1.РезультатБаза КАК РезультатБаза,
                |		База1.ВидРасчетаРазрез КАК ВидРасчетаРазрез,
                |		База1.Регистратор КАК Регистратор,
                |		База1.НомерСтроки КАК НомерСтроки
                |	ИЗ
                |		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.БазаОсновныеНачисленияРаботниковОрганизаций(&парамИзмеренияОсновного, &парамИзмеренияБазового, &парамРазрезы, " + Условие + ") КАК База1
                |	ГДЕ
                |		((НЕ База1.Сторно)
                |				ИЛИ База1.ПериодРегистрацииРазрез < База1.ПериодРегистрации)
                |	
                |	ОБЪЕДИНИТЬ ВСЕ
                |	
                |	ВЫБРАТЬ
                |		База2.РезультатБаза,
                |		База2.ВидРасчетаРазрез,
                |		База2.Регистратор,
                |		База2.НомерСтроки
                |	ИЗ
                |		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.БазаДополнительныеНачисленияРаботниковОрганизаций(&парамИзмеренияОсновного, &парамИзмеренияБазового, &парамРазрезы, " + Условие + ") КАК База2
                |	ГДЕ
                |		((НЕ База2.Сторно)
                |				ИЛИ База2.ПериодРегистрацииРазрез < База2.ПериодРегистрации)) КАК База
                |СГРУППИРОВАТЬ ПО
                |	База.ВидРасчетаРазрез,
                |	База.Регистратор,
                |	База.НомерСтроки";*/
						/*Разрезы.Добавить("ВидРасчета");*/
					}
					/*Запрос.УстановитьПараметр("парамРазрезы", Разрезы);*/
					/*Запрос.Выполнить();*/
					/*ТекстЗапроса = ТекстЗапроса + "
            |ЛЕВОЕ СОЕДИНЕНИЕ ВТБаза КАК База
            |ПО Основной.Регистратор = База.Регистратор И Основной.НомерСтроки = База.НомерСтроки";*/
				}
				if(true/*НеобходимГрафик*/)
				{
					/*Запрос.УстановитьПараметр("ПоДням", Перечисления.ВидыУчетаВремени.ПоДням);*/
					/*Запрос.УстановитьПараметр("ПоЧасам", Перечисления.ВидыУчетаВремени.ПоЧасам);*/
					/*Запрос.УстановитьПараметр("ПоВечернимЧасам", Перечисления.ВидыУчетаВремени.ПоВечернимЧасам);*/
					/*Запрос.УстановитьПараметр("ПоНочнымЧасам", Перечисления.ВидыУчетаВремени.ПоНочнымЧасам);*/
					/*Запрос.УстановитьПараметр("ПустойВидИспользованияРабочегоВремени", Справочники.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка());*/
					/*Запрос.УстановитьПараметр("КлассификаторЯ", Справочники.КлассификаторИспользованияРабочегоВремени.Работа);*/
					/*Запрос.УстановитьПараметр("КлассификаторВЧ", Справочники.КлассификаторИспользованияРабочегоВремени.РаботаВечерниеЧасы);*/
					/*Запрос.УстановитьПараметр("КлассификаторНЧ", Справочники.КлассификаторИспользованияРабочегоВремени.РаботаНочныеЧасы);*/
					/*Запрос.УстановитьПараметр("ОтработанноеВПределахНормы", Перечисления.ВидыВремени.ОтработанноеВПределахНормы);*/
					/*Запрос.УстановитьПараметр("ЦелодневноеНеотработанное", Перечисления.ВидыВремени.ЦелодневноеНеотработанное);*/
					/*Запрос.УстановитьПараметр("ЧасовоеНеотработанное", Перечисления.ВидыВремени.ЧасовоеНеотработанное);*/
					/*Запрос.УстановитьПараметр("ЧасовоеОтработанноеВПределахНормы", Перечисления.ВидыВремени.ЧасовоеОтработанноеВПределахНормы);*/
					/*Запрос.Текст = СводныеИндивидуальныеГрафикиТекст;*/
					/*Запрос.Выполнить();*/
					/*Запрос.Текст = ВремяВведенноеВЦеломЗаПериодТекст;*/
					/*Запрос.Выполнить();*/
					/*Запрос.Текст = СоответствиеТабеляИНачислений;*/
					/*Запрос.Выполнить();*/
					/*// присоединяем к данным графика
*/
					/*ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ДанныеГрафика(" + Условие +  ") Как ДанныеГрафика
			|ПО Основной.Регистратор = ДанныеГрафика.Регистратор И Основной.НомерСтроки = ДанныеГрафика.НомерСтроки
			|ЛЕВОЕ СОЕДИНЕНИЕ ВТСводныеИндивидуальныеГрафики КАК СводныеИндивидуальныеГрафики
			|ПО Основной.НомерСтроки = СводныеИндивидуальныеГрафики.НомерСтроки
			|ЛЕВОЕ СОЕДИНЕНИЕ ВТВремяВведенноеВЦеломЗаПериод КАК ВремяВведенноеВЦеломЗаПериод
			|ПО Основной.НомерСтроки = ВремяВведенноеВЦеломЗаПериод.НомерСтроки
			|ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеТабеляИНачислений КАК СоответствиеТабеляИНачислений
			|ПО Основной.НомерСтроки = СоответствиеТабеляИНачислений.НомерСтроки
			|";*/
				}
				if(true/*НеобходимыеДанные.НормаВремениЗаМесяц*/)
				{
					/*Запрос.Текст = НормаВремениПоОбщемуГрафикуТекст;*/
					/*Запрос.Выполнить();*/
					/*// присоединяем к данным графика
*/
					/*ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ ВТНормаВремениПоОбщемуГрафику КАК НормаВремениПоОбщемуГрафику
			|ПО Основной.НомерСтроки = НормаВремениПоОбщемуГрафику.НомерСтроки
			|";*/
				}
				if(true/*НеобходимыеДанные.ОтработаноВремени*/)
				{
					/*Запрос.Текст = ВремяПоТабелюТекст;*/
					/*Запрос.Выполнить();*/
					/*Запрос.Текст = ОтработаноПоВидуВремениДляПоказателейТекст;*/
					/*Запрос.Выполнить();*/
					/*Запрос.Текст = ОтработаноНЕПоВидуВремениДляПоказателейТекст;*/
					/*Запрос.Выполнить();*/
					/*Запрос.Текст = ДанныеТабеляТекст;*/
					/*Запрос.Выполнить();*/
					/*// присоединяем к данным графика
*/
					/*ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ ВТВремяПоТабелю КАК ВремяПоТабелю
			|ПО Основной.НомерСтроки = ВремяПоТабелю.НомерСтроки
			|ЛЕВОЕ СОЕДИНЕНИЕ ВТОтработаноПоВидуВремениДляПоказателей КАК ОтработаноПоВидуВремениНачисления
			|ПО Основной.НомерСтроки = ОтработаноПоВидуВремениНачисления.НомерСтроки
			|ЛЕВОЕ СОЕДИНЕНИЕ ВТОтработаноНЕПоВидуВремениДляПоказателей КАК ОтработаноНЕПоВидуВремениНачисления
			|ПО Основной.НомерСтроки = ОтработаноНЕПоВидуВремениНачисления.НомерСтроки
			|ЛЕВОЕ СОЕДИНЕНИЕ ВТВремяВведеноТабелем КАК ВремяВведеноТабелем
			|ПО Основной.НомерСтроки = ВремяВведеноТабелем.НомерСтроки
			|";*/
				}
				if(true/*НеобходимыеДанные.СреднийЗаработок Или НеобходимыеДанные.СреднийЗаработокПособий*/)
				{
					/*ОсновнойЗаработок = Новый Массив(3);*/
					/*ОсновнойЗаработок[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку;*/
					/*ОсновнойЗаработок[1] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛ;*/
					/*ОсновнойЗаработок[2] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые;*/
					/*ПоФиксПремиям = Новый Массив(2);*/
					/*ПоФиксПремиям[0] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиям;*/
					/*ПоФиксПремиям[1] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямБЛ;*/
					/*ПоПремиям = Новый Массив(4);*/
					/*ПоПремиям[0] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиям;*/
					/*ПоПремиям[1] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямБЛ;*/
					/*ПоПремиям[2] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямИндексируемые;*/
					/*ПоПремиям[3] = ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииИндексируемые;*/
					/*ПоФиксПремиямНеИндексируемые = Новый Массив(4);*/
					/*ПоФиксПремиямНеИндексируемые[0] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремии;*/
					/*ПоФиксПремиямНеИндексируемые[1] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииБЛ;*/
					/*ПоФиксПремиямНеИндексируемые[2] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииНеИндексируемые;*/
					/*ПоФиксПремиямНеИндексируемые[3] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямНеИндексируемые;*/
					/*Запрос.УстановитьПараметр("ОсновнойЗаработок", ОсновнойЗаработок);*/
					/*// Основной заработок индексируемый
*/
					/*Запрос.УстановитьПараметр("ОсновнойЗаработокНеиндексируемый", ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуНеИндексируемые);*/
					/*Запрос.УстановитьПараметр("ПоПремиям", ПоПремиям);*/
					/*// Премии полностью учитываемые, индексируемые
*/
					/*Запрос.УстановитьПараметр("ПоФиксПремиям", ПоФиксПремиям);*/
					/*// Премии учитываемые частично, индексируемые
*/
					/*Запрос.УстановитьПараметр("ПоФиксПремиямНеИндексируемые", ПоФиксПремиямНеИндексируемые);*/
					/*// Премии учитываемые частично, не индексируемые
*/
					/*// для реализации Федеральных законов:
*/
					/*//	от 22.12.2005 г. № 180-ФЗ и от 29 декабря 2006 г. № 255-ФЗ - по больничным листам
*/
					/*//	от 5 декабря 2006 г. № 207-ФЗ - по отпуску по уходу за детьми
*/
					/*// при расчете пособий заработок учитывается по всем местам работы
*/
					/*Запрос.УстановитьПараметр("ОсновнойЗаработокПособий", ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособий);*/
					/*СоставляющиеСреднегоЗаработкаПособий = Новый Массив(5);*/
					/*СоставляющиеСреднегоЗаработкаПособий.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособий);*/
					/*СоставляющиеСреднегоЗаработкаПособий.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособий);*/
					/*СоставляющиеСреднегоЗаработкаПособий.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямПособий);*/
					/*СоставляющиеСреднегоЗаработкаПособий.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииПособий);*/
					/*СоставляющиеСреднегоЗаработкаПособий.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииПособий);*/
					/*СоставляющиеПрочихСреднихЗаработков = Новый Массив(18);*/
					/*СоставляющиеПрочихСреднихЗаработков.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые);*/
					/*СоставляющиеПрочихСреднихЗаработков.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуНеИндексируемые);*/
					/*СоставляющиеПрочихСреднихЗаработков.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиямИндексируемые);*/
					/*СоставляющиеПрочихСреднихЗаработков.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиямНеИндексируемые);*/
					/*СоставляющиеПрочихСреднихЗаработков.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииИндексируемые);*/
					/*СоставляющиеПрочихСреднихЗаработков.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииНеИндексируемые);*/
					/*СоставляющиеПрочихСреднихЗаработков.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямНеИндексируемые);*/
					/*СоставляющиеПрочихСреднихЗаработков.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииНеИндексируемые);*/
					/*СоставляющиеПрочихСреднихЗаработков.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку);*/
					/*СоставляющиеПрочихСреднихЗаработков.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиям);*/
					/*СоставляющиеПрочихСреднихЗаработков.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиям);*/
					/*СоставляющиеПрочихСреднихЗаработков.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремии);*/
					/*СоставляющиеПрочихСреднихЗаработков.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремии);*/
					/*СоставляющиеПрочихСреднихЗаработков.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛ);*/
					/*СоставляющиеПрочихСреднихЗаработков.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиямБЛ);*/
					/*СоставляющиеПрочихСреднихЗаработков.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямБЛ);*/
					/*СоставляющиеПрочихСреднихЗаработков.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииБЛ);*/
					/*СоставляющиеПрочихСреднихЗаработков.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииБЛ);*/
					/*Запрос.УстановитьПараметр("СоставляющиеСреднегоЗаработкаПособий", СоставляющиеСреднегоЗаработкаПособий);*/
					/*Запрос.УстановитьПараметр("СоставляющиеПрочихСреднихЗаработков", СоставляющиеПрочихСреднихЗаработков);*/
					/*ПоСреднемуЗаработкуФСС = Новый Массив(2);*/
					/*ПоСреднемуЗаработкуФСС[0] = Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС;*/
					/*ПоСреднемуЗаработкуФСС[1] = Перечисления.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет;*/
					/*Запрос.УстановитьПараметр("ПоСреднемуЗаработкуФСС", ПоСреднемуЗаработкуФСС);*/
					/*Запрос.Текст = ДанныеОСреднемЗаработкеТекст;*/
					/*Запрос.Выполнить();*/
					/*// присоединяем данные для расчета среднего заработка
*/
					/*ТекстЗапроса = ТекстЗапроса + "
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОСреднемЗаработке КАК ДанныеДляРасчетаСреднего
			|		ПО Основной.Сотрудник = ДанныеДляРасчетаСреднего.Сотрудник
			|			И Основной.ДатаНачалаСобытия = ДанныеДляРасчетаСреднего.ДатаНачалаСобытия
			|			И Основной.ПериодРасчетаСреднегоЗаработкаНачало = ДанныеДляРасчетаСреднего.ДатаНачалаРасчетногоПериода
			|			И Основной.ПериодРасчетаСреднегоЗаработкаОкончание = ДанныеДляРасчетаСреднего.ДатаОкончанияРасчетногоПериода
			|			И (ВЫБОР
			|				КОГДА Основной.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработкаФСС)
			|					ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
			|				ИНАЧЕ Основной.ВидРасчета.СпособРасчета
			|			КОНЕЦ = ДанныеДляРасчетаСреднего.СпособРасчета)";*/
				}
				if(true/*НеобходимыеДанные.РазмерОграниченияПособия*/)
				{
					/*ПроведениеРасчетов.ДописатьАлгоритмВЗапрос("РазмерОграниченияПособия", КомментироватьРасчет, Запрос, ТекстЗапроса);*/
				}
				if(true/*НеобходимыеДанные.СреднийЗаработокПособий*/)
				{
					/*ПроведениеРасчетов.ДописатьАлгоритмВЗапрос("СреднийЗаработокПособий2011", КомментироватьРасчет, Запрос, ТекстЗапроса);*/
				}
				if(true/*НеобходимыеДанные.ВремяВКалендарныхДнях*/)
				{
					/*ПроведениеРасчетов.ДописатьАлгоритмВЗапрос("ВремяВКалендарныхДнях", КомментироватьРасчет, Запрос, ТекстЗапроса);*/
				}
				if(true/*НеобходимыеДанные.РазмерПособияПоУходуЗаРебенкомДо1_5Лет*/)
				{
					/*Запрос.УстановитьПараметр("СпособРасчетаПособиеПоУходуЗаРебенкомДо1_5Лет", Перечисления.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет);*/
					/*Запрос.УстановитьПараметр("РазмерПособияПоУходуЗаРебенкомДоПолутораЛет", Перечисления.РазмерыГосударственныхПособий.ПоУходуЗаРебенкомДоПолутораЛет);*/
					/*Запрос.УстановитьПараметр("МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет", Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет);*/
					/*Запрос.УстановитьПараметр("МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет", Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет);*/
					/*Запрос.УстановитьПараметр("МаксимумПособияПоУходуЗаРебенкомДоПолутораЛет", Перечисления.РазмерыГосударственныхПособий.МаксимумПособияПоУходуЗаРебенкомДоПолутораЛет);*/
					/*ВидПособияПоУходуЗаРебенкомДо1_5Лет = Новый Массив;*/
					/*ВидПособияПоУходуЗаРебенкомДо1_5Лет.Добавить(Перечисления.РазмерыГосударственныхПособий.ПоУходуЗаРебенкомДоПолутораЛет);*/
					/*ВидПособияПоУходуЗаРебенкомДо1_5Лет.Добавить(Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет);*/
					/*ВидПособияПоУходуЗаРебенкомДо1_5Лет.Добавить(Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет);*/
					/*ВидПособияПоУходуЗаРебенкомДо1_5Лет.Добавить(Перечисления.РазмерыГосударственныхПособий.МаксимумПособияПоУходуЗаРебенкомДоПолутораЛет);*/
					/*Запрос.УстановитьПараметр("ВидПособияПоУходуЗаРебенкомДо1_5Лет", ВидПособияПоУходуЗаРебенкомДо1_5Лет);*/
					/*Запрос.Текст = РазмерПособияПоУходуЗаРебенкомДо1_5ЛетТекст;*/
					/*Запрос.Выполнить();*/
					/*РазмерПособияПоУходуЗаРебенкомДо1_5ЛетТекст = "ВТРазмерПособияПоУходуЗаРебенкомДо1_5Лет";*/
					/*// присоединяем данные о размере пособия
*/
					/*ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерПособияПоУходуЗаРебенкомДо1_5Лет КАК ДанныеОРазмереПособияПоУходуЗаРебенкомДоПолутораЛет
			|ПО Основной.НомерСтроки = ДанныеОРазмереПособияПоУходуЗаРебенкомДоПолутораЛет.ОсновнойНомерСтроки И ДанныеОРазмереПособияПоУходуЗаРебенкомДоПолутораЛет.ВидПособия = &РазмерПособияПоУходуЗаРебенкомДоПолутораЛет
			|ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерПособияПоУходуЗаРебенкомДо1_5Лет КАК МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет
			|ПО Основной.НомерСтроки = МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет.ОсновнойНомерСтроки И МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет.ВидПособия = &МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет
			|ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерПособияПоУходуЗаРебенкомДо1_5Лет КАК МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет
			|ПО Основной.НомерСтроки = МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет.ОсновнойНомерСтроки И МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет.ВидПособия = &МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет
			|ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерПособияПоУходуЗаРебенкомДо1_5Лет КАК МаксимумПособияПоУходуЗаРебенкомДоПолутораЛет
			|ПО Основной.НомерСтроки = МаксимумПособияПоУходуЗаРебенкомДоПолутораЛет.ОсновнойНомерСтроки И МаксимумПособияПоУходуЗаРебенкомДоПолутораЛет.ВидПособия = &МаксимумПособияПоУходуЗаРебенкомДоПолутораЛет";*/
				}
				if(true/*НеобходимыеДанные.РазмерПособияПоУходуЗаРебенкомДо3Лет*/)
				{
					/*Запрос.УстановитьПараметр("СпособРасчетаПособиеПоУходуЗаРебенкомДо3Лет", Перечисления.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо3Лет);*/
					/*Запрос.УстановитьПараметр("ВидПособияПоУходуЗаРебенкомДо3Лет", Перечисления.РазмерыГосударственныхПособий.ПоУходуЗаРебенкомДо3хЛет);*/
					/*Запрос.Текст = РазмерПособияПоУходуЗаРебенкомДо3ЛетТекст;*/
					/*Запрос.Выполнить();*/
					/*РазмерПособияПоУходуЗаРебенкомДо3ЛетТекст = "ВТРазмерПособияПоУходуЗаРебенкомДо3Лет";*/
					/*// присоединяем данные о размере пособия
*/
					/*ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ "+РазмерПособияПоУходуЗаРебенкомДо3ЛетТекст+" КАК ДанныеОРазмереПособияПоУходуЗаРебенкомДо3Лет
			|ПО Основной.НомерСтроки = ДанныеОРазмереПособияПоУходуЗаРебенкомДо3Лет.ОсновнойНомерСтроки";*/
				}
				if(true/*НеобходимыеДанные.СдельныйЗаработок*/)
				{
					/*ПроведениеРасчетов.ДописатьАлгоритмВЗапрос("СдельныйЗаработок", КомментироватьРасчет, Запрос, ТекстЗапроса);*/
				}
				if(true/*НеобходимыеДанные.ДанныеДляПрогнозаНДФЛ*/)
				{
					/*// получим период за который необходимы данные к выплате по управленческому учету
*/
					/*ЗапросПериода = Новый Запрос(
			"ВЫБРАТЬ
			|	МАКСИМУМ(Начисления.ПериодДействия) КАК МаксПД,
			|	МИНИМУМ(Начисления.ПериодДействия) КАК МинПД
			|ИЗ
			|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
			|ГДЕ
			|	Начисления.Регистратор = &парамРегистратор
			|	И Начисления.ВидРасчета.СпособРасчета = &Доначисление
			|	И Начисления.ВидРасчета.КатегорияРасчета = &парамКатегорияНачисления");*/
					/*ЗапросПериода.УстановитьПараметр("Доначисление", Перечисления.СпособыРасчетаОплатыТруда.ДоначислениеПоУправленческомуУчету);*/
					/*ЗапросПериода.УстановитьПараметр("парамРегистратор", Регистратор);*/
					/*ЗапросПериода.УстановитьПараметр("парамКатегорияНачисления", КатегорияРасчета);*/
					/*Выборка = ЗапросПериода.Выполнить().Выбрать();*/
					/*Выборка.Следующий();*/
					/*// остатки получаем на начало месяца, следующего за периодом действия начисления
*/
					/*ПериодОстатковНачало = ДобавитьМесяц(Выборка.МинПД, 1);*/
					/*ПериодОстатковКонец = ДобавитьМесяц(Выборка.МаксПД, 1);*/
					/*// суммарный процент всех процентных начислений, в базу которых включены виды расчета 
*/
					/*// со способом расчета ДоначислениеПоУправленческомуУчету
*/
					/*Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Начисления.Сотрудник,
			|	Начисления.ФизЛицо,
			|	Начисления.ПериодДействия
			|ПОМЕСТИТЬ ВТСотрудникиСДоначислением
			|ИЗ
			|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
			|ГДЕ
			|	Начисления.Регистратор = &парамРегистратор
			|	И Начисления.ВидРасчета.СпособРасчета = &Доначисление
			|	И Начисления.ВидРасчета.КатегорияРасчета = &парамКатегорияНачисления
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Начисления.Сотрудник КАК Сотрудник,
			|	Начисления.ПериодДействия КАК ПериодДействия,
			|	Начисления.Размер + Дополнительные.Размер КАК Процент
			|ПОМЕСТИТЬ ВТСуммарныйПроцент
			|ИЗ
			|	(ВЫБРАТЬ
			|		Начисления.Сотрудник КАК Сотрудник,
			|		НАЧАЛОПЕРИОДА(Начисления.ДатаНачала, МЕСЯЦ) КАК ПериодДействия,
			|		СУММА(Начисления.Показатель1) КАК Размер
			|	ИЗ
			|		Документ.НачислениеЗарплатыРаботникамОрганизаций.Начисления КАК Начисления
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудникиСДоначислением КАК СотрудникиСДоначислением
			|			ПО Начисления.Сотрудник = СотрудникиСДоначислением.Сотрудник
			|				И (НАЧАЛОПЕРИОДА(Начисления.ДатаНачала, МЕСЯЦ) = СотрудникиСДоначислением.ПериодДействия)
			|	ГДЕ
			|		Начисления.Ссылка = &парамРегистратор
			|		И Начисления.ВидРасчета.СпособРасчета В(&Процентом)
			|		И Начисления.ВидРасчета В
			|				(ВЫБРАТЬ
			|					Базовые.Ссылка
			|				ИЗ
			|					ПланВидовРасчета.ОсновныеНачисленияОрганизаций.БазовыеВидыРасчета КАК Базовые
			|				ГДЕ
			|					Базовые.ВидРасчета.СпособРасчета = &Доначисление)
			|	
			|	СГРУППИРОВАТЬ ПО
			|		Начисления.Сотрудник,
			|		НАЧАЛОПЕРИОДА(Начисления.ДатаНачала, МЕСЯЦ)) КАК Начисления
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			Начисления.Сотрудник КАК Сотрудник,
			|			СУММА(Начисления.Показатель1) КАК Размер
			|		ИЗ
			|			Документ.НачислениеЗарплатыРаботникамОрганизаций.ДополнительныеНачисления КАК Начисления
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудникиСДоначислением КАК СотрудникиСДоначислением
			|				ПО Начисления.Сотрудник = СотрудникиСДоначислением.Сотрудник
			|		ГДЕ
			|			Начисления.Ссылка = &парамРегистратор
			|			И Начисления.ВидРасчета.СпособРасчета В(&Процентом)
			|			И Начисления.ВидРасчета В
			|					(ВЫБРАТЬ
			|						Базовые.Ссылка
			|					ИЗ
			|						ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.БазовыеВидыРасчета КАК Базовые
			|					ГДЕ
			|						Базовые.ВидРасчета.СпособРасчета = &Доначисление)
			|		
			|		СГРУППИРОВАТЬ ПО
			|			Начисления.Сотрудник) КАК Дополнительные
			|		ПО Начисления.Сотрудник = Дополнительные.Сотрудник
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВзаиморасчетыСРаботникамиОрганизаций.Физлицо,
			|	НАЧАЛОПЕРИОДА(ВзаиморасчетыСРаботникамиОрганизаций.Период, МЕСЯЦ) КАК Период,
			|	СУММА(ВзаиморасчетыСРаботникамиОрганизаций.СуммаВзаиморасчетов) КАК УжеНачисленоДоДоначисления
			|ПОМЕСТИТЬ ВТВзаиморасчетыСРаботникамиОрганизаций
			|ИЗ
			|	РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций КАК ВзаиморасчетыСРаботникамиОрганизаций
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудникиСДоначислением КАК СотрудникиСДоначислением
			|		ПО (СотрудникиСДоначислением.ФизЛицо = ВзаиморасчетыСРаботникамиОрганизаций.Физлицо)
			|			И (НАЧАЛОПЕРИОДА(ВзаиморасчетыСРаботникамиОрганизаций.Период, МЕСЯЦ) = СотрудникиСДоначислением.ПериодДействия)
			|ГДЕ
			|	ВзаиморасчетыСРаботникамиОрганизаций.Организация = &парамОрганизация
			|	И ВзаиморасчетыСРаботникамиОрганизаций.Регистратор <> &парамРегистратор
			|	И ВзаиморасчетыСРаботникамиОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|
			|СГРУППИРОВАТЬ ПО
			|	ВзаиморасчетыСРаботникамиОрганизаций.Физлицо,
			|	НАЧАЛОПЕРИОДА(ВзаиморасчетыСРаботникамиОрганизаций.Период, МЕСЯЦ)";*/
					/*ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСРаботниками.ОстаткиИОбороты(&ПериодОстатковНачало, &ПериодОстатковКонец, МЕСЯЦ, , Физлицо В (ВЫБРАТЬ РАЗЛИЧНЫЕ Физлицо ИЗ ВТСотрудникиСДоначислением)) КАК ВзаиморасчетыСРаботниками
			|ПО Основной.Физлицо = ВзаиморасчетыСРаботниками.Физлицо
			|И ДОБАВИТЬКДАТЕ(Основной.ПериодДействия, МЕСЯЦ, 1) = ВзаиморасчетыСРаботниками.Период
			|ЛЕВОЕ СОЕДИНЕНИЕ ВТВзаиморасчетыСРаботникамиОрганизаций КАК ВзаиморасчетыСРаботникамиОрганизаций
			|ПО Основной.Физлицо = ВзаиморасчетыСРаботникамиОрганизаций.Физлицо 
			|И Основной.ПериодДействия = ВзаиморасчетыСРаботникамиОрганизаций.Период
			|ЛЕВОЕ СОЕДИНЕНИЕ ВТСуммарныйПроцент КАК СуммарныйПроцент
			|ПО Основной.Сотрудник = СуммарныйПроцент.Сотрудник
			|И Основной.ПериодДействия = СуммарныйПроцент.ПериодДействия
			|ЛЕВОЕ СОЕДИНЕНИЕ 
			|(ВЫБРАТЬ
			|	СтатусФизЛица.ФизЛицо КАК ФизЛицо
			|	ИЗ РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ.СрезПоследних(&парамКонецГода, Физлицо В (ВЫБРАТЬ РАЗЛИЧНЫЕ Физлицо ИЗ ВТСотрудникиСДоначислением)) КАК СтатусФизЛица
			|	ГДЕ (СтатусФизЛица.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент))) КАК НеРезиденты
			|ПО Основной.Физлицо = НеРезиденты.ФизЛицо";*/
					/*Запрос.УстановитьПараметр("ПериодОстатковНачало", ПериодОстатковНачало);*/
					/*Запрос.УстановитьПараметр("ПериодОстатковКонец", ПериодОстатковКонец);*/
					/*Запрос.УстановитьПараметр("парамКонецГода", КонецГода(ПериодРегистрации));*/
					/*Запрос.УстановитьПараметр("КонецПериодаРегистрации", ДобавитьМесяц(ПериодРегистрации, 1));*/
					/*Запрос.УстановитьПараметр("Доначисление", Перечисления.СпособыРасчетаОплатыТруда.ДоначислениеПоУправленческомуУчету);*/
					/*Запрос.УстановитьПараметр("Процентом", ПроведениеРасчетов.ПолучитьСписокНачисленийПроцентом());*/
					/*Запрос.ВыполнитьПакет();*/
				}
				if(true/*НеобходимыеДанные.ДоходыОблагаемыеЕСН*/)
				{
					/*ПроведениеРасчетов.ДописатьАлгоритмВЗапрос("ДоходыОблагаемыеСтраховымиВзносамиЕСН", КомментироватьРасчет, Запрос, ТекстЗапроса, , ИмяРегистра);*/
				}
				/*ТекстЗапроса = ТекстЗапроса + "
		|ГДЕ " + ВнешнееУсловие;*/
			}
			/*ТекстЗапроса = ТекстЗапроса + "
	|УПОРЯДОЧИТЬ ПО НомерСтроки";*/
			if(true/*НеобходимаБаза И КомментироватьРасчет*/)
			{
				/*ТекстЗапроса = ТекстЗапроса + "
		|ИТОГИ";*/
				/*ТекстЗапроса = ТекстЗапроса + "
		|	СУММА(РезультатБаза)
		|ПО
		|	НомерСтроки";*/
			}
			/*Запрос.Текст = ТекстЗапроса;*/
			return null;
		}
		//ПолучитьДанныеДляРасчета()
		// Рассчитывает записи из переданного набора записей
		//
		// Параметры:
		//	ИмяРегистра				- имя регистра, чьи записи будут рассчитаны
		//	НаборЗаписейРегистра	- набор записей, которые надо рассчитать
		//	ЗаписиДоходыНДФЛ		- набор записей регистра накопления с доходами НДФЛ
		//							  Передается только для случаев расчета набора записей - начислений
		//	НаборЗаписейРасчетСреднего
		//	ГоловнаяОрганизация
		//	ОбособленноеПодразделение
		//	ТабличнаяЧастьДокумента
		//	ОднократныйРасчетСреднего	- будево. Если Истина, то при расчете выполняется
		//								  однократный расчет среднего в не зависимости от количесвта различных
		//								  категорий видов расчета в наборе записей
		//  ПовторныйРасчет
		//  КатегорияДоначисления
		//  СведенияОДоначислениях
		//  КурсВалютыУпрУчета
		//  МассивИндексыСтрокТабличнойЧасти	- массив с индексами строк табличного поля, для реализации
		//										  расчета по одному сотруднику
		//	Физлицо								- ссылка Справочники.ФизическиеЛица, для реализации
		//										  расчета по одному сотруднику
		//
		// Возвращаемое значение:
		//	Нет.
		//

		public void РассчитатьЗаписиРегистраРасчета(/*ИмяРегистра, 
												НаборЗаписейРегистра, 
												ЗаписиДоходыНДФЛ = Неопределено,
												НаборЗаписейРасчетСреднего = Неопределено,
												ГоловнаяОрганизация = Неопределено,
												ОбособленноеПодразделение = Неопределено,
												ТабличнаяЧастьДокумента = Неопределено,
												ОднократныйРасчетСреднего = Ложь,
												МассивИндексыСтрокТабличнойЧасти = Неопределено,
												Физлицо = Неопределено,
												КомментироватьРасчет = Ложь, ФормаКомментариев = НеОпределено,
												ПовторныйРасчет = Ложь,
												КатегорияДоначисления = Неопределено,
												СведенияОДоначислениях = Неопределено,
												КурсВалютыУпрУчета = Неопределено*/)
		{
			if(true/*НаборЗаписейРегистра.Количество() = 0*/)
			{
			}
			/*// здесь предполагаем, что в наборе записей не может быть записей с разными периодами регистрации
*/
			/*ПериодРегистрации = НаборЗаписейРегистра[0].ПериодРегистрации;*/
			/*Регистратор = НаборЗаписейРегистра.Отбор.Регистратор.Значение;*/
			/*ИмяПВР = Метаданные.РегистрыРасчета[ИмяРегистра].ПланВидовРасчета.Имя;*/
			/*СчитатьСреднийЗаработок = Истина;*/
			if(true/*ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций" или
			ИмяРегистра = "ДополнительныеНачисленияРаботниковОрганизаций" или
			ИмяРегистра = "УдержанияРаботниковОрганизаций" или
			ИмяРегистра = "УправленческиеНачисления" или
			ИмяРегистра = "УправленческиеУдержания"*/)
			{
				/*// получим массив видов расчета из набора записей
*/
				/*ТаблицаВидовРасчета = НаборЗаписейРегистра.Выгрузить();*/
				/*ТаблицаВидовРасчета.Свернуть("ВидРасчета");*/
				/*ВидыРасчетов = ТаблицаВидовРасчета.ВыгрузитьКолонку("ВидРасчета");*/
				/*// Получим максимальное число показателей			
*/
				/*ЗапросНаКоличествоПоказателей = Новый Запрос(
		"ВЫБРАТЬ
		|	ЕСТЬNULL(МАКСИМУМ(НачисленияПоказатели.НомерСтроки),0) КАК КолВоПоказателей
		|ИЗ");*/
				if(true/*ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций"*/)
				{
					/*ЗапросНаКоличествоПоказателей.Текст = ЗапросНаКоличествоПоказателей.Текст + "
		|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК НачисленияПоказатели";*/
				}
				/*ВыборкаКоличестваПоказателей = ЗапросНаКоличествоПоказателей.Выполнить().Выбрать();*/
				/*ВыборкаКоличестваПоказателей.Следующий();*/
				/*КоличествоПоказателей = ВыборкаКоличестваПоказателей.КолВоПоказателей;*/
				/*Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КатегорияРасчета.Код КАК КодКатегорииРасчета,
		|	КатегорияРасчета,"
		+ ?(ИмяПВР = "ОсновныеНачисленияОрганизаций",
		"
		|	ЗачетНормыВремени,
		|	ПериодДействияБазовый,","")
		+ ?(ИмяПВР = "ДополнительныеНачисленияОрганизаций",
		"
		|	ВЫБОР КОГДА КодыДоходаСВычетами.КодДохода ЕСТЬ NULL ТОГДА Ложь ИНАЧЕ Истина КОНЕЦ Как РасчетВычетов,","") + "
		|	ПВР.Ссылка КАК Ссылка1");*/
				if(true/*ИмяПВР = "ОсновныеНачисленияОрганизаций" Или ИмяПВР = "УправленческиеНачисления"*/)
				{
					/*Запрос.Текст = Запрос.Текст + ",
			|	ЗачетОтработанногоВремени";*/
				}
				/*Запрос.Текст = Запрос.Текст + ",
		|	ПВР.СпособРасчета Как СпособРасчета
		|ИЗ	
		|	ПланВидовРасчета."+ИмяПВР + " КАК ПВР";*/
				if(true/*КоличествоПоказателей > 0*/)
				{
					/*Запрос.Текст = Запрос.Текст + "
		|	ЛЕВОЕ СОЕДИНЕНИЕ  ПланВидовРасчета."+ИмяПВР+".Показатели КАК ТЧПоказатели
		|	ПО ПВР.Ссылка = ТЧПоказатели.Ссылка
		|		И (ТЧПоказатели.Показатель.Предопределенный
		|			ИЛИ ТЧПоказатели.Показатель.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Стаж))";*/
				}
				/*Запрос.Текст = Запрос.Текст 
		+ ?(ИмяПВР = "ДополнительныеНачисленияОрганизаций",
		"
		|ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ КодДохода Из РегистрСведений.НДФЛВычетыПоДоходам) Как КодыДоходаСВычетами
		|ПО КодДоходаНДФЛ = КодыДоходаСВычетами.КодДохода","")
		+ "
		|ГДЕ ПВР.Ссылка В(&парамВидыРасчетов)
		|УПОРЯДОЧИТЬ ПО
		|	КатегорияРасчета.Код
		|
		|ИТОГИ ПО КатегорияРасчета";*/
				/*Запрос.УстановитьПараметр("парамВидыРасчетов", ВидыРасчетов);*/
				/*// получаем список категороий и способов расчета
*/
				/*ВыборкаКатегорий = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);*/
				/*БудетДоначислениеПоУпрУчету = Ложь;*/
				/*Запрос.Текст = 
        "ВЫБРАТЬ ПЕРВЫЕ 1
        |   1 КАК Поле1
        |ИЗ
        |   ПланВидовРасчета." + ИмяПВР + " КАК ПВР
        |ГДЕ
        |   ПВР.Ссылка В(&парамВидыРасчетов)
        |   И ПВР.СпособРасчета = &Доначисление";*/
				/*Запрос.УстановитьПараметр("Доначисление", Перечисления.СпособыРасчетаОплатыТруда.ДоначислениеПоУправленческомуУчету);*/
				if(true/*Не Запрос.Выполнить().Пустой()*/)
				{
					/*БудетДоначислениеПоУпрУчету = Истина;*/
				}
				/*// первая запись набора делается с пересчетом Фактического периода действия
*/
				/*ТолькоЗапись = Ложь;*/
				if(true/*ИмяРегистра = "ДополнительныеНачисленияРаботниковОрганизаций"*/)
				{
					/*ЗапросПоВычетам = Новый Запрос;*/
				}
				if(true/*Не(Физлицо = Неопределено)*/)
				{
					/*Физлица = Новый Массив();*/
					/*Физлица.Добавить(Физлицо);*/
				}
				while(true/*ВыборкаКатегорий.Следующий()*/)
				{
					/*// Поддержка способа расчета ДоначислениеПоУправленческомуУчету
*/
					/*// пропустим категории "младше" категории в которой выполняется доначисление
*/
					if(true/*ПовторныйРасчет и КатегорияДоначисления <> Неопределено и ВыборкаКатегорий.КодКатегорииРасчета < КатегорияДоначисления.Код*/)
					{
						/*Продолжить;*/
					}
					/*// Получим структуру необходимых данных для расчетов текущей категории
*/
					/*МассивСпособовРасчета	= Новый Массив;*/
					/*// Массив способов расчета текущий категории
*/
					/*ТаблицаПоказателей		= Новый ТаблицаЗначений;*/
					/*// Массив видов показателей схем мотивации
*/
					/*ТаблицаПоказателей.Колонки.Добавить("Показатель");*/
					/*ТаблицаПоказателей.Колонки.Добавить("ВидСтажа");*/
					/*ТаблицаПоказателей.Колонки.Добавить("ВидСтажаКод");*/
					/*НормаВремени			= Ложь;*/
					/*// Признак необходимости получения нормы времени для видов расчета
*/
					/*ОтработаноВремени		= Ложь;*/
					/*// Признак необходимости получения отработанного времени для видов расчета
*/
					/*РасчетВычетов			= Ложь;*/
					/*// Признак необходимости расчета вычетов к доходам
*/
					/*НеобходимБазовыйПериод	= Ложь;*/
					/*// Признак необходимости базового периода
*/
					/*ВложеннаяВыборка = ВыборкаКатегорий.Выбрать();*/
					while(true/*ВложеннаяВыборка.Следующий()*/)
					{
						/*МассивСпособовРасчета.Добавить(ВложеннаяВыборка.СпособРасчета);*/
						if(true/*ИмяПВР = "ОсновныеНачисленияОрганизаций"*/)
						{
							/*НормаВремени			= НормаВремени ИЛИ ВложеннаяВыборка.ЗачетНормыВремени;*/
							/*ОтработаноВремени		= ОтработаноВремени ИЛИ ВложеннаяВыборка.ЗачетОтработанногоВремени ИЛИ ВложеннаяВыборка.ЗачетНормыВремени;*/
							/*НеобходимБазовыйПериод	= НеобходимБазовыйПериод ИЛИ (НЕ ВложеннаяВыборка.ПериодДействияБазовый);*/
						}
						if(true/*ИмяПВР = "ДополнительныеНачисленияОрганизаций"*/)
						{
							/*РасчетВычетов = РасчетВычетов ИЛИ ВложеннаяВыборка.РасчетВычетов;*/
						}
						if(true/*ИмяПВР = "УправленческиеНачисления"*/)
						{
							/*ОтработаноВремени = ОтработаноВремени ИЛИ ВложеннаяВыборка.ЗачетОтработанногоВремени;*/
						}
					}
					/*;
			
			НеобходимыеДанные = ПолучитьСтруктуруНеобходимыхДанных(МассивСпособовРасчета, ТаблицаПоказателей);*/
					/*НеобходимыеДанные.НормаВремени			= НеобходимыеДанные.НормаВремени ИЛИ НормаВремени ИЛИ (НеобходимыеДанные.База И (ИмяПВР = "ОсновныеНачисленияОрганизаций" Или ИмяПВР = "УправленческиеНачисления"));*/
					/*НеобходимыеДанные.ОтработаноВремени		= НеобходимыеДанные.ОтработаноВремени ИЛИ ОтработаноВремени ИЛИ (НеобходимыеДанные.База И (ИмяПВР = "ОсновныеНачисленияОрганизаций" Или ИмяПВР = "УправленческиеНачисления"));*/
					/*НеобходимыеДанные.ВычетыКДоходамНДФЛ	= РасчетВычетов;*/
					if(true/*Не НеобходимыеДанные.НакопленныеДанныеПоДокументуОснованию*/)
					{
						/*НеобходимыеДанные.НакопленныеДанныеПоДокументуОснованию = ИмяРегистра = "УдержанияРаботниковОрганизаций" И (НеобходимыеДанные.База Или НеобходимыеДанные.ДоходыОблагаемыеЕСН);*/
					}
					if(true/*ИмяПВР = "ОсновныеНачисленияОрганизаций" Или ИмяПВР = "УправленческиеНачисления"*/)
					{
						/*НеобходимыеДанные.НормаВремениЗаМесяц = Истина;*/
						/*// для предотвращения ложных сообщений об отсутствии графика
*/
					}
					/*// записываем набор перед расчетом каждой категории начислений
*/
					if(true/*ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций" или ИмяРегистра = "ДополнительныеНачисленияРаботниковОрганизаций"*/)
					{
						/*НаборЗаписейРегистра.Записать(Истина, ТолькоЗапись, Истина, Ложь);*/
					}
					/*ТолькоЗапись = Истина;*/
					/*// если нужны данные для расчета среднего заработка
*/
					if(true/*СчитатьСреднийЗаработок И (НеобходимыеДанные.СреднийЗаработок ИЛИ НеобходимыеДанные.СреднийЗаработокОтпуска) И (НаборЗаписейРасчетСреднего <> Неопределено)*/)
					{
						/*СформироватьИЗаписатьДанныеРасчетаСреднего(ИмяРегистра, Регистратор, НаборЗаписейРасчетСреднего, КомментироватьРасчет);*/
						if(true/*ОднократныйРасчетСреднего*/)
						{
							/*СчитатьСреднийЗаработок = Ложь;*/
						}
					}
					/*ИсходныеДанные = ПолучитьДанныеДляРасчета(ИмяРегистра, ВыборкаКатегорий.КатегорияРасчета, НеобходимыеДанные, Регистратор, ГоловнаяОрганизация, ПериодРегистрации, , Физлица, КомментироватьРасчет);*/
					/*// Поддержка способа расчета ДоначислениеПоУправленческомуУчету
*/
					/*// если необходимо прогнозировать НДФЛ
*/
					if(true/*НеобходимыеДанные.ДанныеДляПрогнозаНДФЛ*/)
					{
						if(true/*не ПовторныйРасчет*/)
						{
							/*// Составим текст запроса для выбора списка физлиц, по которым надо считать НДФЛ
*/
							/*СписокФизлицТекст = 
					"ВЫБРАТЬ РАЗЛИЧНЫЕ
					|	Работники.ФизЛицо КАК Физлицо
					|ИЗ
					|	Документ.НачислениеЗарплатыРаботникамОрганизаций.НДФЛ КАК Работники
					|ГДЕ
					|	Работники.Ссылка = &парамРегистратор";*/
							/*ДанныеДляПрогнозаНДФЛ = ПроведениеРасчетовДополнительный.ДанныеДляПрогнозаНДФЛ(ПериодРегистрации, ГоловнаяОрганизация, ОбособленноеПодразделение, Регистратор, СписокФизЛицТекст);*/
						}
						/*КатегорияДоначисления = ВыборкаКатегорий.КатегорияРасчета;*/
					}
					/*РассчитатьЗаписиНабора(ИсходныеДанные, НаборЗаписейРегистра, НеобходимыеДанные, ЗаписиДоходыНДФЛ, ГоловнаяОрганизация, ОбособленноеПодразделение, ТабличнаяЧастьДокумента, ДанныеДляПрогнозаНДФЛ, СведенияОДоначислениях, КурсВалютыУпрУчета, ПовторныйРасчет, МассивИндексыСтрокТабличнойЧасти, КомментироватьРасчет, ФормаКомментариев);*/
					if(true/*БудетДоначислениеПоУпрУчету И ЗаписиДоходыНДФЛ <> НеОпределено*/)
					{
						/*// запись набора записей доходов НДФЛ
*/
						/*// необходимо для расчета ДоначислениеПоУправленческомуУчету
*/
						/*ЗаписиДоходыНДФЛ.Записать();*/
					}
				}
				/*;;*/
			}
		}
		// РассчитатьЗаписиРегистраРасчета
		// Перерассчитывает записи из переданного набора записей
		//
		// Параметры:
		//  ИмяРегистра			 - имя регистра, чьи записи будут рассчитаны
		//  НаборЗаписейРегистра - набор записей, которые надо рассчитать
		//	Физлица - массив физлиц для перерасчета
		//	ЗаписиДоходыНДФЛ - набор записей доходов НДФЛ
		//	НаборЗаписейРасчетСреднего - набор записей расчета среднего заработка
		//	Организация - организацция
		//	ТабличнаяЧастьДокумента - табличная часть документа по которой ведется перерасчет
		//
		// Возвращаемое значение:
		//  Нет.
		//

		public void ПереРассчитатьЗаписиРегистраРасчета(/*	ИмяРегистра, 
												НаборЗаписейРегистра, 
												Физлица = Неопределено, 
												ЗаписиДоходыНДФЛ = Неопределено,
												НаборЗаписейРасчетСреднего = Неопределено,
												ГоловнаяОрганизация = Неопределено,
												ОбособленноеПодразделение = Неопределено,
												ТабличнаяЧастьДокумента = Неопределено,
												ОднократныйРасчетСреднего = Ложь*/)
		{
			if(true/*НаборЗаписейРегистра.Количество() = 0*/)
			{
			}
			/*// здесь предполагаем, что в наборе записей не может быть записей с разными периодами регистрации
*/
			/*ПериодРегистрации = НаборЗаписейРегистра[0].ПериодРегистрации;*/
			/*Регистратор = НаборЗаписейРегистра.Отбор.Регистратор.Значение;*/
			/*ИмяПВР = Метаданные.РегистрыРасчета[ИмяРегистра].ПланВидовРасчета.Имя;*/
			/*СчитатьСреднийЗаработок = Истина;*/
			/*// Получим максимальное число показателей			
*/
			/*ЗапросНаКоличествоПоказателей = Новый Запрос(
	"ВЫБРАТЬ
	|	МАКСИМУМ(Показатели.НомерСтроки) КАК КолВоПоказателей
	|ИЗ
	|	ПланВидовРасчета."+ИмяПВР+".Показатели КАК Показатели");*/
			/*ВыборкаКоличестваПоказателей = ЗапросНаКоличествоПоказателей.Выполнить().Выбрать();*/
			/*ВыборкаКоличестваПоказателей.Следующий();*/
			/*КоличествоПоказателей = ВыборкаКоличестваПоказателей.КолВоПоказателей;*/
			if(true/*КоличествоПоказателей = Null*/)
			{
				/*КоличествоПоказателей = 0;*/
			}
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("парамРегистратор", Регистратор);*/
			/*Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;*/
			/*// таблица ФизлицаДляПерерасчета
*/
			/*// Список физлиц по которым необходимо выполнить перерасчет
*/
			/*// Поля:
*/
			/*//		ФизЛицо
*/
			if(true/*Физлица = Неопределено*/)
			{
				/*// Описание:
*/
				/*// Получает список неповторяющихся физлиц по которым есть записи
*/
				/*// перерасчета в одной из таблиц перерасчета - по основным или дополнительным начислениям
*/
				/*//
*/
				/*ФизлицаДляПерерасчетаТекст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Перерасчет.ФизЛицо КАК Физлицо
		|ПОМЕСТИТЬ ВТФизлица
		|ИЗ
		|	(ВЫБРАТЬ
		|		Перерасчет.ФизЛицо КАК ФизЛицо
		|	ИЗ
		|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ПерерасчетОсновныхНачислений КАК Перерасчет
		|	ГДЕ
		|		Перерасчет.ОбъектПерерасчета = &парамРегистратор
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Перерасчет.ФизЛицо
		|	ИЗ
		|		РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций.ПерерасчетДополнительныхНачислений КАК Перерасчет
		|	ГДЕ
		|		Перерасчет.ОбъектПерерасчета = &парамРегистратор) КАК Перерасчет
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Физлицо";*/
			}
			/*Запрос.Текст = ФизлицаДляПерерасчетаТекст;*/
			/*Запрос.Выполнить();*/
			/*// соответствие категории начисления и массива сособов расчета
*/
			/*// для записей, которые будут перерассчитываться
*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ";*/
			/*Запрос.Текст = Запрос.Текст 
	+ ?(ИмяПВР = "ОсновныеНачисленияОрганизаций","
	|	ВидРасчета.ПериодДействияБазовый КАК ПериодДействияБазовый,
	|	ВидРасчета.ЗачетНормыВремени КАК ЗачетНормыВремени,
	|	ВидРасчета.ЗачетОтработанногоВремени КАК ЗачетОтработанногоВремени,","")
	+ ?(ИмяПВР = "ДополнительныеНачисленияОрганизаций",
	"
	|	ВЫБОР КОГДА КодыДоходаСВычетами.КодДохода ЕСТЬ NULL ТОГДА Ложь ИНАЧЕ Истина КОНЕЦ Как РасчетВычетов,","")
	+ "
	|   "+ИмяРегистра+".ВидРасчета.КатегорияРасчета Как КатегорияРасчета,
	|	"+ИмяРегистра+".ВидРасчета.СпособРасчета Как СпособРасчета
	|ИЗ
	|	РегистрРасчета." + ИмяРегистра + " Как "+ ИмяРегистра + "
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизлица Как ФизлицаДляПерерасчета
	|		ПО ФизлицаДляПерерасчета.ФизЛицо = "+ИмяРегистра+".ФизЛицо"
	+ ?(ИмяПВР = "ДополнительныеНачисленияОрганизаций",
	"
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ КодДохода Из РегистрСведений.НДФЛВычетыПоДоходам) Как КодыДоходаСВычетами
	|		ПО "+ИмяРегистра+".ВидРасчета.КодДоходаНДФЛ = КодыДоходаСВычетами.КодДохода","")
    + ?(КоличествоПоказателей > 0,
	"
	|		ЛЕВОЕ СОЕДИНЕНИЕ  ПланВидовРасчета."+ИмяПВР+".Показатели КАК ТЧПоказатели
	|		ПО "+ИмяРегистра+".ВидРасчета = ТЧПоказатели.Ссылка","") 
	+ "
	|ГДЕ Регистратор = &парамРегистратор
	|УПОРЯДОЧИТЬ ПО
	|	"+ИмяРегистра+".ВидРасчета.КатегорияРасчета.Код
	|ИТОГИ ПО "+ИмяРегистра+".ВидРасчета.КатегорияРасчета";*/
			/*ВыборкаКатегорий = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);*/
			/*// соответствие категорий начислений и массива способов расчета
*/
			/*КатегорииСпособы = Новый Соответствие;*/
			while(true/*ВыборкаКатегорий.Следующий()*/)
			{
				/*// Получим структуру необходимых данных для расчетов текущей категории
*/
				/*МассивСпособовРасчета	= Новый Массив;*/
				/*// Массив способов расчета текущий категории
*/
				/*ТаблицаПоказателей		= Новый ТаблицаЗначений;*/
				/*// Массив видов показателей схем мотивации
*/
				/*ТаблицаПоказателей.Колонки.Добавить("Показатель");*/
				/*ТаблицаПоказателей.Колонки.Добавить("ВидСтажа");*/
				/*ТаблицаПоказателей.Колонки.Добавить("ВидСтажаКод");*/
				/*НормаВремени			= Ложь;*/
				/*// Признак необходимости получения нормы времени для видов расчета
*/
				/*ОтработаноВремени		= Ложь;*/
				/*// Признак необходимости получения отработанного времени для видов расчета
*/
				/*РасчетВычетов			= Ложь;*/
				/*// Признак необходимости расчета вычетов к доходам
*/
				/*НеобходимБазовыйПериод	= Ложь;*/
				/*// Признак необходимости базового периода
*/
				/*ВложеннаяВыборка = ВыборкаКатегорий.Выбрать();*/
				while(true/*ВложеннаяВыборка.Следующий()*/)
				{
					/*МассивСпособовРасчета.Добавить(ВложеннаяВыборка.СпособРасчета);*/
					if(true/*ИмяПВР = "ОсновныеНачисленияОрганизаций"*/)
					{
						/*НормаВремени			= НормаВремени ИЛИ ВложеннаяВыборка.ЗачетНормыВремени;*/
						/*ОтработаноВремени		= ОтработаноВремени ИЛИ ВложеннаяВыборка.ЗачетОтработанногоВремени ИЛИ ВложеннаяВыборка.ЗачетНормыВремени;*/
						/*НеобходимБазовыйПериод	= НеобходимБазовыйПериод ИЛИ (НЕ ВложеннаяВыборка.ПериодДействияБазовый);*/
					}
					if(true/*ИмяПВР = "ДополнительныеНачисленияОрганизаций"*/)
					{
						/*РасчетВычетов = РасчетВычетов ИЛИ ВложеннаяВыборка.РасчетВычетов;*/
					}
				}
				/*;
		
		НеобходимыеДанные = ПолучитьСтруктуруНеобходимыхДанных(МассивСпособовРасчета, ТаблицаПоказателей);*/
				/*НеобходимыеДанные.НормаВремени			= НеобходимыеДанные.НормаВремени ИЛИ НормаВремени ИЛИ (НеобходимыеДанные.База И (ИмяПВР = "ОсновныеНачисленияОрганизаций" Или ИмяПВР = "УправленческиеНачисления"));*/
				/*НеобходимыеДанные.ОтработаноВремени		= НеобходимыеДанные.ОтработаноВремени ИЛИ ОтработаноВремени ИЛИ (НеобходимыеДанные.База И (ИмяПВР = "ОсновныеНачисленияОрганизаций" Или ИмяПВР = "УправленческиеНачисления"));*/
				/*НеобходимыеДанные.ВычетыКДоходамНДФЛ	= РасчетВычетов;*/
				if(true/*НеобходимыеДанные.База*/)
				{
					/*НеобходимыеДанные.НормаВремениЗаМесяц	= НеобходимыеДанные.НормаВремениЗаМесяц ИЛИ НеобходимБазовыйПериод;*/
				}
				if(true/*ИмяРегистра = "ОсновныеНачисленияОрганизаций" Или ИмяРегистра = "УправленческиеНачисления"*/)
				{
					/*НеобходимыеДанные.НормаВремениЗаМесяц = Истина;*/
					/*// для предотвращения ложных сообщений об отсутствии графика
*/
				}
				if(true/*Не НеобходимыеДанные.НакопленныеДанныеПоДокументуОснованию*/)
				{
					/*НеобходимыеДанные.НакопленныеДанныеПоДокументуОснованию = ИмяРегистра = "УдержанияРаботниковОрганизаций" И (НеобходимыеДанные.База Или НеобходимыеДанные.ДоходыОблагаемыеЕСН);*/
				}
				/*// если нужны данные для расчета среднего заработка
*/
				if(true/*СчитатьСреднийЗаработок И (НеобходимыеДанные.СреднийЗаработок ИЛИ НеобходимыеДанные.СреднийЗаработокОтпуска) И (НаборЗаписейРасчетСреднего <> Неопределено)*/)
				{
					/*СформироватьИЗаписатьДанныеРасчетаСреднего(ИмяРегистра, Регистратор, НаборЗаписейРасчетСреднего);*/
					if(true/*ОднократныйРасчетСреднего*/)
					{
						/*СчитатьСреднийЗаработок = Ложь;*/
					}
				}
				/*ИсходныеДанные = ПолучитьДанныеДляРасчета(ИмяРегистра, ВыборкаКатегорий.КатегорияРасчета, НеобходимыеДанные, Регистратор, ГоловнаяОрганизация, ПериодРегистрации, Истина, Физлица);*/
				/*// Курс результата передаем равным 1, т.к. считаем, что перерасчет доступен только для реглучета
*/
				/*РассчитатьЗаписиНабора(ИсходныеДанные, НаборЗаписейРегистра, НеобходимыеДанные, ЗаписиДоходыНДФЛ, ГоловнаяОрганизация, ОбособленноеПодразделение, ТабличнаяЧастьДокумента);*/
				/*// записываем набор после расчета каждой очередной категории
*/
				/*НаборЗаписейРегистра.Записать(Истина, Истина);*/
			}
			/*;;*/
		}
		// ПерерассчитатьЗаписиРегистраРасчета()
		////////////////////////////////////////////////////////////////////////////////
		// ДАТЫ ИЗМЕНЕНИЯ ЗАКОНОДАТЕЛЬСТВА
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ РАСЧЕТА ДОКУМЕНТОВ

		public object СтрокаСвойствИзСтрокиДокументаДляОсновныхНачислений(/**/)
		{
			/*СтрокаСвойствИзСтрокиДокумента = "ПериодДействияНачало,ПериодДействияКонец,ВидРасчета,Сторно,Результат,ОплаченоДнейЧасов,ВидУчетаВремени," 
									+ "Сотрудник,ПодразделениеОрганизации,Показатель1,Показатель2,Показатель3,Показатель4,Показатель5,Показатель6,ДополнительныеДанные,ГрафикРаботы,ГрафикРаботыНорма,"
									+ "ДатаНачалаСобытия,Авторасчет,ВариантОбработкиЗаписиПриОтраженииВРеглУчете,"
									+ "ПериодРасчетаСреднегоЗаработкаНачало,ПериодРасчетаСреднегоЗаработкаОкончание,СторнируемыйДокумент,РасчетнаяБазаЗаЕдиницуНормыВремени";*/
			return null;
		}
		//СтрокаСвойствИзСтрокиДокументаДляОсновныхНачислений()

		public object ЗаписыватьДвиженияПриРасчетеДокументаСреднегоЗаработка(/*РассчитываемыеТаблицы, РежимПерерасчета = Ложь*/)
		{
			return null;
		}
		// ЗаписыватьДвиженияПриРасчетеДокументаСреднегоЗаработка()

		public void ВыполнитьДополнительныеДействияПриРасчетеДокументаСреднегоЗаработка(/*ДокументОбъект*/)
		{
			/*Ссылка = ДокументОбъект.Ссылка;*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.Регистратор ССЫЛКА Документ.НачислениеПоБольничномуЛисту
	|			ТОГДА ВЫБОР
	|					КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ВидРасчетаЗаСчетРаботодателя
	|						ТОГДА ВЫБОР
	|								КОГДА ОсновныеНачисленияРаботниковОрганизаций.Сторно
	|										И (НЕ ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни)
	|										И ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни
	|										И ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент КАК Документ.НачислениеПоБольничномуЛисту).ПерерассчитываемыйДокумент = ЗНАЧЕНИЕ(Документ.НачислениеПоБольничномуЛисту.ПустаяСсылка)
	|									ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйЗаСчетРаботодателяНовыйСтраховойСлучай)
	|								КОГДА (НЕ ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни)
	|										И ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ПерерассчитываемыйДокумент = ЗНАЧЕНИЕ(Документ.НачислениеПоБольничномуЛисту.ПустаяСсылка)
	|									ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйЗаСчетРаботодателяНовыйСтраховойСлучай)
	|								ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйЗаСчетРаботодателя)
	|							КОНЕЦ
	|					КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ПустаяСсылка)
	|					КОГДА ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ПериодРегистрации < &ДатаНачалаРеформыСоцСтрахования
	|							И ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ПособиеОтражаетсяВРеглУчетеТекущимДокументом
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
	|					КОГДА ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоБеременностиИРодам)
	|						ТОГДА ВЫБОР
	|								КОГДА ОсновныеНачисленияРаботниковОрганизаций.Сторно
	|										И (НЕ ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни)
	|										И ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни
	|										И ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент КАК Документ.НачислениеПоБольничномуЛисту).ПерерассчитываемыйДокумент = ЗНАЧЕНИЕ(Документ.НачислениеПоБольничномуЛисту.ПустаяСсылка)
	|									ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай)
	|								КОГДА (НЕ ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни)
	|										И ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ПерерассчитываемыйДокумент = ЗНАЧЕНИЕ(Документ.НачислениеПоБольничномуЛисту.ПустаяСсылка)
	|									ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай)
	|								ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком)
	|							КОНЕЦ
	|					КОГДА ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ТравмаНаПроизводстве)
	|						ТОГДА ВЫБОР
	|								КОГДА ОсновныеНачисленияРаботниковОрганизаций.Сторно
	|										И (НЕ ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни)
	|										И ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни
	|										И ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент КАК Документ.НачислениеПоБольничномуЛисту).ПерерассчитываемыйДокумент = ЗНАЧЕНИЕ(Документ.НачислениеПоБольничномуЛисту.ПустаяСсылка)
	|									ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай)
	|								КОГДА (НЕ ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни)
	|										И ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ПерерассчитываемыйДокумент = ЗНАЧЕНИЕ(Документ.НачислениеПоБольничномуЛисту.ПустаяСсылка)
	|									ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай)
	|								ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве)
	|							КОНЕЦ
	|					КОГДА ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ПричинаНетрудоспособности В (ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ТравмаВБыту), ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ОбщееЗаболевание))
	|						ТОГДА ВЫБОР
	|								КОГДА ОсновныеНачисленияРаботниковОрганизаций.Сторно
	|										И (НЕ ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни)
	|										И ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни
	|										И ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент КАК Документ.НачислениеПоБольничномуЛисту).ПерерассчитываемыйДокумент = ЗНАЧЕНИЕ(Документ.НачислениеПоБольничномуЛисту.ПустаяСсылка)
	|									ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай)
	|								КОГДА (НЕ ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни)
	|										И ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ПерерассчитываемыйДокумент = ЗНАЧЕНИЕ(Документ.НачислениеПоБольничномуЛисту.ПустаяСсылка)
	|									ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай)
	|								ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание)
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ОсновныеНачисленияРаботниковОрганизаций.Сторно
	|									И (НЕ ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни)
	|									И ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни
	|									И ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент КАК Документ.НачислениеПоБольничномуЛисту).ПерерассчитываемыйДокумент = ЗНАЧЕНИЕ(Документ.НачислениеПоБольничномуЛисту.ПустаяСсылка)
	|								ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай)
	|							КОГДА (НЕ ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни)
	|									И ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ПерерассчитываемыйДокумент = ЗНАЧЕНИЕ(Документ.НачислениеПоБольничномуЛисту.ПустаяСсылка)
	|								ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай)
	|							ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий)
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ПустаяСсылка)
	|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком)
	|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий)
	|			КОНЕЦ
	|	КОНЕЦ КАК ВариантОбработкиЗаписиПриОтраженииВРеглУчете
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|ГДЕ
	|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор = &Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";*/
			/*Запрос.УстановитьПараметр("Регистратор", Ссылка);*/
			/*Запрос.УстановитьПараметр("ДатаНачалаРеформыСоцСтрахования", ПроведениеРасчетов.ДатаНачалаРеформыСоцСтрахования());*/
			/*ТаблицаКорректировки = Запрос.Выполнить().Выгрузить();*/
			/*НаборОсновныеНачисления = РегистрыРасчета.ОсновныеНачисленияРаботниковОрганизаций.СоздатьНаборЗаписей();*/
			/*НаборОсновныеНачисления.Отбор.Регистратор.Значение = Ссылка;*/
			/*НаборОсновныеНачисления.Прочитать();*/
			/*НаборОсновныеНачисления.Записать(Истина, Истина, Ложь, Ложь);*/
		}
		////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПИСКОВ СПОСОБОВ РАСЧЕТА

		public object ДополнитьСписокОсновныхВариантовНачисленийОрганизации(/*СписокСпособов*/)
		{
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ДоначислениеПоУправленческомуУчету);*/
			return null;
		}
		// ДополнитьСписокОсновныхВариантовНачисленийОрганизации()
		// Возвращает список регламентированных алгоритмов начислений
		//
		// Параметры
		//  нет
		//
		// Возвращаемое значение:
		//   Список значений, содержащий подходящий перечень значений перечисления СпособыРасчетаОплатыТруда
		//

		public object ПолучитьСписокДополнительныхВариантовНачислений(/**/)
		{
			/*СписокСпособов = Новый СписокЗначений;*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ФиксированнойСуммой);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.Процентом);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПроцентомОтОблагаемыхЕСННачислений);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ОтСтажаПроцентом);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ДоначислениеПоУправленческомуУчету);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоДоговоруФиксированнойСуммой);*/
			return null;
		}
		// ПолучитьСписокДополнительныхВариантовНачислений()
		// Возвращает список алгоритмов начислений надбавок
		//
		// Параметры
		//  нет
		//
		// Возвращаемое значение:
		//   Список значений, содержащий подходящий перечень значений перечисления СпособыРасчетаОплатыТруда
		//

		public object ПолучитьСписокВариантовНадбавок(/**/)
		{
			/*СписокСпособов = Новый СписокЗначений;*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ОтСтажаПоМесячнойТарифнойСтавкеПоДням);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ОтСтажаПоМесячнойТарифнойСтавкеПоЧасам);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ОтСтажаПоДневнойТарифнойСтавке);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ОтСтажаПоЧасовойТарифнойСтавке);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ОтСтажаПроцентом);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.Процентом);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПроизвольнаяФормула);*/
			return null;
		}
		// ПолучитьСписокВариантовНадбавок()
		// Возвращает список алгоритмов начислений, не требующих указания валюты начислений
		//
		// Параметры
		//  нет
		//
		// Возвращаемое значение:
		//   Список значений, содержащий подходящий перечень значений перечисления СпособыРасчетаОплатыТруда
		//

		public object ПолучитьСписокСпособовРасчетаНеТребующихУказанияВалюты(/**/)
		{
			/*СписокСпособов = Новый СписокЗначений;*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ДоначислениеПоУправленческомуУчету);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ДоплатаЗаВечерниеЧасы);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ДоплатаЗаНочныеЧасы);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработка);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработкаФСС);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо3Лет);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработку);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.Процентом);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПроцентомОтОблагаемыхЕСННачислений);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.НулеваяСумма);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.СдельныйЗаработок);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистВПрожиточныхМинимумах);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистПроцентом);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистПроцентомДоПредела);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистФиксСуммойДоПредела);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.СевернаяНадбавка);*/
			/*СписокСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ОтСтажаПроцентом);*/
			return null;
		}
		// Возвращает список видов государственных единовременных пособий за счет ФСС
		//
		// Параметры
		//  нет
		//
		// Возвращаемое значение:
		//   Список значений, содержащий подходящий перечень значений перечисления РазмерыГосударственныхПособий
		//

		public object ПолучитьСписокЕдиновременныхПособийЗаСчетФСС(/**/)
		{
			/*СписокПособий = Новый СписокЗначений;*/
			/*СписокПособий.Добавить(Перечисления.РазмерыГосударственныхПособий.ПриРожденииРебенка);*/
			/*СписокПособий.Добавить(Перечисления.РазмерыГосударственныхПособий.ПриПостановкеНаУчетВРанниеСрокиБеременности);*/
			/*СписокПособий.Добавить(Перечисления.РазмерыГосударственныхПособий.ВСвязиСоСмертью);*/
			/*СписокПособий.Добавить(Перечисления.РазмерыГосударственныхПособий.ПриУсыновленииРебенка);*/
			return null;
		}
		// В зависимости от даты начала события предлагаем для выбора разные наборы составляющих
		//
		// Параметры
		//  ДатаНачалаСобытия - дата, дата события, с которым связана выплата среднего заработка
		//
		// Возвращаемое значение:
		//   Список значений, элементы которого представляют собой предопредеелнные в.р. из ПВР СреднийЗаработок
		//

		public object ПолучитьПереченьСоставляющихСреднегоЗаработка(/*ЭтоПорядок2007года*/)
		{
			/*СписокВыбора = Новый СписокЗначений;*/
			if(true/*ЭтоПорядок2007года*/)
			{
				/*СписокВыбора.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку);*/
				/*СписокВыбора.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиям);*/
				/*СписокВыбора.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиям);*/
				/*СписокВыбора.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремии);*/
				/*СписокВыбора.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремии);*/
			}
			return null;
		}
		// ПолучитьПереченьСоставляющихСреднего()
		// рассчитываем сумму за работу в документах сдельной выработки
		//
		// Параметры
		//  ТекущиеДанные - данные строки т.ч. Выработка
		//  РассчитыватьСуммуЗаРаботуВВалютеРасценки - булево, флажок пересчета суммы в валюте расценки
		//

		public void РассчитатьСуммуЗаРаботу(/*ОтражатьВБухгалтерскомУчете, ОтражатьВУправленческомУчете, ТекущиеДанные, Дата, ВалютаРегламентированногоУчета, ВалютаУпрУчета, КурсВалютыУпрУчета, КратностьВалютыУпрУчета, РассчитыватьСуммуЗаРаботуВВалютеРасценки = Истина*/)
		{
			if(true/*РассчитыватьСуммуЗаРаботуВВалютеРасценки*/)
			{
				/*ТекущиеДанные.СуммаЗаРаботуВВалютеРасценки = ТекущиеДанные.Расценка * ТекущиеДанные.Количество;*/
			}
			if(true/*ТекущиеДанные.Валюта = ВалютаРегламентированногоУчета*/)
			{
				/*КурсВылютыРасценки = 1;*/
				/*КратностьВылютыРасценки = 1;*/
			}
			if(true/*ОтражатьВУправленческомУчете*/)
			{
				/*ТекущиеДанные.Сумма = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(ТекущиеДанные.СуммаЗаРаботуВВалютеРасценки,ТекущиеДанные.Валюта,ВалютаУпрУчета,
								КурсВылютыРасценки, КурсВалютыУпрУчета, КратностьВылютыРасценки, КратностьВалютыУпрУчета);*/
			}
			if(true/*ОтражатьВБухгалтерскомУчете*/)
			{
				/*ТекущиеДанные.СуммаРегл = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(ТекущиеДанные.СуммаЗаРаботуВВалютеРасценки,ТекущиеДанные.Валюта,ВалютаРегламентированногоУчета,
								КурсВылютыРасценки, 1, КратностьВылютыРасценки, 1);*/
			}
		}
		// РассчитатьСуммуЗаРаботу()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ И ФУНКЦИИ РАБОТЫ С ВИДАМИ РАСЧЕТА
		// Функция определяет процента оплаты БЛ в зависимости от стажа работника
		//
		// Параметры:
		//  Дата - Дата, обычно текущая дата
		//  ДатаНачала - Дата, дата на которую формируется стаж - дата начала события
		//  Физлицо - Справочник.ФизическиеЛица, физ. лицо для которого определяется стаж
		//  Организация - Справочник.Организации, организация (головная), где работает физлицо.
		//
		// Возвращаемое значение:
		//  число - процент оплаты Больничного листа
		//

		public object ЗаполнитьПроцентОплатыОтСтажа(/*Дата, ДатаНачала, Физлицо, Организация*/)
		{
			if(true/*ДатаНачала >= ПроведениеРасчетовДополнительный.ПолучитьДатуВступленияВСилуИзмененийПоСоциальнымПособиям2006()*/)
			{
				/*Запрос = Новый Запрос;*/
				/*ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаАктуальности
		|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостоянияЗавершения
		|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния
		|	КОНЕЦ КАК ПричинаИзмененияСостояния
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|		&ДатаАктуальности,
		|		Сотрудник.Физлицо = &Физлицо
		|			И Организация = &ГоловнаяОрганизация
		|			И Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК РаботникиОрганизацийСрезПоследних
		|ГДЕ
		|	ВЫБОР
		|			КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаАктуальности
		|					И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостоянияЗавершения
		|			ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния
		|		КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)";*/
				/*Запрос.Текст = ТекстЗапроса;*/
				/*Запрос.УстановитьПараметр("ДатаАктуальности",			ДатаНачала);*/
				/*Запрос.УстановитьПараметр("Физлицо",					Физлицо);*/
				/*Запрос.УстановитьПараметр("ГоловнаяОрганизация",		Организация);*/
				/*УжеНеРаботает = Запрос.Выполнить().Пустой();*/
				/*// в рег-ре РаботникиОрганизаций нет других записей, кроме как об увольнении
*/
			}
			if(true/*УжеНеРаботает*/)
			{
			}
			return null;
		}

		public object ПолучитьВидСтажаПоУмолчаниюДляБольничногоЛиста(/*ДатаНачала*/)
		{
			return null;
		}
		//ПолучитьВидСтажаПоУмолчаниюДляБольничногоЛиста()
		///////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ И ФУНКЦИИ ПЛАНОВ ВИДОВ РАСЧЕТА

		public object ПроверитьОтражениеВУчетеВидаРасчета(/*ВидРасчета, Отказ, ОбработкаКомментариев*/)
		{
			/*//Определяется в конкретной конфигурации	
*/
			return null;
		}
		// определяет, является ли этот вид расчета одним из видов начислений
		//
		// Параметры
		//  МетаданныеВидаРасчета - описание вида расчета как метаданного
		//
		// Возвращаемое значение:
		//   булево
		//

		public object ВидРасчетаЯвляетсяНачислением(/*МетаданныеВидаРасчета*/)
		{
			return null;
		}
		// ВидРасчетаЯвляетсяНачислением()
		// возвращает текст запроса
		//
		// Параметры
		//	нет
		//
		// Возвращаемое значение:
		//	строка
		//

		public object ПолучитьТекстОписанияБазовыхНачислений(/*МетаданныеВидаРасчета*/)
		{
			if(true/*МетаданныеВидаРасчета = Метаданные.ПланыВидовРасчета.УправленческиеНачисления*/)
			{
			}
			return null;
		}
		// ПолучитьТекстОписанияБазовыхНачислений()

		public object ЕстьДоначисление(/*ВидРасчета*/)
		{
			/*ЕстьРеквизитСпособРасчета = ВидРасчета.Метаданные().Реквизиты.Найти("СпособРасчета") <> Неопределено;*/
			return null;
		}

		public void ПроверитьНастройкуВидаРасчета(/*ВидРасчета, Отказ, ОбработкаКомментариев*/)
		{
			if(true/*ВидРасчета.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ДоначислениеПоУправленческомуУчету*/)
			{
				/*ТекстЗапроса =
		"ВЫБРАТЬ
		|	МАКСИМУМ(ОсновныеНачисленияОрганизаций.КатегорияРасчета.Код) КАК КатегорияРасчетаКод
		|ИЗ
		|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
		|ГДЕ
		|	ОсновныеНачисленияОрганизаций.СпособРасчета <> ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоначислениеПоУправленческомуУчету)";*/
				/*Запрос = Новый Запрос(ТекстЗапроса);*/
				/*Выборка = Запрос.Выполнить().Выбрать();*/
				/*КатегорияРасчетаКод = 0;*/
				if(true/*Выборка.Следующий()*/)
				{
					/*КатегорияРасчетаКод = Выборка.КатегорияРасчетаКод;*/
				}
				if(true/*ВидРасчета.КатегорияРасчета.Код <= КатегорияРасчетаКод*/)
				{
					/*ОбработкаКомментариев.ДобавитьСообщение("Необходимо задать более высокую очередность расчета!", Перечисления.ВидыСообщений.Ошибка);*/
					/*Отказ = Истина;*/
				}
			}
		}
		//ПроверитьНастройкуВидаРасчета
		////////////////////////////////////////////////////////////////////////////////
		// ОБСЛУЖИВАНИЕ ПЕРЕРАСЧЕТОВ
		//

		public void ДополнитьТекстЗапросаПерерасчетыВЗаполнениеПлановыхНачислений(/*ТекстЗапроса*/)
		{
			/*// в этой конфигурации текст запроса не дополняется
*/
		}
		// Функция формирует текст запроса для получения временных таблиц
		// прочих документов к перерасчету

		public object ПолучитьТекстЗапросаДокументыКПерерасчетуДополнительно(/*ТекстПервыхЗаписей*/)
		{
			return null;
		}
		// Процедура дополняет итоговый текст запроса получения списка документов к перерасчету

		public void ДополнитьТекстЗапросаДокументыКПерерасчету(/*ТекстЗапроса*/)
		{
			/*// в этой конфигурации текст запроса не дополняется
*/
		}
		////////////////////////////////////////////////////////////////////////////////
		// Формульные расчеты

		public object ПолучитьТекстПоказателя(/*НеобходимыеДанные, ВидПВР, Предопределенный = Ложь, КомментироватьРасчет*/)
		{
			/*МассивСтажей = НеобходимыеДанные["ПроизвольныеСтажи"];*/
			if(true/*НеобходимыеДанные.СдельныйЗаработок или 
		НеобходимыеДанные.ОтработаноВремени или 
		НеобходимыеДанные.НормаВремениЗаМесяц или
		НеобходимыеДанные.Стаж или
		НеобходимыеДанные.ВремяВКалендарныхДнях или
		МассивСтажей.Количество() > 0 или
		НеобходимыеДанные.База*/)
			{
				if(true/*ВидПВР = "УдержанияРаботниковОрганизаций" Или ВидПВР = "ДополнительныеНачисленияРаботниковОрганизаций" Или ВидПВР = "УправленческиеУдержания"*/)
				{
					/*Показатель1Текст = "ВЫБОР "+
			?(НеобходимыеДанные.Стаж, "                 
			|	КОГДА Показатели.Показатель1 = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.Стаж)
			|		ТОГДА РАЗНОСТЬДАТ(ДанныеОСтаже.Период, Основной.БазовыйПериодКонец, МЕСЯЦ)", "") + 
			?(НеобходимыеДанные.ВремяВКалендарныхДнях, "
			|	КОГДА Показатели.Показатель1 = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ВремяВКалендарныхДнях)
			|		ТОГДА РАЗНОСТЬДАТ(Основной.БазовыйПериодНачало, Основной.БазовыйПериодКонец, ДЕНЬ) + 1  ", "")+
			?(НеобходимыеДанные.КалендарныхДнейВмесяце, "
			|	КОГДА Показатели.Показатель1 = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.КалендарныхДнейВмесяце)
			|		ТОГДА РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(Основной.БазовыйПериодНачало,МЕСЯЦ), КОНЕЦПЕРИОДА(Основной.БазовыйПериодКонец,МЕСЯЦ), ДЕНЬ) + 1  ", "");*/
				}
				/*Показатель1Текст = Показатель1Текст +		
		?(НеобходимыеДанные.База, "
		|	КОГДА Показатели.Показатель1 = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.РасчетнаяБаза)
		|		ТОГДА ЕСТЬNULL(База.РезультатБаза,0)", "");*/
				if(true/*Предопределенный*/)
				{
					/*Показатель1Текст = Показатель1Текст + "				
			|ИНАЧЕ 0
			|КОНЕЦ ";*/
				}
			}
			return null;
		}
		//ПолучитьТекстПоказателя

		public void ПроверкаПоказателейВПлановыхНачислениях(/*ВыборкаПоСтрокамДокумента, СтрокаНачалаСообщенияОбОшибке, ЭтоНачисление, Отказ, Заголовок, ИспользуютсяНачисленияВВалюте, СоответствиеВалютныеСпособыРасчета = Неопределено*/)
		{
			if(true/*ВыборкаПоСтрокамДокумента.ПроизвольнаяФормулаРасчета*/)
			{
			}
		}
		//ПроверкаПоказаетелей
		// Формирует текстовую интерпретацию формулы по способу расчета и показателям для отображения
		// на экране.
		//
		// Параметры
		//  СпособРасчета - ПеречислениеСсылка.СпособыРасчетаОплатыТруда
		//	Режим - "Текст" - формула выводится в виде текста, "HTML" - в виде HTML кода, по умолчанию = "Текст"
		// Возвращаемое значение:
		//   Строка   – содержит текстовую интерпретацию формулы расчета.
		//

		public object ПолучитьОписаниеДополнительногоСпособа(/*СпособРасчета, Режим*/)
		{
			/*СтрокаФормулы = "";*/
			if(true/*СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ДоначислениеПоУправленческомуУчету*/)
			{
				if(true/*Режим = "Текст"*/)
				{
					/*СтрокаФормулы = "<От обратного>";*/
				}
			}
			return null;
		}
		// ПолучитьОписаниеДополнительногоСпособа()
		// Дополняет массив типов ПВР удержаний текущей конфигурации
		//

		public void ТипыПВРУдержанийДополнить(/*ТипыПВРУдержаний*/)
		{
			/*ТипыПВРУдержаний.Добавить(Тип("ПланВидовРасчетаСсылка.УправленческиеУдержания"));*/
		}

		public void ДополнитьСоответствиеИменПВРПоТипу(/*МассивыИменПВРПоТипу*/)
		{
			/*ИменаПВР = Новый Массив;*/
			/*ИменаПВР.Добавить("УправленческиеНачисления");*/
			/*ИменаПВР.Добавить("УправленческиеУдержания");*/
			/*МассивыИменПВРПоТипу.Вставить(Тип("ПланВидовРасчетаСсылка.УправленческиеНачисления"), ИменаПВР);*/
			/*МассивыИменПВРПоТипу.Вставить(Тип("ПланВидовРасчетаСсылка.УправленческиеУдержания"), ИменаПВР);*/
		}
		// ДополнитьСоответствиеИменПВРПоТипу

		public void ДополнитьМассивАвтоматическиРассчитываемыхПоказателей(/*АвтоРассчитываемыеПоказатели*/)
		{
			/*ПроведениеРасчетовДополнительный.ДополнитьМассивАвтоматическиРассчитываемыхПоказателей(АвтоРассчитываемыеПоказатели);*/
		}
		////////////////////////////////////////////////////////////////////////////////
		// Законодательство

		public void СформироватьРасчетыПоНДФЛПриВыплате(/*ВыборкаПоШапкеДокумента, ТекстТаблицыВыплаты = Неопределено, НаборЗаписейНДФЛ = Неопределено, НаборЗаписейРасчетыНА = Неопределено*/)
		{
			if(true/*ТекстТаблицыВыплаты = Неопределено Или НаборЗаписейНДФЛ = Неопределено*/)
			{
			}
			/*Запрос = Новый Запрос;*/
			/*Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;*/
			/*Запрос.УстановитьПараметр("ДатаНДФЛ", ВыборкаПоШапкеДокумента.ДатаНДФЛ);*/
			/*Запрос.УстановитьПараметр("ДокументСсылка" , ВыборкаПоШапкеДокумента.Ссылка);*/
			/*Запрос.УстановитьПараметр("ОбособленноеПодразделение", ВыборкаПоШапкеДокумента.ОбособленноеПодразделение);*/
			/*Запрос.УстановитьПараметр("ГоловнаяОрганизация", ВыборкаПоШапкеДокумента.Организация);*/
			/*// формирование временной таблицы выплат ВТВыплатыФизлицам
*/
			/*Запрос.Текст = ТекстТаблицыВыплаты;*/
			/*Результат = Запрос.Выполнить().Выгрузить();*/
			if(true/*Результат[0].Количество = 0*/)
			{
				/*// количество произведенных выплат физлицам по документу
*/
			}
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДФЛРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, ГОД) КАК НалоговыйПериод,
	|	НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	СУММА(НДФЛРасчетыСБюджетом.СальдоПоНалогу) КАК СальдоПоНалогу,
	|	СУММА(НДФЛРасчетыСБюджетом.Приходы) КАК Приходы,
	|	СУММА(НДФЛРасчетыСБюджетом.Расходы) КАК Расходы
	|ПОМЕСТИТЬ ВТОстаткиИОбороты
	|ИЗ
	|	(ВЫБРАТЬ
	|		НДФЛРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
	|		НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|		НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|		ВЫБОР
	|			КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА НДФЛРасчетыСБюджетом.Налог
	|			ИНАЧЕ -НДФЛРасчетыСБюджетом.Налог
	|		КОНЕЦ КАК СальдоПоНалогу,
	|		ВЫБОР
	|			КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА НДФЛРасчетыСБюджетом.Налог
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Приходы,
	|		ВЫБОР
	|			КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА 0
	|			ИНАЧЕ НДФЛРасчетыСБюджетом.Налог
	|		КОНЕЦ КАК Расходы
	|	ИЗ
	|		РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
	|	ГДЕ
	|		НДФЛРасчетыСБюджетом.Регистратор <> &ДокументСсылка
	|		И НДФЛРасчетыСБюджетом.Организация = &ГоловнаяОрганизация
	|		И НДФЛРасчетыСБюджетом.ОбособленноеПодразделение = &ОбособленноеПодразделение
	|		И НДФЛРасчетыСБюджетом.Период <= &ДатаНДФЛ
	|		И НДФЛРасчетыСБюджетом.ФизЛицо В(ВЫБРАТЬ ФизЛицо ИЗ ВТВыплатыФизлицам)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НДФЛКЗачету.ФизЛицо,
	|		НАЧАЛОПЕРИОДА(НДФЛКЗачету.Период, МЕСЯЦ),
	|		ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13),
	|		ВЫБОР
	|			КОГДА НДФЛКЗачету.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА НДФЛКЗачету.СуммаНДФЛКЗачету
	|			ИНАЧЕ -НДФЛКЗачету.СуммаНДФЛКЗачету
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДФЛКЗачету.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА НДФЛКЗачету.СуммаНДФЛКЗачету
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДФЛКЗачету.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА 0
	|			ИНАЧЕ НДФЛКЗачету.СуммаНДФЛКЗачету
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.НДФЛКЗачету КАК НДФЛКЗачету
	|	ГДЕ
	|		НДФЛКЗачету.Регистратор <> &ДокументСсылка
	|		И НДФЛКЗачету.Организация = &ГоловнаяОрганизация
	|		И НДФЛКЗачету.Период <= &ДатаНДФЛ
	|		И НДФЛКЗачету.ФизЛицо В(ВЫБРАТЬ ФизЛицо ИЗ ВТВыплатыФизлицам)) КАК НДФЛРасчетыСБюджетом
	|
	|СГРУППИРОВАТЬ ПО
	|	НДФЛРасчетыСБюджетом.ФизЛицо,
	|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента,
	|	НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ),
	|	НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, ГОД)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	СтавкаНалогообложенияРезидента,
	|	НалоговыйПериод,
	|	МесяцНалоговогоПериода";*/
			/*Запрос.Выполнить();*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДФЛРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, ГОД) КАК НалоговыйПериод,
	|	НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	НДФЛРасчетыСБюджетом.КодПоОКАТО КАК КодПоОКАТО,
	|	НДФЛРасчетыСБюджетом.КПП КАК КПП,
	|	МАКСИМУМ(НДФЛРасчетыСБюджетом.Период) КАК Период,
	|	НДФЛРасчетыСБюджетом.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	НДФЛРасчетыСБюджетом.КодДохода КАК КодДохода,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА НДФЛРасчетыСБюджетом.Налог
	|			ИНАЧЕ -НДФЛРасчетыСБюджетом.Налог
	|		КОНЕЦ) КАК СальдоПоНалогу,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА НДФЛРасчетыСБюджетом.Налог
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Приходы,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА 0
	|			ИНАЧЕ НДФЛРасчетыСБюджетом.Налог
	|		КОНЕЦ) КАК Расходы
	|ПОМЕСТИТЬ ВТОстаткиИОборотыПодробно
	|ИЗ
	|	РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
	|ГДЕ
	|	НДФЛРасчетыСБюджетом.Регистратор <> &ДокументСсылка
	|	И НДФЛРасчетыСБюджетом.Организация = &ГоловнаяОрганизация
	|	И НДФЛРасчетыСБюджетом.ОбособленноеПодразделение = &ОбособленноеПодразделение
	|	И НДФЛРасчетыСБюджетом.Период <= &ДатаНДФЛ
	|	И НДФЛРасчетыСБюджетом.ФизЛицо В(ВЫБРАТЬ ФизЛицо ИЗ ВТВыплатыФизлицам)
	|
	|СГРУППИРОВАТЬ ПО
	|	НДФЛРасчетыСБюджетом.ФизЛицо,
	|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента,
	|	НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ),
	|	НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, ГОД),
	|	НДФЛРасчетыСБюджетом.КодПоОКАТО,
	|	НДФЛРасчетыСБюджетом.КПП,
	|	НДФЛРасчетыСБюджетом.ПодразделениеОрганизации,
	|	НДФЛРасчетыСБюджетом.КодДохода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	СтавкаНалогообложенияРезидента,
	|	НалоговыйПериод,
	|	МесяцНалоговогоПериода";*/
			/*Запрос.Выполнить();*/
			/*// Выборка долгов по НДФЛ в разрезе месяцев налогового периода по обособленному подразделению
*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗарплатаКВыплатеОрганизацииЗарплата.Физлицо КАК Физлицо,
	|	ЗарплатаКВыплатеОрганизацииЗарплата.Сумма КАК ВыплаченнаяСумма,
	|	НДФЛРасчетыСБюджетомПоМесяцам.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	НДФЛРасчетыСБюджетомПоГодам.НалоговыйПериод КАК НалоговыйПериод,
	|	ЕСТЬNULL(НДФЛРасчетыСБюджетомПоГодам.СальдоПоНалогу, 0) КАК СальдоПоНалогуЗаНалоговыйПериод,
	|	НДФЛРасчетыСБюджетомПоМесяцам.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ЕСТЬNULL(НДФЛРасчетыСБюджетомПоМесяцам.СальдоПоНалогу, 0) КАК СальдоПоНалогуЗаМесяц,
	|	ЕСТЬNULL(НДФЛРасчетыСБюджетомПоМесяцамПоОКАТОвсего.СальдоПоНалогу, 0) КАК ВсегоЗаМесяцПоОКАТО,
	|	ЕСТЬNULL(НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО.СальдоПоНалогу, 0) КАК СальдоПоОКАТО,
	|	ЕСТЬNULL(НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО.КодПоОКАТО, """") КАК КодПоОКАТО,
	|	НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО.Период КАК ДатаРегистрацииКодаОКАТО,
	|	ЕСТЬNULL(НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО.КПП, """") КАК КПП,
	|	ЕСТЬNULL(НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО.ПодразделениеОрганизации, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК ПодразделениеОрганизации,
	|	ЕСТЬNULL(НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО.КодДохода, ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.ПустаяСсылка)) КАК КодДохода
	|ИЗ
	|	ВТВыплатыФизлицам КАК ЗарплатаКВыплатеОрганизацииЗарплата
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиИОбороты КАК НДФЛРасчетыСБюджетомПоМесяцам
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиИОборотыПодробно КАК НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО
	|			ПО НДФЛРасчетыСБюджетомПоМесяцам.ФизЛицо = НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО.ФизЛицо
	|				И НДФЛРасчетыСБюджетомПоМесяцам.СтавкаНалогообложенияРезидента = НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО.СтавкаНалогообложенияРезидента
	|				И НДФЛРасчетыСБюджетомПоМесяцам.МесяцНалоговогоПериода = НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО.МесяцНалоговогоПериода
	|				И НДФЛРасчетыСБюджетомПоМесяцам.НалоговыйПериод = НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО.НалоговыйПериод
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				НДФЛРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
	|				НДФЛРасчетыСБюджетом.НалоговыйПериод КАК НалоговыйПериод,
	|				НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|				СУММА(НДФЛРасчетыСБюджетом.Приходы - НДФЛРасчетыСБюджетом.Расходы) КАК СальдоПоНалогу
	|			ИЗ
	|				ВТОстаткиИОбороты КАК НДФЛРасчетыСБюджетом
	|			
	|			СГРУППИРОВАТЬ ПО
	|				НДФЛРасчетыСБюджетом.ФизЛицо,
	|				НДФЛРасчетыСБюджетом.НалоговыйПериод,
	|				НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента) КАК НДФЛРасчетыСБюджетомПоГодам
	|			ПО НДФЛРасчетыСБюджетомПоМесяцам.ФизЛицо = НДФЛРасчетыСБюджетомПоГодам.ФизЛицо
	|				И НДФЛРасчетыСБюджетомПоМесяцам.НалоговыйПериод = НДФЛРасчетыСБюджетомПоГодам.НалоговыйПериод
	|				И НДФЛРасчетыСБюджетомПоМесяцам.СтавкаНалогообложенияРезидента = НДФЛРасчетыСБюджетомПоГодам.СтавкаНалогообложенияРезидента
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				НДФЛРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
	|				НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|				НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, ГОД) КАК НалоговыйПериод,
	|				НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|				СУММА(НДФЛРасчетыСБюджетом.Приходы - НДФЛРасчетыСБюджетом.Расходы) КАК СальдоПоНалогу
	|			ИЗ
	|				ВТОстаткиИОборотыПодробно КАК НДФЛРасчетыСБюджетом
	|			
	|			СГРУППИРОВАТЬ ПО
	|				НДФЛРасчетыСБюджетом.ФизЛицо,
	|				НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ),
	|				НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, ГОД),
	|				НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента) КАК НДФЛРасчетыСБюджетомПоМесяцамПоОКАТОвсего
	|			ПО НДФЛРасчетыСБюджетомПоМесяцам.ФизЛицо = НДФЛРасчетыСБюджетомПоМесяцамПоОКАТОвсего.ФизЛицо
	|				И НДФЛРасчетыСБюджетомПоМесяцам.СтавкаНалогообложенияРезидента = НДФЛРасчетыСБюджетомПоМесяцамПоОКАТОвсего.СтавкаНалогообложенияРезидента
	|				И НДФЛРасчетыСБюджетомПоМесяцам.МесяцНалоговогоПериода = НДФЛРасчетыСБюджетомПоМесяцамПоОКАТОвсего.МесяцНалоговогоПериода
	|				И НДФЛРасчетыСБюджетомПоМесяцам.НалоговыйПериод = НДФЛРасчетыСБюджетомПоМесяцамПоОКАТОвсего.НалоговыйПериод
	|		ПО ЗарплатаКВыплатеОрганизацииЗарплата.Физлицо = НДФЛРасчетыСБюджетомПоМесяцам.ФизЛицо
	|ГДЕ
	|	ЕСТЬNULL(НДФЛРасчетыСБюджетомПоМесяцам.СальдоПоНалогу, 0) > 0
	|	И ЕСТЬNULL(НДФЛРасчетыСБюджетомПоГодам.СальдоПоНалогу, 0) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Физлицо,
	|	СтавкаНалогообложенияРезидента,
	|	НалоговыйПериод,
	|	МесяцНалоговогоПериода,
	|	ДатаРегистрацииКодаОКАТО";*/
			/*ВременнаяТаблица = Новый ТаблицаЗначений;*/
			/*ВременнаяТаблица.Колонки.Добавить("КодПоОКАТО");*/
			/*ВременнаяТаблица.Колонки.Добавить("КПП");*/
			/*ВременнаяТаблица.Колонки.Добавить("ПодразделениеОрганизации");*/
			/*ВременнаяТаблица.Колонки.Добавить("КодДохода");*/
			/*ВременнаяТаблица.Колонки.Добавить("СальдоПоОКАТО");*/
			/*Выборка = Запрос.Выполнить().Выбрать();*/
			while(true/*Выборка.СледующийПоЗначениюПоля("Физлицо")*/)
			{
				/*СуммаКВыплате = Выборка.ВыплаченнаяСумма;*/
				/*ОсталосьРаспределить = СуммаКВыплате;*/
				while(true/*Выборка.СледующийПоЗначениюПоля("СтавкаНалогообложенияРезидента")*/)
				{
					while(true/*Выборка.СледующийПоЗначениюПоля("НалоговыйПериод")*/)
					{
						/*// детальные записи по физлицу
*/
						/*ОсталосьРаспределить = Мин(СуммаКВыплате,Выборка.СальдоПоНалогуЗаНалоговыйПериод);*/
						/*СуммаКВыплате = Макс(0,СуммаКВыплате - Выборка.СальдоПоНалогуЗаНалоговыйПериод);*/
						while(true/*Выборка.СледующийПоЗначениюПоля("МесяцНалоговогоПериода") И ОсталосьРаспределить > 0*/)
						{
							/*// расчет суммы удерживаемого налога
*/
							/*ПогашаемаяСумма = Мин(Выборка.СальдоПоНалогуЗаМесяц, ОсталосьРаспределить);*/
							/*ОсталосьРаспределить = ОсталосьРаспределить - ПогашаемаяСумма;*/
							if(true/*Выборка.ВсегоЗаМесяцПоОКАТО = Выборка.СальдоПоОКАТО Или Выборка.ВсегоЗаМесяцПоОКАТО = 0*/)
							{
								/*// запись удержания
*/
								/*Движение = НаборЗаписейНДФЛ.Добавить();*/
								/*ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоШапкеДокумента);*/
								/*// Период, ГоловнаяОрганизация, ОбособленноеПодразделение 
*/
								/*ЗаполнитьЗначенияСвойств(Движение,Выборка);*/
								/*// ФизЛицо, СтавкаНалогообложенияРезидента, МесяцНалоговогоПериода 
*/
								/*// КодПоОКАТО, КПП, ПодразделениеОрганизации
*/
								/*//свойства
*/
								/*Движение.ВидДвижения = ВидДвиженияНакопления.Расход;*/
								/*// ресурсы
*/
								/*Движение.Налог       = ПогашаемаяСумма;*/
								/*// реквизиты
*/
								/*Движение.ВидСтроки	 = Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Удержание;*/
							}
						}
						/*;;*/
					}
					/*;;*/
				}
				/*;
		
		ВременнаяТаблица.Очистить();*/
			}
			if(true/*НаборЗаписейРасчетыНА <> Неопределено И НаборЗаписейНДФЛ.Количество() > 0*/)
			{
				/*НаборЗаписейРасчетыНА.Загрузить(ПроведениеРасчетов.РасчетыНалоговогоАгентаПоУдержанномуНДФЛ(НаборЗаписейНДФЛ.Выгрузить()));*/
			}
		}
		// Возвращает соответствие физлиц и подразделений
		//

		public object ПолучитьСоответствиеФизлицИПодразделенийОрганизаций(/*ФизЛица, ПарамДата, ПарамГоловнаяОрганизация*/)
		{
			/*Запрос = Новый Запрос;*/
			/*Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;*/
			/*Запрос.УстановитьПараметр("ФизЛица",ФизЛица);*/
			/*Запрос.УстановитьПараметр("ПарамДата",ПарамДата);*/
			/*Запрос.УстановитьПараметр("ПарамГоловнаяОрганизация",ПарамГоловнаяОрганизация);*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СотрудникиОрганизаций.Ссылка КАК Сотрудник,
	|	СотрудникиОрганизаций.ВидДоговора,
	|	СотрудникиОрганизаций.Физлицо,
	|	СотрудникиОрганизаций.ВидЗанятости КАК ВидЗанятости
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|ГДЕ
	|	СотрудникиОрганизаций.Организация = &ПарамГоловнаяОрганизация
	|	И СотрудникиОрганизаций.Физлицо В(&ФизЛица)
	|	И СотрудникиОрганизаций.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|	И СотрудникиОрганизаций.ВидДоговора <> ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РаботникиОсновноеМесто.Сотрудник КАК Сотрудник,
	|	РаботникиОсновноеМесто.ПодразделениеОрганизации КАК Подразделение,
	|	СотрудникиОрганизаций.Физлицо КАК Физлицо,
	|	СотрудникиОрганизаций.ВидЗанятости КАК ВидЗанятости
	|ПОМЕСТИТЬ ВТДанныеОРаботниках
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ПарамДата, Сотрудник.ФизЛицо В (&ФизЛица)) КАК РаботникиОсновноеМесто
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудники КАК СотрудникиОрганизаций
	|		ПО РаботникиОсновноеМесто.Сотрудник = СотрудникиОрганизаций.Сотрудник
	|ГДЕ
	|	ВЫБОР
	|			КОГДА РаботникиОсновноеМесто.ПериодЗавершения <= &ПарамДата
	|					И РаботникиОсновноеМесто.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА РаботникиОсновноеМесто.ПричинаИзмененияСостоянияЗавершения
	|			ИНАЧЕ РаботникиОсновноеМесто.ПричинаИзмененияСостояния
	|		КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидЗанятости,
	|	Физлицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеОРаботниках.Подразделение,
	|	СписокСотрудников.Физлицо КАК Физлицо
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(РаботникиОсновноеМесто.Сотрудник) КАК Сотрудник,
	|		РаботникиОсновноеМесто.Физлицо КАК Физлицо,
	|		1 КАК Приоритет
	|	ИЗ
	|		ВТДанныеОРаботниках КАК РаботникиОсновноеМесто
	|	ГДЕ
	|		РаботникиОсновноеМесто.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		РаботникиОсновноеМесто.Физлицо
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		МАКСИМУМ(РаботникиСовместительство.Сотрудник),
	|		РаботникиСовместительство.Физлицо,
	|		2
	|	ИЗ
	|		ВТДанныеОРаботниках КАК РаботникиСовместительство
	|	ГДЕ
	|		РаботникиСовместительство.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		РаботникиСовместительство.Физлицо
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		МАКСИМУМ(СотрудникиДУ.Сотрудник),
	|		СотрудникиДУ.Физлицо,
	|		ВЫБОР
	|			КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
	|				ТОГДА 4
	|			ИНАЧЕ 5
	|		КОНЕЦ
	|	ИЗ
	|		ВТСотрудники КАК СотрудникиДУ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СотрудникиДУ.Физлицо,
	|		ВЫБОР
	|			КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
	|				ТОГДА 4
	|			ИНАЧЕ 5
	|		КОНЕЦ) КАК СписокСотрудников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СписокФизическихЛиц.Физлицо КАК Физлицо,
	|			МИНИМУМ(СписокФизическихЛиц.Приоритет) КАК Приоритет
	|		ИЗ
	|			(ВЫБРАТЬ
	|				РаботникиОсновноеМесто.Физлицо КАК Физлицо,
	|				1 КАК Приоритет
	|			ИЗ
	|				ВТДанныеОРаботниках КАК РаботникиОсновноеМесто
	|			ГДЕ
	|				РаботникиОсновноеМесто.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
	|			
	|			ОБЪЕДИНИТЬ
	|			
	|			ВЫБРАТЬ
	|				РаботникиСовместительство.Физлицо,
	|				2
	|			ИЗ
	|				ВТДанныеОРаботниках КАК РаботникиСовместительство
	|			ГДЕ
	|				РаботникиСовместительство.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|			
	|			ОБЪЕДИНИТЬ
	|			
	|			ВЫБРАТЬ
	|				СотрудникиДУ.Физлицо,
	|				ВЫБОР
	|					КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
	|						ТОГДА 4
	|					ИНАЧЕ 5
	|				КОНЕЦ
	|			ИЗ
	|				ВТСотрудники КАК СотрудникиДУ) КАК СписокФизическихЛиц
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СписокФизическихЛиц.Физлицо) КАК СписокФизическихЛиц
	|		ПО СписокСотрудников.Физлицо = СписокФизическихЛиц.Физлицо
	|			И СписокСотрудников.Приоритет = СписокФизическихЛиц.Приоритет
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОРаботниках КАК ДанныеОРаботниках
	|		ПО СписокСотрудников.Сотрудник = ДанныеОРаботниках.Сотрудник";*/
			/*ПодразделенияФизлиц = Новый Соответствие;*/
			/*Выборка = Запрос.Выполнить().Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				/*ПодразделенияФизлиц.Вставить(Выборка.Физлицо, Выборка.Подразделение);*/
			}
			return null;
		}
		//ПолучитьСоответствиеФизлицИПодразделений
		////////////////////////////////////////////////////////////////////////////////
		// ИСПРАВЛЕНИЕ ДОКУМЕНТОВ
		////////////////////////////////////////////////////////////////////////////////
		// МЕХАНИЗМ КОНТРОЛЯ ПЕРИОДИЧЕСКИХ ВЫПЛАТ

		public void ДополнитьТекстЗапросаНабораПериодическихВыплат(/*ТекстЗапроса*/)
		{
			/*// В этой конфигурации дополнительных действий не предусмотрено
*/
		}
	}
}

