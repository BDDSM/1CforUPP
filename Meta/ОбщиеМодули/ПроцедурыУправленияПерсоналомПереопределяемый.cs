using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace V82.ОбщиеМодули
{
	public partial class ПроцедурыУправленияПерсоналомПереопределяемый
	{
		// Проверяет, заполнен ли регламентированный производственный календарь за переданный период
		//
		// Параметры
		//  ДатаНач, ДатаКон - дата, определяют проверяемый период
		//  ВыводитьСообщения - булево - признак вывода сообщений в окно сообщений, по умолчанию - ложь
		//
		// Возвращаемое значение:
		//   Булево  - если колендарь заполнен за весь период
		//

		public object РегламентированныйКалендарьЗаполнен(/*ДатаНач, ДатаКон, ВыводитьСообщения = Ложь*/)
		{
			/*Сообщение = "";*/
			/*КалендарьЗаполнен = ПроцедурыУправленияПерсоналом.РегламентированныйКалендарьЗаполнен(ДатаНач, ДатаКон, Сообщение);*/
			if(true/*Не КалендарьЗаполнен и ВыводитьСообщения*/)
			{
				/*Сообщить(Сообщение + "
		|Интерфейсы: ""Полный"", ""Расчет зарплаты организаций"", ""Кадровый учет организаций"", пункт меню Предприятие - Производственный календарь.");*/
			}
			return null;
		}
		// РегламентированныйКалендарьЗаполнен()
		////////////////////////////////////////////////////////////////////////////////
		// ГОЛОВНЫЕ ОРГАНИЗАЦИИ И ОБОСОБЛЕННЫЕ ПОДРАЗДЕЛЕНИЯ
		// Функция ищет резюме кандидата
		//
		// В параметр ТиповаяАнкета будет передана ссылка на найденную типовую анкету

		public object НайтиРезюмеКандидата(/*ЗаявкаКандидата, ТиповаяАнкета = Неопределено*/)
		{
			return null;
		}
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ОБЕСПЕЧЕНИЯ РАБОТЫ ФОРМ ДОКУМЕНТОВ

		public object СписокДоговоровФормыВыбораСотрудника(/*Режим*/)
		{
			/*СписокДоговоров = Новый СписокЗначений;*/
			if(true/*Режим = 1*/)
			{
				/*СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);*/
				/*СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.Подряда);*/
				/*СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.Авторский);*/
			}
			return null;
		}
		// СписокДоговоровФормыВыбораСотрудника
		// Функция ищет единственного сотрудника среди работников предприятия или организаций по
		//  началу его наименования
		//
		// Параметры
		//  СтандартнаяОбработка – параметр стандартной обработки события обработчика АвтоПодборТекста
		//	Режим – число, определяет источники, из которых производится подбор
		//	Текст  - начальные буквы ФИО, текст из обработчика АвтоПодборТекста
		//	Организация – ссылка на организацию по которой подбирать сотрудников (работников)
		//	ВозвращатьФизлицо – параметр определяет, что должна вернуть функция, наименование Сотрудника или Физлица
		//	ТолькоАктуальных – параметр определяет, вести поиск среди всех сотрудников, или только актуальных
		//	Регистратор - при вызове из приема на работу передаем ссылку на текущий Документ
		//
		// Возвращаемое значение
		//  строка - наименование найденного сотрудника, физлица, если он единственный

		public object ПодобратьФИОСотрудника(/*СтандартнаяОбработка, Режим, Знач Текст, Организация = Неопределено, ВозвращатьФизлицо = Ложь, ТолькоАктуальные = Истина, Регистратор = Неопределено*/)
		{
			/*ТекстАвтоПодбора = "";*/
			/*СтандартнаяОбработка = Ложь;*/
			/*Запрос = Новый Запрос;*/
			/*// заменим спецсимволы
*/
			/*Текст = СтрЗаменить(Текст, "~", "~~");*/
			/*Текст = СтрЗаменить(Текст, "%", "~%");*/
			/*Текст = СтрЗаменить(Текст, "_", "~_");*/
			/*Текст = СтрЗаменить(Текст, "[", "~[");*/
			/*Текст = СтрЗаменить(Текст, "-", "~-");*/
			/*Текст = Текст+"%";*/
			/*Запрос.УстановитьПараметр("Текст", Текст);*/
			/*//условие по Организации используем, если в качестве параметра передана не пустая ссылка на справочник
*/
			if(true/*ЗначениеЗаполнено(Организация) и ТипЗнч(Организация) = Тип("СправочникСсылка.Организации")*/)
			{
				/*Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));*/
			}
			/*Запрос.УстановитьПараметр("НеОтбиратьПоОрганизации", Не (ЗначениеЗаполнено(Организация) и ТипЗнч(Организация) = Тип("СправочникСсылка.Организации")));*/
			/*Запрос.УстановитьПараметр("НеУчитыватьАктуальность", Не ТолькоАктуальные);*/
			if(true/*Режим = 0 или Режим = 1 или Режим = 6*/)
			{
				/*ДоговорыГПХ = Новый Массив;*/
				/*ДоговорыГПХ.Добавить(Перечисления.ВидыДоговоровСФизЛицами.Авторский);*/
				/*ДоговорыГПХ.Добавить(Перечисления.ВидыДоговоровСФизЛицами.Подряда);*/
				/*Запрос.УстановитьПараметр("ДоговорыГПХ", ДоговорыГПХ);*/
				/*СписокДоговоров = Новый Массив;*/
				/*СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);*/
				/*Запрос.УстановитьПараметр("СписокДоговоров", СписокДоговоров);*/
				if(true/*ВозвращатьФизлицо*/)
				{
					/*Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
            |   Сотрудники.ФизлицоНаименование КАК Наименование
            |ИЗ
            |   (ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
            |       Работники.Сотрудник.Физлицо.Наименование КАК ФизлицоНаименование
            |   ИЗ
            |       РегистрСведений.РаботникиОрганизаций КАК Работники
            |   ГДЕ
            |       Работники.Сотрудник.Наименование ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
            |       И (&НеОтбиратьПоОрганизации
            |               ИЛИ Работники.Сотрудник.Организация = &ГоловнаяОрганизация)
            |       И (&НеУчитыватьАктуальность
            |               ИЛИ Работники.Сотрудник.Актуальность)
            |       И Работники.Сотрудник.ВидДоговора В(&СписокДоговоров)
            |   
            |   ОБЪЕДИНИТЬ
            |   
            |   ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
            |       Договорники.Физлицо.Наименование
            |   ИЗ
            |       Справочник.СотрудникиОрганизаций КАК Договорники
            |   ГДЕ
            |       Договорники.Наименование ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
            |       И (&НеОтбиратьПоОрганизации
            |               ИЛИ Договорники.Организация = &ГоловнаяОрганизация)
            |       И (&НеУчитыватьАктуальность
            |               ИЛИ Договорники.Актуальность)
            |       И Договорники.ВидДоговора В(&ДоговорыГПХ)) КАК Сотрудники";*/
				}
			}
			/*Выборка = Запрос.Выполнить().Выбрать();*/
			if(true/*Выборка.Количество() = 1*/)
			{
				/*Выборка.Следующий();*/
				/*ТекстАвтоПодбора = Выборка.Наименование;*/
			}
			return null;
		}
		// ПодобратьФИОСотрудника()
		// Функция ищет сотрудника среди работников предприятия или организаций по
		//  началу его наименования
		//
		// Параметры
		// 	СтандартнаяОбработка – параметр стандартной обработки события обработчика АвтоПодборТекста
		//	Режим – число, определяет источники, из которых производится подбор
		//	Текст  - начальные буквы ФИО, текст из обработчика АвтоПодборТекста
		//	Организация – ссылка на организацию по которой подбирать сотрудников (работников)
		//	ВозвращатьФизлицо – параметр определяет, что должна вернуть функция, ссылку на Сотрудника или Физлицо
		//	ТолькоАктуальных – параметр определяет, вести поиск среди всех сотрудников, или только актуальных
		//	Регистратор - при вызове из приема на работу передаем ссылку на текущий Документ
		//
		// Возвращаемое значение
		//  СписокЗначений - список подходящих физлиц, если их найдено не более 50
		//  Неопределено - если найдено более 50 подходящих физлиц
		//

		public object ПодобратьСписокСотрудников(/*СтандартнаяОбработка, Режим, Знач Текст, Организация = Неопределено, ВозвращатьФизлицо = Ложь, ТолькоАктуальные = Истина, Регистратор = Неопределено*/)
		{
			if(true/*ПустаяСтрока(Текст)*/)
			{
			}
			/*Запрос = Новый Запрос;*/
			/*// заменим спецсимволы
*/
			/*Текст = СОКРЛП(Текст);*/
			/*Текст = СтрЗаменить(Текст, "~", "~~");*/
			/*Текст = СтрЗаменить(Текст, "%", "~%");*/
			/*Текст = СтрЗаменить(Текст, "_", "~_");*/
			/*Текст = СтрЗаменить(Текст, "[", "~[");*/
			/*Текст = СтрЗаменить(Текст, "-", "~-");*/
			/*Текст = Текст+"%";*/
			/*Запрос.УстановитьПараметр("Текст", Текст);*/
			/*//условие по Организации используем, если в качестве параметра передана не пустая ссылка на справочник
*/
			if(true/*ЗначениеЗаполнено(Организация) и ТипЗнч(Организация) = Тип("СправочникСсылка.Организации")*/)
			{
				/*Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));*/
			}
			/*Запрос.УстановитьПараметр("НеОтбиратьПоОрганизации", Не (ЗначениеЗаполнено(Организация) и ТипЗнч(Организация) = Тип("СправочникСсылка.Организации")));*/
			/*Запрос.УстановитьПараметр("НеУчитыватьАктуальность", Не ТолькоАктуальные);*/
			if(true/*Режим = 0 или Режим = 1 или Режим = 6*/)
			{
				/*ДоговорыГПХ = Новый Массив;*/
				/*ДоговорыГПХ.Добавить(Перечисления.ВидыДоговоровСФизЛицами.Авторский);*/
				/*ДоговорыГПХ.Добавить(Перечисления.ВидыДоговоровСФизЛицами.Подряда);*/
				/*Запрос.УстановитьПараметр("ДоговорыГПХ", ДоговорыГПХ);*/
				/*СписокДоговоров = Новый Массив;*/
				/*СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);*/
				/*Запрос.УстановитьПараметр("СписокДоговоров", СписокДоговоров);*/
				if(true/*ВозвращатьФизлицо*/)
				{
					/*Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
			|	Сотрудники.Физлицо КАК Ссылка,
			|	Сотрудники.ФизлицоНаименование КАК Наименование,
			|	Сотрудники.Код КАК Код,
			|	Сотрудники.НайденоПоНаименованию КАК НайденоПоНаименованию,
			|	Сотрудники.СотрудникНаименование КАК СотрудникНаименование
			|ИЗ
			|	(ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
			|		Работники.Сотрудник.Физлицо КАК Физлицо,
			|		Работники.Сотрудник.Физлицо.Наименование КАК ФизлицоНаименование,
			|		Работники.Сотрудник.Код КАК Код,
			|		ИСТИНА КАК НайденоПоНаименованию,
			|		Работники.Сотрудник.Наименование КАК СотрудникНаименование
			|	ИЗ
			|		РегистрСведений.РаботникиОрганизаций КАК Работники
			|	ГДЕ
			|		Работники.Сотрудник.Наименование ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
			|		И (&НеОтбиратьПоОрганизации
			|				ИЛИ Работники.Сотрудник.Организация = &ГоловнаяОрганизация)
			|		И (&НеУчитыватьАктуальность
			|				ИЛИ Работники.Сотрудник.Актуальность)
			|		И Работники.Сотрудник.ВидДоговора В(&СписокДоговоров)
			|	
			|	ОБЪЕДИНИТЬ
			|	
			|	ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
			|		Договорники.Физлицо,
			|		Договорники.Физлицо.Наименование,
			|		Договорники.Код,
			|		ИСТИНА,
			|		Договорники.Наименование
			|	ИЗ
			|		Справочник.СотрудникиОрганизаций КАК Договорники
			|	ГДЕ
			|		Договорники.Наименование ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
			|		И (&НеОтбиратьПоОрганизации
			|				ИЛИ Договорники.Организация = &ГоловнаяОрганизация)
			|		И (&НеУчитыватьАктуальность
			|				ИЛИ Договорники.Актуальность)
			|		И Договорники.ВидДоговора В(&ДоговорыГПХ)
			|	
			|	ОБЪЕДИНИТЬ
			|	
			|	ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
			|		Работники.Сотрудник.Физлицо,
			|		Работники.Сотрудник.Физлицо.Наименование,
			|		Работники.Сотрудник.Код,
			|		ЛОЖЬ,
			|		Работники.Сотрудник.Наименование
			|	ИЗ
			|		РегистрСведений.РаботникиОрганизаций КАК Работники
			|	ГДЕ
			|		Работники.Сотрудник.Код ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
			|		И (&НеОтбиратьПоОрганизации
			|				ИЛИ Работники.Сотрудник.Организация = &ГоловнаяОрганизация)
			|		И (&НеУчитыватьАктуальность
			|				ИЛИ Работники.Сотрудник.Актуальность)
			|		И Работники.Сотрудник.ВидДоговора В(&СписокДоговоров)
			|	
			|	ОБЪЕДИНИТЬ
			|	
			|	ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
			|		Договорники.Физлицо,
			|		Договорники.Физлицо.Наименование,
			|		Договорники.Код,
			|		ЛОЖЬ,
			|		Договорники.Наименование
			|	ИЗ
			|		Справочник.СотрудникиОрганизаций КАК Договорники
			|	ГДЕ
			|		Договорники.Код ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
			|		И (&НеОтбиратьПоОрганизации
			|				ИЛИ Договорники.Организация = &ГоловнаяОрганизация)
			|		И (&НеУчитыватьАктуальность
			|				ИЛИ Договорники.Актуальность)
			|		И Договорники.ВидДоговора В(&ДоговорыГПХ)) КАК Сотрудники
			|
			|УПОРЯДОЧИТЬ ПО
			|	СотрудникНаименование УБЫВ";*/
				}
			}
			/*Выборка = Запрос.Выполнить().Выбрать();*/
			/*Количество = Выборка.Количество();*/
			if(true/*Количество < 51*/)
			{
				/*Значение = Новый СписокЗначений;*/
				while(true/*Выборка.Следующий()*/)
				{
					/*Значение.Добавить(Выборка.Ссылка, ?(Выборка.НайденоПоНаименованию,Выборка.Наименование, Выборка.Код + " (" + Выборка.Наименование + ")"));*/
				}
				/*;
		
		СтандартнаяОбработка = Ложь;*/
			}
			return null;
		}
		// ПодобратьСписокСотрудников()

		public void ОткрытьФормуВыбораСотрудника(/*Владелец, Ключ, ЗакрыватьПриВыборе, ДатаСреза, СтандартнаяОбработка = Неопределено, ТекущееЗначение = Неопределено, ВыборФизлица = Ложь, ПараметрыПодбора = Неопределено, Подразделение = Неопределено, ПараметрыОтбора = Неопределено*/)
		{
			/*СтандартнаяОбработка = Ложь;*/
			/*Форма = Справочники.СотрудникиОрганизаций.ПолучитьФормуВыбора(, Владелец, Ключ);*/
			/*Форма.ДатаСреза 					= ДатаСреза;*/
			/*Форма.ПараметрВыборГруппИЭлементов	= ИспользованиеГруппИЭлементов.Элементы;*/
			/*Форма.РежимВыбора					= Истина;*/
			/*Форма.ЗакрыватьПриВыборе			= ЗакрыватьПриВыборе;*/
			/*Форма.ВыборФизлица					= ВыборФизлица;*/
			/*Форма.мПараметрыПодбора				= ПараметрыПодбора;*/
			if(true/*ТекущееЗначение <> Неопределено*/)
			{
				if(true/*ТипЗнч(ТекущееЗначение) = Тип("СправочникСсылка.СотрудникиОрганизаций")*/)
				{
					/*Форма.ПараметрТекущаяСтрока	= ТекущееЗначение;*/
				}
			}
			/*Форма.Отбор.ВидЗанятости.ВидСравнения = ВидСравнения.НеРавно;*/
			/*Форма.Отбор.ВидЗанятости.Использование = Истина;*/
			/*Форма.Отбор.ВидЗанятости.Значение = Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство;*/
			if(true/*Подразделение <> Неопределено*/)
			{
				/*Форма.Отбор.ТекущееПодразделениеКомпании.ВидСравнения	= ВидСравнения.ВСписке;*/
				/*Запрос = Новый Запрос;*/
				/*Запрос.Текст =
		"ВЫБРАТЬ
		|	Спр.Ссылка
		|ИЗ
		|	Справочник.Подразделения КАК Спр
		|ГДЕ
		|	Спр.Родитель В (&Ссылка)";*/
				/*Ссылка = ?(Подразделение = Неопределено ИЛИ Подразделение.Пустая(), Неопределено, Подразделение);*/
				/*СписокПодразделений = Новый СписокЗначений;*/
				/*СписокПодразделений.Добавить(Ссылка);*/
				while(true/*Ссылка <> Неопределено*/)
				{
					/*Запрос.УстановитьПараметр("Ссылка",	Ссылка);*/
					/*СписокСсылок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");*/
					if(true/*СписокСсылок.Количество() > 0*/)
					{
						/*Ссылка = СписокСсылок;*/
					}
				}
				/*;
		
		Форма.Отбор.ТекущееПодразделениеКомпании.Значение		= СписокПодразделений;*/
				/*Форма.Отбор.ТекущееПодразделениеКомпании.Использование	= Истина;*/
			}
			if(true/*НЕ ПараметрыОтбора = Неопределено*/)
			{
			}
			/*Форма.Открыть();*/
		}
		// ОткрытьФормуВыбораСотрудника()
		// Функция возвращаект сведения о позиции штатного расписания на выбранную дату
		// для измерений Подразделение и Должность
		//

		public object СведенияОПозицииШтатногоРасписания(/*Период, Подразделение, Должность*/)
		{
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("ДатаАктуальности",	Период);*/
			/*Запрос.УстановитьПараметр("Подразделение",		Подразделение);*/
			/*Запрос.УстановитьПараметр("Должность",			Должность);*/
			/*Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.КоличествоСтавок,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.МинимальнаяТарифнаяСтавка,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.МаксимальнаяТарифнаяСтавка,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.ВидТарифнойСтавки,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.ГрафикРаботы,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.ВалютаТарифнойСтавки,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.ОсобыеУсловияТруда
	|ИЗ
	|	РегистрСведений.ШтатноеРасписаниеОрганизаций.СрезПоследних(
	|		&ДатаАктуальности,
	|		ПодразделениеОрганизации = &Подразделение
	|			И Должность = &Должность) КАК ШтатноеРасписаниеОрганизацийСрезПоследних";*/
			return null;
		}
		// СведенияОПозицииШтатногоРасписания()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ И ФУНКЦИИ формирования движений кадровых документов по плановым начислениям работников организации

		public object СформироватьТекстЗапросаПоПроверкеСоответствияШтатномуРасписанию(/**/)
		{
			return null;
		}
	}
}

