using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace V82.ОбщиеМодули
{
	public partial class ФормированиеПечатныхФормЗК
	{
		////////////////////////////////////////////////////////////////////////////////
		//  Функции-проверки
		// Возвращает значение истина если за, переданный период заполнен регламетированный производственный календарь
		//
		// Параметры:
		//
		//  НачалоПериода - дата начала периода
		//  КонецПериода - дата конца периода
		//

		public object ЗаполненРегламентированныйПроизводственныйКалендарь(/*НачалоПериода, КонецПериода*/)
		{
			/*ТЗ = "ВЫБРАТЬ
	     |	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря
	     |ИЗ
	     |	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	     |ГДЕ
	     |	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &НачалоПериода И &КонецПериода";*/
			//Запрос = Новый Запрос(ТЗ);
			//Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
			//Запрос.УстановитьПараметр("КонецПериода",  КонецПериода);
			return null;
		}
		//ЗаполненРегламентированныйПроизводственныйКалендарь()
		////////////////////////////////////////////////////////////////////////////////
		//  Общие процедуры печати
		// Представление незаполненой даты в печатных формах документов.
		//
		// Параметры
		//
		// Возвращаемое значение:
		//   Строка   - "___"_________20__ г.
		//

		public object ПустаяДатаВПечатнойФорме(/**/)
		{
			return null;
		}
		// ПустаяДатаВПечатнойФорме()
		// Возвращает процент северной надбавки на указаную дату
		//
		// Параметры:
		//  ДатаРегистрации - дата регистрации записи о стаже
		//  ПорядокНачисления - порядок начисления северной надбавки - ПеречислениеСсылка.ПорядокНачисленияСеверныхНадбавок
		//  НачальныйПроцент - процент на дату ДатаРегистрации
		//  Месяцев - количество месяцев стажа на дату ДатаРегистрации
		//  Дней - количество дней стажа на дату ДатаРегистрации
		//  Дата - начало периода, в котором мы получаем сведения о процентах надбавки
		//

		public object ПолучитьПроцентСевернойНадбавкиНаДату(/*ДатаРегистрацииСеверногоСтажа, ПорядокНачисленияСеверныхНадбавок, НачальныйПроцентСевернойНадбавки, СеверныйСтажМесяцев, СеверныйСтажДней, ОкончаниеПериодаЗаполнения*/)
		{
			/*Массив = ПроведениеРасчетов.ПолучитьПроцентыСевернойНадбавкиЗаПериод(
					ДатаРегистрацииСеверногоСтажа, 
					ПорядокНачисленияСеверныхНадбавок, 
					НачальныйПроцентСевернойНадбавки,
					СеверныйСтажМесяцев,
					СеверныйСтажДней,
					ОкончаниеПериодаЗаполнения,
					ОкончаниеПериодаЗаполнения);*/
			//Процент = Массив[Массив.Количество()-1].Процент;
			return null;
		}
		//ПолучитьПроцентСевернойНадбавкиНаДату
		// Функция возвращает текст запроса, в котором ответственные лица организаций помещаются во временную таблицу
		//

		public object ПолучитьТекстЗапросаПоОтветственнымЛицам(/*ПараметрОтбораПоДате, УсловиеОтбора*/)
		{
			/*Возврат
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОтветственныеЛицаСрезПоследних.ФизическоеЛицо.Наименование КАК НаименованиеФизлица,
	|	ОтветственныеЛицаСрезПоследних.Должность.Наименование КАК Должность,
	|	ОтветственныеЛицаСрезПоследних.ОтветственноеЛицо,
	|	ОтветственныеЛицаСрезПоследних.ФизическоеЛицо КАК Физлицо,
	|	ОтветственныеЛицаСрезПоследних.СтруктурнаяЕдиница,
	|	ФизическиеЛица.Комментарий
	|ПОМЕСТИТЬ ВТОтветственныеЛица
	|ИЗ
	|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
	|			&" + ПараметрОтбораПоДате + ",
	|			" + УсловиеОтбора + ") КАК ОтветственныеЛицаСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО ОтветственныеЛицаСрезПоследних.ФизическоеЛицо = ФизическиеЛица.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) <> """"
	|				ТОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) + "". ""
	|			ИНАЧЕ """"
	|		КОНЕЦ + ВЫБОР
	|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) <> """"
	|				ТОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) + "". ""
	|			ИНАЧЕ """"
	|		КОНЕЦ + ФИОФизЛицСрезПоследних.Фамилия, ОтветственныеЛицаСрезПоследних.НаименованиеФизлица) КАК НаименованиеОтветственногоЛица,
	|	ОтветственныеЛицаСрезПоследних.Должность,
	|	ОтветственныеЛицаСрезПоследних.ОтветственноеЛицо,
	|	ОтветственныеЛицаСрезПоследних.Физлицо,
	|	ОтветственныеЛицаСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ОтветственныеЛицаСрезПоследних.Комментарий
	|ПОМЕСТИТЬ ВТДанныеОбОтветственномЛице
	|ИЗ
	|	ВТОтветственныеЛица КАК ОтветственныеЛицаСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
	|				&" + ПараметрОтбораПоДате + ",
	|				ФизЛицо В
	|					(ВЫБРАТЬ
	|						Ответственные.Физлицо
	|					ИЗ
	|						ВТОтветственныеЛица КАК Ответственные)) КАК ФИОФизЛицСрезПоследних
	|		ПО ОтветственныеЛицаСрезПоследних.Физлицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СтруктурнаяЕдиница";*/
			return null;
		}
		// Выводит данные побуквенно
		// Параметры:
		//			Данные - Строка, котрую нужно вывести
		//			Раздел - Макет (область) табличного документа в которую нужно вывести
		//			ИмяПоказателя - Строка, имя ячейки в области к которой прибавляется номер позиуии в имени показателя
		//			КоличествоЯчеек - Число, количество ячеек в которые нужно вывести данные
		//			НачальнвяЯчейка - Число, ячейка с которой нужно начать побуквенный вывод

		public void ВывестиДанныеПоБуквенно(/*Данные, Раздел, ИмяПоказателя, КоличествоЯчеек, НачальнаяЯчейка = 1*/)
		{
		}

		public void ОчиститьПараметрыОбластиТабличногоДокумента(/*Область*/)
		{
		}
		////////////////////////////////////////////////////////////////////////////////
		//  Формирование общих печатных форм

		public object ПечатьРасчетаСреднегоЗаработка(/*ДокументСсылка, ДатаСобытия, ПродолжительностьРасчетногоПериода, ОписаниеОплачиваемогоПериода, СпособРасчета, Знач ИспользоватьСреднеЧасовойЗаработок = Неопределено, СписокСоставляющихСреднегоЗаработка = Неопределено, ВыводитьЗаголовок = Истина, ОтражатьДолюВремени = Истина, СтруктураПоказателей = Неопределено*/)
		{
			if(true/*Не ЗначениеЗаполнено(ДокументСсылка)*/)
			{
			}
			//ТабДокумент = Новый ТабличныйДокумент;
			//ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
			//ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасчетСреднегоЗаработка";
			//Макет = ПолучитьОбщийМакет("РасчетСреднегоЗаработка");
			//СекцияШапка = Макет.ПолучитьОбласть("Шапка");
			//СекцияЗаголовокНачислений = Макет.ПолучитьОбласть("ЗаголовокНачислений");
			//СекцияЗаголовокРабочегоМеста = Макет.ПолучитьОбласть("ЗаголовокРабочегоМеста");
			//СекцияМесячныйЗаработок = Макет.ПолучитьОбласть("МесячныйЗаработок");
			//СекцияСерединаОтчета = Макет.ПолучитьОбласть("СерединаОтчета");
			//СекцияДоляВремени = Макет.ПолучитьОбласть("ДоляВремени");
			//СекцияЗаголовокПремий = Макет.ПолучитьОбласть("ЗаголовокПремий");
			//СекцияПремии = Макет.ПолучитьОбласть("Премии");
			//СекцияПодвал = Макет.ПолучитьОбласть("Подвал");
			//Запрос = Новый Запрос;
			/*// Установим параметры запроса
*/
			//Запрос.УстановитьПараметр("ДокументСсылка",			ДокументСсылка);
			//Запрос.УстановитьПараметр("ДатаНачалаСобытия",		ДатаСобытия);
			//Запрос.УстановитьПараметр("ИспользоватьСреднеЧасовойЗаработок", ИспользоватьСреднеЧасовойЗаработок);
			//Запрос.УстановитьПараметр("Регистратор",			ДокументСсылка);
			//Запрос.УстановитьПараметр("СпособРасчета",			СпособРасчета);
			//Запрос.УстановитьПараметр("ОсновнойЗаработокНеиндексируемый", ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуНеИндексируемые);
			/*ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Документ.Сотрудник,
	|	Документ.Сотрудник.Физлицо КАК Физлицо
	|ИЗ
	|	Документ.НачислениеОтпускаРаботникамОрганизаций КАК Документ
	|ГДЕ
	|	Документ.Ссылка = &ДокументСсылка";*/
			//Запрос.Текст = СтрЗаменить(ТекстЗапроса,"Документ.НачислениеОтпускаРаботникамОрганизаций КАК Документ","Документ." + ИмяИсточникаДанных + " КАК Документ");
			//Выборка = Запрос.Выполнить().Выбрать();
			//Выборка.Следующий();
			//Запрос.УстановитьПараметр("Сотрудник",	Выборка.Сотрудник);
			//Запрос.УстановитьПараметр("Физлицо",	Выборка.Физлицо);
			if(true/*ВыводитьЗаголовок*/)
			{
				/*ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Документ.Представление,
		|	Документ.Ссылка,
		|	Документ.Сотрудник,
		|	Документ.Организация,
		|	Документ.Организация.НаименованиеПолное КАК НаименованиеОрганизации,
		|	ЕСТЬNULL(ФИОФизлица.Фамилия + "" "" + ФИОФизлица.Имя + "" "" + ФИОФизлица.Отчество, Документ.Сотрудник.Наименование) КАК ФИОРаботника,
		|	Документ.Сотрудник.Код КАК ТабельныйНомер,
		|	Документ.ПериодРасчетаСреднегоЗаработкаНачало КАК ДатаНачалаРасчетногоПериода,
		|	Документ.ПериодРасчетаСреднегоЗаработкаОкончание КАК ДатаОкончанияРасчетногоПериода
		|ИЗ
		|	Документ.НачислениеОтпускаРаботникамОрганизаций КАК Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаНачалаСобытия, ФизЛицо = &ФизЛицо) КАК ФИОФизлица
		|		ПО (ИСТИНА)
		|ГДЕ
		|	Документ.Ссылка = &ДокументСсылка";*/
				//Запрос.Текст = СтрЗаменить(ТекстЗапроса,"Документ.НачислениеОтпускаРаботникамОрганизаций КАК Документ","Документ." + ИмяИсточникаДанных + " КАК Документ");
				//Выборка = Запрос.Выполнить().Выбрать();
				//Выборка.Следующий();
				//ЗаполнитьЗначенияСвойств(СекцияШапка.Параметры,Выборка);
				//СекцияШапка.Параметры.ДатаНачалаРасчетногоПериода = Формат(СекцияШапка.Параметры.ДатаНачалаРасчетногоПериода,"ДФ=dd.MM.yyyy");
				//СекцияШапка.Параметры.ДатаОкончанияРасчетногоПериода = Формат(СекцияШапка.Параметры.ДатаОкончанияРасчетногоПериода,"ДФ=dd.MM.yyyy");
				//СекцияШапка.Параметры.Представление = ОбщегоНазначения.СформироватьЗаголовокДокумента(ДокументСсылка, МетаданныеДокумента.Синоним);
				//СекцияШапка.Параметры.ОписаниеОплачиваемогоПериода = ОписаниеОплачиваемогоПериода;
				//СекцияШапка.Параметры.СпособРасчета = ?(СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет,Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС,СпособРасчета);
				//ТабДокумент.Вывести(СекцияШапка);
			}
			//ФормированиеПечатныхФормПереопределяемый.УстановитьПараметрыЗапросаСреднегоЗаработка(Запрос, СпособРасчета, СписокСоставляющихСреднегоЗаработка);
			if(true/*ИспользоватьСреднеЧасовойЗаработок = Неопределено*/)
			{
				if(true/*МетаданныеДокумента.Реквизиты.Найти("СпособРегистрацииВремени") <> Неопределено*/)
				{
					/*ТекстПоляИспользоватьСреднеЧасовойЗаработок = 
			"ВЫБОР
			|		КОГДА Документ.СпособРегистрацииВремени = ЗНАЧЕНИЕ(Перечисление.СпособыРегистрацииВремени.РегистрацияДляЧастиСмены) 
			|			ИЛИ ВЫБОР
			|					КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
			|							И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|						ТОГДА ЕСТЬNULL(РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения.СуммированныйУчетРабочегоВремени, ЛОЖЬ)
			|					ИНАЧЕ ЕСТЬNULL(РаботникиОрганизацииСрезПоследних.ГрафикРаботы.СуммированныйУчетРабочегоВремени, ЛОЖЬ) 
			|				КОНЕЦ			
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ИспользоватьСреднеЧасовойЗаработок";*/
				}
				/*ТекстЗапроса = 
		"ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО КАК ИспользоватьСреднеЧасовойЗаработок
		|ИЗ
		|	Документ.НачислениеОтпускаРаботникамОрганизаций КАК Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаНачалаСобытия, Сотрудник = &Сотрудник) КАК РаботникиОрганизацииСрезПоследних
		|		ПО (ИСТИНА)
		|ГДЕ
		|	Документ.Ссылка = &ДокументСсылка";*/
				//ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"НЕОПРЕДЕЛЕНО КАК ИспользоватьСреднеЧасовойЗаработок", ТекстПоляИспользоватьСреднеЧасовойЗаработок);
				//Запрос.Текст = СтрЗаменить(ТекстЗапроса,"Документ.НачислениеОтпускаРаботникамОрганизаций КАК Документ","Документ." + ИмяИсточникаДанных + " КАК Документ");
				//Выборка = Запрос.Выполнить().Выбрать();
				//Выборка.Следующий();
				//ИспользоватьСреднеЧасовойЗаработок = Выборка.ИспользоватьСреднеЧасовойЗаработок;
			}
			//Запрос.УстановитьПараметр("ИспользоватьСреднеЧасовойЗаработок", ИспользоватьСреднеЧасовойЗаработок);
			/*// по окончательным данным проведенного документа
*/
			/*// собираем итоговые данные и рассчитываем средний заработок
*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетСреднегоЗаработка.ПериодРегистрации,
	|	РасчетСреднегоЗаработка.ВидРасчета,
	|	РасчетСреднегоЗаработка.БазовыйПериодНачало,
	|	РасчетСреднегоЗаработка.БазовыйПериодКонец,
	|	РасчетСреднегоЗаработка.Сотрудник КАК Сотрудник,
	|	РасчетСреднегоЗаработка.Результат,
	|	РасчетСреднегоЗаработка.ОтработаноПоПятидневке,
	|	РасчетСреднегоЗаработка.НормаПоПятидневке,
	|	РасчетСреднегоЗаработка.ОтработаноДней,
	|	РасчетСреднегоЗаработка.ОтработаноЧасов,
	|	РасчетСреднегоЗаработка.СкидкаПоСтраховымВзносам,
	|	РасчетСреднегоЗаработка.КоэффициентИндексации,
	|	РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода,
	|	РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода,
	|	РасчетСреднегоЗаработка.СпособРасчета,
	|	РасчетСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка,
	|	РасчетСреднегоЗаработка.ЧислоМесяцев
	|ПОМЕСТИТЬ ВТДанныеОСреднем
	|ИЗ
	|	РегистрРасчета.РасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
	|ГДЕ
	|	РасчетСреднегоЗаработка.Регистратор = &Регистратор
	|	И РасчетСреднегоЗаработка.СпособРасчета = &СпособРасчета
	|	И РасчетСреднегоЗаработка.ВидРасчета В(&СписокСоставляющихСреднегоЗаработка)
	|	И (РасчетСреднегоЗаработка.Результат <> 0
	|			ИЛИ РасчетСреднегоЗаработка.ОтработаноДней <> 0
	|			ИЛИ РасчетСреднегоЗаработка.ОтработаноЧасов <> 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработок)
	|			ТОГДА 1
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработокНеиндексируемый)
	|			ТОГДА 2
	|		ИНАЧЕ 3
	|	КОНЕЦ КАК ПорядокЗаписей,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработок)
	|			ТОГДА РасчетСреднегоЗаработка.Результат * ВЫБОР
	|					КОГДА РасчетСреднегоЗаработка.КоэффициентИндексации < 1
	|						ТОГДА 1
	|					ИНАЧЕ РасчетСреднегоЗаработка.КоэффициентИндексации
	|				КОНЕЦ
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработокНеиндексируемый)
	|			ТОГДА РасчетСреднегоЗаработка.Результат
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВсегоЗаработка,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ВсеФиксированныеПремии)
	|			ТОГДА РасчетСреднегоЗаработка.Результат
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ФиксПремий,
	|	ВЫБОР
	|		КОГДА (РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработок)
	|				ИЛИ РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработокНеиндексируемый))
	|				И РасчетСреднегоЗаработка.Сотрудник = &Сотрудник
	|			ТОГДА ВЫБОР
	|					КОГДА &ИспользоватьСреднеЧасовойЗаработок
	|						ТОГДА РасчетСреднегоЗаработка.ОтработаноЧасов
	|					ИНАЧЕ РасчетСреднегоЗаработка.ОтработаноДней
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВсегоДнейРасчетногоПериода,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработок)
	|			ТОГДА 0
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработокНеиндексируемый)
	|			ТОГДА 0
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямПособий))
	|			ТОГДА РасчетСреднегоЗаработка.Результат
	|		КОГДА РасчетСреднегоЗаработка.ЧислоМесяцев = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ПоПремиям)
	|					ТОГДА РасчетСреднегоЗаработка.Результат * ВЫБОР
	|							КОГДА РасчетСреднегоЗаработка.КоэффициентИндексации < 1
	|								ТОГДА 1
	|							ИНАЧЕ РасчетСреднегоЗаработка.КоэффициентИндексации
	|						КОНЕЦ
	|				КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ПоФиксПремиям)
	|					ТОГДА РасчетСреднегоЗаработка.Результат * ВЫБОР
	|							КОГДА РасчетСреднегоЗаработка.КоэффициентИндексации < 1
	|								ТОГДА 1
	|							ИНАЧЕ РасчетСреднегоЗаработка.КоэффициентИндексации
	|						КОНЕЦ * ВЫБОР
	|							КОГДА РасчетСреднегоЗаработка.НормаПоПятидневке = 0
	|								ТОГДА 0
	|							ИНАЧЕ РасчетСреднегоЗаработка.ОтработаноПоПятидневке / РасчетСреднегоЗаработка.НормаПоПятидневке
	|						КОНЕЦ
	|				КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ПоФиксПремиямНеИндексируемые)
	|					ТОГДА РасчетСреднегоЗаработка.Результат * ВЫБОР
	|							КОГДА РасчетСреднегоЗаработка.НормаПоПятидневке = 0
	|								ТОГДА 0
	|							ИНАЧЕ РасчетСреднегоЗаработка.ОтработаноПоПятидневке / РасчетСреднегоЗаработка.НормаПоПятидневке
	|						КОНЕЦ
	|				ИНАЧЕ РасчетСреднегоЗаработка.Результат
	|			КОНЕЦ * ВЫБОР
	|				КОГДА РасчетСреднегоЗаработка.ЧислоМесяцев > РасчетСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
	|					ТОГДА РасчетСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / РасчетСреднегоЗаработка.ЧислоМесяцев
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ КАК ВсегоУчтеноПремий,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ВсеФиксированныеПремии)
	|			ТОГДА РасчетСреднегоЗаработка.ОтработаноПоПятидневке
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВсегоДнейОтработано,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ВсеФиксированныеПремии)
	|			ТОГДА РасчетСреднегоЗаработка.НормаПоПятидневке
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВсегоДнейПоНорме,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработок)
	|			ТОГДА 0
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработокНеиндексируемый)
	|			ТОГДА 0
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямПособий))
	|			ТОГДА ""-""
	|		КОГДА РасчетСреднегоЗаработка.ЧислоМесяцев = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ПоФиксПремиям)
	|					ТОГДА РасчетСреднегоЗаработка.Результат * ВЫБОР
	|							КОГДА РасчетСреднегоЗаработка.КоэффициентИндексации < 1
	|								ТОГДА 1
	|							ИНАЧЕ РасчетСреднегоЗаработка.КоэффициентИндексации
	|						КОНЕЦ
	|				КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ПоПремиям)
	|					ТОГДА РасчетСреднегоЗаработка.Результат * ВЫБОР
	|							КОГДА РасчетСреднегоЗаработка.КоэффициентИндексации < 1
	|								ТОГДА 1
	|							ИНАЧЕ РасчетСреднегоЗаработка.КоэффициентИндексации
	|						КОНЕЦ
	|				ИНАЧЕ РасчетСреднегоЗаработка.Результат
	|			КОНЕЦ / РасчетСреднегоЗаработка.ЧислоМесяцев
	|	КОНЕЦ КАК МесячнаяЧастьПремий,
	|	НАЧАЛОПЕРИОДА(РасчетСреднегоЗаработка.БазовыйПериодНачало, МЕСЯЦ) КАК МесяцРасчетногоПериода,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&Индексируемые)
	|			ТОГДА ВЫБОР
	|					КОГДА РасчетСреднегоЗаработка.КоэффициентИндексации < 1
	|						ТОГДА 1
	|					ИНАЧЕ РасчетСреднегоЗаработка.КоэффициентИндексации
	|				КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КоэффициентИндексации,
	|	РасчетСреднегоЗаработка.Результат КАК Результат,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямПособий))
	|			ТОГДА 0
	|		ИНАЧЕ РасчетСреднегоЗаработка.ЧислоМесяцев
	|	КОНЕЦ КАК МесяцевПремии,
	|	РасчетСреднегоЗаработка.Сотрудник КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|			ТОГДА ""По внутр. совм-ву""
	|		ИНАЧЕ ""Основное рабочее место""
	|	КОНЕЦ КАК ВидЗанятости,
	|	РасчетСреднегоЗаработка.БазовыйПериодНачало КАК БазовыйПериодНачало
	|ПОМЕСТИТЬ ВТОбработанныеЗаписи
	|ИЗ
	|	ВТДанныеОСреднем КАК РасчетСреднегоЗаработка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизацииЗавершения.Наименование
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации.Наименование
	|	КОНЕЦ КАК ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ДолжностьЗавершения.Наименование
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.Должность.Наименование
	|	КОНЕЦ КАК Должность,
	|	РаботникиОрганизацийСрезПоследних.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТДанныеСотрудника
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|			&ДатаНачалаСобытия,
	|			Сотрудник В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						РасчетСреднегоЗаработка.Сотрудник
	|					ИЗ
	|						ВТДанныеОСреднем КАК РасчетСреднегоЗаработка)
	|				) КАК РаботникиОрганизацийСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетСреднегоЗаработка.ПорядокЗаписей КАК ПорядокЗаписей,
	|	ВЫРАЗИТЬ(РасчетСреднегоЗаработка.ВсегоЗаработка КАК ЧИСЛО(15, 2)) КАК ВсегоЗаработка,
	|	РасчетСреднегоЗаработка.ФиксПремий КАК ФиксПремий,
	|	РасчетСреднегоЗаработка.ВсегоДнейРасчетногоПериода КАК ВсегоДнейРасчетногоПериода,
	|	ВЫРАЗИТЬ(РасчетСреднегоЗаработка.ВсегоУчтеноПремий КАК ЧИСЛО(15, 2)) КАК ВсегоУчтеноПремий,
	|	РасчетСреднегоЗаработка.ВсегоДнейОтработано КАК ВсегоДнейОтработано,
	|	РасчетСреднегоЗаработка.ВсегоДнейПоНорме КАК ВсегоДнейПоНорме,
	|	ВЫРАЗИТЬ(РасчетСреднегоЗаработка.МесячнаяЧастьПремий КАК ЧИСЛО(15, 2)) КАК МесячнаяЧастьПремий,
	|	РасчетСреднегоЗаработка.МесяцРасчетногоПериода,
	|	РасчетСреднегоЗаработка.КоэффициентИндексации,
	|	РасчетСреднегоЗаработка.Результат,
	|	РасчетСреднегоЗаработка.МесяцевПремии,
	|	РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации + ""; "" + РаботникиОрганизацийСрезПоследних.Должность КАК РабочееМесто,
	|	РасчетСреднегоЗаработка.Сотрудник КАК Сотрудник,
	|	РасчетСреднегоЗаработка.ВидЗанятости,
	|	РасчетСреднегоЗаработка.БазовыйПериодНачало КАК БазовыйПериодНачало
	|ИЗ
	|	ВТОбработанныеЗаписи КАК РасчетСреднегоЗаработка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеСотрудника КАК РаботникиОрганизацийСрезПоследних
	|		ПО РасчетСреднегоЗаработка.Сотрудник = РаботникиОрганизацийСрезПоследних.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядокЗаписей,
	|	БазовыйПериодНачало
	|ИТОГИ
	|	СУММА(ВсегоЗаработка),
	|	СУММА(ФиксПремий),
	|	СУММА(ВсегоДнейРасчетногоПериода),
	|	СУММА(ВсегоУчтеноПремий),
	|	МАКСИМУМ(ВсегоДнейОтработано),
	|	МАКСИМУМ(ВсегоДнейПоНорме)
	|ПО
	|	ОБЩИЕ,
	|	Сотрудник";*/
			//Результат = Запрос.Выполнить();
			/*СтруктураПоказателей = Новый Структура("
	|ВсегоДнейРасчетногоПериода,
	|ВсегоЗаработка,
	|ВсегоУчтеноПремий,
	|ОбщийЗаработок, 
	|Средний",0,0,0,0,0);*/
			if(true/*Не Результат.Пустой()*/)
			{
				/*// уточним названия колонок и показателей
*/
				if(true/*ИспользоватьСреднеЧасовойЗаработок*/)
				{
					//СекцияЗаголовокРабочегоМеста.Параметры.ЕдиницаИзмерения = "часов";
					//СекцияДоляВремени.Параметры.ЕдиницаИзмерения = "часов";
					//СекцияПодвал.Параметры.ЕдиницаИзмерения = "часов";
					//СекцияПодвал.Параметры.ОписаниеЗаработка = "Среднечасовой";
				}
				/*СтруктураИтоговПоРабочемуМесту = Новый Структура("
		|ВсегоДнейРасчетногоПериода,
		|ВсегоЗаработка,
		|ВсегоДнейОтработано,
		|ВсегоДнейПоНорме,
		|ДоляВремени",0,0,0,0,0);*/
				//ВыводитьЗаголовокРабочегоМеста = Истина;
				//ВыводитьИтогиПредыдущегоРабочегоМеста = Ложь;
				//ТабДокумент.Вывести(СекцияЗаголовокНачислений);
				/*// Формирование раздела по начислениям за расчетный период по рабочим местам
*/
				//Выборка = Результат.Выбрать();
				while(true/*Выборка.Следующий()*/)
				{
					if(true/*Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ОбщийИтог*/)
					{
						/*//заполнение итогами по расчету среднего заработка
*/
						//ЗаполнитьЗначенияСвойств(СтруктураПоказателей,Выборка);
						//ОтражатьДолюВремени = ОтражатьДолюВремени И Выборка.ФиксПремий <> 0;
						//СтруктураПоказателей.ОбщийЗаработок = Формат(Выборка.ВсегоЗаработка + Выборка.ВсегоУчтеноПремий, "ЧЦ=17; ЧДЦ=4; ЧН=-");
						//СтруктураПоказателей.Средний = Окр(?(СтруктураПоказателей.ВсегоДнейРасчетногоПериода = 0,0, (Выборка.ВсегоЗаработка + Выборка.ВсегоУчтеноПремий) / СтруктураПоказателей.ВсегоДнейРасчетногоПериода),2);
					}
				}
				if(true/*ВыводитьЗаголовокРабочегоМеста*/)
				{
					//ТабДокумент.Вывести(СекцияЗаголовокРабочегоМеста);
				}
				/*// итоги последнего по порядку р.м.
*/
				//ЗаполнитьЗначенияСвойств(СекцияСерединаОтчета.Параметры,СтруктураИтоговПоРабочемуМесту);
				//ТабДокумент.Вывести(СекцияСерединаОтчета);
				if(true/*ОтражатьДолюВремени*/)
				{
					//ЗаполнитьЗначенияСвойств(СекцияДоляВремени.Параметры,СтруктураИтоговПоРабочемуМесту);
					//ТабДокумент.Вывести(СекцияДоляВремени);
				}
				/*// Формирование раздела по начисленным премиям
*/
				//ТабДокумент.Вывести(СекцияЗаголовокПремий);
				//ВыводитьПустуюСтрокуПремии = Истина;
				//Выборка = Результат.Выбрать();
				while(true/*Выборка.Следующий()*/)
				{
					if(true/*Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись И Выборка.ПорядокЗаписей = 3*/)
					{
						//ЗаполнитьЗначенияСвойств(СекцияПремии.Параметры,Выборка);
						//СекцияПремии.Параметры.МесяцРасчетногоПериода = Формат(СекцияПремии.Параметры.МесяцРасчетногоПериода,"ДФ='ММММ гггг ""г.""'");
						//СекцияПремии.Параметры.МесяцевПремии = ?(ЗначениеЗаполнено(СекцияПремии.Параметры.МесяцевПремии), "; за " + СекцияПремии.Параметры.МесяцевПремии + " мес.","");
						//ТабДокумент.Вывести(СекцияПремии);
						//ВыводитьПустуюСтрокуПремии = Ложь;
					}
				}
				if(true/*ВыводитьПустуюСтрокуПремии*/)
				{
					//СекцияПремии.Область(1,2,1,2).Текст = "";
					//ТабДокумент.Вывести(СекцияПремии);
				}
				/*// Итоги по расчету среднего заработка
*/
				//ЗаполнитьЗначенияСвойств(СекцияПодвал.Параметры,СтруктураПоказателей);
				//ТабДокумент.Вывести(СекцияПодвал);
			}
			return null;
		}
		// ПечатьРасчетаСреднегоЗаработка

		public object АнализУчтеннойВРасчетеСреднегоСкидки(/*ДокументОбъект*/)
		{
			//ТабДокумент = Новый ТабличныйДокумент;
			//ТабДокумент.ПолеСлева = 0;
			//ТабДокумент.ПолеСправа = 0;
			//ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АнализУчтеннойВРасчетеСреднегоСкидки";
			//ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
			/*// запоминаем области макета
*/
			//Макет = ПолучитьОбщийМакет("АнализУчтеннойВРасчетеСреднегоСкидки");
			//ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
			//ОбластьМакетаСтрока = Макет.ПолучитьОбласть("Месяц");
			//Организация = ДокументОбъект.Организация;
			//ФизЛицо = ДокументОбъект.ФизЛицо;
			//Сотрудник = ДокументОбъект.Сотрудник;
			//Дата = ДокументОбъект.Дата;
			//Запрос = Новый Запрос;
			/*// Начинаем формировать выходной документ
*/
			//ОбластьМакетаШапка.Параметры.Представление = ДокументОбъект.Метаданные().Синоним + " № " + ОбщегоНазначения.ПолучитьНомерНаПечать(ДокументОбъект) + " от " + Формат(Дата,"ДЛФ=DD");
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	Организации.НаименованиеПолное КАК НаименованиеОрганизации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка = &Организация";*/
			//Запрос.УстановитьПараметр("Организация", Организация);
			//Выборка = Запрос.Выполнить().Выбрать();
			if(true/*Выборка.Следующий()*/)
			{
				//ОбластьМакетаШапка.Параметры.НаименованиеОрганизации = СокрЛП(Выборка.НаименованиеОрганизации);
			}
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ФИОФизлица.Фамилия + "" "" + ФИОФизлица.Имя + "" "" + ФИОФизлица.Отчество, СотрудникиОрганизаций.Наименование) КАК ФИОРаботника
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ФизЛицо = &ФизЛицо) КАК ФИОФизлица
	|		ПО (ИСТИНА)
	|ГДЕ
	|	СотрудникиОрганизаций.Ссылка = &Сотрудник";*/
			//Запрос.УстановитьПараметр("Дата", Дата);
			//Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
			//Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо);
			//Выборка = Запрос.Выполнить().Выбрать();
			if(true/*Выборка.Следующий()*/)
			{
				//ЗаполнитьЗначенияСвойств(ОбластьМакетаШапка.Параметры,Выборка);
			}
			//ТабДокумент.Вывести(ОбластьМакетаШапка);
			/*// Шапка документа.
*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|ИЗ
	|	ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
	|ГДЕ
	|	СреднийЗаработокБазовыеВидыРасчета.Ссылка В (ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010))
	|	И СреднийЗаработокБазовыеВидыРасчета.ВидРасчета.КодДоходаСтраховыеВзносы В (ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.МатпомощьПрокуроров), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.МатпомощьПриРожденииРебенкаПрокуроров), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.Матпомощь), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.МатпомощьПриРожденииРебенка))";*/
			if(true/*Запрос.Выполнить().Пустой()*/)
			{
				//ТабДокумент.Вывести(Макет.ПолучитьОбласть("НетМатпомощи"));
			}
			//Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
			//Запрос.УстановитьПараметр("ДанныеДокумента", ДокументОбъект.РасчетСреднего.Выгрузить());
			//Запрос.УстановитьПараметр("парамДатаС", ДокументОбъект.ПериодРасчетаСреднегоЗаработкаНачало);
			//Запрос.УстановитьПараметр("парамДатаПо", КонецДня(ДокументОбъект.ПериодРасчетаСреднегоЗаработкаОкончание));
			//Запрос.УстановитьПараметр("ДатаЗакона213ФЗ",ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами());
			//Запрос.УстановитьПараметр("Организация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(РасчетСреднего.БазовыйПериодНачало, МЕСЯЦ) КАК Период,
	|	РасчетСреднего.Результат,
	|	РасчетСреднего.СкидкаПоСтраховымВзносам
	|ПОМЕСТИТЬ ВТДанныеДокумента
	|ИЗ
	|	&ДанныеДокумента КАК РасчетСреднего
	|ГДЕ
	|	РасчетСреднего.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010))
	|	И (РасчетСреднего.Результат <> 0
	|			ИЛИ РасчетСреднего.СкидкаПоСтраховымВзносам <> 0)";*/
			//Запрос.Выполнить();
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтраховыеВзносыСведенияОДоходахОбороты.Период КАК Период,
	|	СтраховыеВзносыСведенияОДоходахОбороты.СкидкаОборот КАК Скидка
	|ПОМЕСТИТЬ ВТДанныеУчетаСкидок
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыСведенияОДоходах.Обороты(
	|			&парамДатаС,
	|			&парамДатаПо,
	|			Месяц,
	|			ФизЛицо = &ФизЛицо
	|				И Организация = &Организация
	|				И ВидДохода В (ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.МатпомощьПрокуроров), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.МатпомощьПриРожденииРебенкаПрокуроров), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.Матпомощь), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.МатпомощьПриРожденииРебенка))) КАК СтраховыеВзносыСведенияОДоходахОбороты
	|ГДЕ
	|	СтраховыеВзносыСведенияОДоходахОбороты.Период >= &ДатаЗакона213ФЗ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ЕСНСведенияОДоходах.Период, МЕСЯЦ),
	|	СУММА(ЕСНСведенияОДоходах.Скидка)
	|ИЗ
	|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
	|ГДЕ
	|	ЕСНСведенияОДоходах.ФизЛицо = &ФизЛицо
	|	И ЕСНСведенияОДоходах.Организация = &Организация
	|	И ЕСНСведенияОДоходах.КодДоходаЕСН В (ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.Матпомощь), ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.МатпомощьПриРожденииРебенка))
	|	И ЕСНСведенияОДоходах.Период МЕЖДУ &парамДатаС И &парамДатаПо
	|	И ЕСНСведенияОДоходах.Период < &ДатаЗакона213ФЗ
	|	И ЕСНСведенияОДоходах.Скидка <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ЕСНСведенияОДоходах.Период, МЕСЯЦ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеУчетаСкидок.Период КАК Период
	|ПОМЕСТИТЬ ВТПериоды
	|ИЗ
	|	ВТДанныеУчетаСкидок КАК ДанныеУчетаСкидок
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ДанныеУчетаСкидок.Период
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеУчетаСкидок
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.Период КАК Период,
	|	ЕСТЬNULL(ДанныеУчетаСкидок.Скидка, 0) Скидка,
	|	ЕСТЬNULL(ДанныеДокумента.Результат, 0) КАК Результат,
	|	ЕСТЬNULL(ДанныеДокумента.СкидкаПоСтраховымВзносам, 0) СкидкаПоСтраховымВзносам
	|ИЗ
	|	ВТПериоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеДокумента КАК ДанныеДокумента
	|		ПО Периоды.Период = ДанныеДокумента.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеУчетаСкидок КАК ДанныеУчетаСкидок
	|		ПО Периоды.Период = ДанныеУчетаСкидок.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";*/
			//Результат = Запрос.Выполнить();
			if(true/*Результат.Пустой()*/)
			{
				//ТабДокумент.Вывести(Макет.ПолучитьОбласть("НетДанных"));
			}
			//ТабДокумент.Вывести(Макет.ПолучитьОбласть("Заголовок"));
			//Выборка = Результат.Выбрать();
			while(true/*Выборка.Следующий()*/)
			{
				//ЗаполнитьЗначенияСвойств(ОбластьМакетаСтрока.Параметры,Выборка);
				//ТабДокумент.Вывести(ОбластьМакетаСтрока);
			}
			return null;
		}
		// ПечатьАнализаСкидки()

		public object РасчетСреднегоЗаработкаПособий2011(/*ДокументОбъект, ВыводитьСамостоятельныйОтчет = Истина, СтруктураПоказателей = Неопределено, ОсобоеОписаниеОплачиваемогоПериода = ""*/)
		{
			//Ссылка = ДокументОбъект.Ссылка;
			//Организация = ДокументОбъект.Организация;
			//ФизЛицо = ДокументОбъект.ФизЛицо;
			//Сотрудник = ДокументОбъект.Сотрудник;
			//Дата = ДокументОбъект.Дата;
			//ДатаНачала = ДокументОбъект.ДатаНачала;
			//ДатаОкончания = ДокументОбъект.ДатаОкончания;
			//УчитыватьЗаработокПредыдущихСтрахователей = ДокументОбъект.УчитыватьЗаработокПредыдущихСтрахователей;
			//МетаданныеДокумента = ДокументОбъект.Метаданные();
			//ИмяДокумента = МетаданныеДокумента.Имя;
			//ДатаСобытия = ДокументОбъект.ДатаСобытия();
			//ОграничиватьЗаработок = ДокументОбъект.ПриНачисленииПособияИспользоватьОграниченныйЗаработок();
			//УчитываемыхДнейВКалендарныхГодах = ПроведениеРасчетов.УчитываемыхДнейДляРасчетаСреднегоЗаработкаПособий2011(ДокументОбъект);
			//ВыводитьИсключаемыеДни = ДокументОбъект.ЭтоПособиеПоМатеринству() И ДокументОбъект.ДатаНазначенияПособия() >= ПроведениеРасчетов.ДатаОтдельногоРасчетаПособийПоМатеринству();
			//ТабДокумент = Новый ТабличныйДокумент;
			//ТабДокумент.ПолеСлева = 0;
			//ТабДокумент.ПолеСправа = 0;
			//ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
			//ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасчетСреднегоЗаработкаПособийС2011Года";
			/*// запоминаем области макета
*/
			//Макет = ПолучитьОбщийМакет("РасчетСреднегоЗаработкаПособийС2011Года");
			//ОбластьМакетаШапка = Макет.ПолучитьОбласть("Заголовок");
			//ОбластьМакетаНеполноеВремя = Макет.ПолучитьОбласть("НеполноеВремя");
			//ОбластьМакетаОкончание = Макет.ПолучитьОбласть("Окончание");
			//ОбластьМакетаЗаголовокНачислений = Макет.ПолучитьОбласть("ЗаголовокНачислений");
			//ОбластьМакетаЗаголовокТаблицыДнейБолезниУходаЗаДетьми = Макет.ПолучитьОбласть("ЗаголовокТаблицыДнейБолезниУходаЗаДетьми");
			//ОбластьМакетаЗаголовокТаблицыСтрахователь = Макет.ПолучитьОбласть(?(ВыводитьИсключаемыеДни,"ЗаголовокТаблицыСтрахователь","ДлинныйЗаголовокТаблицыСтрахователь"));
			//ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицыСтрахователь");
			//ОбластьМакетаСтрокаДнейБолезниУходаЗаДетьми = Макет.ПолучитьОбласть("СтрокаЗаработкаДнейБолезниУходаЗаДетьми");
			//ОбластьМакетаСтрокаСтрахователь = Макет.ПолучитьОбласть(?(ВыводитьИсключаемыеДни,"СтрокаЗаработкаСтрахователь","ДлиннаяСтрокаЗаработкаСтрахователь"));
			if(true/*ОграничиватьЗаработок*/)
			{
				//ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицыНачало");
				//ОбластьМакетаСтрока = Макет.ПолучитьОбласть("СтрокаЗаработкаНачало");
				//ОбластьМакетаСередина = Макет.ПолучитьОбласть("Середина");
				//ОбластьМакетаТекущийИтог = Макет.ПолучитьОбласть("ТекущийИтог");
			}
			/*// Начинаем формировать выходной документ
*/
			//ОбластьМакетаСередина.Параметры.ДатаНачалаСобытия = Формат(ДатаСобытия, "ДФ=dd.MM.yyyy");
			//ОбластьМакетаШапка.Параметры.Представление = МетаданныеДокумента.Синоним + " № " + ОбщегоНазначения.ПолучитьНомерНаПечать(ДокументОбъект) + " от " + Формат(Дата,"ДЛФ=DD");
			//ОбластьМакетаШапка.Параметры.ОписаниеОплачиваемогоПериода = ?(ЗначениеЗаполнено(ОсобоеОписаниеОплачиваемогоПериода), ОсобоеОписаниеОплачиваемогоПериода, "с " + Формат(ДатаНачала, "ДФ=dd.MM.yyyy") + " по " + Формат(ДатаОкончания,"ДФ=dd.MM.yyyy"));
			//ОписаниеРасчетныхЛет = "Не указаны";
			//ВсегоСтрок = ДокументОбъект.ГодыРасчетаСреднего2011.Количество();
			if(true/*ВсегоСтрок = 2*/)
			{
				//ОписаниеРасчетныхЛет = Формат(ДокументОбъект.ГодыРасчетаСреднего2011[0].Год,"ЧЦ=4; ЧГ=0") + " и " + Формат(ДокументОбъект.ГодыРасчетаСреднего2011[1].Год,"ЧЦ=4; ЧГ=0");
			}
			//ОбластьМакетаШапка.Параметры.РасчетныеГоды = ОписаниеРасчетныхЛет;
			//Запрос = Новый Запрос;
			//Запрос.УстановитьПараметр("Организация", Организация);
			//Запрос.УстановитьПараметр("ДатаСобытия", ДатаСобытия);
			//Запрос.УстановитьПараметр("Дата", Дата);
			//Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
			//Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
			//Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо);
			//Запрос.УстановитьПараметр("Регистратор", Ссылка);
			//Запрос.УстановитьПараметр("ДатаЗакона213ФЗ", ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами());
			//Запрос.УстановитьПараметр("НаименованиеОрганизации", "");
			//Запрос.УстановитьПараметр("ВидРасчета", ОбщегоНазначенияЗК.ОсобыйЭлемент(ПланыВидовРасчета.СреднийЗаработок, "ПоЗаработкуПособийС2011"));
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	Организации.НаименованиеПолное КАК НаименованиеОрганизации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка = &Организация";*/
			//Выборка = Запрос.Выполнить().Выбрать();
			if(true/*Выборка.Следующий()*/)
			{
				//ОбластьМакетаШапка.Параметры.НаименованиеОрганизации = СокрЛП(Выборка.НаименованиеОрганизации);
				//Запрос.УстановитьПараметр("НаименованиеОрганизации", СокрЛП(Выборка.НаименованиеОрганизации));
			}
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	МинимальнаяОплатаТрудаРФСрезПоследних.Размер
	|ПОМЕСТИТЬ ВТРазмерММОТ
	|ИЗ
	|	РегистрСведений.МинимальнаяОплатаТрудаРФ.СрезПоследних(&ДатаСобытия, ) КАК МинимальнаяОплатаТрудаРФСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФИО.Фамилия,
	|	ФИО.Имя,
	|	ФИО.Отчество
	|ПОМЕСТИТЬ ВТФИО
	|ИЗ
	|	РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ФизЛицо = &ФизЛицо) КАК ФИО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РаботникиОрганизаций.ПериодЗавершения <= &ДатаСобытия
	|				И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВЫБОР
	|					КОГДА РаботникиОрганизаций.ГрафикРаботыЗавершения.СокращенноеРабочееВремя
	|							И РаботникиОрганизаций.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)
	|							И РаботникиОрганизаций.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели <> 0
	|						ТОГДА РаботникиОрганизаций.ГрафикРаботыЗавершения.ДлительностьРабочейНедели / РаботникиОрганизаций.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		КОГДА РаботникиОрганизаций.ГрафикРаботы.СокращенноеРабочееВремя
	|				И РаботникиОрганизаций.ГрафикРаботы.ГрафикПолногоРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)
	|				И РаботникиОрганизаций.ГрафикРаботы.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели <> 0
	|			ТОГДА РаботникиОрганизаций.ГрафикРаботы.ДлительностьРабочейНедели / РаботникиОрганизаций.ГрафикРаботы.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Доля
	|ПОМЕСТИТЬ ВТНеполноеВремя
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаСобытия, Сотрудник = &Сотрудник) КАК РаботникиОрганизаций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ФИОФизлица.Фамилия + "" "" + ФИОФизлица.Имя + "" "" + ФИОФизлица.Отчество, СотрудникиОрганизаций.Наименование) КАК ФИОРаботника,
	|	СотрудникиОрганизаций.Код КАК ТабельныйНомер,
	|	ЕСТЬNULL(НеполноеВремя.Доля, 1) КАК КоэффициентВремени,
	|	ЕСТЬNULL(МРОТ.Размер, 0) КАК МРОТ,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(МРОТ.Размер, 0) * ЕСТЬNULL(НеполноеВремя.Доля, 1) * 24 / 730 КАК ЧИСЛО(15, 2)) КАК СреднийМРОТ
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИО КАК ФИОФизлица
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерММОТ КАК МРОТ
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНеполноеВремя КАК НеполноеВремя
	|		ПО (ИСТИНА)
	|ГДЕ
	|	СотрудникиОрганизаций.Ссылка = &Сотрудник";*/
			//Выборка = Запрос.Выполнить().Выбрать();
			//КоэффициентВремени = 1;
			if(true/*Выборка.Следующий()*/)
			{
				//ЗаполнитьЗначенияСвойств(ОбластьМакетаШапка.Параметры,Выборка);
				//ЗаполнитьЗначенияСвойств(ОбластьМакетаСередина.Параметры,Выборка);
				//ЗаполнитьЗначенияСвойств(ОбластьМакетаНеполноеВремя.Параметры,Выборка);
				//ЗаполнитьЗначенияСвойств(ОбластьМакетаОкончание.Параметры,Выборка);
				//КоэффициентВремени = Выборка.КоэффициентВремени;
			}
			if(true/*ВыводитьСамостоятельныйОтчет*/)
			{
				//ТабДокумент.Вывести(ОбластьМакетаШапка);
				/*// Шапка документа.
*/
			}
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(РасчетСреднегоЗаработка.БазовыйПериодНачало, ГОД) < &ДатаЗакона213ФЗ
	|			ТОГДА &ДатаЗакона213ФЗ
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(РасчетСреднегоЗаработка.БазовыйПериодНачало, ГОД)
	|	КОНЕЦ КАК ДатаОграниченияЗаработка,
	|	ГОД(РасчетСреднегоЗаработка.БазовыйПериодНачало) КАК РасчетныйГод
	|ПОМЕСТИТЬ ВТДанныеРасчетаСреднего2011
	|ИЗ
	|	РегистрРасчета.РасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
	|ГДЕ
	|	РасчетСреднегоЗаработка.Регистратор = &Регистратор
	|	И РасчетСреднегоЗаработка.ВидРасчета = &ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ПредельнаяВеличинаБазыСтраховыхВзносов.Размер, 0) КАК Размер,
	|	ДатыРегистра.РасчетныйГод
	|ПОМЕСТИТЬ ВТПредельнаяВеличинаЗаработкаПоГодам
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ДанныеРегистра.РасчетныйГод КАК РасчетныйГод,
	|		ДанныеРегистра.ДатаОграниченияЗаработка КАК ДатаОграниченияЗаработка,
	|		МАКСИМУМ(ПредельнаяВеличинаБазыСтраховыхВзносов.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТДанныеРасчетаСреднего2011 КАК ДанныеРегистра
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредельнаяВеличинаБазыСтраховыхВзносов КАК ПредельнаяВеличинаБазыСтраховыхВзносов
	|			ПО ДанныеРегистра.ДатаОграниченияЗаработка >= ПредельнаяВеличинаБазыСтраховыхВзносов.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистра.ДатаОграниченияЗаработка,
	|		ДанныеРегистра.РасчетныйГод) КАК ДатыРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредельнаяВеличинаБазыСтраховыхВзносов КАК ПредельнаяВеличинаБазыСтраховыхВзносов
	|		ПО ДатыРегистра.ПериодРегистра = ПредельнаяВеличинаБазыСтраховыхВзносов.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.РасчетныйГод КАК РасчетныйГод,
	|	ДанныеДокумента.Заработок КАК Заработок,
	|	ДанныеДокумента.ДнейБолезниУходаЗаДетьми,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Страхователь = ЗНАЧЕНИЕ(Справочник.Работодатели.ТекущийРаботодатель)
	|			ТОГДА &НаименованиеОрганизации
	|		ИНАЧЕ ДанныеДокумента.Страхователь.Наименование
	|	КОНЕЦ КАК Страхователь,
	|	ЕСТЬNULL(ПредельнаяВеличина.Размер, 0) КАК ПредельнаяВеличина
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту.РасчетСреднего2011 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредельнаяВеличинаЗаработкаПоГодам КАК ПредельнаяВеличина
	|		ПО ДанныеДокумента.РасчетныйГод = ПредельнаяВеличина.РасчетныйГод
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	РасчетныйГод,
	|	Страхователь
	|ИТОГИ
	|	СУММА(Заработок),
	|	МАКСИМУМ(ПредельнаяВеличина)
	|ПО
	|	РасчетныйГод";*/
			//ТабДокумент.Вывести(ОбластьМакетаЗаголовокНачислений);
			//ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
			if(true/*ВыводитьИсключаемыеДни*/)
			{
				//ТабДокумент.Присоединить(ОбластьМакетаЗаголовокТаблицыДнейБолезниУходаЗаДетьми);
			}
			if(true/*УчитыватьЗаработокПредыдущихСтрахователей*/)
			{
				//ТабДокумент.Присоединить(ОбластьМакетаЗаголовокТаблицыСтрахователь);
			}
			//ВсегоЗаработка = 0;
			//СтрокиВыводили = Ложь;
			//Запрос.Текст = СтрЗаменить(Запрос.Текст, "Документ.НачислениеПоБольничномуЛисту", "Документ." + ИмяДокумента);
			//Выборка = Запрос.Выполнить().Выбрать();
			while(true/*Выборка.Следующий()*/)
			{
				if(true/*Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке*/)
				{
					if(true/*СтрокиВыводили*/)
					{
						//ТабДокумент.Вывести(ОбластьМакетаТекущийИтог);
					}
					//ЗаполнитьЗначенияСвойств(ОбластьМакетаТекущийИтог.Параметры,Выборка);
					if(true/*ОграничиватьЗаработок*/)
					{
						//ВсегоЗаработка = ВсегоЗаработка + Мин(Выборка.ПредельнаяВеличина, Выборка.Заработок);
					}
				}
			}
			/*;
	ТабДокумент.Вывести(ОбластьМакетаТекущийИтог);*/
			//ОбластьМакетаСередина.Параметры.ВсегоЗаработка = Формат(ВсегоЗаработка, "ЧЦ=15; ЧДЦ=2; ЧН=0.00");
			//ОбластьМакетаСередина.Параметры.УчитываемыхДнейВКалендарныхГодах = УчитываемыхДнейВКалендарныхГодах;
			//ОбластьМакетаСередина.Параметры.Средний = Формат(Окр(ВсегоЗаработка / УчитываемыхДнейВКалендарныхГодах, 2), "ЧЦ=15; ЧДЦ=2; ЧН=0.00");
			//ТабДокумент.Вывести(ОбластьМакетаСередина);
			if(true/*КоэффициентВремени < 1*/)
			{
				//ТабДокумент.Вывести(ОбластьМакетаНеполноеВремя);
			}
			if(true/*ВыводитьСамостоятельныйОтчет*/)
			{
				//ТабДокумент.Вывести(ОбластьМакетаОкончание);
			}
			//СтруктураПоказателей = Новый Структура("Средний, ЗаработокВсего", Окр(ВсегоЗаработка / УчитываемыхДнейВКалендарныхГодах, 2), ВсегоЗаработка);
			return null;
		}
		// ПечатьАнализаСкидки()
		// Для переданного документа формирует печатную форму Т-13
		//
		// Параметры
		//  ДокументОбъект
		//	СписокСотрудников
		//
		// Возвращаемое значение:
		//   табличный документ
		//

		public object СформироватьПечатнуюФормуТ13(/*ДокументОбъект, СписокСотрудников*/)
		{
			//Организация = ДокументОбъект.Организация;
			//ПодразделениеОрганизации = ДокументОбъект.ПодразделениеОрганизации;
			//ФильтрСоответствия = Новый Соответствие;
			//ФильтрСоответствия.Вставить("Организация", Организация);
			//ФильтрСоответствия.Вставить("Подразделение", ПодразделениеОрганизации);
			//ФильтрСоответствия.Вставить("ОтборОрганизации", ЗначениеЗаполнено(Организация));
			//ФильтрСоответствия.Вставить("ОтборПодразделения", ЗначениеЗаполнено(ПодразделениеОрганизации));
			//ФильтрСоответствия.Вставить("ВидСравненияОрганизации", ВидСравнения.Равно);
			//ФильтрСоответствия.Вставить("ВидСравненияПодразделения", ВидСравнения.ВИерархии);
			if(true/*ДокументОбъект.Метаданные().Реквизиты.Найти("ДатаНачалаПериода") <> Неопределено*/)
			{
				//ФильтрСоответствия.Вставить("ДатаНачала", ДокументОбъект.ДатаНачалаПериода);
				//ФильтрСоответствия.Вставить("ДатаОкончания", ДокументОбъект.ДатаОкончанияПериода);
			}
			//ФильтрСоответствия.Вставить("ДатаЗаполнения",    ДокументОбъект.Дата);
			//ФильтрСоответствия.Вставить("НомерДокумента",    ДокументОбъект.Номер);
			//ФильтрСоответствия.Вставить("ОтветственноеЛицо", ДокументОбъект.Ответственный);
			if(true/*СписокСотрудников.Количество() = 1*/)
			{
				//ФильтрСоответствия.Вставить("Работник", СписокСотрудников[0]);
				//ФильтрСоответствия.Вставить("ВидСравненияРаботника", ВидСравнения.Равно);
				//ФильтрСоответствия.Вставить("ОтборРаботника", Истина);
			}
			//ТабДокумент = Новый ТабличныйДокумент;
			//ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Т13";
			//ТабДокумент.АвтоМасштаб        = Истина;
			//ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			//ТабДокумент.Очистить();
			//Отчет = Отчеты.УнифицированнаяФормаТ13.Создать();
			//Отчет.УстановитьФильтр(ФильтрСоответствия);
			//ТекстОшибки = "";
			//Отчет.СформироватьОтчет(ТабДокумент, "Табель", ТекстОшибки);
			if(true/*ТекстОшибки <> ""*/)
			{
				//РаботаСДиалогами.ВывестиПредупреждение(ТекстОшибки);
			}
			return null;
		}
		// СформироватьПечатнуюФорму()
		////////////////////////////////////////////////////////////////////////////////

		public void ПеренестиПорядок(/*Настройки, Структура*/)
		{
			//ТиповыеОтчеты.СкопироватьЭлементы(Настройки.Порядок, Структура.Порядок, , ложь);
			//Структура.Порядок.Элементы.Очистить();
			//Структура.Порядок.Элементы.Добавить(Тип("АвтоЭлементПорядкаКомпоновкиДанных"));
			if(true/*Структура.Структура.Количество() <> 0*/)
			{
				//ПеренестиПорядок(Настройки, Структура.Структура[0]);
			}
		}
		//ПеренестиУпорядочивание()
		// Копирует упорядочивания из элемента структуры настройки СКД в отчет
		//
		// Параметры:
		//  Настройка - настройки схемы компоновки данных
		//

		public void ПеренестиПорядокВОтчет(/*Настройки*/)
		{
			if(true/*Настройки.Структура.Количество() <> 0*/)
			{
				if(true/*ТипЗнч(Настройки.Структура[0]) = Тип("ТаблицаКомпоновкиДанных")*/)
				{
					if(true/*Настройки.Структура[0].Строки.Количество() <> 0*/)
					{
						//ПеренестиПорядок(Настройки, Настройки.Структура[0].Строки[0]);
					}
					if(true/*Настройки.Структура[0].Колонки.Количество() <> 0*/)
					{
						//ПеренестиПорядок(Настройки, Настройки.Структура[0].Колонки[0]);
						//ПеренестиПорядок(Настройки, Настройки.Структура[0].Колонки[1]);
						//ПеренестиПорядок(Настройки, Настройки.Структура[0].Колонки[2]);
					}
				}
			}
		}
	}
}
