using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace V82.ОбщиеМодули
{
	public partial class ЭлектронныеДокументыОператорыЭДО
	{
		////////////////////////////////////////////////////////////////////////////////
		// ЭлектронныеДокументыОператорыЭДО: механизм обмена электронными документами.
		//
		////////////////////////////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////////////////
		// ПРОГРАММНЫЙ ИНТЕРФЕЙС
		// Функция получает сертификат подписи.
		//
		// Параметры:
		//  СсылкаНаЭД - Ссылка - ссылка на электронный документ
		//  ИмяВидаЭД  - перечисление - вид электронного документа
		//
		// Возвращаемое значение:
		//   СертификатПодписи   - Сертификат подписи
		//

		public object ОпределитьСертификатПодписиСлужебногоДокумента(/*СсылкаНаЭД, ИмяВидаЭД*/)
		{
			return null;
		}
		// Функция определяет по переданным параметрам документ в информационной базе.
		//
		// Параметры:
		//  Параметры  - структура - структура параметров для определения документа
		//
		// Возвращаемое значение:
		//  ВозвращаемыйПараметр - ссылка на документ
		//

		public object ОпределитьДокументПоПараметрам(/*Параметры*/)
		{
			return null;
		}
		////////////////////////////////////////////////////////////////////////////////
		// Работа с извещением о получении
		// Формирует пакет электронных документов.
		//
		// Параметры:
		//  ТекСтрокаПЭД  - таблица значений - перечень электронных документов для включения в пакет
		//
		// Возвращаемое значение:
		//  КонтейнерСформирован - Булево (Истина - извещение сформировано, иначе Ложь)
		//

		public object СформироватьЭДПрисоединенныйФайлПакетаОператораЭДО(/*ТекСтрокаПЭД*/)
		{
			return null;
		}
		////////////////////////////////////////////////////////////////////////////////
		// Отправка ЭД
		// Функция выполняет отправку файлов, находящихся в каталоге "АдресКаталогаОтправки".
		//
		// Параметры:
		//  Соглашение                  - элемент справочника "СоглашенияОбИспользованииЭД";
		//  АдресКаталогаОтправки       - строка, полный путь к каталогу с передаваемыми файлами;
		//  АдресРесурса                - строка, адрес веб-сервиса;
		//  ПарольКСертификатуОператора - строка, пароль к сертификату.
		//
		// Возвращаемое значение:
		//  РезультатОтправки - Число (количество отправленных документов)
		//

		public object ОтправитьЧерезОператораЭДО(/*Соглашение, АдресКаталогаОтправки, АдресРесурса, ПарольКСертификату, ФлагОтладки = Ложь*/)
		{
			return null;
		}
		////////////////////////////////////////////////////////////////////////////////
		// Получение ЭД
		// Получить новые электронные документы от Такском
		//
		// Параметры:
		//  СтруктураВозврата - структура с полями: "ПараметрыРаспаковки, МассивВозврата, ВызватьОповещение"
		//  СоответствиеПаролейДляЭДО - структура - соответствие паролей для ЭДО
		//  ПолучитьВесьСписок - получить список ЭД без ограничения выборки по дате
		//

		public void ПолучитьНовыеЭДОператораЭДО(/*СтруктураВозврата, СоответствиеПаролейДляЭДО, ПолучитьВесьСписок = Ложь*/)
		{
			/*ЭлектронныеДокументы1СТакскомСлужебный.ПолучитьНовыеЭДОператорТакском(СтруктураВозврата, СоответствиеПаролейДляЭДО,
		ПолучитьВесьСписок);*/
		}
		// Получить новые электронные документы от Такском
		//
		// Параметры:
		//  Соглашение - СправочникСсылка.СоглашенияОбИспользованииЭД - исходное соглашение
		//  АдресРесурса - строка - адрес ресурса
		//  ПарольКСертификату - строка - пароль к сертификату
		//  ДатаПоследнегоЗапроса - дата - дата последнего запроса
		//
		// Возвращаемое значение:
		//  СписокЭД_XML - список электронных документов
		//

		public object ПолучитьЧерезОператораЭДО(/*Соглашение, АдресРесурса, ПарольКСертификату, ДатаПоследнегоЗапроса = ""*/)
		{
			return null;
		}
		////////////////////////////////////////////////////////////////////////////////
		// Изменение статусов ЭД пакета
		// Обновляет статусы электронных документов для переданного пакета.
		//
		// Параметры:
		//  ПакетЭД  - таблица значений - список электронных документов
		//  НовыйСтатусПакета  - Перечисления.СтатусыЭД - статус пакета электронных документов
		//  ДатаИзменения  - дата - дата последнего изменения
		//

		public void ОбновитьСтатусыДокументовПакетаЭДО(/*ПакетЭД, НовыйСтатусПакета, ДатаИзменения*/)
		{
			//ЭлектронныеДокументы1СТакскомСлужебный.ОбновитьСтатусыДокументовПакетаЭДТакском(ПакетЭД, НовыйСтатусПакета, ДатаИзменения);
		}
		////////////////////////////////////////////////////////////////////////////////
		// Приглашения к обмену
		// Читает запрос приглашений от оператора ЭДО.
		//
		// Параметры:
		//  ИмяФайла  - строка - имя файла
		//  ТаблицаКонтрагентов  - таблица значений - список контрагентов
		//

		public void ПрочитатьЗапросПриглашенияОператораЭДО(/*ИмяФайла, ТаблицаКонтрагентов*/)
		{
			//ЭлектронныеДокументы1СТакскомСлужебный.ПрочитатьЗапросПриглашенияТакском(ИмяФайла, ТаблицаКонтрагентов);
		}
		// Отправляет запрос приглашений оператора ЭДО.
		//
		// Параметры:
		//  ТаблицаОбработки  - Таблица значений - таблица приглашений
		//                      продолжение описания параметра
		//  СтруктураДопПараметров  - структура - перечень дополнительных параметров
		//
		// Возвращаемое значение:
		//  ИмяФайла - Строка, имя файла либо пустая
		//

		public object ИсходящийЗапросПриглашенияОператораЭДО(/*ТаблицаОбработки, СтруктураДопПараметров*/)
		{
			return null;
		}
		////////////////////////////////////////////////////////////////////////////////
		// Распаковка пакетов электронных документов
		// Возвращает массив двоичных данных содержимого пакета электронных документов.
		//
		// Параметры:
		// ПакетЭД             - ДокументСсылка.ПакетЭД - исследуемый пакет электронных документов,
		// ПапкаДляРаспаковки  - строка - пусть к папке,
		// ПараметрыШифрования - Структура, настройки шифрования, применимые к данному пакету электронных документов.
		//
		// Возвращаемое значение:
		//  СтруктураВозврата - массив двоичных данных.
		//

		public object ВернутьМассивДвоичныхДанныхПакетаОператораЭДО(/*ПакетЭД, ПапкаДляРаспаковки, ПараметрыШифрования*/)
		{
			return null;
		}
		////////////////////////////////////////////////////////////////////////////////
		// Настройки оператора ЭДО
		// Формирует структуру настроек для оператора ЭДО
		//
		// Возвращаемое значение:
		//  СтруктураНастроек   - структура настроек оператора ЭДО.
		//

		public object СтруктураНастроекОператораЭДО(/**/)
		{
			return null;
		}
		////////////////////////////////////////////////////////////////////////////////
		// Формирование контейнера
		// Формирует по переданной структуре имя файла.
		//
		// Параметры:
		//  СтруктураИмени  - структура - структура имени
		//
		// Возвращаемое значение:
		//  ИмяФайла - имя сформированного файла.
		//

		public object ФНСИмяФайла(/*СтруктураИмени*/)
		{
			return null;
		}
		////////////////////////////////////////////////////////////////////////////////
		// Обмен с оператором ЭДО
		// Проводит тест связи с оператором ЭДО.
		//
		// Параметры:
		//  Соглашение  - Справочник.СоглашенияОбИспользованииЭД - соглашение на обмен с оператором
		//  ПарольКСертификатуОператора  - строка - пароль к сертификату оператора
		//

		public void ТестСвязиСОператоромЭДО(/*Соглашение, ПарольКСертификатуОператора = Неопределено*/)
		{
			//ЭлектронныеДокументы1СТакскомСлужебный.ТестСвязиСТакском(Соглашение, ПарольКСертификатуОператора);
		}
	}
}

