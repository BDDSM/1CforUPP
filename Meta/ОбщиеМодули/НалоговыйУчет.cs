using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace V82.ОбщиеМодули
{
	public partial class НалоговыйУчет
	{
		//Процедуры открытия регистра списания ТМЦ
		//Процедура открывает отчет "РегистрУчетаСтоимостиСписанныхТМЦ"
		//Вызывается из интерфейсов "Полный" и "Бухгалтерский и налоговый учет"
		//	(пункт меню "Регистр учета стоимости товаров, списанных в отчетном периоде")

		public void ОткрытьРегистрСписанияТоваров(/**/)
		{
			/*Отчет = Отчеты.РегистрУчетаСтоимостиСписанныхТМЦ.Создать();*/
			/*Отчет.ВидТМЦ = 0;*/
			/*Отчет.ПолучитьФорму().Открыть();*/
		}
		//Процедура открывает отчет "РегистрУчетаСтоимостиСписанныхТМЦ"
		//Вызывается из интерфейсов "Полный" и "Бухгалтерский и налоговый учет"
		//	(пункт меню "Регистр учета стоимости материалов, списанных в отчетном периоде")

		public void ОткрытьРегистрСписанияМатериалов(/**/)
		{
			/*Отчет = Отчеты.РегистрУчетаСтоимостиСписанныхТМЦ.Создать();*/
			/*Отчет.ВидТМЦ = 1;*/
			/*Отчет.ПолучитьФорму().Открыть();*/
		}
		//Процедура открывает отчет "РегистрУчетаСтоимостиСписанныхТМЦ"
		//Вызывается из интерфейсов "Полный" и "Бухгалтерский и налоговый учет"
		//	(пункт меню "Регистр учета стоимости продукции, списанной в отчетном периоде")

		public void ОткрытьРегистрСписанияПродукции(/**/)
		{
			/*Отчет = Отчеты.РегистрУчетаСтоимостиСписанныхТМЦ.Создать();*/
			/*Отчет.ВидТМЦ = 2;*/
			/*Отчет.ПолучитьФорму().Открыть();*/
		}
		//Процедура открывает отчет "РегистрУчетаСтоимостиСписанныхТМЦ"
		//Вызывается из интерфейсов "Полный" и "Бухгалтерский и налоговый учет"
		//	(пункт меню "Регистр учета стоимости полуфабрикатов, списанных в отчетном периоде")

		public void ОткрытьРегистрСписанияПолуфабрикатов(/**/)
		{
			/*Отчет = Отчеты.РегистрУчетаСтоимостиСписанныхТМЦ.Создать();*/
			/*Отчет.ВидТМЦ = 3;*/
			/*Отчет.ПолучитьФорму().Открыть();*/
		}

		public void ОпределитьВидУчетаПоПБУ18(/*Значение, мВидУчета, ОтразитьНеПринимаемыеРасходы*/)
		{
			if(true/*ТипЗнч(Значение) = Тип("СправочникСсылка.СтатьиЗатрат") И Не Значение.ЭтоГруппа*/)
			{
				if(true/*Значение.ВидРасходовНУ = Перечисления.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения*/)
				{
					/*мВидУчета = Перечисления.ВидыУчетаПоПБУ18.ПР;*/
					/*ОтразитьНеПринимаемыеРасходы = Истина;*/
				}
			}
		}
		//Определяет вид учета для проводки по налоговому учету

		public void ВидУчетаПоПБУ18(/*Проводка, ОтразитьНеПринимаемыеРасходы = Ложь, ПоддержкаПБУ18 = Ложь*/)
		{
			/*ВидУчетаДт = ?(ЗначениеЗаполнено(Проводка.ВидУчетаДт), Проводка.ВидУчетаДт, Перечисления.ВидыУчетаПоПБУ18.НУ);*/
			/*ВидУчетаКт = ?(ЗначениеЗаполнено(Проводка.ВидУчетаКт), Проводка.ВидУчетаКт, Перечисления.ВидыУчетаПоПБУ18.НУ);*/
			if(true/*ЗначениеЗаполнено(Проводка.СчетДт)*/)
			{
				/*Проводка.ВидУчетаДт = ВидУчетаДт;*/
			}
			if(true/*ЗначениеЗаполнено(Проводка.СчетКт)*/)
			{
				/*Проводка.ВидУчетаКт = ВидУчетаКт;*/
			}
		}
		// ВидУчетаПоПБУ18

		public object ОпределитьНеПринимаемыеДоходыРасходы(/*Проводка*/)
		{
			if(true/*Не Проводка.СчетКт = ПланыСчетов.Налоговый.ПустаяСсылка() И Проводка.СчетКт.ПринадлежитЭлементу(ПланыСчетов.Налоговый.ПрочиеДоходы)*/)
			{
			}
			/*СписокСчетовКосвенныхРасходов = ПолучитьСчетаУчетаКосвенныхРасходов();*/
			return null;
		}

		public object ПолучитьСчетаУчетаКосвенныхРасходов(/**/)
		{
			/*СчетаЗатрат = Новый СписокЗначений;*/
			/*СчетаЗатрат.Добавить(ПланыСчетов.Налоговый.КосвенныеРасходыОсновногоПроизводства);*/
			/*СчетаЗатрат.Добавить(ПланыСчетов.Налоговый.КосвенныеОбщепроизводственныеРасходы);*/
			/*СчетаЗатрат.Добавить(ПланыСчетов.Налоговый.КосвенныеРасходыВспомогательныхПроизводств);*/
			/*СчетаЗатрат.Добавить(ПланыСчетов.Налоговый.КосвенныеРасходыОбслуживающихПроизводств);*/
			/*СчетаЗатрат.Добавить(ПланыСчетов.Налоговый.КосвенныеРасходыПоВыявленномуБраку);*/
			/*СчетаЗатрат.Добавить(ПланыСчетов.Налоговый.РасходыНаПродажу);*/
			/*СчетаЗатрат.Добавить(ПланыСчетов.Налоговый.КосвенныеОбщехозяйственныеРасходы);*/
			return null;
		}

		public object ОпределитьСчетНУВШапке(/*Организация, Дата, СчетБУ, Субконто1, Субконто2 = Неопределено, Субконто3 = Неопределено*/)
		{
			if(true/*НалоговыйУчетУСН.ПрименениеУСН(Организация, Дата)*/)
			{
			}
			/*СписокСубконто = Новый Массив;*/
			/*СписокСубконто.Добавить(Субконто1);*/
			if(true/*Не Субконто2 = Неопределено*/)
			{
				/*СписокСубконто.Добавить(Субконто2);*/
			}
			if(true/*Не Субконто3 = Неопределено*/)
			{
				/*СписокСубконто.Добавить(Субконто3);*/
			}
			if(true/*Лев(СчетБУ.Код, 2) = "91"*/)
			{
				/*ВидЗатрат = ОпределитьВидПрочихДоходовИРасходов(СписокСубконто);*/
			}
			/*СчетУчетаНУ = БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ВидЗатратНУ", СчетБУ, ВидЗатрат), "НУ", Дата);*/
			if(true/*ЗначениеЗаполнено(СчетУчетаНУ)*/)
			{
			}
			return null;
		}

		public object ПолучитьСтавкуНалогаНаПрибыль(/*СтруктураШапкиДокумента, СтавкаФБ = 0, СтавкаРФ = 0, СтавкаМестный = 0*/)
		{
			/*Отбор = Новый Структура("Организация", СтруктураШапкиДокумента.Организация);*/
			/*СтавкиНалога = РегистрыСведений.СтавкиНалогаНаПрибыль.ПолучитьПоследнее(СтруктураШапкиДокумента.Дата, Отбор);*/
			/*СтавкаНалога = (СтавкиНалога.СтавкаФБ + СтавкиНалога.СтавкаСубъектРФ + СтавкиНалога.СтавкаМестный) / 100;*/
			/*СтавкаФБ        = СтавкиНалога.СтавкаФБ / 100;*/
			/*СтавкаРФ        = СтавкиНалога.СтавкаСубъектРФ / 100;*/
			/*СтавкаМестный   = СтавкиНалога.СтавкаМестный / 100;*/
			return null;
		}
		// ПолучитьСтавкуНалогаНаПрибыль()
		// Процедура устанавливает в строке табличной части для счета бухгалтерского учета соответствующий счет налогового учета
		// по данным регистра СоответствиеСчетовБУиНУ.
		//
		// Параметры:
		//  СтрокаТабличнойЧасти - строка, данные которой анализируются и в которой заполняется счет
		//  УчитыватьЗначенияСубконто - если Истина, то
		//    - в переданной строке должны быть реквизиты вида СубконтоХ
		//    - их данным получен Вид затрат налогового учета и выбран счет НУ, соответствующий этому виду затрат.
		//  ИмяСчетаЗатрат - имя реквизита, в котором счет затрат БУ
		//  ИмяСчетаЗатратНУ - имя реквизита, в котором счет затрат НУ
		//  ЗаполнятьТолькоЕслиСчетЗависитОтСубконто - имеет смысл только если учитывается значение субконто.
		//    Флагом определяется, что счет налогового учета будет изменен только если задано субконто подходящего вида (влияющее на выбор счета).
		//    Рекомендуется передавать Истина, если счет мог быть назначен ранее, а сейчас пользователь изменил субконто

		public void ЗаполнитьСчетНалоговогоУчетаВСтрокеТабличногоПоля(/*СтрокаТабличнойЧасти, УчитыватьЗначенияСубконто = Ложь, ИмяСчетаЗатрат = "СчетЗатрат", ИмяСчетаЗатратНУ = "СчетЗатратНУ", ЗаполнятьТолькоЕслиСчетЗависитОтСубконто = Истина*/)
		{
			/*СчетЗатрат = СтрокаТабличнойЧасти[ИмяСчетаЗатрат];*/
			if(true/*НЕ УчитыватьЗначенияСубконто*/)
			{
				/*СчетЗатратНУ = БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ", СчетЗатрат));*/
			}
			if(true/*ЗначениеЗаполнено(СчетЗатратНУ) И НЕ СчетЗатратНУ.ЗапретитьИспользоватьВПроводках*/)
			{
				/*СтрокаТабличнойЧасти[ИмяСчетаЗатратНУ] = СчетЗатратНУ;*/
			}
		}
		// ЗаполнитьСчетНалоговогоУчетаВСтрокеТабличногоПоля()

		public void ЗаполнитьСчетНалоговогоУчетаВДокументе(/*ШапкаИлиСтрока, УчетВидаЗатрат = ЛОЖЬ, СтруктураЗатрат = Неопределено, Знач ТекущаяДата = Неопределено*/)
		{
			if(true/*СтруктураЗатрат = Неопределено*/)
			{
				/*СтруктураЗатрат = Новый Структура("Счет,Субконто1,Субконто2,Субконто3,СчетНУ","СчетЗатрат","Субконто1","Субконто2","Субконто3","СчетЗатратНУ");*/
			}
			/*ВидЗатратНУ = Перечисления.ВидыРасходовНУ.ПустаяСсылка();*/
			if(true/*УчетВидаЗатрат*/)
			{
				if(true/*ТипЗнч(ШапкаИлиСтрока[СтруктураЗатрат.Субконто1]) = Тип("СправочникСсылка.СтатьиЗатрат")*/)
				{
					/*ВидЗатратНУ = ШапкаИлиСтрока[СтруктураЗатрат.Субконто1].ВидРасходовНУ;*/
				}
			}
			if(true/*ЗначениеЗаполнено(ВидЗатратНУ)*/)
			{
				/*ШапкаИлиСтрока[СтруктураЗатрат.СчетНУ] = БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ВидЗатратНУ", ШапкаИлиСтрока[СтруктураЗатрат.Счет], ВидЗатратНУ), , ТекущаяДата);*/
				if(true/*Не ЗначениеЗаполнено(ШапкаИлиСтрока[СтруктураЗатрат.СчетНУ])*/)
				{
					/*ШапкаИлиСтрока[СтруктураЗатрат.СчетНУ] = БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ", ШапкаИлиСтрока[СтруктураЗатрат.Счет]), , ТекущаяДата);*/
				}
			}
		}
		// ЗаполнитьСчетНалоговогоУчетаВДокументе()
		// Выполняет расчет постоянных и временных разниц в оценке амортизации имущества
		//

		public void РасчетРазницПоАмортизации(/*СтруктураШапкиДокумента, Актив, Объект, ТаблицаАмортизации, ТабЗатрат, ТаблицаАмортизацииБУ*/)
		{
			/*ТаблицаАмортизации.Колонки.Добавить("СуммаПР", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));*/
			/*ТаблицаАмортизации.Колонки.Добавить("СуммаБУ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));*/
			/*ТаблицаАмортизации.Колонки.Добавить("СуммаВР", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));*/
			if(true/*ТаблицаАмортизации = Неопределено*/)
			{
			}
			if(true/*Актив = "ОС"*/)
			{
				/*Массив = Новый Массив;*/
				/*Массив.Добавить(ПланыСчетов.Хозрасчетный.ОсновныеСредства);*/
				/*Массив.Добавить(ПланыСчетов.Хозрасчетный.ДоходныеВложенияВ_МЦ);*/
				/*СчетУчетаБУ       = Массив;*/
				/*Массив = Новый Массив;*/
				/*Массив.Добавить(ПланыСчетов.Налоговый.ОсновныеСредства);*/
				/*Массив.Добавить(ПланыСчетов.Налоговый.ДоходныеВложенияВ_МЦ);*/
				/*СчетУчетаНУ       =  Массив;*/
				/*СчетАмортизацииБУ = ПланыСчетов.Хозрасчетный.АмортизацияОсновныхСредств;*/
				/*СчетАмортизацииНУ = ПланыСчетов.Налоговый.АмортизацияОсновныхСредств;*/
			}
			if(true/*НЕ ЗначениеЗаполнено(Объект)*/)
			{
				/*ОбъектЕсть = Ложь;*/
			}
			/*мНачДата    = НачалоМесяца(СтруктураШапкиДокумента.Дата);*/
			/*мКонДата    = КонецМесяца (СтруктураШапкиДокумента.Дата);*/
			if(true/*ТабЗатрат = Неопределено*/)
			{
				/*ТаблицаЗатрат = Новый ТаблицаЗначений;*/
				/*ТаблицаЗатрат.Колонки.Добавить("ОбъектУчета");*/
				/*ТаблицаЗатрат.Колонки.Добавить("Сумма");*/
			}
			/*ТаблицаЗатрат.Колонки.Добавить("СуммаНУ");*/
			/*ТаблицаЗатрат.Колонки.Добавить("Счет02");*/
			/*мКэшСчетов = Новый Соответствие;*/
			/*ТаблицаЗатрат.Свернуть("ОбъектУчета,Счет02","Сумма,СуммаНУ");*/
			/*Запрос = Новый Запрос;*/
			if(true/*Актив = "ОС"*/)
			{
				/*Запрос.УстановитьПараметр("ВидСубконто",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);*/
				/*Запрос.Текст = "ВЫБРАТЬ
		               |	НалоговыйОстатки.Субконто1 КАК Субконто1,
		               |	0 КАК Сумма01БУ,
		               |	СУММА(НалоговыйОстатки.СуммаОстатокДт) КАК Сумма01НУ,
		               |	0 КАК Сумма01ПР,
		               |	0 КАК Сумма02,
		               |	0 КАК Сумма01ПРпоРБ
		               |ИЗ
		               |	РегистрБухгалтерии.Налоговый.Остатки(
		               |			&КонДата,
		               |			Счет В ИЕРАРХИИ (&Счет01НУ)
		               |				И (НЕ Счет = &Счет0109НУ),
		               |			&ВидСубконто,
		               |			Организация = &Организация
		               |				И ВидУчета = &ВидУчетаНУ) КАК НалоговыйОстатки
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	НалоговыйОстатки.Субконто1
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство,
		               |	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.СтоимостьДляВычисленияАмортизации,
		               |	0,
		               |	0,
		               |	0,
		               |	0
		               |ИЗ
		               |	РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СрезПоследних(&НачДата, Организация = &Организация) КАК ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.ОсновноеСредство,
		               |	0,
		               |	0,
		               |	ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.ПРДляВычисленияАмортизации,
		               |	0,
		               |	0
		               |ИЗ
		               |	РегистрСведений.ПараметрыАмортизацииОСНалоговыйУчет.СрезПоследних(&НачДата, Организация = &Организация) КАК ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних
		               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		               |			ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		               |			ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.АмортизацияДо2002 КАК АмортизацияДо2002
		               |		ИЗ
		               |			РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет.СрезПоследних(&НачДата, Организация = &Организация) КАК ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних) КАК ПРдо2002года
		               |		ПО ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.ОсновноеСредство = ПРдо2002года.ОсновноеСредство
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	НалоговыйОбороты.Субконто1,
		               |	0,
		               |	0,
		               |	0,
		               |	СУММА(НалоговыйОбороты.СуммаОборотКт),
		               |	0
		               |ИЗ
		               |	РегистрБухгалтерии.Налоговый.Обороты(&НачДата, &КонДата, , Счет В ИЕРАРХИИ (&Счет02НУ), &ВидСубконто, Организация = &Организация, , ) КАК НалоговыйОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	НалоговыйОбороты.Субконто1
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	НалоговыйОстатки.Субконто1,
		               |	0,
		               |	0,
		               |	0,
		               |	0,
		               |	СУММА(НалоговыйОстатки.СуммаОстатокДт - ПРдо2002года.АмортизацияДо2002)
		               |ИЗ
		               |	РегистрБухгалтерии.Налоговый.Остатки(
		               |			&НачДата,
		               |			Счет В ИЕРАРХИИ (&Счет01НУ)
		               |				И (НЕ Счет = &Счет0109НУ),
		               |			&ВидСубконто,
		               |			Организация = &Организация
		               |				И ВидУчета = &ВидУчетаПр) КАК НалоговыйОстатки
		               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		               |			ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		               |			ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.АмортизацияДо2002 КАК АмортизацияДо2002
		               |		ИЗ
		               |			РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет.СрезПоследних(&НачДата, Организация = &Организация) КАК ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних) КАК ПРдо2002года
		               |		ПО НалоговыйОстатки.Субконто1 = ПРдо2002года.ОсновноеСредство
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	НалоговыйОстатки.Субконто1";*/
			}
			if(true/*ОбъектЕсть*/)
			{
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация = &Организация","Организация = &Организация И Субконто1 В (&Объект)");*/
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация = &Организация И Субконто1 В (&Объект)) КАК ПервоначальныеСведенияОС", "Организация = &Организация И ОсновноеСредство В (&Объект)) КАК ПервоначальныеСведенияОС");*/
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация = &Организация И Субконто1 В (&Объект)) КАК ПараметрыАмортизацииОС", "Организация = &Организация И ОсновноеСредство В (&Объект)) КАК ПараметрыАмортизацииОС");*/
			}
			/*Запрос.УстановитьПараметр("НачДата",    мНачДата);*/
			if(true/*ОбъектЕсть*/)
			{
				/*мКонДата = Новый Граница(СтруктураШапкиДокумента.Дата, ВидГраницы.Исключая);*/
			}
			/*Запрос.УстановитьПараметр("КонДата",      мКонДата);*/
			/*Запрос.УстановитьПараметр("Организация",  СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("ВидУчетаНУ",   Перечисления.ВидыУчетаПоПБУ18.НУ);*/
			/*Запрос.УстановитьПараметр("ВидУчетаПР",   Перечисления.ВидыУчетаПоПБУ18.ПР);*/
			/*Запрос.УстановитьПараметр("Счет01НУ",     СчетУчетаНУ);*/
			/*Запрос.УстановитьПараметр("Счет0109НУ",   ПланыСчетов.Налоговый.ВыбытиеОС);*/
			/*Запрос.УстановитьПараметр("Счет01БУ",     СчетУчетаБУ);*/
			/*Запрос.УстановитьПараметр("Счет0109БУ",   ПланыСчетов.Хозрасчетный.ВыбытиеОС);*/
			/*Запрос.УстановитьПараметр("Счет02НУ",     СчетАмортизацииНУ);*/
			/*Запрос.УстановитьПараметр("Объект",       Объект);*/
			/*РезультатЗапроса = Запрос.Выполнить();*/
			/*ТаблицаОС = РезультатЗапроса.Выгрузить();*/
			/*ТаблицаОС.Свернуть("Субконто1", "Сумма01БУ, Сумма01НУ, Сумма01ПР, Сумма01ПРпоРБ, Сумма02");*/
			/*мКэшСчетов = Новый Соответствие;*/
		}
		// Выполняет расчет расходов по амортизационной премии и возникающих разниц

		public void РасчетАмортизационнойПремии(/*ЭтотОбъект, СтруктураШапкиДокумента, СписокОС, ТабКапитальныхВложений, мПроводкиНУ, ТаблицаДвижений, Отказ, Заголовок*/)
		{
			/*СубконтоКВ = Новый Массив();*/
			/*СубконтоКВ.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);*/
			/*СубконтоКВ.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыАмортизационнойПремии);*/
			/*// Амортизационная премия учитывается на статьях затрат с видом Амортизация
*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("Период",      НачалоМесяца(СтруктураШапкиДокумента.ПериодРегистрации));*/
			/*Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("СчетКВ",      ПланыСчетов.Налоговый.РасходыНаКапитальныеВложения);*/
			/*Запрос.УстановитьПараметр("СубконтоКВ",  СубконтоКВ);*/
			/*Запрос.УстановитьПараметр("СписокОС",    СписокОС);*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	НалоговыйОстатки.Субконто1 КАК ОсновноеСредство,
	|	НалоговыйОстатки.СуммаОстатокДт КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.Остатки(
	|		&Период,
	|		Счет = &СчетКВ,
	|		&СубконтоКВ,
	|		Организация = &Организация
	|			И Субконто1 В (&СписокОС) И (Субконто2 = НЕОПРЕДЕЛЕНО)) КАК НалоговыйОстатки
	|";*/
			/*ВыборкаПоКВАмортизация = Запрос.Выполнить().Выбрать();*/
			if(true/*ВыборкаПоКВАмортизация.Количество() > 0*/)
			{
				/*ТабКапитальныхВложений.Колонки.СуммаКапитальныхВложенийВключаемыхВРасходы.Имя = "Сумма";*/
				/*ТабКапитальныхВложений.Колонки.Удалить(ТабКапитальныхВложений.Колонки.СчетАмортизацииНУ);*/
				/*ТабКапитальныхВложений.Колонки.СчетУчетаНУ.Имя = "СчетАмортизацииНУ";*/
				/*ТабСписанияКапВложений = ТабКапитальныхВложений.СкопироватьКолонки();*/
				while(true/*ВыборкаПоКВАмортизация.Следующий()*/)
				{
					/*// Списываем амортизационную премию со счета КВ.
*/
					/*Проводка = мПроводкиНУ.Добавить();*/
					/*Проводка.Период       = СтруктураШапкиДокумента.ПериодРегистрации;*/
					/*Проводка.Организация  = СтруктураШапкиДокумента.Организация;*/
					/*Проводка.НомерЖурнала = "ОС";*/
					/*Проводка.Содержание   = "Амортизационная премия";*/
					/*Проводка.Сумма        = ВыборкаПоКВАмортизация.Сумма;*/
					/*Проводка.СчетКт       = ПланыСчетов.Налоговый.РасходыНаКапитальныеВложения;*/
					/*БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОсновныеСредства", ВыборкаПоКВАмортизация.ОсновноеСредство);*/
					/*СтрокаТабКапитальныхВложений = ТабКапитальныхВложений.Найти(ВыборкаПоКВАмортизация.ОсновноеСредство, "ОбъектУчета");*/
					if(true/*НЕ СтрокаТабКапитальныхВложений = Неопределено*/)
					{
						/*СтрокаТабКапитальныхВложений.Сумма = ВыборкаПоКВАмортизация.Сумма;*/
						/*НоваяСтрока = ТабСписанияКапВложений.Добавить();*/
						/*ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабКапитальныхВложений);*/
					}
				}
				if(true/*ВыборкаПоКВАмортизация.Количество() > 0*/)
				{
					/*// Включение капитальных вложений в состав расходов.
*/
					/*ТабЗатрат = УправлениеВнеоборотнымиАктивами.ПолучитьРаспределениеАмортизацииПоНаправлениямРегл(ЭтотОбъект, Отказ, Заголовок, ТабСписанияКапВложений, СтруктураШапкиДокумента, "Нал", "ОС", "Амортизационная премия");*/
				}
			}
			/*// Амортизационная премия учитывается на статьях затрат с видом Амортизационная премия
*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("Период",      НачалоМесяца(СтруктураШапкиДокумента.ПериодРегистрации));*/
			/*Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("СчетКВ",      ПланыСчетов.Налоговый.РасходыНаКапитальныеВложения);*/
			/*Запрос.УстановитьПараметр("СубконтоКВ",  СубконтоКВ);*/
			/*Запрос.УстановитьПараметр("СписокОС",    СписокОС);*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	НалоговыйОстатки.Субконто1 КАК ОсновноеСредство,
	|	СчетаНалоговогоУчетаОССрезПоследних.СчетУчета КАК СчетУчета,
	|	НалоговыйОстатки.Субконто2 КАК ДокументАмортизационнойПремии,
	|	НалоговыйОстатки.Субконто2.СчетУчетаЗатратПоАмортизационнойПремии КАК СчетУчетаЗатратПоАмортизационнойПремии,
	|	НалоговыйОстатки.Субконто2.СубконтоПоАмортизационнойПремии1 КАК СубконтоПоАмортизационнойПремии1,
	|	НалоговыйОстатки.Субконто2.СубконтоПоАмортизационнойПремии2 КАК СубконтоПоАмортизационнойПремии2,
	|	НалоговыйОстатки.Субконто2.СубконтоПоАмортизационнойПремии3 КАК СубконтоПоАмортизационнойПремии3,
	|	НалоговыйОстатки.СуммаОстатокДт КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.Остатки(
	|		&Период,
	|		Счет = &СчетКВ,
	|		&СубконтоКВ,
	|		Организация = &Организация
	|			И Субконто1 В (&СписокОС)
	|			И (Субконто2 ССЫЛКА Документ.ПринятиеКУчетуОС
	|				ИЛИ Субконто2 ССЫЛКА Документ.МодернизацияОС)) КАК НалоговыйОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаНалоговогоУчетаОС.СрезПоследних(
	|		&Период,
	|		Организация = &Организация
	|		    И ОсновноеСредство В (&СписокОС)) КАК СчетаНалоговогоУчетаОССрезПоследних
	|		ПО НалоговыйОстатки.Субконто1 = СчетаНалоговогоУчетаОССрезПоследних.ОсновноеСредство";*/
			/*ВыборкаПоКВ = Запрос.Выполнить().Выбрать();*/
			if(true/*НЕ ВыборкаПоКВ.Количество() = 0*/)
			{
				/*ТабКапитальныхВложений = УправлениеЗатратами.СформироватьТаблицуЗатрат();*/
				/*ТабКапитальныхВложений.Колонки.Добавить("СчетАмортизации");*/
				/*ТабКапитальныхВложений.Колонки.Добавить("СчетАмортизацииНУ");*/
				/*ТабКапитальныхВложений.Колонки.Добавить("ИмяСубконто");*/
				/*ТабКапитальныхВложений.Колонки.Добавить("ОбъектУчета");*/
			}
			while(true/*ВыборкаПоКВ.Следующий()*/)
			{
				/*// Списываем амортизационную премию со счета КВ.
*/
				/*Проводка = мПроводкиНУ.Добавить();*/
				/*Проводка.Период       = СтруктураШапкиДокумента.ПериодРегистрации;*/
				/*Проводка.Организация  = СтруктураШапкиДокумента.Организация;*/
				/*Проводка.НомерЖурнала = "ОС";*/
				/*Проводка.Содержание   = "Амортизационная премия";*/
				/*Проводка.Сумма        = ВыборкаПоКВ.Сумма;*/
				/*Проводка.СчетКт       = ПланыСчетов.Налоговый.РасходыНаКапитальныеВложения;*/
				/*БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОсновныеСредства", ВыборкаПоКВ.ОсновноеСредство);*/
				/*БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ДокументыАмортизационнойПремии", ВыборкаПоКВ.ДокументАмортизационнойПремии);*/
				/*// Начисляем амортизационную премию.
*/
				/*Проводка = мПроводкиНУ.Добавить();*/
				/*Проводка.Период       = СтруктураШапкиДокумента.ПериодРегистрации;*/
				/*Проводка.Организация  = СтруктураШапкиДокумента.Организация;*/
				/*Проводка.НомерЖурнала = "ОС";*/
				/*Проводка.Содержание   = "Амортизационная премия";*/
				/*Проводка.Сумма        = ВыборкаПоКВ.Сумма;*/
				/*Проводка.СчетДт       = ВыборкаПоКВ.СчетУчетаЗатратПоАмортизационнойПремии;*/
				/*БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, ВыборкаПоКВ.СубконтоПоАмортизационнойПремии1);*/
				/*БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, ВыборкаПоКВ.СубконтоПоАмортизационнойПремии2);*/
				/*БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, ВыборкаПоКВ.СубконтоПоАмортизационнойПремии3);*/
				/*Проводка.СчетКт       = ВыборкаПоКВ.СчетУчета;*/
				/*БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОсновныеСредства", ВыборкаПоКВ.ОсновноеСредство);*/
				/*ЭтоНепринимаемые = ОпределитьНеПринимаемыеДоходыРасходы(Проводка);*/
				/*// Уменьшение стоимости ОС по налоговому учету в регистре накопления.
*/
				/*СтрокаДвижений = ТаблицаДвижений.Добавить();*/
				/*СтрокаДвижений.ОсновноеСредство = ВыборкаПоКВ.ОсновноеСредство;*/
				/*СтрокаДвижений.Организация      = СтруктураШапкиДокумента.Организация;*/
				/*СтрокаДвижений.Стоимость        = ВыборкаПоКВ.Сумма;*/
				if(true/*СтруктураШапкиДокумента.ПоддержкаПБУ18*/)
				{
					/*// Отражаем временные разницы.
*/
					/*Проводка = мПроводкиНУ.Добавить();*/
					/*Проводка.Период       = СтруктураШапкиДокумента.ПериодРегистрации;*/
					/*Проводка.Организация  = СтруктураШапкиДокумента.Организация;*/
					/*Проводка.НомерЖурнала = "ОС";*/
					/*Проводка.Содержание   = "Амортизационная премия";*/
					/*Проводка.Сумма        = -ВыборкаПоКВ.Сумма;*/
					/*Проводка.СчетДт       = ВыборкаПоКВ.СчетУчетаЗатратПоАмортизационнойПремии;*/
					/*БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, ВыборкаПоКВ.СубконтоПоАмортизационнойПремии1);*/
					/*БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, ВыборкаПоКВ.СубконтоПоАмортизационнойПремии2);*/
					/*БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, ВыборкаПоКВ.СубконтоПоАмортизационнойПремии3);*/
					/*Проводка.СчетКт       = ВыборкаПоКВ.СчетУчета;*/
					/*БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОсновныеСредства", ВыборкаПоКВ.ОсновноеСредство);*/
					if(true/*ЭтоНепринимаемые*/)
					{
						/*Проводка.ВидУчетаКт   = Перечисления.ВидыУчетаПоПБУ18.ПР;*/
						/*Проводка.ВидУчетаДт   = Перечисления.ВидыУчетаПоПБУ18.ПР;*/
					}
				}
				/*СтрокаТабКапитальныхВложений = ТабКапитальныхВложений.Добавить();*/
				if(true/*ЭтоНепринимаемые*/)
				{
					/*СтрокаТабКапитальныхВложений.ПостояннаяРазница = -ВыборкаПоКВ.Сумма;*/
				}
				/*СтрокаТабКапитальныхВложений.СуммаНал = ВыборкаПоКВ.Сумма;*/
				/*СтрокаТабКапитальныхВложений.СчетЗатратНУ = ВыборкаПоКВ.СчетУчетаЗатратПоАмортизационнойПремии;*/
				/*СтрокаТабКапитальныхВложений.СчетЗатрат   = РасширеннаяАналитикаУчета.ПолучитьСчетБУПоСчетуНУ(СтрокаТабКапитальныхВложений.СчетЗатратНУ);*/
				/*Массив = Новый Массив;*/
				/*Массив.Добавить(ВыборкаПоКВ.СубконтоПоАмортизационнойПремии1);*/
				/*Массив.Добавить(ВыборкаПоКВ.СубконтоПоАмортизационнойПремии2);*/
				/*Массив.Добавить(ВыборкаПоКВ.СубконтоПоАмортизационнойПремии3);*/
				/*СтрокаТабКапитальныхВложений.ПодразделениеОрганизации = НайтиЗначениеЗначениеСправочникаПоТипу("ПодразделенияОрганизаций",Массив);*/
				/*СтрокаТабКапитальныхВложений.НоменклатурнаяГруппа     = НайтиЗначениеЗначениеСправочникаПоТипу("НоменклатурныеГруппы",Массив);*/
				/*СтрокаТабКапитальныхВложений.СтатьяЗатрат             = НайтиЗначениеЗначениеСправочникаПоТипу("СтатьиЗатрат",Массив);*/
			}
			if(true/*ВыборкаПоКВ.Количество() > 0*/)
			{
				/*УправлениеЗатратами.ДвиженияПоПрочимЗатратам(СтруктураШапкиДокумента, ТабКапитальныхВложений);*/
			}
		}

		public object ОпределитьВидЗатрат(/*Массив*/)
		{
			return null;
		}

		public object НайтиЗначениеЗначениеСправочникаПоТипу(/*Тип, МассивПоиска*/)
		{
			return null;
		}
		// Определяет коэффициент распределения
		// расходов по видам деятельности (ЕНВД / не ЕНВД).
		//
		// Параметры
		//  Организация - СправочникСсылка.Организации
		//  Дата  – Дата – одна из дат того месяца,
		//			в котором необходимо рассчитать коэффициент.
		//
		// Возвращаемое значение:
		//   Число – коэффициент распределения расходов по видам деятельности.
		//

		public object КоэффициентРаспределенияРасходовПоВидамДеятельности(/*Организация, Знач Дата, Знач НачДата = Неопределено, ВидУчета = "БУ", ПоВсемСчетам = Истина*/)
		{
			if(true/*ВидУчета = "НУ"*/)
			{
				/*УчетнаяПолитикаРегл = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(Дата, Организация);*/
				if(true/*НЕ ЗначениеЗаполнено(УчетнаяПолитикаРегл)*/)
				{
					/*ПериодГод = Ложь;*/
					/*УчитыватьВсеДоходы = Ложь;*/
				}
				if(true/*НачДата = Неопределено*/)
				{
					/*НачДатаТекущегоМесяца = НачалоМесяца(Дата);*/
				}
				if(true/*ПериодГод*/)
				{
					/*НачДата = НачалоГода(Дата);*/
				}
			}
			/*КонДата = КонецМесяца(Дата);*/
			/*// Доходы от реализации
*/
			/*ТекстЗапроса = "ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.Счет В (&СчетВыручкаЕНВД)
	|				ТОГДА -ХозрасчетныйОбороты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВыручкаЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ХозрасчетныйОбороты.Счет В (&СчетВыручкаЕНВД))
	|				ТОГДА -ХозрасчетныйОбороты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВыручкаНеЕНВД,
	|	СУММА(0) КАК РасходыЕНВДПрошлыхПериодов,
	|	СУММА(0) КАК РасходыСНачалаГода,
	|	СУММА(0) КАК РасходыМесяца,
	|	ХозрасчетныйОбороты.Счет КАК Счет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачДата, &КонДата, Период, Счет В ИЕРАРХИИ (&МассивСчетов), , Организация = &Организация, , ) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Счет";*/
			if(true/*УчитыватьВсеДоходы*/)
			{
				/*// Внереализационные доходы
*/
				/*ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СУММА(0),
 		|   - СУММА(ХозрасчетныйОбороты.СуммаОборот),
		|	СУММА(0),
		|	СУММА(0),
		|	СУММА(0),
		|	ХозрасчетныйОбороты.Счет
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачДата, &КонДата, Период, Счет В ИЕРАРХИИ (&ВнереализационныеДоходы), , Организация = &Организация, , ) КАК ХозрасчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Счет
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СУММА(0),
		|	- СУММА(ХозрасчетныйОбороты.СуммаОборот),
		|	СУММА(0),
		|	СУММА(0),
		|	СУММА(0),
		|	ХозрасчетныйОбороты.Счет
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачДата, &КонДата, Период, Счет В ИЕРАРХИИ (&ВнереализационныеРасходы), , Организация = &Организация, КорСчет В ИЕРАРХИИ (&СчетНДС), ) КАК ХозрасчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Счет";*/
			}
			if(true/*ПериодГод*/)
			{
				/*// распределение расходов предыдущих периодов
*/
				/*ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СУММА(0),
		|	СУММА(0),
		|	СУММА(НалоговыйОбороты.СуммаОборотКт),
		|	СУММА(0),
		|	СУММА(0),
		|	НалоговыйОбороты.Счет
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(&НачДата, &КонДатаМинусМесяц, Период, Счет В ИЕРАРХИИ (&СчетаУчетаРасходов), , Организация = &Организация, КорСчет = &ЕНВД, ) КАК НалоговыйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	НалоговыйОбороты.Счет
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СУММА(0),
		|	СУММА(0),
		|	СУММА(НалоговыйОбороты.СуммаОборотКт),
		|	СУММА(0),
		|	СУММА(0),
		|	НалоговыйОбороты.Счет
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(&НачДата, &КонДатаМинусМесяц, Период, Счет В ИЕРАРХИИ (&Счет91), &ВидСубконто91, Организация = &Организация, КорСчет = &ЕНВД, ) КАК НалоговыйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	НалоговыйОбороты.Счет
		|
		|ОБЪЕДИНИТЬ ВСЕ                 // расходы с начала года
		|
		|ВЫБРАТЬ
		|	СУММА(0),
		|	СУММА(0),
		|	СУММА(0),					   
		|	СУММА(НалоговыйОбороты.СуммаОборотДт), 
		|	СУММА(0),					   
		|	НалоговыйОбороты.Счет
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(&НачДата, &КонДата, Период, Счет В ИЕРАРХИИ (&СчетаУчетаРасходов), , Организация = &Организация, , ) КАК НалоговыйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	НалоговыйОбороты.Счет
		|
		|ОБЪЕДИНИТЬ ВСЕ                
		|
		|ВЫБРАТЬ
		|	СУММА(0),
		|	СУММА(0),
		|	СУММА(0),					   
		|	СУММА(НалоговыйОбороты.СуммаОборотДт), 
		|	СУММА(0),					   
		|	НалоговыйОбороты.Счет
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(&НачДата, &КонДата, Период, Счет В ИЕРАРХИИ (&Счет91), &ВидСубконто91, Организация = &Организация, , ) КАК НалоговыйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	НалоговыйОбороты.Счет
		|
		|ОБЪЕДИНИТЬ ВСЕ        // расходы текущего месяца
		|
		|ВЫБРАТЬ
		|	СУММА(0),
		|	СУММА(0),
		|	СУММА(0),
		|	СУММА(0),					   
		|	СУММА(НалоговыйОбороты.СуммаОборотДт), 
		|	НалоговыйОбороты.Счет
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(&НачДатаТекущегоМесяца, &КонДата, Период, Счет В ИЕРАРХИИ (&СчетаУчетаРасходов), , Организация = &Организация, , ) КАК НалоговыйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	НалоговыйОбороты.Счет
		|
		|ОБЪЕДИНИТЬ ВСЕ      		
		|ВЫБРАТЬ
		|	СУММА(0),
		|	СУММА(0),
		|	СУММА(0),
		|	СУММА(0),					   
		|	СУММА(НалоговыйОбороты.СуммаОборотДт), 
		|	НалоговыйОбороты.Счет
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(&НачДатаТекущегоМесяца, &КонДата, Период, Счет В ИЕРАРХИИ (&Счет91), &ВидСубконто91, Организация = &Организация, , ) КАК НалоговыйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	НалоговыйОбороты.Счет";*/
			}
			/*//Массив счетов, по которым рассчитывается доход организации
*/
			/*МассивСчетов = Новый Массив;*/
			/*МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.Выручка);*/
			/*МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.Продажи_НДС);*/
			/*МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.Продажи_Акцизы);*/
			/*МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.Продажи_ЭкспортныеПошлины);*/
			/*РаспределяемыеСчета = Новый Массив;*/
			/*РаспределяемыеСчета.Добавить(ПланыСчетов.Налоговый.КосвенныеОбщепроизводственныеРасходыРаспределяемые);*/
			/*РаспределяемыеСчета.Добавить(ПланыСчетов.Налоговый.КосвенныеОбщехозяйственныеРасходыРаспределяемые);*/
			/*РаспределяемыеСчета.Добавить(ПланыСчетов.Налоговый.ИздержкиОбращенияРаспределяемые);*/
			/*РаспределяемыеСчета.Добавить(ПланыСчетов.Налоговый.КоммерческиеРасходыРаспределяемые);*/
			/*РаспределяемыеСчета.Добавить(ПланыСчетов.Налоговый.ВнереализационныеРасходыРаспределяемые);*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.УстановитьПараметр("НачДата",              НачДата);*/
			/*Запрос.УстановитьПараметр("КонДата",              КонДата);*/
			/*Запрос.УстановитьПараметр("КонДатаМинусМесяц",    КонецМесяца(НачалоМесяца(Дата) - 1));*/
			/*Запрос.УстановитьПараметр("НачДатаТекущегоМесяца",НачДатаТекущегоМесяца);*/
			/*Запрос.УстановитьПараметр("Организация",          Организация);*/
			/*Запрос.УстановитьПараметр("СчетВыручкаЕНВД",      НалоговыйУчетУСН.МассивСчетовВыручкиЕНВД());*/
			/*Запрос.УстановитьПараметр("МассивСчетов",         МассивСчетов);*/
			/*Запрос.УстановитьПараметр("ВнереализационныеДоходы",ПланыСчетов.Хозрасчетный.ПрочиеДоходы);*/
			/*Запрос.УстановитьПараметр("ВнереализационныеРасходы",ПланыСчетов.Хозрасчетный.ПрочиеРасходы);*/
			/*Запрос.УстановитьПараметр("Счет91ЕНВД",            ПланыСчетов.Хозрасчетный.ПрочиеРасходыРаспределяемые);*/
			/*Запрос.УстановитьПараметр("СчетНДС",               ПланыСчетов.Хозрасчетный.НДС);*/
			/*Запрос.УстановитьПараметр("ЕНВД",                 ПланыСчетов.Налоговый.РасходыПоДеятельностиЕНВД);*/
			/*Запрос.УстановитьПараметр("СчетаУчетаРасходов",   РаспределяемыеСчета);*/
			/*Запрос.УстановитьПараметр("ВидСубконто",          ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);*/
			/*Запрос.УстановитьПараметр("ВидСубконто91",        ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);*/
			/*Запрос.УстановитьПараметр("Счет91",               ПланыСчетов.Налоговый.ПрочиеКосвенныеРасходы);*/
			/*РезультатЗапроса = Запрос.Выполнить();*/
			/*// Если результат запроса пустой, то считаем, что все
*/
			/*// расходы относятся к деятельности не облагаемой ЕНВД.
*/
			if(true/*РезультатЗапроса.Пустой()*/)
			{
				/*Коэффициент = 0;*/
			}
			return null;
		}
		// КоэффициентРаспределенияРасходовПоВидамДеятельности()
		// Формируется таблица строк в которой задано соответствие видов активов
		// (обязательства) и счетов налогового учета, на которых отражаются разницы
		// по этим видам активов.
		//
		// Возвращаемое значение:
		//   ТаблицаЗначений - таблица соответствия.
		//

		public object ПолучитьТаблицуВидовАктивовИОбязательств(/**/)
		{
			/*ЕстьСкладскойУчет = Константы.ВестиПартионныйУчетПоСкладамРегл.Получить();*/
			/*ТаблицаВидовАктивовИОбязательств = Новый ТаблицаЗначений;*/
			/*ТаблицаВидовАктивовИОбязательств.Колонки.Добавить("ВидАктивовОбязательств", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыАктивовИОбязательств"));*/
			/*ТаблицаВидовАктивовИОбязательств.Колонки.Добавить("Счета",      Новый ОписаниеТипов("Массив"));*/
			/*ТаблицаВидовАктивовИОбязательств.Колонки.Добавить("Субконто",   Новый ОписаниеТипов("Массив"));*/
			/*//Основные средства
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ОсновныеСредства;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.ОсновныеСредства);*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.АмортизацияОС_01);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);*/
			/*//Активы, признаемые как МПЗ в БУ и ОС в НУ
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ОсновныеСредства;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.МатериалыВСоставеОСвНУ);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);*/
			/*//ДоходныеВложенияВ_МЦ
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ОсновныеСредства;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.АмортизацияОС_03);*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.ДоходныеВложенияВ_МЦ);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);*/
			/*//Нематериальные активы
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.НематериальныеАктивы;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.НематериальныеАктивы);*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.АмортизацияНематериальныхАктивов);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы);*/
			/*// Оборудование 
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.Оборудование;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.ОборудованиеКУстановке);*/
			if(true/*ЕстьСкладскойУчет*/)
			{
				/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);*/
			}
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);*/
			/*// Внеоборотные активы   08.01
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ВнеоборотныеАктивы;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.ПриобретениеЗемельныхУчастков);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства);*/
			/*// Внеоборотные активы   08.02
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ВнеоборотныеАктивы;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.ПриобретениеОбъектовПриродопользования);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства);*/
			/*// Внеоборотные активы   08.03
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ВнеоборотныеАктивы;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.СтроительствоОбъектовОсновныхСредств);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства);*/
			/*// Внеоборотные активы 08.04
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ВнеоборотныеАктивы;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.ПриобретениеОбъектовОсновныхСредств);*/
			if(true/*ЕстьСкладскойУчет*/)
			{
				/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);*/
			}
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);*/
			/*// Внеоборотные активы 08.05
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ВнеоборотныеАктивы;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.ПриобретениеНематериальныхАктивов);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы);*/
			/*// Внеоборотные активы 08.08
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ВнеоборотныеАктивы;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.ВыполнениеНИОКР);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыНаНИОКР);*/
			/*// Внеоборотные активы 08.11 и 08.12
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ВнеоборотныеАктивы;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.НематериальныеПоисковыеАктивы);*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.МатериальныеПоисковыеАктивы);*/
			/*// Материалы
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.Материалы;*/
			/*СчетаУчетаМатериалов = ПланыСчетов.Налоговый.ВыбратьИерархически(ПланыСчетов.Налоговый.Материалы);*/
			while(true/*СчетаУчетаМатериалов.Следующий()*/)
			{
				/*СчетУчетаМатериалов = СчетаУчетаМатериалов.Ссылка;*/
				/*КодСчета = СчетУчетаМатериалов.Код;*/
				if(true/*Лев(КодСчета, 5) = "10.МЦ"
			Или Лев(КодСчета, 5) = "10.11" 
			Или Лев(КодСчета, 5) = "10.07"*/)
				{
					/*Продолжить;*/
				}
				/*НоваяСтрока.Счета.Добавить(СчетУчетаМатериалов);*/
			}
			if(true/*ЕстьСкладскойУчет*/)
			{
				/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);*/
			}
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);*/
			/*// Материалы  в переработке
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.Материалы;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.МатериалыПереданныеВПереработку.Ссылка);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);*/
			/*// Материалы  в эксплутации
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.Материалы;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.СпецоснасткаИСпецодеждаВЭксплуатации.Ссылка);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);*/
			/*// Незавершенное производство
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.НезавершенноеПроизводство;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.ПрямыеРасходыОсновногоПроизводства);*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.ПрямыеРасходыВспомогательныхПроизводств);*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.ПрямыеРасходыПоВыявленномуБраку);*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.ПрямыеРасходыОбслуживающихПроизводств);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.НезавершенноеПроизводство;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.ПроизводствоИзДавальческогоСырья);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);*/
			/*// Готовая продукция
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ГотоваяПродукция;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.ГотоваяПродукция);*/
			if(true/*ЕстьСкладскойУчет*/)
			{
				/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);*/
			}
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);*/
			/*// Полуфабрикаты
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.Полуфабрикаты;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.Полуфабрикаты);*/
			if(true/*ЕстьСкладскойУчет*/)
			{
				/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);*/
			}
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);*/
			/*// Расходы будущих периодов
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.РасходыБудущихПериодов;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.РасходыБудущихПериодов);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);*/
			/*// Товары
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.Товары;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.Товары);*/
			if(true/*ЕстьСкладскойУчет*/)
			{
				/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);*/
			}
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);*/
			/*// Товары отгруженные
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ТоварыОтгруженные;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.ТоварыОтгруженные);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);*/
			/*// Издержки обращения
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ИздержкиОбращения;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.РасходыНаПродажу);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);*/
			/*// Финансовые вложения (счета 58.01.1)
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ФинансовыеВложения;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.Паи);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);*/
			/*// Финансовые вложения (счета 58.01.2 и Н58.02)
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ФинансовыеВложения;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.Акции);*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.ДолговыеЦенныеБумаги);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ЦенныеБумаги);*/
			/*// Финансовые вложения (счета 58.03, 58.04, 58.05)
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ФинансовыеВложения;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.ПредоставленныеЗаймы);*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.ВкладыПоДоговоруПростогоТоварищества);*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.ПриобретенныеПрава);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);*/
			/*// Доходы будущих периодов
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ДоходыБудущихПериодов;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.ДоходыБудущихПериодов);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДоходыБудущихПериодов);*/
			/*// Курсовые разницы при оплате в рублях
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.КурсовыеРазницыПоРасчетамВУЕ;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.ЗадолженностьПоПриобретениюВУЕ);*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.ЗадолженностьПоРеализацииВУЕ);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);*/
			/*// Убытки текущего периода
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.УбытокТекущегоПериода;*/
			/*// Недостачи и потери от порчи ценностей
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.НедостачиПотери;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.НедостачиИПотериОтПорчиЦенностей);*/
			/*// Оценочные обязательства
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ОценочныеОбязательства;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.РезервыПредстоящихРасходов);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Резервы);*/
			/*// Резервы по сомнительным долгам
*/
			/*НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();*/
			/*НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.РезервыСомнительныхДолгов;*/
			/*НоваяСтрока.Счета.Добавить(ПланыСчетов.Налоговый.РезервыПоСомнительнымДолгам);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);*/
			/*НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);*/
			return null;
		}
		// ПолучитьТаблицуВидовАктивовИОбязательств()
		// Определяются суммы временных разницы, которые отражены на плане счетов
		// по конкретному виду ОНА (ОНО) и распределяются на вычитаемые и налогооблагемые разницы.
		//
		// Параметры:
		//		СтрокаВидАктиваОбязательства - строка таблицы в каторой задано соответствие
		//			вида актива (обязательства) и счетов налогового учета, на которых
		//			отражаются разницы по этому виду активов.
		//

		public object ОборотыВременныхРазницПоВидуАктивовОбязательств(/*СтрокаВидАктиваОбязательства, СтруктураДопПараметров, ЭтоОтчет = Ложь*/)
		{
			/*КоличествоОбъектовАналитики = СтрокаВидАктиваОбязательства.Субконто.Количество();*/
			/*МассивСубконто = СтрокаВидАктиваОбязательства.Субконто;*/
			if(true/*НЕ КоличествоОбъектовАналитики = 0*/)
			{
				/*ФлагОС_НМА = ?(МассивСубконто[0] = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства, 1, 0);*/
				/*ФлагОС_НМА = ?(МассивСубконто[0] = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы, 1, ФлагОС_НМА);*/
				/*ФлагОбъектовСтроительства = ?(МассивСубконто[0] = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства, 1, 0);*/
				/*ФлагНЗП = ?(СтрокаВидАктиваОбязательства.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.НезавершенноеПроизводство, 1, 0);*/
			}
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("НачалоМесяца",   СтруктураДопПараметров.НачГраница);*/
			/*Запрос.УстановитьПараметр("КонецМесяца",    СтруктураДопПараметров.КонГраница);*/
			/*Запрос.УстановитьПараметр("Организация",    СтруктураДопПараметров.Организация);*/
			/*Запрос.УстановитьПараметр("МассивСчетов",   СтрокаВидАктиваОбязательства.Счета);*/
			/*Запрос.УстановитьПараметр("ВидУчета", 	    Перечисления.ВидыУчетаПоПБУ18.ВР);*/
			/*Запрос.УстановитьПараметр("ВидСубконто",    МассивСубконто);*/
			/*Массив = Новый Массив;*/
			/*Массив.Добавить(ПланыСчетов.Налоговый.МатериалыВСоставеОСвНУ);*/
			/*Массив.Добавить(ПланыСчетов.Налоговый.ОСвСоставеМПЗвБУ);*/
			if(true/*Не ЭтоОтчет*/)
			{
				/*Массив.Добавить(ПланыСчетов.Налоговый.УбыткиПрошлыхЛет);*/
			}
			/*Запрос.УстановитьПараметр("СчетМЦ",       Массив);*/
			/*Запрос.УстановитьПараметр("СчетЕН",       ПланыСчетов.Налоговый.РасходыПоДеятельностиЕНВД);*/
			/*РаспределяемыеСчета = Новый Массив;*/
			/*РаспределяемыеСчета.Добавить(ПланыСчетов.Налоговый.КосвенныеОбщепроизводственныеРасходыРаспределяемые);*/
			/*РаспределяемыеСчета.Добавить(ПланыСчетов.Налоговый.КосвенныеОбщехозяйственныеРасходыРаспределяемые);*/
			/*РаспределяемыеСчета.Добавить(ПланыСчетов.Налоговый.ИздержкиОбращенияРаспределяемые);*/
			/*РаспределяемыеСчета.Добавить(ПланыСчетов.Налоговый.ВнереализационныеРасходыРаспределяемые);*/
			/*Запрос.УстановитьПараметр("РаспределяемыеСчета",    РаспределяемыеСчета);*/
			/*Запрос.УстановитьПараметр("СчетПрочихРасходов",ПланыСчетов.Налоговый.ПрочиеРасходы);*/
			/*Запрос.Текст = "ВЫБРАТЬ
	               |	НалоговыйОстаткиИОбороты.Счет КАК Счет,
	               |	НалоговыйОстаткиИОбороты.Субконто1 КАК Субконто1,
	               |	НалоговыйОстаткиИОбороты.Субконто2 КАК Субконто2,
	               |	НалоговыйОстаткиИОбороты.Субконто3 КАК Субконто3,
	               |	СУММА(НалоговыйОстаткиИОбороты.СуммаНачальныйОстатокДт) КАК НачОстатокДт,
	               |	СУММА(ВЫБОР
	               |			КОГДА НалоговыйОстаткиИОбороты.Счет В (&СчетМЦ)
	               |				ТОГДА НалоговыйОстаткиИОбороты.СуммаКонечныйОстатокДт - НалоговыйОстаткиИОбороты.СуммаОборотДт
	               |			ИНАЧЕ НалоговыйОстаткиИОбороты.СуммаКонечныйОстатокДт
	               |		КОНЕЦ) КАК КонОстатокДт,
	               |	СУММА(НалоговыйОстаткиИОбороты.СуммаНачальныйОстатокКт) КАК НачОстатокКт,
	               |	СУММА(НалоговыйОстаткиИОбороты.СуммаКонечныйОстатокКт) КАК КонОстатокКт,
	               |	СУММА(ВЫБОР
	               |			КОГДА НалоговыйОстаткиИОбороты.Счет В (&СчетМЦ)
	               |				ТОГДА 0
	               |			ИНАЧЕ НалоговыйОстаткиИОбороты.СуммаОборотДт
	               |		КОНЕЦ) КАК ОборотДт,
	               |	СУММА(НалоговыйОстаткиИОбороты.СуммаОборотКт) КАК ОборотКт,
	               |	СУММА(0) КАК ОборотЕН,
	               |	СУММА(0) КАК СуммаЗатрат
	               |ИЗ
	               |	РегистрБухгалтерии.Налоговый.ОстаткиИОбороты(
	               |			&НачалоМесяца,
	               |			&КонецМесяца,
	               |			,
	               |			,
	               |			Счет В ИЕРАРХИИ (&МассивСчетов),
	               |			&ВидСубконто,
	               |			Организация = &Организация
	               |				И ВидУчета = &ВидУчета) КАК НалоговыйОстаткиИОбороты
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	НалоговыйОстаткиИОбороты.Счет,
	               |	НалоговыйОстаткиИОбороты.Субконто1,
	               |	НалоговыйОстаткиИОбороты.Субконто2,
	               |	НалоговыйОстаткиИОбороты.Субконто3
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	НалоговыйОбороты.Счет,
	               |	НалоговыйОбороты.Субконто1,
	               |	НалоговыйОбороты.Субконто2,
	               |	НалоговыйОбороты.Субконто3,
	               |	СУММА(0),
	               |	СУММА(0),
	               |	СУММА(0),
	               |	СУММА(0),
	               |	СУММА(0),
	               |	СУММА(0),
	               |	СУММА(НалоговыйОбороты.СуммаОборотКт),
	               |	СУММА(0)
	               |ИЗ
	               |	РегистрБухгалтерии.Налоговый.Обороты(
	               |			&НачалоМесяца,
	               |			&КонецМесяца,
	               |			,
	               |			Счет В ИЕРАРХИИ (&МассивСчетов),
	               |			&ВидСубконто,
	               |			Организация = &Организация
	               |				И ВидУчета = &ВидУчета,
	               |			КорСчет = &СчетЕН,
	               |			) КАК НалоговыйОбороты
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	НалоговыйОбороты.Счет,
	               |	НалоговыйОбороты.Субконто1,
	               |	НалоговыйОбороты.Субконто2,
	               |	НалоговыйОбороты.Субконто3
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	НалоговыйОбороты.Счет,
	               |	НалоговыйОбороты.Субконто1,
	               |	НалоговыйОбороты.Субконто2,
	               |	НалоговыйОбороты.Субконто3,
	               |	СУММА(0),
	               |	СУММА(0),
	               |	СУММА(0),
	               |	СУММА(0),
	               |	СУММА(0),
	               |	СУММА(0),
	               |	СУММА(0),
	               |	СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0))
	               |ИЗ
	               |	РегистрБухгалтерии.Налоговый.Обороты(
	               |			&НачалоМесяца,
	               |			&КонецМесяца,
	               |			,
	               |			Счет В ИЕРАРХИИ (&МассивСчетов),
	               |			,
	               |			Организация = &Организация
	               |				И ВидУчета = &ВидУчета,
	               |			КорСчет В ИЕРАРХИИ (&РаспределяемыеСчета),
	               |			) КАК НалоговыйОбороты
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	НалоговыйОбороты.Счет,
	               |	НалоговыйОбороты.Субконто1,
	               |	НалоговыйОбороты.Субконто2,
	               |	НалоговыйОбороты.Субконто3";*/
			if(true/*ФлагОС_НМА = 1*/)
			{
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "НалоговыйОстаткиИОбороты.Счет КАК Счет,", "");*/
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "НалоговыйОстаткиИОбороты.Счет,", "");*/
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "НалоговыйОбороты.Счет,", "");*/
			}
			if(true/*КоличествоОбъектовАналитики < 3*/)
			{
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|	НалоговыйОстаткиИОбороты.Субконто3 КАК Субконто3", "");*/
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|	НалоговыйОстаткиИОбороты.Субконто3", "");*/
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|	НалоговыйОбороты.Субконто3", "");*/
			}
			if(true/*КоличествоОбъектовАналитики < 2*/)
			{
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|	НалоговыйОстаткиИОбороты.Субконто2 КАК Субконто2", "");*/
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|	НалоговыйОстаткиИОбороты.Субконто2", "");*/
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|	НалоговыйОбороты.Субконто2", "");*/
			}
			if(true/*КоличествоОбъектовАналитики < 1*/)
			{
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|	НалоговыйОстаткиИОбороты.Субконто1 КАК Субконто1", "");*/
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|	НалоговыйОстаткиИОбороты.Субконто1", "");*/
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|	НалоговыйОбороты.Субконто1", "");*/
			}
			/*Результат = Запрос.Выполнить();*/
			/*ТаблицаРезультатов = Результат.Выгрузить();*/
			/*ТаблицаРезультатов.Свернуть("" + ?(ФлагОС_НМА = 1, "", "Счет,") + ?(КоличествоОбъектовАналитики = 0, "",",Субконто1") + ?(ФлагОбъектовСтроительства = 1, "", ?(КоличествоОбъектовАналитики = 2, ",Субконто2","")) + ?(ФлагНЗП = 1, "", ?(КоличествоОбъектовАналитики = 3, ",Субконто3","")),"НачОстатокКт,КонОстатокКт,НачОстатокДт,КонОстатокДт,ОборотДт,ОборотКт,ОборотЕН,СуммаЗатрат");*/
			/*ТаблицаРезультатов.Колонки.Добавить("СуммаДт09");*/
			/*ТаблицаРезультатов.Колонки.Добавить("СуммаКт09");*/
			/*ТаблицаРезультатов.Колонки.Добавить("СуммаДт77");*/
			/*ТаблицаРезультатов.Колонки.Добавить("СуммаКт77");*/
			/*ТаблицаРезультатов.Колонки.Добавить("СуммаЕНВД");*/
			if(true/*ТаблицаРезультатов.Количество() > 0*/)
			{
			}
			return null;
		}
		// ОборотыВременныхРазницПоВидуАктивовОбязательств()

		public object ОстаткиВременныхРазницПоВидуАктивовОбязательств(/*СтрокаВидАктиваОбязательства, Организация, НачалоГода, КонецГода*/)
		{
			/*КоличествоОбъектовАналитики = СтрокаВидАктиваОбязательства.Субконто.Количество();*/
			if(true/*Не КоличествоОбъектовАналитики = 0*/)
			{
				/*МассивСубконто = СтрокаВидАктиваОбязательства.Субконто;*/
				/*ФлагОС_НМА = ?(МассивСубконто[0] = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства, 1, 0);*/
				/*ФлагОС_НМА = ?(МассивСубконто[0] = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы, 1, ФлагОС_НМА);*/
				/*ФлагОбъектовСтроительства = ?(МассивСубконто[0] = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства, 1, 0);*/
				/*ФлагНЗП = ?(СтрокаВидАктиваОбязательства.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.НезавершенноеПроизводство, 1, 0);*/
			}
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("НачалоГода",     НачалоГода);*/
			/*Запрос.УстановитьПараметр("КонецГода",      КонецГода);*/
			/*Запрос.УстановитьПараметр("Организация",    Организация);*/
			/*Запрос.УстановитьПараметр("МассивСчетов",   СтрокаВидАктиваОбязательства.Счета);*/
			/*Запрос.УстановитьПараметр("ВидУчета", 	    Перечисления.ВидыУчетаПоПБУ18.ВР);*/
			/*Запрос.УстановитьПараметр("ВидСубконто",    МассивСубконто);*/
			/*Запрос.УстановитьПараметр("Счет09",         ПланыСчетов.Хозрасчетный.ОтложенныеНалоговыеАктивы);*/
			/*Запрос.УстановитьПараметр("Счет77",         ПланыСчетов.Хозрасчетный.ОтложенныеНалоговыеОбязательства);*/
			/*Запрос.УстановитьПараметр("ВидАктивовОбязательств",СтрокаВидАктиваОбязательства.ВидАктивовОбязательств);*/
			/*Запрос.УстановитьПараметр("АктивыИОбязательства",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыАктивовИОбязательств);*/
			/*Массив = Новый Массив;*/
			/*Массив.Добавить(ПланыСчетов.Хозрасчетный.НераспределеннаяПрибыль);*/
			/*Массив.Добавить(ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиОтПересчетаОНА_ОНО);*/
			/*Запрос.УстановитьПараметр("КорСчет",         Массив);*/
			/*Запрос.Текст = "ВЫБРАТЬ
                   |    ОстаткиВР.Счет КАК Счет,
                   |    ОстаткиВР.Субконто1 КАК Субконто1,
                   |    ОстаткиВР.Субконто2 КАК Субконто2,
                   |    ОстаткиВР.Субконто3 КАК Субконто3,
                   |    &Счет09 КАК СчетОНАОНО,
                   |    ХозрасчетныйОстатки.СуммаОстатокДт - ХозрасчетныйОбороты.СуммаОборот КАК СтараяСумма,
                   |    СУММА(ВЫБОР
                   |            КОГДА ОстаткиВР.СуммаОстатокДт < 0
                   |                    ИЛИ ОстаткиВР.СуммаОстатокКт > 0
                   |                ТОГДА -ОстаткиВР.СуммаОстаток
                   |            ИНАЧЕ 0
                   |        КОНЕЦ) КАК Сумма
                   |ИЗ
                   |    РегистрБухгалтерии.Налоговый.Остатки(
                   |            &КонецГода,
                   |            Счет В ИЕРАРХИИ (&МассивСчетов),
                   |            &ВидСубконто,
                   |            Организация = &Организация
                   |                И ВидУчета = &ВидУчета) КАК ОстаткиВР,
                   |    РегистрБухгалтерии.Хозрасчетный.Остатки(
                   |            &КонецГода,
                   |            Счет В ИЕРАРХИИ (&Счет09),
                   |            &АктивыИОбязательства,
                   |            Организация = &Организация
                   |                И Субконто1 = &ВидАктивовОбязательств) КАК ХозрасчетныйОстатки,
                   |    РегистрБухгалтерии.Хозрасчетный.Обороты(
                   |            &НачалоГода,
                   |            &КонецГода,
                   |            Период,
                   |            Счет В ИЕРАРХИИ (&Счет09),
                   |            &АктивыИОбязательства,
                   |            Организация = &Организация
                   |                И Субконто1 = &ВидАктивовОбязательств,
                   |            КорСчет В ИЕРАРХИИ (&КорСчет),
                   |            ) КАК ХозрасчетныйОбороты
                   |
                   |СГРУППИРОВАТЬ ПО
                   |    ОстаткиВР.Счет,
                   |    ОстаткиВР.Субконто1,
                   |    ОстаткиВР.Субконто2,
                   |    ОстаткиВР.Субконто3,
                   |    ХозрасчетныйОстатки.СуммаОстатокДт - ХозрасчетныйОбороты.СуммаОборот
                   |
                   |ДЛЯ ИЗМЕНЕНИЯ
                   |
                   |ОБЪЕДИНИТЬ ВСЕ
                   |
                   |ВЫБРАТЬ
                   |    ОстаткиВР.Счет,
                   |    ОстаткиВР.Субконто1,
                   |    ОстаткиВР.Субконто2,
                   |    ОстаткиВР.Субконто3,
                   |    &Счет77,
                   |    ХозрасчетныйОстатки.СуммаОстатокКт + ХозрасчетныйОбороты.СуммаОборот,
                   |    СУММА(ВЫБОР
                   |            КОГДА ОстаткиВР.СуммаОстатокДт > 0
                   |                    ИЛИ ОстаткиВР.СуммаОстатокКт < 0
                   |                ТОГДА ОстаткиВР.СуммаОстаток
                   |            ИНАЧЕ 0
                   |        КОНЕЦ)
                   |ИЗ
                   |    РегистрБухгалтерии.Налоговый.Остатки(
                   |            &КонецГода,
                   |            Счет В ИЕРАРХИИ (&МассивСчетов),
                   |            &ВидСубконто,
                   |            Организация = &Организация
                   |                И ВидУчета = &ВидУчета) КАК ОстаткиВР,
                   |    РегистрБухгалтерии.Хозрасчетный.Остатки(
                   |            &КонецГода,
                   |            Счет В ИЕРАРХИИ (&Счет77),
                   |            &АктивыИОбязательства,
                   |            Организация = &Организация
                   |                И Субконто1 = &ВидАктивовОбязательств) КАК ХозрасчетныйОстатки,
                   |    РегистрБухгалтерии.Хозрасчетный.Обороты(
                   |            &НачалоГода,
                   |            &КонецГода,
                   |            Период,
                   |            Счет В ИЕРАРХИИ (&Счет77),
                   |            &АктивыИОбязательства,
                   |            Организация = &Организация
                   |                И Субконто1 = &ВидАктивовОбязательств,
                   |            КорСчет В ИЕРАРХИИ (&КорСчет),
                   |            ) КАК ХозрасчетныйОбороты
                   |
                   |СГРУППИРОВАТЬ ПО
                   |    ОстаткиВР.Счет,
                   |    ОстаткиВР.Субконто1,
                   |    ОстаткиВР.Субконто2,
                   |    ОстаткиВР.Субконто3,
                   |    ХозрасчетныйОстатки.СуммаОстатокКт + ХозрасчетныйОбороты.СуммаОборот
                   |
                   |ДЛЯ ИЗМЕНЕНИЯ";*/
			if(true/*ФлагОС_НМА = 1*/)
			{
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "ОстаткиВР.Счет КАК Счет,", "");*/
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "ОстаткиВР.Счет,", "");*/
			}
			if(true/*КоличествоОбъектовАналитики < 3*/)
			{
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|    ОстаткиВР.Субконто3 КАК Субконто3", "");*/
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|    ОстаткиВР.Субконто3", "");*/
			}
			if(true/*КоличествоОбъектовАналитики < 2*/)
			{
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|    ОстаткиВР.Субконто2 КАК Субконто2", "");*/
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|    ОстаткиВР.Субконто2", "");*/
			}
			if(true/*КоличествоОбъектовАналитики < 1*/)
			{
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|    ОстаткиВР.Субконто1 КАК Субконто1", "");*/
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|    ОстаткиВР.Субконто1", "");*/
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|    ОстаткиВР.Субконто1", "");*/
			}
			/*Результат = Запрос.Выполнить();*/
			/*ТаблицаРезультатов = Результат.Выгрузить();*/
			/*ТаблицаРезультатов.Свернуть("СчетОНАОНО,СтараяСумма," + ?(ФлагОС_НМА = 1, "", "Счет,") + ?(КоличествоОбъектовАналитики = 0, "","Субконто1") + ?(ФлагОбъектовСтроительства = 1, "", ?(КоличествоОбъектовАналитики = 2, ",Субконто2","")) + ?(ФлагНЗП = 1, "", ?(КоличествоОбъектовАналитики = 3, ",Субконто3","")),"Сумма");*/
			return null;
		}
		// ОборотыВременныхРазницПоВидуАктивовОбязательств()

		public object ПолучитьТекстВидаДеятельности(/*ПрименяетсяЕНВД, ЕстьОборотЕНВД, ЭтоЕНВД*/)
		{
			if(true/*ПрименяетсяЕНВД*/)
			{
				if(true/*ЭтоЕНВД*/)
				{
				}
			}
			return null;
		}

		public object ОпределитьВидПрочихДоходовИРасходов(/*Список*/)
		{
			return null;
		}
		// Процедура проверяет глобальную переменную УчетнаяПолитикаОтраженияЗарплатыВУчете
		// на наличие в ней структуры на конец квартала указанной даты по данной организации
		// Параметры:
		//  Период - Дата.
		//  Организация - Организация.
		//

		public void ОбновитьДанныеУчетнойПолитикиПоНалоговомуУчету(/*УчетнаяПолитикаПоНалоговомуУчету, Период, Организация*/)
		{
			/*ДатаПериода = ?(ЗначениеЗаполнено(Период),КонецМесяца(Период),Период);*/
			/*ПустаяУчетнаяПолитикаПоНалоговомуУчету = НалоговыйУчетПереопределяемый.СоздатьПустуюУчетнуюПолитикуПоНалоговомуУчету();*/
			if(true/*УчетнаяПолитикаПоНалоговомуУчету[ДатаПериода] = Неопределено*/)
			{
				/*УчетнаяПолитика = Новый Соответствие;*/
				/*УчетнаяПолитика.Вставить(Справочники.Организации.ПустаяСсылка(), ПустаяУчетнаяПолитикаПоНалоговомуУчету);*/
				/*УчетнаяПолитикаПоНалоговомуУчету.Вставить(ДатаПериода,УчетнаяПолитика);*/
			}
			if(true/*УчетнаяПолитика[Организация] = Неопределено*/)
			{
				/*УчетнаяПолитика.Вставить(Организация, ПустаяУчетнаяПолитикаПоНалоговомуУчету);*/
				/*ДатаОсмотра = '00010101';*/
			}
			/*#Если Сервер Тогда
		глЗначениеПеременнойУстановить("УчетнаяПолитикаОтраженияЗарплатыВУчете", УчетнаяПолитикаПоНалоговомуУчету);*/
			/*#КонецЕсли;*/
		}
		// Определяет, является ли организация плательщиком ЕНВД
		//
		// Параметры:
		//  Организация  - Справочник.Ссылка - Организация
		//  Дата         - Дата - Дата, на которую получаются сведения
		//
		// Возвращаемое значение:
		//  Булево.
		//

		public object ПрименениеЕНВД(/*Организация, Знач Дата*/)
		{
			if(true/*НЕ ЗначениеЗаполнено(Организация)*/)
			{
			}
			if(true/*НЕ ЗначениеЗаполнено(Дата)*/)
			{
				/*Дата = ТекущаяДата();*/
			}
			/*УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(Дата, Организация);*/
			if(true/*ЗначениеЗаполнено(УчетнаяПолитика)*/)
			{
			}
			return null;
		}
		// ПрименениеЕНВД
		//Процедура предназначена для сворачивания набора записей регистра бухгалтерии "Налоговый":
		//1) Формирует исходные данные для сворачивания:
		//  	список колонок для группировки и для суммирования
		//2) Вызывает универсальную процедуру сворачивания набора записей
		//Параметры: НаборЗаписейРегистраБухгалтерии, тип - набор записей регистров бухгалтерии Налоговый

		public void СвернутьНаборЗаписейРегистраБухгалтерии(/*НаборЗаписейРегистраБухгалтерии*/)
		{
			/*//колонки таблицы значений, которые будут суммироваться
*/
			/*СтрокаСуммирование = "Сумма, КоличествоДт, КоличествоКт";*/
			/*//колонки таблицы значений, по которым будет выполняться группировка
*/
			/*СтрокаГруппировка = "Период, Регистратор, Активность, Организация, "+
		"СчетДт, СчетКт, ВидРегламентнойОперации, МоментВремени, "+
		"Содержание, НомерЖурнала, СписаниеПартий, ДатаЗаписи, "+
		"ВидСубконтоДт1, ВидСубконтоДт2, ВидСубконтоДт3, "+
		"СубконтоДт1, СубконтоДт2, СубконтоДт3, "+
		"ВидСубконтоКт1, ВидСубконтоКт2, ВидСубконтоКт3, "+
		"СубконтоКт1, СубконтоКт2, СубконтоКт3,"+
	    "ВидУчетаДт, ВидУчетаКт, СписаниеПартийНДС";*/
			/*ВестиРеглУчетРасчетовСПерсоналомСводно = глЗначениеПеременной("ВестиРеглУчетРасчетовСПерсоналомСводно");*/
			/*МассивСчетовРасчетовСПерсоналом = Новый Массив;*/
			/*// Если способ ведения расчетов с персоналом - сводно,
*/
			/*// то перед сворачиванием могут потребоваться дополнительные действия по очистке аналитики в проводках
*/
			if(true/*ВестиРеглУчетРасчетовСПерсоналомСводно*/)
			{
				/*// Подготовка массива счетов учета расчетов с персоналом
*/
				/*МассивСчетовРасчетовСПерсоналом.Добавить(ПланыСчетов.Налоговый.РасчетыСПерсоналомПоОплатеТруда);*/
				/*МассивСчетовРасчетовСПерсоналом.Добавить(ПланыСчетов.Налоговый.РасходыНаОплатуТрудаБудущихПериодов);*/
			}
			/*ОбщегоНазначения.СвернутьНаборЗаписейРегистраБухгалтерии(НаборЗаписейРегистраБухгалтерии,
								СтрокаГруппировка, СтрокаСуммирование,
								ВестиРеглУчетРасчетовСПерсоналомСводно, МассивСчетовРасчетовСПерсоналом);*/
		}

		public void ОтразитьНеПринимаемыеРасходы(/*Проводка, СчетУчетаНепринимаемыхРасходов*/)
		{
			/*Проводка.КоличествоДт = 0;*/
			/*Проводка.СчетДт       =  СчетУчетаНепринимаемыхРасходов;*/
			/*Проводка.СубконтоДт.Очистить();*/
			/*Проводка.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.НУ;*/
		}

		public void ОтразитьНеПринимаемыеДоходы(/*Проводка*/)
		{
			/*Проводка.КоличествоКт = 0;*/
			/*Проводка.СчетКт       =  ПланыСчетов.Налоговый.ДоходыНеУчитываемые;*/
			/*Проводка.СубконтоКт.Очистить();*/
			/*Проводка.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.НУ;*/
		}
		//Процедура заполняет данные налогового учета по бухгалтерскому
		//
		// Параметры
		// 		ДанныеНУ	- Таблица значений или набор записей, где будет заполнены данные налогового учета
		//					  Структура должна быть аналогична набору записей регистра бухгалтерии Налоговый
		// 		ДанныеБУ	- Таблица значений или набор записей, с данными бухгалтерского учета
		//					  Структура должна быть аналогична набору записей регистра бухгалтерии Хозрасчетный
		//		Дата		- Дата, на которую берется соответствие счетов БУ и НУ
		//

		public void ЗаполнитьДанныеНалоговогоУчетаПоБухгалтерскомуУчету(/*ДанныеНУ, ДанныеБУ, Дата*/)
		{
			if(true/*ДанныеБУ.Количество() = 0*/)
			{
			}
			/*СтрокаТЧ = Новый Структура("СчетЗатрат,Субконто1,Субконто2,Субконто3,СчетЗатратНУ");*/
			/*//Период записей одинаковый
*/
			/*ПериодЗаписей = ДанныеБУ[0].Период;*/
			/*СоответствиеОрганизацияПоддержкаПБУ18 = Новый Соответствие;*/
			/*ТаблицаОрганизаций = ДанныеБУ.Выгрузить(,"Организация");*/
			/*ТаблицаОрганизаций.Свернуть("Организация");*/
			/*ТаблицаОрганизаций = Неопределено;*/
		}
		// ЗаполнитьДанныеНалоговогоУчетаПоБухгалтерскомуУчету
		// Готовит временную таблицу ВыручкаНУ с данными о выручке по налоговому учету.
		// Применяется при Расширенной аналитике.
		// Данные выбираются из регистра УчетПродажИСебестоимости.
		//
		// Параметры:
		//  МенеджерВременныхТаблиц - в него будет помещена таблица ВыручкаНУ
		//  Организация   - организация для отбора
		//  НачалоПериода,
		//  КонецПериода  - даты, определяют период, за который будут получены данные о выручке
		//  ОтборСчетов   - массив счетов налогового учета, по которым будет дополнительно отобрана выручка,
		//                  или Неопределено, если отбор не нужен
		//  ДляФормированияПроводок - Булево - для формирования проводок не нужны данные документа КорректировкаРеализации,
		//					т.к. проводки по выручке формируются самим первичным документом
		//

		public void СформироватьВременнуюТаблицуВыручкаНУ(/*
			МенеджерВременныхТаблиц, Организация, НачалоПериода, КонецПериода,
			ОтборСчетов = Неопределено, ДляФормированияПроводок*/)
		{
			/*Запрос = Новый Запрос;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*ТекстЗапроса = 
	"ВЫБРАТЬ
	|	АналитикаВидаУчета.Ссылка
	|ПОМЕСТИТЬ ОтборПоАналитикеВидаУчета
	|ИЗ
	|	РегистрСведений.АналитикаВидаУчета КАК АналитикаВидаУчета
	|ГДЕ
	|	АналитикаВидаУчета.Организация = &Организация
	|	И АналитикаВидаУчета.СчетУчетаНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.РасходыПоДеятельностиЕНВД)
	|	И (&НетОтбораСчетов
	|		ИЛИ АналитикаВидаУчета.СчетУчетаНУ В (&ОтборСчетов))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АналитикаУчетаПрочихЗатрат.Ссылка
	|ИЗ
	|	РегистрСведений.АналитикаУчетаПрочихЗатрат КАК АналитикаУчетаПрочихЗатрат
	|ГДЕ
	|	АналитикаУчетаПрочихЗатрат.Организация = &Организация
	|	И АналитикаУчетаПрочихЗатрат.СчетУчетаНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.РасходыПоДеятельностиЕНВД)
	|	И (&НетОтбораСчетов
	|		ИЛИ АналитикаУчетаПрочихЗатрат.СчетУчетаНУ В (&ОтборСчетов))
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетПродажИСебестоимостиОбороты.АналитикаВидаУчета 			КАК АналитикаВидаУчета,
	|	УчетПродажИСебестоимостиОбороты.АналитикаУчетаПартий 		КАК АналитикаУчетаПартий,
	|	УчетПродажИСебестоимостиОбороты.АналитикаУчетаНоменклатуры 	КАК АналитикаУчетаНоменклатуры,
	|	СУММА(УчетПродажИСебестоимостиОбороты.КоличествоОборот) 	КАК Количество,
	|	СУММА(УчетПродажИСебестоимостиОбороты.СтоимостьОборот
	|			- УчетПродажИСебестоимостиОбороты.НДСОборот) 		КАК Сумма,
	|	СУММА(УчетПродажИСебестоимостиОбороты.КорректировкаОборот) 	КАК Корректировка
	|
	|ПОМЕСТИТЬ УчетПродажИСебестоимостиОбороты
	|ИЗ
	|	РегистрНакопления.УчетПродажИСебестоимости.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|//ДляФормированияПроводок Регистратор
	|			, АналитикаВидаУчета В
	|				(ВЫБРАТЬ
	|					ОтборПоАналитикеВидаУчета.Ссылка
	|				ИЗ
	|					ОтборПоАналитикеВидаУчета КАК ОтборПоАналитикеВидаУчета)
	|	) КАК УчетПродажИСебестоимостиОбороты
	|
	|//ДляФормированияПроводок ГДЕ
	|//ДляФормированияПроводок 	НЕ (УчетПродажИСебестоимостиОбороты.Регистратор ССЫЛКА Документ.КорректировкаРеализации
	|//ДляФормированияПроводок 	 	ИЛИ УчетПродажИСебестоимостиОбороты.Регистратор ССЫЛКА Документ.ОтчетКомитентуОПродажах)
	|
	|СГРУППИРОВАТЬ ПО
	|	УчетПродажИСебестоимостиОбороты.АналитикаВидаУчета,
	|	УчетПродажИСебестоимостиОбороты.АналитикаУчетаПартий,
	|	УчетПродажИСебестоимостиОбороты.АналитикаУчетаНоменклатуры
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрАналитикаУчетаПартий.Комиссионер 				 КАК Контрагент,
	|	РегистрАналитикаУчетаПартий.ДоговорКомиссионера 		 КАК ДоговорКонтрагента,
	|	РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	РегистрАналитикаРаспределенияЗатрат.Продукция 			 КАК Номенклатура,
	|	РегистрАналитикаУчетаПрочихЗатрат.СубконтоНУ1 			 КАК СтатьяПрочихДоходовИРасходов,
	|
	|	ЕСТЬNULL(РегистрАналитикаВидаУчета.СчетУчетаНУ, РегистрАналитикаУчетаПрочихЗатрат.СчетУчетаНУ) 		КАК СчетУчетаНУ,
	|	ЕСТЬNULL(РегистрАналитикаУчетаПартий.ДоговорКомиссионера.РасчетыВУсловныхЕдиницах, ЛОЖЬ) 			КАК РасчетыВУсловныхЕдиницах,
	|	ВЫБОР
	|		КОГДА &ОценкаДоходовРасходовПоКурсуАвансов
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЕСТЬNULL(РегистрАналитикаУчетаПартий.ДоговорКомиссионера.РасчетыВУсловныхЕдиницах, ЛОЖЬ)
	|	КОНЕЦ 																								КАК КорректировкуВключатьВДоходы,
	|
	|	СУММА(УчетПродажИСебестоимостиОбороты.Количество) 		 КАК Количество,
	|	СУММА(УчетПродажИСебестоимостиОбороты.Сумма) 			 КАК Сумма,
	|	СУММА(УчетПродажИСебестоимостиОбороты.Корректировка) 	 КАК Корректировка
	|
	|ПОМЕСТИТЬ ВыручкаНУ
	|ИЗ
	|	УчетПродажИСебестоимостиОбороты КАК УчетПродажИСебестоимостиОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|		ПО УчетПродажИСебестоимостиОбороты.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПрочихЗатрат КАК РегистрАналитикаУчетаПрочихЗатрат
	|		ПО УчетПродажИСебестоимостиОбороты.АналитикаВидаУчета = РегистрАналитикаУчетаПрочихЗатрат.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК РегистрАналитикаУчетаПартий
	|		ПО УчетПродажИСебестоимостиОбороты.АналитикаУчетаПартий = РегистрАналитикаУчетаПартий.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрАналитикаРаспределенияЗатрат
	|		ПО УчетПродажИСебестоимостиОбороты.АналитикаУчетаНоменклатуры = РегистрАналитикаРаспределенияЗатрат.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РегистрАналитикаУчетаПартий.Комиссионер,
	|	РегистрАналитикаУчетаПартий.ДоговорКомиссионера,
	|	РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа,
	|	РегистрАналитикаРаспределенияЗатрат.Продукция,
	|	РегистрАналитикаУчетаПрочихЗатрат.СубконтоНУ1,
	|	ЕСТЬNULL(РегистрАналитикаВидаУчета.СчетУчетаНУ, РегистрАналитикаУчетаПрочихЗатрат.СчетУчетаНУ),
	|	ЕСТЬNULL(РегистрАналитикаУчетаПартий.ДоговорКомиссионера.РасчетыВУсловныхЕдиницах, ЛОЖЬ),
	|	ВЫБОР
	|		КОГДА &ОценкаДоходовРасходовПоКурсуАвансов
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЕСТЬNULL(РегистрАналитикаУчетаПартий.ДоговорКомиссионера.РасчетыВУсловныхЕдиницах, ЛОЖЬ)
	|	КОНЕЦ
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ УчетПродажИСебестоимостиОбороты
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОтборПоАналитикеВидаУчета";*/
			if(true/*ДляФормированияПроводок*/)
			{
				/*// "Включим" в запросе отбор по регистратору
*/
				/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДляФормированияПроводок", "");*/
			}
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.УстановитьПараметр("Организация",                         Организация);*/
			/*Запрос.УстановитьПараметр("НачалоПериода",                       НачалоПериода);*/
			/*Запрос.УстановитьПараметр("КонецПериода",                        КонецПериода);*/
			/*Запрос.УстановитьПараметр("НетОтбораСчетов",                     ОтборСчетов = Неопределено);*/
			/*Запрос.УстановитьПараметр("ОтборСчетов",                         ОтборСчетов);*/
			/*Запрос.УстановитьПараметр("ОценкаДоходовРасходовПоКурсуАвансов", БухгалтерскийУчетРасчетовСКонтрагентами.ПолучитьОценкуДоходовРасходовПоКурсуАвансов(НачалоПериода));*/
			/*Запрос.Выполнить();*/
		}
		// СформироватьВременнуюТаблицуВыручкаНУ()
		// Возвращает значение нормы, соответствующее проценту от выручки
		//

		public object ОпределитьНормуРасходовПоВыручке(/*СтруктураШапкиДокумента, Процент*/)
		{
			/*// Формируем массив счетов учета выручки
*/
			/*СписокВидовДоходов = Новый Массив;*/
			/*СписокВидовДоходов.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейОсновныхСредств);*/
			/*СписокВидовДоходов.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейНематериальныхАктивов);*/
			/*СписокВидовДоходов.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейОбъектовСтроительства);*/
			/*СписокВидовДоходов.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейПрочегоИмущества);*/
			/*СписокВидовДоходов.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейИмущественныхПравКромеПраваТребования);*/
			/*СписокВидовДоходов.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейИмущественныхПравПоОбъектамОбслуживающихПроизводств);*/
			/*СписокВидовДоходов.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейЦенныхБумаг);*/
			/*мКонДата    = КонецМесяца (СтруктураШапкиДокумента.Дата);*/
			/*мНачГода    = НачалоГода(СтруктураШапкиДокумента.Дата);*/
			/*мКонГраница = Новый Граница(мКонДата, ВидГраницы.Включая);*/
			/*// Формируем запрос по счетам учета выручки
*/
			/*ЗапросПоВыручке = Новый Запрос;*/
			/*ЗапросПоВыручке.УстановитьПараметр("НачалоМесяца", мНачГода);*/
			/*ЗапросПоВыручке.УстановитьПараметр("КонецМесяца",  мКонГраница);*/
			/*ЗапросПоВыручке.УстановитьПараметр("Организация",  СтруктураШапкиДокумента.Организация);*/
			/*ЗапросПоВыручке.УстановитьПараметр("Выручка90", ПланыСчетов.Налоговый.Выручка);*/
			/*ЗапросПоВыручке.УстановитьПараметр("Выручка91", ПланыСчетов.Налоговый.ПрочиеДоходы);*/
			/*ЗапросПоВыручке.УстановитьПараметр("ПрочиеДоходы", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);*/
			/*ЗапросПоВыручке.УстановитьПараметр("СписокВидовДоходов", СписокВидовДоходов);*/
			/*ЗапросПоВыручке.Текст = "ВЫБРАТЬ
	                        |	НалоговыйОбороты.СуммаОборотКт КАК ОборотКт
	                        |ИЗ
	                        |	РегистрБухгалтерии.Налоговый.Обороты(&НачалоМесяца, &КонецМесяца, , Счет В ИЕРАРХИИ (&Выручка90), , Организация = &Организация И ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.НУ), , ) КАК НалоговыйОбороты
	                        |
	                        |ОБЪЕДИНИТЬ ВСЕ
	                        |
	                        |ВЫБРАТЬ
	                        |	НалоговыйОбороты.СуммаОборотКт
	                        |ИЗ
	                        |	РегистрБухгалтерии.Налоговый.Обороты(
	                        |			&НачалоМесяца,
	                        |			&КонецМесяца,
	                        |			,
	                        |			Счет В ИЕРАРХИИ (&Выручка91),
	                        |			&ПрочиеДоходы,
	                        |			Организация = &Организация
	                        |				И Субконто1.ВидПрочихДоходовИРасходов В (&СписокВидовДоходов)
	                        |				И ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.НУ)
	                        |			,
	                        |			) КАК НалоговыйОбороты";*/
			/*ВыборкаВыручки = ЗапросПоВыручке.Выполнить().Выбрать();*/
			/*// Собираем выручку
*/
			/*ВыручкаНУ = 0;*/
			while(true/*ВыборкаВыручки.Следующий()*/)
			{
				/*ВыручкаНУ = ВыручкаНУ + ?(ВыборкаВыручки.ОборотКт = Null, 0, ВыборкаВыручки.ОборотКт);*/
			}
			/*// Определяем норму
*/
			return null;
		}
	}
}

