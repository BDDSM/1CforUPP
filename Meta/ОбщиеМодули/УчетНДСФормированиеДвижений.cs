using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace V82.ОбщиеМодули
{
	public partial class УчетНДСФормированиеДвижений
	{
		//////////////////////////////////////////////////////////////////////////
		//  ОПЕРАТИВНЫЕ ДВИЖЕНИЯ РЕГИСТРОВ ПОДСИСТЕМЫ НДС
		// Процедура вызывается из модулей документов прихода.
		// Отражает поступление МПЗ или затрат в подсистеме учета НДС
		//

		public void СформироватьДвиженияПоРегиструНДСПредъявленный(/*СтруктураШапкиДокумента, ТаблицаПредъявленногоНДС, Отказ*/)
		{
			/*УчетНДС.ДополнитьСтруктуруШапкиДокументаДляНДС(СтруктураШапкиДокумента);*/
			/*СсылкаНаДокумент = СтруктураШапкиДокумента.Ссылка;*/
			/*Движения = Новый Структура();*/
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения, "НДСПредъявленный", СсылкаНаДокумент);*/
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения, "НДСКосвенныеРасходы", СсылкаНаДокумент);*/
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения, "НДСВключенныйВСтоимость", СсылкаНаДокумент);*/
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения, "НДСНезавершенноеПроизводство", СсылкаНаДокумент);*/
			if(true/*ТипЗнч(СтруктураШапкиДокумента.Ссылка) <> Тип("ДокументСсылка.ОтчетКомиссионераОПродажах")*/)
			{
				/*//Документ ОтчетКомиссионераОПродажах вызывает данную процедуру но не является регистратором регистра НДСпоОСиНМА
*/
				/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения, "НДСпоОСиНМА", СсылкаНаДокумент);*/
			}
			/*ТаблицаДвижений_НДСПредъявленный = Движения.НДСПредъявленный.ВыгрузитьКолонки();*/
			/*ТаблицаДвижений_НДСпоОСиНМА = Неопределено;*/
			/*ТаблицаДвижений_НДСКосвенныеРасходы = Неопределено;*/
			/*ТаблицаДвижений_НДСВключенныйВСтоимость = Неопределено;*/
			/*ТаблицаДвижений_НДСНезавершенноеПроизводство = Неопределено;*/
			if(true/*СтруктураШапкиДокумента.СложныйУчетНДС*/)
			{
				/*СчетаУчетаКосвенныхРасходов = УчетНДС.ОпределитьСчетаУчетаКосвенныхРасходов();*/
				/*СчетаУчетаПроизводственныхРасходов = УчетНДС.ОпределитьСчетаУчетаПроизводственныхРасходов();*/
			}
			/*СчетаУчетаОСиНМАиОБъектовСтроительства = УчетНДС.ОпределитьСчетаУчетаОСиНМА(, СтруктураШапкиДокумента.Дата);*/
			/*СчетаУчетаОС = УчетНДС.ОпределитьСчетаУчетаОСиНМА("ОС", СтруктураШапкиДокумента.Дата);*/
			/*СчетаУчетаОборудование = УчетНДС.ОпределитьСчетаУчетаОСиНМА("Оборудование", СтруктураШапкиДокумента.Дата);*/
			/*СчетаУчетаНМА = УчетНДС.ОпределитьСчетаУчетаОСиНМА("НМА");*/
			/*ОсобыеУсловияБлокировкиВычета2006_ОСиНМА = (СтруктураШапкиДокумента.Дата >= '20060101');*/
			/*ИспользоватьДокументРасчетовКакСчетФактуру = СтруктураШапкиДокумента.Свойство("ИспользоватьДокументРасчетовКакСчетФактуру")
												И СтруктураШапкиДокумента.ИспользоватьДокументРасчетовКакСчетФактуру;*/
			/*НДСВключенВСтоимость = СтруктураШапкиДокумента.Свойство("НДСВключенВСтоимость") И СтруктураШапкиДокумента.НДСВключенВСтоимость;*/
			/*ЕстьКолонкаСтатьяЗатрат = ТаблицаПредъявленногоНДС.Колонки.Найти("СтатьяЗатрат") <> Неопределено;*/
			/*ЕстьКолонкаНоменклатурнаяГруппа = ТаблицаПредъявленногоНДС.Колонки.Найти("НоменклатурнаяГруппа") <> Неопределено;*/
			/*ЕстьКолонкаПодразделениеОрганизации = ТаблицаПредъявленногоНДС.Колонки.Найти("ПодразделениеОрганизации") <> Неопределено;*/
			/*ЕстьКолонкаЗаказПокупателя = ТаблицаПредъявленногоНДС.Колонки.Найти("ЗаказПокупателя") <> Неопределено;*/
			/*ЕстьКолонкаЗаказ = ТаблицаПредъявленногоНДС.Колонки.Найти("Заказ") <> Неопределено;*/
			/*ЕстьКолонкаСчетЗатратНУ = ТаблицаПредъявленногоНДС.Колонки.Найти("СчетЗатратНУ") <> Неопределено;*/
			/*ЕстьКолонкаНоменклатура = ТаблицаПредъявленногоНДС.Колонки.Найти("Номенклатура") <> Неопределено;*/
			if(true/*ТаблицаДвижений_НДСПредъявленный.Количество() > 0*/)
			{
				/*Движения.НДСПредъявленный.мПериод = СтруктураШапкиДокумента.Дата;*/
				/*Движения.НДСПредъявленный.мТаблицаДвижений = ТаблицаДвижений_НДСПредъявленный;*/
				/*Движения.НДСПредъявленный.ДобавитьДвижение();*/
				/*Движения.НДСПредъявленный.Записать(Ложь);*/
			}
			if(true/*Не ТаблицаДвижений_НДСпоОСиНМА = Неопределено*/)
			{
				/*Движения.НДСпоОСиНМА.мПериод = СтруктураШапкиДокумента.Дата;*/
				/*Движения.НДСпоОСиНМА.мТаблицаДвижений = ТаблицаДвижений_НДСпоОСиНМА;*/
				/*Движения.НДСпоОСиНМА.ВыполнитьПриход();*/
				/*Движения.НДСпоОСиНМА.Записать(Ложь);*/
			}
			if(true/*Не ТаблицаДвижений_НДСКосвенныеРасходы = Неопределено*/)
			{
				/*Движения.НДСКосвенныеРасходы.мПериод = СтруктураШапкиДокумента.Дата;*/
				/*Движения.НДСКосвенныеРасходы.мТаблицаДвижений = ТаблицаДвижений_НДСКосвенныеРасходы;*/
				/*Движения.НДСКосвенныеРасходы.ВыполнитьПриход();*/
				/*Движения.НДСКосвенныеРасходы.Записать(Ложь);*/
			}
			if(true/*Не ТаблицаДвижений_НДСНезавершенноеПроизводство = Неопределено*/)
			{
				/*Движения.НДСНезавершенноеПроизводство.мПериод = СтруктураШапкиДокумента.Дата;*/
				/*Движения.НДСНезавершенноеПроизводство.мТаблицаДвижений = ТаблицаДвижений_НДСНезавершенноеПроизводство;*/
				/*Движения.НДСНезавершенноеПроизводство.ВыполнитьПриход();*/
				/*Движения.НДСНезавершенноеПроизводство.Записать(Ложь);*/
			}
			if(true/*Не ТаблицаДвижений_НДСВключенныйВСтоимость = Неопределено*/)
			{
				/*Движения.НДСВключенныйВСтоимость.мПериод = СтруктураШапкиДокумента.Дата;*/
				/*Движения.НДСВключенныйВСтоимость.мТаблицаДвижений = ТаблицаДвижений_НДСВключенныйВСтоимость;*/
				/*Движения.НДСВключенныйВСтоимость.ДобавитьДвижение();*/
				/*Движения.НДСВключенныйВСтоимость.Записать(Ложь);*/
			}
		}
		// СформироватьДвиженияПоРегиструНДСПредъявленный()

		public void СформироватьДвиженияПоРегиструНДСНачисленный_ОтражениеРеализации(/*СтруктураШапкиДокумента, ТабЧасть, Движения = Неопределено, Отказ, СчетОтнесенияНДС, ЭтоВозврат = Ложь, СписаниеПартий = Ложь*/)
		{
			/*УчетНДС.ДополнитьСтруктуруШапкиДокументаДляНДС(СтруктураШапкиДокумента, Истина);*/
			/*СсылкаНаДокумент = СтруктураШапкиДокумента.Ссылка;*/
			if(true/*Движения = Неопределено 
		Или Не Движения.Свойство("ТаблицаДвиженийНДСНачисленный")*/)
			{
				if(true/*Движения = Неопределено*/)
				{
					/*Движения = Новый Структура("СтруктураСодержитНаборыЗаписей", Истина);*/
				}
				/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения, "НДСНачисленный", СсылкаНаДокумент);*/
				/*ТаблицаДвижений_НДСНачисленный	= Движения.НДСНачисленный.ВыгрузитьКолонки();*/
			}
			/*ЕстьСчетУчета = ТабЧасть.Колонки.Найти("СчетУчетаБУ") <> Неопределено;*/
			if(true/*ЕстьСчетУчета*/)
			{
				/*Запрос = Новый Запрос;*/
				/*Запрос.Текст = "ВЫБРАТЬ
		               |	Хозрасчетный.Ссылка КАК Счет
		               |ИЗ
		               |	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		               |ГДЕ
		               |	Хозрасчетный.Забалансовый = ИСТИНА";*/
				/*ЗабалансовыеСчета = Новый СписокЗначений();*/
				/*ЗабалансовыеСчета.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Счет"));*/
			}
			/*Ставка0 = Перечисления.СтавкиНДС.НДС0;*/
			/*КомиссияПоПокупателям = СтруктураШапкиДокумента.Свойство("КомиссияПоПокупателям") И СтруктураШапкиДокумента.КомиссияПоПокупателям;*/
			/*ТаблицаДвижений_НДСРеализация0	= Неопределено;*/
			/*ЕстьКолонкаСчетДоходовБУ = ТабЧасть.Колонки.Найти("СчетДоходовБУ") <> Неопределено;*/
			/*ЕстьКолонкаКомиссионный = ТабЧасть.Колонки.Найти("Комиссионный") <> Неопределено;*/
			/*ЕстьКолонкаПринадлежностьНоменклатуры = ТабЧасть.Колонки.Найти("ПринадлежностьНоменклатуры") <> Неопределено 
											И УправлениеЗапасами.ИспользуетсяРасширеннаяАналитикаУчета(СтруктураШапкиДокумента.Дата);*/
			/*ЕстьКолонкаДоговорКомиссии = ТабЧасть.Колонки.Найти("ДоговорКомиссии") <> Неопределено;*/
			/*ЕстьКолонкаСчетДоходовБУ = ТабЧасть.Колонки.Найти("СчетДоходовБУ") <> Неопределено;*/
			/*ЕстьСчетДоходовБУЕНВД = СтруктураШапкиДокумента.Свойство("СчетДоходовБУ") И НалоговыйУчетУСН.ОтноситсяКДеятельностиЕНВД(СтруктураШапкиДокумента.СчетДоходовБУ);*/
			/*Контрагент = ?(СтруктураШапкиДокумента.Свойство("Контрагент"), СтруктураШапкиДокумента.Контрагент, СтруктураШапкиДокумента.Организация);*/
			/*ИспользоватьДокументРасчетовКакСчетФактуру = СтруктураШапкиДокумента.Свойство("ИспользоватьДокументРасчетовКакСчетФактуру")
												И СтруктураШапкиДокумента.ИспользоватьДокументРасчетовКакСчетФактуру;*/
			/*ТипыСчетФактураРеализация0 = Метаданные.РегистрыНакопления.НДСРеализация0.Измерения.СчетФактура.Тип;*/
			if(true/*Движения.Свойство("СтруктураСодержитНаборыЗаписей")*/)
			{
				/*Движения.НДСНачисленный.мПериод = СтруктураШапкиДокумента.Дата;*/
				/*Движения.НДСНачисленный.мТаблицаДвижений = ТаблицаДвижений_НДСНачисленный;*/
				/*Движения.НДСНачисленный.ДобавитьДвижение();*/
				/*Движения.НДСНачисленный.Записать(Ложь);*/
			}
			if(true/*Не ТаблицаДвижений_НДСРеализация0 = Неопределено*/)
			{
				if(true/*Движения.Свойство("СтруктураСодержитНаборыЗаписей") 
			И Движения.Свойство("СтруктураСодержитНаборыЗаписей")*/)
				{
					/*Движения.НДСРеализация0.мПериод          = СтруктураШапкиДокумента.Дата;*/
					/*Движения.НДСРеализация0.мТаблицаДвижений = ТаблицаДвижений_НДСРеализация0;*/
					/*Движения.НДСРеализация0.ДобавитьДвижение();*/
					/*Движения.НДСРеализация0.Записать(Ложь);*/
				}
			}
			if(true/*Движения.Свойство("СтруктураСодержитНаборыЗаписей") 
		И Движения.СтруктураСодержитНаборыЗаписей*/)
			{
				if(true/*Движения.Свойство("НДСНачисленный")*/)
				{
					/*Движения.Удалить("НДСНачисленный");*/
				}
				if(true/*Движения.Свойство("НДСРеализация0")*/)
				{
					/*Движения.Удалить("НДСРеализация0");*/
				}
			}
		}
		// СформироватьДвиженияПоРегиструНДСНачисленный_ОтражениеРеализации()

		public void СформироватьДвиженияНДСНезавершенноеПроизводство_ОтчетПроизводстваЗаСмену(/*СтруктураШапкиДокумента,ТаблицаПоПродукцииНЗП*/)
		{
			if(true/*УправлениеЗапасами.ИспользуетсяРасширеннаяАналитикаУчета(СтруктураШапкиДокумента.Дата)*/)
			{
			}
			if(true/*ТаблицаПоПродукцииНЗП.Количество()=0*/)
			{
			}
			/*СтруктураПараметров = новый Структура();*/
			/*СтруктураПараметров.Вставить("НоменклатурныеГруппыДляРеализацииБезНДСиНДС0", УчетНДС.ПолучитьНоменклатурныеГруппыДляРеализацииБезНДСиНДС0(СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.Организация, новый Структура()));*/
			/*КолвоЭлементов = ТаблицаПоПродукцииНЗП.Количество();*/
			if(true/*ТаблицаПоПродукцииНЗП.Количество()=0*/)
			{
			}
			/*ТабИмен = Неопределено;*/
			/*ОбщегоНазначения.ПереименоватьКолонкуТаблицыЗначений(ТаблицаПоПродукцииНЗП, ТабИмен, "Подразделение", 				"ПодразделениеУпр");*/
			/*ОбщегоНазначения.ПереименоватьКолонкуТаблицыЗначений(ТаблицаПоПродукцииНЗП, ТабИмен, "ПодразделениеОрганизации", 	"Подразделение");*/
			/*ТаблицаПоПродукцииНЗП.Колонки.Добавить("КодОперации");*/
			/*ТаблицаПоПродукцииНЗП.ЗаполнитьЗначения(Перечисления.КодыОперацийНезавершенноеПроизводство.ВнутренниеУслугиНаПроизводство,"КодОперации");*/
			/*Движения = новый Структура();*/
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения,"НДСНезавершенноеПроизводство",СтруктураШапкиДокумента.Ссылка);*/
			/*Движения.НДСНезавершенноеПроизводство.мПериод      = СтруктураШапкиДокумента.Дата;*/
			/*Движения.НДСНезавершенноеПроизводство.мТаблицаДвижений = ТаблицаПоПродукцииНЗП;*/
			/*Движения.НДСНезавершенноеПроизводство.ВыполнитьПриход();*/
			/*Движения.НДСНезавершенноеПроизводство.Записать(ложь);*/
		}
		//////////////////////////////////////////////////
		//  ПО НДС НАЧИСЛЕННОМУ С ПОЛУЧЕННОГО АВАНСА
		// Формирует движения по регистрам НДС и бух.проводки для документа СФ Выданный на аванс
		//

		public void СформироватьДвиженияСчетФактураВыданныйНаАванс(/*СтруктураШапкиДокумента, ТаблицаПоСчетуФактуре*/)
		{
			/*// Движения по исправленным счетам-фактурам формируются только регламентной обработкой
*/
			/*// проведения документов по регистрам НДС
*/
			if(true/*СтруктураШапкиДокумента.Исправление*/)
			{
			}
			/*Движения = Новый Структура;*/
			/*СформироватьДвиженияНДСНачисленныйСчетФактураВыданныйНаАванс(СтруктураШапкиДокумента, ТаблицаПоСчетуФактуре, Движения);*/
			/*СформироватьДвиженияНДСсАвансовСчетФактураВыданныйНаАванс(СтруктураШапкиДокумента, ТаблицаПоСчетуФактуре, Движения);*/
			/*СформироватьПроводкиСчетФактураВыданныйНаАванс(СтруктураШапкиДокумента, ТаблицаПоСчетуФактуре, Движения);*/
		}
		// Формирует движения по регистру НДСНачисленный для документа СФ Выданный на аванс
		//

		public void СформироватьДвиженияНДСНачисленныйСчетФактураВыданныйНаАванс(/*СтруктураШапкиДокумента, ТаблицаПоСчетуФактуре, Движения*/)
		{
			if(true/*СтруктураШапкиДокумента.Исправление*/)
			{
			}
			if(true/*ТипЗнч(СтруктураШапкиДокумента.ДокументОснование) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах")
		И НЕ ЗначениеЗаполнено(СтруктураШапкиДокумента.ДоговорКонтрагента)*/)
			{
				/*СФВыданный = СтруктураШапкиДокумента.Ссылка;*/
			}
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения, "НДСНачисленный", СтруктураШапкиДокумента.Ссылка);*/
			/*ТаблицаДвижений_НДСНачисленный = Движения.НДСНачисленный.ВыгрузитьКолонки();*/
			/*Движения.НДСНачисленный.мПериод          = СтруктураШапкиДокумента.Дата;*/
			/*Движения.НДСНачисленный.мТаблицаДвижений = ТаблицаДвижений_НДСНачисленный;*/
			/*Движения.НДСНачисленный.ВыполнитьПриход();*/
		}
		// Формирует движения по регистру НДСЗаписиКнигиПродаж для документа СФ Выданный на аванс
		//

		public void СформироватьДвиженияНДСЗаписиКнигиПродажСчетФактураВыданныйНаАванс(/*СтруктураШапкиДокумента, ТаблицаПоСчетуФактуре, Движения*/)
		{
			if(true/*НЕ СтруктураШапкиДокумента.Исправление*/)
			{
			}
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения, "НДСЗаписиКнигиПродаж", СтруктураШапкиДокумента.Ссылка);*/
			/*ТаблицаДвижений_НДСЗаписиКнигиПродаж = Движения.НДСЗаписиКнигиПродаж.ВыгрузитьКолонки();*/
			/*ДатаОплаты = ОбщегоНазначения.ПолучитьЗначениеРеквизита(СтруктураШапкиДокумента.ДокументОснование, "Дата");*/
			/*ЗаписьДопЛиста = НачалоКвартала(ДатаОплаты) < НачалоКвартала(СтруктураШапкиДокумента.Дата);*/
			if(true/*ТипЗнч(СтруктураШапкиДокумента.ДокументОснование) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах")
		И НЕ ЗначениеЗаполнено(СтруктураШапкиДокумента.ДоговорКонтрагента)*/)
			{
				/*СФВыданный = СтруктураШапкиДокумента.ИсправляемыйСчетФактура;*/
			}
			/*Движения.НДСЗаписиКнигиПродаж.мПериод          = СтруктураШапкиДокумента.Дата;*/
			/*Движения.НДСЗаписиКнигиПродаж.мТаблицаДвижений = ТаблицаДвижений_НДСЗаписиКнигиПродаж;*/
			/*Движения.НДСЗаписиКнигиПродаж.ДобавитьДвижение();*/
		}
		// Формирует движения по регистру НДСсАвансов для документа СФ Выданный на аванс
		//

		public void СформироватьДвиженияНДСсАвансовСчетФактураВыданныйНаАванс(/*СтруктураШапкиДокумента, ТаблицаПоСчетуФактуре, Движения*/)
		{
			if(true/*ТипЗнч(СтруктураШапкиДокумента.ДокументОснование) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах")
		И НЕ ЗначениеЗаполнено(СтруктураШапкиДокумента.ДоговорКонтрагента)
		И УчетНДС.ПолучитьВерсиюПостановления(СтруктураШапкиДокумента.Дата) = 2*/)
			{
			}
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения, "НДСсАвансов", СтруктураШапкиДокумента.Ссылка);*/
			/*ТаблицаДвижений_НДССАвансов = Движения.НДСсАвансов.ВыгрузитьКолонки();*/
			/*Движения.НДСсАвансов.мПериод          = СтруктураШапкиДокумента.Дата;*/
			/*Движения.НДСсАвансов.мТаблицаДвижений = ТаблицаДвижений_НДССАвансов;*/
			/*Движения.НДСсАвансов.ВыполнитьПриход();*/
		}
		// Формирование движений по регистру Хозрасчетный.
		//
		// Параметры:
		//  СтруктураШапкиДокумента   - структура, содержащая рексвизиты шапки документа и результаты запроса по шапке
		//  Отказ                     - флаг отказа в проведении,
		//  Заголовок                 - строка, заголовок сообщения об ошибке проведения.
		//

		public void СформироватьПроводкиСчетФактураВыданныйНаАванс(/*СтруктураШапкиДокумента, ТаблицаПоСчетуФактуре, Движения*/)
		{
			/*ДобавитьНаборРегистраБухгалтерииВСтруктуруДвижений(Движения, "Хозрасчетный", СтруктураШапкиДокумента.Ссылка);*/
			if(true/*ТипЗнч(СтруктураШапкиДокумента.ДокументОснование) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах")
		И НЕ ЗначениеЗаполнено(СтруктураШапкиДокумента.ДоговорКонтрагента)*/)
			{
				if(true/*СтруктураШапкиДокумента.Исправление*/)
				{
					/*СФВыданный = СтруктураШапкиДокумента.ИсправляемыйСчетФактура;*/
				}
			}
		}
		//////////////////////////////////////////////////
		//  ПО НДС ПРЕДЪЯВЛЕННОМУ ПО ПОЛУЧЕННОМУ СЧЕТУ-ФАКТУРЕ НА АВАНС
		// Формирует движения по регистрам НДС для документа СФ Полученный на аванс
		//

		public void СформироватьДвиженияСчетФактураПолученныйНаАванс(/*СтруктураШапкиДокумента, ТаблицаПоСчетуФактуре*/)
		{
			/*// Движения по исправленным счетам-фактурам формируются только регламентной обработкой
*/
			/*// проведения документов по регистрам НДС
*/
			if(true/*СтруктураШапкиДокумента.Исправление*/)
			{
			}
			if(true/*СтруктураШапкиДокумента.ВидСчетаФактуры <> Перечисления.ВидСчетаФактурыПолученного.НаАванс
		ИЛИ ТипЗнч(СтруктураШапкиДокумента.ДокументОснование) = Тип("ДокументСсылка.ОтчетКомитентуОПродажах")*/)
			{
			}
			/*Движения = Новый Структура;*/
			/*СформироватьДвиженияНДСПредъявленныйСчетФактураПолученныйНаАванс(СтруктураШапкиДокумента, ТаблицаПоСчетуФактуре, Движения);*/
			/*СформироватьДвиженияНДСсАвансовСчетФактураПолученныйНаАванс(СтруктураШапкиДокумента, ТаблицаПоСчетуФактуре, Движения);*/
		}
		// Формирует движения по регистру НДСПредъявленный для документа СФ Полученный на аванс
		//

		public void СформироватьДвиженияНДСПредъявленныйСчетФактураПолученныйНаАванс(/*СтруктураШапкиДокумента, ТаблицаПоСчетуФактуре, Движения*/)
		{
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения, "НДСПредъявленный", СтруктураШапкиДокумента.Ссылка);*/
			/*ТаблицаДвижений_НДСПредъявленный = Движения.НДСПредъявленный.ВыгрузитьКолонки();*/
			/*Движения.НДСПредъявленный.мПериод          = СтруктураШапкиДокумента.Дата;*/
			/*Движения.НДСПредъявленный.мТаблицаДвижений = ТаблицаДвижений_НДСПредъявленный;*/
			/*Движения.НДСПредъявленный.ВыполнитьПриход();*/
		}
		// Формирует движения по регистру НДСсАвансов для документа СФ полученный на аванс
		//

		public void СформироватьДвиженияНДСсАвансовСчетФактураПолученныйНаАванс(/*СтруктураШапкиДокумента, ТаблицаПоСчетуФактуре, Движения*/)
		{
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения, "НДСсАвансов", СтруктураШапкиДокумента.Ссылка);*/
			/*ТаблицаДвижений_НДССАвансов = Движения.НДСсАвансов.ВыгрузитьКолонки();*/
			/*Движения.НДСсАвансов.мПериод          = СтруктураШапкиДокумента.Дата;*/
			/*Движения.НДСсАвансов.мТаблицаДвижений = ТаблицаДвижений_НДССАвансов;*/
			/*Движения.НДСсАвансов.ВыполнитьПриход();*/
		}
		//////////////////////////////////////////////////
		//  ПО НДС НАЧИСЛЕННОМУ ПО РЕАЛИЗАЦИИ
		// Процедура вызывается из модуля управления взаиморасчетами в тех случаях,
		// когда взаиморасчеты с поставщиками ведутся в У.Е. с использованием рублевого
		// покрытия. По переданной таблице суммовых разниц формируются движения
		// корректирующие суммы событий, отраженных в регистре "НДСПокупки".

		public void КорректировкаРегистровНДСПоСуммовымРазницам_Реализация(/*СтруктураШапкиДокумента, ИсходнаяТаблицаСуммовыхРазниц, КорректировкаДокумента = Ложь, ЗачетАванса = Ложь*/)
		{
			if(true/*ИсходнаяТаблицаСуммовыхРазниц.Количество() = 0*/)
			{
			}
			/*ТаблицаДоОктября2011 = ИсходнаяТаблицаСуммовыхРазниц.Скопировать();*/
			/*ТаблицаДоОктября2011.Колонки.Добавить("ДатаДокумента", Новый ОписаниеТипов("Дата"));*/
			/*УчетНДС.ЗаполнитьДатуДокументовВТаблице(ТаблицаДоОктября2011, "Документ", "ДатаДокумента");*/
			if(true/*НЕ ЗачетАванса*/)
			{
				/*УдаляемыеСтроки = Новый Массив;*/
				if(true/*ТаблицаДоОктября2011.Количество() = 0*/)
				{
					/*// По документам отгрузки с датой, начиная с октября 2011, налоговая база по НДС 
*/
					/*// при расчетах в условных единицах определяется по курсу на дату реализации,
*/
					/*// при последующей оплате корректировки налоговой базы не производятся 
*/
				}
			}
			if(true/*СтруктураШапкиДокумента.Свойство("Период") 
		И ЗначениеЗаполнено(СтруктураШапкиДокумента.Период)*/)
			{
				/*ДатаДвижений = СтруктураШапкиДокумента.Период;*/
			}
			if(true/*НЕ СтруктураШапкиДокумента.Свойство("ОрганизацияПрименяетУСН") 
		ИЛИ НЕ СтруктураШапкиДокумента.Свойство("УчитыватьПоложительныеСуммовыеРазницыПриНачисленииНДС")
		ИЛИ НЕ СтруктураШапкиДокумента.Свойство("УчитыватьОтрицательныеСуммовыеРазницыПриНачисленииНДС")
		ИЛИ НЕ СтруктураШапкиДокумента.Свойство("ВыписыватьОтдельныеСчетаФактурыНаСуммовыеРазницы")
		ИЛИ НЕ СтруктураШапкиДокумента.Свойство("НачислятьНДСПоОтгрузке")*/)
			{
				/*УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.Организация);*/
				if(true/*НЕ СтруктураШапкиДокумента.Свойство("ОрганизацияПрименяетУСН")*/)
				{
					/*СтруктураШапкиДокумента.Вставить("ОрганизацияПрименяетУСН",(ЗначениеЗаполнено(УчетнаяПолитика) И (УчетнаяПолитика.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Упрощенная)));*/
				}
				if(true/*НЕ СтруктураШапкиДокумента.Свойство("УчитыватьПоложительныеСуммовыеРазницыПриНачисленииНДС")*/)
				{
					/*СтруктураШапкиДокумента.Вставить("УчитыватьПоложительныеСуммовыеРазницыПриНачисленииНДС",?(НЕ ЗначениеЗаполнено(УчетнаяПолитика), Истина, УчетнаяПолитика.УчитыватьПоложительныеСуммовыеРазницыПриНачисленииНДС));*/
				}
				if(true/*НЕ СтруктураШапкиДокумента.Свойство("УчитыватьОтрицательныеСуммовыеРазницыПриНачисленииНДС")*/)
				{
					/*СтруктураШапкиДокумента.Вставить("УчитыватьОтрицательныеСуммовыеРазницыПриНачисленииНДС",?(НЕ ЗначениеЗаполнено(УчетнаяПолитика), Ложь, УчетнаяПолитика.УчитыватьОтрицательныеСуммовыеРазницыПриНачисленииНДС));*/
				}
				if(true/*НЕ СтруктураШапкиДокумента.Свойство("ВыписыватьОтдельныеСчетаФактурыНаСуммовыеРазницы")*/)
				{
					/*СтруктураШапкиДокумента.Вставить("ВыписыватьОтдельныеСчетаФактурыНаСуммовыеРазницы",?(НЕ ЗначениеЗаполнено(УчетнаяПолитика), Ложь, УчетнаяПолитика.ВыписыватьОтдельныеСчетаФактурыНаСуммовыеРазницы));*/
				}
				if(true/*НЕ СтруктураШапкиДокумента.Свойство("НачислятьНДСПоОтгрузке")*/)
				{
					/*СтруктураШапкиДокумента.Вставить("НачислятьНДСПоОтгрузке",?(НЕ ЗначениеЗаполнено(УчетнаяПолитика), Ложь, УчетнаяПолитика.НачислятьНДСПоОтгрузке));*/
				}
			}
			/*// Для периодов позднее 01.10.2011 г. значение учетной политики получаем на дату 30.09.2011 г. 
*/
			if(true/*ДатаДвижений >= '20111001' И НЕ ЗачетАванса*/)
			{
				/*Отказ = Ложь;*/
				/*ПараметрыУчетнойПолитики = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл('20110930', СтруктураШапкиДокумента.Организация);*/
				if(true/*ПараметрыУчетнойПолитики.Свойство("УчитыватьПоложительныеСуммовыеРазницыПриНачисленииНДС")*/)
				{
					/*УчитыватьПоложительныеРазницыДляНДС = ПараметрыУчетнойПолитики.УчитыватьПоложительныеСуммовыеРазницыПриНачисленииНДС;*/
					/*СтруктураШапкиДокумента.Вставить("УчитыватьПоложительныеСуммовыеРазницыПриНачисленииНДС", УчитыватьПоложительныеРазницыДляНДС);*/
				}
			}
			/*УчитыватьОтрицательныеРазницыДляНДС = СтруктураШапкиДокумента.УчитыватьОтрицательныеСуммовыеРазницыПриНачисленииНДС;*/
			/*ВыделятьНДСпоСР = (УчитыватьПоложительныеРазницыДляНДС ИЛИ УчитыватьОтрицательныеРазницыДляНДС ИЛИ ЗачетАванса);*/
			if(true/*СтруктураШапкиДокумента.ОрганизацияПрименяетУСН*/)
			{
				/*// Движения по этому документу делать не нужно
*/
			}
			/*РеестрСчетовФактур = ПолучитьДанныеДляНДСПоСуммовымРазницам_Реализация(СтруктураШапкиДокумента, ТаблицаДоОктября2011, КорректировкаДокумента, ЗачетАванса);*/
			if(true/*НЕ ВыделятьНДСпоСР*/)
			{
				/*// Суммовые разницы не нужно учитывать для НДС по реализации
*/
			}
			if(true/*НЕ ЗачетАванса*/)
			{
				/*СтрокиКУдалению = Новый Массив();*/
			}
			if(true/*РеестрСчетовФактур.Количество() = 0*/)
			{
			}
			/*Движения = Новый Структура();*/
			/*СсылкаНаДокумент = СтруктураШапкиДокумента.Ссылка;*/
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения,"НДСНачисленный",СсылкаНаДокумент);*/
			/*// Отражение сумовой разницы в регистре НДСНачисленный
*/
			/*ТаблицаДвижений_НДСНачисленный = Движения.НДСНачисленный.ВыгрузитьКолонки();*/
			/*СоответствиеКолонок = Новый Соответствие();*/
			/*СоответствиеКолонок.Вставить("СуммаБезНДС","СР_БезНДС");*/
			/*СоответствиеКолонок.Вставить("НДС","СР_НДС");*/
			/*УчетНДС.ПереименованиеКолонок(ТаблицаДвижений_НДСНачисленный, СоответствиеКолонок);*/
			/*ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(РеестрСчетовФактур,ТаблицаДвижений_НДСНачисленный);*/
			/*ТаблицаДвижений_НДСНачисленный.ЗаполнитьЗначения(ВидДвиженияНакопления.Приход,"ВидДвижения");*/
			if(true/*СтруктураШапкиДокумента.ВыписыватьОтдельныеСчетаФактурыНаСуммовыеРазницы И НЕ ЗачетАванса*/)
			{
				/*// Суммовая разница отражается по документу оплаты, а не по документу реализации
*/
				/*ТаблицаДвижений_НДСНачисленный.ЗаполнитьЗначения(СтруктураШапкиДокумента.Ссылка,"СчетФактура");*/
				/*ТаблицаДвижений_НДСНачисленный.ЗаполнитьЗначения(Перечисления.ВидыЦенностей.СуммыСвязанныеСРасчетамиПоОплате, "ВидЦенности");*/
				/*ТаблицаДвижений_НДСНачисленный.ЗаполнитьЗначения(Перечисления.НДСВидНачисления.НДСНачисленКУплате, "ВидНачисления");*/
				/*ТаблицаДвижений_НДСНачисленный.ЗаполнитьЗначения(Перечисления.СобытияПоНДСПродажи.НДСНачисленКУплате, "Событие");*/
			}
			/*ТаблицаДвижений_НДСНачисленный.ЗаполнитьЗначения(Перечисления.ВидыРегламентныхОпераций.КорректировкиПриВалютныхРасчетах, "ВидРегламентнойОперации");*/
			/*УчетНДС.ПереименованиеКолонок(ТаблицаДвижений_НДСНачисленный, СоответствиеКолонок, Истина);*/
			/*// Далее корректировка регистра НДСНачисленный не планируется
*/
			/*// Заполним набор записей регистра полученным результатом
*/
			/*Движения.НДСНачисленный.мПериод          = ДатаДвижений;*/
			/*Движения.НДСНачисленный.мТаблицаДвижений = ТаблицаДвижений_НДСНачисленный;*/
			/*Движения.НДСНачисленный.ДобавитьДвижение();*/
			/*Движения.НДСНачисленный.Записать(Ложь);*/
			/*// Отражение суммовой разницы при отражении суммовых разниц в соотвествии со ст 162 НК РФ 
*/
			/*// по реализации 0% не предусмотрено
*/
			if(true/*(ЗачетАванса ИЛИ НЕ СтруктураШапкиДокумента.ВыписыватьОтдельныеСчетаФактурыНаСуммовыеРазницы)
		И (РеестрСчетовФактур.Итог("ЕстьРеализация0") > 0)*/)
			{
				/*Построитель_РеестрСчетовФактур = Новый ПостроительЗапроса();*/
				/*ОписаниеИсточника_РеестрСчетовФактур = Новый ОписаниеИсточникаДанных(РеестрСчетовФактур);*/
				/*Построитель_РеестрСчетовФактур.ИсточникДанных = ОписаниеИсточника_РеестрСчетовФактур;*/
				/*ОтборПостроитель = Построитель_РеестрСчетовФактур.Отбор;*/
				/*ОтборПостроитель.Добавить("ЕстьРеализация0");*/
				/*ОтборПостроитель["ЕстьРеализация0"].Значение = 1;*/
				/*ОтборПостроитель["ЕстьРеализация0"].Использование = Истина;*/
				/*Построитель_РеестрСчетовФактур.Выполнить();*/
				/*Корректировки_НДСНачисленныйРеализация0 = Построитель_РеестрСчетовФактур.Результат.Выгрузить();*/
				/*ОтборПостроитель["ЕстьРеализация0"].Использование = Ложь;*/
				/*Корректировки_НДСНачисленныйРеализация0.Колонки.Добавить("СуммаБезНДС",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));*/
				/*Корректировки_НДСНачисленныйРеализация0.Колонки.Добавить("НДС",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));*/
				/*// Если суммовая разница невелика, велика вероятность того, что в реестре СФ присутствуют записи
*/
				/*// на которые суммовая разница не относится
*/
				/*СтрокиКУдалению = Новый Массив();*/
				if(true/*СтрокиКУдалению.Количество() > 0*/)
				{
				}
				/*Корректировки_НДСНачисленныйРеализация0.Свернуть("СчетФактура, ВидЦенности, СтавкаНДС","СуммаБезНДС,НДС");*/
				/*ОтразитьСуммовыеРазницыПоРеализации0_НДСНачисленный(СтруктураШапкиДокумента,Корректировки_НДСНачисленныйРеализация0);*/
			}
		}
		// КорректировкаРегистровНДСПоСуммовымРазницам_Реализация()

		public object ПолучитьДанныеДляНДСПоСуммовымРазницам_Реализация(/*СтруктураШапкиДокумента, ИсходнаяТаблицаСуммовыхРазниц, КорректировкаДокумента, ЗачетАванса*/)
		{
			/*// Исходный документ хранится в колонке ДокументРасчетов. В колонке Документ возможна замена.
*/
			/*ИсходнаяТаблицаСуммовыхРазниц.Колонки.Добавить("ДокументРасчетов", Новый ОписаниеТипов(ИсходнаяТаблицаСуммовыхРазниц.Колонки.Документ.ТипЗначения));*/
			/*ИсходнаяТаблицаСуммовыхРазниц.ЗагрузитьКолонку(ИсходнаяТаблицаСуммовыхРазниц.ВыгрузитьКолонку("Документ"), "ДокументРасчетов");*/
			if(true/*Не ЗачетАванса 
		И СтруктураШапкиДокумента.НачислятьНДСПоОтгрузке*/)
			{
				/*ДокументыНачислятьПоОтгрузке = Новый Массив;*/
				if(true/*ДокументыНачислятьПоОтгрузке.Количество() <> 0*/)
				{
					/*// Заменить документы реализации отгруженных товаров на документы отгрузки
*/
					/*Запрос = Новый Запрос;*/
					/*Запрос.УстановитьПараметр("Документы", ДокументыНачислятьПоОтгрузке);*/
					/*Запрос.Текст = "ВЫБРАТЬ
			               |	РеализацияОтгруженныхТоваров.Ссылка КАК Документ,
			               |	РеализацияОтгруженныхТоваров.ДокументОтгрузки
			               |ИЗ
			               |	Документ.РеализацияОтгруженныхТоваров КАК РеализацияОтгруженныхТоваров
			               |ГДЕ
			               |	РеализацияОтгруженныхТоваров.Ссылка В(&Документ)";*/
					/*ДокументыОтгрузки = Запрос.Выполнить().Выгрузить();*/
				}
			}
			/*// Формируем дерево счетов-фактур по которым нужно отразить суммовые разницы
*/
			/*СчетаФактурыПолученные = ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ИсходнаяТаблицаСуммовыхРазниц.ВыгрузитьКолонку("Документ"), Истина);*/
			/*РеестрСчетовФактур = ПолучитьДанныеПоКорректируемымСчетамФактурам_Реализация(СтруктураШапкиДокумента, СчетаФактурыПолученные, КорректировкаДокумента);*/
			/*СвернутаяТаблицаСФ = ИсходнаяТаблицаСуммовыхРазниц.Скопировать();*/
			/*СвернутаяТаблицаСФ.Свернуть("Документ", "СуммоваяРазница");*/
			if(true/*РеестрСчетовФактур.Количество() <> 0*/)
			{
				/*//Отразить распределение в таблице суммовых разниц
*/
				/*РеестрСчетовФактур.Колонки.Добавить("СуммоваяРазница", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));*/
				/*РеестрСчетовФактур.Колонки.Добавить("СР_БезНДС", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));*/
				/*РеестрСчетовФактур.Колонки.Добавить("СР_НДС", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));*/
				/*РеестрСчетовФактур.ЗагрузитьКолонку(РеестрСчетовФактур.ВыгрузитьКолонку("Базис_СНДС"),"СуммоваяРазница");*/
				/*Распределение = Новый Структура("СуммоваяРазница", "СуммоваяРазница");*/
				/*Отбор         = Новый Структура("СчетФактура", "Документ");*/
				/*РеестрСчетовФактур = ОбщегоНазначения.СформироватьКорректирующиеЗаписи(ИсходнаяТаблицаСуммовыхРазниц,РеестрСчетовФактур,Распределение,Отбор);*/
				/*СтрокиКУдалению = новый массив();*/
				/*// Разделим суммовую разницу на сумму без НДС и сумму с НДС
*/
				/*// Если суммовая разница невелика, велика вероятность что в реестре СФ присутствуют записи,
*/
				/*// на которые суммовая разница не относится
*/
				if(true/*СтрокиКУдалению.Количество()>0*/)
				{
				}
				/*// В исходную таблицу требуется добавить колонку НДС_НУ с суммой НДС по суммовой разнице для целей налогового учета
*/
				/*ИсходнаяТаблицаСуммовыхРазниц.Колонки.Добавить("НДС_НУ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));*/
				if(true/*РеестрСчетовФактур.Количество() <> 0*/)
				{
					/*ИсходнаяТаблицаСуммовыхРазниц.ЗагрузитьКолонку(ИсходнаяТаблицаСуммовыхРазниц.ВыгрузитьКолонку("СуммоваяРазница"), "НДС_НУ");*/
					/*Распределение = Новый Структура("НДС_НУ", "СР_НДС");*/
					/*Отбор         = Новый Структура("Документ, Контрагент", "СчетФактура", "Покупатель");*/
					/*ИсходнаяТаблицаСуммовыхРазниц = ОбщегоНазначения.СформироватьКорректирующиеЗаписи(РеестрСчетовФактур, ИсходнаяТаблицаСуммовыхРазниц,Распределение,Отбор);*/
				}
				/*ИсходнаяТаблицаСуммовыхРазниц.ЗагрузитьКолонку(ИсходнаяТаблицаСуммовыхРазниц.ВыгрузитьКолонку("ДокументРасчетов"), "Документ");*/
			}
			return null;
		}
		// Функция вызывается из процедуры "КорректировкаРегистровНДСПоСуммовымРазницам_Приобретение".
		// Цель работы процедуры - отразить суммовые разницы по реализации 0%

		public void ОтразитьСуммовыеРазницыПоРеализации0_НДСНачисленный(/*СтруктураШапкиДокумента,ТаблицаСуммовыхРазниц*/)
		{
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("Организация",        СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("СписокСчетовФактур",	ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСуммовыхРазниц.ВыгрузитьКолонку("СчетФактура"),Истина));*/
			/*Запрос.УстановитьПараметр("СписокВидыЦенностей",ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСуммовыхРазниц.ВыгрузитьКолонку("ВидЦенности"),Истина));*/
			/*Запрос.УстановитьПараметр("СписокСтавкиНДС",	ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСуммовыхРазниц.ВыгрузитьКолонку("СтавкаНДС"),Истина));*/
			/*СостоянияПредъявленный = Новый СписокЗначений;*/
			/*СостоянияПредъявленный.Добавить(Перечисления.НДССостоянияРеализация0.ПодтвержденаРеализация0);*/
			/*СостоянияПредъявленный.Добавить(Перечисления.НДССостоянияРеализация0.НеПодтвержденаРеализация0);*/
			/*Запрос.УстановитьПараметр("СостоянияПредъявленный", СостоянияПредъявленный);*/
			/*Запрос.УстановитьПараметр("СостоянияОжидание", Перечисления.НДССостоянияРеализация0.ОжидаетсяПодтверждение);*/
			/*Запрос.УстановитьПараметр("КонецПериода",       Новый МоментВремени(СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.Ссылка));*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСРеализация0Обороты.Организация,
	|	НДСРеализация0Обороты.СчетФактура,
	|	НДСРеализация0Обороты.Состояние,
	|	НДСРеализация0Обороты.ВидЦенности,
	|	НДСРеализация0Обороты.СтавкаНДС,
	|	НДСРеализация0Обороты.Покупатель,
	|	ВЫБОР
	|		КОГДА НДСРеализация0Обороты.Состояние В (&СостоянияПредъявленный)
	|			ТОГДА СУММА(НДСРеализация0Обороты.СуммаБезНДСПриход)
	|		КОГДА НДСРеализация0Обороты.Состояние = &СостоянияОжидание
	|			ТОГДА СУММА(НДСРеализация0Обороты.СуммаБезНДСПриход - НДСРеализация0Обороты.СуммаБезНДСРасход)
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА НДСРеализация0Обороты.Состояние В (&СостоянияПредъявленный)
	|			ТОГДА СУММА(НДСРеализация0Обороты.НДСПриход)
	|		КОГДА НДСРеализация0Обороты.Состояние = &СостоянияОжидание
	|			ТОГДА СУММА(НДСРеализация0Обороты.НДСПриход - НДСРеализация0Обороты.НДСРасход)
	|	КОНЕЦ КАК НДС
	|ИЗ
	|	РегистрНакопления.НДСРеализация0.Обороты(
	|		,
	|		&КонецПериода,
	|		,
	|		Организация = &Организация
	|		    И СчетФактура В (&СписокСчетовФактур)
	|		    И СтавкаНДС В (&СписокСтавкиНДС)) КАК НДСРеализация0Обороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСРеализация0Обороты.Организация,
	|	НДСРеализация0Обороты.СчетФактура,
	|	НДСРеализация0Обороты.Состояние,
	|	НДСРеализация0Обороты.ВидЦенности,
	|	НДСРеализация0Обороты.СтавкаНДС,
	|	НДСРеализация0Обороты.Покупатель";*/
			/*ТаблицаЗаписей_НДСРеализация0 = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.Прямой);*/
			/*Счетчик = ТаблицаЗаписей_НДСРеализация0.Количество();*/
			while(true/*Счетчик <> 0*/)
			{
				/*Счетчик = Счетчик - 1;*/
				/*СтрокаТаблицы = ТаблицаЗаписей_НДСРеализация0[Счетчик];*/
				if(true/*(СтрокаТаблицы.СуммаБезНДС = 0) и (СтрокаТаблицы.НДС = 0)*/)
				{
					/*ТаблицаЗаписей_НДСРеализация0.Удалить(СтрокаТаблицы);*/
				}
			}
			/*;
	
	Распределение = Новый Структура("СуммаБезНДС, НДС");*/
			/*Отбор         = Новый Структура("СчетФактура, ВидЦенности, СтавкаНДС");*/
			/*Дополнение 	  = Новый Структура("ВидРегламентнойОперации", Перечисления.ВидыРегламентныхОпераций.КорректировкиПриВалютныхРасчетах);*/
			/*ТаблицаЗаписей_НДСРеализация0 = ОбщегоНазначения.СформироватьКорректирующиеЗаписи(ТаблицаСуммовыхРазниц, ТаблицаЗаписей_НДСРеализация0, Распределение, Отбор, , Дополнение);*/
			/*//Если суммовая разница невелика, велика вероятность что в реестре СФ присутствуют записи,
*/
			/*//на которые суммовая разница не относится
*/
			/*СтрокиКУдалению = новый Массив();*/
			if(true/*СтрокиКУдалению.Количество()>0*/)
			{
			}
			if(true/*ТаблицаЗаписей_НДСРеализация0.Количество()>0*/)
			{
				/*Движения = новый Структура();*/
				/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения,"НДСРеализация0",СтруктураШапкиДокумента.Ссылка);*/
				/*Движения.НДСРеализация0.мПериод          = ?(СтруктураШапкиДокумента.Свойство("Период") И ЗначениеЗаполнено(СтруктураШапкиДокумента.Период),СтруктураШапкиДокумента.Период,?(СтруктураШапкиДокумента.Свойство("ДатаОплаты") И ЗначениеЗаполнено(СтруктураШапкиДокумента.ДатаОплаты), СтруктураШапкиДокумента.ДатаОплаты, СтруктураШапкиДокумента.Дата));*/
				/*Движения.НДСРеализация0.мТаблицаДвижений = ТаблицаЗаписей_НДСРеализация0;*/
				/*Движения.НДСРеализация0.ВыполнитьПриход();*/
				/*Движения.НДСРеализация0.Записать(Ложь);*/
			}
		}
		// ОтразитьСуммовыеРазницыПоРеализации0_НДСНачисленный()
		// Функция вызывается из процедуры "КорректировкаРегистровНДСПоСуммовымРазницам_Реализация".
		// Цель работы процедуры - сформировать дерево остатков по регистрам НДС (приобретение), содержащее
		// суммы зарегистрированных событий, для последующей их корректировки
		//

		public object ПолучитьДанныеПоКорректируемымСчетамФактурам_Реализация(/*СтруктураШапкиДокумента, СчетаФактурыПолученные, КорректировкаДокумента*/)
		{
			if(true/*КорректировкаДокумента*/)
			{
				/*КонецПериода = Новый Граница(СтруктураШапкиДокумента.Дата, ВидГраницы.Включая);*/
			}
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("Организация",        СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("СписокСчетовФактур",	СчетаФактурыПолученные);*/
			/*Запрос.УстановитьПараметр("КонецПериода",       КонецПериода);*/
			/*Запрос.УстановитьПараметр("Предположение0",     Перечисления.НДССостоянияРеализация0.ОжидаетсяПодтверждение);*/
			/*Запрос.Текст = "
	|ВЫБРАТЬ
	|	НДСНачисленныйОбороты.Организация,
	|	НДСНачисленныйОбороты.СчетФактура КАК СчетФактура,
	|	НДСНачисленныйОбороты.ВидЦенности,
	|	НДСНачисленныйОбороты.СтавкаНДС,
	|	СУММА(ЕСТЬNULL(НДСНачисленныйОбороты.СуммаБезНДСПриход, 0) + ЕСТЬNULL(НДСНачисленныйОбороты.НДСПриход, 0)) КАК Базис_СНДС,
	|	СУММА(ЕСТЬNULL(НДСНачисленныйОбороты.СуммаБезНДСПриход, 0)) КАК Базис_БезНДС,
	|	СУММА(ЕСТЬNULL(НДСНачисленныйОбороты.НДСПриход, 0)) КАК Базис_НДС,
	|	СУММА(НДСРеализация0.Реализация0_БезНДС) КАК Реализация0_БезНДС,
	|	СУММА(НДСРеализация0.Реализация0_НДС) КАК Реализация0_НДС,
	|	НДСНачисленныйОбороты.Покупатель,
	|	НДСНачисленныйОбороты.ВидНачисления,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НДСРеализация0.СчетФактура ЕСТЬ NULL 
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ЕстьРеализация0
	|ИЗ
	|	РегистрНакопления.НДСНачисленный.Обороты(
	|		,
	|		&КонецПериода,
	|		Период,
	|		Организация = &Организация
	|		    И СчетФактура В (&СписокСчетовФактур)
	|		) КАК НДСНачисленныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СУММА(ВЫБОР
	|					КОГДА НДСРеализация0Обороты.Состояние = &Предположение0
	|						ТОГДА ЕСТЬNULL(НДСРеализация0Обороты.СуммаБезНДСОборот, 0)
	|					ИНАЧЕ ЕСТЬNULL(НДСРеализация0Обороты.СуммаБезНДСПриход, 0)
	|				КОНЕЦ) КАК Реализация0_БезНДС,
	|			СУММА(ВЫБОР
	|					КОГДА НДСРеализация0Обороты.Состояние = &Предположение0
	|						ТОГДА ЕСТЬNULL(НДСРеализация0Обороты.НДСОборот, 0)
	|					ИНАЧЕ ЕСТЬNULL(НДСРеализация0Обороты.НДСПриход, 0)
	|				КОНЕЦ) КАК Реализация0_НДС,
	|			НДСРеализация0Обороты.СчетФактура КАК СчетФактура,
	|			НДСРеализация0Обороты.ВидЦенности КАК ВидЦенности,
	|			НДСРеализация0Обороты.Покупатель КАК Покупатель,
	|			НДСРеализация0Обороты.СтавкаНДС КАК СтавкаНДС
	|		ИЗ
	|			РегистрНакопления.НДСРеализация0.Обороты(
	|				,
	|				&КонецПериода,
	|				Период,
	|				Организация = &Организация
	|				    И СчетФактура В (&СписокСчетовФактур)) КАК НДСРеализация0Обороты
	|		
	|		СГРУППИРОВАТЬ ПО
	|			НДСРеализация0Обороты.СчетФактура,
	|			НДСРеализация0Обороты.ВидЦенности,
	|			НДСРеализация0Обороты.Покупатель,
	|			НДСРеализация0Обороты.СтавкаНДС) КАК НДСРеализация0
	|		ПО НДСНачисленныйОбороты.СчетФактура = НДСРеализация0.СчетФактура
	|			И НДСНачисленныйОбороты.ВидЦенности = НДСРеализация0.ВидЦенности
	|			И НДСНачисленныйОбороты.Покупатель = НДСРеализация0.Покупатель
	|			И НДСНачисленныйОбороты.СтавкаНДС = НДСРеализация0.СтавкаНДС
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСНачисленныйОбороты.Организация,
	|	НДСНачисленныйОбороты.СчетФактура,
	|	НДСНачисленныйОбороты.ВидЦенности,
	|	НДСНачисленныйОбороты.СтавкаНДС,
	|	НДСНачисленныйОбороты.Покупатель,
	|	НДСНачисленныйОбороты.ВидНачисления
	|";*/
			return null;
		}
		// ПолучитьДанныеПоКорректируемымСчетамФактурам_Реализация()

		public void СформироватьДвиженияПоРегиструНДСРеализация0_КурсовыеРазницы(/*СтруктураШапкиДокумента, ТаблицаВзаиморасчетов, Отказ*/)
		{
			/*Период = ?(СтруктураШапкиДокумента.Свойство("Период"), СтруктураШапкиДокумента.Период, СтруктураШапкиДокумента.Дата);*/
			/*// Таблица для зачета авансов
*/
			/*ТаблицаВзаиморасчетовТекущийДокумент = ТаблицаВзаиморасчетов.Скопировать(Новый Структура("СчетФактура", СтруктураШапкиДокумента.Ссылка));*/
			/*ТаблицаДоОктября2011 = ТаблицаВзаиморасчетов.Скопировать();*/
			/*ТаблицаДоОктября2011.Колонки.Добавить("ДатаСчетаФактуры", Новый ОписаниеТипов("Дата"));*/
			/*УчетНДС.ЗаполнитьДатуДокументовВТаблице(ТаблицаДоОктября2011, "СчетФактура", "ДатаСчетаФактуры");*/
			/*УдаляемыеСтроки = Новый Массив;*/
			if(true/*ТаблицаДоОктября2011.Количество() = 0*/)
			{
				/*// По документам отгрузки с датой, начиная с октября 2011, налоговая база по НДС 
*/
				/*// при подтверждении реализации со ставкой 0% определяется по курсу на дату реализации,
*/
				/*// корректировки налоговой базы не производятся как при зачете авансов, так и при последующей оплате 
*/
			}
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("ТаблицаДоОктября2011", ТаблицаДоОктября2011);*/
			/*Запрос.УстановитьПараметр("ТекущийДокумент", СтруктураШапкиДокумента.Ссылка);*/
			/*Запрос.УстановитьПараметр("Дата", СтруктураШапкиДокумента.Дата);*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДоОктября2011.Контрагент КАК Контрагент,
	|	ТаблицаДоОктября2011.СчетФактура КАК СчетФактура
	|ПОМЕСТИТЬ ТаблицаДоОктября2011
	|ИЗ
	|	&ТаблицаДоОктября2011 КАК ТаблицаДоОктября2011
	|ГДЕ
	|	ТаблицаДоОктября2011.СчетФактура <> &ТекущийДокумент
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент,
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСРеализация0Остатки.Организация,
	|	НДСРеализация0Остатки.СчетФактура,
	|	НДСРеализация0Остатки.ВидЦенности,
	|	НДСРеализация0Остатки.СтавкаНДС,
	|	НДСРеализация0Остатки.Состояние,
	|	НДСРеализация0Остатки.Покупатель,
	|	ЕСТЬNULL(НДСРеализация0Остатки.СуммаБезНДСОстаток + НДСРеализация0Остатки.НДСОстаток, 0) КАК Сумма
	|ИЗ
	|	РегистрНакопления.НДСРеализация0.Остатки(
	|			&Дата,
	|			Состояние = ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ОжидаетсяПодтверждение)
	|				И (Покупатель, СчетФактура) В
	|					(ВЫБРАТЬ
	|						ТаблицаДоОктября2011.Контрагент,
	|						ТаблицаДоОктября2011.СчетФактура
	|					ИЗ
	|						ТаблицаДоОктября2011 КАК ТаблицаДоОктября2011)) КАК НДСРеализация0Остатки";*/
			/*Результат = Запрос.Выполнить();*/
			if(true/*Результат.Пустой() И ТаблицаВзаиморасчетовТекущийДокумент.Количество() = 0*/)
			{
			}
			/*ТаблицаОстатков = Результат.Выгрузить();*/
			/*ТаблицаОстатков.Колонки.Добавить("КурсоваяРазница", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));*/
			/*СтруктураОтбора = Новый Структура("Покупатель, СчетФактура");*/
			/*МассивСумм = Новый Массив;*/
			/*МассивРаспределения = Новый Массив;*/
			/*УдаляемыеВидыОпераций = Новый Массив;*/
			/*УдаляемыеВидыОпераций.Добавить(Перечисления.ВидыРегламентныхОпераций.КорректировкиПриВалютныхРасчетах);*/
			/*ДвиженияНДСРеализация0 = ОбщегоНазначения.ПолучитьНаборЗаписейПоСсылке(СтруктураШапкиДокумента.Ссылка, РегистрыНакопления.НДСРеализация0, Истина);*/
			if(true/*ДвиженияНДСРеализация0 = Неопределено*/)
			{
				/*// Документ не может отражать реализацию по 0%
*/
			}
			/*БухгалтерскийУчет.ЗачиститьНаборЗаписейОтРегламентныхОпераций(ДвиженияНДСРеализация0, УдаляемыеВидыОпераций);*/
			if(true/*ДвиженияНДСРеализация0.Модифицированность()*/)
			{
				/*ДвиженияНДСРеализация0.Записать();*/
			}
			if(true/*ТаблицаВзаиморасчетовТекущийДокумент.Количество() > 0*/)
			{
				/*// Если курсовые разницы записываются в движения текущего документа (зачет аванса при реализации), 
*/
				/*// то дополним таблицу реализаций по 0% движениями самого документа.
*/
			}
			/*ДвиженияНДСРеализация0.Очистить();*/
			/*ТаблицаДвижений_НДСРеализация0 = ДвиженияНДСРеализация0.ВыгрузитьКолонки();*/
			if(true/*ТаблицаДвижений_НДСРеализация0.Количество() > 0*/)
			{
				/*ДвиженияНДСРеализация0.мПериод          = СтруктураШапкиДокумента.Дата;*/
				/*ДвиженияНДСРеализация0.мТаблицаДвижений = ТаблицаДвижений_НДСРеализация0;*/
				/*ДвиженияНДСРеализация0.ДобавитьДвижение();*/
				/*ДвиженияНДСРеализация0.Записать(Ложь);*/
			}
		}
		//////////////////////////////////////////////////
		//  ПО НДС ПРЕДЪЯВЛЕННОМУ ПОСТАВЩИКАМИ
		// Процедура вызывается из модуля управления взаиморасчетами в тех случаях,
		// когда взаиморасчеты с поставщиками ведутся в У.Е. с использованием рублевого
		// покрытия. По переданной таблице суммовых разниц формируются движения
		// корректирующие суммы событий, отраженных в регистре "НДСПокупки".
		// Процедура вызывается из модуля управления взаиморасчетами в тех случаях,
		// когда взаиморасчеты с поставщиками ведутся в У.Е. с использованием рублевого
		// покрытия. По переданной таблице суммовых разниц формируются движения
		// корректирующие суммы событий, отраженных в регистре "НДСПокупки".

		public void КорректировкаРегистровНДСПоСуммовымРазницам_Приобретение(/*СтруктураШапкиДокумента, ИсходнаяТаблицаСуммовыхРазниц, КорректировкаДокумента = Ложь, ЗачетАванса = Ложь, КорректироватьПоРасчетамНА = Ложь, Проводки = Неопределено*/)
		{
			if(true/*ИсходнаяТаблицаСуммовыхРазниц.Количество() = 0*/)
			{
			}
			/*// Возможно во входящей таблице нет ненулевых разниц
*/
			if(true/*ИсходнаяТаблицаСуммовыхРазниц.Итог("СуммоваяРазница") = 0*/)
			{
				/*// Возможно Итог() сложил положительные и отрицательные разницы, детализируем проверку
*/
				/*СтруктураПоискаНулевыхРазниц = Новый Структура("СуммоваяРазница", 0);*/
				/*МассивНайденныхНулевыхРазниц = ИсходнаяТаблицаСуммовыхРазниц.НайтиСтроки(СтруктураПоискаНулевыхРазниц);*/
				/*// Если количество нулевых разниц равно количеству строк таблицы, то выходим из процедуры - обрабатывать нечего
*/
				if(true/*МассивНайденныхНулевыхРазниц.Количество() = ИсходнаяТаблицаСуммовыхРазниц.Количество()*/)
				{
				}
			}
			if(true/*СтруктураШапкиДокумента.Свойство("Период") 
		И ЗначениеЗаполнено(СтруктураШапкиДокумента.Период)*/)
			{
				/*ДатаДвижений = СтруктураШапкиДокумента.Период;*/
			}
			if(true/*Не СтруктураШапкиДокумента.Свойство("ОрганизацияПрименяетУСН") 
		Или Не СтруктураШапкиДокумента.Свойство("НДСНалоговыйПериод") 
		Или Не СтруктураШапкиДокумента.Свойство("УчитыватьПоложительныеСуммовыеРазницыПриОпределенииВычетовПоНДС")
		Или Не СтруктураШапкиДокумента.Свойство("УчитыватьОтрицательныеСуммовыеРазницыПриОпределенииВычетовПоНДС")*/)
			{
				/*УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.Организация);*/
				if(true/*Не СтруктураШапкиДокумента.Свойство("ОрганизацияПрименяетУСН")*/)
				{
					/*СтруктураШапкиДокумента.Вставить("ОрганизацияПрименяетУСН",(ЗначениеЗаполнено(УчетнаяПолитика) и  (УчетнаяПолитика.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Упрощенная)));*/
				}
				if(true/*Не СтруктураШапкиДокумента.Свойство("НДСНалоговыйПериод")*/)
				{
					/*СтруктураШапкиДокумента.Вставить("НДСНалоговыйПериод",?(Не ЗначениеЗаполнено(УчетнаяПолитика), ?(СтруктураШапкиДокумента.Дата < '20080101', Перечисления.Периодичность.Месяц, Перечисления.Периодичность.Квартал), УчетнаяПолитика.НДСНалоговыйПериод));*/
				}
				if(true/*Не СтруктураШапкиДокумента.Свойство("УчитыватьПоложительныеСуммовыеРазницыПриОпределенииВычетовПоНДС")*/)
				{
					/*СтруктураШапкиДокумента.Вставить("УчитыватьПоложительныеСуммовыеРазницыПриОпределенииВычетовПоНДС", ?(Не ЗначениеЗаполнено(УчетнаяПолитика), Ложь, УчетнаяПолитика.УчитыватьПоложительныеСуммовыеРазницыПриОпределенииВычетовПоНДС));*/
				}
				if(true/*Не СтруктураШапкиДокумента.Свойство("УчитыватьОтрицательныеСуммовыеРазницыПриОпределенииВычетовПоНДС")*/)
				{
					/*СтруктураШапкиДокумента.Вставить("УчитыватьОтрицательныеСуммовыеРазницыПриОпределенииВычетовПоНДС", ?(Не ЗначениеЗаполнено(УчетнаяПолитика), Ложь, УчетнаяПолитика.УчитыватьОтрицательныеСуммовыеРазницыПриОпределенииВычетовПоНДС));*/
				}
			}
			if(true/*ДатаДвижений >= '20111001'
		И НЕ ЗачетАванса 
		И НЕ КорректироватьПоРасчетамНА*/)
			{
				/*// Начиная с 01.10.2011 при расчетах в у.е. налоговая база по НДС, определенная на дату приобретения, 
*/
				/*// при последующей оплате по другому курсу не корректируется
*/
			}
			/*УчитыватьПоложительныеРазницыДляНДС = СтруктураШапкиДокумента.УчитыватьПоложительныеСуммовыеРазницыПриОпределенииВычетовПоНДС Или КорректироватьПоРасчетамНА;*/
			/*УчитыватьОтрицательныеРазницыДляНДС = СтруктураШапкиДокумента.УчитыватьОтрицательныеСуммовыеРазницыПриОпределенииВычетовПоНДС Или КорректироватьПоРасчетамНА;*/
			/*ВыделятьНДСпоСР = (УчитыватьПоложительныеРазницыДляНДС или УчитыватьОтрицательныеРазницыДляНДС Или ЗачетАванса);*/
			if(true/*СтруктураШапкиДокумента.ОрганизацияПрименяетУСН*/)
			{
				/*// Движения по этому документу делать не нужно
*/
			}
			if(true/*Не ВыделятьНДСпоСР*/)
			{
				/*// Суммовые разницы не нужно учитывать для НДС по приобретеннию
*/
			}
			/*РеестрСчетовФактур = ПолучитьДанныеДляНДСПоСуммовымРазницам_Приобретение(СтруктураШапкиДокумента, ИсходнаяТаблицаСуммовыхРазниц, КорректировкаДокумента, ЗачетАванса, КорректироватьПоРасчетамНА);*/
			if(true/*Не ЗачетАванса*/)
			{
				/*СтрокиКУдалению = Новый Массив();*/
			}
			if(true/*РеестрСчетовФактур.Количество()=0*/)
			{
			}
			/*СсылкаНаДокумент = СтруктураШапкиДокумента.Ссылка;*/
			/*Движения = новый Структура();*/
			/*УдаляемыеВидыОпераций = Новый Массив;*/
			/*УдаляемыеВидыОпераций.Добавить(Перечисления.ВидыРегламентныхОпераций.КорректировкиПриВалютныхРасчетах);*/
			if(true/*КорректироватьПоРасчетамНА*/)
			{
				/*//Отразить проводки при исполнении обязанностей налогового агента
*/
				if(true/*Проводки = Неопределено*/)
				{
					/*Проводки = ОбщегоНазначения.ПолучитьНаборЗаписейПоСсылке(СсылкаНаДокумент, РегистрыБухгалтерии.Хозрасчетный, Истина);*/
					/*БухгалтерскийУчет.ЗачиститьНаборЗаписейОтРегламентныхОпераций(Проводки, УдаляемыеВидыОпераций);*/
					if(true/*Проводки.Модифицированность()*/)
					{
						/*Проводки.Записать();*/
					}
					/*СформироватьПроводкиПоРазницамНалоговыйАгент(СтруктураШапкиДокумента, РеестрСчетовФактур, Проводки);*/
					/*Проводки = Неопределено;*/
					/*// Набор движений не должен передаваться обратно из процедуры.
*/
				}
			}
			/*НДСПредъявленный = ОбщегоНазначения.ПолучитьНаборЗаписейПоСсылке(СсылкаНаДокумент, РегистрыНакопления.НДСПредъявленный, Истина);*/
			if(true/*НДСПредъявленный = Неопределено*/)
			{
				/*// Документ не может отражать проводиться по регистру "НДС предъявленный"
*/
			}
			/*БухгалтерскийУчет.ЗачиститьНаборЗаписейОтРегламентныхОпераций(НДСПредъявленный, УдаляемыеВидыОпераций);*/
			if(true/*НДСПредъявленный.Модифицированность()*/)
			{
				/*НДСПредъявленный.Записать();*/
			}
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения, "НДСПредъявленный", СсылкаНаДокумент);*/
			/*// Отражение сумовой разницы в регистре НДСПредъявленный
*/
			/*ТаблицаДвижений_НДСПредъявленный = Движения.НДСПредъявленный.ВыгрузитьКолонки();*/
			/*СоответствиеКолонок = Новый Соответствие();*/
			/*СоответствиеКолонок.Вставить("СуммаБезНДС","СР_БезНДС");*/
			/*СоответствиеКолонок.Вставить("НДС","СР_НДС");*/
			/*УчетНДС.ПереименованиеКолонок(ТаблицаДвижений_НДСПредъявленный, СоответствиеКолонок);*/
			/*ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(РеестрСчетовФактур,ТаблицаДвижений_НДСПредъявленный);*/
			/*ТаблицаДвижений_НДСПредъявленный.ЗаполнитьЗначения(ВидДвиженияНакопления.Приход,"ВидДвижения");*/
			/*ТаблицаДвижений_НДСПредъявленный.ЗаполнитьЗначения(Перечисления.СобытияПоНДСПокупки.ПредъявленНДСПоставщиком,"Событие");*/
			/*ТаблицаДвижений_НДСПредъявленный.ЗаполнитьЗначения(Перечисления.ВидыРегламентныхОпераций.КорректировкиПриВалютныхРасчетах,"ВидРегламентнойОперации");*/
			/*УчетНДС.ПереименованиеКолонок(ТаблицаДвижений_НДСПредъявленный, СоответствиеКолонок,Истина);*/
			if(true/*(РеестрСчетовФактур.Итог("ЕстьВключениеВСтоимость")>0)
		или (РеестрСчетовФактур.Итог("ЕстьОстаткиПоПартиям")>0)
		или (РеестрСчетовФактур.Итог("ЕстьОСНМА")>0)
		или (РеестрСчетовФактур.Итог("ЕстьРеализация0")>0)
		или (РеестрСчетовФактур.Итог("ЕстьКосвенныеРасходы")>0)
		или (РеестрСчетовФактур.Итог("ЕстьНезавершенноеПроизводство")>0)*/)
			{
				/*Построитель_РеестрСчетовФактур = новый ПостроительЗапроса();*/
				/*ОписаниеИсточника_РеестрСчетовФактур = новый ОписаниеИсточникаДанных(РеестрСчетовФактур);*/
				/*Построитель_РеестрСчетовФактур.ИсточникДанных = ОписаниеИсточника_РеестрСчетовФактур;*/
			}
			/*// Если есть включение НДС в стоимость, необходимо пропорционально уменьшить 
*/
			/*// сумму НДС предъявленного и зафиксировать включение НДС в стоимость в специальном регистре
*/
			if(true/*РеестрСчетовФактур.Итог("ЕстьВключениеВСтоимость")>0*/)
			{
				/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения,"НДСВключенныйВСтоимость",СсылкаНаДокумент);*/
				/*ТаблицаДвижений_НДСВключенныйВСтоимость = Движения.НДСВключенныйВСтоимость.ВыгрузитьКолонки();*/
				/*ОтборПостроитель = Построитель_РеестрСчетовФактур.Отбор;*/
				/*ОтборПостроитель.Добавить("ЕстьВключениеВСтоимость");*/
				/*ОтборПостроитель.ЕстьВключениеВСтоимость.Значение = 1;*/
				/*ОтборПостроитель.ЕстьВключениеВСтоимость.Использование = Истина;*/
				/*Построитель_РеестрСчетовФактур.Выполнить();*/
				/*Корректировки_НДСВключенныйВСтоимость = Построитель_РеестрСчетовФактур.Результат.Выгрузить();*/
				/*ОтборПостроитель.ЕстьВключениеВСтоимость.Использование = Ложь;*/
				/*Корректировки_НДСВключенныйВСтоимость.Колонки.Добавить("СуммаБезНДС",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));*/
				/*Корректировки_НДСВключенныйВСтоимость.Колонки.Добавить("НДС",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));*/
				/*ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Корректировки_НДСВключенныйВСтоимость,ТаблицаДвижений_НДСВключенныйВСтоимость);*/
				/*// Внесем корректирующие записи в регистр "НДС предъявленный"
*/
				/*ТаблицаДвижений_НДСВключенныйВСтоимость.Колонки.Добавить("ВидДвижения");*/
				/*ТаблицаДвижений_НДСВключенныйВСтоимость.ЗаполнитьЗначения(ВидДвиженияНакопления.Расход,"ВидДвижения");*/
				/*ТаблицаДвижений_НДСВключенныйВСтоимость.Колонки.Добавить("Событие");*/
				/*ТаблицаДвижений_НДСВключенныйВСтоимость.ЗаполнитьЗначения(Перечисления.СобытияПоНДСПокупки.НДСВключенВСтоимость,"Событие");*/
				/*ТаблицаДвижений_НДСВключенныйВСтоимость.ЗаполнитьЗначения(Перечисления.ВидыРегламентныхОпераций.КорректировкиПриВалютныхРасчетах,"ВидРегламентнойОперации");*/
				/*ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаДвижений_НДСВключенныйВСтоимость,ТаблицаДвижений_НДСПредъявленный);*/
				/*ТаблицаДвижений_НДСВключенныйВСтоимость.Колонки.Удалить("ВидДвижения");*/
				/*ТаблицаДвижений_НДСВключенныйВСтоимость.Колонки.Удалить("Событие");*/
				/*Движения.НДСВключенныйВСтоимость.мПериод          = ДатаДвижений;*/
				/*Движения.НДСВключенныйВСтоимость.мТаблицаДвижений = ТаблицаДвижений_НДСВключенныйВСтоимость;*/
				/*Движения.НДСВключенныйВСтоимость.ДобавитьДвижение();*/
				/*Движения.НДСВключенныйВСтоимость.Записать(Ложь);*/
			}
			/*//РеестрСчетовФактур.Итог("ЕстьВключениеВСтоимость")>0 Тогда
*/
			/*// Далее корректировка регистра НДСПредъявленный не планируется
*/
			/*// Заполним набор записей регистра полученным результатом
*/
			/*Движения.НДСПредъявленный.мПериод          = ДатаДвижений;*/
			/*Движения.НДСПредъявленный.мТаблицаДвижений = ТаблицаДвижений_НДСПредъявленный;*/
			/*Движения.НДСПредъявленный.ДобавитьДвижение();*/
			/*Движения.НДСПредъявленный.Записать(Ложь);*/
			/*// Если есть остатки в регистре косвенных расходов, необходимо пропорционально отразить 
*/
			/*// там же и суммовую разницу
*/
			if(true/*РеестрСчетовФактур.Итог("ЕстьКосвенныеРасходы")>0*/)
			{
				/*ОтборПостроитель = Построитель_РеестрСчетовФактур.Отбор;*/
				/*ОтборПостроитель.Добавить("ЕстьКосвенныеРасходы");*/
				/*ОтборПостроитель["ЕстьКосвенныеРасходы"].Значение = 1;*/
				/*ОтборПостроитель["ЕстьКосвенныеРасходы"].Использование = Истина;*/
				/*Построитель_РеестрСчетовФактур.Выполнить();*/
				/*Корректировки_НДСКосвенныеРасходы = Построитель_РеестрСчетовФактур.Результат.Выгрузить();*/
				/*ОтборПостроитель["ЕстьКосвенныеРасходы"].Использование = Ложь;*/
				/*Корректировки_НДСКосвенныеРасходы.Колонки.Добавить("СуммаБезНДС",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));*/
				/*Корректировки_НДСКосвенныеРасходы.Колонки.Добавить("НДС",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));*/
				/*// Если суммовая разница невелика, велика вероятность того, что в реестре СФ присутствуют записи
*/
				/*// на которые суммовая разница не относится
*/
				/*СтрокиКУдалению = новый Массив();*/
				if(true/*СтрокиКУдалению.Количество()>0*/)
				{
				}
				/*Корректировки_НДСКосвенныеРасходы.Свернуть("СчетФактура, ВидЦенности, СтавкаНДС, СчетУчетаНДС","СуммаБезНДС,НДС");*/
				/*ОтразитьСуммовыеРазницыПоКосвеннымРасходам(СтруктураШапкиДокумента,Корректировки_НДСКосвенныеРасходы,СтруктураШапкиДокумента.НДСНалоговыйПериод);*/
			}
			/*//РеестрСчетовФактур.Итог("ЕстьКосвенныеРасходы")>0 Тогда
*/
			/*// Если есть остатки в регистре незавершенного производства, необходимо пропорционально отразить 
*/
			/*// там же и суммовую разницу.
*/
			if(true/*РеестрСчетовФактур.Итог("ЕстьНезавершенноеПроизводство")>0*/)
			{
				/*ОтборПостроитель = Построитель_РеестрСчетовФактур.Отбор;*/
				/*ОтборПостроитель.Добавить("ЕстьНезавершенноеПроизводство");*/
				/*ОтборПостроитель["ЕстьНезавершенноеПроизводство"].Значение = 1;*/
				/*ОтборПостроитель["ЕстьНезавершенноеПроизводство"].Использование = Истина;*/
				/*Построитель_РеестрСчетовФактур.Выполнить();*/
				/*Корректировки_НДСНезавершенноеПроизводство = Построитель_РеестрСчетовФактур.Результат.Выгрузить();*/
				/*ОтборПостроитель["ЕстьНезавершенноеПроизводство"].Использование = Ложь;*/
				/*Корректировки_НДСНезавершенноеПроизводство.Колонки.Добавить("Стоимость",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));*/
				/*Корректировки_НДСНезавершенноеПроизводство.Колонки.Добавить("НДС",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));*/
				/*// Если суммовая разница невелика, велика вероятность того, что в реестре СФ присутствуют записи
*/
				/*// на которые суммовая разница не относится
*/
				/*СтрокиКУдалению = новый Массив();*/
				if(true/*СтрокиКУдалению.Количество()>0*/)
				{
				}
				/*Корректировки_НДСНезавершенноеПроизводство.Свернуть("СчетФактура, ВидЦенности, СтавкаНДС, СчетУчетаНДС","Стоимость,НДС");*/
				/*ОтразитьСуммовыеРазницыПоНезавершенномуПроизводству(СтруктураШапкиДокумента,Корректировки_НДСНезавершенноеПроизводство, СтруктураШапкиДокумента.НДСНалоговыйПериод);*/
			}
			/*// Если РеестрСчетовФактур.Итог("ЕстьНезавершенноеПроизводство")>0 Тогда
*/
			/*// Если есть остатки в регистре ОС (НМА), необходимо пропорционально отразить 
*/
			/*// там же и суммовую разницу
*/
			if(true/*РеестрСчетовФактур.Итог("ЕстьОСНМА")>0*/)
			{
				/*ОтборПостроитель = Построитель_РеестрСчетовФактур.Отбор;*/
				/*ОтборПостроитель.Добавить("ЕстьОСНМА");*/
				/*ОтборПостроитель["ЕстьОСНМА"].Значение = 1;*/
				/*ОтборПостроитель["ЕстьОСНМА"].Использование = Истина;*/
				/*Построитель_РеестрСчетовФактур.Выполнить();*/
				/*Корректировки_НДСпоОСиНМА = Построитель_РеестрСчетовФактур.Результат.Выгрузить();*/
				/*ОтборПостроитель["ЕстьОСНМА"].Использование = Ложь;*/
				/*Корректировки_НДСпоОСиНМА.Колонки.Добавить("СуммаБезНДС",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));*/
				/*Корректировки_НДСпоОСиНМА.Колонки.Добавить("НДС",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));*/
				/*// Если суммовая разница невелика, велика вероятность того, что в реестре СФ присутствуют записи
*/
				/*// на которые суммовая разница не относится
*/
				/*СтрокиКУдалению = новый Массив();*/
				if(true/*СтрокиКУдалению.Количество()>0*/)
				{
				}
				/*Корректировки_НДСпоОСиНМА.Свернуть("СчетФактура, ВидЦенности, СтавкаНДС, СчетУчетаНДС","СуммаБезНДС,НДС");*/
				/*ОтразитьСуммовыеРазницыПоОСНМА(СтруктураШапкиДокумента,Корректировки_НДСпоОСиНМА, КорректировкаДокумента);*/
			}
			/*//Если РеестрСчетовФактур.Итог("ЕстьОСНМА")>0 Тогда
*/
			/*// Если есть остатки в регистре партий, необходимо пропорционально отразить 
*/
			/*// там же и суммовую разницу
*/
			if(true/*РеестрСчетовФактур.Итог("ЕстьОстаткиПоПартиям")>0*/)
			{
				/*ОтборПостроитель = Построитель_РеестрСчетовФактур.Отбор;*/
				/*ОтборПостроитель.Добавить("ЕстьОстаткиПоПартиям");*/
				/*ОтборПостроитель["ЕстьОстаткиПоПартиям"].Значение = 1;*/
				/*ОтборПостроитель["ЕстьОстаткиПоПартиям"].Использование = Истина;*/
				/*Построитель_РеестрСчетовФактур.Выполнить();*/
				/*Корректировки_НДСПартииТоваров = Построитель_РеестрСчетовФактур.Результат.Выгрузить();*/
				/*ОтборПостроитель["ЕстьОстаткиПоПартиям"].Использование = Ложь;*/
				/*Корректировки_НДСПартииТоваров.Колонки.Добавить("Стоимость",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));*/
				/*Корректировки_НДСПартииТоваров.Колонки.Добавить("НДС",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));*/
				/*// Если суммовая разница невелика, велика вероятность того, что в реестре СФ присутствуют записи
*/
				/*// на которые суммовая разница не относится
*/
				/*СтрокиКУдалению = новый Массив();*/
				if(true/*СтрокиКУдалению.Количество()>0*/)
				{
				}
				/*Корректировки_НДСПартииТоваров.Свернуть("СчетФактура, ВидЦенности, СтавкаНДС, СчетУчетаНДС","Стоимость,НДС");*/
				/*ОтразитьСуммовыеРазницыПоПартиям(СтруктураШапкиДокумента,Корректировки_НДСПартииТоваров, КорректировкаДокумента);*/
			}
			/*//Если РеестрСчетовФактур.Итог("ЕстьОстаткиПоПартиям")>0 Тогда
*/
			/*// Если были обороты по предположению 0%, необходимо пропорционально отразить 
*/
			/*// там же и суммовую разницу
*/
			if(true/*РеестрСчетовФактур.Итог("ЕстьРеализация0")>0*/)
			{
				/*ОтборПостроитель = Построитель_РеестрСчетовФактур.Отбор;*/
				/*ОтборПостроитель.Добавить("ЕстьРеализация0");*/
				/*ОтборПостроитель["ЕстьРеализация0"].Значение = 1;*/
				/*ОтборПостроитель["ЕстьРеализация0"].Использование = Истина;*/
				/*Построитель_РеестрСчетовФактур.Выполнить();*/
				/*Корректировки_НДСПредъявленныйРеализация0 = Построитель_РеестрСчетовФактур.Результат.Выгрузить();*/
				/*ОтборПостроитель["ЕстьРеализация0"].Использование = Ложь;*/
				/*Корректировки_НДСПредъявленныйРеализация0.Колонки.Добавить("СуммаБезНДС",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));*/
				/*Корректировки_НДСПредъявленныйРеализация0.Колонки.Добавить("НДС",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));*/
				/*// Если суммовая разница невелика, велика вероятность того, что в реестре СФ присутствуют записи
*/
				/*// на которые суммовая разница не относится
*/
				/*СтрокиКУдалению = новый Массив();*/
				if(true/*СтрокиКУдалению.Количество()>0*/)
				{
				}
				/*Корректировки_НДСПредъявленныйРеализация0.Свернуть("СчетФактура, ВидЦенности, СтавкаНДС, СчетУчетаНДС","СуммаБезНДС,НДС");*/
				/*ОтразитьСуммовыеРазницыПоРеализации0_НДСПредъявленный(СтруктураШапкиДокумента,Корректировки_НДСПредъявленныйРеализация0);*/
			}
			/*//Если РеестрСчетовФактур.Итог("ЕстьОстаткиПоПартиям")>0 Тогда
*/
		}
		// КорректировкаРегистровНДСПоСуммовымРазницам_Приобретение()

		public object ПолучитьДанныеДляНДСПоСуммовымРазницам_Приобретение(/*СтруктураШапкиДокумента, ИсходнаяТаблицаСуммовыхРазниц, КорректировкаДокумента, ЗачетАванса, КорректироватьПоРасчетамНА*/)
		{
			/*КолонкаСчетФактура = ?(ИсходнаяТаблицаСуммовыхРазниц.Колонки.Найти("СчетФактура") <> Неопределено, "СчетФактура", "Документ");*/
			/*// формируем дерево счетов-фактур по которым нужно отразить суммовые разницы
*/
			/*СчетаФактурыПолученные = ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ИсходнаяТаблицаСуммовыхРазниц.ВыгрузитьКолонку(КолонкаСчетФактура), Истина);*/
			/*РеестрСчетовФактур = ПолучитьДанныеПоКорректируемымСчетамФактурам_Приобретение(СтруктураШапкиДокумента, СчетаФактурыПолученные, КорректировкаДокумента);*/
			/*СвернутаяТаблицаСФ = ИсходнаяТаблицаСуммовыхРазниц.Скопировать();*/
			/*СвернутаяТаблицаСФ.Свернуть(КолонкаСчетФактура, "СуммоваяРазница");*/
			if(true/*РеестрСчетовФактур.Количество() <> 0*/)
			{
				/*//Отразить распределение в таблице суммовых разниц
*/
				/*РеестрСчетовФактур.Колонки.Добавить("СуммоваяРазница",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));*/
				/*РеестрСчетовФактур.Колонки.Добавить("СР_БезНДС",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));*/
				/*РеестрСчетовФактур.Колонки.Добавить("СР_НДС",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));*/
				if(true/*Не КорректироватьПоРасчетамНА*/)
				{
					/*РеестрСчетовФактур.ЗагрузитьКолонку(РеестрСчетовФактур.ВыгрузитьКолонку("Базис_СНДС"),"СуммоваяРазница");*/
				}
				/*Распределение = Новый Структура("СуммоваяРазница","СуммоваяРазница");*/
				/*Отбор         = Новый Структура("СчетФактура", КолонкаСчетФактура);*/
				/*РеестрСчетовФактур = ОбщегоНазначения.СформироватьКорректирующиеЗаписи(ИсходнаяТаблицаСуммовыхРазниц,РеестрСчетовФактур,Распределение,Отбор);*/
				/*СтрокиКУдалению = новый массив();*/
				/*// Разделим суммовую разницу на сумму без НДС и сумму с НДС
*/
				/*// Если суммовая разница невелика, велика вероятность что в реестре СФ присутствуют записи,
*/
				/*// на которые суммовая разница не относится
*/
				if(true/*СтрокиКУдалению.Количество()>0*/)
				{
				}
				/*// В исходную таблицу требуется добавить колонку НДС_НУ с суммой НДС по суммовой разнице для целей налогового учета
*/
				/*ИсходнаяТаблицаСуммовыхРазниц.Колонки.Добавить("НДС_НУ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));*/
				if(true/*РеестрСчетовФактур.Количество() <> 0*/)
				{
					/*ИсходнаяТаблицаСуммовыхРазниц.ЗагрузитьКолонку(ИсходнаяТаблицаСуммовыхРазниц.ВыгрузитьКолонку("СуммоваяРазница"), "НДС_НУ");*/
					/*Распределение = Новый Структура("НДС_НУ", "СР_НДС");*/
					/*Отбор         = Новый Структура("Документ, Контрагент", "СчетФактура", "Поставщик");*/
					/*ИсходнаяТаблицаСуммовыхРазниц = ОбщегоНазначения.СформироватьКорректирующиеЗаписи(РеестрСчетовФактур, ИсходнаяТаблицаСуммовыхРазниц,Распределение,Отбор);*/
					/*// Вычислим общий НДС от исходной суммы + суммовая разница и сравним его с полученным НДС суммовой разницы
*/
					/*// если есть погрешность в копейку - откорректируем её
*/
				}
			}
			return null;
		}
		// Функция вызывается из процедуры "КорректировкаРегистровНДСПоСуммовымРазницам_Приобретение".
		// Цель работы процедуры - отразить суммовые разницы по косвенным расходам

		public void ОтразитьСуммовыеРазницыПоКосвеннымРасходам(/*СтруктураШапкиДокумента,ТаблицаСуммовыхРазниц, ПериодичностьНДС*/)
		{
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("Организация",        СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("СписокСчетовФактур",	ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСуммовыхРазниц.ВыгрузитьКолонку("СчетФактура"),Истина));*/
			/*Запрос.УстановитьПараметр("СписокВидыЦенностей",ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСуммовыхРазниц.ВыгрузитьКолонку("ВидЦенности"),Истина));*/
			/*Запрос.УстановитьПараметр("СписокСтавкиНДС",	ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСуммовыхРазниц.ВыгрузитьКолонку("СтавкаНДС"),Истина));*/
			/*Запрос.УстановитьПараметр("СписокСчетаУчетаНДС",ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСуммовыхРазниц.ВыгрузитьКолонку("СчетУчетаНДС"),Истина));*/
			if(true/*СтруктураШапкиДокумента.Свойство("Период") И ЗначениеЗаполнено(СтруктураШапкиДокумента.Период)*/)
			{
				/*КонецПериода = СтруктураШапкиДокумента.Период;*/
			}
			/*Запрос.УстановитьПараметр("КонецПериодаДата",   КонецПериода);*/
			/*Запрос.УстановитьПараметр("КонецПериода",       Новый МоментВремени(СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.Ссылка));*/
			/*Запрос.УстановитьПараметр("НачалоПериода",      ?(ПериодичностьНДС = Перечисления.Периодичность.Квартал,НачалоКвартала(СтруктураШапкиДокумента.Дата),НачалоМесяца(СтруктураШапкиДокумента.Дата)));*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСКосвенныеРасходыОстатки.Организация,
	|	НДСКосвенныеРасходыОстатки.СчетФактура,
	|	НДСКосвенныеРасходыОстатки.ВидЦенности,
	|	НДСКосвенныеРасходыОстатки.СтавкаНДС,
	|	НДСКосвенныеРасходыОстатки.СчетУчетаНДС,
	|	НДСКосвенныеРасходыОстатки.НДСВключенВСтоимость,
	|	НДСКосвенныеРасходы.СуммаБезНДС,
	|	НДСКосвенныеРасходы.НДС,
	|	НДСКосвенныеРасходы.СтатьяЗатрат,
	|	НДСКосвенныеРасходы.СчетЗатрат,
	|	НДСКосвенныеРасходы.Субконто1,
	|	НДСКосвенныеРасходы.Субконто2,
	|	НДСКосвенныеРасходы.Субконто3,
	|	НДСКосвенныеРасходы.ОтражатьВНалоговомУчете,
	|	НДСКосвенныеРасходы.СчетЗатратНУ,
	|	НДСКосвенныеРасходы.СубконтоНУ1,
	|	НДСКосвенныеРасходы.СубконтоНУ2,
	|	НДСКосвенныеРасходы.СубконтоНУ3
	|ИЗ
	|	РегистрНакопления.НДСКосвенныеРасходы.Обороты(
	|		&НачалоПериода,
	|		&КонецПериода,
	|		Период,
	|		Организация = &Организация
	|		    И СчетФактура В (&СписокСчетовФактур)
	|		    И СтавкаНДС В (&СписокСтавкиНДС)
	|		    И СчетУчетаНДС В (&СписокСчетаУчетаНДС)) КАК НДСКосвенныеРасходыОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НДСКосвенныеРасходы КАК НДСКосвенныеРасходы
	|		ПО НДСКосвенныеРасходыОстатки.Организация = НДСКосвенныеРасходы.Организация
	|			И НДСКосвенныеРасходыОстатки.СчетФактура = НДСКосвенныеРасходы.СчетФактура
	|			И НДСКосвенныеРасходыОстатки.ВидЦенности = НДСКосвенныеРасходы.ВидЦенности
	|			И НДСКосвенныеРасходыОстатки.СтавкаНДС = НДСКосвенныеРасходы.СтавкаНДС
	|			И НДСКосвенныеРасходыОстатки.СчетУчетаНДС = НДСКосвенныеРасходы.СчетУчетаНДС
	|			И НДСКосвенныеРасходыОстатки.НДСВключенВСтоимость = НДСКосвенныеРасходы.НДСВключенВСтоимость
	|			И (НДСКосвенныеРасходы.Период >= &НачалоПериода)
	|			И (НДСКосвенныеРасходы.Период <= &КонецПериодаДата)
	|			И НДСКосвенныеРасходыОстатки.НДСВключенВСтоимость = НДСКосвенныеРасходы.НДСВключенВСтоимость
	|ГДЕ
	|	(НЕ(ЕСТЬNULL(НДСКосвенныеРасходыОстатки.СуммаБезНДСОборот, 0) = 0
	|				И ЕСТЬNULL(НДСКосвенныеРасходыОстатки.НДСОборот, 0) = 0))";*/
			/*ТаблицаЗаписей_НДСКосвенныеРасходы = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.Прямой);*/
			/*Распределение = Новый Структура("СуммаБезНДС,НДС");*/
			/*Отбор         = Новый Структура("СчетФактура, ВидЦенности, СтавкаНДС, СчетУчетаНДС");*/
			/*Дополнение 	  = Новый Структура("ВидРегламентнойОперации", Перечисления.ВидыРегламентныхОпераций.КорректировкиПриВалютныхРасчетах);*/
			/*ТаблицаЗаписей_НДСКосвенныеРасходы = ОбщегоНазначения.СформироватьКорректирующиеЗаписи(ТаблицаСуммовыхРазниц,ТаблицаЗаписей_НДСКосвенныеРасходы,Распределение,Отбор, , Дополнение);*/
			/*// Если суммовая разница невелика, велика вероятность что в реестре СФ присутствуют записи,
*/
			/*// на которые суммовая разница не относится
*/
			/*СтрокиКУдалению = новый Массив();*/
			if(true/*СтрокиКУдалению.Количество()>0*/)
			{
			}
			if(true/*ТаблицаЗаписей_НДСКосвенныеРасходы.Количество()>0*/)
			{
				/*Движения = новый Структура();*/
				/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения,"НДСКосвенныеРасходы",СтруктураШапкиДокумента.Ссылка);*/
				/*Движения.НДСКосвенныеРасходы.мПериод      = ?(СтруктураШапкиДокумента.Свойство("Период") И ЗначениеЗаполнено(СтруктураШапкиДокумента.Период),СтруктураШапкиДокумента.Период,?(СтруктураШапкиДокумента.Свойство("ДатаОплаты") И ЗначениеЗаполнено(СтруктураШапкиДокумента.ДатаОплаты), СтруктураШапкиДокумента.ДатаОплаты, СтруктураШапкиДокумента.Дата));*/
				/*Движения.НДСКосвенныеРасходы.мТаблицаДвижений = ТаблицаЗаписей_НДСКосвенныеРасходы;*/
				/*Движения.НДСКосвенныеРасходы.ВыполнитьПриход();*/
				/*Движения.НДСКосвенныеРасходы.Записать(Ложь);*/
			}
		}
		// ОтразитьСуммовыеРазницыПоКосвеннымРасходам()
		// Функция вызывается из процедуры "КорректировкаРегистровНДСПоСуммовымРазницам_Приобретение".
		// Цель работы процедуры - отразить суммовые разницы по незавершенному производству.

		public void ОтразитьСуммовыеРазницыПоНезавершенномуПроизводству(/*СтруктураШапкиДокумента,ТаблицаСуммовыхРазниц, ПериодичностьНДС*/)
		{
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("Организация",        СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("СписокСчетовФактур",	ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСуммовыхРазниц.ВыгрузитьКолонку("СчетФактура"),Истина));*/
			/*Запрос.УстановитьПараметр("СписокВидыЦенностей",ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСуммовыхРазниц.ВыгрузитьКолонку("ВидЦенности"),Истина));*/
			/*Запрос.УстановитьПараметр("СписокСтавкиНДС",	ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСуммовыхРазниц.ВыгрузитьКолонку("СтавкаНДС"),Истина));*/
			/*Запрос.УстановитьПараметр("СписокСчетаУчетаНДС",ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСуммовыхРазниц.ВыгрузитьКолонку("СчетУчетаНДС"),Истина));*/
			if(true/*СтруктураШапкиДокумента.Свойство("Период") И ЗначениеЗаполнено(СтруктураШапкиДокумента.Период)*/)
			{
				/*КонецПериода = СтруктураШапкиДокумента.Период;*/
			}
			/*Запрос.УстановитьПараметр("КонецПериодаДата",   КонецПериода);*/
			/*Запрос.УстановитьПараметр("КонецПериода",       Новый МоментВремени(СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.Ссылка));*/
			/*Запрос.УстановитьПараметр("НачалоПериода",      ?(ПериодичностьНДС = Перечисления.Периодичность.Квартал,НачалоКвартала(СтруктураШапкиДокумента.Дата),НачалоМесяца(СтруктураШапкиДокумента.Дата)));*/
			/*Запрос.Текст = "
	|ВЫБРАТЬ
	|	НДСНезавершенноеПроизводствоОстатки.Подразделение,
	|	НДСНезавершенноеПроизводствоОстатки.СчетУчета,
	|	НДСНезавершенноеПроизводствоОстатки.СтатьяЗатрат,
	|	НДСНезавершенноеПроизводствоОстатки.НоменклатурнаяГруппа,
	|	НДСНезавершенноеПроизводствоОстатки.Заказ,
	|	НДСНезавершенноеПроизводствоОстатки.Затрата,
	|	НДСНезавершенноеПроизводствоОстатки.ХарактеристикаЗатраты,
	|	НДСНезавершенноеПроизводствоОстатки.СерияЗатраты,
	|	НДСНезавершенноеПроизводствоОстатки.СчетФактура,
	|	НДСНезавершенноеПроизводствоОстатки.ВидЦенности,
	|	НДСНезавершенноеПроизводствоОстатки.СтавкаНДС,
	|	НДСНезавершенноеПроизводствоОстатки.СчетУчетаНДС,
	|	НДСНезавершенноеПроизводствоОстатки.НДСВключенВСтоимость,
	|	НДСНезавершенноеПроизводство.Стоимость,
	|	НДСНезавершенноеПроизводство.НДС,
	|	НДСНезавершенноеПроизводство.КодОперации
	|ИЗ
	|	РегистрНакопления.НДСНезавершенноеПроизводство.Обороты(
	|		&НачалоПериода,
	|		&КонецПериода,
	|		Период,
	|		Подразделение.Владелец = &Организация
	|		    И СчетФактура В (&СписокСчетовФактур)
	|		    И СтавкаНДС В (&СписокСтавкиНДС)
	|		    И СчетУчетаНДС В (&СписокСчетаУчетаНДС)) КАК НДСНезавершенноеПроизводствоОстатки
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			РегистрНакопления.НДСНезавершенноеПроизводство КАК НДСНезавершенноеПроизводство
	|		ПО 
	|			НДСНезавершенноеПроизводствоОстатки.Подразделение 			= НДСНезавершенноеПроизводство.Подразделение
	|			И НДСНезавершенноеПроизводствоОстатки.СчетУчета 			= НДСНезавершенноеПроизводство.СчетУчета
	|			И НДСНезавершенноеПроизводствоОстатки.СтатьяЗатрат 			= НДСНезавершенноеПроизводство.СтатьяЗатрат
	|			И НДСНезавершенноеПроизводствоОстатки.НоменклатурнаяГруппа	= НДСНезавершенноеПроизводство.НоменклатурнаяГруппа
	|			И НДСНезавершенноеПроизводствоОстатки.Заказ					= НДСНезавершенноеПроизводство.Заказ
	|			И НДСНезавершенноеПроизводствоОстатки.Затрата				= НДСНезавершенноеПроизводство.Затрата
	|			И НДСНезавершенноеПроизводствоОстатки.ХарактеристикаЗатраты	= НДСНезавершенноеПроизводство.ХарактеристикаЗатраты
	|			И НДСНезавершенноеПроизводствоОстатки.СерияЗатраты			= НДСНезавершенноеПроизводство.СерияЗатраты
	|			И НДСНезавершенноеПроизводствоОстатки.СчетФактура 			= НДСНезавершенноеПроизводство.СчетФактура
	|			И НДСНезавершенноеПроизводствоОстатки.ВидЦенности 			= НДСНезавершенноеПроизводство.ВидЦенности
	|			И НДСНезавершенноеПроизводствоОстатки.СтавкаНДС 			= НДСНезавершенноеПроизводство.СтавкаНДС
	|			И НДСНезавершенноеПроизводствоОстатки.СчетУчетаНДС 			= НДСНезавершенноеПроизводство.СчетУчетаНДС
	|			И НДСНезавершенноеПроизводствоОстатки.НДСВключенВСтоимость 	= НДСНезавершенноеПроизводство.НДСВключенВСтоимость
	|			И (НДСНезавершенноеПроизводство.Период >= &НачалоПериода)
	|			И (НДСНезавершенноеПроизводство.Период <= &КонецПериодаДата)
	|ГДЕ
	|	(НЕ(ЕСТЬNULL(НДСНезавершенноеПроизводствоОстатки.СтоимостьОборот, 0) = 0
	|				И ЕСТЬNULL(НДСНезавершенноеПроизводствоОстатки.НДСОборот, 0) = 0))";*/
			/*ТаблицаЗаписей_НДСНезавершенноеПроизводство = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.Прямой);*/
			/*Распределение = Новый Структура("Стоимость,НДС");*/
			/*Отбор         = Новый Структура("СчетФактура, ВидЦенности, СтавкаНДС, СчетУчетаНДС");*/
			/*Дополнение 	  = Новый Структура("ВидРегламентнойОперации", Перечисления.ВидыРегламентныхОпераций.КорректировкиПриВалютныхРасчетах);*/
			/*ТаблицаЗаписей_НДСНезавершенноеПроизводство = ОбщегоНазначения.СформироватьКорректирующиеЗаписи(ТаблицаСуммовыхРазниц,ТаблицаЗаписей_НДСНезавершенноеПроизводство,Распределение,Отбор, , Дополнение);*/
			/*// Если суммовая разница невелика, велика вероятность что в реестре СФ присутствуют записи,
*/
			/*// на которые суммовая разница не относится
*/
			/*СтрокиКУдалению = новый Массив();*/
			if(true/*СтрокиКУдалению.Количество()>0*/)
			{
			}
			if(true/*ТаблицаЗаписей_НДСНезавершенноеПроизводство.Количество()>0*/)
			{
				/*Движения = новый Структура();*/
				/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения,"НДСНезавершенноеПроизводство",СтруктураШапкиДокумента.Ссылка);*/
				if(true/*СтруктураШапкиДокумента.Свойство("Период") И ЗначениеЗаполнено(СтруктураШапкиДокумента.Период)*/)
				{
					/*Движения.НДСНезавершенноеПроизводство.мПериод      = СтруктураШапкиДокумента.Период;*/
				}
				/*Движения.НДСНезавершенноеПроизводство.мТаблицаДвижений = ТаблицаЗаписей_НДСНезавершенноеПроизводство;*/
				/*Движения.НДСНезавершенноеПроизводство.ВыполнитьПриход();*/
				/*Движения.НДСНезавершенноеПроизводство.Записать(Ложь);*/
			}
		}
		// ОтразитьСуммовыеРазницыПоНезавершенномуПроизводству()
		// Функция вызывается из процедуры "КорректировкаРегистровНДСПоСуммовымРазницам_Приобретение".
		// Цель работы процедуры - отразить суммовые разницы по ОС (НМА)

		public void ОтразитьСуммовыеРазницыПоОСНМА(/*СтруктураШапкиДокумента,ТаблицаСуммовыхРазниц, КорректировкаДокумента*/)
		{
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("Организация",        СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("СписокСчетовФактур",	ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСуммовыхРазниц.ВыгрузитьКолонку("СчетФактура"),Истина));*/
			/*Запрос.УстановитьПараметр("СписокВидыЦенностей",ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСуммовыхРазниц.ВыгрузитьКолонку("ВидЦенности"),Истина));*/
			/*Запрос.УстановитьПараметр("СписокСтавкиНДС",	ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСуммовыхРазниц.ВыгрузитьКолонку("СтавкаНДС"),Истина));*/
			/*Запрос.УстановитьПараметр("СписокСчетаУчетаНДС",ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСуммовыхРазниц.ВыгрузитьКолонку("СчетУчетаНДС"),Истина));*/
			if(true/*СтруктураШапкиДокумента.Свойство("Период") И ЗначениеЗаполнено(СтруктураШапкиДокумента.Период)*/)
			{
				/*КонецПериода = Новый Граница(СтруктураШапкиДокумента.Период, ВидГраницы.Включая);*/
			}
			/*Запрос.УстановитьПараметр("КонецПериода", КонецПериода);*/
			if(true/*КорректировкаДокумента*/)
			{
				/*Запрос.Текст = "
		|ВЫБРАТЬ
		|	НДСпоОСиНМАОстатки.Организация,
		|	НДСпоОСиНМАОстатки.СчетФактура,
		|	НДСпоОСиНМАОстатки.ВидЦенности,
		|	НДСпоОСиНМАОстатки.СтавкаНДС,
		|	НДСпоОСиНМАОстатки.СчетУчетаНДС,
		|	НДСпоОСиНМАОстатки.НДСВключенВСтоимость,
		|	НДСпоОСиНМАОстатки.Объект,
		|	НДСпоОСиНМАОстатки.Состояние,
		|	НДСпоОСиНМАОстатки.СуммаБезНДСПриход КАК СуммаБезНДС,
		|	НДСпоОСиНМАОстатки.НДСПриход КАК НДС,
		|	НДСпоОСиНМАОстатки.НеВлияетНаВычет
		|ИЗ
		|	РегистрНакопления.НДСпоОСиНМА.Обороты(&КонецПериода, &КонецПериода, Период,
		|		Организация = &Организация
		|			И СчетФактура В (&СписокСчетовФактур)
		|			И СтавкаНДС В (&СписокСтавкиНДС)
		|			И СчетУчетаНДС В (&СписокСчетаУчетаНДС)) КАК НДСпоОСиНМАОстатки
		|ГДЕ
		|	(НЕ(ЕСТЬNULL(НДСпоОСиНМАОстатки.СуммаБезНДСПриход, 0) = 0
		|				И ЕСТЬNULL(НДСпоОСиНМАОстатки.НДСПриход, 0) = 0))
		|";*/
			}
			/*ТаблицаЗаписей_НДСпоОСиНМА = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.Прямой);*/
			/*Распределение = Новый Структура("СуммаБезНДС,НДС");*/
			/*Отбор         = Новый Структура("СчетФактура, ВидЦенности, СтавкаНДС, СчетУчетаНДС");*/
			/*Дополнение 	  = Новый Структура("ВидРегламентнойОперации", Перечисления.ВидыРегламентныхОпераций.КорректировкиПриВалютныхРасчетах);*/
			/*ТаблицаЗаписей_НДСпоОСиНМА = ОбщегоНазначения.СформироватьКорректирующиеЗаписи(ТаблицаСуммовыхРазниц,ТаблицаЗаписей_НДСпоОСиНМА,Распределение,Отбор, , Дополнение);*/
			/*// Если суммовая разница невелика, велика вероятность что в реестре СФ присутствуют записи,
*/
			/*// на которые суммовая разница не относится
*/
			/*СтрокиКУдалению = новый Массив();*/
			if(true/*СтрокиКУдалению.Количество()>0*/)
			{
			}
			if(true/*ТаблицаЗаписей_НДСпоОСиНМА.Количество()>0*/)
			{
				/*Движения = новый Структура();*/
				/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения,"НДСпоОСиНМА",СтруктураШапкиДокумента.Ссылка);*/
				if(true/*СтруктураШапкиДокумента.Свойство("Период") И ЗначениеЗаполнено(СтруктураШапкиДокумента.Период)*/)
				{
					/*Движения.НДСпоОСиНМА.мПериод      = СтруктураШапкиДокумента.Период;*/
				}
				/*Движения.НДСпоОСиНМА.мТаблицаДвижений = ТаблицаЗаписей_НДСпоОСиНМА;*/
				/*Движения.НДСпоОСиНМА.ВыполнитьПриход();*/
				/*Движения.НДСпоОСиНМА.Записать(Ложь);*/
			}
		}
		// ОтразитьСуммовыеРазницыПоОСНМА()
		// Функция вызывается из процедуры "КорректировкаРегистровНДСПоСуммовымРазницам_Приобретение".
		// Цель работы процедуры - отразить суммовые разницы по остаткам партий

		public void ОтразитьСуммовыеРазницыПоПартиям(/*СтруктураШапкиДокумента,ТаблицаСуммовыхРазниц, КорректировкаДокумента*/)
		{
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("Организация",        СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("СписокСчетовФактур",	ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСуммовыхРазниц.ВыгрузитьКолонку("СчетФактура"),Истина));*/
			/*Запрос.УстановитьПараметр("СписокВидыЦенностей",ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСуммовыхРазниц.ВыгрузитьКолонку("ВидЦенности"),Истина));*/
			/*Запрос.УстановитьПараметр("СписокСтавкиНДС",	ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСуммовыхРазниц.ВыгрузитьКолонку("СтавкаНДС"),Истина));*/
			/*Запрос.УстановитьПараметр("СписокСчетаУчетаНДС",ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСуммовыхРазниц.ВыгрузитьКолонку("СчетУчетаНДС"),Истина));*/
			if(true/*СтруктураШапкиДокумента.Свойство("Период") И ЗначениеЗаполнено(СтруктураШапкиДокумента.Период)*/)
			{
				/*КонецПериода = Новый Граница(СтруктураШапкиДокумента.Период, ВидГраницы.Включая);*/
			}
			/*Запрос.УстановитьПараметр("КонецПериода", КонецПериода);*/
			if(true/*КорректировкаДокумента*/)
			{
				/*Запрос.Текст = "
		|ВЫБРАТЬ
		|	НДСПартииТоваровОстатки.Организация,
		|	НДСПартииТоваровОстатки.СчетУчета,
		|	НДСПартииТоваровОстатки.Номенклатура,
		|	НДСПартииТоваровОстатки.ХарактеристикаНоменклатуры,
		|	НДСПартииТоваровОстатки.СерияНоменклатуры,
		|	НДСПартииТоваровОстатки.Заказ,
		|	НДСПартииТоваровОстатки.Партия,
		|	НДСПартииТоваровОстатки.Склад,
		|	НДСПартииТоваровОстатки.СчетФактура,
		|	НДСПартииТоваровОстатки.НДСВключенВСтоимость,
		|	НДСПартииТоваровОстатки.ВидЦенности,
		|	НДСПартииТоваровОстатки.СчетУчетаНДС,
		|	НДСПартииТоваровОстатки.СтавкаНДС,
		|	НДСПартииТоваровОстатки.СтоимостьПриход КАК Стоимость,
		|	НДСПартииТоваровОстатки.НДСПриход КАК НДС
		|ИЗ
		|	РегистрНакопления.НДСПартииТоваров.Обороты(&КонецПериода, &КонецПериода, Период,
		|			Организация = &Организация
		|			И СчетФактура В (&СписокСчетовФактур)
		|			И СтавкаНДС В (&СписокСтавкиНДС)
		|			И СчетУчетаНДС В (&СписокСчетаУчетаНДС)
		|		) КАК НДСПартииТоваровОстатки
		|ГДЕ
		|	(НЕ(ЕСТЬNULL(НДСПартииТоваровОстатки.СтоимостьПриход, 0) = 0
		|				И ЕСТЬNULL(НДСПартииТоваровОстатки.НДСПриход, 0) = 0))
		|";*/
			}
			/*ТаблицаЗаписей_НДСПартииТоваров = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.Прямой);*/
			/*Распределение = Новый Структура("Стоимость,НДС");*/
			/*Отбор         = Новый Структура("СчетФактура, ВидЦенности, СтавкаНДС, СчетУчетаНДС");*/
			/*Дополнение 	  = Новый Структура("ВидРегламентнойОперации", Перечисления.ВидыРегламентныхОпераций.КорректировкиПриВалютныхРасчетах);*/
			/*ТаблицаЗаписей_НДСПартииТоваров = ОбщегоНазначения.СформироватьКорректирующиеЗаписи(ТаблицаСуммовыхРазниц,ТаблицаЗаписей_НДСПартииТоваров,Распределение,Отбор, , Дополнение);*/
			/*// Если суммовая разница невелика, велика вероятность что в реестре СФ присутствуют записи,
*/
			/*// на которые суммовая разница не относится
*/
			/*СтрокиКУдалению = новый Массив();*/
			if(true/*СтрокиКУдалению.Количество()>0*/)
			{
			}
			if(true/*ТаблицаЗаписей_НДСПартииТоваров.Количество()>0*/)
			{
				/*Движения = новый Структура();*/
				/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения,"НДСПартииТоваров",СтруктураШапкиДокумента.Ссылка);*/
				if(true/*СтруктураШапкиДокумента.Свойство("Период") И ЗначениеЗаполнено(СтруктураШапкиДокумента.Период)*/)
				{
					/*Движения.НДСПартииТоваров.мПериод      = СтруктураШапкиДокумента.Период;*/
				}
				/*Движения.НДСПартииТоваров.мТаблицаДвижений = ТаблицаЗаписей_НДСПартииТоваров;*/
				/*Движения.НДСПартииТоваров.ВыполнитьПриход();*/
				/*Движения.НДСПартииТоваров.Записать(Ложь);*/
			}
		}
		// ОтразитьСуммовыеРазницыПоПартиям()
		// Функция вызывается из процедуры "КорректировкаРегистровНДСПоСуммовымРазницам_Приобретение".
		// Цель работы процедуры - отразить суммовые разницы по реализации 0%

		public void ОтразитьСуммовыеРазницыПоРеализации0_НДСПредъявленный(/*СтруктураШапкиДокумента,ТаблицаСуммовыхРазниц*/)
		{
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("Организация",        СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("СписокСчетовФактур",	ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСуммовыхРазниц.ВыгрузитьКолонку("СчетФактура"),Истина));*/
			/*Запрос.УстановитьПараметр("СписокВидыЦенностей",ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСуммовыхРазниц.ВыгрузитьКолонку("ВидЦенности"),Истина));*/
			/*Запрос.УстановитьПараметр("СписокСтавкиНДС",	ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСуммовыхРазниц.ВыгрузитьКолонку("СтавкаНДС"),Истина));*/
			/*Запрос.УстановитьПараметр("СписокСчетаУчетаНДС",ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСуммовыхРазниц.ВыгрузитьКолонку("СчетУчетаНДС"),Истина));*/
			/*СостоянияПредъявленный = Новый СписокЗначений;*/
			/*СостоянияПредъявленный.Добавить(Перечисления.НДССостоянияРеализация0.ПодтвержденаРеализация0);*/
			/*СостоянияПредъявленный.Добавить(Перечисления.НДССостоянияРеализация0.НеПодтвержденаРеализация0);*/
			/*Запрос.УстановитьПараметр("СостоянияПредъявленный", СостоянияПредъявленный);*/
			/*Запрос.УстановитьПараметр("СостоянияОжидание", Перечисления.НДССостоянияРеализация0.ОжидаетсяПодтверждение);*/
			if(true/*СтруктураШапкиДокумента.Свойство("Период") И ЗначениеЗаполнено(СтруктураШапкиДокумента.Период)*/)
			{
				/*КонецПериода = Новый Граница(СтруктураШапкиДокумента.Период, ВидГраницы.Включая);*/
			}
			/*Запрос.УстановитьПараметр("КонецПериода", КонецПериода);*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСПредъявленныйРеализация0Обороты.Организация,
	|	НДСПредъявленныйРеализация0Обороты.СчетФактура,
	|	НДСПредъявленныйРеализация0Обороты.Состояние,
	|	НДСПредъявленныйРеализация0Обороты.ДокументОтгрузки,
	|	НДСПредъявленныйРеализация0Обороты.ВидЦенности,
	|	НДСПредъявленныйРеализация0Обороты.СтавкаНДС,
	|	НДСПредъявленныйРеализация0Обороты.СчетУчетаНДС,
	|	ВЫБОР
	|		КОГДА НДСПредъявленныйРеализация0Обороты.Состояние В (&СостоянияПредъявленный)
	|			ТОГДА СУММА(НДСПредъявленныйРеализация0Обороты.СуммаБезНДСПриход)
	|		КОГДА НДСПредъявленныйРеализация0Обороты.Состояние = &СостоянияОжидание
	|			ТОГДА СУММА(НДСПредъявленныйРеализация0Обороты.СуммаБезНДСПриход - НДСПредъявленныйРеализация0Обороты.СуммаБезНДСРасход)
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА НДСПредъявленныйРеализация0Обороты.Состояние В (&СостоянияПредъявленный)
	|			ТОГДА СУММА(НДСПредъявленныйРеализация0Обороты.НДСПриход)
	|		КОГДА НДСПредъявленныйРеализация0Обороты.Состояние = &СостоянияОжидание
	|			ТОГДА СУММА(НДСПредъявленныйРеализация0Обороты.НДСПриход - НДСПредъявленныйРеализация0Обороты.НДСРасход)
	|	КОНЕЦ КАК НДС
	|ИЗ
	|	РегистрНакопления.НДСПредъявленныйРеализация0.Обороты(
	|		,
	|		&КонецПериода,
	|		,
	|		Организация = &Организация
	|		    И СчетФактура В (&СписокСчетовФактур)
	|		    И СтавкаНДС В (&СписокСтавкиНДС)
	|		    И СчетУчетаНДС В (&СписокСчетаУчетаНДС)) КАК НДСПредъявленныйРеализация0Обороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСПредъявленныйРеализация0Обороты.Организация,
	|	НДСПредъявленныйРеализация0Обороты.СчетФактура,
	|	НДСПредъявленныйРеализация0Обороты.Состояние,
	|	НДСПредъявленныйРеализация0Обороты.ДокументОтгрузки,
	|	НДСПредъявленныйРеализация0Обороты.ВидЦенности,
	|	НДСПредъявленныйРеализация0Обороты.СтавкаНДС,
	|	НДСПредъявленныйРеализация0Обороты.СчетУчетаНДС";*/
			/*ТаблицаЗаписей_НДСПредъявленныйРеализация0 = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.Прямой);*/
			/*Счетчик = ТаблицаЗаписей_НДСПредъявленныйРеализация0.Количество();*/
			while(true/*Счетчик <> 0*/)
			{
				/*Счетчик = Счетчик - 1;*/
				/*СтрокаТаблицы = ТаблицаЗаписей_НДСПредъявленныйРеализация0[Счетчик];*/
				if(true/*(СтрокаТаблицы.СуммаБезНДС = 0) и (СтрокаТаблицы.НДС = 0)*/)
				{
					/*ТаблицаЗаписей_НДСПредъявленныйРеализация0.Удалить(СтрокаТаблицы);*/
				}
			}
			/*;
	
	Распределение = Новый Структура("СуммаБезНДС,НДС");*/
			/*Отбор         = Новый Структура("СчетФактура, ВидЦенности, СтавкаНДС, СчетУчетаНДС");*/
			/*Дополнение 	  = Новый Структура("ВидРегламентнойОперации", Перечисления.ВидыРегламентныхОпераций.КорректировкиПриВалютныхРасчетах);*/
			/*ТаблицаЗаписей_НДСПредъявленныйРеализация0 = ОбщегоНазначения.СформироватьКорректирующиеЗаписи(ТаблицаСуммовыхРазниц, ТаблицаЗаписей_НДСПредъявленныйРеализация0, Распределение, Отбор, , Дополнение);*/
			/*//Если суммовая разница невелика, велика вероятность что в реестре СФ присутствуют записи,
*/
			/*//на которые суммовая разница не относится
*/
			/*СтрокиКУдалению = новый Массив();*/
			if(true/*СтрокиКУдалению.Количество()>0*/)
			{
			}
			if(true/*ТаблицаЗаписей_НДСПредъявленныйРеализация0.Количество()>0*/)
			{
				/*Движения = новый Структура();*/
				/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения,"НДСПредъявленныйРеализация0",СтруктураШапкиДокумента.Ссылка);*/
				if(true/*СтруктураШапкиДокумента.Свойство("Период") И ЗначениеЗаполнено(СтруктураШапкиДокумента.Период)*/)
				{
					/*Движения.НДСПредъявленныйРеализация0.мПериод      = СтруктураШапкиДокумента.Период;*/
				}
				/*Движения.НДСПредъявленныйРеализация0.мТаблицаДвижений = ТаблицаЗаписей_НДСПредъявленныйРеализация0;*/
				/*Движения.НДСПредъявленныйРеализация0.ВыполнитьПриход();*/
				/*Движения.НДСПредъявленныйРеализация0.Записать(Ложь);*/
			}
		}
		// ОтразитьСуммовыеРазницыПоРеализации0_НДСПредъявленный()
		// Функция вызывается из процедуры "КорректировкаРегистровНДСПоСуммовымРазницам_Приобретение".
		// Цель работы процедуры - сформировать дерево остатков по регистрам НДС (приобретение), содержащее
		// суммы зарегистрированных событий, для последующей их корректировки
		//

		public object ПолучитьДанныеПоКорректируемымСчетамФактурам_Приобретение(/*СтруктураШапкиДокумента, СчетаФактурыПолученные, КорректировкаДокумента*/)
		{
			if(true/*КорректировкаДокумента*/)
			{
				/*КонецПериода = Новый Граница(СтруктураШапкиДокумента.Дата, ВидГраницы.Включая);*/
			}
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("Организация",        СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("СписокСчетовФактур",	СчетаФактурыПолученные);*/
			/*Запрос.УстановитьПараметр("КонецПериода",       КонецПериода);*/
			/*Запрос.УстановитьПараметр("Предположение0",     Перечисления.НДССостоянияРеализация0.ОжидаетсяПодтверждение);*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСПредъявленныйОбороты.Организация,
	|	НДСПредъявленныйОбороты.СчетФактура КАК СчетФактура,
	|	НДСПредъявленныйОбороты.ВидЦенности,
	|	НДСПредъявленныйОбороты.СтавкаНДС,
	|	НДСПредъявленныйОбороты.СчетУчетаНДС,
	|	НДСПредъявленныйОбороты.Поставщик,
	|	НДСПредъявленныйОбороты.ДоговорКонтрагента,
	|	СУММА(ЕСТЬNULL(НДСПредъявленныйОбороты.СуммаБезНДСПриход, 0) + ЕСТЬNULL(НДСПредъявленныйОбороты.НДСПриход, 0)) КАК Базис_СНДС,
	|	СУММА(ЕСТЬNULL(НДСПредъявленныйОбороты.СуммаБезНДСПриход, 0)) КАК Базис_БезНДС,
	|	СУММА(ЕСТЬNULL(НДСПредъявленныйОбороты.НДСПриход, 0)) КАК Базис_НДС,
	|	СУММА(ЕСТЬNULL(НДСКосвенныеРасходыОстатки.СуммаБезНДСОстаток, 0)) КАК Косвенные_БезНДС,
	|	СУММА(ЕСТЬNULL(НДСКосвенныеРасходыОстатки.НДСОстаток, 0)) КАК Косвенные_НДС,
	|	СУММА(ЕСТЬNULL(НДСНезавершенноеПроизводствоОстатки.СтоимостьОстаток, 0)) КАК Производство_БезНДС,
	|	СУММА(ЕСТЬNULL(НДСНезавершенноеПроизводствоОстатки.НДСОстаток, 0)) КАК Производство_НДС,
	|	СУММА(ЕСТЬNULL(НДСПартииТоваровОстатки.СтоимостьОстаток, 0)) КАК Партии_СНДС,
	|	СУММА(ЕСТЬNULL(НДСПартииТоваровОстатки.НДСОстаток, 0)) КАК Партии_НДС,
	|	СУММА(ЕСТЬNULL(НДСпоОСиНМАОстатки.СуммаБезНДСОстаток, 0)) КАК ОС_БезНДС,
	|	СУММА(ЕСТЬNULL(НДСпоОСиНМАОстатки.НДСОстаток, 0)) КАК ОС_НДС,
	|	СУММА(ЕСТЬNULL(НДСВключенныйВСтоимостьОбороты.СуммаБезНДСОборот, 0)) КАК ВключенВСтоимость_БезНДС,
	|	СУММА(ЕСТЬNULL(НДСВключенныйВСтоимостьОбороты.НДСОборот, 0)) КАК ВключенВСтоимость_НДС,
	|	СУММА(ЕСТЬNULL(НДСПредъявленныйРеализация0Обороты.СуммаБезНДСПриход, 0)) КАК Реализация0_БезНДС,
	|	СУММА(ЕСТЬNULL(НДСПредъявленныйРеализация0Обороты.НДСПриход, 0)) КАК Реализация0_НДС,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НДСПредъявленныйРеализация0Обороты.СчетФактура ЕСТЬ NULL 
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА НДСПредъявленныйРеализация0Обороты.СуммаБезНДСПриход = 0
	|							И НДСПредъявленныйРеализация0Обороты.НДСПриход = 0
	|						ТОГДА 0
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		КОНЕЦ) КАК ЕстьРеализация0,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НДСКосвенныеРасходыОстатки.СчетФактура ЕСТЬ NULL 
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА НДСКосвенныеРасходыОстатки.СуммаБезНДСОстаток = 0
	|							И НДСКосвенныеРасходыОстатки.НДСОстаток = 0
	|						ТОГДА 0
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		КОНЕЦ) КАК ЕстьКосвенныеРасходы,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НДСНезавершенноеПроизводствоОстатки.СчетФактура ЕСТЬ NULL 
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА НДСНезавершенноеПроизводствоОстатки.СтоимостьОстаток = 0
	|							И НДСНезавершенноеПроизводствоОстатки.НДСОстаток = 0
	|						ТОГДА 0
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		КОНЕЦ) КАК ЕстьНезавершенноеПроизводство,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НДСпоОСиНМАОстатки.СчетФактура ЕСТЬ NULL 
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА НДСпоОСиНМАОстатки.СуммаБезНДСОстаток = 0
	|							И НДСпоОСиНМАОстатки.НДСОстаток = 0
	|						ТОГДА 0
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		КОНЕЦ) КАК ЕстьОСНМА,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НДСПартииТоваровОстатки.СчетФактура ЕСТЬ NULL 
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА НДСПартииТоваровОстатки.СтоимостьОстаток = 0
	|							И НДСПартииТоваровОстатки.НДСОстаток = 0
	|						ТОГДА 0
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		КОНЕЦ) КАК ЕстьОстаткиПоПартиям,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НДСВключенныйВСтоимостьОбороты.СчетФактура ЕСТЬ NULL 
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА НДСВключенныйВСтоимостьОбороты.СуммаБезНДСОборот = 0
	|							И НДСВключенныйВСтоимостьОбороты.НДСОборот = 0
	|						ТОГДА 0
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		КОНЕЦ) КАК ЕстьВключениеВСтоимость
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный.Обороты(
	|			,
	|			&КонецПериода,
	|			Период,
	|			Организация = &Организация
	|				И СчетФактура В (&СписокСчетовФактур)) КАК НДСПредъявленныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСПартииТоваров.Остатки(
	|				&КонецПериода,
	|				Организация = &Организация
	|					И СчетФактура В (&СписокСчетовФактур)) КАК НДСПартииТоваровОстатки
	|		ПО НДСПредъявленныйОбороты.СчетФактура = НДСПартииТоваровОстатки.СчетФактура
	|			И НДСПредъявленныйОбороты.ВидЦенности = НДСПартииТоваровОстатки.ВидЦенности
	|			И НДСПредъявленныйОбороты.СтавкаНДС = НДСПартииТоваровОстатки.СтавкаНДС
	|			И НДСПредъявленныйОбороты.СчетУчетаНДС = НДСПартииТоваровОстатки.СчетУчетаНДС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСПредъявленныйРеализация0.Обороты(
	|				,
	|				&КонецПериода,
	|				Период,
	|				Организация = &Организация
	|					И СчетФактура В (&СписокСчетовФактур)
	|					И Состояние = &Предположение0) КАК НДСПредъявленныйРеализация0Обороты
	|		ПО НДСПредъявленныйОбороты.СчетФактура = НДСПредъявленныйРеализация0Обороты.СчетФактура
	|			И НДСПредъявленныйОбороты.ВидЦенности = НДСПредъявленныйРеализация0Обороты.ВидЦенности
	|			И НДСПредъявленныйОбороты.СтавкаНДС = НДСПредъявленныйРеализация0Обороты.СтавкаНДС
	|			И НДСПредъявленныйОбороты.СчетУчетаНДС = НДСПредъявленныйРеализация0Обороты.СчетУчетаНДС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСКосвенныеРасходы.Остатки(
	|				&КонецПериода,
	|				Организация = &Организация
	|					И СчетФактура В (&СписокСчетовФактур)) КАК НДСКосвенныеРасходыОстатки
	|		ПО НДСПредъявленныйОбороты.СчетФактура = НДСКосвенныеРасходыОстатки.СчетФактура
	|			И НДСПредъявленныйОбороты.ВидЦенности = НДСКосвенныеРасходыОстатки.ВидЦенности
	|			И НДСПредъявленныйОбороты.СтавкаНДС = НДСКосвенныеРасходыОстатки.СтавкаНДС
	|			И НДСПредъявленныйОбороты.СчетУчетаНДС = НДСКосвенныеРасходыОстатки.СчетУчетаНДС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСНезавершенноеПроизводство.Остатки(
	|				&КонецПериода,
	|				Подразделение.Владелец = &Организация
	|					И СчетФактура В (&СписокСчетовФактур)) КАК НДСНезавершенноеПроизводствоОстатки
	|		ПО НДСПредъявленныйОбороты.СчетФактура = НДСНезавершенноеПроизводствоОстатки.СчетФактура
	|			И НДСПредъявленныйОбороты.ВидЦенности = НДСНезавершенноеПроизводствоОстатки.ВидЦенности
	|			И НДСПредъявленныйОбороты.СтавкаНДС = НДСНезавершенноеПроизводствоОстатки.СтавкаНДС
	|			И НДСПредъявленныйОбороты.СчетУчетаНДС = НДСНезавершенноеПроизводствоОстатки.СчетУчетаНДС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСпоОСиНМА.Остатки(
	|				&КонецПериода,
	|				Организация = &Организация
	|					И СчетФактура В (&СписокСчетовФактур)) КАК НДСпоОСиНМАОстатки
	|		ПО НДСПредъявленныйОбороты.СчетФактура = НДСпоОСиНМАОстатки.СчетФактура
	|			И НДСПредъявленныйОбороты.ВидЦенности = НДСпоОСиНМАОстатки.ВидЦенности
	|			И НДСПредъявленныйОбороты.СтавкаНДС = НДСпоОСиНМАОстатки.СтавкаНДС
	|			И НДСПредъявленныйОбороты.СчетУчетаНДС = НДСпоОСиНМАОстатки.СчетУчетаНДС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСВключенныйВСтоимость.Обороты(
	|				,
	|				&КонецПериода,
	|				Период,
	|				Организация = &Организация
	|					И СчетФактура В (&СписокСчетовФактур)) КАК НДСВключенныйВСтоимостьОбороты
	|		ПО НДСПредъявленныйОбороты.СчетФактура = НДСВключенныйВСтоимостьОбороты.СчетФактура
	|			И НДСПредъявленныйОбороты.ВидЦенности = НДСВключенныйВСтоимостьОбороты.ВидЦенности
	|			И НДСПредъявленныйОбороты.СтавкаНДС = НДСВключенныйВСтоимостьОбороты.СтавкаНДС
	|			И НДСПредъявленныйОбороты.СчетУчетаНДС = НДСВключенныйВСтоимостьОбороты.СчетУчетаНДС
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСПредъявленныйОбороты.Организация,
	|	НДСПредъявленныйОбороты.СчетФактура,
	|	НДСПредъявленныйОбороты.ВидЦенности,
	|	НДСПредъявленныйОбороты.СтавкаНДС,
	|	НДСПредъявленныйОбороты.СчетУчетаНДС,
	|	НДСПредъявленныйОбороты.Поставщик,
	|	НДСПредъявленныйОбороты.ДоговорКонтрагента";*/
			return null;
		}
		// ПолучитьДанныеПоКорректируемымСчетамФактурам_Приобретение()
		//////////////////////////////////////////////////////////////////////////
		// ВОЗВРАТ ТОВАРОВ ОТ ПОКУПАТЕЛЯ

		public void ДвиженияВозвратаТоваровОтПокупателяПоРегистрамПодсистемыНДС(/*СтруктураШапкиДокумента, СтруктураПараметров=неопределено, ТаблицаВыручки, Отказ, Заголовок, ВозвратБезУказанияПартии = Ложь*/)
		{
			if(true/*СтруктураШапкиДокумента.ОрганизацияПрименяетУСН*/)
			{
				/*// Движения по этому документу делать не нужно
*/
			}
			if(true/*СтруктураШапкиДокумента.ВидОперации = Перечисления.ВидыОперацийВозвратТоваровПоставщику.ИзПереработки*/)
			{
				/*// Это не наши ценности (были даны в переработку), следовательно НДС по ним учитывать не нужно
*/
			}
			if(true/*СтруктураШапкиДокумента.ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом*/)
			{
				/*// Это не наши ценности (договор комиссии), следовательно НДС по ним отражать не нужно
*/
			}
			if(true/*не СтруктураШапкиДокумента.УчитыватьНДС*/)
			{
			}
			if(true/*ТаблицаВыручки.Количество() = 0*/)
			{
				/*//Отработка по партиям НДС не требуется. 
*/
			}
			if(true/*СтруктураПараметров = неопределено*/)
			{
				/*СтруктураПараметров = новый Структура("СтруктураСодержитНаборыЗаписей",истина);*/
				/*ДобавитьНаборЗаписейВСтруктуруДвижений(СтруктураПараметров,"НДСПартииТоваров",СтруктураШапкиДокумента.Ссылка);*/
				/*ТаблицаДвиженийПартии	= СтруктураПараметров.НДСПартииТоваров.ВыгрузитьКолонки();*/
			}
			/*//ТаблицаДвиженийПартии = СтруктураПараметров.ТаблицаДвиженийНДСПартииТоваров.Скопировать();
*/
			if(true/*ВозвратБезУказанияПартии*/)
			{
				/*ТаблицаНДСПартииСписания = ТаблицаВыручки.Скопировать();*/
				/*ТаблицаНДСПартииСписания.Колонки.СчетУчетаБУ.Имя = "СчетУчета";*/
				/*ТаблицаНДСПартииСписания.Колонки.Себестоимость.Имя = "Стоимость";*/
				/*ТаблицаНДСПартииСписания.Колонки.ОрганизацияДокументаПолучения.Имя = "Организация";*/
				/*ТаблицаНДСПартииСписания.Колонки.НДС.Имя = "НСД_Выручка";*/
				/*ТаблицаНДСПартииСписания.Колонки.Добавить("Период");*/
				/*ТаблицаНДСПартииСписания.Колонки.Добавить("НДС",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));*/
				/*ТаблицаНДСПартииСписания.Колонки.Добавить("Партия");*/
				/*ТаблицаНДСПартииСписания.Колонки.Добавить("СчетФактура");*/
				/*ТаблицаНДСПартииСписания.Колонки.Добавить("СкладПолучатель");*/
				/*ТаблицаНДСПартииСписания.Колонки.Добавить("ДействияНДСПокупки_ВключитьВСтоимость", Новый ОписаниеТипов("Булево"));*/
				/*ТаблицаНДСПартииСписания.Колонки.Добавить("ДействияНДСПокупки_ИсключитьИзСтоимости", Новый ОписаниеТипов("Булево"));*/
				/*ТаблицаНДСПартииСписания.Колонки.Добавить("ДействияНДСПокупки_ПредположениеСтавки0", Новый ОписаниеТипов("Булево"));*/
				/*ТаблицаНДСПартииСписания.ЗаполнитьЗначения(СтруктураШапкиДокумента.Ссылка, "Партия");*/
				/*ТаблицаНДСПартииСписания.ЗаполнитьЗначения(СтруктураШапкиДокумента.Организация, "Организация");*/
				/*ТаблицаНДСПартииСписания.ЗагрузитьКолонку(ТаблицаНДСПартииСписания.ВыгрузитьКолонку("Склад"), "СкладПолучатель");*/
			}
			if(true/*Не ТаблицаНДСПартииСписания.Количество() = 0*/)
			{
				/*// Полученные партии могли быть реализованы с другого склада
*/
				/*/////////////////////////////////////////////////////////////////////////////////
*/
				/*// Отработка сторнирования предположения ставки 0% по НДС покупки.
*/
				/*// При передачи товаров комиссионеру предположение ставки 0% не должно отрабатывать, только по фактическому отражению реализации
*/
				if(true/*не ВозвратБезУказанияПартии 
			и не СтруктураШапкиДокумента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером*/)
				{
					/*УчетНДС.ОтразитьПредположениеСтавки0(СтруктураШапкиДокумента, ТаблицаНДСПартииСписания, СтруктураПараметров, Заголовок);*/
				}
				/*// Отработка сторнирования предположения ставки 0% по НДС покупки.
*/
				/*/////////////////////////////////////////////////////////////////////////////////
*/
				/*/////////////////////////////////////////////////////////////////////////////////
*/
				/*// Отработка сторнирования включения/исключения НДС из стоимости.
*/
				if(true/*не ВозвратБезУказанияПартии*/)
				{
					/*СторноПереквалификацииПартииПриРеализации(СтруктураШапкиДокумента, ТаблицаНДСПартииСписания, Неопределено, ТаблицаДвиженийПартии, СтруктураПараметров, Заголовок);*/
					if(true/*ТаблицаДвиженийПартии.Количество()>0*/)
					{
						/*ТаблицаДвиженийПартии.ЗаполнитьЗначения(ВидДвиженияНакопления.Приход,"ВидДвижения");*/
						/*//ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаДвиженийПартии, СтруктураПараметров.ТаблицаДвиженийНДСПартииТоваров);
*/
						if(true/*не СтруктураПараметров.Свойство("СтруктураСодержитНаборыЗаписей")*/)
						{
							/*ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаДвиженийПартии, СтруктураПараметров.ТаблицаДвиженийНДСПартииТоваров);*/
							/*СтруктураПараметров.Вставить("ИзмененыДвиженияНДСПартииТоваров", Истина);*/
						}
					}
				}
				/*// Отработка сторнирования включения/исключения НДС из стоимости.
*/
				/*/////////////////////////////////////////////////////////////////////////////////
*/
				/*/////////////////////////////////////////////////////////////////////////////////
*/
				/*// НДС по партиям - отразить сторно непосредственного списания.
*/
				if(true/*Не СтруктураШапкиДокумента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером*/)
				{
					/*// Склад возврата может не совпадать со складом списания
*/
				}
				/*ТаблицаДвиженийПартии.Очистить();*/
				/*ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаНДСПартииСписания, ТаблицаДвиженийПартии);*/
				/*ТаблицаДвиженийПартии.ЗаполнитьЗначения(ВидДвиженияНакопления.Расход,"ВидДвижения");*/
				/*//ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаДвиженийПартии, СтруктураПараметров.ТаблицаДвиженийНДСПартииТоваров);
*/
				if(true/*не СтруктураПараметров.Свойство("СтруктураСодержитНаборыЗаписей")*/)
				{
					/*ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаДвиженийПартии, СтруктураПараметров.ТаблицаДвиженийНДСПартииТоваров);*/
					/*СтруктураПараметров.Вставить("ИзмененыДвиженияНДСПартииТоваров", Истина);*/
				}
				/*// НДС по партиям - отразить сторно непосредственного списания.
*/
				/*/////////////////////////////////////////////////////////////////////////////////
*/
				/*/////////////////////////////////////////////////////////////////////////////////
*/
				/*// НДС по партиям - отразить приход от комиссионера.
*/
				if(true/*СтруктураШапкиДокумента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером*/)
				{
					/*ТаблицаДвиженийПартии.Очистить();*/
					/*ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаНДСПартииСписания, ТаблицаДвиженийПартии);*/
					/*ТаблицаДвиженийПартии.ЗаполнитьЗначения(ВидДвиженияНакопления.Приход,"ВидДвижения");*/
					/*//ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаДвиженийПартии, СтруктураПараметров.ТаблицаДвиженийНДСПартииТоваров);
*/
					if(true/*не СтруктураПараметров.Свойство("СтруктураСодержитНаборыЗаписей")*/)
					{
						/*ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаДвиженийПартии, СтруктураПараметров.ТаблицаДвиженийНДСПартииТоваров);*/
						/*СтруктураПараметров.Вставить("ИзмененыДвиженияНДСПартииТоваров", Истина);*/
					}
				}
				/*// НДС по партиям - отразить приход от комиссионера.
*/
				/*/////////////////////////////////////////////////////////////////////////////////
*/
				/*// Подготовка таблицы списания по партиям товаров по данным партионного учета НДС
*/
				/*/////////////////////////////////////////////////////////////////////////////////
*/
			}
			if(true/*НЕ СтруктураШапкиДокумента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером*/)
			{
				/*ДанныеДляОбработки = ТаблицаВыручки.Скопировать();*/
				if(true/*СтруктураШапкиДокумента.ОтразитьВКнигеПокупок*/)
				{
					/*СформироватьДвиженияПоРегиструНДСПредъявленный_ВозвратОтПокупателя(СтруктураШапкиДокумента, ДанныеДляОбработки, СтруктураПараметров, Отказ);*/
				}
			}
			if(true/*СтруктураПараметров.Свойство("СтруктураСодержитНаборыЗаписей")*/)
			{
				if(true/*СтруктураПараметров.НДСПартииТоваров.Количество()>0*/)
				{
					/*СтруктураПараметров.НДСПартииТоваров.Записать(Ложь);*/
				}
				/*СтруктураПараметров=неопределено;*/
			}
		}
		// Отражение возврата от покупателя в книге покупок (в регистре НДСПредъявленный)
		//

		public void СформироватьДвиженияПоРегиструНДСПредъявленный_ВозвратОтПокупателя(/*СтруктураШапкиДокумента, ТаблицаПредъявленногоНДС, СтруктураПараметров, Отказ*/)
		{
			if(true/*не СтруктураПараметров.Свойство("СтруктураСодержитНаборыЗаписей")*/)
			{
				/*ТаблицаДвижений_НДСПредъявленный	= СтруктураПараметров.ТаблицаДвиженийНДСПредъявленный;*/
				/*ТаблицаДвижений_Хозрасчетный		= СтруктураПараметров.ДвиженияХозрасчетный;*/
			}
			/*ИмяКолонкиСчет = ?(ТаблицаПредъявленногоНДС.Колонки.Найти("КорСчетБУ") <> Неопределено, "КорСчетБУ", "СчетРасходовБУ");*/
			/*ИмяКолонкиСубконто = ?(ТаблицаПредъявленногоНДС.Колонки.Найти("КорСубконтоСписанияБУ2") <> Неопределено, "КорСубконтоСписанияБУ2", "СубконтоБУ");*/
			if(true/*ТаблицаДвижений_НДСПредъявленный.Количество() > 0*/)
			{
				if(true/*не СтруктураПараметров.Свойство("СтруктураСодержитНаборыЗаписей")*/)
				{
					/*ТаблицаДвижений_НДСПредъявленный.ЗаполнитьЗначения(СтруктураШапкиДокумента.Дата, "Период");*/
					/*СтруктураПараметров.Вставить("ИзмененыДвиженияНДСПредъявленный", Истина);*/
				}
			}
		}
		// СформироватьДвиженияПоРегиструНДСПредъявленный()
		// ВОЗВРАТ ТОВАРОВ ОТ ПОКУПАТЕЛЯ
		//////////////////////////////////////////////////////////////////////////

		public void СторноПереквалификацииПартииПриРеализации(/*СтруктураШапкиДокумента, ТаблицаСписания, ТаблицаДвиженийПокупки, ТаблицаДвиженийПартии, СтруктураПараметров, Заголовок*/)
		{
			if(true/*ТаблицаСписания.Количество() = 0*/)
			{
				/*//Включение НДС в стоимость по данному набору не требуется
*/
			}
			/*//Фильтрование по произведенным в документе переквалификациям партий.
*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСПартииТоваровОбороты.Организация,
	|	НДСПартииТоваровОбороты.СчетУчета,
	|	НДСПартииТоваровОбороты.Номенклатура,
	|	НДСПартииТоваровОбороты.Партия,
	|	НДСПартииТоваровОбороты.Склад,
	|	НДСПартииТоваровОбороты.СчетФактура,
	|	НДСПартииТоваровОбороты.ВидЦенности,
	|	СУММА(ВЫБОР
	|			КОГДА НДСПартииТоваровОбороты.НДСВключенВСтоимость = ИСТИНА
	|				ТОГДА НДСПартииТоваровОбороты.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоВключен,
	|	СУММА(ВЫБОР
	|			КОГДА НДСПартииТоваровОбороты.НДСВключенВСтоимость = ЛОЖЬ
	|				ТОГДА НДСПартииТоваровОбороты.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоИсключен,
	|	СУММА(ВЫБОР
	|			КОГДА НДСПартииТоваровОбороты.НДСВключенВСтоимость = ИСТИНА
	|				ТОГДА НДСПартииТоваровОбороты.Стоимость
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СтоимостьВключен,
	|	СУММА(ВЫБОР
	|			КОГДА НДСПартииТоваровОбороты.НДСВключенВСтоимость = ЛОЖЬ
	|				ТОГДА НДСПартииТоваровОбороты.Стоимость
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СтоимостьИсключен,
	|	СУММА(ВЫБОР
	|			КОГДА НДСПартииТоваровОбороты.НДСВключенВСтоимость = ИСТИНА
	|				ТОГДА НДСПартииТоваровОбороты.НДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДСВключен,
	|	СУММА(ВЫБОР
	|			КОГДА НДСПартииТоваровОбороты.НДСВключенВСтоимость = ЛОЖЬ
	|				ТОГДА НДСПартииТоваровОбороты.НДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДСИсключен,
	|	НДСПартииТоваровОбороты.СчетУчетаНДС,
	|	НДСПартииТоваровОбороты.СтавкаНДС,
	|	НДСПартииТоваровОбороты.ХарактеристикаНоменклатуры,
	|	НДСПартииТоваровОбороты.СерияНоменклатуры
	|ИЗ
	|	РегистрНакопления.НДСПартииТоваров КАК НДСПартииТоваровОбороты
	|ГДЕ
	|	НДСПартииТоваровОбороты.Регистратор В(&СписокДокументовРеализации)
	|	И НДСПартииТоваровОбороты.Номенклатура В(&Номенклатура)
	|	И НДСПартииТоваровОбороты.ВидЦенности В(&ВидыЦенностей)
	|	И НДСПартииТоваровОбороты.СчетФактура В(&СчетаФактуры)
	|	И НДСПартииТоваровОбороты.ВидДвижения = &ВидДвиженияПриход
	|	И НДСПартииТоваровОбороты.ХарактеристикаНоменклатуры В(&ХарактеристикаНоменклатуры)
	|	И НДСПартииТоваровОбороты.СерияНоменклатуры В(&СерияНоменклатуры)
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСПартииТоваровОбороты.СчетУчета,
	|	НДСПартииТоваровОбороты.Номенклатура,
	|	НДСПартииТоваровОбороты.Склад,
	|	НДСПартииТоваровОбороты.СчетФактура,
	|	НДСПартииТоваровОбороты.ВидЦенности,
	|	НДСПартииТоваровОбороты.Организация,
	|	НДСПартииТоваровОбороты.Партия,
	|	НДСПартииТоваровОбороты.СчетУчетаНДС,
	|	НДСПартииТоваровОбороты.СтавкаНДС,
	|	НДСПартииТоваровОбороты.ХарактеристикаНоменклатуры,
	|	НДСПартииТоваровОбороты.СерияНоменклатуры";*/
			/*СписокДокументовРеализации = ТаблицаСписания.ВыгрузитьКолонку("ДокументПартии");*/
			/*// Возврат может осуществляться как с указанием документа реализации, так и с указанием документа поступления
*/
			/*// Необходимо разделить возвраты на две группы
*/
			/*СписокДокументовПартии	   = ТаблицаСписания.ВыгрузитьКолонку("Партия");*/
			/*СписокДокументовРеализации	= ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(СписокДокументовРеализации,Истина);*/
			/*СписокДокументовПартии 		= ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(СписокДокументовПартии,Истина);*/
			if(true/*СтруктураПараметров.Свойство("ДеревоРасходныхОрдеров")*/)
			{
				/*// Дополним список документов реализации расходными ордерами, которые могли отразить непосредственное списание партии
*/
				/*КоличествоДокументовРеализации = СписокДокументовРеализации.Количество();*/
			}
			/*Запрос.УстановитьПараметр("СписокДокументовРеализации", СписокДокументовРеализации);*/
			/*Запрос.УстановитьПараметр("Номенклатура",				ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСписания.ВыгрузитьКолонку("Номенклатура")));*/
			/*Запрос.УстановитьПараметр("ВидыЦенностей",				ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСписания.ВыгрузитьКолонку("ВидЦенности")));*/
			/*Запрос.УстановитьПараметр("СчетаФактуры",				ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСписания.ВыгрузитьКолонку("СчетФактура")));*/
			/*Запрос.УстановитьПараметр("ВидДвиженияПриход",			ВидДвиженияНакопления.Приход);*/
			/*Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры",	ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСписания.ВыгрузитьКолонку("ХарактеристикаНоменклатуры")));*/
			/*Запрос.УстановитьПараметр("СерияНоменклатуры", 			ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСписания.ВыгрузитьКолонку("СерияНоменклатуры")));*/
			/*Результат = Запрос.Выполнить();*/
			if(true/*Результат.Пустой()*/)
			{
				/*//Переквалификация возвращаемых партий при реализации не производилась.
*/
			}
			/*ТаблицаПереквалификаций = Результат.Выгрузить(ОБходРезультатаЗапроса.Прямой);*/
			/*ТаблицаПереквалификаций.Колонки.Добавить("Период");*/
			/*ТаблицаПереквалификаций.ЗаполнитьЗначения(СтруктураШапкиДокумента.Дата, "Период");*/
			/*ТаблицаВключенияВСтоимость = ТаблицаСписания.СкопироватьКолонки();*/
			/*КолонкиТаблицыПереквалификации = ТаблицаПереквалификаций.Колонки;*/
			/*КолонкиТаблицыСписания = ТаблицаСписания.Колонки;*/
			if(true/*ТаблицаВключенияВСтоимость.Количество()>0*/)
			{
				/*УчетНДСФормированиеДвижений.ОтразитьВключениеИсключениеНДСВСтоимость(СтруктураШапкиДокумента, ТаблицаВключенияВСтоимость, ТаблицаДвиженийПартии,Истина,СтруктураПараметров,Заголовок, Ложь);*/
				/*УчетНДСФормированиеДвижений.ОтразитьВключениеИсключениеНДСВСтоимость(СтруктураШапкиДокумента, ТаблицаВключенияВСтоимость, ТаблицаДвиженийПартии,Ложь,СтруктураПараметров,Заголовок, Ложь);*/
			}
		}
		// СторноПереквалификацииПартииПриРеализации()
		// Начисляет НДС при реализации по бухгалтерскому учету
		//
		// Параметры:
		//	Нет.
		//

		public void СформироватьПроводкиПоВозвратуОтПокупателя(/*СтруктураШапкиДокумента, ТаблицаВыручки, СтруктураПараметров*/)
		{
			/*ИмяКолонкиСчет = ?(ТаблицаВыручки.Колонки.Найти("КорСчетСписанияБУ") <> Неопределено, "КорСчетСписанияБУ", "СчетРасходовБУ");*/
			/*ИмяКолонкиСубконто = ?(ТаблицаВыручки.Колонки.Найти("КорСубконтоСписанияБУ2") <> Неопределено, "КорСубконтоСписанияБУ2", "СубконтоБУ");*/
			if(true/*Не СтруктураШапкиДокумента.Свойство("МоментОпределенияНалоговойБазыНДС")*/)
			{
				/*УчетнаяПолитикаНУ = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.Организация);*/
				if(true/*ЗначениеЗаполнено(УчетнаяПолитикаНУ) 
			И ЗначениеЗаполнено(УчетнаяПолитикаНУ.МоментОпределенияНалоговойБазыНДС)*/)
				{
					/*МоментОпределенияНалоговойБазыНДС = УчетнаяПолитикаНУ.МоментОпределенияНалоговойБазыНДС;*/
				}
				/*СтруктураШапкиДокумента.Вставить("МоментОпределенияНалоговойБазыНДС",МоментОпределенияНалоговойБазыНДС);*/
			}
			if(true/*не СтруктураПараметров.Свойство("СтруктураСодержитНаборыЗаписей") И СтруктураПараметров.Свойство("ДвиженияХозрасчетный")*/)
			{
				/*ТаблицаДвижений_Хозрасчетный		= СтруктураПараметров.ДвиженияХозрасчетный;*/
			}
			if(true/*СтруктураПараметров.Свойство("СтруктураСодержитНаборыЗаписей")*/)
			{
				/*ТаблицаДвижений_Хозрасчетный.Записать(ложь);*/
			}
		}
		// НачислитьНДСРеализации()
		////////////////////////////////////////////////////////////////////////////////////////////////////
		//  ОТРАЖЕНИЯ ДВИЖЕНИЙ СВЯЗАННЫХ С ОБЪЕКТАМИ СТРОИТЕЛЬСТВА, ОС И НМА

		public void СформироватьДвиженияПоРегиструНДСпоОСиНМА_ПеремещениеОборудования(/*СтруктураШапкиДокумента, ТаблицаСписания, Движения, Отказ*/)
		{
			/*ТаблицаДвижений_НДСпоОСиНМА = Неопределено;*/
			/*СчетаУчетаОС = УчетНДС.ОпределитьСчетаУчетаОСиНМА("ОС", СтруктураШапкиДокумента.Дата);*/
			/*СчетаУчетаОборудования = УчетНДС.ОпределитьСчетаУчетаОСиНМА("Оборудование", СтруктураШапкиДокумента.Дата);*/
			if(true/*не ТаблицаДвижений_НДСпоОСиНМА = Неопределено*/)
			{
				/*ТаблицаДвижений_НДСпоОСиНМА.Свернуть("Период,Активность,ДатаСобытия,Организация,ВидЦенности,СчетФактура,СтавкаНДС,СчетУчетаНДС,НДСВключенВСтоимость,Состояние,Объект,ВидДвижения,НеВлияетНаВычет, Событие","СуммаБезНДС,НДС");*/
				/*СтрокиКУдалению = новый Массив();*/
				if(true/*ТаблицаДвижений_НДСпоОСиНМА.Количество() > 0*/)
				{
					if(true/*не Движения.Свойство("СтруктураСодержитНаборыЗаписей")*/)
					{
						/*ТаблицаДвижений_НДСпоОСиНМА.ЗаполнитьЗначения(Движения.Период,"Период");*/
						/*Движения.Вставить("ИзмененыДвиженияНДСпоОСиНМА", Истина);*/
					}
				}
			}
		}
		//Предназначена для отражения НДС при принятии к учету объекта строительства хоз  способом.
		//Возвращает таблицу движений по регистру НДСПредъявленный для целей дальнейшего формирования движений по регистру НДСОСиНМА

		public object СформироватьДвиженияПоРегиструНДСНачисленныйПредъявленный_ПринятиеКУчету_ХозСпособ(/*СтруктураШапкиДокумента, Отказ, СуммаБезНДС, СуммаНДС,ТаблицаПоОС=неопределено*/)
		{
			/*Движения = новый Структура();*/
			/*СсылкаНаДокумент = СтруктураШапкиДокумента.Ссылка;*/
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения,"НДСНачисленный",СсылкаНаДокумент);*/
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения,"НДСПредъявленный",СсылкаНаДокумент);*/
			/*ТаблицаДвижений_НДСНачисленный = Движения.НДСНачисленный.Выгрузить();*/
			/*ТаблицаДвижений_НДСПредъявленный = Движения.НДСПредъявленный.Выгрузить();*/
			/*// Начисление НДС в бюджет. Подготовка записи для отражения в книге продаж.
*/
			/*СтрокаДвижений_НДСНачисленный 						= ТаблицаДвижений_НДСНачисленный.Добавить();*/
			/*СтрокаДвижений_НДСНачисленный.Период 				= СтруктураШапкиДокумента.Дата;*/
			/*СтрокаДвижений_НДСНачисленный.Организация			= СтруктураШапкиДокумента.Организация;*/
			/*СтрокаДвижений_НДСНачисленный.СчетФактура			= СтруктураШапкиДокумента.Ссылка;*/
			/*СтрокаДвижений_НДСНачисленный.ВидЦенности			= Перечисления.ВидыЦенностей.СМРСобственнымиСилами;*/
			/*СтрокаДвижений_НДСНачисленный.СтавкаНДС				= Перечисления.СтавкиНДС.НДС18;*/
			/*СтрокаДвижений_НДСНачисленный.Покупатель			= СтруктураШапкиДокумента.Организация;*/
			/*СтрокаДвижений_НДСНачисленный.ВидНачисления			= Перечисления.НДСВидНачисления.НДСНачисленКУплате;*/
			/*СтрокаДвижений_НДСНачисленный.СуммаБезНДС			= СуммаБезНДС;*/
			/*СтрокаДвижений_НДСНачисленный.НДС					= СуммаНДС;*/
			/*СтрокаДвижений_НДСНачисленный.Событие 				= Перечисления.СобытияПоНДСПродажи.Реализация;*/
			/*СтрокаДвижений_НДСНачисленный.ДатаСобытия 			= СтруктураШапкиДокумента.Дата;*/
			/*СтрокаДвижений_НДСНачисленный.СчетУчетаНДС			= ПланыСчетов.Хозрасчетный.НДСприСтроительствеОсновныхСредств.Ссылка;*/
			/*// Предъявление НДС себе же для последующего принятия к вычету.
*/
			/*СтрокаДвижений_НДСПредъявленный 					= ТаблицаДвижений_НДСПредъявленный.Добавить();*/
			/*СтрокаДвижений_НДСПредъявленный.Период 				= СтруктураШапкиДокумента.Дата;*/
			/*СтрокаДвижений_НДСПредъявленный.Организация			= СтруктураШапкиДокумента.Организация;*/
			/*СтрокаДвижений_НДСПредъявленный.СчетФактура			= СтруктураШапкиДокумента.Ссылка;*/
			/*СтрокаДвижений_НДСПредъявленный.ВидЦенности			= Перечисления.ВидыЦенностей.СМРСобственнымиСилами;*/
			/*СтрокаДвижений_НДСПредъявленный.СтавкаНДС			= Перечисления.СтавкиНДС.НДС18;*/
			/*СтрокаДвижений_НДСПредъявленный.Поставщик			= СтруктураШапкиДокумента.Организация;*/
			/*СтрокаДвижений_НДСПредъявленный.СчетУчетаНДС		= Планысчетов.Хозрасчетный.НДСприСтроительствеОсновныхСредств.Ссылка;*/
			/*СтрокаДвижений_НДСПредъявленный.СуммаБезНДС			= СуммаБезНДС;*/
			/*СтрокаДвижений_НДСПредъявленный.НДС					= СуммаНДС;*/
			/*СтрокаДвижений_НДСПредъявленный.Событие 			= Перечисления.СобытияПоНДСПокупки.ПолученСчетФактура;*/
			/*СтрокаДвижений_НДСПредъявленный.ДатаСобытия 		= СтруктураШапкиДокумента.Дата;*/
			/*Движения.НДСНачисленный.мПериод      = СтруктураШапкиДокумента.Дата;*/
			/*Движения.НДСНачисленный.мТаблицаДвижений = ТаблицаДвижений_НДСНачисленный;*/
			/*Движения.НДСНачисленный.ДобавитьДвижение();*/
			/*Движения.НДСНачисленный.Записать(Ложь);*/
			/*Движения.НДСПредъявленный.мПериод      = СтруктураШапкиДокумента.Дата;*/
			/*Движения.НДСПредъявленный.мТаблицаДвижений = ТаблицаДвижений_НДСПредъявленный;*/
			/*Движения.НДСПредъявленный.ДобавитьДвижение();*/
			/*Движения.НДСПредъявленный.Записать(Ложь);*/
			return null;
		}
		// СформироватьДвиженияПоРегиструНДСНачисленныйПредъявленный_ПринятиеКУчету_ХозСпособ()

		public void СформироватьДвиженияПоРегиструНДСОСиНМА_ПринятиеКУчетуОС_Модернизация(/*СтруктураШапкиДокумента,ТаблицаДвижений_НДСПредъявленный,ТаблицаДвижений_НДСпоОСиНМА=неопределено, ТаблицаПоОС=неопределено*/)
		{
			if(true/*ТаблицаДвижений_НДСПредъявленный.Количество()=0 И ТаблицаДвижений_НДСпоОСиНМА=неопределено*/)
			{
			}
			/*Движения = новый Структура();*/
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения,"НДСпоОСиНМА",СтруктураШапкиДокумента.Ссылка);*/
			if(true/*ТаблицаДвижений_НДСпоОСиНМА = неопределено*/)
			{
				/*ТаблицаДвижений_НДСпоОСиНМА = Движения.НДСпоОСиНМА.ВыгрузитьКолонки();*/
			}
			/*ОсобыеУсловияБлокировкиВычета2006 = (СтруктураШапкиДокумента.Дата >= '20060101');*/
			if(true/*ТаблицаДвижений_НДСПредъявленный.Количество()>0*/)
			{
				/*ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаДвижений_НДСПредъявленный,ТаблицаДвижений_НДСпоОСиНМА);*/
				/*//Дополним последнюю строку таблицы ТаблицаДвижений_НДСпоОСиНМА
*/
				/*ТаблицаДвижений_НДСпоОСиНМА[ТаблицаДвижений_НДСпоОСиНМА.Количество()-1].Объект				 = СтруктураШапкиДокумента.ОбъектСтроительства;*/
				/*ТаблицаДвижений_НДСпоОСиНМА[ТаблицаДвижений_НДСпоОСиНМА.Количество()-1].НДСВключенВСтоимость = Ложь;*/
				/*ТаблицаДвижений_НДСпоОСиНМА[ТаблицаДвижений_НДСпоОСиНМА.Количество()-1].НеВлияетНаВычет = ОсобыеУсловияБлокировкиВычета2006;*/
			}
			/*//Вызов из документа ПринятиеКУчетуОС
*/
			if(true/*ТаблицаПоОС<>неопределено*/)
			{
				/*// По объектам строительства НДС можно принятть к вычету только на следующий месяц после ввода в эксплуатацию
*/
				/*// (в момент, когда можно начислять амортизацию по объекту). Необходимо заблокировать вычет до этого момента.
*/
				/*// Дальше объект строительства фигурировать не будет, 
*/
				/*// необходимо распределить НДС по конкретным ОС для дальнейшей обработки (при принятии к учету).
*/
				/*ТаблицаДвижений_НДСпоОСиНМА_Базовая = ТаблицаДвижений_НДСпоОСиНМА.Скопировать();*/
				/*ТаблицаДвижений_НДСпоОСиНМА.Очистить();*/
				/*Распределение = Новый Структура("СуммаБезНДС,НДС");*/
				/*Отбор         = Новый Структура("СчетФактура,ВидЦенности,СтавкаНДС,СчетУчетаНДС,НДСВключенВСтоимость");*/
				/*ТаблицаДвижений_НДСпоОСиНМА = ОбщегоНазначения.СформироватьКорректирующиеЗаписи(ТаблицаДвижений_НДСпоОСиНМА_Базовая,ТаблицаДвижений_НДСпоОСиНМА,Распределение,Отбор);*/
			}
			if(true/*ТаблицаДвижений_НДСпоОСиНМА.Количество()>0*/)
			{
				/*ТаблицаДвижений_НДСпоОСиНМА.ЗаполнитьЗначения(Перечисления.НДССостоянияОСНМА.ОжидаетсяВводВЭксплуатацию,"Состояние");*/
				/*ТаблицаДвижений_НДСпоОСиНМА.ЗаполнитьЗначения(СтруктураШапкиДокумента.Дата,"ДатаСобытия");*/
				if(true/*ОсобыеУсловияБлокировкиВычета2006*/)
				{
					/*ТаблицаДвижений_НДСпоОСиНМА.ЗаполнитьЗначения(Истина, "НеВлияетНаВычет");*/
				}
				/*// Заблокируем вычет в текущем месяце
*/
				/*ТаблицаДвижений_НДСпоОСиНМА.ЗаполнитьЗначения(СтруктураШапкиДокумента.Дата,"Период");*/
				/*Движения.НДСпоОСиНМА.мТаблицаДвижений = ТаблицаДвижений_НДСпоОСиНМА;*/
				/*Движения.НДСпоОСиНМА.ВыполнитьПриход(ложь);*/
				if(true/*ТаблицаПоОС = неопределено //вызов из документа МодернизацияОС
			ИЛИ (СтруктураШапкиДокумента.Свойство("ПринятиеКУчетуОдновременноСВводомВЭксплуатациюРегл")
			И  СтруктураШапкиДокумента.ПринятиеКУчетуОдновременноСВводомВЭксплуатациюРегл)*/)
				{
					/*//вызов из документа МодернизацияОС
*/
					/*//на след. месяц разблокируем вычет по ОС введенн. в экспл.
*/
					/*ТаблицаДвижений_НДСпоОСиНМА.ЗаполнитьЗначения(НачалоМесяца(ДобавитьМесяц((СтруктураШапкиДокумента.Дата),1)),"Период");*/
					/*Движения.НДСпоОСиНМА.мТаблицаДвижений = ТаблицаДвижений_НДСпоОСиНМА;*/
					/*Движения.НДСпоОСиНМА.ВыполнитьРасход(ложь);*/
				}
				/*Движения.НДСпоОСиНМА.Записать(ложь);*/
			}
		}
		// Функция вызывается из модулей документа принятие к учету ОС и документов списания
		// Процедура "погашает" соответствующие записи по переданным параметрам на указанную  дату

		public object СформироватьДвиженияПоРегиструНДСпоОСиНМА_ИзменениеТекущегоСостоянияНДС(/*СтруктураШапкиДокумента, Объект, Состояние, Событие, ДатаЗаписи, КоэффициентРаспределения, Отказ*/)
		{
			/*УчетнаяПолитикаНУ = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.Организация);*/
			if(true/*НЕ ЗначениеЗаполнено(УчетнаяПолитикаНУ)*/)
			{
				/*Отказ = Истина;*/
			}
			if(true/*(УчетнаяПолитикаНУ.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Упрощенная)*/)
			{
				/*// Движения по этому документу делать не нужно
*/
			}
			/*//коэффициент не должен быть более единицы
*/
			if(true/*КоэффициентРаспределения > 1*/)
			{
				/*КоэффициентРаспределения = 1;*/
			}
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("Организация",	СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("Объект",			Объект);*/
			/*Запрос.УстановитьПараметр("КонецПериода",   Новый МоментВремени(СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.Ссылка));*/
			/*Запрос.УстановитьПараметр("Состояние", 		Состояние);*/
			/*Запрос.УстановитьПараметр("ВидЦенности_Исключение",Перечисления.ВидыЦенностей.СМРСобственнымиСилами);*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСпоОСиНМАОстатки.Организация КАК Организация,
	|	НДСпоОСиНМАОстатки.Объект КАК Объект,
	|	НДСпоОСиНМАОстатки.СчетФактура КАК СчетФактура,
	|	НДСпоОСиНМАОстатки.ВидЦенности КАК ВидЦенности,
	|	НДСпоОСиНМАОстатки.СтавкаНДС КАК СтавкаНДС,
	|	НДСпоОСиНМАОстатки.СчетУчетаНДС КАК СчетУчетаНДС,
	|	НДСпоОСиНМАОстатки.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
	|	НДСпоОСиНМАОстатки.Состояние КАК Состояние,
	|	СУММА(НДСпоОСиНМАОстатки.СуммаБезНДСОстаток + НДСпоОСиНМАОстатки.НДСОстаток) КАК СуммаCНДС,
	|	СУММА(НДСпоОСиНМАОстатки.СуммаБезНДСОстаток) КАК СуммаБезНДС,
	|	СУММА(НДСпоОСиНМАОстатки.НДСОстаток) КАК НДС,
	|	НДСпоОСиНМАОстатки.НеВлияетНаВычет
	|ИЗ
	|	РегистрНакопления.НДСпоОСиНМА.Остатки(
	|		&КонецПериода,
	|		Организация = &Организация
	|			И Объект В (&Объект)
	|			И Состояние = &Состояние
	|			И (НЕ ВидЦенности = &ВидЦенности_Исключение)) КАК НДСпоОСиНМАОстатки
	|ГДЕ
	|	НДСпоОСиНМАОстатки.СуммаБезНДСОстаток + НДСпоОСиНМАОстатки.НДСОстаток > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСпоОСиНМАОстатки.Организация,
	|	НДСпоОСиНМАОстатки.Объект,
	|	НДСпоОСиНМАОстатки.СчетФактура,
	|	НДСпоОСиНМАОстатки.ВидЦенности,
	|	НДСпоОСиНМАОстатки.СтавкаНДС,
	|	НДСпоОСиНМАОстатки.СчетУчетаНДС,
	|	НДСпоОСиНМАОстатки.НДСВключенВСтоимость,
	|	НДСпоОСиНМАОстатки.Состояние,
	|	НДСпоОСиНМАОстатки.НеВлияетНаВычет";*/
			/*Результат = Запрос.Выполнить();*/
			/*//Ничего нет в регистре!
*/
			if(true/*Результат.Пустой()*/)
			{
			}
			/*ТаблицаНДСпоОСиНМА = Результат.Выгрузить(ОбходРезультатаЗапроса.Прямой);*/
			/*ТаблицаНДСпоОСиНМА.ЗагрузитьКолонку(ОбщегоНазначения.РаспределитьПропорционально(Окр(КоэффициентРаспределения*ТаблицаНДСпоОСиНМА.Итог("СуммаCНДС"),2),ТаблицаНДСпоОСиНМА.ВыгрузитьКолонку("СуммаCНДС")),"СуммаCНДС");*/
			if(true/*ТаблицаНДСпоОСиНМА.Итог("СуммаБезНДС") <> 0*/)
			{
				/*ТаблицаНДСпоОСиНМА.ЗагрузитьКолонку(ОбщегоНазначения.РаспределитьПропорционально(Окр(КоэффициентРаспределения*ТаблицаНДСпоОСиНМА.Итог("СуммаБезНДС"),2),ТаблицаНДСпоОСиНМА.ВыгрузитьКолонку("СуммаБезНДС")),"СуммаБезНДС");*/
			}
			/*Движения = новый Структура();*/
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения,"НДСпоОСиНМА",СтруктураШапкиДокумента.Ссылка);*/
			/*ТаблицаДвижений_НДСпоОСиНМА = Движения.НДСпоОСиНМА.Выгрузить();*/
			/*ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаНДСпоОСиНМА,ТаблицаДвижений_НДСпоОСиНМА);*/
			/*ТаблицаДвижений_НДСпоОСиНМА.ЗаполнитьЗначения(Событие,"Событие");*/
			/*ТаблицаДвижений_НДСпоОСиНМА.ЗаполнитьЗначения(СтруктураШапкиДокумента.Дата,"ДатаСобытия");*/
			/*Движения.НДСпоОСиНМА.мПериод          = ДатаЗаписи;*/
			/*Движения.НДСпоОСиНМА.мТаблицаДвижений = ТаблицаДвижений_НДСпоОСиНМА;*/
			/*Движения.НДСпоОСиНМА.ВыполнитьРасход();*/
			/*Движения.НДСпоОСиНМА.Записать(ложь);*/
			return null;
		}
		// Процедура вызывается из модулей документа принятие к учету ОС и документов списания
		// Процедура "погашает" соответствующие записи по переданным параметрам на указанную  дату

		public object СформироватьДвиженияПоРегиструНДСпоОСиНМА_ИзменениеТекущегоСостоянияНДС_Хозспособ(/*СтруктураШапкиДокумента, Объект, Состояние, Событие, ДатаЗаписи, КоэффициентРаспределения, Отказ*/)
		{
			/*ПустойРезультат = Новый Структура("СуммаБезНДС, НДС, ТаблицаДвижений_НДСпоОСиНМА", 0, 0, Неопределено);*/
			if(true/*СтруктураШапкиДокумента.ОрганизацияПрименяетУСН*/)
			{
				/*// Движения по этому документу делать не нужно
*/
			}
			/*//коэффициент не должен быть более единицы
*/
			if(true/*КоэффициентРаспределения > 1*/)
			{
				/*КоэффициентРаспределения = 1;*/
			}
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("Организация",	СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("Объект",			Объект);*/
			/*Запрос.УстановитьПараметр("КонецПериода",   Новый МоментВремени(СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.Ссылка));*/
			/*Запрос.УстановитьПараметр("ВидЦенности",   	Перечисления.ВидыЦенностей.СМРСобственнымиСилами);*/
			/*Запрос.УстановитьПараметр("Состояние", 		Состояние);*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСпоОСиНМАОстатки.Организация КАК Организация,
	|	НДСпоОСиНМАОстатки.Объект КАК Объект,
	|	НДСпоОСиНМАОстатки.СчетФактура КАК СчетФактура,
	|	НДСпоОСиНМАОстатки.ВидЦенности КАК ВидЦенности,
	|	НДСпоОСиНМАОстатки.СтавкаНДС КАК СтавкаНДС,
	|	НДСпоОСиНМАОстатки.СчетУчетаНДС КАК СчетУчетаНДС,
	|	НДСпоОСиНМАОстатки.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
	|	НДСпоОСиНМАОстатки.Состояние КАК Состояние,
	|	СУММА(НДСпоОСиНМАОстатки.СуммаБезНДСОстаток + НДСпоОСиНМАОстатки.НДСОстаток) КАК СуммаCНДС,
	|	СУММА(НДСпоОСиНМАОстатки.СуммаБезНДСОстаток) КАК СуммаБезНДС,
	|	СУММА(НДСпоОСиНМАОстатки.НДСОстаток) КАК НДС,
	|	НДСпоОСиНМАОстатки.НеВлияетНаВычет
	|ИЗ
	|	РегистрНакопления.НДСпоОСиНМА.Остатки(
	|		&КонецПериода,
	|		Организация = &Организация
	|		    И Объект В (&Объект)
	|		    И Состояние = &Состояние
	|		    И ВидЦенности = &ВидЦенности) КАК НДСпоОСиНМАОстатки
	|ГДЕ
	|	НДСпоОСиНМАОстатки.СуммаБезНДСОстаток + НДСпоОСиНМАОстатки.НДСОстаток > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСпоОСиНМАОстатки.Организация,
	|	НДСпоОСиНМАОстатки.Объект,
	|	НДСпоОСиНМАОстатки.СчетФактура,
	|	НДСпоОСиНМАОстатки.ВидЦенности,
	|	НДСпоОСиНМАОстатки.СтавкаНДС,
	|	НДСпоОСиНМАОстатки.СчетУчетаНДС,
	|	НДСпоОСиНМАОстатки.НДСВключенВСтоимость,
	|	НДСпоОСиНМАОстатки.Состояние,
	|	НДСпоОСиНМАОстатки.НеВлияетНаВычет";*/
			/*Результат = Запрос.Выполнить();*/
			/*//Ничего нет в регистре!
*/
			if(true/*Результат.Пустой()*/)
			{
			}
			/*ТаблицаНДСпоОСиНМА = Результат.Выгрузить(ОбходРезультатаЗапроса.Прямой);*/
			/*ТаблицаНДСпоОСиНМА.ЗагрузитьКолонку(ОбщегоНазначения.РаспределитьПропорционально(Окр(КоэффициентРаспределения*ТаблицаНДСпоОСиНМА.Итог("СуммаCНДС"),2),ТаблицаНДСпоОСиНМА.ВыгрузитьКолонку("СуммаCНДС")),"СуммаCНДС");*/
			if(true/*ТаблицаНДСпоОСиНМА.Итог("СуммаБезНДС") <> 0*/)
			{
				/*ТаблицаНДСпоОСиНМА.ЗагрузитьКолонку(ОбщегоНазначения.РаспределитьПропорционально(Окр(КоэффициентРаспределения*ТаблицаНДСпоОСиНМА.Итог("СуммаБезНДС"),2),ТаблицаНДСпоОСиНМА.ВыгрузитьКолонку("СуммаБезНДС")),"СуммаБезНДС");*/
			}
			/*Движения = новый Структура();*/
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения,"НДСпоОСиНМА",СтруктураШапкиДокумента.Ссылка);*/
			/*ТаблицаДвижений_НДСпоОСиНМА = Движения.НДСпоОСиНМА.Выгрузить();*/
			/*ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаНДСпоОСиНМА,ТаблицаДвижений_НДСпоОСиНМА);*/
			/*ТаблицаДвижений_НДСпоОСиНМА.ЗаполнитьЗначения(Событие,"Событие");*/
			/*ТаблицаДвижений_НДСпоОСиНМА.ЗаполнитьЗначения(СтруктураШапкиДокумента.Дата,"ДатаСобытия");*/
			/*Движения.НДСпоОСиНМА.мПериод          = ДатаЗаписи;*/
			/*Движения.НДСпоОСиНМА.мТаблицаДвижений = ТаблицаДвижений_НДСпоОСиНМА;*/
			/*Движения.НДСпоОСиНМА.ВыполнитьРасход();*/
			/*Движения.НДСпоОСиНМА.Записать(ложь);*/
			return null;
		}
		// СформироватьДвиженияПоРегиструНДСпоОСиНМА_ИзменениеТекущегоСостоянияНДС_Хозспособ()
		////////////////////////////////////////////////////////////////////////////////////////////////////
		//  ОТРАЖЕНИЕ ВКЛЮЧЕНИЯ И ИСКЛЮЧЕНИЯ НДС ИЗ СТОИМОСТИ ПРИ ПЕРЕМЕЩЕНИИ ИЛИ СПИСАНИИ ПАРТИИ ТОВАРОВ
		// Процедура вызывается из процедур.
		// В тех случаях, когда розничная реализация в организации переведена на ЕНВД,
		// при передаче товаров в розницу, происходит автоматическое включение НДС в себестоимость
		// этих товаров

		public void ОтразитьВключениеИсключениеНДСВСтоимость(/*СтруктураШапкиДокумента, ТаблицаСписания, ТаблицаДвиженийПартии, ВключитьВСтоимость, СтруктураПараметров=неопределено, Заголовок, ОтражатьПоПартиям = Истина*/)
		{
			/*ВременныеКолонки = Новый Массив;*/
			if(true/*ТаблицаСписания.Колонки.Найти("Количество") = Неопределено*/)
			{
				/*ВременныеКолонки.Добавить("Количество");*/
				/*ТаблицаСписания.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));*/
			}
			if(true/*ТаблицаСписания.Колонки.Найти("QuieryId") = Неопределено*/)
			{
				/*ВременныеКолонки.Добавить("QuieryId");*/
				/*ТаблицаСписания.Колонки.Добавить("QuieryId", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 0)));*/
			}
			if(true/*ТаблицаСписания.Колонки.Найти("ОбъектСтроительства") = Неопределено*/)
			{
				/*ВременныеКолонки.Добавить("ОбъектСтроительства");*/
				/*ТаблицаСписания.Колонки.Добавить("ОбъектСтроительства");*/
			}
			if(true/*ТаблицаСписания.Колонки.Найти("Номенклатура") = Неопределено*/)
			{
				/*ВременныеКолонки.Добавить("Номенклатура");*/
				/*ТаблицаСписания.Колонки.Добавить("Номенклатура");*/
			}
			if(true/*ТаблицаСписания.Колонки.Найти("СкладПолучатель") = Неопределено*/)
			{
				/*ВременныеКолонки.Добавить("СкладПолучатель");*/
				/*ТаблицаСписания.Колонки.Добавить("СкладПолучатель");*/
			}
			if(true/*ТаблицаСписания.Колонки.Найти("КодОперацииПартииТоваров") = Неопределено*/)
			{
				/*ВременныеКолонки.Добавить("КодОперацииПартииТоваров");*/
				/*ТаблицаСписания.Колонки.Добавить("КодОперацииПартииТоваров");*/
			}
			if(true/*ТаблицаСписания.Колонки.Найти("СписаниеНДС") = Неопределено*/)
			{
				/*ТаблицаСписания.Колонки.Добавить("СписаниеНДС", Новый ОписаниеТипов("Булево"));*/
			}
			/*Построитель_ТаблицаСписания = Новый ПостроительЗапроса();*/
			/*Построитель_ТаблицаСписания.ИсточникДанных = Новый ОписаниеИсточникаДанных(ТаблицаСписания);*/
			/*//ОписаниеИсточника_ТаблицаСписания
*/
			/*//Построитель_ТаблицаСписания.ИсточникДанных = ОписаниеИсточника_ТаблицаСписания;
*/
			/*Отбор = Построитель_ТаблицаСписания.Отбор;*/
			if(true/*ВключитьВСтоимость*/)
			{
				/*Отбор.Добавить("ДействияНДСПокупки_ВключитьВСтоимость");*/
				/*Отбор["ДействияНДСПокупки_ВключитьВСтоимость"].Значение = Истина;*/
				/*Отбор["ДействияНДСПокупки_ВключитьВСтоимость"].Использование = Истина;*/
			}
			/*Построитель_ТаблицаСписания.Выполнить();*/
			/*ДанныеДляОбработки = Построитель_ТаблицаСписания.Результат.Выгрузить();*/
			if(true/*ДанныеДляОбработки.Количество()>0*/)
			{
				/*СтрокиКУдалению = новый Массив();*/
			}
			if(true/*ДанныеДляОбработки.Количество() = 0*/)
			{
				/*//Включение НДС в стоимость по данному набору не требуется
*/
			}
			if(true/*ДанныеДляОбработки.Колонки.Найти("СуммаБезНДС") = Неопределено*/)
			{
				/*ДанныеДляОбработки.Колонки.Добавить("СуммаБезНДС",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));*/
			}
			if(true/*ДанныеДляОбработки.Количество()>0*/)
			{
			}
			if(true/*не СтруктураШапкиДокумента.Свойство("ПартионныйУчетБУ")*/)
			{
				if(true/*не СтруктураШапкиДокумента.Свойство("БухгалтерскийУчетСпособОценкиМПЗ")*/)
				{
					/*УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.Организация);*/
					/*СтруктураШапкиДокумента.Вставить("БухгалтерскийУчетСпособОценкиМПЗ",?(НЕ ЗначениеЗаполнено(УчетнаяПолитика), Перечисления.СпособыОценки.ПоСредней, УчетнаяПолитика.СпособОценкиМПЗ));*/
				}
				/*ПартионныйУчетБУ = (СтруктураШапкиДокумента.БухгалтерскийУчетСпособОценкиМПЗ = Перечисления.СпособыОценки.ФИФО 
						или СтруктураШапкиДокумента.БухгалтерскийУчетСпособОценкиМПЗ = Перечисления.СпособыОценки.ЛИФО);*/
				/*СтруктураШапкиДокумента.Вставить("ПартионныйУчетБУ",ПартионныйУчетБУ);*/
			}
			/*ОтражатьВНалоговомУчете = ?(ТаблицаСписания.Колонки.Найти("ОтражатьВНалоговомУчете") <> Неопределено, ТаблицаСписания.Найти(Истина, "ОтражатьВНалоговомУчете") <> Неопределено, СтруктураШапкиДокумента.ОтражатьВНалоговомУчете);*/
			if(true/*(не (СтруктураШапкиДокумента.Свойство("НалоговыйУчетСпособОценкиМПЗ") или СтруктураШапкиДокумента.Свойство("ПартионныйУчетНУ") или СтруктураШапкиДокумента.Свойство("ПартионныйУчетНДСвРазрезеСерийИХарактеристик")) и ОтражатьВНалоговомУчете) 
		или не СтруктураШапкиДокумента.Свойство("СпособОтраженияВБухгалтерскомУчетеВключенияНДСВСтоимость")*/)
			{
				/*УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.Организация);*/
				/*СтруктураШапкиДокумента.Вставить("НалоговыйУчетСпособОценкиМПЗ",?(Не ЗначениеЗаполнено(УчетнаяПолитика), Перечисления.СпособыОценки.ПоСредней, УчетнаяПолитика.СпособОценкиМПЗ));*/
				/*СтруктураШапкиДокумента.Вставить("СпособОтраженияВБухгалтерскомУчетеВключенияНДСВСтоимость",?(?(Не ЗначениеЗаполнено(УчетнаяПолитика), Истина, Не ЗначениеЗаполнено(УчетнаяПолитика.СпособОтраженияВБухгалтерскомУчетеВключенияНДСВСтоимость)),Перечисления.НДССпособОтраженияВБухгалтерскомУчетеПриВключенииВСтоимость.ВСоответствииСоСт170НКРФ, УчетнаяПолитика.СпособОтраженияВБухгалтерскомУчетеВключенияНДСВСтоимость));*/
				/*СтруктураШапкиДокумента.Вставить("ПартионныйУчетНДСвРазрезеСерийИХарактеристик",?(?(Не ЗначениеЗаполнено(УчетнаяПолитика), Ложь, Не ЗначениеЗаполнено(УчетнаяПолитика.ПартионныйУчетНДСвРазрезеСерийИХарактеристик)), Ложь, УчетнаяПолитика.ПартионныйУчетНДСвРазрезеСерийИХарактеристик));*/
			}
			if(true/*не СтруктураШапкиДокумента.Свойство("ПартионныйУчетНУ")*/)
			{
				if(true/*ОтражатьВНалоговомУчете*/)
				{
					/*ПартионныйУчетНУ = (СтруктураШапкиДокумента.НалоговыйУчетСпособОценкиМПЗ = Перечисления.СпособыОценки.ФИФО 
						или СтруктураШапкиДокумента.НалоговыйУчетСпособОценкиМПЗ = Перечисления.СпособыОценки.ЛИФО);*/
				}
				/*СтруктураШапкиДокумента.Вставить("ПартионныйУчетНУ",ПартионныйУчетНУ);*/
			}
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("Организация",  СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("СчетаФактуры",       ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ДанныеДляОбработки.ВыгрузитьКолонку("СчетФактура")));*/
			/*Запрос.УстановитьПараметр("ПустойКонтрагент",   Справочники.Контрагенты.ПустаяСсылка());*/
			/*Запрос.УстановитьПараметр("КонецПериода", Новый Граница(Новый МоментВремени(СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.Ссылка), ВидГраницы.Исключая));*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСПредъявленныйОбороты.Поставщик,
	|	НДСПредъявленныйОбороты.СчетФактура,
	|	ВЫБОР
	|		КОГДА НДСПредъявленныйОбороты.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(НДСПредъявленныйОбороты.СчетФактура.ДоговорКонтрагента, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ НДСПредъявленныйОбороты.ДоговорКонтрагента
	|	КОНЕЦ КАК СчетФактураДоговорКонтрагента,
	|	НДСПредъявленныйОбороты.ДоговорКонтрагента
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный.Обороты(
	|			,
	|			&КонецПериода,
	|			Период,
	|			Организация = &Организация
	|				И СчетФактура В (&СчетаФактуры)) КАК НДСПредъявленныйОбороты
	|ГДЕ
	|	НДСПредъявленныйОбороты.Поставщик <> &ПустойКонтрагент";*/
			/*КонтрагентПоСчетуФактуре = Запрос.Выполнить().Выгрузить();*/
			if(true/*ДанныеДляОбработки.Колонки.Найти("Поставщик") = Неопределено*/)
			{
				/*ДанныеДляОбработки.Колонки.Добавить("Поставщик", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));*/
			}
			if(true/*ДанныеДляОбработки.Колонки.Найти("СчетФактураДоговорКонтрагента") = Неопределено*/)
			{
				/*ДанныеДляОбработки.Колонки.Добавить("СчетФактураДоговорКонтрагента",новый ОписаниеТипов("СправочникСсылка.ДоговорыКонтрагентов"));*/
			}
			if(true/*ДанныеДляОбработки.Колонки.Найти("ДоговорКонтрагента") = Неопределено*/)
			{
				/*ДанныеДляОбработки.Колонки.Добавить("ДоговорКонтрагента", Новый ОписаниеТипов("СправочникСсылка.ДоговорыКонтрагентов"));*/
			}
			/*ДанныеДляОбработки.ЗаполнитьЗначения(Неопределено, "ДоговорКонтрагента");*/
			/*ДанныеДляОбработки.Колонки.Добавить("Событие");*/
			/*ДанныеДляОбработки.ЗаполнитьЗначения(Перечисления.СобытияПоНДСПокупки.НДСВключенВСтоимость,"Событие");*/
			if(true/*ДанныеДляОбработки.Колонки.Найти("ВидДвижения") = неопределено*/)
			{
				/*ДанныеДляОбработки.Колонки.Добавить("ВидДвижения");*/
			}
			/*ОсобыйПорядокОтражения_ст170НКРФ = (ВключитьВСтоимость и СтруктураШапкиДокумента.Дата >='20060101');*/
			if(true/*ОсобыйПорядокОтражения_ст170НКРФ*/)
			{
				/*ДанныеДляОбработки.Колонки.Добавить("НДСкСписанию", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));*/
				/*ДанныеДляОбработки.Колонки.Добавить("СуммаБезНДСкСписанию", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));*/
				/*// Особый порядок отражения в соответствии со п.3 статьи 170 НК РФ
*/
				/*// по НДС, принятому к вычету на момент "включения в стоимость" 
*/
				/*Запрос = Новый Запрос;*/
				/*Запрос.УстановитьПараметр("Организация",	СтруктураШапкиДокумента.Организация);*/
				/*Запрос.УстановитьПараметр("СчетаФактуры",	ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ДанныеДляОбработки.ВыгрузитьКолонку("СчетФактура"), Истина));*/
				/*Запрос.УстановитьПараметр("ВидыЦенностей",	ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ДанныеДляОбработки.ВыгрузитьКолонку("ВидЦенности"), Истина));*/
				/*Запрос.УстановитьПараметр("СтавкиНДС",		ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ДанныеДляОбработки.ВыгрузитьКолонку("СтавкаНДС"), Истина));*/
				/*Запрос.УстановитьПараметр("Период",			Новый Граница(Новый МоментВремени(СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.Ссылка), ВидГраницы.Исключая));*/
				/*Запрос.Текст = 
		"ВЫБРАТЬ
		|	НДСПредъявленныйОстатки.Организация,
		|	НДСПредъявленныйОстатки.СчетФактура КАК СчетФактура,
		|	НДСПредъявленныйОстатки.ВидЦенности,
		|	НДСПредъявленныйОстатки.СтавкаНДС,
		|	НДСПредъявленныйОстатки.СчетУчетаНДС,
		|	НДСПредъявленныйОстатки.Поставщик,
		|	НДСПредъявленныйОстатки.ДоговорКонтрагента,
		|	НДСПредъявленныйОстатки.СуммаБезНДСОстаток - ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток, 0) КАК СуммаБезНДС,
		|	НДСПредъявленныйОстатки.НДСОстаток - ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.НДСОстаток, 0) КАК НДС
		|ИЗ
		|	РегистрНакопления.НДСПредъявленный.Остатки(
		|			&Период,
		|			Организация = &Организация
		|				И СчетФактура В (&СчетаФактуры)
		|				И ВидЦенности В (&ВидыЦенностей)
		|				И СтавкаНДС В (&СтавкиНДС)) КАК НДСПредъявленныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСПредъявленныйРеализация0.Остатки(
		|				&Период,
		|				Организация = &Организация
		|					И СчетФактура В (&СчетаФактуры)
		|					И ВидЦенности В (&ВидыЦенностей)
		|					И СтавкаНДС В (&СтавкиНДС)) КАК НДСПредъявленныйРеализация0Остатки
		|		ПО НДСПредъявленныйОстатки.СчетФактура = НДСПредъявленныйРеализация0Остатки.СчетФактура
		|			И НДСПредъявленныйОстатки.ВидЦенности = НДСПредъявленныйРеализация0Остатки.ВидЦенности
		|			И НДСПредъявленныйОстатки.СтавкаНДС = НДСПредъявленныйРеализация0Остатки.СтавкаНДС
		|			И НДСПредъявленныйОстатки.СчетУчетаНДС = НДСПредъявленныйРеализация0Остатки.СчетУчетаНДС
		|			И (НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток + НДСПредъявленныйРеализация0Остатки.НДСОстаток > 0)
		|ГДЕ
		|	НДСПредъявленныйОстатки.НДСОстаток + НДСПредъявленныйОстатки.СуммаБезНДСОстаток > 0
		|ИТОГИ ПО
		|	СчетФактура";*/
				/*РезультатЗапроса = Запрос.Выполнить();*/
				if(true/*РезультатЗапроса.Пустой()*/)
				{
					/*ДанныеДляОбработки.ЗагрузитьКолонку(ДанныеДляОбработки.ВыгрузитьКолонку("СуммаБезНДС"),"СуммаБезНДСкСписанию");*/
					/*ДанныеДляОбработки.ЗагрузитьКолонку(ДанныеДляОбработки.ВыгрузитьКолонку("НДС"),"НДСкСписанию");*/
					/*ДанныеДляОбработки.ЗаполнитьЗначения(0, "СуммаБезНДС,НДС");*/
				}
			}
			/*ДанныеДляОтраженияВДополнительныхРегистрах = ДанныеДляОбработки.Скопировать();*/
			/*КолвоЭлементовКоллекции = ДанныеДляОтраженияВДополнительныхРегистрах.Количество();*/
			/*// Отразить в регистре НДСПредъявленный
*/
			if(true/*СтруктураПараметров = неопределено*/)
			{
				/*СтруктураПараметров = новый Структура("СтруктураСодержитНаборыЗаписей",истина);*/
			}
			/*СсылкаНаДокумент = СтруктураШапкиДокумента.Ссылка;*/
			if(true/*не СтруктураПараметров.Свойство("СтруктураСодержитНаборыЗаписей")*/)
			{
				/*ТаблицаДвижений_НДСПредъявленный = СтруктураПараметров.ТаблицаДвиженийНДСПредъявленный.СкопироватьКолонки();*/
			}
			/*ДанныеДляОтраженияВДополнительныхРегистрах.ЗаполнитьЗначения(ВидДвиженияНакопления.Расход,"ВидДвижения");*/
			/*ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ДанныеДляОтраженияВДополнительныхРегистрах, ТаблицаДвижений_НДСПредъявленный);*/
			/*//Зачистить таблицу от записей с пустыми суммами
*/
			/*СтрокиКУдалению = ТаблицаДвижений_НДСПредъявленный.НайтиСтроки(Новый Структура("СуммаБезНДС,НДС", 0, 0));*/
			if(true/*не СтруктураПараметров.Свойство("СтруктураСодержитНаборыЗаписей")*/)
			{
				/*ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаДвижений_НДСПредъявленный, СтруктураПараметров.ТаблицаДвиженийНДСПредъявленный);*/
				/*СтруктураПараметров.Вставить("ИзмененыДвиженияНДСПредъявленный", Истина);*/
			}
			/*// Отразить в регистре НДСВключенныйВСтоимость
*/
			if(true/*не СтруктураПараметров.Свойство("СтруктураСодержитНаборыЗаписей")*/)
			{
				/*ТаблицаДвижений_НДСВключенныйВСтоимость	= СтруктураПараметров.ТаблицаДвиженийНДСВключенныйВСтоимость.СкопироватьКолонки();*/
			}
			/*ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ДанныеДляОтраженияВДополнительныхРегистрах, ТаблицаДвижений_НДСВключенныйВСтоимость);*/
			/*//Зачистить таблицу от записей с пустыми суммами
*/
			/*СтрокиКУдалению = ТаблицаДвижений_НДСВключенныйВСтоимость.НайтиСтроки(Новый Структура("СуммаБезНДС,НДС", 0, 0));*/
			if(true/*не СтруктураПараметров.Свойство("СтруктураСодержитНаборыЗаписей")*/)
			{
				/*ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаДвижений_НДСВключенныйВСтоимость, СтруктураПараметров.ТаблицаДвиженийНДСВключенныйВСтоимость);*/
				/*СтруктураПараметров.Вставить("ИзмененыДвиженияНДСВключенныйВСтоимость", Истина);*/
			}
			/*ДанныеДляОбработки.ЗаполнитьЗначения(ВидДвиженияНакопления.Приход,"ВидДвижения");*/
			if(true/*ОсобыйПорядокОтражения_ст170НКРФ
		и (не ДанныеДляОбработки.Итог("НДСКСписанию") = 0 или не ДанныеДляОбработки.Итог("СуммаБезНДСКСписанию") = 0)*/)
			{
				/*//Отражение списания (восстановления) НДС в регистре "НДС начисленный"
*/
				/*СтруктураПереименования = Новый Структура("СуммаБезНДС, НДС, Покупатель","СуммаБезНДСКСписанию", "НДСКСписанию", "Поставщик");*/
				if(true/*не СтруктураПараметров.Свойство("СтруктураСодержитНаборыЗаписей")*/)
				{
					/*ТаблицаДвижений_НДСНачисленный	= СтруктураПараметров.ТаблицаДвиженийНДСначисленный.СкопироватьКолонки();*/
				}
				/*УчетНДС.ПереименованиеКолонок(ТаблицаДвижений_НДСНачисленный, СтруктураПереименования);*/
				/*ИспользоватьКорСчетСписанияПриСписанииНаРасходы = ?(СтруктураШапкиДокумента.Свойство("ДляСписанияНДСиспользоватьСчетИАналитикуУчетаЗатрат"),
															СтруктураШапкиДокумента.ДляСписанияНДСиспользоватьСчетИАналитикуУчетаЗатрат, Ложь) Или Не СтруктураШапкиДокумента.Свойство("СчетСписанияНДС");*/
				/*УчетНДС.ПереименованиеКолонок(ТаблицаДвижений_НДСНачисленный, СтруктураПереименования, Истина);*/
				/*ТаблицаДвижений_НДСНачисленный.ЗаполнитьЗначения(Неопределено, "ДоговорКонтрагента");*/
				/*ТаблицаДвижений_НДСНачисленный.ЗаполнитьЗначения(Перечисления.НДСВидНачисления.НДСВосстановлен, "ВидНачисления");*/
				/*ТаблицаДвижений_НДСНачисленный.ЗаполнитьЗначения(Перечисления.СобытияПоНДСПродажи.ВосстановлениеНДС, "Событие");*/
				/*ТаблицаДвижений_НДСНачисленный.ЗаполнитьЗначения(ВидДвиженияНакопления.Приход, "ВидДвижения");*/
				/*//Зачистить таблицу от записей с пустыми суммами
*/
				/*СтрокиКУдалению = ТаблицаДвижений_НДСНачисленный.НайтиСтроки(Новый Структура("НДС", 0));*/
				if(true/*не СтруктураПараметров.Свойство("СтруктураСодержитНаборыЗаписей")*/)
				{
					/*ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаДвижений_НДСНачисленный, СтруктураПараметров.ТаблицаДвиженийНДСначисленный);*/
					/*СтруктураПараметров.Вставить("ИзмененыДвиженияНДСНачисленный", Истина);*/
				}
			}
			/*КолонкиТаблицыДанныхДляОбработки = ДанныеДляОбработки.Колонки;*/
			/*////////////////////////////////////////////////////////
*/
			/*// Движения по НДС партии,по регистру бухгалтерии и по партиям товаров на складах
*/
			if(true/*ВключитьВСтоимость*/)
			{
				if(true/*ОтражатьПоПартиям*/)
				{
					/*МассивСтоимость = ДанныеДляОбработки.ВыгрузитьКолонку("Стоимость");*/
					/*МассивКоличество = ДанныеДляОбработки.ВыгрузитьКолонку("Количество");*/
					/*МассивНДС = ДанныеДляОбработки.ВыгрузитьКолонку("НДС");*/
					if(true/*не СтруктураШапкиДокумента.ПартионныйУчетНДСвРазрезеСерийИХарактеристик*/)
					{
						/*МассивСерийНДС = ДанныеДляОбработки.ВыгрузитьКолонку("СерияНоменклатуры");*/
						/*МассивХарактеристикНДС = ДанныеДляОбработки.ВыгрузитьКолонку("ХарактеристикаНоменклатуры");*/
						/*ДанныеДляОбработки.ЗагрузитьКолонку(ДанныеДляОбработки.ВыгрузитьКолонку("СерияНоменклатуры_Базовая"),"СерияНоменклатуры");*/
						/*ДанныеДляОбработки.ЗагрузитьКолонку(ДанныеДляОбработки.ВыгрузитьКолонку("ХарактеристикаНоменклатуры_Базовая"),"ХарактеристикаНоменклатуры");*/
					}
				}
				if(true/*ОтражатьПоПартиям*/)
				{
					if(true/*не СтруктураШапкиДокумента.ПартионныйУчетНДСвРазрезеСерийИХарактеристик*/)
					{
						/*ДанныеДляОбработки.ЗагрузитьКолонку(МассивСерийНДС,"СерияНоменклатуры");*/
						/*ДанныеДляОбработки.ЗагрузитьКолонку(МассивХарактеристикНДС,"ХарактеристикаНоменклатуры");*/
					}
					/*ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ДанныеДляОбработки,ТаблицаДвиженийПартии);*/
					/*ДанныеДляОбработки.ЗаполнитьЗначения(Истина, "НДСВключенВСтоимость");*/
					/*ДанныеДляОбработки.ЗагрузитьКолонку(МассивСтоимость,"Стоимость");*/
					/*ДанныеДляОбработки.ЗагрузитьКолонку(МассивКоличество,"Количество");*/
					/*ДанныеДляОбработки.ЗагрузитьКолонку(МассивНДС,"НДС");*/
				}
				if(true/*ОсобыйПорядокОтражения_ст170НКРФ 
			и не (ДанныеДляОбработки.Итог("НДСКСписанию") = 0 и ДанныеДляОбработки.Итог("СуммаБезНДСКСписанию") = 0)*/)
				{
					/*// Корректировка таблицы данных для обработки для последующего отражения в регистре партионного учета
*/
					/*ДанныеДляОбработки_КоличествоЗаписей = ДанныеДляОбработки.Количество();*/
					/*ДанныеДляОбработки.Колонки.Удалить(ДанныеДляОбработки.Колонки.СуммаБезНДСКСписанию);*/
					/*ДанныеДляОбработки.Колонки.Удалить(ДанныеДляОбработки.Колонки.НДСКСписанию);*/
					/*// Корректировка таблицы списания для последующего использования.
*/
					/*СтрокиКУдалению = Новый Массив;*/
					/*ТаблицаСписания_КоличествоЗаписей = ТаблицаСписания.Количество();*/
				}
				if(true/*ОтражатьПоПартиям*/)
				{
					/*ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ДанныеДляОбработки,ТаблицаДвиженийПартии);*/
				}
			}
			if(true/*ОтражатьПоПартиям*/)
			{
				if(true/*не СтруктураШапкиДокумента.ПартионныйУчетНДСвРазрезеСерийИХарактеристик*/)
				{
					/*МассивСерийНДС = ДанныеДляОбработки.ВыгрузитьКолонку("СерияНоменклатуры");*/
					/*МассивХарактеристикНДС = ДанныеДляОбработки.ВыгрузитьКолонку("ХарактеристикаНоменклатуры");*/
					/*ДанныеДляОбработки.ЗагрузитьКолонку(МассивСерийНДС,"СерияНоменклатуры");*/
					/*ДанныеДляОбработки.ЗагрузитьКолонку(МассивХарактеристикНДС,"ХарактеристикаНоменклатуры");*/
				}
				/*СтрокиКУдалению = ТаблицаДвиженийПартии.НайтиСтроки(Новый Структура("Стоимость, НДС, Количество",0,0,0));*/
			}
			/*// Движения по НДС партии и по регистру бухгалтерии
*/
			/*////////////////////////////////////////////////////////
*/
			if(true/*СтруктураПараметров.Свойство("СтруктураСодержитНаборыЗаписей")*/)
			{
				/*СтруктураПараметров = Неопределено;*/
			}
		}
		// СформироватьДвиженияПоПередачеТоваровИзОптаВРозницуЕНВД()

		public void СформироватьПроводкиПоВключениюИсключениюНДСИзСтоимости(/*СтруктураШапкиДокумента,ВключитьВСтоимость = Истина, СтрокаСписания, КолонкиСтрокиСписания, СтруктураПараметров, Заголовок, ЭтоВозврат=Ложь, ОтражатьПоПартиям = Истина*/)
		{
			if(true/*ВключитьВСтоимость*/)
			{
				/*ЕстьКолонкаНДСКСписанию = (не КолонкиСтрокиСписания.Найти("НДСКСписанию")= неопределено);*/
				/*ДляБУСписыватьНаРаcходы = (СтруктураШапкиДокумента.СпособОтраженияВБухгалтерскомУчетеВключенияНДСВСтоимость = Перечисления.НДССпособОтраженияВБухгалтерскомУчетеПриВключенииВСтоимость.СписыватьНаРасходы);*/
				/*ДляБУСписыватьНаРаcходыЕслиНДСПринятКВычету = (ДляБУСписыватьНаРаcходы 
								или (СтруктураШапкиДокумента.Дата >='20060101' и СтруктураШапкиДокумента.СпособОтраженияВБухгалтерскомУчетеВключенияНДСВСтоимость = Перечисления.НДССпособОтраженияВБухгалтерскомУчетеПриВключенииВСтоимость.ВСоответствииСоСт170НКРФ));*/
			}
			if(true/*СтрокаСписания.НДС = 0 и (не (ВключитьВСтоимость и ЕстьКолонкаНДСКСписанию и не СтрокаСписания.НДСКСписанию = 0))*/)
			{
				/*//Формирование проводки не требуется
*/
			}
			/*СообщениеОбОшибке = "БУ: Не хватает данных для формирования проводки по "+?(ВключитьВСтоимость,"включению НДС в стоимость МПЗ","исключению НДС из стоимости МПЗ:");*/
			/*НедостаточноДанных = Ложь;*/
			if(true/*НЕ ЗначениеЗаполнено(СтрокаСписания.СчетФактура)*/)
			{
				/*СообщениеОбОшибке = СообщениеОбОшибке + Символы.ПС + " - отсутствует информация о счете-фактуре";*/
			}
			if(true/*СтруктураПараметров.Свойство("СтруктураСодержитНаборыЗаписей")*/)
			{
				/*НаборЗаписей_Хозрасчетный = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();*/
				/*НаборЗаписей_Хозрасчетный.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);*/
				/*НаборЗаписей_Налоговый = РегистрыБухгалтерии.Налоговый.СоздатьНаборЗаписей();*/
				/*НаборЗаписей_Налоговый.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);*/
			}
			if(true/*НедостаточноДанных*/)
			{
				/*ОбщегоНазначения.СообщитьОбОшибке(СообщениеОбОшибке,, Заголовок,СтатусСообщения.Внимание);*/
			}
			if(true/*?(КолонкиСтрокиСписания.Найти("ОтражатьВНалоговомУчете") <> Неопределено, СтрокаСписания.ОтражатьВНалоговомУчете,
		?(СтруктураШапкиДокумента.Свойство("ОтражатьВНалоговомУчете"), СтруктураШапкиДокумента.ОтражатьВНалоговомУчете, Ложь))*/)
			{
				/*СообщениеОбОшибке = "НУ: Не хватает данных для формирования проводки по "+?(ВключитьВСтоимость,"включению НДС в стоимость МПЗ","исключению НДС из стоимости МПЗ:");*/
				/*НедостаточноДанных = Ложь;*/
				/*КорСчетСписанияБУ_ЕНВД = НалоговыйУчетУСН.ОтноситсяКДеятельностиЕНВД(СтрокаСписания.КорСчетСписанияБУ);*/
				/*СчетСписанияНДСБУ_ЕНВД = ?(СтруктураШапкиДокумента.Свойство("СчетСписанияНДС"), ?(НЕ ЗначениеЗаполнено(СтруктураШапкиДокумента.СчетСписанияНДС),КорСчетСписанияБУ_ЕНВД,НалоговыйУчетУСН.ОтноситсяКДеятельностиЕНВД(СтруктураШапкиДокумента.СчетСписанияНДС)),КорСчетСписанияБУ_ЕНВД);*/
				/*ИспользоватьКорСчетСписанияПриСписанииНаРасходы = ?(СтруктураШапкиДокумента.Свойство("ДляСписанияНДСиспользоватьСчетИАналитикуУчетаЗатрат"),СтруктураШапкиДокумента.ДляСписанияНДСиспользоватьСчетИАналитикуУчетаЗатрат, Ложь);*/
				/*// Для включения в стоимость (исключения из стоимости) необходим "КорСчетСписанияНУ" в строке т.ч. 
*/
				if(true/*((ВключитьВСтоимость 
			и не (ДляБУСписыватьНаРаcходыЕслиНДСПринятКВычету и СтрокаСписания.НДС = 0)) // НДС только к списанию на отдельный счет
			или не ВключитьВСтоимость) 
			и (?(КолонкиСтрокиСписания.Найти("КорСчетСписанияНУ") = неопределено, Истина,НЕ ЗначениеЗаполнено(СтрокаСписания.КорСчетСписанияНУ)) и не КорСчетСписанияБУ_ЕНВД)*/)
				{
					/*// НДС только к списанию на отдельный счет
*/
					/*или не ВключитьВСтоимость) 
			и (?(КолонкиСтрокиСписания.Найти("КорСчетСписанияНУ") = неопределено, Истина,НЕ ЗначениеЗаполнено(СтрокаСписания.КорСчетСписанияНУ)) и не КорСчетСписанияБУ_ЕНВД)
		 	Тогда
			СообщениеОбОшибке = СообщениеОбОшибке + Символы.ПС + " - отсутствует информация о счете отнесения себестоимости ТМЦ";*/
					/*НедостаточноДанных = Истина;*/
				}
				if(true/*не ИспользоватьКорСчетСписанияПриСписанииНаРасходы*/)
				{
					/*// Для списания на расходы необходим "СчетСписанияНДСНУ" в строке т.ч. 
*/
					if(true/*не СтруктураШапкиДокумента.Свойство("СчетСписанияНДСНУ")*/)
					{
						/*ИспользоватьКорСчетСписанияПриСписанииНаРасходы = Истина;*/
					}
				}
				if(true/*НедостаточноДанных*/)
				{
					/*ОбщегоНазначения.СообщитьОбОшибке(СообщениеОбОшибке,, Заголовок,СтатусСообщения.Внимание);*/
				}
			}
			if(true/*СтруктураПараметров.Свойство("СтруктураСодержитНаборыЗаписей")*/)
			{
				/*НаборЗаписей_Хозрасчетный.Записать(ложь);*/
				/*НаборЗаписей_Налоговый.Записать(ложь);*/
			}
		}

		public void ДополнитьТаблицуПартийДляНДС(/*СтруктураШапкиДокумента, ТаблицаПартий*/)
		{
			if(true/*ТаблицаПартий.Колонки.Найти("Партия") = Неопределено*/)
			{
				/*ТаблицаПартий.Колонки.Добавить("Партия");*/
				/*ТаблицаПартий.ЗаполнитьЗначения(СтруктураШапкиДокумента.Ссылка,"Партия");*/
			}
			if(true/*ТаблицаПартий.Колонки.Найти("Склад") = Неопределено*/)
			{
				/*ТаблицаПартий.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"));*/
				if(true/*СтруктураШапкиДокумента.Свойство("Склад")*/)
				{
					/*ТаблицаПартий.ЗаполнитьЗначения(СтруктураШапкиДокумента.Склад,"Склад");*/
				}
			}
			if(true/*ТаблицаПартий.Колонки.Найти("Услуга") = Неопределено*/)
			{
				/*ТаблицаПартий.Колонки.Добавить("Услуга", Новый описаниеТипов("Булево"));*/
			}
			if(true/*ТаблицаПартий.Колонки.Найти("НДСВключенВСтоимость") = Неопределено*/)
			{
				/*ТаблицаПартий.Колонки.Добавить("НДСВключенВСтоимость", Новый ОписаниеТипов("Булево"));*/
				if(true/*СтруктураШапкиДокумента.Свойство("НДСВключенВСтоимость")*/)
				{
					/*ТаблицаПартий.ЗаполнитьЗначения(СтруктураШапкиДокумента.НДСВключенВСтоимость, "НДСВключенВСтоимость");*/
				}
			}
			if(true/*ТаблицаПартий.Колонки.Найти("СчетФактура") = Неопределено*/)
			{
				/*ТаблицаПартий.Колонки.Добавить("СчетФактура");*/
				if(true/*Не СтруктураШапкиДокумента.ВидДокумента = "ПолучениеУслугПоПереработке" 
			И Не СтруктураШапкиДокумента.ВидДокумента = "ВыпускПродукции"*/)
				{
					/*ТаблицаПартий.ЗаполнитьЗначения(СтруктураШапкиДокумента.Ссылка, "СчетФактура");*/
				}
			}
			if(true/*ТаблицаПартий.Колонки.Найти("СчетУчетаНДС") = Неопределено*/)
			{
				/*ТаблицаПартий.Колонки.Добавить("СчетУчетаНДС");*/
				if(true/*СтруктураШапкиДокумента.Свойство("СчетУчетаНДС")*/)
				{
					/*ТаблицаПартий.ЗаполнитьЗначения(СтруктураШапкиДокумента.СчетУчетаНДС, "СчетУчетаНДС");*/
				}
			}
			if(true/*ТаблицаПартий.Колонки.Найти("СтавкаНДС") = Неопределено*/)
			{
				/*ТаблицаПартий.Колонки.Добавить("СтавкаНДС");*/
				if(true/*СтруктураШапкиДокумента.Свойство("СтавкаНДС")*/)
				{
					/*ТаблицаПартий.ЗаполнитьЗначения(СтруктураШапкиДокумента.СтавкаНДС, "СтавкаНДС");*/
				}
			}
			/*// Добавим колонки для обработки заказа покупателя.
*/
			if(true/*ТаблицаПартий.Колонки.Найти("ОбособленныйУчетТоваровПоЗаказамПокупателей") = Неопределено*/)
			{
				/*ТаблицаПартий.Колонки.Добавить("ОбособленныйУчетТоваровПоЗаказамПокупателей");*/
				/*ТаблицаПартий.ЗаполнитьЗначения(Ложь,"ОбособленныйУчетТоваровПоЗаказамПокупателей");*/
			}
			if(true/*ТаблицаПартий.Колонки.Найти("ЗаказПокупателя")= Неопределено*/)
			{
				/*ТаблицаПартий.Колонки.Добавить("ЗаказПокупателя");*/
				/*ТаблицаПартий.ЗаполнитьЗначения(Неопределено,"ЗаказПокупателя");*/
			}
			if(true/*ТаблицаПартий.Колонки.Найти("ВидЦенности")= Неопределено*/)
			{
				/*ТаблицаПартий.Колонки.Добавить("ВидЦенности", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыЦенностей"));*/
			}
			if(true/*ТаблицаПартий.Колонки.Найти("СчетУчетаЦенности")= Неопределено*/)
			{
				if(true/*ТаблицаПартий.Колонки.Найти("СчетУчетаБУ") <> Неопределено*/)
				{
					/*ТаблицаПартий.Колонки.СчетУчетаБУ.Имя = "СчетУчетаЦенности";*/
				}
			}
		}
		/////////////////////////////////////////////////////////////////////////////////////
		// ОТРАЖЕНИЕ ДВИЖЕНИЙ ПО РЕГИСТРУ НДС ПО ПАРТИЯМ ЗАПАСОВ, ПАРТИОННЫЙ УЧЕТ ДЛЯ НДС
		// Процедура вызывается из тела процедуры ДвиженияРегистровПодсистемыНДС
		// Непосредственное заполнение таблицы движений для регистра "НДСПартииТоваров"
		// Данные движения необходимо делать в следующих случаях:
		// 1. Когда ведется сложный учет НДС и происходит приходование товаров или материалов.
		//    Это соответсвтвует ситуации когда у организации существуют виды деятельности,
		//    облагаемые НДС по-разному, например обычный НДС, НДС по ставке 0%, и т.п.).
		// 2. Когда происходит оприходование оборудования, требуегощего монтажа (бухсчет 07)
		//    для того чтобы впоследствии, можно было правильно рассчитать суммы для отражения в
		//    регистре НДССтроительство при передаче этого оборудования в монтаж.

		public void СформироватьДвиженияПоступленияПоРегиструНДСПартииТоваров(/*СтруктураШапкиДокумента, ТаблицаПартий, ТаблицаДвиженийНДСПартии = Неопределено, Отказ*/)
		{
			if(true/*ТаблицаПартий.Количество() = 0*/)
			{
			}
			/*Движения = Неопределено;*/
			if(true/*ТаблицаДвиженийНДСПартии = Неопределено*/)
			{
				/*Движения = Новый Структура();*/
				/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения,"НДСПартииТоваров", СтруктураШапкиДокумента.Ссылка);*/
				/*ТаблицаДвиженийНДСПартии = Движения.НДСПартииТоваров.Выгрузить();*/
			}
			/*УчетНДС.ДополнитьСтруктуруШапкиДокументаДляНДС(СтруктураШапкиДокумента, Истина);*/
			/*ДополнитьТаблицуПартийДляНДС(СтруктураШапкиДокумента, ТаблицаПартий);*/
			/*ЕстьКолонкаСтоимость = ТаблицаПартий.Колонки.Найти("Стоимость") <> Неопределено;*/
			/*ЕстьКолонкаСуммаБезНДС = ТаблицаПартий.Колонки.Найти("СуммаБезНДС") <> Неопределено;*/
			/*ЕстьКолонкаНДС = ТаблицаПартий.Колонки.Найти("НДС") <> Неопределено;*/
			/*ЕстьКолонкаКодОперации = ТаблицаПартий.Колонки.Найти("КодОперацииПартииТоваров") <> Неопределено;*/
			/*ЭтоПередачаНаКомиссию = СтруктураШапкиДокумента.Свойство("ВидДоговора")  
							И СтруктураШапкиДокумента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером;*/
			/*ЭтоПередачаВПереработку = СтруктураШапкиДокумента.Свойство("ВидОперации")
							И СтруктураШапкиДокумента.ВидОперации = Перечисления.ВидыОперацийПередачаТоваров.ВПереработку;*/
			/*ТаблицаПартий.Свернуть("СчетФактура, Партия, Склад, ВидЦенности, СчетУчетаЦенности, Номенклатура, ХарактеристикаНоменклатуры, СерияНоменклатуры,
						|НДСВключенВСтоимость, Услуга, СчетУчетаНДС, СтавкаНДС, ОбособленныйУчетТоваровПоЗаказамПокупателей, ЗаказПокупателя"
						+ ?(ЕстьКолонкаКодОперации,", КодОперацииПартииТоваров",""),
						"Количество" + ?(ЕстьКолонкаСтоимость, ", Стоимость", "") + ?(ЕстьКолонкаСуммаБезНДС, ", СуммаБезНДС", "") + ?(ЕстьКолонкаНДС, ", НДС", ""));*/
			if(true/*Не СтруктураШапкиДокумента.СложныйУчетНДС*/)
			{
				/*СчетаУчетаОС = УчетНДС.ОпределитьСчетаУчетаОСиНМА("ОС");*/
			}
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = "ВЫБРАТЬ
	               |	Хозрасчетный.Ссылка КАК Счет
	               |ИЗ
	               |	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	               |ГДЕ
	               |	Хозрасчетный.Забалансовый = ИСТИНА";*/
			/*ЗабалансовыеСчета = Новый СписокЗначений;*/
			/*ЗабалансовыеСчета.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Счет"));*/
			if(true/*Движения <> Неопределено 
		И ТаблицаДвиженийНДСПартии.Количество() > 0*/)
			{
				/*Движения.НДСПартииТоваров.мПериод = СтруктураШапкиДокумента.Дата;*/
				/*Движения.НДСПартииТоваров.мТаблицаДвижений = ТаблицаДвиженийНДСПартии;*/
				/*Движения.НДСПартииТоваров.ДобавитьДвижение();*/
				/*Движения.НДСПартииТоваров.Записать(Ложь);*/
			}
		}
		// СформироватьДвиженияПоступленияПоРегиструНДСПартииТоваров()
		////////////////////////////////////////////////////////////////////////////////////////////////////
		// НАЛОГОВЫЙ АГЕНТ
		// Процедура вызывается из модулей документов прихода.
		// Основная задача - отразить начисление НДС налогового агента в подсистеме учета НДС,
		// а именно в регистре: "НДСНачисленный"

		public void СформироватьДвиженияПоРегиструНДСНачисленный_ПоступлениеАгентскогоНДС(/*СтруктураШапкиДокумента*/)
		{
			if(true/*СтруктураШапкиДокумента.НалоговыйАгентПоОплате*/)
			{
			}
			/*ДвиженияНДСПредъявленный = ОбщегоНазначения.ПолучитьНаборЗаписейПоСсылке(СтруктураШапкиДокумента.Ссылка,РегистрыНакопления.НДСПредъявленный, Истина).Выгрузить();*/
			/*ВидыЦенностей_Агентские = УчетНДС.ВидыЦенностейНалоговыйАгент();*/
			/*СчетНДС = ПланыСчетов.Хозрасчетный.НДС;*/
			/*ТаблицаДвижений_НДСНачисленный = Неопределено;*/
			/*ТаблицаДвижений_НДСУчетРаспределенныхОплатПоставщикам = Неопределено;*/
			/*Движения = Новый Структура();*/
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения,"НДСНачисленный", СтруктураШапкиДокумента.Ссылка);*/
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения,"НДСУчетРаспределенныхОплатПоставщикам", СтруктураШапкиДокумента.Ссылка);*/
			if(true/*не ТаблицаДвижений_НДСНачисленный = Неопределено*/)
			{
				/*Движения.НДСНачисленный.мПериод          = СтруктураШапкиДокумента.Дата;*/
				/*Движения.НДСНачисленный.мТаблицаДвижений = ТаблицаДвижений_НДСНачисленный;*/
				/*Движения.НДСНачисленный.ДобавитьДвижение();*/
				/*Движения.НДСНачисленный.Записать(ложь);*/
			}
			if(true/*не ТаблицаДвижений_НДСУчетРаспределенныхОплатПоставщикам = Неопределено*/)
			{
				/*Движения.НДСУчетРаспределенныхОплатПоставщикам.мПериод          = СтруктураШапкиДокумента.Дата;*/
				/*Движения.НДСУчетРаспределенныхОплатПоставщикам.мТаблицаДвижений = ТаблицаДвижений_НДСУчетРаспределенныхОплатПоставщикам;*/
				/*Движения.НДСУчетРаспределенныхОплатПоставщикам.ДобавитьДвижение();*/
				/*Движения.НДСУчетРаспределенныхОплатПоставщикам.Записать(ложь);*/
			}
		}
		//СформироватьДвиженияПоРегиструНДСНачисленный_ПоступлениеАгентскогоНДС()
		// Процедура вызывается при поступлении оплаты.
		// Отражает начисление НДС налогового агента в подсистеме учета НДС
		//

		public void СформироватьДвиженияНалоговыйАгентПоОплате(/*СтруктураШапкиДокумента, ТаблицаОплаты*/)
		{
			/*// Движения по исправленным счетам-фактурам формируются только регламентной обработкой
*/
			/*// проведения документов по регистрам НДС
*/
			if(true/*СтруктураШапкиДокумента.Исправление*/)
			{
			}
			if(true/*НЕ СтруктураШапкиДокумента.НалоговыйАгентПоОплате
		ИЛИ НЕ СтруктураШапкиДокумента.ДоговорКонтрагента.УчетАгентскогоНДС*/)
			{
			}
			/*Движения = Новый Структура;*/
			/*СформироватьДвиженияНДСНачисленныйНалоговыйАгентПоОплате(СтруктураШапкиДокумента, ТаблицаОплаты, Движения);*/
			/*СформироватьПроводкиНалоговыйАгентПоОплате(СтруктураШапкиДокумента, ТаблицаОплаты, Движения);*/
		}

		public void СформироватьДвиженияНДСНачисленныйНалоговыйАгентПоОплате(/*СтруктураШапкиДокумента, ТаблицаОплаты, Движения*/)
		{
			if(true/*СтруктураШапкиДокумента.Исправление*/)
			{
			}
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения, "НДСНачисленный", СтруктураШапкиДокумента.Ссылка);*/
			/*ТаблицаДвижений_НДСНачисленный = Движения.НДСНачисленный.ВыгрузитьКолонки();*/
			/*СчетНДС = ПланыСчетов.Хозрасчетный.НДСНалоговогоАгента;*/
			/*// 68.32
*/
			/*Движения.НДСНачисленный.мПериод          = СтруктураШапкиДокумента.Дата;*/
			/*Движения.НДСНачисленный.мТаблицаДвижений = ТаблицаДвижений_НДСНачисленный;*/
			/*Движения.НДСНачисленный.ВыполнитьПриход();*/
		}

		public void СформироватьДвиженияНДСЗаписиКнигиПродажНалоговыйАгентПоОплате(/*СтруктураШапкиДокумента, ТаблицаОплаты, Движения*/)
		{
			if(true/*НЕ СтруктураШапкиДокумента.Исправление*/)
			{
			}
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения, "НДСЗаписиКнигиПродаж", СтруктураШапкиДокумента.Ссылка);*/
			/*ТаблицаДвижений_НДСЗаписиКнигиПродаж = Движения.НДСЗаписиКнигиПродаж.ВыгрузитьКолонки();*/
			/*ДатаОплаты = ОбщегоНазначения.ПолучитьЗначениеРеквизита(СтруктураШапкиДокумента.ДокументОснование, "Дата");*/
			/*ЗаписьДопЛиста = НачалоКвартала(ДатаОплаты) < НачалоКвартала(СтруктураШапкиДокумента.Дата);*/
			/*Движения.НДСЗаписиКнигиПродаж.мПериод          = СтруктураШапкиДокумента.Дата;*/
			/*Движения.НДСЗаписиКнигиПродаж.мТаблицаДвижений = ТаблицаДвижений_НДСЗаписиКнигиПродаж;*/
			/*Движения.НДСЗаписиКнигиПродаж.ДобавитьДвижение();*/
		}

		public void СформироватьПроводкиНалоговыйАгентПоОплате(/*СтруктураШапкиДокумента, ТаблицаОплаты, Движения*/)
		{
			/*ДобавитьНаборРегистраБухгалтерииВСтруктуруДвижений(Движения, "Хозрасчетный", СтруктураШапкиДокумента.Ссылка);*/
		}

		public void СформироватьДвиженияНалоговыйАгентПоОплате_КурсовыеРазницы(/*СтруктураШапкиДокумента, ТаблицаВзаиморасчетов, Проводки, Отказ*/)
		{
			/*ТаблицаВзаиморасчетовСР = ТаблицаВзаиморасчетов.СкопироватьКолонки("ВалютаВзаиморасчетов, СчетФактура, Контрагент, ДоговорКонтрагента, КурсоваяРазница");*/
			/*ТаблицаВзаиморасчетовСР.Свернуть("ВалютаВзаиморасчетов, СчетФактура, Контрагент, ДоговорКонтрагента", "КурсоваяРазница");*/
			/*ТаблицаВзаиморасчетовСР.Колонки.КурсоваяРазница.Имя = "СуммоваяРазница";*/
			/*КорректировкаРегистровНДСПоСуммовымРазницам_Приобретение(СтруктураШапкиДокумента, ТаблицаВзаиморасчетовСР, Ложь, , Истина, Проводки);*/
		}

		public void СформироватьПроводкиПоРазницамНалоговыйАгент(/*СтруктураШапкиДокумента, ТаблицаОплат, Проводки*/)
		{
			if(true/*Проводки = Неопределено*/)
			{
				/*ДвиженияХозрасчетный = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();*/
				/*ДвиженияХозрасчетный.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);*/
			}
			if(true/*Проводки = Неопределено*/)
			{
				/*ДвиженияХозрасчетный.Записать(Ложь);*/
			}
		}
		//  НАЛОГОВЫЙ АГЕНТ
		////////////////////////////////////////////////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////////////////////////////////////
		// КОРРЕКТИРОВОЧНЫЕ ДОКУМЕНТЫ
		////////////////////////////////////////////////////////////////////////////////////////////////////
		// Корректировка поступления

		public object КорректировкаПоступленияПодготовитьСтруктуруТаблицСторнирующихНДСЗаписей(/*СтруктураШапкиДокумента*/)
		{
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("ИсправляемыйСчетФактура", УчетНДС.ПолучитьИсправляемыйДокументПоступления(СтруктураШапкиДокумента.ДокументПоступления));*/
			/*Запрос.УстановитьПараметр("Период", СтруктураШапкиДокумента.Дата);*/
			/*Запрос.УстановитьПараметр("МоментДокумента", Новый Граница(СтруктураШапкиДокумента.Ссылка.МоментВремени(), ВидГраницы.Исключая));*/
			/*Запрос.УстановитьПараметр("Ссылка", СтруктураШапкиДокумента.Ссылка);*/
			/*Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	""Сторнирование вычета НДС"" КАК Содержание,
	|	ЗаписиКнигиПокупок.Организация,
	|	ЗаписиКнигиПокупок.Поставщик,
	|	ЗаписиКнигиПокупок.СчетФактура,
	|	ЗаписиКнигиПокупок.ВидЦенности,
	|	ЗаписиКнигиПокупок.СтавкаНДС,
	|	ЗаписиКнигиПокупок.ДатаОплаты,
	|	ЗаписиКнигиПокупок.ДокументОплаты,
	|	ЗаписиКнигиПокупок.Событие,
	|	&Период КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(ЗаписиКнигиПокупок.СчетФактура.Дата, КВАРТАЛ)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(ЗаписиКнигиПокупок.СчетФактура.Дата, КВАРТАЛ)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СторнирующаяЗаписьДопЛиста,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(ЗаписиКнигиПокупок.СчетФактура.Дата, КВАРТАЛ)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ЗаписиКнигиПокупок.СчетФактура.Дата, КВАРТАЛ)
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ЗаписиКнигиПокупок.ДоговорКонтрагента,
	|	ЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	|	ЗаписиКнигиПокупок.СуммаБезНДСОборот * -1 КАК СуммаБезНДС,
	|	ЗаписиКнигиПокупок.НДСОборот * -1 КАК НДС,
	|	ЗаписиКнигиПокупок.СчетУчетаНДС
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			,
	|			&МоментДокумента,
	|			,
	|			Организация = &Организация
	|				И СчетФактура = &ИсправляемыйСчетФактура) КАК ЗаписиКнигиПокупок";*/
			/*СтруктураТаблиц = Новый Структура();*/
			/*СтруктураТаблиц.Вставить("КнигаПокупок", Запрос.Выполнить().Выгрузить());*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	""Сторнирование восстановления НДС"" КАК Содержание,
	|	ЗаписиКнигиПродаж.Организация,
	|	ЗаписиКнигиПродаж.Покупатель,
	|	ЗаписиКнигиПродаж.СчетФактура,
	|	ЗаписиКнигиПродаж.ВидЦенности,
	|	ЗаписиКнигиПродаж.СтавкаНДС,
	|	ЗаписиКнигиПродаж.ДатаОплаты,
	|	ЗаписиКнигиПродаж.ДокументОплаты,
	|	ЗаписиКнигиПродаж.Событие,
	|	&Период КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(ЗаписиКнигиПродаж.СчетФактура.Дата, КВАРТАЛ)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(ЗаписиКнигиПродаж.СчетФактура.Дата, КВАРТАЛ)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СторнирующаяЗаписьДопЛиста,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(ЗаписиКнигиПродаж.СчетФактура.Дата, КВАРТАЛ)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ЗаписиКнигиПродаж.СчетФактура.Дата, КВАРТАЛ)
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ЗаписиКнигиПродаж.ДоговорКонтрагента,
	|	ЗаписиКнигиПродаж.ИсправленныйСчетФактура,
	|	ЗаписиКнигиПродаж.СуммаБезНДСОборот * -1 КАК СуммаБезНДС,
	|	ЗаписиКнигиПродаж.НДСОборот * -1 КАК НДС
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			,
	|			&МоментДокумента,
	|			,
	|			Организация = &Организация
	|				И СчетФактура = &ИсправляемыйСчетФактура) КАК ЗаписиКнигиПродаж";*/
			/*СтруктураТаблиц.Вставить("КнигаПродаж", Запрос.Выполнить().Выгрузить());*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
    |	НДСПредъявленныйОстатки.Организация,
	|	НДСПредъявленныйОстатки.СчетФактура,
	|	НДСПредъявленныйОстатки.ВидЦенности,
	|	НДСПредъявленныйОстатки.СтавкаНДС,
	|	НДСПредъявленныйОстатки.СчетУчетаНДС,
	|	НДСПредъявленныйОстатки.Поставщик,
	|	НДСПредъявленныйОстатки.ДоговорКонтрагента,
	|	НДСПредъявленныйОстатки.ИсправленныйСчетФактура,
	|	НДСПредъявленныйОстатки.СуммаБезНДСОстаток КАК СуммаБезНДС,
	|	НДСПредъявленныйОстатки.НДСОстаток КАК НДС
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный.Остатки(
	|			&МоментДокумента,
	|			Организация = &Организация
	|				И СчетФактура = &ИсправляемыйСчетФактура) КАК НДСПредъявленныйОстатки";*/
			/*СтруктураТаблиц.Вставить("НДСПредъявленный", Запрос.Выполнить().Выгрузить());*/
			return null;
		}

		public object КорректировкаПоступленияПодготовитьТаблицуВычетНДСЗаМинусомНалогаВключенногоВСтоимость(/*СтруктураШапкиДокумента, ТаблицаДокумента*/)
		{
			/*Запрос = Новый Запрос();*/
			/*Запрос.УстановитьПараметр("ИсправляемыйДокумент", УчетНДС.ПолучитьИсправляемыйДокументПоступления(СтруктураШапкиДокумента.ДокументПоступления));*/
			/*Запрос.УстановитьПараметр("ТаблицаДокумента", ТаблицаДокумента);*/
			/*Запрос.УстановитьПараметр("МоментДокумента", Новый Граница(СтруктураШапкиДокумента.Ссылка.МоментВремени(), ВидГраницы.Исключая));*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокумента.ВидЦенности КАК ВидЦенности,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.НДС КАК НДС,
	|	ТаблицаДокумента.Регистратор КАК Регистратор,
	|	ТаблицаДокумента.Период КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.Поставщик КАК Поставщик,
	|	ТаблицаДокумента.Событие КАК Событие,
	|	ТаблицаДокумента.ДатаСобытия КАК ДатаСобытия,
	|	ТаблицаДокумента.СчетФактура КАК СчетФактура,
	|	ТаблицаДокумента.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ТаблицаДокумента.СчетУчетаНДС КАК СчетУчетаНДС
	|ПОМЕСТИТЬ ВТТаблицаДокумента
	|ИЗ
	|	&ТаблицаДокумента КАК ТаблицаДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.ВидЦенности КАК ВидЦенности,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ТаблицаДокумента.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ТаблицаДокумента.НДС) КАК НДС,
	|	ТаблицаДокумента.Регистратор КАК Регистратор,
	|	ТаблицаДокумента.Период КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.Поставщик КАК Поставщик,
	|	ТаблицаДокумента.Событие КАК Событие,
	|	ТаблицаДокумента.ДатаСобытия КАК ДатаСобытия,
	|	ТаблицаДокумента.СчетФактура КАК СчетФактура,
	|	ТаблицаДокумента.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ТаблицаДокумента.СчетУчетаНДС КАК СчетУчетаНДС
	|ПОМЕСТИТЬ ВТСгруппированнаяТаблица
	|ИЗ
	|	ВТТаблицаДокумента КАК ТаблицаДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.ВидЦенности,
	|	ТаблицаДокумента.СтавкаНДС,
	|	ТаблицаДокумента.Регистратор,
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.Поставщик,
	|	ТаблицаДокумента.Событие,
	|	ТаблицаДокумента.ДатаСобытия,
	|	ТаблицаДокумента.СчетФактура,
	|	ТаблицаДокумента.ИсправленныйСчетФактура,
	|	ТаблицаДокумента.СчетУчетаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.ВидЦенности КАК ВидЦенности,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаБезНДС - ЕСТЬNULL(НДСВключенныйВСтоимостьОбороты.СуммаБезНДСОборот, 0) КАК СуммаБезНДС,
	|	ТаблицаДокумента.НДС - ЕСТЬNULL(НДСВключенныйВСтоимостьОбороты.НДСОборот, 0) КАК НДС,
	|	ТаблицаДокумента.Регистратор КАК Регистратор,
	|	ТаблицаДокумента.Период КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.Поставщик КАК Поставщик,
	|	ТаблицаДокумента.Событие КАК Событие,
	|	ТаблицаДокумента.ДатаСобытия КАК ДатаСобытия,
	|	ТаблицаДокумента.СчетФактура КАК СчетФактура,
	|	ТаблицаДокумента.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ТаблицаДокумента.СчетУчетаНДС КАК СчетУчетаНДС
	|ИЗ
	|	ВТСгруппированнаяТаблица КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСВключенныйВСтоимость.Обороты(, &МоментДокумента, , СчетФактура = &ИсправляемыйДокумент) КАК НДСВключенныйВСтоимостьОбороты
	|		ПО ТаблицаДокумента.ВидЦенности = НДСВключенныйВСтоимостьОбороты.ВидЦенности
	|			И ТаблицаДокумента.СтавкаНДС = НДСВключенныйВСтоимостьОбороты.СтавкаНДС
	|			И ТаблицаДокумента.СчетУчетаНДС = НДСВключенныйВСтоимостьОбороты.СчетУчетаНДС";*/
			return null;
		}

		public object КорректировкаПоступленияПодготовитьТаблицуВычетНДССУчетомПропорции(/*СтруктураШапкиДокумента, ТаблицаДокумента*/)
		{
			/*ТаблицаКоэффициентов = КорректировкаПоступленияПодготовитьТаблицуКоэффициентов(СтруктураШапкиДокумента);*/
			/*Запрос = Новый Запрос();*/
			/*Запрос.УстановитьПараметр("ИсправляемыйДокумент", УчетНДС.ПолучитьИсправляемыйДокументПоступления(СтруктураШапкиДокумента.ДокументПоступления));*/
			/*Запрос.УстановитьПараметр("ТаблицаДокумента", ТаблицаДокумента);*/
			/*Запрос.УстановитьПараметр("ТаблицаКоэффициентов", ТаблицаКоэффициентов);*/
			/*Запрос.УстановитьПараметр("МоментДокумента", Новый Граница(СтруктураШапкиДокумента.Ссылка.МоментВремени(), ВидГраницы.Исключая));*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокумента.ВидЦенности КАК ВидЦенности,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.НДС КАК НДС,
	|	ТаблицаДокумента.Регистратор КАК Регистратор,
	|	ТаблицаДокумента.Период КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.Поставщик КАК Поставщик,
	|	ТаблицаДокумента.Событие КАК Событие,
	|	ТаблицаДокумента.ДатаСобытия КАК ДатаСобытия,
	|	ТаблицаДокумента.СчетФактура КАК СчетФактура,
	|	ТаблицаДокумента.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ТаблицаДокумента.СчетУчетаНДС КАК СчетУчетаНДС
	|ПОМЕСТИТЬ ВТТаблицаДокумента
	|ИЗ
	|	&ТаблицаДокумента КАК ТаблицаДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.ВидЦенности КАК ВидЦенности,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ТаблицаДокумента.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ТаблицаДокумента.НДС) КАК НДС,
	|	ТаблицаДокумента.Регистратор КАК Регистратор,
	|	ТаблицаДокумента.Период КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.Поставщик КАК Поставщик,
	|	ТаблицаДокумента.Событие КАК Событие,
	|	ТаблицаДокумента.ДатаСобытия КАК ДатаСобытия,
	|	ТаблицаДокумента.СчетФактура КАК СчетФактура,
	|	ТаблицаДокумента.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ТаблицаДокумента.СчетУчетаНДС КАК СчетУчетаНДС
	|ПОМЕСТИТЬ ВТСгруппированнаяТаблицаДокумента
	|ИЗ
	|	ВТТаблицаДокумента КАК ТаблицаДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.ВидЦенности,
	|	ТаблицаДокумента.СтавкаНДС,
	|	ТаблицаДокумента.Регистратор,
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.Поставщик,
	|	ТаблицаДокумента.Событие,
	|	ТаблицаДокумента.ДатаСобытия,
	|	ТаблицаДокумента.СчетФактура,
	|	ТаблицаДокумента.ИсправленныйСчетФактура,
	|	ТаблицаДокумента.СчетУчетаНДС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидЦенности,
	|	СтавкаНДС,
	|	СчетУчетаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаКоэффициентов.ВидЦенности КАК ВидЦенности,
	|	ТаблицаКоэффициентов.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаКоэффициентов.СчетУчетаНДС КАК СчетУчетаНДС,
	|	ТаблицаКоэффициентов.НДСКоэффициент КАК НДСКоэффициент,
	|	ТаблицаКоэффициентов.СуммаБезНДСКоэффициент КАК СуммаБезНДСКоэффициент
	|ПОМЕСТИТЬ ВТТаблицаКоэффициентов
	|ИЗ
	|	&ТаблицаКоэффициентов КАК ТаблицаКоэффициентов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидЦенности,
	|	СтавкаНДС,
	|	СчетУчетаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСгруппированнаяТаблицаДокумента.ВидЦенности,
	|	ВТСгруппированнаяТаблицаДокумента.СтавкаНДС,
	|	ВТСгруппированнаяТаблицаДокумента.СуммаБезНДС * ЕСТЬNULL(ВТТаблицаКоэффициентов.СуммаБезНДСКоэффициент, 1) КАК СуммаБезНДС,
	|	ВТСгруппированнаяТаблицаДокумента.НДС * ЕСТЬNULL(ВТТаблицаКоэффициентов.НДСКоэффициент, 1) КАК НДС,
	|	ВТСгруппированнаяТаблицаДокумента.Регистратор,
	|	ВТСгруппированнаяТаблицаДокумента.Период,
	|	ВТСгруппированнаяТаблицаДокумента.Организация,
	|	ВТСгруппированнаяТаблицаДокумента.Поставщик,
	|	ВТСгруппированнаяТаблицаДокумента.Событие,
	|	ВТСгруппированнаяТаблицаДокумента.ДатаСобытия,
	|	ВТСгруппированнаяТаблицаДокумента.СчетФактура,
	|	ВТСгруппированнаяТаблицаДокумента.ИсправленныйСчетФактура,
	|	ВТСгруппированнаяТаблицаДокумента.СчетУчетаНДС
	|ИЗ
	|	ВТСгруппированнаяТаблицаДокумента КАК ВТСгруппированнаяТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТаблицаКоэффициентов КАК ВТТаблицаКоэффициентов
	|		ПО ВТСгруппированнаяТаблицаДокумента.ВидЦенности = ВТТаблицаКоэффициентов.ВидЦенности
	|			И ВТСгруппированнаяТаблицаДокумента.СтавкаНДС = ВТТаблицаКоэффициентов.СтавкаНДС
	|			И ВТСгруппированнаяТаблицаДокумента.СчетУчетаНДС = ВТТаблицаКоэффициентов.СчетУчетаНДС";*/
			return null;
		}

		public object КорректировкаПоступленияПодготовитьТаблицуКоэффициентов(/*СтруктураШапкиДокумента*/)
		{
			/*Запрос = Новый Запрос();*/
			/*Запрос.УстановитьПараметр("ИсправляемыйДокумент", УчетНДС.ПолучитьИсправляемыйДокументПоступления(СтруктураШапкиДокумента.ДокументПоступления, Истина));*/
			/*Запрос.УстановитьПараметр("МоментДокумента", Новый Граница(СтруктураШапкиДокумента.Ссылка.МоментВремени(), ВидГраницы.Исключая));*/
			/*Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСКосвенныеРасходыОбороты.ВидЦенности,
	|	НДСКосвенныеРасходыОбороты.СтавкаНДС,
	|	НДСКосвенныеРасходыОбороты.СчетУчетаНДС,
	|	1 - ЕСТЬNULL(НДСВключенныйВСтоимостьОбороты.НДСОборот, 0) / ВЫБОР
	|		КОГДА ЕСТЬNULL(НДСПредъявленныйОстатки.НДСОстаток, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупокОбороты.НДСОборот, 0) + ЕСТЬNULL(НДСВключенныйВСтоимостьОбороты.НДСОборот, 0) = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(НДСПредъявленныйОстатки.НДСОстаток, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупокОбороты.НДСОборот, 0) + ЕСТЬNULL(НДСВключенныйВСтоимостьОбороты.НДСОборот, 0)
	|	КОНЕЦ КАК НДСКоэффициент,
	|	1 - ЕСТЬNULL(НДСВключенныйВСтоимостьОбороты.СуммаБезНДСОборот, 0) / ВЫБОР
	|		КОГДА ЕСТЬNULL(НДСПредъявленныйОстатки.СуммаБезНДСОстаток, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот, 0) + ЕСТЬNULL(НДСВключенныйВСтоимостьОбороты.СуммаБезНДСОборот, 0)= 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(НДСПредъявленныйОстатки.СуммаБезНДСОстаток, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот, 0) + ЕСТЬNULL(НДСВключенныйВСтоимостьОбороты.СуммаБезНДСОборот, 0)
	|	КОНЕЦ КАК СуммаБезНДСКоэффициент
	|ИЗ
	|	РегистрНакопления.НДСКосвенныеРасходы.Обороты(
	|			,
	|			&МоментДокумента,
	|			,
	|			Организация = &Организация
	|				И СчетФактура = &ИсправляемыйДокумент) КАК НДСКосвенныеРасходыОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСВключенныйВСтоимость.Обороты(
	|				,
	|				&МоментДокумента,
	|				,
	|				Организация = &Организация
	|					И СчетФактура = &ИсправляемыйДокумент) КАК НДСВключенныйВСтоимостьОбороты
	|		ПО НДСКосвенныеРасходыОбороты.СтавкаНДС = НДСВключенныйВСтоимостьОбороты.СтавкаНДС
	|			И НДСКосвенныеРасходыОбороты.ВидЦенности = НДСВключенныйВСтоимостьОбороты.ВидЦенности
	|			И НДСКосвенныеРасходыОбороты.СчетУчетаНДС = НДСВключенныйВСтоимостьОбороты.СчетУчетаНДС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|				,
	|				&МоментДокумента,
	|				,
	|				Организация = &Организация
	|					И СчетФактура = &ИсправляемыйДокумент) КАК НДСЗаписиКнигиПокупокОбороты
	|		ПО НДСКосвенныеРасходыОбороты.СтавкаНДС = НДСЗаписиКнигиПокупокОбороты.СтавкаНДС
	|			И НДСКосвенныеРасходыОбороты.ВидЦенности = НДСЗаписиКнигиПокупокОбороты.ВидЦенности
	|			И НДСКосвенныеРасходыОбороты.СчетУчетаНДС = НДСЗаписиКнигиПокупокОбороты.СчетУчетаНДС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСПредъявленный.Остатки(
	|				&МоментДокумента,
	|				Организация = &Организация
	|					И СчетФактура = &ИсправляемыйДокумент) КАК НДСПредъявленныйОстатки
	|		ПО (НДСКосвенныеРасходыОбороты.СтавкаНДС = НДСВключенныйВСтоимостьОбороты.СтавкаНДС)
	|			И (НДСКосвенныеРасходыОбороты.ВидЦенности = НДСВключенныйВСтоимостьОбороты.ВидЦенности)
	|			И (НДСКосвенныеРасходыОбороты.СчетУчетаНДС = НДСВключенныйВСтоимостьОбороты.СчетУчетаНДС)";*/
			return null;
		}

		public object КорректировкаПоступленияПодготовитьТаблицуВычетНДСНаОснованииДокумента(/*СтруктураШапкиДокумента, СтруктураТаблицДокумента*/)
		{
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("ИсправляемыйДокумент", УчетНДС.ПолучитьИсправляемыйДокументПоступления(СтруктураШапкиДокумента.ДокументПоступления));*/
			/*Запрос.УстановитьПараметр("ДокументИсправление", СтруктураШапкиДокумента.Ссылка);*/
			/*Запрос.УстановитьПараметр("ТаблицаПоТоварам", СтруктураТаблицДокумента.ТаблицаПоТоварам);*/
			/*Запрос.УстановитьПараметр("ТаблицаПоУслугам", СтруктураТаблицДокумента.ТаблицаПоУслугам);*/
			/*Запрос.Текст =
	"ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ВТТаблицаПоТоварам
	|ИЗ
	|	&ТаблицаПоТоварам КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ВТТаблицаПоУслугам
	|ИЗ
	|	&ТаблицаПоУслугам КАК ТаблицаУслуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.СтавкаНДС,
	|	ТаблицаТовары.Сумма,
	|	ТаблицаТовары.СуммаНДС,
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.Дата,
	|	ТаблицаТовары.Организация,
	|	ТаблицаТовары.Контрагент,
	|	ЛОЖЬ КАК ЭтоУслуга,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.СчетУчета,
	|	ТаблицаТовары.СчетУчетаНДС
	|ПОМЕСТИТЬ ВТТоварыИУслуги
	|ИЗ
	|	ВТТаблицаПоТоварам КАК ТаблицаТовары
	|ГДЕ
	|	(НЕ ТаблицаТовары.СчетУчета.Забалансовый)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаУслуги.СтавкаНДС,
	|	ТаблицаУслуги.Сумма,
	|	ТаблицаУслуги.СуммаНДС,
	|	ТаблицаУслуги.Ссылка,
	|	ТаблицаУслуги.Дата,
	|	ТаблицаУслуги.Организация,
	|	ТаблицаУслуги.Контрагент,
	|	ИСТИНА,
	|	ТаблицаУслуги.Номенклатура,
	|	ТаблицаУслуги.СчетЗатрат,
	|	ТаблицаУслуги.СчетУчетаНДС
	|ИЗ
	|	ВТТаблицаПоУслугам КАК ТаблицаУслуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка) КАК ВидЦенности,
	|	ТоварыИУслуги.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ТоварыИУслуги.Сумма) КАК Сумма,
	|	СУММА(ТоварыИУслуги.СуммаНДС) КАК НДС,
	|	ТоварыИУслуги.Ссылка КАК Регистратор,
	|	ТоварыИУслуги.Дата КАК Период,
	|	ТоварыИУслуги.Организация КАК Организация,
	|	ТоварыИУслуги.Контрагент КАК Поставщик,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету) КАК Событие,
	|	ТоварыИУслуги.Дата КАК ДатаСобытия,
	|	&ИсправляемыйДокумент КАК СчетФактура,
	|	&ДокументИсправление КАК ИсправленныйСчетФактура,
	|	ТоварыИУслуги.ЭтоУслуга КАК ЭтоУслуга,
	|	ТоварыИУслуги.Номенклатура КАК Номенклатура,
	|	ТоварыИУслуги.СчетУчета КАК СчетУчета,
	|	ТоварыИУслуги.СчетУчетаНДС КАК СчетУчетаНДС
	|ИЗ
	|	ВТТоварыИУслуги КАК ТоварыИУслуги
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыИУслуги.СтавкаНДС,
	|	ТоварыИУслуги.Ссылка,
	|	ТоварыИУслуги.Дата,
	|	ТоварыИУслуги.Организация,
	|	ТоварыИУслуги.ЭтоУслуга,
	|	ТоварыИУслуги.Номенклатура,
	|	ТоварыИУслуги.СчетУчета,
	|	ТоварыИУслуги.СчетУчетаНДС,
	|	ТоварыИУслуги.Контрагент,
	|	ТоварыИУслуги.Дата";*/
			/*ТаблицаДокумента = Запрос.Выполнить().Выгрузить();*/
			return null;
		}

		public object КорректировкаПоступленияПодготовитьТаблицуКорректировочныеДвиженияНДС(/*СтруктураШапкиДокумента, СтруктураТаблицДокумента*/)
		{
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("Ссылка", СтруктураШапкиДокумента.Ссылка);*/
			/*Запрос.УстановитьПараметр("Период", СтруктураШапкиДокумента.Дата);*/
			/*Запрос.УстановитьПараметр("СчетФактураДата", 
		?(СтруктураШапкиДокумента.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки,
		СтруктураШапкиДокумента.ИсправляемыйДокументПоступления.Дата, СтруктураШапкиДокумента.Дата));*/
			/*Запрос.УстановитьПараметр("СчетФактура", 
		?(СтруктураШапкиДокумента.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки, 
		УчетНДС.ПолучитьИсправляемыйДокументПоступления(СтруктураШапкиДокумента.ДокументПоступления), СтруктураШапкиДокумента.Ссылка));*/
			/*Запрос.УстановитьПараметр("ИсправленныйСчетФактура", 
		?(СтруктураШапкиДокумента.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки, СтруктураШапкиДокумента.Ссылка, Документы.ДокументРасчетовСКонтрагентом.ПустаяСсылка()));*/
			/*Запрос.УстановитьПараметр("Курс", СтруктураШапкиДокумента.КурсДокумента);*/
			/*Запрос.УстановитьПараметр("Кратность", СтруктураШапкиДокумента.КратностьДокумента);*/
			/*Запрос.УстановитьПараметр("ТаблицаПоТоварам", СтруктураТаблицДокумента.ТаблицаПоТоварам);*/
			/*Запрос.УстановитьПараметр("ТаблицаПоУслугам", СтруктураТаблицДокумента.ТаблицаПоУслугам);*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ВТТаблицаПоТоварам
	|ИЗ
	|	&ТаблицаПоТоварам КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ВТТаблицаПоУслугам
	|ИЗ
	|	&ТаблицаПоУслугам КАК ТаблицаУслуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&СчетФактура КАК СчетФактура,
	|	&ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	""Восстановление НДС"" КАК Содержание,
	|	ЛОЖЬ КАК ЭтоУслуга,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка) КАК ВидЦенности,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ВосстановлениеНДС) КАК Событие,
	|	КорректировкаПоступленияТовары.Номенклатура,
	|	КорректировкаПоступленияТовары.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА КорректировкаПоступленияТовары.СуммаДоКорректировки - КорректировкаПоступленияТовары.Сумма > 0
	|			ТОГДА КорректировкаПоступленияТовары.СуммаНДСДоКорректировки - КорректировкаПоступленияТовары.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДС,
	|	ВЫБОР
	|		КОГДА КорректировкаПоступленияТовары.СуммаДоКорректировки - КорректировкаПоступленияТовары.Сумма > 0
	|			ТОГДА КорректировкаПоступленияТовары.СуммаДоКорректировки - КорректировкаПоступленияТовары.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	КорректировкаПоступленияТовары.СчетУчета,
	|	КорректировкаПоступленияТовары.СчетУчетаНДС,
	|	КорректировкаПоступленияТовары.Ссылка.Дата КАК Период,
	|	КорректировкаПоступленияТовары.Ссылка.Дата КАК ДатаСобытия,
	|	КорректировкаПоступленияТовары.Ссылка.Организация КАК Организация,
	|	КорректировкаПоступленияТовары.Ссылка.Контрагент КАК Покупатель,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&СчетФактураДата, КВАРТАЛ)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&СчетФактураДата, КВАРТАЛ)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(&СчетФактураДата, КВАРТАЛ)
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ЛОЖЬ КАК СторнирующаяЗаписьДопЛиста,
	|	КорректировкаПоступленияТовары.НомерСтроки,
	|	КорректировкаПоступленияТовары.Ссылка КАК Регистратор
	|ИЗ
	|	ВТТаблицаПоТоварам КАК КорректировкаПоступленияТовары
	|ГДЕ
	|	КорректировкаПоступленияТовары.Ссылка = &Ссылка
	|	И КорректировкаПоступленияТовары.СуммаДоКорректировки - КорректировкаПоступленияТовары.Сумма > 0
	|	И (НЕ КорректировкаПоступленияТовары.СчетУчета.Забалансовый)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&СчетФактура,
	|	&ИсправленныйСчетФактура,
	|	""Восстановление НДС"",
	|	ИСТИНА,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ВосстановлениеНДС),
	|	КорректировкаПоступленияУслуги.Номенклатура,
	|	КорректировкаПоступленияУслуги.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА КорректировкаПоступленияУслуги.СуммаДоКорректировки - КорректировкаПоступленияУслуги.Сумма > 0
	|			ТОГДА КорректировкаПоступленияУслуги.СуммаНДСДоКорректировки - КорректировкаПоступленияУслуги.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КорректировкаПоступленияУслуги.СуммаДоКорректировки - КорректировкаПоступленияУслуги.Сумма > 0
	|			ТОГДА КорректировкаПоступленияУслуги.СуммаДоКорректировки - КорректировкаПоступленияУслуги.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	КорректировкаПоступленияУслуги.СчетЗатрат,
	|	КорректировкаПоступленияУслуги.СчетУчетаНДС,
	|	КорректировкаПоступленияУслуги.Ссылка.Дата,
	|	КорректировкаПоступленияУслуги.Ссылка.Дата,
	|	КорректировкаПоступленияУслуги.Ссылка.Организация,
	|	КорректировкаПоступленияУслуги.Ссылка.Контрагент,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&СчетФактураДата, КВАРТАЛ)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&СчетФактураДата, КВАРТАЛ)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(&СчетФактураДата, КВАРТАЛ)
	|	КОНЕЦ,
	|	ЛОЖЬ,
	|	КорректировкаПоступленияУслуги.НомерСтроки,
	|	КорректировкаПоступленияУслуги.Ссылка
	|ИЗ
	|	ВТТаблицаПоУслугам КАК КорректировкаПоступленияУслуги
	|ГДЕ
	|	КорректировкаПоступленияУслуги.Ссылка = &Ссылка
	|	И КорректировкаПоступленияУслуги.СуммаДоКорректировки - КорректировкаПоступленияУслуги.Сумма > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&СчетФактура КАК СчетФактура,
	|	&ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	""НДС"" КАК Содержание,
	|	ЛОЖЬ КАК ЭтоУслуга,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка) КАК ВидЦенности,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету) КАК Событие,
	|	КорректировкаПоступленияТовары.Ссылка.Дата КАК ДатаСобытия,
	|	ЛОЖЬ КАК ЗаписьДополнительногоЛиста,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК КорректируемыйПериод,
	|	КорректировкаПоступленияТовары.Номенклатура,
	|	КорректировкаПоступленияТовары.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА КорректировкаПоступленияТовары.СуммаДоКорректировки - КорректировкаПоступленияТовары.Сумма < 0
	|			ТОГДА (КорректировкаПоступленияТовары.СуммаНДСДоКорректировки - КорректировкаПоступленияТовары.СуммаНДС) * -1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДС,
	|	ВЫБОР
	|		КОГДА КорректировкаПоступленияТовары.СуммаДоКорректировки - КорректировкаПоступленияТовары.Сумма < 0
	|			ТОГДА (КорректировкаПоступленияТовары.СуммаДоКорректировки - КорректировкаПоступленияТовары.Сумма) * -1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	КорректировкаПоступленияТовары.СчетУчета,
	|	КорректировкаПоступленияТовары.СчетУчетаНДС,
	|	КорректировкаПоступленияТовары.Ссылка.Дата КАК Период,
	|	КорректировкаПоступленияТовары.Ссылка.Организация КАК Организация,
	|	КорректировкаПоступленияТовары.Ссылка.Контрагент КАК Поставщик,
	|	КорректировкаПоступленияТовары.НомерСтроки,
	|	КорректировкаПоступленияТовары.Ссылка КАК Регистратор
	|ИЗ
	|	ВТТаблицаПоТоварам КАК КорректировкаПоступленияТовары
	|ГДЕ
	|	КорректировкаПоступленияТовары.Ссылка = &Ссылка
	|	И КорректировкаПоступленияТовары.СуммаДоКорректировки - КорректировкаПоступленияТовары.Сумма < 0
	|	И (НЕ КорректировкаПоступленияТовары.СчетУчета.Забалансовый)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&СчетФактура,
	|	&ИсправленныйСчетФактура,
	|	""НДС"",
	|	ИСТИНА,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету),
	|	КорректировкаПоступленияУслуги.Ссылка.Дата,
	|	ЛОЖЬ,
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	КорректировкаПоступленияУслуги.Номенклатура,
	|	КорректировкаПоступленияУслуги.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА КорректировкаПоступленияУслуги.СуммаДоКорректировки - КорректировкаПоступленияУслуги.Сумма < 0
	|			ТОГДА (КорректировкаПоступленияУслуги.СуммаНДСДоКорректировки - КорректировкаПоступленияУслуги.СуммаНДС) * -1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КорректировкаПоступленияУслуги.СуммаДоКорректировки - КорректировкаПоступленияУслуги.Сумма < 0
	|			ТОГДА (КорректировкаПоступленияУслуги.СуммаДоКорректировки - КорректировкаПоступленияУслуги.Сумма) * -1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	КорректировкаПоступленияУслуги.СчетЗатрат,
	|	КорректировкаПоступленияУслуги.СчетУчетаНДС,
	|	КорректировкаПоступленияУслуги.Ссылка.Дата,
	|	КорректировкаПоступленияУслуги.Ссылка.Организация,
	|	КорректировкаПоступленияУслуги.Ссылка.Контрагент,
	|	КорректировкаПоступленияУслуги.НомерСтроки,
	|	КорректировкаПоступленияУслуги.Ссылка
	|ИЗ
	|	ВТТаблицаПоУслугам КАК КорректировкаПоступленияУслуги
	|ГДЕ
	|	КорректировкаПоступленияУслуги.Ссылка = &Ссылка
	|	И КорректировкаПоступленияУслуги.СуммаДоКорректировки - КорректировкаПоступленияУслуги.Сумма < 0";*/
			/*Результат = Запрос.ВыполнитьПакет();*/
			/*ТаблицаВосстановление = Результат[2].Выгрузить();*/
			/*ТаблицаВычет = Результат[3].Выгрузить();*/
			return null;
		}

		public object КорректировкаПоступленияПодготовитьТаблицуКорректировкаНДСПоПартиямЗапасов(/*СтруктураШапкиДокумента, СтруктураТаблицДокумента*/)
		{
			if(true/*НЕ СтруктураШапкиДокумента.СложныйУчетНДС*/)
			{
			}
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("Ссылка", СтруктураШапкиДокумента.Ссылка);*/
			/*Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("МоментДокумента", Новый Граница(СтруктураШапкиДокумента.Ссылка.МоментВремени(), ВидГраницы.Исключая));*/
			/*Запрос.УстановитьПараметр("СчетФактура", УчетНДС.ПолучитьИсправляемыйДокументПоступления(СтруктураШапкиДокумента.ДокументПоступления, Истина));*/
			/*Запрос.УстановитьПараметр("Курс", СтруктураШапкиДокумента.КурсДокумента);*/
			/*Запрос.УстановитьПараметр("Кратность", СтруктураШапкиДокумента.КратностьДокумента);*/
			/*Запрос.УстановитьПараметр("ТаблицаПоТоварам", СтруктураТаблицДокумента.ТаблицаПоТоварам);*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ВТТаблицаПоТоварам
	|ИЗ
	|	&ТаблицаПоТоварам КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&СчетФактура КАК СчетФактура,
	|	&СчетФактура КАК Партия,
	|	КорректировкаПоступленияТовары.Склад КАК Склад,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка) КАК ВидЦенности,
	|	КорректировкаПоступленияТовары.Номенклатура КАК Номенклатура,
	|	КорректировкаПоступленияТовары.СерияНоменклатуры КАК СерияНоменклатуры,
	|	КорректировкаПоступленияТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	КорректировкаПоступленияТовары.СтавкаНДС,
	|	КорректировкаПоступленияТовары.Количество - КорректировкаПоступленияТовары.КоличествоДоИзменения КАК Количество,
	|	ВЫБОР
	|		КОГДА (НЕ КорректировкаПоступленияТовары.Ссылка.СуммаВключаетНДС)
	|			ТОГДА КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС - (КорректировкаПоступленияТовары.СуммаДоИзменения + КорректировкаПоступленияТовары.СуммаНДСДоИзменения)
	|		ИНАЧЕ КорректировкаПоступленияТовары.Сумма - КорректировкаПоступленияТовары.СуммаДоИзменения
	|	КОНЕЦ КАК Стоимость,
	|	КорректировкаПоступленияТовары.СчетУчета,
	|	КорректировкаПоступленияТовары.СчетУчетаНДС,
	|	КорректировкаПоступленияТовары.Ссылка.Дата КАК Период,
	|	КорректировкаПоступленияТовары.Ссылка.Организация КАК Организация,
	|	КорректировкаПоступленияТовары.НомерСтроки,
	|	КорректировкаПоступленияТовары.Ссылка КАК Регистратор,
	|	ЛОЖЬ КАК НоваяСтрока,
	|	ВЫБОР
	|		КОГДА КорректировкаПоступленияТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|				ИЛИ КорректировкаПоступленияТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|			ТОГДА 20 / 120
	|		КОГДА КорректировкаПоступленияТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|				ИЛИ КорректировкаПоступленияТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|			ТОГДА 18 / 118
	|		КОГДА КорректировкаПоступленияТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|				ИЛИ КорректировкаПоступленияТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|			ТОГДА 10 / 110
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтавкаНДСМножитель
	|ИЗ
	|	ВТТаблицаПоТоварам КАК КорректировкаПоступленияТовары
	|ГДЕ
	|	КорректировкаПоступленияТовары.Ссылка = &Ссылка
	|	И (КорректировкаПоступленияТовары.КоличествоДоИзменения - КорректировкаПоступленияТовары.Количество <> 0
	|			ИЛИ КорректировкаПоступленияТовары.СуммаНДСДоИзменения - КорректировкаПоступленияТовары.СуммаНДС <> 0
	|			ИЛИ КорректировкаПоступленияТовары.СуммаДоИзменения - КорректировкаПоступленияТовары.Сумма <> 0)
	|	И КорректировкаПоступленияТовары.КоличествоДоИзменения <> 0
	|	И (НЕ КорректировкаПоступленияТовары.СчетУчета.Забалансовый)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&СчетФактура,
	|	&СчетФактура,
	|	КорректировкаПоступленияТовары.Склад,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка),
	|	КорректировкаПоступленияТовары.Номенклатура,
	|	КорректировкаПоступленияТовары.СерияНоменклатуры,
	|	КорректировкаПоступленияТовары.ХарактеристикаНоменклатуры,
	|	КорректировкаПоступленияТовары.СтавкаНДС,
	|	КорректировкаПоступленияТовары.Количество,
	|	ВЫБОР
	|		КОГДА (НЕ КорректировкаПоступленияТовары.Ссылка.СуммаВключаетНДС)
	|			ТОГДА КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС
	|		ИНАЧЕ КорректировкаПоступленияТовары.Сумма
	|	КОНЕЦ,
	|	КорректировкаПоступленияТовары.СчетУчета,
	|	КорректировкаПоступленияТовары.СчетУчетаНДС,
	|	КорректировкаПоступленияТовары.Ссылка.Дата,
	|	КорректировкаПоступленияТовары.Ссылка.Организация,
	|	КорректировкаПоступленияТовары.НомерСтроки,
	|	КорректировкаПоступленияТовары.Ссылка,
	|	ИСТИНА,
	|	ВЫБОР
	|		КОГДА КорректировкаПоступленияТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|				ИЛИ КорректировкаПоступленияТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|			ТОГДА 20 / 120
	|		КОГДА КорректировкаПоступленияТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|				ИЛИ КорректировкаПоступленияТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|			ТОГДА 18 / 118
	|		КОГДА КорректировкаПоступленияТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|				ИЛИ КорректировкаПоступленияТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|			ТОГДА 10 / 110
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ИЗ
	|	ВТТаблицаПоТоварам КАК КорректировкаПоступленияТовары
	|ГДЕ
	|	КорректировкаПоступленияТовары.Ссылка = &Ссылка
	|	И (КорректировкаПоступленияТовары.КоличествоДоИзменения - КорректировкаПоступленияТовары.Количество <> 0
	|			ИЛИ КорректировкаПоступленияТовары.СуммаНДСДоИзменения - КорректировкаПоступленияТовары.СуммаНДС <> 0
	|			ИЛИ КорректировкаПоступленияТовары.СуммаДоИзменения - КорректировкаПоступленияТовары.Сумма <> 0)
	|	И КорректировкаПоступленияТовары.КоличествоДоИзменения = 0
	|	И (НЕ КорректировкаПоступленияТовары.СчетУчета.Забалансовый)";*/
			/*ТаблицаКорректировки = Запрос.Выполнить().Выгрузить();*/
			/*Запрос.УстановитьПараметр("ТаблицаДокумента", ТаблицаКорректировки);*/
			/*Запрос.Текст = 	
	"ВЫБРАТЬ
	|	ТаблицаДокумента.СчетФактура,
	|	ТаблицаДокумента.Партия,
	|	ТаблицаДокумента.Склад,
	|	ТаблицаДокумента.ВидЦенности,
	|	ТаблицаДокумента.Номенклатура,
	|	ТаблицаДокумента.СерияНоменклатуры,
	|	ТаблицаДокумента.ХарактеристикаНоменклатуры,
	|	ТаблицаДокумента.СтавкаНДС,
	|	ТаблицаДокумента.Количество,
	|	ТаблицаДокумента.Стоимость,
	|	ТаблицаДокумента.СчетУчета,
	|	ТаблицаДокумента.СчетУчетаНДС,
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Регистратор,
	|	ТаблицаДокумента.НоваяСтрока,
	|	ТаблицаДокумента.СтавкаНДСМножитель
	|ПОМЕСТИТЬ ВТТаблицаДокумента
	|ИЗ
	|	&ТаблицаДокумента КАК ТаблицаДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТаблицаДокумента.СчетФактура,
	|	ВТТаблицаДокумента.Партия,
	|	ВТТаблицаДокумента.Склад,
	|	ВТТаблицаДокумента.ВидЦенности,
	|	ВТТаблицаДокумента.Номенклатура,
	|	ВТТаблицаДокумента.СерияНоменклатуры,
	|	ВТТаблицаДокумента.ХарактеристикаНоменклатуры,
	|	ВТТаблицаДокумента.СтавкаНДС,
	|	ВТТаблицаДокумента.Количество,
	|	ВТТаблицаДокумента.Стоимость * (&Курс / &Кратность) * ВТТаблицаДокумента.СтавкаНДСМножитель КАК НДС,
	|	ВТТаблицаДокумента.Стоимость * (&Курс / &Кратность) КАК Стоимость,
	|	ВТТаблицаДокумента.СчетУчета,
	|	ВТТаблицаДокумента.СчетУчетаНДС,
	|	ВТТаблицаДокумента.Период,
	|	ВТТаблицаДокумента.Организация,
	|	ВТТаблицаДокумента.НомерСтроки,
	|	ВТТаблицаДокумента.Регистратор,
	|	ВТТаблицаДокумента.НоваяСтрока,
	|	НДСПоПриобретеннымЦенностямОстатки.КоличествоОстаток,
	|	НДСПоПриобретеннымЦенностямОстатки.НДСОстаток
	|ИЗ
	|	ВТТаблицаДокумента КАК ВТТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСПартииТоваров.Остатки(
	|				&МоментДокумента,
	|				Организация = &Организация
	|					И СчетФактура = &СчетФактура) КАК НДСПоПриобретеннымЦенностямОстатки
	|		ПО ВТТаблицаДокумента.Номенклатура = НДСПоПриобретеннымЦенностямОстатки.Номенклатура
	|			И ВТТаблицаДокумента.СерияНоменклатуры = НДСПоПриобретеннымЦенностямОстатки.СерияНоменклатуры
	|			И ВТТаблицаДокумента.ХарактеристикаНоменклатуры = НДСПоПриобретеннымЦенностямОстатки.ХарактеристикаНоменклатуры
	|			И ВТТаблицаДокумента.ВидЦенности = НДСПоПриобретеннымЦенностямОстатки.ВидЦенности
	|			И ВТТаблицаДокумента.Склад = НДСПоПриобретеннымЦенностямОстатки.Склад
	|			И ВТТаблицаДокумента.СчетУчетаНДС = НДСПоПриобретеннымЦенностямОстатки.СчетУчетаНДС
	|ГДЕ
	|	(НДСПоПриобретеннымЦенностямОстатки.КоличествоОстаток > 0
	|			ИЛИ НДСПоПриобретеннымЦенностямОстатки.НДСОстаток > 0
	|			ИЛИ ВТТаблицаДокумента.НоваяСтрока)";*/
			return null;
		}

		public object КорректировкаПоступленияПроверитьНаличиеКосвенныхРасходов(/*СтруктураШапкиДокумента*/)
		{
			/*Запрос = Новый Запрос();*/
			/*Запрос.УстановитьПараметр("ИсправляемыйСчетФактура", УчетНДС.ПолучитьИсправляемыйДокументПоступления(СтруктураШапкиДокумента.ДокументПоступления, Истина));*/
			/*Запрос.УстановитьПараметр("МоментДокумента", Новый Граница(СтруктураШапкиДокумента.Ссылка.МоментВремени(), ВидГраницы.Исключая));*/
			/*Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НДСКосвенныеРасходыОбороты.СчетФактура
	|ИЗ
	|	РегистрНакопления.НДСКосвенныеРасходы.Обороты(
	|			,
	|			&МоментДокумента,
	|			Регистратор,
	|			Организация = &Организация
	|				И СчетФактура = &ИсправляемыйСчетФактура) КАК НДСКосвенныеРасходыОбороты";*/
			/*Результат = Запрос.Выполнить();*/
			return null;
		}

		public void КорректировкаПоступленияСформироватьКорректировочныеДвиженияНДС(/*СтруктураШапкиДокумента, СтруктураТаблицДокумента, ЕстьКосвенныеРасходы, Движения*/)
		{
			/*СтруктураТаблиц = КорректировкаПоступленияПодготовитьТаблицуКорректировочныеДвиженияНДС(СтруктураШапкиДокумента, СтруктураТаблицДокумента);*/
			/*БухгалтерскийУчетРасчетовСКонтрагентами.ПодготовкаТаблицыЗначенийДляЦелейПриобретенияИРеализации(СтруктураТаблиц.ТаблицаВычет, СтруктураШапкиДокумента, Истина);*/
			/*БухгалтерскийУчетРасчетовСКонтрагентами.ПодготовкаТаблицыЗначенийДляЦелейПриобретенияИРеализации(СтруктураТаблиц.ТаблицаВосстановление, СтруктураШапкиДокумента, Истина);*/
			if(true/*СтруктураШапкиДокумента.ВосстановитьНДС*/)
			{
				/*КорректировкаПоступленияСформироватьДвиженияЗаписьКнигиПродаж(СтруктураШапкиДокумента, СтруктураТаблиц.ТаблицаВосстановление, , Движения);*/
			}
			if(true/*ЕстьКосвенныеРасходы*/)
			{
				/*// НДС принят к вычету в пропорции определенной согласно п.4 ст.170 НК РФ
*/
				/*ТаблицаВычетНДС = КорректировкаПоступленияПодготовитьТаблицуВычетНДССУчетомПропорции(СтруктураШапкиДокумента, СтруктураТаблиц.ТаблицаВычет);*/
			}
			/*КорректировкаПоступленияСформироватьДвиженияНДСПредъявленный(СтруктураШапкиДокумента, ТаблицаВычетНДС, , Движения);*/
		}

		public void КорректировкаПоступленияСформироватьИсправительныеДвижения(/*СтруктураШапкиДокумента, СтруктураТаблицДокумента, ЕстьКосвенныеРасходы, СтруктураТаблицСторноНДС, Движения*/)
		{
			/*ИсправляемыйДокумент = УчетНДС.ПолучитьИсправляемыйДокументПоступления(СтруктураШапкиДокумента.ДокументПоступления);*/
			if(true/*ТипЗнч(ИсправляемыйДокумент) = Тип("ДокументСсылка.КорректировкаПоступления")*/)
			{
				/*// Сторно движений исправляемого документа
*/
				/*КорректировкаПоступленияСформироватьДвиженияЗаписьКнигиПродаж(СтруктураШапкиДокумента, СтруктураТаблицСторноНДС.КнигаПродаж, Истина, Движения);*/
				/*// Новые движения по исправленному корректировочному счету-фактуре
*/
				/*КорректировкаПоступленияСформироватьКорректировочныеДвиженияНДС(СтруктураШапкиДокумента, СтруктураТаблицДокумента, ЕстьКосвенныеРасходы, Движения);*/
			}
		}

		public void КорректировкаПоступленияДвиженияПоРегистрамНДС(/*СтруктураШапкиДокумента, СтруктураТаблицСторноНДС, СтруктураТаблицДокумента, ЕстьКосвенныеРасходы, Движения*/)
		{
			if(true/*СтруктураШапкиДокумента.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки*/)
			{
				/*// Исправительный счет-фактура	
*/
				/*// Сторно движений исправляемого документа
*/
				/*КорректировкаПоступленияСформироватьДвиженияЗаписьКнигиПокупок(СтруктураШапкиДокумента, СтруктураТаблицСторноНДС.КнигаПокупок, Движения);*/
				/*КорректировкаПоступленияСформироватьДвиженияНДСПредъявленный(СтруктураШапкиДокумента, СтруктураТаблицСторноНДС.НДСПредъявленный, Истина, Движения);*/
				/*КорректировкаПоступленияСформироватьИсправительныеДвижения(СтруктураШапкиДокумента, СтруктураТаблицДокумента, ЕстьКосвенныеРасходы, СтруктураТаблицСторноНДС, Движения);*/
			}
			/*ТаблицаКорректировкаНДСПоПартиямЗапасов = КорректировкаПоступленияПодготовитьТаблицуКорректировкаНДСПоПартиямЗапасов(СтруктураШапкиДокумента, СтруктураТаблицДокумента);*/
			/*КорректировкаПоступленияСформироватьДвиженияКорректировкаНДСПоПартиямЗапасов(СтруктураШапкиДокумента, ТаблицаКорректировкаНДСПоПартиямЗапасов, Движения);*/
		}

		public void КорректировкаПоступленияСформироватьПроводкиСторноВосстановленияНДС(/*СтруктураШапкиДокумента, Движения*/)
		{
			/*ДобавитьНаборРегистраБухгалтерииВСтруктуруДвижений(Движения,"Хозрасчетный", СтруктураШапкиДокумента.Ссылка);*/
			/*НаборЗаписейХозрасчетный = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();*/
			/*НаборЗаписейХозрасчетный.Отбор.Регистратор.Значение = СтруктураШапкиДокумента.ДокументПоступления;*/
			/*НаборЗаписейХозрасчетный.Прочитать();*/
		}

		public void КорректировкаПоступленияСформироватьДвиженияЗаписьКнигиПокупок(/*СтруктураШапкиДокумента, ТаблицаДвижений, Движения*/)
		{
			if(true/*ТаблицаДвижений.Количество() = 0*/)
			{
			}
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения,"НДСЗаписиКнигиПокупок", СтруктураШапкиДокумента.Ссылка);*/
			/*ДобавитьНаборРегистраБухгалтерииВСтруктуруДвижений(Движения,"Хозрасчетный", СтруктураШапкиДокумента.Ссылка);*/
		}

		public void КорректировкаПоступленияСформироватьДвиженияЗаписьКнигиПродаж(/*СтруктураШапкиДокумента, ТаблицаДвижений, Сторно = Ложь, Движения*/)
		{
			if(true/*ТаблицаДвижений.Количество() = 0*/)
			{
			}
			/*ДобавитьНаборРегистраБухгалтерииВСтруктуруДвижений(Движения,"Хозрасчетный", СтруктураШапкиДокумента.Ссылка);*/
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения,"НДСЗаписиКнигиПродаж", СтруктураШапкиДокумента.Ссылка);*/
		}

		public void КорректировкаПоступленияСформироватьДвиженияНДСПредъявленный(/*СтруктураШапкиДокумента, ТаблицаПредъявленногоНДС, Сторно = Ложь, Движения*/)
		{
			if(true/*ТаблицаПредъявленногоНДС.Количество() = 0*/)
			{
			}
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения,"НДСПредъявленный", СтруктураШапкиДокумента.Ссылка);*/
		}

		public void КорректировкаПоступленияСформироватьДвиженияКорректировкаНДСПоПартиямЗапасов(/*СтруктураШапкиДокумента, ТаблицаДвижений, Движения*/)
		{
			if(true/*ТаблицаДвижений = Неопределено
		ИЛИ ТаблицаДвижений.Количество() = 0*/)
			{
			}
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения,"НДСПартииТоваров", СтруктураШапкиДокумента.Ссылка);*/
		}

		public object КорректировкаПоступленияПолучитьТаблицыДокумента(/*СтруктураШапкиДокумента*/)
		{
			/*Запрос = Новый Запрос();*/
			/*Запрос.УстановитьПараметр("Ссылка", СтруктураШапкиДокумента.Ссылка);*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	КорректировкаПоступленияТовары.НомерСтроки,
	|	КорректировкаПоступленияТовары.Номенклатура,
	|	КорректировкаПоступленияТовары.Количество,
	|	КорректировкаПоступленияТовары.Цена,
	|	КорректировкаПоступленияТовары.Сумма,
	|	КорректировкаПоступленияТовары.СтавкаНДС,
	|	КорректировкаПоступленияТовары.СуммаНДС,
	|	КорректировкаПоступленияТовары.СерияНоменклатуры,
	|	КорректировкаПоступленияТовары.ХарактеристикаНоменклатуры,
	|	КорректировкаПоступленияТовары.СчетУчетаБУ,
	|	КорректировкаПоступленияТовары.СчетУчетаНДС,
	|	КорректировкаПоступленияТовары.Склад,
	|	КорректировкаПоступленияТовары.КоличествоДоИзменения,
	|	КорректировкаПоступленияТовары.ЦенаДоИзменения,
	|	КорректировкаПоступленияТовары.СтавкаНДСДоИзменения,
	|	КорректировкаПоступленияТовары.СуммаДоИзменения,
	|	КорректировкаПоступленияТовары.СуммаНДСДоИзменения,
	|	КорректировкаПоступленияТовары.КоличествоДоКорректировки,
	|	КорректировкаПоступленияТовары.ЦенаДоКорректировки,
	|	КорректировкаПоступленияТовары.СуммаДоКорректировки,
	|	КорректировкаПоступленияТовары.СуммаНДСДоКорректировки,
	|	КорректировкаПоступленияТовары.Ссылка,
	|	КорректировкаПоступленияТовары.СчетУчетаНУ,
	|	КорректировкаПоступленияТовары.Ссылка.Дата,
	|	КорректировкаПоступленияТовары.Ссылка.Организация,
	|	КорректировкаПоступленияТовары.Ссылка.Контрагент
	|ИЗ
	|	Документ.КорректировкаПоступления.Товары КАК КорректировкаПоступленияТовары
	|ГДЕ
	|	КорректировкаПоступленияТовары.Ссылка = &Ссылка";*/
			/*ТаблицаПоТоварам = Запрос.Выполнить().Выгрузить();*/
			/*Запрос.УстановитьПараметр("Ссылка", СтруктураШапкиДокумента.Ссылка);*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	КорректировкаПоступленияУслуги.НомерСтроки,
	|	КорректировкаПоступленияУслуги.Номенклатура,
	|	КорректировкаПоступленияУслуги.Количество,
	|	КорректировкаПоступленияУслуги.Цена,
	|	КорректировкаПоступленияУслуги.Сумма,
	|	КорректировкаПоступленияУслуги.СтавкаНДС,
	|	КорректировкаПоступленияУслуги.СуммаНДС,
	|	КорректировкаПоступленияУслуги.СчетУчетаНДС,
	|	КорректировкаПоступленияУслуги.КоличествоДоИзменения,
	|	КорректировкаПоступленияУслуги.ЦенаДоИзменения,
	|	КорректировкаПоступленияУслуги.СтавкаНДСДоИзменения,
	|	КорректировкаПоступленияУслуги.СуммаНДСДоИзменения,
	|	КорректировкаПоступленияУслуги.СуммаДоИзменения,
	|	КорректировкаПоступленияУслуги.КоличествоДоКорректировки,
	|	КорректировкаПоступленияУслуги.ЦенаДоКорректировки,
	|	КорректировкаПоступленияУслуги.СуммаДоКорректировки,
	|	КорректировкаПоступленияУслуги.СуммаНДСДоКорректировки,
	|	КорректировкаПоступленияУслуги.Ссылка,
	|	КорректировкаПоступленияУслуги.СтатьяЗатрат,
	|	КорректировкаПоступленияУслуги.Субконто1,
	|	КорректировкаПоступленияУслуги.Субконто2,
	|	КорректировкаПоступленияУслуги.Субконто3,
	|	КорректировкаПоступленияУслуги.НоменклатурнаяГруппа,
	|	КорректировкаПоступленияУслуги.Подразделение,
	|	КорректировкаПоступленияУслуги.ПодразделениеОрганизации,
	|	КорректировкаПоступленияУслуги.СчетЗатратНУ,
	|	КорректировкаПоступленияУслуги.СубконтоНУ1,
	|	КорректировкаПоступленияУслуги.СубконтоНУ2,
	|	КорректировкаПоступленияУслуги.СубконтоНУ3,
	|	КорректировкаПоступленияУслуги.СчетЗатрат,
	|	КорректировкаПоступленияУслуги.Ссылка.Дата,
	|	КорректировкаПоступленияУслуги.Ссылка.Организация,
	|	КорректировкаПоступленияУслуги.Ссылка.Контрагент
	|ИЗ
	|	Документ.КорректировкаПоступления.Услуги КАК КорректировкаПоступленияУслуги
	|ГДЕ
	|	КорректировкаПоступленияУслуги.Ссылка = &Ссылка";*/
			/*ТаблицаПоУслугам = Запрос.Выполнить().Выгрузить();*/
			/*СчетаУчетаВДокументах.ЗаполнитьПриПроведенииСчетаУчетаТабличнойЧасти("Товары", ТаблицаПоТоварам, СтруктураШапкиДокумента);*/
			/*СчетаУчетаВДокументах.ЗаполнитьПриПроведенииСчетаУчетаТабличнойЧасти("Услуги", ТаблицаПоУслугам, СтруктураШапкиДокумента);*/
			/*ТаблицаПоТоварам.Колонки.СчетУчетаБУ.Имя = "СчетУчета";*/
			return null;
		}

		public void ПровестиКорректировкуПоступленияПоРегистрамНДС(/*СтруктураШапкиДокумента, ДокументСсылка*/)
		{
			/*УчетНДС.ДополнитьСтруктуруШапкиДокументаДляНДС(СтруктураШапкиДокумента, Истина);*/
			/*Движения = Новый Структура();*/
			/*СтруктураТаблицСторноНДС = КорректировкаПоступленияПодготовитьСтруктуруТаблицСторнирующихНДСЗаписей(СтруктураШапкиДокумента);*/
			/*СтруктураТаблицДокумента = КорректировкаПоступленияПолучитьТаблицыДокумента(СтруктураШапкиДокумента);*/
			/*ЕстьКосвенныеРасходы = КорректировкаПоступленияПроверитьНаличиеКосвенныхРасходов(СтруктураШапкиДокумента);*/
			if(true/*НЕ СтруктураШапкиДокумента.ОрганизацияПрименяетУСН 
		И СтруктураШапкиДокумента.УчитыватьНДС*/)
			{
				/*КорректировкаПоступленияДвиженияПоРегистрамНДС(СтруктураШапкиДокумента, СтруктураТаблицСторноНДС, СтруктураТаблицДокумента, ЕстьКосвенныеРасходы, Движения);*/
			}
		}
		////////////////////////////////////////////////////////////////////////////////////////////////////
		// Корректировка реализации

		public object КорректировкаРеализацииПодготовитьСтруктуруТаблицСторнирующихНДСЗаписей(/*СтруктураШапкиДокумента*/)
		{
			/*Запрос = Новый Запрос();*/
			/*ИсходныйСчетФактура = УчетНДС.ПолучитьИсправляемыйДокументРеализации(СтруктураШапкиДокумента.ДокументРеализации, Истина);*/
			/*Запрос.УстановитьПараметр("ИсходныйСчетФактураДата", ИсходныйСчетФактура.Дата);*/
			/*Запрос.УстановитьПараметр("ИсправляемыйСчетФактура", УчетНДС.ПолучитьИсправляемыйДокументРеализации(СтруктураШапкиДокумента.ДокументРеализации));*/
			/*Запрос.УстановитьПараметр("Период", СтруктураШапкиДокумента.Дата);*/
			/*Запрос.УстановитьПараметр("МоментДокумента", Новый Граница(СтруктураШапкиДокумента.Ссылка.МоментВремени(), ВидГраницы.Исключая));*/
			/*Запрос.УстановитьПараметр("Ссылка", СтруктураШапкиДокумента.Ссылка);*/
			/*Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	""Сторнирование реализации"" КАК Содержание,
	|	ЗаписиКнигиПродаж.Организация,
	|	ЗаписиКнигиПродаж.Покупатель,
	|	ЗаписиКнигиПродаж.СчетФактура,
	|	ЗаписиКнигиПродаж.ВидЦенности,
	|	ЗаписиКнигиПродаж.СтавкаНДС,
	|	ЗаписиКнигиПродаж.ДатаОплаты,
	|	ЗаписиКнигиПродаж.ДокументОплаты,
	|	ЗаписиКнигиПродаж.Событие,
	|	&Период КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&ИсходныйСчетФактураДата, КВАРТАЛ)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&ИсходныйСчетФактураДата, КВАРТАЛ)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СторнирующаяЗаписьДопЛиста,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&ИсходныйСчетФактураДата, КВАРТАЛ)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(&ИсходныйСчетФактураДата, КВАРТАЛ)
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ЗаписиКнигиПродаж.ДоговорКонтрагента,
	|	ЗаписиКнигиПродаж.ИсправленныйСчетФактура,
	|	ЗаписиКнигиПродаж.СуммаБезНДСОборот * -1 КАК СуммаБезНДС,
	|	ЗаписиКнигиПродаж.НДСОборот * -1 КАК НДС
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			,
	|			&МоментДокумента,
	|			,
	|			Организация = &Организация
	|				И СчетФактура = &ИсправляемыйСчетФактура) КАК ЗаписиКнигиПродаж";*/
			/*СтруктураТаблиц = Новый Структура();*/
			/*СтруктураТаблиц.Вставить("КнигаПродаж", Запрос.Выполнить().Выгрузить());*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	""Сторнирование реализации"" КАК Содержание,
	|	ЗаписиКнигиПокупок.Организация,
	|	ЗаписиКнигиПокупок.Поставщик,
	|	ЗаписиКнигиПокупок.СчетФактура,
	|	ЗаписиКнигиПокупок.ВидЦенности,
	|	ЗаписиКнигиПокупок.СтавкаНДС,
	|	ЗаписиКнигиПокупок.ДатаОплаты,
	|	ЗаписиКнигиПокупок.ДокументОплаты,
	|	ЗаписиКнигиПокупок.Событие,
	|	&Период КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(ЗаписиКнигиПокупок.СчетФактура.Дата, КВАРТАЛ)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(ЗаписиКнигиПокупок.СчетФактура.Дата, КВАРТАЛ)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ЗаписиКнигиПокупок.СчетФактура.Дата, КВАРТАЛ)
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ЗаписиКнигиПокупок.ДоговорКонтрагента,
	|	ЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	|	ЗаписиКнигиПокупок.СуммаБезНДСОборот * -1 КАК СуммаБезНДС,
	|	ЗаписиКнигиПокупок.НДСОборот * -1 КАК НДС
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			,
	|			&МоментДокумента,
	|			,
	|			Организация = &Организация
	|				И СчетФактура = &ИсправляемыйСчетФактура) КАК ЗаписиКнигиПокупок";*/
			/*СтруктураТаблиц.Вставить("КнигаПокупок", Запрос.Выполнить().Выгрузить());*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	НДСПредъявленныйОстатки.Организация,
	|	НДСПредъявленныйОстатки.СчетФактура,
	|	НДСПредъявленныйОстатки.ВидЦенности,
	|	НДСПредъявленныйОстатки.СтавкаНДС,
	|	НДСПредъявленныйОстатки.СчетУчетаНДС,
	|	НДСПредъявленныйОстатки.Поставщик,
	|	НДСПредъявленныйОстатки.ДоговорКонтрагента,
	|	НДСПредъявленныйОстатки.ИсправленныйСчетФактура,
	|	НДСПредъявленныйОстатки.СуммаБезНДСОстаток КАК СуммаБезНДС,
	|	НДСПредъявленныйОстатки.НДСОстаток КАК НДС,
	|	NULL КАК Событие,
	|	NULL КАК ДатаСобытия
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный.Остатки(
	|			&МоментДокумента,
	|			Организация = &Организация
	|				И СчетФактура = &ИсправляемыйСчетФактура) КАК НДСПредъявленныйОстатки";*/
			/*СтруктураТаблиц.Вставить("НДСПредъявленный", Запрос.Выполнить().Выгрузить());*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	НДСНачисленныйОстатки.Организация,
	|	НДСНачисленныйОстатки.СчетФактура,
	|	НДСНачисленныйОстатки.ВидЦенности,
	|	НДСНачисленныйОстатки.СтавкаНДС,
	|	НДСНачисленныйОстатки.Покупатель,
	|	НДСНачисленныйОстатки.ДоговорКонтрагента,
	|	НДСНачисленныйОстатки.ВидНачисления,
	|	НДСНачисленныйОстатки.ИсправленныйСчетФактура,
	|	НДСНачисленныйОстатки.СуммаБезНДСОстаток КАК СуммаБезНДС,
	|	НДСНачисленныйОстатки.НДСОстаток КАК НДС,
	|	NULL КАК Событие,
	|	NULL КАК ДатаСобытия
	|ИЗ
	|	РегистрНакопления.НДСНачисленный.Остатки(
	|			&МоментДокумента,
	|			Организация = &Организация
	|				И СчетФактура = &ИсправляемыйСчетФактура) КАК НДСНачисленныйОстатки";*/
			/*СтруктураТаблиц.Вставить("НДСНачисленный", Запрос.Выполнить().Выгрузить());*/
			return null;
		}

		public object КорректировкаРеализацииПодготовитьТаблицуНачисленияНДСПоДаннымДокумента(/*СтруктураШапкиДокумента, СтруктураТаблицДокумента*/)
		{
			/*Запрос = Новый Запрос();*/
			/*ИсправляемыйДокумент = УчетНДС.ПолучитьИсправляемыйДокументРеализации(СтруктураШапкиДокумента.ДокументРеализации);*/
			/*ДатаСчетаФактуры = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ИсправляемыйДокумент, "Дата");*/
			/*Запрос.УстановитьПараметр("Курс", СтруктураШапкиДокумента.КурсДокумента);*/
			/*Запрос.УстановитьПараметр("Кратность", СтруктураШапкиДокумента.КратностьДокумента);*/
			/*Запрос.УстановитьПараметр("ИсправляемыйДокумент", ИсправляемыйДокумент);*/
			/*Запрос.УстановитьПараметр("ИсходныйДокумент", УчетНДС.ПолучитьИсправляемыйДокументРеализации(СтруктураШапкиДокумента.ДокументРеализации, Истина));*/
			/*Запрос.УстановитьПараметр("Ссылка", СтруктураШапкиДокумента.Ссылка);*/
			/*Запрос.УстановитьПараметр("Период", СтруктураШапкиДокумента.Дата);*/
			/*Запрос.УстановитьПараметр("ДатаСчетаФактуры", ДатаСчетаФактуры);*/
			/*Запрос.УстановитьПараметр("Принятые", Перечисления.ПринадлежностьНоменклатуры.Принятый);*/
			/*Запрос.УстановитьПараметр("Событие", ?(ТипЗнч(ИсправляемыйДокумент) = Тип("ДокументСсылка.ВозвратТоваровПоставщику"), 
			Перечисления.СобытияПоНДСПродажи.НДСНачисленКУплате, Перечисления.СобытияПоНДСПродажи.Реализация));*/
			/*Запрос.УстановитьПараметр("ТаблицаПоТоварам", СтруктураТаблицДокумента.ТаблицаПоТоварам);*/
			/*Запрос.УстановитьПараметр("ТаблицаПоУслугам", СтруктураТаблицДокумента.ТаблицаПоУслугам);*/
			/*Запрос.Текст =
	"ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ВТТаблицаПоТоварам
	|ИЗ
	|	&ТаблицаПоТоварам КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ВТТаблицаПоУслугам
	|ИЗ
	|	&ТаблицаПоУслугам КАК ТаблицаУслуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.СтавкаНДС,
	|	ТаблицаТовары.Сумма,
	|	ТаблицаТовары.СуммаНДС,
	|	ТаблицаТовары.Ссылка,
	|	ЛОЖЬ КАК ЭтоУслуга,
	|	ТаблицаТовары.Номенклатура,
	|	НЕОПРЕДЕЛЕНО КАК ВидЦенности,
	|	ТаблицаТовары.СчетУчета,
	|	ТаблицаТовары.Субконто,
	|	""Реализация товаров"" КАК Содержание
	|ПОМЕСТИТЬ ВТТоварыИУслуги
	|ИЗ
	|	ВТТаблицаПоТоварам КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.ПринадлежностьНоменклатуры <> &Принятые
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаУслуги.СтавкаНДС,
	|	ТаблицаУслуги.Сумма,
	|	ТаблицаУслуги.СуммаНДС,
	|	ТаблицаУслуги.Ссылка,
	|	ИСТИНА,
	|	ТаблицаУслуги.Номенклатура,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги),
	|	НЕОПРЕДЕЛЕНО,
	|	ТаблицаУслуги.Субконто,
	|	""Реализация услуг""
	|ИЗ
	|	ВТТаблицаПоУслугам КАК ТаблицаУслуги
	|ГДЕ
	|	ТаблицаУслуги.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыИУслуги.ВидЦенности КАК ВидЦенности,
	|	ТоварыИУслуги.Содержание КАК Содержание,
	|	ТоварыИУслуги.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ТоварыИУслуги.Сумма) КАК Сумма,
	|	СУММА(ТоварыИУслуги.СуммаНДС) КАК НДС,
	|	ТоварыИУслуги.Ссылка КАК Регистратор,
	|	ТоварыИУслуги.Ссылка.Дата КАК Период,
	|	ТоварыИУслуги.Ссылка.Организация КАК Организация,
	|	ТоварыИУслуги.Ссылка.Контрагент КАК Покупатель,
	|	ТоварыИУслуги.Ссылка КАК ИсправленныйСчетФактура,
	|	&Событие КАК Событие,
	|	ТоварыИУслуги.Ссылка.Дата КАК ДатаСобытия,
	|	&ИсправляемыйДокумент КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&ДатаСчетаФактуры, КВАРТАЛ)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ЛОЖЬ КАК СторнирующаяЗаписьДопЛиста,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&ДатаСчетаФактуры, КВАРТАЛ)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(&ДатаСчетаФактуры, КВАРТАЛ)
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ТоварыИУслуги.ЭтоУслуга КАК ЭтоУслуга,
	|	ТоварыИУслуги.Номенклатура КАК Номенклатура,
	|	ТоварыИУслуги.СчетУчета КАК СчетУчета,
	|	ТоварыИУслуги.Субконто
	|ИЗ
	|	ВТТоварыИУслуги КАК ТоварыИУслуги
	|ГДЕ
	|	ТоварыИУслуги.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыИУслуги.СтавкаНДС,
	|	ТоварыИУслуги.ВидЦенности,
	|	ТоварыИУслуги.Субконто,
	|	ТоварыИУслуги.Содержание,
	|	ТоварыИУслуги.Ссылка,
	|	ТоварыИУслуги.Ссылка.Дата,
	|	ТоварыИУслуги.Ссылка.Организация,
	|	ТоварыИУслуги.ЭтоУслуга,
	|	ТоварыИУслуги.Номенклатура,
	|	ТоварыИУслуги.СчетУчета,
	|	ТоварыИУслуги.Ссылка.Контрагент,
	|	ТоварыИУслуги.Ссылка,
	|	ТоварыИУслуги.Ссылка.Дата";*/
			/*ТаблицаДокумента = Запрос.Выполнить().Выгрузить();*/
			return null;
		}

		public object КорректировкаРеализацииПодготовитьТаблицуКорректировочныеДвиженияНДС(/*СтруктураШапкиДокумента, СтруктураТаблицДокумента*/)
		{
			/*СчетФактура = ?(СтруктураШапкиДокумента.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки, 
		УчетНДС.ПолучитьИсправляемыйДокументРеализации(СтруктураШапкиДокумента.ДокументРеализации), СтруктураШапкиДокумента.Ссылка);*/
			/*СчетФактураДата = ОбщегоНазначения.ПолучитьЗначениеРеквизита(УчетНДС.ПолучитьИсправляемыйДокументРеализации(СтруктураШапкиДокумента.ДокументРеализации, Истина), "Дата");*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("Курс", СтруктураШапкиДокумента.КурсДокумента);*/
			/*Запрос.УстановитьПараметр("Кратность", СтруктураШапкиДокумента.КратностьДокумента);*/
			/*Запрос.УстановитьПараметр("Ссылка", СтруктураШапкиДокумента.Ссылка);*/
			/*Запрос.УстановитьПараметр("Период", СтруктураШапкиДокумента.Дата);*/
			/*Запрос.УстановитьПараметр("СчетФактура", СчетФактура);*/
			/*Запрос.УстановитьПараметр("Принятые", Перечисления.ПринадлежностьНоменклатуры.Принятый);*/
			/*Запрос.УстановитьПараметр("СчетФактураДата", СчетФактураДата);*/
			/*Запрос.УстановитьПараметр("ИсправленныйСчетФактура", 
		?(СтруктураШапкиДокумента.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки, СтруктураШапкиДокумента.Ссылка, Неопределено));*/
			/*Запрос.УстановитьПараметр("Событие", Перечисления.СобытияПоНДСПродажи.Реализация);*/
			/*Запрос.УстановитьПараметр("ТаблицаПоТоварам", СтруктураТаблицДокумента.ТаблицаПоТоварам);*/
			/*Запрос.УстановитьПараметр("ТаблицаПоУслугам", СтруктураТаблицДокумента.ТаблицаПоУслугам);*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ВТТаблицаПоТоварам
	|ИЗ
	|	&ТаблицаПоТоварам КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ВТТаблицаПоУслугам
	|ИЗ
	|	&ТаблицаПоУслугам КАК ТаблицаУслуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&СчетФактура КАК СчетФактура,
	|	&ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	""Корректировка НДС"" КАК Содержание,
	|	ЛОЖЬ КАК ЭтоУслуга,
	|	НЕОПРЕДЕЛЕНО КАК ВидЦенности,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету) КАК Событие,
	|	КорректировкаРеализацииТовары.Номенклатура,
	|	КорректировкаРеализацииТовары.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализацииТовары.СуммаДоКорректировки - КорректировкаРеализацииТовары.Сумма > 0
	|			ТОГДА КорректировкаРеализацииТовары.СуммаНДСДоКорректировки - КорректировкаРеализацииТовары.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДС,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализацииТовары.СуммаДоКорректировки - КорректировкаРеализацииТовары.Сумма > 0
	|			ТОГДА КорректировкаРеализацииТовары.СуммаДоКорректировки - КорректировкаРеализацииТовары.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	КорректировкаРеализацииТовары.СчетУчета,
	|	КорректировкаРеализацииТовары.Ссылка.Дата КАК Период,
	|	КорректировкаРеализацииТовары.Ссылка.Дата КАК ДатаСобытия,
	|	КорректировкаРеализацииТовары.Ссылка.Организация КАК Организация,
	|	КорректировкаРеализацииТовары.Ссылка.Контрагент КАК Поставщик,
	|	ЛОЖЬ КАК ЗаписьДополнительногоЛиста,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК КорректируемыйПериод,
	|	ЛОЖЬ КАК СторнирующаяЗаписьДопЛиста,
	|	КорректировкаРеализацииТовары.НомерСтроки,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСПоУменьшениюСтоимостиРеализации) КАК СчетУчетаНДС,
	|	КорректировкаРеализацииТовары.Субконто,
	|	КорректировкаРеализацииТовары.Ссылка КАК Регистратор
	|ИЗ
	|	ВТТаблицаПоТоварам КАК КорректировкаРеализацииТовары
	|ГДЕ
	|	КорректировкаРеализацииТовары.Ссылка = &Ссылка
	|	И КорректировкаРеализацииТовары.СуммаДоКорректировки - КорректировкаРеализацииТовары.Сумма > 0
	|	И КорректировкаРеализацииТовары.ПринадлежностьНоменклатуры <> &Принятые
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&СчетФактура,
	|	&ИсправленныйСчетФактура,
	|	""Корректировка НДС"",
	|	ИСТИНА,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету),
	|	КорректировкаРеализацииУслуги.Номенклатура,
	|	КорректировкаРеализацииУслуги.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализацииУслуги.СуммаДоКорректировки - КорректировкаРеализацииУслуги.Сумма > 0
	|			ТОГДА КорректировкаРеализацииУслуги.СуммаНДСДоКорректировки - КорректировкаРеализацииУслуги.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализацииУслуги.СуммаДоКорректировки - КорректировкаРеализацииУслуги.Сумма > 0
	|			ТОГДА КорректировкаРеализацииУслуги.СуммаДоКорректировки - КорректировкаРеализацииУслуги.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	НЕОПРЕДЕЛЕНО,
	|	КорректировкаРеализацииУслуги.Ссылка.Дата,
	|	КорректировкаРеализацииУслуги.Ссылка.Дата,
	|	КорректировкаРеализацииУслуги.Ссылка.Организация,
	|	КорректировкаРеализацииУслуги.Ссылка.Контрагент,
	|	ЛОЖЬ,
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	ЛОЖЬ,
	|	КорректировкаРеализацииУслуги.НомерСтроки,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСПоУменьшениюСтоимостиРеализации),
	|	КорректировкаРеализацииУслуги.Субконто,
	|	КорректировкаРеализацииУслуги.Ссылка
	|ИЗ
	|	ВТТаблицаПоУслугам КАК КорректировкаРеализацииУслуги
	|ГДЕ
	|	КорректировкаРеализацииУслуги.Ссылка = &Ссылка
	|	И КорректировкаРеализацииУслуги.СуммаДоКорректировки - КорректировкаРеализацииУслуги.Сумма > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&СчетФактура КАК СчетФактура,
	|	&ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	""Реализация товаров"" КАК Содержание,
	|	ЛОЖЬ КАК ЭтоУслуга,
	|	НЕОПРЕДЕЛЕНО КАК ВидЦенности,
	|	&Событие КАК Событие,
	|	КорректировкаРеализацииТовары.Ссылка.Дата КАК ДатаСобытия,
	|	КорректировкаРеализацииТовары.Номенклатура,
	|	КорректировкаРеализацииТовары.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализацииТовары.СуммаДоКорректировки - КорректировкаРеализацииТовары.Сумма < 0
	|			ТОГДА (КорректировкаРеализацииТовары.СуммаНДСДоКорректировки - КорректировкаРеализацииТовары.СуммаНДС) * -1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДС,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализацииТовары.СуммаДоКорректировки - КорректировкаРеализацииТовары.Сумма < 0
	|			ТОГДА (КорректировкаРеализацииТовары.СуммаДоКорректировки - КорректировкаРеализацииТовары.Сумма) * -1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	КорректировкаРеализацииТовары.СчетУчета,
	|	КорректировкаРеализацииТовары.Ссылка.Дата КАК Период,
	|	КорректировкаРеализацииТовары.Ссылка.Организация КАК Организация,
	|	КорректировкаРеализацииТовары.Ссылка.Контрагент КАК Покупатель,
	|	КорректировкаРеализацииТовары.НомерСтроки,
	|	КорректировкаРеализацииТовары.Субконто,
	|	КорректировкаРеализацииТовары.Ссылка КАК Регистратор,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&СчетФактураДата, КВАРТАЛ)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ЛОЖЬ КАК СторнирующаяЗаписьДопЛиста,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&СчетФактураДата, КВАРТАЛ)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(&СчетФактураДата, КВАРТАЛ)
	|	КОНЕЦ КАК КорректируемыйПериод
	|ИЗ
	|	ВТТаблицаПоТоварам КАК КорректировкаРеализацииТовары
	|ГДЕ
	|	КорректировкаРеализацииТовары.Ссылка = &Ссылка
	|	И КорректировкаРеализацииТовары.СуммаДоКорректировки - КорректировкаРеализацииТовары.Сумма < 0
	|	И КорректировкаРеализацииТовары.ПринадлежностьНоменклатуры <> &Принятые
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&СчетФактура,
	|	&ИсправленныйСчетФактура,
	|	""Реализация услуг"",
	|	ИСТИНА,
	|	НЕОПРЕДЕЛЕНО,
	|	&Событие,
	|	КорректировкаРеализацииУслуги.Ссылка.Дата,
	|	КорректировкаРеализацииУслуги.Номенклатура,
	|	КорректировкаРеализацииУслуги.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализацииУслуги.СуммаДоКорректировки - КорректировкаРеализацииУслуги.Сумма < 0
	|			ТОГДА (КорректировкаРеализацииУслуги.СуммаНДСДоКорректировки - КорректировкаРеализацииУслуги.СуммаНДС) * -1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализацииУслуги.СуммаДоКорректировки - КорректировкаРеализацииУслуги.Сумма < 0
	|			ТОГДА (КорректировкаРеализацииУслуги.СуммаДоКорректировки - КорректировкаРеализацииУслуги.Сумма) * -1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	НЕОПРЕДЕЛЕНО,
	|	КорректировкаРеализацииУслуги.Ссылка.Дата,
	|	КорректировкаРеализацииУслуги.Ссылка.Организация,
	|	КорректировкаРеализацииУслуги.Ссылка.Контрагент,
	|	КорректировкаРеализацииУслуги.НомерСтроки,
	|	КорректировкаРеализацииУслуги.Субконто,
	|	КорректировкаРеализацииУслуги.Ссылка,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&СчетФактураДата, КВАРТАЛ)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ЛОЖЬ,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&СчетФактураДата, КВАРТАЛ)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(&СчетФактураДата, КВАРТАЛ)
	|	КОНЕЦ
	|ИЗ
	|	ВТТаблицаПоУслугам КАК КорректировкаРеализацииУслуги
	|ГДЕ
	|	КорректировкаРеализацииУслуги.Ссылка = &Ссылка
	|	И КорректировкаРеализацииУслуги.СуммаДоКорректировки - КорректировкаРеализацииУслуги.Сумма < 0";*/
			/*Результат = Запрос.ВыполнитьПакет();*/
			/*ТаблицаВычет = Результат[2].Выгрузить();*/
			/*ТаблицаВосстановление = Результат[3].Выгрузить();*/
			return null;
		}

		public void КорректировкаРеализацииСформироватьДвиженияСторноВычетаНДС(/*СтруктураШапкиДокумента, ТаблицаСторноНДС, Движения*/)
		{
			/*КорректировкаРеализацииСформироватьДвиженияЗаписьКнигиПокупок(СтруктураШапкиДокумента, ТаблицаСторноНДС, Движения);*/
			if(true/*СтруктураШапкиДокумента.КорректироватьБУиНУ*/)
			{
				/*КорректировкаРеализацииСформироватьПроводкиСторноВычетаНДС(СтруктураШапкиДокумента, Движения);*/
			}
		}

		public void КорректировкаРеализацииСформироватьДвиженияПредъявленНДС(/*СтруктураШапкиДокумента, ТаблицаПредъявленногоНДС, Сторно = Ложь, Движения*/)
		{
			if(true/*ТаблицаПредъявленногоНДС.Количество() = 0*/)
			{
			}
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения,"НДСПредъявленный", СтруктураШапкиДокумента.Ссылка);*/
			/*ТаблицаПредъявленногоНДС.Свернуть(
		"ВидЦенности, СтавкаНДС, Поставщик, Организация, СчетФактура, ИсправленныйСчетФактура, Событие, ДатаСобытия, 
		| СчетУчетаНДС, Регистратор, Период", "СуммаБезНДС, НДС");*/
		}

		public void КорректировкаРеализацииСформироватьДвиженияЗаписьКнигиПокупок(/*СтруктураШапкиДокумента, ТаблицаДвижений, Движения*/)
		{
			if(true/*ТаблицаДвижений.Количество() = 0*/)
			{
			}
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения,"НДСЗаписиКнигиПокупок", СтруктураШапкиДокумента.Ссылка);*/
		}

		public void КорректировкаРеализацииСформироватьПроводкиСторноВычетаНДС(/*СтруктураШапкиДокумента, Движения*/)
		{
			/*ДобавитьНаборРегистраБухгалтерииВСтруктуруДвижений(Движения,"Хозрасчетный", СтруктураШапкиДокумента.Ссылка);*/
			/*НаборЗаписейХозрасчетный = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();*/
			/*НаборЗаписейХозрасчетный.Отбор.Регистратор.Значение = СтруктураШапкиДокумента.ДокументРеализации;*/
			/*НаборЗаписейХозрасчетный.Прочитать();*/
		}

		public void КорректировкаРеализацииСформироватьДвиженияЗаписьКнигиПродаж(/*СтруктураШапкиДокумента, ТаблицаДвижений, Движения*/)
		{
			if(true/*ТаблицаДвижений.Количество() = 0*/)
			{
			}
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения,"НДСЗаписиКнигиПродаж", СтруктураШапкиДокумента.Ссылка);*/
		}

		public void КорректировкаРеализацииСформироватьКорректировочныеДвижения(/*СтруктураШапкиДокумента, СтруктураТаблицДокумента, Движения*/)
		{
			/*СтруктураТаблиц = КорректировкаРеализацииПодготовитьТаблицуКорректировочныеДвиженияНДС(СтруктураШапкиДокумента, СтруктураТаблицДокумента);*/
			/*БухгалтерскийУчетРасчетовСКонтрагентами.ПодготовкаТаблицыЗначенийДляЦелейПриобретенияИРеализации(СтруктураТаблиц.ТаблицаВычет, СтруктураШапкиДокумента, Истина);*/
			/*БухгалтерскийУчетРасчетовСКонтрагентами.ПодготовкаТаблицыЗначенийДляЦелейПриобретенияИРеализации(СтруктураТаблиц.ТаблицаВосстановление, СтруктураШапкиДокумента, Истина);*/
			/*// Отражение предъявленного НДС по строкам на уменьшение стоимости	
*/
			/*КорректировкаРеализацииСформироватьДвиженияПредъявленНДС(СтруктураШапкиДокумента, СтруктураТаблиц.ТаблицаВычет, , Движения);*/
			/*ТаблицаДвижений = СтруктураТаблиц.ТаблицаВосстановление;*/
			/*ТаблицаДвижений.Свернуть(
		"Организация, Покупатель, СчетФактура, ВидЦенности, СтавкаНДС, Событие, ДатаСобытия, ЗаписьДополнительногоЛиста, СторнирующаяЗаписьДопЛиста, 
		| КорректируемыйПериод, ИсправленныйСчетФактура, Период, Регистратор", 
		"СуммаБезНДС, НДС");*/
			/*КорректировкаРеализацииСформироватьДвиженияЗаписьКнигиПродаж(СтруктураШапкиДокумента, ТаблицаДвижений, Движения);*/
		}

		public void КорректировкаРеализацииСформироватьИсправительныеДвижения(/*СтруктураШапкиДокумента, СтруктураТаблицДокумента, СтруктураТаблицСторноНДС, Движения*/)
		{
			/*ИсправляемыйДокумент = УчетНДС.ПолучитьИсправляемыйДокументРеализации(СтруктураШапкиДокумента.ДокументРеализации);*/
			if(true/*ТипЗнч(ИсправляемыйДокумент) = Тип("ДокументСсылка.КорректировкаРеализации")*/)
			{
				/*// Сторно движений исправляемого документа
*/
				/*КорректировкаРеализацииСформироватьДвиженияПредъявленНДС(СтруктураШапкиДокумента, СтруктураТаблицСторноНДС.НДСПредъявленный, Истина, Движения);*/
				/*КорректировкаРеализацииСформироватьДвиженияСторноВычетаНДС(СтруктураШапкиДокумента, СтруктураТаблицСторноНДС.КнигаПокупок, Движения);*/
				/*// Новые движения по исправленному корректировочному счету-фактуре
*/
				/*КорректировкаРеализацииСформироватьКорректировочныеДвижения(СтруктураШапкиДокумента, СтруктураТаблицДокумента, Движения);*/
			}
		}

		public void КорректировкаРеализацииДвиженияПоРегистрамНДС(/*СтруктураШапкиДокумента, СтруктураТаблицДокумента, СтруктураТаблицСторноНДС, Движения*/)
		{
			/*//Если НДС еще не отражен в книге продаж, следует его там отразить
*/
			if(true/*СтруктураТаблицСторноНДС.НДСНачисленный.Количество() > 0*/)
			{
				/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения,"НДСНачисленный", СтруктураШапкиДокумента.Ссылка);*/
				/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения,"НДСЗаписиКнигиПродаж", СтруктураШапкиДокумента.Ссылка);*/
				/*Событие = Перечисления.СобытияПоНДСПродажи.Реализация;*/
				/*ДатаСобытия = СтруктураШапкиДокумента.Дата;*/
			}
			if(true/*СтруктураШапкиДокумента.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки*/)
			{
				/*// Сторно движений исправляемого документа
*/
				/*КорректировкаРеализацииСформироватьДвиженияЗаписьКнигиПродаж(СтруктураШапкиДокумента, СтруктураТаблицСторноНДС.КнигаПродаж, Движения);*/
				/*// Формирование исправленных движений
*/
				/*КорректировкаРеализацииСформироватьИсправительныеДвижения(СтруктураШапкиДокумента, СтруктураТаблицДокумента, СтруктураТаблицСторноНДС, Движения);*/
			}
		}

		public object КорректировкаРеализацииПолучитьТаблицыДокумента(/*СтруктураШапкиДокумента*/)
		{
			/*Запрос = Новый Запрос();*/
			/*Запрос.УстановитьПараметр("Ссылка", СтруктураШапкиДокумента.Ссылка);*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	КорректировкаРеализацииТовары.Ссылка,
	|	КорректировкаРеализацииТовары.НомерСтроки,
	|	КорректировкаРеализацииТовары.Номенклатура,
	|	КорректировкаРеализацииТовары.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	КорректировкаРеализацииТовары.ХарактеристикаНоменклатуры,
	|	КорректировкаРеализацииТовары.Количество,
	|	КорректировкаРеализацииТовары.ПринадлежностьНоменклатуры,
	|	КорректировкаРеализацииТовары.СерияНоменклатуры,
	|	КорректировкаРеализацииТовары.Склад,
	|	КорректировкаРеализацииТовары.ПереданныеПринятыеБУ,
	|	КорректировкаРеализацииТовары.ПереданныеПринятыеНУ,
	|	КорректировкаРеализацииТовары.ПереданныеСобственныеБУ,
	|	КорректировкаРеализацииТовары.ПереданныеСобственныеНУ,
	|	КорректировкаРеализацииТовары.ПринятыеСчетУчетаБУ,
	|	КорректировкаРеализацииТовары.ПринятыеСчетУчетаНУ,
	|	КорректировкаРеализацииТовары.СтавкаНДС,
	|	КорректировкаРеализацииТовары.Цена,
	|	КорректировкаРеализацииТовары.Сумма,
	|	КорректировкаРеализацииТовары.СуммаНДС,
	|	КорректировкаРеализацииТовары.СубконтоБУ,
	|	КорректировкаРеализацииТовары.СубконтоНУ,
	|	КорректировкаРеализацииТовары.СчетДоходовБУ,
	|	КорректировкаРеализацииТовары.СчетДоходовНУ,
	|	КорректировкаРеализацииТовары.СчетРасходовБУ,
	|	КорректировкаРеализацииТовары.СчетРасходовНУ,
	|	КорректировкаРеализацииТовары.СчетУчетаБУ,
	|	КорректировкаРеализацииТовары.СчетУчетаНУ,
	|	КорректировкаРеализацииТовары.КоличествоДоКорректировки,
	|	КорректировкаРеализацииТовары.ЦенаДоКорректировки,
	|	КорректировкаРеализацииТовары.СуммаДоКорректировки,
	|	КорректировкаРеализацииТовары.СуммаНДСДоКорректировки,
	|	КорректировкаРеализацииТовары.КоличествоДоИзменения,
	|	КорректировкаРеализацииТовары.ЦенаДоИзменения,
	|	КорректировкаРеализацииТовары.СуммаДоИзменения,
	|	КорректировкаРеализацииТовары.СуммаНДСДоИзменения,
	|	КорректировкаРеализацииТовары.СтавкаНДСДоИзменения
	|ИЗ
	|	Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
	|ГДЕ
	|	КорректировкаРеализацииТовары.Ссылка = &Ссылка";*/
			/*ТаблицаПоТоварам = Запрос.Выполнить().Выгрузить();*/
			/*Запрос.УстановитьПараметр("Ссылка", СтруктураШапкиДокумента.Ссылка);*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	КорректировкаРеализацииУслуги.Ссылка,
	|	КорректировкаРеализацииУслуги.НомерСтроки,
	|	КорректировкаРеализацииУслуги.Номенклатура,
	|	КорректировкаРеализацииУслуги.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	КорректировкаРеализацииУслуги.Содержание,
	|	КорректировкаРеализацииУслуги.Количество,
	|	КорректировкаРеализацииУслуги.Цена,
	|	КорректировкаРеализацииУслуги.Сумма,
	|	КорректировкаРеализацииУслуги.СтавкаНДС,
	|	КорректировкаРеализацииУслуги.СуммаНДС,
	|	КорректировкаРеализацииУслуги.СчетДоходовБУ,
	|	КорректировкаРеализацииУслуги.СубконтоБУ,
	|	КорректировкаРеализацииУслуги.СчетДоходовНУ,
	|	КорректировкаРеализацииУслуги.СубконтоНУ,
	|	КорректировкаРеализацииУслуги.СчетРасходовБУ,
	|	КорректировкаРеализацииУслуги.СчетРасходовНУ,
	|	КорректировкаРеализацииУслуги.КоличествоДоКорректировки,
	|	КорректировкаРеализацииУслуги.ЦенаДоКорректировки,
	|	КорректировкаРеализацииУслуги.СуммаДоКорректировки,
	|	КорректировкаРеализацииУслуги.СуммаНДСДоКорректировки,
	|	КорректировкаРеализацииУслуги.СодержаниеДоИзменения,
	|	КорректировкаРеализацииУслуги.КоличествоДоИзменения,
	|	КорректировкаРеализацииУслуги.ЦенаДоИзменения,
	|	КорректировкаРеализацииУслуги.СуммаДоИзменения,
	|	КорректировкаРеализацииУслуги.СуммаНДСДоИзменения,
	|	КорректировкаРеализацииУслуги.СтавкаНДСДоИзменения
	|ИЗ
	|	Документ.КорректировкаРеализации.Услуги КАК КорректировкаРеализацииУслуги
	|ГДЕ
	|	КорректировкаРеализацииУслуги.Ссылка = &Ссылка";*/
			/*ТаблицаПоУслугам = Запрос.Выполнить().Выгрузить();*/
			/*СчетаУчетаВДокументах.ЗаполнитьПриПроведенииСчетаУчетаТабличнойЧасти("Товары", ТаблицаПоТоварам, СтруктураШапкиДокумента);*/
			/*СчетаУчетаВДокументах.ЗаполнитьПриПроведенииСчетаУчетаТабличнойЧасти("Услуги", ТаблицаПоУслугам, СтруктураШапкиДокумента);*/
			/*ТаблицаПоТоварам.Колонки.СчетУчетаБУ.Имя = "СчетУчета";*/
			/*ТаблицаПоТоварам.Колонки.СубконтоБУ.Имя = "Субконто";*/
			/*ТаблицаПоУслугам.Колонки.СубконтоБУ.Имя = "Субконто";*/
			return null;
		}

		public void ПровестиКорректировкуРеализацииПоРегистрамНДС(/*СтруктураШапкиДокумента, ДокументСсылка*/)
		{
			/*УчетНДС.ДополнитьСтруктуруШапкиДокументаДляНДС(СтруктураШапкиДокумента, Истина);*/
			/*Движения = Новый Структура();*/
			/*СтруктураТаблицСторноНДС = КорректировкаРеализацииПодготовитьСтруктуруТаблицСторнирующихНДСЗаписей(СтруктураШапкиДокумента);*/
			/*СтруктураТаблицДокумента = КорректировкаРеализацииПолучитьТаблицыДокумента(СтруктураШапкиДокумента);*/
			if(true/*НЕ СтруктураШапкиДокумента.ОрганизацияПрименяетУСН 
		И СтруктураШапкиДокумента.УчитыватьНДС*/)
			{
				/*КорректировкаРеализацииДвиженияПоРегистрамНДС(СтруктураШапкиДокумента, СтруктураТаблицДокумента, СтруктураТаблицСторноНДС, Движения);*/
			}
		}
		////////////////////////////////////////////////////////////////////////////////////////////////////
		// Исправленные счета-фактуры выданные (на аванс и налоговый агент)

		public void ПровестиИсправленныйВыданныйСчетФактуру(/*СтруктураШапкиДокумента, ТаблицаПоСчетуФактуре*/)
		{
			/*УчетНДС.ДополнитьСтруктуруШапкиДокументаДляНДС(СтруктураШапкиДокумента, Истина);*/
			if(true/*СтруктураШапкиДокумента.ОрганизацияПрименяетУСН*/)
			{
			}
			/*Движения = Новый Структура;*/
			/*// Готовим таблицы с данными для сторно-движений
*/
			/*СтруктураТаблицСторноНДС = ИсправленныйВыданныйСчетФактураПодготовитьТаблицыСторноЗаписей(СтруктураШапкиДокумента);*/
			/*// Формируем движения
*/
			/*ОтразитьВКнигеПродажИсправляемыйСчетФактуруВыданный(СтруктураШапкиДокумента, СтруктураТаблицСторноНДС, Движения);*/
			if(true/*СтруктураШапкиДокумента.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс*/)
			{
				/*// Делаем расход регистра НДСсАвансов по исправляемому счету-фактуре
*/
				if(true/*СтруктураТаблицСторноНДС.НДСсАвансов.Количество() > 0*/)
				{
					/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения, "НДСсАвансов", СтруктураШапкиДокумента.Ссылка);*/
				}
				/*// Делаем сторно проводки Дт 76.АВ Кт 68.02
*/
				/*СформироватьСторноПроводкиСчетФактураВыданныйНаАванс(СтруктураШапкиДокумента, СтруктураТаблицСторноНДС, Движения);*/
				/*// По исправленному счету-фактуре сразу формируем записи книги продаж, без записи в НДСначисленный
*/
				/*СформироватьДвиженияНДСЗаписиКнигиПродажСчетФактураВыданныйНаАванс(СтруктураШапкиДокумента, ТаблицаПоСчетуФактуре, Движения);*/
				/*// Формируем движения по НДСсАвансов по исправленному счету-фактуре
*/
				/*СформироватьДвиженияНДСсАвансовСчетФактураВыданныйНаАванс(СтруктураШапкиДокумента, ТаблицаПоСчетуФактуре, Движения);*/
				/*// Формируем проводки по исправленному счету-фактуре Дт 76.АВ Кт 68.02
*/
				/*СформироватьПроводкиСчетФактураВыданныйНаАванс(СтруктураШапкиДокумента, ТаблицаПоСчетуФактуре, Движения);*/
			}
			/*// Записываем сформированные движения
*/
		}

		public object ИсправленныйВыданныйСчетФактураПодготовитьТаблицыСторноЗаписей(/*СтруктураШапкиДокумента*/)
		{
			/*ИсходныйСчетФактура = 
		?(ТипЗнч(СтруктураШапкиДокумента.ДокументОснование) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") 
		И НЕ ЗначениеЗаполнено(СтруктураШапкиДокумента.ДоговорКонтрагента), 
		СтруктураШапкиДокумента.ИсправляемыйСчетФактура, СтруктураШапкиДокумента.ДокументОснование);*/
			/*Запрос = Новый Запрос();*/
			/*Запрос.УстановитьПараметр("ИсходныйСчетФактура", ИсходныйСчетФактура);*/
			/*Запрос.УстановитьПараметр("ИсходныйСчетФактураДата", ИсходныйСчетФактура.Дата);*/
			/*Запрос.УстановитьПараметр("Период", СтруктураШапкиДокумента.Дата);*/
			/*Запрос.УстановитьПараметр("МоментДокумента", Новый Граница(СтруктураШапкиДокумента.Ссылка.МоментВремени(), ВидГраницы.Исключая));*/
			/*Запрос.УстановитьПараметр("Ссылка", СтруктураШапкиДокумента.Ссылка);*/
			/*Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("ДоговорКонтрагента", СтруктураШапкиДокумента.ДоговорКонтрагента);*/
			/*// Регистр накопления НДСЗаписиКнигиПродаж
*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ЗаписиКнигиПродаж.Организация,
	|	ЗаписиКнигиПродаж.Покупатель,
	|	ЗаписиКнигиПродаж.СчетФактура,
	|	ЗаписиКнигиПродаж.ВидЦенности,
	|	ЗаписиКнигиПродаж.СтавкаНДС,
	|	ЗаписиКнигиПродаж.ДатаОплаты,
	|	ЗаписиКнигиПродаж.ДокументОплаты,
	|	ЗаписиКнигиПродаж.Событие,
	|	&Период КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&ИсходныйСчетФактураДата, КВАРТАЛ)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&ИсходныйСчетФактураДата, КВАРТАЛ)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(&ИсходныйСчетФактураДата, КВАРТАЛ)
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ЗаписиКнигиПродаж.ДоговорКонтрагента,
	|	ЗаписиКнигиПродаж.ИсправленныйСчетФактура,
	|	ЗаписиКнигиПродаж.СуммаБезНДСОборот КАК СуммаБезНДС,
	|	ЗаписиКнигиПродаж.НДСОборот КАК НДС
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			,
	|			&МоментДокумента,
	|			,
	|			Организация = &Организация
	|				И СчетФактура = &ИсходныйСчетФактура
	|				И ДоговорКонтрагента = &ДоговорКонтрагента) КАК ЗаписиКнигиПродаж";*/
			/*СтруктураТаблиц = Новый Структура();*/
			/*СтруктураТаблиц.Вставить("НДСЗаписиКнигиПродаж", Запрос.Выполнить().Выгрузить());*/
			/*// Регистр накопления НДСНачисленный
*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	НДСНачисленныйОстатки.Организация,
	|	НДСНачисленныйОстатки.СчетФактура,
	|	НДСНачисленныйОстатки.ВидЦенности,
	|	НДСНачисленныйОстатки.ВидНачисления,
	|	НДСНачисленныйОстатки.СтавкаНДС,
	|	&ИсходныйСчетФактураДата КАК ДатаОплаты,
	|	НДСНачисленныйОстатки.Покупатель,
	|	НДСНачисленныйОстатки.ДоговорКонтрагента,
	|	НДСНачисленныйОстатки.ИсправленныйСчетФактура,
	|	НДСНачисленныйОстатки.СуммаБезНДСОстаток КАК СуммаБезНДС,
	|	НДСНачисленныйОстатки.НДСОстаток КАК НДС,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ПолученАванс) КАК Событие,
	|	&Период КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&ИсходныйСчетФактураДата, КВАРТАЛ)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&ИсходныйСчетФактураДата, КВАРТАЛ)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(&ИсходныйСчетФактураДата, КВАРТАЛ)
	|	КОНЕЦ КАК КорректируемыйПериод
	|ИЗ
	|	РегистрНакопления.НДСНачисленный.Остатки(
	|			&МоментДокумента,
	|			Организация = &Организация
	|				И СчетФактура = &ИсходныйСчетФактура
	|				И ДоговорКонтрагента = &ДоговорКонтрагента) КАК НДСНачисленныйОстатки";*/
			/*СтруктураТаблиц.Вставить("НДСНачисленный", Запрос.Выполнить().Выгрузить());*/
			/*// Регистр накопления НДСсАвансов
*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	НДСсАвансовОстатки.Организация,
	|	НДСсАвансовОстатки.СчетФактура,
	|	НДСсАвансовОстатки.ВидЦенности,
	|	НДСсАвансовОстатки.СтавкаНДС,
	|	НДСсАвансовОстатки.Покупатель,
	|	НДСсАвансовОстатки.ДоговорКонтрагента,
	|	НДСсАвансовОстатки.ИсправленныйСчетФактура,
	|	НДСсАвансовОстатки.ВалютаАванса,
	|	НДСсАвансовОстатки.ВалютнаяСуммаСНДСОстаток КАК ВалютнаяСуммаСНДС,
	|	НДСсАвансовОстатки.СуммаБезНДСОстаток КАК СуммаБезНДС,
	|	НДСсАвансовОстатки.НДСОстаток КАК НДС,
	|	&Период КАК ДатаСобытия
	|ИЗ
	|	РегистрНакопления.НДСсАвансов.Остатки(
	|			&МоментДокумента,
	|			Организация = &Организация
	|				И СчетФактура = &ИсходныйСчетФактура
	|				И ДоговорКонтрагента = &ДоговорКонтрагента) КАК НДСсАвансовОстатки";*/
			/*СтруктураТаблиц.Вставить("НДСсАвансов", Запрос.Выполнить().Выгрузить());*/
			return null;
		}

		public void ОтразитьВКнигеПродажИсправляемыйСчетФактуруВыданный(/*СтруктураШапкиДокумента, СтруктураТаблицСторноНДС, Движения*/)
		{
			/*// Если исправляемый счет-фактура еще не был отражен в книге продаж, следует его там отразить и сразу сторнировать.
*/
			if(true/*СтруктураТаблицСторноНДС.НДСНачисленный.Количество() > 0*/)
			{
				/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения, "НДСНачисленный", СтруктураШапкиДокумента.Ссылка);*/
				/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения, "НДСЗаписиКнигиПродаж", СтруктураШапкиДокумента.Ссылка);*/
				/*ДатаИсходногоДокумента = СтруктураШапкиДокумента.ДокументОснование.Дата;*/
			}
			/*// Если счет-фактура был отражен в книге продаж ранее, делаем сторно движения
*/
			if(true/*СтруктураТаблицСторноНДС.НДСЗаписиКнигиПродаж.Количество() > 0*/)
			{
				/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения, "НДСЗаписиКнигиПродаж", СтруктураШапкиДокумента.Ссылка);*/
			}
		}

		public void СформироватьСторноПроводкиСчетФактураВыданныйНаАванс(/*СтруктураШапкиДокумента, СтруктураТаблицСторноНДС, Движения*/)
		{
			/*// Сторнирующие проводки Дт 76.АВ Кт 68.02 по остаткам НДС начисленный
*/
			if(true/*СтруктураТаблицСторноНДС.НДСНачисленный.Количество() > 0*/)
			{
				/*ДобавитьНаборРегистраБухгалтерииВСтруктуруДвижений(Движения, "Хозрасчетный", СтруктураШапкиДокумента.Ссылка);*/
			}
			/*// Сторнирующие проводки Дт 76.АВ Кт 68.02 по оборотам книги продаж
*/
			if(true/*СтруктураТаблицСторноНДС.НДСЗаписиКнигиПродаж.Количество() > 0*/)
			{
				/*ДобавитьНаборРегистраБухгалтерииВСтруктуруДвижений(Движения, "Хозрасчетный", СтруктураШапкиДокумента.Ссылка);*/
			}
		}

		public void СформироватьСторноПроводкиНалоговыйАгентПоОплате(/*СтруктураШапкиДокумента, СтруктураТаблицСторноНДС, Движения*/)
		{
			/*// Сторнирующие проводки Дт 76.НА Кт 68.32 по остаткам НДС начисленный
*/
			if(true/*СтруктураТаблицСторноНДС.НДСНачисленный.Количество() > 0*/)
			{
				/*ДобавитьНаборРегистраБухгалтерииВСтруктуруДвижений(Движения, "Хозрасчетный", СтруктураШапкиДокумента.Ссылка);*/
			}
			/*// Сторнирующие проводки Дт 76.НА Кт 68.32 по оборотам книги продаж
*/
			if(true/*СтруктураТаблицСторноНДС.НДСЗаписиКнигиПродаж.Количество() > 0*/)
			{
				/*ДобавитьНаборРегистраБухгалтерииВСтруктуруДвижений(Движения, "Хозрасчетный", СтруктураШапкиДокумента.Ссылка);*/
			}
		}
		////////////////////////////////////////////////////////////////////////////////////////////////////
		// Исправленные счета-фактуры полученные на аванс

		public void ПровестиИсправленныйПолученныйСчетФактуру(/*СтруктураШапкиДокумента, ТаблицаПоСчетуФактуре*/)
		{
			/*УчетНДС.ДополнитьСтруктуруШапкиДокументаДляНДС(СтруктураШапкиДокумента, Истина);*/
			if(true/*СтруктураШапкиДокумента.ОрганизацияПрименяетУСН*/)
			{
			}
			/*Движения = Новый Структура;*/
			/*// Готовим таблицы с данными для сторно-движений
*/
			/*СтруктураТаблицСторноНДС = ИсправленныйПолученныйСчетФактураПодготовитьТаблицыСторноЗаписей(СтруктураШапкиДокумента);*/
			/*// Формируем движения
*/
			/*СформироватьСторноДвиженияИсправляемыйСчетФактуруПолученный(СтруктураШапкиДокумента, СтруктураТаблицСторноНДС, Движения);*/
			/*// Делаем сторно проводки Дт 68.02 Кт 76.ВА
*/
			/*СформироватьСторноПроводкиСчетФактураПолученныйНаАванс(СтруктураШапкиДокумента, СтруктураТаблицСторноНДС, Движения);*/
			/*// По исправленному счету-фактуре делаем записи в НДСпредъявленный
*/
			/*СформироватьДвиженияНДСпредъявленныйСчетФактураПолученныйНаАванс(СтруктураШапкиДокумента, ТаблицаПоСчетуФактуре, Движения);*/
			/*// Формируем движения по НДСсАвансов по исправленному счету-фактуре
*/
			/*СформироватьДвиженияНДСсАвансовСчетФактураПолученныйНаАванс(СтруктураШапкиДокумента, ТаблицаПоСчетуФактуре, Движения);*/
			/*// Записываем сформированные движения
*/
		}

		public object ИсправленныйПолученныйСчетФактураПодготовитьТаблицыСторноЗаписей(/*СтруктураШапкиДокумента*/)
		{
			/*Запрос = Новый Запрос();*/
			/*ИсходныйСчетФактура = СтруктураШапкиДокумента.ДокументОснование;*/
			/*Запрос.УстановитьПараметр("ИсходныйСчетФактура", ИсходныйСчетФактура);*/
			/*Запрос.УстановитьПараметр("ИсходныйСчетФактураДата", ИсходныйСчетФактура.Дата);*/
			/*Запрос.УстановитьПараметр("Период", СтруктураШапкиДокумента.Дата);*/
			/*Запрос.УстановитьПараметр("МоментДокумента", Новый Граница(СтруктураШапкиДокумента.Ссылка.МоментВремени(), ВидГраницы.Исключая));*/
			/*Запрос.УстановитьПараметр("Ссылка", СтруктураШапкиДокумента.Ссылка);*/
			/*Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("ДоговорКонтрагента", СтруктураШапкиДокумента.ДоговорКонтрагента);*/
			/*// Регистр накопления НДСЗаписиКнигиПокупок
*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ЗаписиКнигиПокупок.Организация,
	|	ЗаписиКнигиПокупок.Поставщик,
	|	ЗаписиКнигиПокупок.СчетФактура,
	|	ЗаписиКнигиПокупок.ВидЦенности,
	|	ЗаписиКнигиПокупок.СтавкаНДС,
	|	ЗаписиКнигиПокупок.ДатаОплаты,
	|	ЗаписиКнигиПокупок.ДокументОплаты,
	|	ЗаписиКнигиПокупок.Событие,
	|	&Период КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&ИсходныйСчетФактураДата, КВАРТАЛ)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&ИсходныйСчетФактураДата, КВАРТАЛ)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(&ИсходныйСчетФактураДата, КВАРТАЛ)
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ЗаписиКнигиПокупок.ДоговорКонтрагента,
	|	ЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	|	ЗаписиКнигиПокупок.СуммаБезНДСОборот КАК СуммаБезНДС,
	|	ЗаписиКнигиПокупок.НДСОборот КАК НДС
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			,
	|			&МоментДокумента,
	|			,
	|			Организация = &Организация
	|				И СчетФактура = &ИсходныйСчетФактура
	|				И ДоговорКонтрагента = &ДоговорКонтрагента) КАК ЗаписиКнигиПокупок";*/
			/*СтруктураТаблиц = Новый Структура();*/
			/*СтруктураТаблиц.Вставить("НДСЗаписиКнигиПокупок", Запрос.Выполнить().Выгрузить());*/
			/*// Регистр накопления НДСПредъявленный
*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	НДСПредъявленныйОстатки.Организация,
	|	НДСПредъявленныйОстатки.СчетФактура,
	|	НДСПредъявленныйОстатки.ВидЦенности,
	|	НДСПредъявленныйОстатки.СтавкаНДС,
	|	НДСПредъявленныйОстатки.СчетУчетаНДС,
	|	НДСПредъявленныйОстатки.Поставщик,
	|	НДСПредъявленныйОстатки.ДоговорКонтрагента,
	|	НДСПредъявленныйОстатки.ИсправленныйСчетФактура,
	|	НДСПредъявленныйОстатки.СуммаБезНДСОстаток КАК СуммаБезНДС,
	|	НДСПредъявленныйОстатки.НДСОстаток КАК НДС,
	|	&Период КАК ДатаСобытия
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный.Остатки(
	|			&МоментДокумента,
	|			Организация = &Организация
	|				И СчетФактура = &ИсходныйСчетФактура
	|				И ДоговорКонтрагента = &ДоговорКонтрагента) КАК НДСПредъявленныйОстатки";*/
			/*СтруктураТаблиц.Вставить("НДСПредъявленный", Запрос.Выполнить().Выгрузить());*/
			/*// Регистр накопления НДСсАвансов
*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	НДСсАвансовОстатки.Организация,
	|	НДСсАвансовОстатки.СчетФактура,
	|	НДСсАвансовОстатки.ВидЦенности,
	|	НДСсАвансовОстатки.СтавкаНДС,
	|	НДСсАвансовОстатки.Покупатель,
	|	НДСсАвансовОстатки.ДоговорКонтрагента,
	|	НДСсАвансовОстатки.ИсправленныйСчетФактура,
	|	НДСсАвансовОстатки.ВалютаАванса,
	|	НДСсАвансовОстатки.ВалютнаяСуммаСНДСОстаток КАК ВалютнаяСуммаСНДС,
	|	НДСсАвансовОстатки.СуммаБезНДСОстаток КАК СуммаБезНДС,
	|	НДСсАвансовОстатки.НДСОстаток КАК НДС,
	|	&Период КАК ДатаСобытия
	|ИЗ
	|	РегистрНакопления.НДСсАвансов.Остатки(
	|			&МоментДокумента,
	|			Организация = &Организация
	|				И СчетФактура = &ИсходныйСчетФактура
	|				И ДоговорКонтрагента = &ДоговорКонтрагента) КАК НДСсАвансовОстатки";*/
			/*СтруктураТаблиц.Вставить("НДСсАвансов", Запрос.Выполнить().Выгрузить());*/
			return null;
		}

		public void СформироватьСторноДвиженияИсправляемыйСчетФактуруПолученный(/*СтруктураШапкиДокумента, СтруктураТаблицСторноНДС, Движения*/)
		{
			/*// Если НДС по исправляемому счету-фактуре еще не был принят к вычету (не был отражен в книге покупок), 
*/
			/*// списываем остатки регистра НДСПредъявленный
*/
			if(true/*СтруктураТаблицСторноНДС.НДСПредъявленный.Количество() > 0*/)
			{
				/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения, "НДСПредъявленный", СтруктураШапкиДокумента.Ссылка);*/
				/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения, "НДСЗаписиКнигиПокупок", СтруктураШапкиДокумента.Ссылка);*/
				/*ДатаИсходногоДокумента = СтруктураШапкиДокумента.ДокументОснование.Дата;*/
			}
			/*// Если счет-фактура был отражен в книге покупок ранее, делаем сторно движения
*/
			if(true/*СтруктураТаблицСторноНДС.НДСЗаписиКнигиПокупок.Количество() > 0*/)
			{
				/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения, "НДСЗаписиКнигиПокупок", СтруктураШапкиДокумента.Ссылка);*/
			}
			/*// Списываем остатки регистра НДСсАвансов по исправляемому счету-фактуре
*/
			if(true/*СтруктураТаблицСторноНДС.НДСсАвансов.Количество() > 0*/)
			{
				/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения, "НДСсАвансов", СтруктураШапкиДокумента.Ссылка);*/
			}
		}

		public void СформироватьСторноПроводкиСчетФактураПолученныйНаАванс(/*СтруктураШапкиДокумента, СтруктураТаблицСторноНДС, Движения*/)
		{
			/*// Сторнирующие проводки Дт 68.02 Кт 76.ВА по оборотам книги покупок
*/
			if(true/*СтруктураТаблицСторноНДС.НДСЗаписиКнигиПокупок.Количество() > 0*/)
			{
				/*ДобавитьНаборРегистраБухгалтерииВСтруктуруДвижений(Движения, "Хозрасчетный", СтруктураШапкиДокумента.Ссылка);*/
			}
		}
		//////////////////////////////////////////////////////////////////////////
		//  РЕГИСТРАЦИЯ ДОКУМЕНТОВ

		public void ЗарегистрироватьВЖурналеУчетаСчетовФактур(/*СтруктураШапкиДокумента, СуммаДокументаДляРегистрацииВЖурнале = 0, НДСДокументаДляРегистрацииВЖурнале = 0, Отказ, Заголовок*/)
		{
			if(true/*УчетНДС.ПолучитьВерсиюПостановления(СтруктураШапкиДокумента.Дата) = 1*/)
			{
			}
			/*ДвиженияЖурналУчетаСчетовФактур = РегистрыСведений.ЖурналУчетаСчетовФактур.СоздатьНаборЗаписей();*/
			/*ДвиженияЖурналУчетаСчетовФактур.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);*/
			/*СтрокаДвижения = ДвиженияЖурналУчетаСчетовФактур.Добавить();*/
			/*СтрокаДвижения.Период          = СтруктураШапкиДокумента.Дата;*/
			/*СтрокаДвижения.Организация     = СтруктураШапкиДокумента.Организация;*/
			/*СтрокаДвижения.Контрагент      = СтруктураШапкиДокумента.Контрагент;*/
			/*СтрокаДвижения.СчетФактура     = СтруктураШапкиДокумента.Ссылка;*/
			/*СтрокаДвижения.КодВидаОперации = СтруктураШапкиДокумента.КодВидаОперации;*/
			/*СтрокаДвижения.Валюта          = СтруктураШапкиДокумента.ВалютаДокумента;*/
			/*РасчетыВУсловныхЕдиницах = Ложь;*/
			if(true/*СтруктураШапкиДокумента.Свойство("РасчетыВУсловныхЕдиницах")*/)
			{
				if(true/*СтруктураШапкиДокумента.РасчетыВУсловныхЕдиницах = Истина*/)
				{
					/*СтрокаДвижения.Валюта = СтруктураШапкиДокумента.ВалютаРегламентированногоУчета;*/
					if(true/*СтруктураШапкиДокумента.ВалютаДокумента <> СтруктураШапкиДокумента.ВалютаРегламентированногоУчета*/)
					{
						/*РасчетыВУсловныхЕдиницах = Истина;*/
					}
				}
			}
			if(true/*СтруктураШапкиДокумента.ВидДокумента = "СчетФактураПолученный"*/)
			{
				/*СтрокаДвижения.ЧастьЖурнала = Перечисления.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры;*/
				/*СтрокаДвижения.ДатаВыставленияПолучения       = СтруктураШапкиДокумента.Дата;*/
				/*СтрокаДвижения.КодСпособаВыставленияПолучения = СтруктураШапкиДокумента.КодСпособаПолучения;*/
				if(true/*СтруктураШапкиДокумента.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный*/)
				{
					/*СтрокаДвижения.НомерСчетаФактуры = СтруктураШапкиДокумента.НомерИсходногоДокумента;*/
					/*СтрокаДвижения.ДатаСчетаФактуры  = СтруктураШапкиДокумента.ДатаИсходногоДокумента;*/
					/*СтрокаДвижения.НомерКорректировочногоСчетаФактуры = СтруктураШапкиДокумента.НомерВходящегоДокумента;*/
					/*СтрокаДвижения.ДатаКорректировочногоСчетаФактуры  = СтруктураШапкиДокумента.ДатаВходящегоДокумента;*/
					/*СтрокаДвижения.СуммаПоСчетуФактуреРазницаУменьшение = СтруктураШапкиДокумента.СуммаУменьшение;*/
					/*СтрокаДвижения.СуммаПоСчетуФактуреРазницаУвеличение = СтруктураШапкиДокумента.СуммаУвеличение;*/
					/*СтрокаДвижения.СуммаНДСРазницаУменьшение            = СтруктураШапкиДокумента.СуммаНДСУменьшение;*/
					/*СтрокаДвижения.СуммаНДСРазницаУвеличение            = СтруктураШапкиДокумента.СуммаНДСУвеличение;*/
				}
				if(true/*СтруктураШапкиДокумента.Исправление*/)
				{
					/*СтрокаДвижения.НомерИсправления = СтруктураШапкиДокумента.НомерИсправления;*/
					/*СтрокаДвижения.ДатаИсправления  = СтруктураШапкиДокумента.ДатаИсправления;*/
				}
				if(true/*РасчетыВУсловныхЕдиницах И НЕ СтруктураШапкиДокумента.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный*/)
				{
					/*ПараметрыСФ = Неопределено;*/
					/*ПересчитатьСчетФактуруВРубли(СтруктураШапкиДокумента.Ссылка, СтруктураШапкиДокумента, ПараметрыСФ);*/
					/*СтрокаДвижения.СуммаПоСчетуФактуре = ПараметрыСФ.СуммаДокумента;*/
					/*СтрокаДвижения.СуммаНДС            = ПараметрыСФ.СуммаНДСДокумента;*/
				}
				/*СтрокаДвижения.ПоСтавкеБезНДС = СтруктураШапкиДокумента.СчетФактураБезНДС;*/
			}
			/*ДвиженияЖурналУчетаСчетовФактур.Записать();*/
		}
		///////////////////////////////////////////
		// Блок пересчета сумм у.е. в рубли
		// при регистрации счета-фактуры в Журнале

		public void ПересчитатьСчетФактуруВРубли(/*СчетФактура, СтруктураШапкиДокумента, Результат*/)
		{
			/*Результат = Новый Структура("СуммаДокумента, СуммаНДСДокумента");*/
			/*СуммаДокумента    = 0;*/
			/*СуммаНДСДокумента = 0;*/
			/*Результат.СуммаДокумента    = СуммаДокумента;*/
			/*Результат.СуммаНДСДокумента = СуммаНДСДокумента;*/
		}

		public object ПолучитьСуммуВзаиморасчетов(/*СчетФактура, ТекущееОснование, СтруктураШапкиДокумента*/)
		{
			if(true/*ТипЗнч(СчетФактура) = Тип("ДокументСсылка.СчетФактураВыданный")*/)
			{
				/*ИмяРегистра = "РасчетыПоРеализацииВУсловныхЕдиницахОрганизации";*/
			}
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("Ссылка", 			ТекущееОснование);*/
			/*Запрос.УстановитьПараметр("Организация", 		СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("Контрагент",         СтруктураШапкиДокумента.Контрагент);*/
			/*Запрос.УстановитьПараметр("ДоговорКонтрагента", СтруктураШапкиДокумента.ДоговорКонтрагента);*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	2 КАК ПриоритетСортировки,
	|	СУММА(РасчетыПоРеализации.СуммаРег) КАК СуммаРег,
	|	СУММА(РасчетыПоРеализации.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	|	СУММА(РасчетыПоРеализации.СуммаВзаиморасчетов) КАК СуммаДокумента,
	|	РасчетыПоРеализации.Регистратор КАК ДокументОснование
	|ИЗ
	|	РегистрНакопления.РасчетыПоРеализацииВУсловныхЕдиницахОрганизации КАК РасчетыПоРеализации
	|ГДЕ
	|	РасчетыПоРеализации.Регистратор = &Ссылка
	|	И РасчетыПоРеализации.Активность = ИСТИНА
	|	И РасчетыПоРеализации.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И РасчетыПоРеализации.Организация = &Организация
	|	И РасчетыПоРеализации.Контрагент = &Контрагент
	|	И РасчетыПоРеализации.ДоговорКонтрагента = &ДоговорКонтрагента
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыПоРеализации.Регистратор";*/
			if(true/*ЗначениеЗаполнено(ТекущееОснование) 
		 И ТекущееОснование.Метаданные().ТабличныеЧасти.Найти("ДокументыРасчетовСКонтрагентом") <> Неопределено*/)
			{
				/*Запрос.Текст = Запрос.Текст + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	1 КАК ПриоритетСортировки,
		|	СУММА(ТЧПредоплата.СуммаРегл) КАК СуммаРегл,
		|	СУММА(ТЧПредоплата.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
		|	МАКСИМУМ(ТЧПредоплата.Ссылка.СуммаДокумента) КАК СуммаДокумента,
		|	ТЧПредоплата.Ссылка КАК ДокументОснование
		|ИЗ
		|	Документ." + ТекущееОснование.Метаданные().Имя + ".ДокументыРасчетовСКонтрагентом КАК ТЧПредоплата
		|ГДЕ
		|	ТЧПредоплата.Ссылка = &Ссылка
		|	И ЕСТЬNULL(ТЧПредоплата.Ссылка.ДоговорКонтрагента.ВестиПоДокументамРасчетовСКонтрагентом, ЛОЖЬ)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТЧПредоплата.Ссылка
		|";*/
			}
			/*Запрос.Текст = Запрос.Текст + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПриоритетСортировки
	|";*/
			/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "РасчетыПоРеализацииВУсловныхЕдиницахОрганизации", ИмяРегистра);*/
			if(true/*ТипЗнч(ТекущееОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") ИЛИ
		ТипЗнч(ТекущееОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщикуИзНТТ")*/)
			{
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "РегистрНакопления.РасчетыПоРеализацииВУсловныхЕдиницахОрганизации", "РегистрНакопления.РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации");*/
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "РасчетыПоРеализации.СуммаРег", "-РасчетыПоРеализации.СуммаРег");*/
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "РасчетыПоРеализации.СуммаВзаиморасчетов", "-РасчетыПоРеализации.СуммаВзаиморасчетов");*/
			}
			/*ИспользоватьКурсДокумента = Ложь;*/
			/*Результат = Запрос.Выполнить();*/
			/*СуммаПредоплаты = 0;*/
			/*СуммаВзаиморасчетов = 0;*/
			if(true/*НЕ Результат.Пустой()*/)
			{
				/*Выборка = Результат.Выбрать();*/
				if(true/*Выборка.Следующий()*/)
				{
					if(true/*Выборка.СуммаВзаиморасчетов = Выборка.СуммаДокумента*/)
					{
						/*// Предоплата на полную сумму документа.
*/
						/*// Сумма в валюте регл. учета полностью определяется по курсу аванса.
*/
					}
				}
			}
			/*// документ основание не проведен или это корректировка
*/
			if(true/*ТипЗнч(ТекущееОснование) = Тип("ДокументСсылка.КорректировкаРеализации")*/)
			{
				/*ИсходныйДокумент = УчетНДС.ПолучитьИсправляемыйДокументРеализации(ТекущееОснование.ДокументРеализации, Истина);*/
			}
			/*СтруктураКурсов = МодульВалютногоУчета.ПолучитьКурсВалюты(ИсходныйДокумент.ВалютаДокумента, ИсходныйДокумент.Дата);*/
			/*ВалютаРеглУчета = Неопределено;*/
			if(true/*НЕ СтруктураШапкиДокумента.Свойство("ВалютаРегламентированногоУчета", ВалютаРеглУчета)*/)
			{
				/*ВалютаРеглУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета");*/
			}
			/*СуммаВзаиморасчетов = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СуммаВзаиморасчетов,
		ТекущееОснование.ВалютаДокумента, ВалютаРеглУчета, 
		СтруктураКурсов.Курс, 1,
		СтруктураКурсов.Кратность, 1);*/
			return null;
		}

		public object ПолучитьТаблицуДокументаНДС(/*ТекущееОснование*/)
		{
			/*ТекущийОбъект = ТекущееОснование.ПолучитьОбъект();*/
			/*СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ТекущийОбъект);*/
			/*СтруктураПолей = Новый Структура();*/
			/*СтруктураПолей.Вставить("Номенклатура"        , "Номенклатура");*/
			/*СтруктураПолей.Вставить("Сумма"               , "Сумма");*/
			/*СтруктураПолей.Вставить("СтавкаНДС"           , "СтавкаНДС");*/
			/*СтруктураПолей.Вставить("НДС"                 , "СуммаНДС");*/
			/*СтруктураПолей.Вставить("НомерСтроки"         , "НомерСтроки");*/
			if(true/*ТипЗнч(ТекущееОснование) = Тип("ДокументСсылка.РеализацияУслугПоПереработке")*/)
			{
				/*ИмяТабличнойЧасти = "Услуги";*/
				/*НДСВключенВСтоимость = Истина;*/
			}
			/*РезультатЗапроса = УправлениеЗапасами.СформироватьЗапросПоТабличнойЧасти(ТекущийОбъект, ИмяТабличнойЧасти, СтруктураПолей);*/
			/*// Подготовим таблицу услуг для проведения.
*/
			/*ТаблицаЗапроса = РезультатЗапроса.Выгрузить();*/
			/*БухгалтерскийУчетРасчетовСКонтрагентами.ПодготовкаТаблицыЗначенийДляЦелейПриобретенияИРеализации(ТаблицаЗапроса, СтруктураШапкиДокумента, НДСВключенВСтоимость);*/
			return null;
		}

		public object ЭтоДокументПоСтавкеБезНДС(/*ДокументСсылка*/)
		{
			/*МетаданныеДокумента = ДокументСсылка.Метаданные();*/
			/*ШаблонТекста =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таб.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК Таб
	|ГДЕ
	|	Таб.Ссылка = &ДокументСсылка
	|	И Таб.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)";*/
			/*ШаблонОбъединения =
	"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|";*/
			/*ТекстЗапроса = "";*/
			if(true/*МетаданныеДокумента.Реквизиты.Найти("СтавкаНДС") <> Неопределено*/)
			{
				/*ТекстЗапроса = ТекстЗапроса + ?(ПустаяСтрока(ТекстЗапроса), "", ШаблонОбъединения)
			+ СтрЗаменить(ШаблонТекста, "РеализацияТоваровУслуг.Товары", МетаданныеДокумента.Имя);*/
			}
			if(true/*ПустаяСтрока(ТекстЗапроса)*/)
			{
			}
			return null;
		}

		public void ДополнитьНомерИндексомОбособленногоПодразделения(/*СтруктураШапкиДокумента, НомерДокумента*/)
		{
			/*РеквизитыОрганизации = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(
		СтруктураШапкиДокумента.Организация, "ГоловнаяОрганизация,ЦифровойИндексОбособленногоПодразделения");*/
			if(true/*НЕ ЗначениеЗаполнено(РеквизитыОрганизации.ГоловнаяОрганизация)*/)
			{
			}
			if(true/*ЗначениеЗаполнено(РеквизитыОрганизации.ЦифровойИндексОбособленногоПодразделения)*/)
			{
				/*НомерДокумента = НомерДокумента + "/" + РеквизитыОрганизации.ЦифровойИндексОбособленногоПодразделения;*/
			}
		}
		////////////////////////////////////////////////////////////////////////////////////////////////////
		// АВАНСЫ ПО ДОГОВОРАМ КОМИССИИ

		public void СформироватьДвиженияАвансыПоДоговорамКомиссии(/*СтруктураШапкиДокумента, ТаблицаПоДенежнымСредствам*/)
		{
			if(true/*УчетНДС.ПолучитьВерсиюПостановления(СтруктураШапкиДокумента.Дата) = 1*/)
			{
			}
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("ТаблицаПоДенежнымСредствам", ТаблицаПоДенежнымСредствам);*/
			/*Запрос.УстановитьПараметр("СуммаВключаетНДС", СтруктураШапкиДокумента.СуммаВключаетНДС);*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаПоДенежнымСредствам.ВидОтчетаПоПлатежам,
	|	ТаблицаПоДенежнымСредствам.Покупатель,
	|	ТаблицаПоДенежнымСредствам.ДатаСобытия,
	|	ТаблицаПоДенежнымСредствам.Сумма,
	|	ТаблицаПоДенежнымСредствам.СтавкаНДС,
	|	ТаблицаПоДенежнымСредствам.СуммаНДС
	|ПОМЕСТИТЬ ВТТаблицаПоДенежнымСредствам
	|ИЗ
	|	&ТаблицаПоДенежнымСредствам КАК ТаблицаПоДенежнымСредствам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПоДС.Покупатель,
	|	ТаблицаПоДС.ДатаСобытия КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА &СуммаВключаетНДС
	|			ТОГДА ТаблицаПоДС.Сумма - ТаблицаПоДС.СуммаНДС
	|		ИНАЧЕ ТаблицаПоДС.Сумма
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ТаблицаПоДС.СтавкаНДС,
	|	ТаблицаПоДС.СуммаНДС КАК НДС
	|ИЗ
	|	ВТТаблицаПоДенежнымСредствам КАК ТаблицаПоДС
	|ГДЕ
	|	ТаблицаПоДС.ВидОтчетаПоПлатежам = ЗНАЧЕНИЕ(Перечисление.ВидыОтчетовПоПлатежамКомиссия.Аванс)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаСобытия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПоДС.Покупатель,
	|	ТаблицаПоДС.ДатаСобытия КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА &СуммаВключаетНДС
	|			ТОГДА ТаблицаПоДС.Сумма - ТаблицаПоДС.СуммаНДС
	|		ИНАЧЕ ТаблицаПоДС.Сумма
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ТаблицаПоДС.СтавкаНДС,
	|	ТаблицаПоДС.СуммаНДС КАК НДС
	|ИЗ
	|	ВТТаблицаПоДенежнымСредствам КАК ТаблицаПоДС
	|ГДЕ
	|	ТаблицаПоДС.ВидОтчетаПоПлатежам = ЗНАЧЕНИЕ(Перечисление.ВидыОтчетовПоПлатежамКомиссия.ЗачетАванса)";*/
			/*Результат = Запрос.ВыполнитьПакет();*/
			/*ТаблицаАвансы = Результат[1].Выгрузить();*/
			/*ТаблицаЗачетАвансов = Результат[2].Выгрузить();*/
			/*Движения = Новый Структура;*/
			/*ДобавитьНаборЗаписейВСтруктуруДвижений(Движения, "НДСАвансыПоДоговорамКомиссии", СтруктураШапкиДокумента.Ссылка);*/
			/*СформироватьДвиженияПолученАвансОтПокупателя(СтруктураШапкиДокумента, ТаблицаАвансы, Движения);*/
			if(true/*ТаблицаЗачетАвансов.Количество() > 0*/)
			{
				/*СформироватьДвиженияЗачетАвансаПокупателя(СтруктураШапкиДокумента, ТаблицаЗачетАвансов, Движения);*/
			}
		}

		public void СформироватьДвиженияПолученАвансОтПокупателя(/*СтруктураШапкиДокумента, ТаблицаАвансы, Движения*/)
		{
		}

		public void СформироватьДвиженияЗачетАвансаПокупателя(/*СтруктураШапкиДокумента, ТаблицаЗачетАвансов, Движения*/)
		{
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("Дата", Новый Граница(СтруктураШапкиДокумента.Дата, ВидГраницы.Исключая));*/
			/*Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("Комиссионер", СтруктураШапкиДокумента.Контрагент);*/
			/*Запрос.УстановитьПараметр("СписокПокупателей", ТаблицаЗачетАвансов.ВыгрузитьКолонку("Покупатель"));*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСАвансыПоДоговорамКомиссииОстатки.СчетФактура КАК СчетФактура,
	|	НДСАвансыПоДоговорамКомиссииОстатки.СтавкаНДС КАК СтавкаНДС,
	|	НДСАвансыПоДоговорамКомиссииОстатки.Покупатель КАК Покупатель,
	|	НДСАвансыПоДоговорамКомиссииОстатки.ДатаСобытия КАК ДатаСобытия,
	|	НДСАвансыПоДоговорамКомиссииОстатки.СуммаБезНДСОстаток,
	|	НДСАвансыПоДоговорамКомиссииОстатки.НДСОстаток
	|ИЗ
	|	РегистрНакопления.НДСАвансыПоДоговорамКомиссии.Остатки(
	|			&Дата,
	|			Организация = &Организация
	|				И Комиссионер = &Комиссионер
	|				И Покупатель В (&СписокПокупателей)) КАК НДСАвансыПоДоговорамКомиссииОстатки
	|
	|УПОРЯДОЧИТЬ ПО
	|	НДСАвансыПоДоговорамКомиссииОстатки.ДатаСобытия";*/
			/*ТаблицаОстатков = Запрос.Выполнить().Выгрузить();*/
			/*ТаблицаОстатков.Индексы.Добавить("Покупатель, СтавкаНДС");*/
			/*ТаблицаЗачетАвансов.Свернуть("Покупатель, СтавкаНДС", "СуммаБезНДС, НДС");*/
		}
		////////////////////////////////////////////////////////////////////////////////////////////////////
		// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ  И ФУНКЦИИ

		public void ДобавитьНаборЗаписейВСтруктуруДвижений(/*СтруктураДвижений,ИмяРегистра,СсылкаНаДокумент*/)
		{
			if(true/*не СтруктураДвижений.Свойство(ИмяРегистра)*/)
			{
				/*СтруктураДвижений.Вставить(ИмяРегистра,РегистрыНакопления[ИмяРегистра].СоздатьНаборЗаписей());*/
				/*СтруктураДвижений[ИмяРегистра].Отбор.Регистратор.Установить(СсылкаНаДокумент);*/
			}
		}

		public void ДобавитьНаборРегистраБухгалтерииВСтруктуруДвижений(/*СтруктураДвижений,ИмяРегистра,СсылкаНаДокумент*/)
		{
			if(true/*не СтруктураДвижений.Свойство(ИмяРегистра)*/)
			{
				/*СтруктураДвижений.Вставить(ИмяРегистра,РегистрыБухгалтерии[ИмяРегистра].СоздатьНаборЗаписей());*/
				/*СтруктураДвижений[ИмяРегистра].Отбор.Регистратор.Установить(СсылкаНаДокумент);*/
			}
		}
		////////////////////////////////////////////////////////////////////////////////
		// РЕГЛАМЕНТНОЕ ЗАДАНИЕ

		public object ЗаписатьСформированныйРегламентныйДокумент(/*ДокументОбъект*/)
		{
			if(true/*ДокументОбъект.Проведен*/)
			{
				/*ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);*/
			}
			/*Отказ = Ложь;*/
			/*//Переменная используется при проведении документа. Т.к. вне транзакции могут проводиться только непроведенные документы, то движения очищать не нужно
*/
			/*ДокументОбъект.мУдалятьДвижения = Ложь;*/
			/*ДокументОбъект.ОбработкаПроведения(Отказ, РежимПроведенияДокумента.Неоперативный);*/
			if(true/*Не Отказ*/)
			{
				/*//Если при выполнении процедуры ОбработкаПроведения() были добавлены движения в коллекцию Движения, то их нужно записать
*/
				/*ДокументОбъект.Проведен = Истина;*/
				/*ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);*/
			}
			return null;
		}

		public void СформироватьРегламентныеДокументыПоНДС(/*Настройка, СформированныеДокументы = Неопределено*/)
		{
			/*СформированныеДокументы = Новый Массив;*/
			/*ДатаДокумента = КонецМесяца(Настройка.Дата);*/
			/*// Начисление НДС по СМР хозспособом
*/
			/*ДокументОбъект = Документы.НачислениеНДСпоСМРхозспособом.СоздатьДокумент();*/
			/*ДокументОбъект.Дата = ДатаДокумента;*/
			/*ДокументОбъект.Организация = Настройка.Организация;*/
			/*ДокументОбъект.ЗаполнитьДокумент(, Ложь, , Истина, Истина);*/
			if(true/*ДокументОбъект.СМРХозспособом.Количество() <> 0*/)
			{
				/*СформированныеДокументы.Добавить(ЗаписатьСформированныйРегламентныйДокумент(ДокументОбъект));*/
				/*СчетФактура = Документы.СчетФактураВыданный.СоздатьДокумент();*/
				/*СчетФактура.Заполнить(ДокументОбъект.Ссылка);*/
				/*СчетФактура.Записать(РежимЗаписиДокумента.Проведение);*/
			}
			/*// Расчет НДС по продукции
*/
			if(true/*Метаданные.Документы.Найти("РасчетНДСпоПродукции") <> Неопределено*/)
			{
				/*Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
		                      |	РасчетНДСпоПродукции.Ссылка
		                      |ИЗ
		                      |	Документ.РасчетНДСпоПродукции КАК РасчетНДСпоПродукции
		                      |ГДЕ
		                      |	РасчетНДСпоПродукции.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
		                      |	И РасчетНДСпоПродукции.Проведен
		                      |	И РасчетНДСпоПродукции.Организация = &Организация
		                      |
		                      |УПОРЯДОЧИТЬ ПО
		                      |	РасчетНДСпоПродукции.Дата,
		                      |	РасчетНДСпоПродукции.Ссылка");*/
				/*Запрос.УстановитьПараметр("Дата", ДатаДокумента);*/
				/*Запрос.УстановитьПараметр("Организация", Настройка.Организация);*/
				/*Результат = Запрос.Выполнить();*/
				if(true/*НЕ Результат.Пустой()*/)
				{
					/*Выборка = Результат.Выбрать();*/
					/*Выборка.Следующий();*/
					/*ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();*/
				}
			}
			/*// Распределение НДС по косвенным расходам
*/
			/*ДокументОбъект = Документы.РаспределениеНДСКосвенныхРасходов.СоздатьДокумент();*/
			/*ДокументОбъект.Дата = ДатаДокумента;*/
			/*ДокументОбъект.НачалоПериода = НачалоКвартала(ДатаДокумента);*/
			/*ДокументОбъект.Организация = Настройка.Организация;*/
			/*ДокументОбъект.ЗаполнитьДокумент(, Ложь, , Истина);*/
			if(true/*ДокументОбъект.СоставКосвенныхРасходов.Количество() <> 0*/)
			{
				/*СформированныеДокументы.Добавить(ЗаписатьСформированныйРегламентныйДокумент(ДокументОбъект));*/
			}
			/*// Восстановление НДС
*/
			/*ДокументОбъект = Документы.ВосстановлениеНДС.СоздатьДокумент();*/
			/*ДокументОбъект.Дата = ДатаДокумента;*/
			/*ДокументОбъект.Организация = Настройка.Организация;*/
			/*ДокументОбъект.ЗаполнитьДокумент(, Ложь, , Истина, Истина);*/
			if(true/*ДокументОбъект.Состав.Количество() <> 0*/)
			{
				/*СформированныеДокументы.Добавить(ЗаписатьСформированныйРегламентныйДокумент(ДокументОбъект));*/
			}
			/*// Формирование записей книги покупок
*/
			/*ДокументОбъект = Документы.ФормированиеЗаписейКнигиПокупок.СоздатьДокумент();*/
			/*ДокументОбъект.Дата = ДатаДокумента;*/
			/*ДокументОбъект.Организация = Настройка.Организация;*/
			/*ДокументОбъект.ЗаполнитьДокумент(, Ложь, , Истина, Истина);*/
			/*СформированныеДокументы.Добавить(ЗаписатьСформированныйРегламентныйДокумент(ДокументОбъект));*/
			/*// Формирование записей книги покупок 0%
*/
			/*ДокументОбъект = Документы.ФормированиеЗаписейКнигиПокупок.СоздатьДокумент();*/
			/*ДокументОбъект.Дата = ДатаДокумента;*/
			/*ДокументОбъект.Организация = Настройка.Организация;*/
			/*ДокументОбъект.ПредъявленНДСКВычету0 = Истина;*/
			/*ДокументОбъект.ЗаполнитьДокумент(, Ложь, , Истина, Истина);*/
			if(true/*ДокументОбъект.ВычетПоПриобретеннымЦенностям.Количество() <> 0 
		Или ДокументОбъект.НДСсАвансов.Количество() <> 0*/)
			{
				/*СформированныеДокументы.Добавить(ЗаписатьСформированныйРегламентныйДокумент(ДокументОбъект));*/
			}
			/*// Формирование записей книги продаж
*/
			/*ДокументОбъект = Документы.ФормированиеЗаписейКнигиПродаж.СоздатьДокумент();*/
			/*ДокументОбъект.Дата = ДатаДокумента;*/
			/*ДокументОбъект.Организация = Настройка.Организация;*/
			/*ДокументОбъект.ЗаполнитьДокумент(, Ложь, , Истина, Истина);*/
			/*СформированныеДокументы.Добавить(ЗаписатьСформированныйРегламентныйДокумент(ДокументОбъект));*/
			/*// Формирование записей книги продаж 0%
*/
			/*ДокументОбъект = Документы.ФормированиеЗаписейКнигиПродаж.СоздатьДокумент();*/
			/*ДокументОбъект.Дата = ДатаДокумента;*/
			/*ДокументОбъект.Организация = Настройка.Организация;*/
			/*ДокументОбъект.Реализация0 = Истина;*/
			/*ДокументОбъект.ЗаполнитьДокумент(, Ложь, , Истина, Истина);*/
			if(true/*ДокументОбъект.Реализация.Количество() <> 0*/)
			{
				/*СформированныеДокументы.Добавить(ЗаписатьСформированныйРегламентныйДокумент(ДокументОбъект));*/
			}
		}
	}
}

