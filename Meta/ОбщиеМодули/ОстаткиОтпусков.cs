using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace V82.ОбщиеМодули
{
	public partial class ОстаткиОтпусков
	{
		////////////////////////////////////////////////////////////////////////////////
		// ПОДСИСТЕМА ОСТАТКИ ОТПУСКОВ
		//
		////////////////////////////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////////////////
		// ПРОГРАММНЫЙ ИНТЕРФЕЙС

		public object ОстатокОтпускаСотрудникаНаДату(/*Знач Сотрудник, Знач ДатаОстатков = '00010101', Знач ЭтоРасчетПриУвольнении = Ложь, ПорядокРасчетаОсновногоОтпуска = Неопределено*/)
		{
			if(true/*Не ЗначениеЗаполнено(Сотрудник)*/)
			{
			}
			if(true/*Не ЗначениеЗаполнено(ДатаОстатков)*/)
			{
				/*ДатаОстатков = ОбщегоНазначения.ПолучитьРабочуюДату();*/
			}
			/*ТаблицаДанных = ОписаниеТаблицыДанных();*/
			/*Строка = ТаблицаДанных.Добавить();*/
			/*Строка.Сотрудник							= Сотрудник;*/
			/*Строка.ДатаОстатков							= НачалоДня(ДатаОстатков);*/
			/*Строка.ЭтоРасчетПриУвольнении				= ЭтоРасчетПриУвольнении;*/
			if(true/*ЭтоРасчетПриУвольнении*/)
			{
				/*Строка.ПорядокРасчетаОсновногоОтпуска	= ПорядокРасчетаОсновногоОтпуска;*/
			}
			/*Результат = ОстаткиОтпусков(ТаблицаДанных)[0];*/
			/*ОстаткиВРазрезеРабочихЛетИВидовОтпусков = Новый Массив;*/
			return null;
		}

		public object ОстатокОтпускаСпискаСотрудниковНаДату(/*Знач МассивСотрудников, Знач ДатаОстатков = '00010101'*/)
		{
			if(true/*Не ЗначениеЗаполнено(ДатаОстатков)*/)
			{
				/*ДатаОстатков = ОбщегоНазначения.ПолучитьРабочуюДату();*/
			}
			/*ТаблицаДанных = ОписаниеТаблицыДанных();*/
			/*Результат = ОстаткиОтпусков(ТаблицаДанных);*/
			/*ТаблицаСведений = Новый ТаблицаЗначений;*/
			/*ТаблицаСведений.Колонки.Добавить("Сотрудник");*/
			/*ТаблицаСведений.Колонки.Добавить("ОстатокНаДату");*/
			/*ТаблицаСведений.Колонки.Добавить("РабочийГодС");*/
			/*ТаблицаСведений.Колонки.Добавить("РабочийГодПо");*/
			/*ТаблицаСведений.Колонки.Добавить("Примечание");*/
			/*ТаблицаСведений.Колонки.Добавить("ОстаткиВРазрезеВидовОтпусков");*/
			/*ТаблицаСведений.Колонки.Добавить("ОстаткиВРазрезеРабочихЛетИВидовОтпусков");*/
			return null;
		}

		public object СведенияОбОтпускахСпискаСотрудников(/*Знач ТаблицаОтпусков, Знач ТекущийРегистратор = Неопределено, Знач ЭтоЗапланированныйОтпуск = Ложь, Знач ДатаДокумента = '00010101'*/)
		{
			if(true/*Не ЗначениеЗаполнено(ДатаДокумента)*/)
			{
				/*ДатаДокумента = НачалоДня(ОбщегоНазначения.ПолучитьРабочуюДату());*/
			}
			/*ТаблицаДанных = ОписаниеТаблицыДанных();*/
			/*ТаблицаСведений = Новый ТаблицаЗначений;*/
			/*ТаблицаСведений.Колонки.Добавить("Сотрудник");*/
			/*ТаблицаСведений.Колонки.Добавить("ДатаНачала");*/
			/*ТаблицаСведений.Колонки.Добавить("ДатаОкончания");*/
			/*ТаблицаСведений.Колонки.Добавить("РабочийГодС");*/
			/*ТаблицаСведений.Колонки.Добавить("РабочийГодПо");*/
			/*ТаблицаСведений.Колонки.Добавить("Примечание");*/
			/*ТаблицаСведений.Колонки.Добавить("ВидЕжегодногоОтпуска");*/
			/*ТаблицаСведений.Колонки.Добавить("КоличествоДнейВсего");*/
			/*ТаблицаСведений.Колонки.Добавить("КоличествоДнейПрошлыхЛет");*/
			/*ТаблицаСведений.Колонки.Добавить("КоличествоДнейАвансом");*/
			/*ТаблицаСведений.Колонки.Добавить("ОстаткиВРазрезеВидовОтпусков");*/
			if(true/*ТаблицаДанных.Количество() = 0*/)
			{
			}
			/*Результат = ОстаткиОтпусков(ТаблицаДанных);*/
			return null;
		}

		public object РабочийГодПериодаОтпуска(/*Знач Сотрудник, Знач ДатаНачала, Знач ДатаОкончания, Знач ТекущийРегистратор, Знач ПорядокРасчетаОсновногоОтпуска, Знач ИсключитьОсновнойОтпуск, Знач ДополнительныйОтпуск*/)
		{
			if(true/*ПорядокРасчетаОсновногоОтпуска = Неопределено*/)
			{
				/*ПорядокРасчетаОсновногоОтпуска = Перечисления.ПорядокРасчетаОтпуска.ПустаяСсылка();*/
			}
			/*ТаблицаДанных = ОписаниеТаблицыДанных();*/
			/*Строка = ТаблицаДанных.Добавить();*/
			/*Строка.Сотрудник						= Сотрудник;*/
			/*Строка.ДатаОстатков						= НачалоДня(ДатаОкончания);*/
			/*Строка.ДатаНачала						= ДатаНачала;*/
			/*Строка.ДатаОкончания					= ДатаОкончания;*/
			/*Строка.ТекущийРегистратор				= ТекущийРегистратор;*/
			/*Строка.ПорядокРасчетаОсновногоОтпуска	= ПорядокРасчетаОсновногоОтпуска;*/
			/*Строка.ИсключитьОсновнойОтпуск			= ИсключитьОсновнойОтпуск;*/
			/*Строка.ДополнительныйОтпуск				= ДополнительныйОтпуск;*/
			/*Результат = ОстаткиОтпусков(ТаблицаДанных)[0];*/
			return null;
		}

		public object СправкаПоОтпускамСотрудника(/*Знач Сотрудник, Знач ДатаОстатков = '00010101', Знач ЭтоРасчетПриУвольнении = Ложь, ПорядокРасчетаОсновногоОтпуска = Неопределено*/)
		{
			if(true/*Не ЗначениеЗаполнено(Сотрудник)*/)
			{
			}
			if(true/*Не ЗначениеЗаполнено(ДатаОстатков)*/)
			{
				/*ДатаОстатков = ОбщегоНазначения.ПолучитьРабочуюДату();*/
			}
			/*ТаблицаДанных = ОписаниеТаблицыДанных();*/
			/*Строка = ТаблицаДанных.Добавить();*/
			/*Строка.Сотрудник							= Сотрудник;*/
			/*Строка.ДатаОстатков							= НачалоДня(ДатаОстатков);*/
			/*Строка.ЭтоРасчетПриУвольнении				= ЭтоРасчетПриУвольнении;*/
			if(true/*ЭтоРасчетПриУвольнении*/)
			{
				/*Строка.ПорядокРасчетаОсновногоОтпуска	= ПорядокРасчетаОсновногоОтпуска;*/
			}
			/*Результат = ОстаткиОтпусков(ТаблицаДанных)[0];*/
			/*ФорматДаты = "ДФ='d MMM yyyy ""г.""'";*/
			/*ТабДокумент = Новый ТабличныйДокумент;*/
			/*ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СправкаПоОтпускамСотрудника";*/
			/*Макет = ПолучитьОбщийМакет("СправкаПоОтпускамСотрудника");*/
			if(true/*Не ЗначениеЗаполнено(Результат.ДатаПриемаНаРаботу)*/)
			{
				/*ОбластьМакета = Макет.ПолучитьОбласть("ОбщиеДанные");*/
				/*ОбластьМакета.Параметры.Сотрудник						= Результат.Сотрудник;*/
				if(true/*Результат.Пол = Перечисления.ПолФизическихЛиц.Женский*/)
				{
					/*ОбластьМакета.Параметры.ОбособленноеПодразделение	= "Сотрудница не принята на работу";*/
				}
				/*ТабДокумент.Вывести(ОбластьМакета);*/
			}
			/*// Шапка отчета: место работы сотрудника и дата приема
*/
			/*ОбластьМакета = Макет.ПолучитьОбласть("ОбщиеДанные");*/
			/*ОбластьМакета.Параметры.Заполнить(Результат);*/
			/*ТабДокумент.Вывести(ОбластьМакета);*/
			/*ОбластьМакета = Макет.ПолучитьОбласть("Шапка");*/
			/*ОбластьМакета.Параметры.Период		= Формат(Результат.ДатаПриемаНаРаботу, ФорматДаты);*/
			if(true/*Результат.Пол = Перечисления.ПолФизическихЛиц.Женский*/)
			{
				/*ОбластьМакета.Параметры.Комментарий	= "Принята на работу";*/
			}
			/*ТабДокумент.Вывести(ОбластьМакета);*/
			if(true/*Результат.ПоложенныеПриПриемеНаРаботуВидыЕжегодныхОтпусков.Количество() > 0*/)
			{
				/*ОбластьМакета = Макет.ПолучитьОбласть("Строка");*/
				/*ОбластьМакета.Параметры.Текст			= "Ежегодно предоставляемые отпуска";*/
				/*ТабДокумент.Вывести(ОбластьМакета);*/
			}
			/*// Данные отчета в следующем порядке:
*/
			/*//  1 - Изменения дней отпуска в год
*/
			/*//  2 - Продления рабочего года
*/
			/*//  3 - Фактические отпуска
*/
			/*//  4 - Окончание рабочего года / Изменение остатка
*/
			/*ТаблицаМакетовЗаПериод = Новый ТаблицаЗначений;*/
			/*ТаблицаМакетовЗаПериод.Колонки.Добавить("Период");*/
			/*ТаблицаМакетовЗаПериод.Колонки.Добавить("ДополнительныйПериод");*/
			/*ТаблицаМакетовЗаПериод.Колонки.Добавить("Порядок");*/
			/*ТаблицаМакетовЗаПериод.Колонки.Добавить("МассивОбластей");*/
			/*ТаблицаМакетовЗаПериод.Сортировать("Период, ДополнительныйПериод, Порядок");*/
			/*// Подвал отчета: текущий остаток отпуска
*/
			/*ОбластьМакета = Макет.ПолучитьОбласть("Шапка");*/
			if(true/*ЭтоРасчетПриУвольнении*/)
			{
				/*ОбластьМакета.Параметры.Период		= "На дату увольнения, " + Формат(ДатаОстатков, ФорматДаты);*/
			}
			/*ТабДокумент.Вывести(ОбластьМакета);*/
			if(true/*Результат.ОстатокНаДату >= 0*/)
			{
				/*ОбластьМакета = Макет.ПолучитьОбласть("Строка");*/
				/*ОбластьМакета.Параметры.Текст			= ?(ЭтоРасчетПриУвольнении Или Результат.СотрудникУволен, "Подлежит компенсации", "Неиспользованный отпуск");*/
				/*ОбластьМакета.Параметры.КоличествоДней	= "" + Результат.ОстатокНаДату + " " + ОбщегоНазначения.ФормаМножественногоЧисла("день","дня","дней",Результат.ОстатокНаДату);*/
			}
			/*ТабДокумент.Вывести(ОбластьМакета);*/
			return null;
		}
		////////////////////////////////////////////////////////////////////////////////
		// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
		// Функции, непосредственно используемые при расчете остатков отпусков
		// Функция формирует описание таблицы данных для функции расчета остатка отпуска.
		//

		public object ОписаниеТаблицыДанных(/**/)
		{
			/*ТаблицаДанных = Новый ТаблицаЗначений;*/
			/*// Сотрудник и дата, на которую определяется остаток отпуска. Это ключ, который должен быть уникальным для каждой строки.
*/
			/*ТаблицаДанных.Колонки.Добавить("Сотрудник",					Новый ОписаниеТипов("СправочникСсылка.СотрудникиОрганизаций"));*/
			/*ТаблицаДанных.Колонки.Добавить("ДатаОстатков",				Новый ОписаниеТипов("Дата"));*/
			/*// Остатки отпуска на указанную дату.
*/
			/*// Если ЭтоРасчетПриУвольнении = Истина, тогда алгоритм будет игнорировать движения, сделанные расчетом при увольнении.
*/
			/*ТаблицаДанных.Колонки.Добавить("ЭтоРасчетПриУвольнении",	Новый ОписаниеТипов("Булево"));*/
			/*// График отпусков на год.
*/
			/*// Фактические отпуска учитываются до даты документа, после даты документа только запланированные, если ЭтоЗапланированныйОтпуск = Истина.
*/
			/*ТаблицаДанных.Колонки.Добавить("ЭтоЗапланированныйОтпуск",	Новый ОписаниеТипов("Булево"));*/
			/*ТаблицаДанных.Колонки.Добавить("ДатаДокумента",				Новый ОписаниеТипов("Дата"));*/
			/*// График отпусков и Отпуска организаций.
*/
			/*// Если указан период отпуска, то для него по производственному календарю будет посчитано количество календарных дней отпуска и рабочие года,
*/
			/*//  за которые эти остатки были и будут заработаны.
*/
			/*// Для каждого периода в поле Примечание будет добавлена информация о том, как остатки отпуска будут израсходованы на указанный период.
*/
			/*// ДатаОкончания = ДатаОстатков всегда.
*/
			/*ТаблицаДанных.Колонки.Добавить("ДатаНачала",						Новый ОписаниеТипов("Дата"));*/
			/*ТаблицаДанных.Колонки.Добавить("ДатаОкончания",						Новый ОписаниеТипов("Дата"));*/
			/*ТаблицаДанных.Колонки.Добавить("ТекущийРегистратор",				Документы.ТипВсеСсылки());*/
			/*// Этот отбор писпользуется только в случае, если задан порядок расчета основного отпуска
*/
			/*ТаблицаДанных.Колонки.Добавить("ПорядокРасчетаОсновногоОтпуска",	Новый ОписаниеТипов("ПеречислениеСсылка.ПорядокРасчетаОтпуска"));*/
			/*ТаблицаДанных.Колонки.Добавить("ИсключитьОсновнойОтпуск",			Новый ОписаниеТипов("Булево"));*/
			/*ТаблицаДанных.Колонки.Добавить("ДополнительныйОтпуск",				Новый ОписаниеТипов("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"));*/
			/*// Этот отбор используется, если не пустой
*/
			/*ТаблицаДанных.Колонки.Добавить("ВидЕжегодногоОтпуска",				Новый ОписаниеТипов("СправочникСсылка.ВидыЕжегодныхОтпусков"));*/
			return null;
		}
		// Функция формирует текстовое описание периода отпуска на основе переданных в качестве параметров данных
		//

		public object ОписаниеПериодаОтпуска(/*КоличествоДнейВсего, КоличествоДнейПрошлыхЛет, КоличествоДнейАвансом, ДатаПриемаНаРаботу, ДатаОстатков*/)
		{
			/*Комментарий	= Строка(КоличествоДнейВсего) + " " + ОбщегоНазначения.ФормаМножественногоЧисла("день","дня","дней",КоличествоДнейВсего);*/
			/*РасшифровкаКомментария = "";*/
			if(true/*КоличествоДнейВсего > 0*/)
			{
				if(true/*КоличествоДнейПрошлыхЛет > 0*/)
				{
					/*РасшифровкаКомментария = ", " + КоличествоДнейПрошлыхЛет + " " + ОбщегоНазначения.ФормаМножественногоЧисла("день","дня","дней",КоличествоДнейПрошлыхЛет) + " за счет отпусков прошлых лет";*/
				}
				if(true/*КоличествоДнейАвансом > 0*/)
				{
					if(true/*ПустаяСтрока(РасшифровкаКомментария)*/)
					{
						/*РасшифровкаКомментария = ", ";*/
					}
					/*РасшифровкаКомментария = РасшифровкаКомментария + Строка(КоличествоДнейАвансом) + " " + ОбщегоНазначения.ФормаМножественногоЧисла("день","дня","дней",КоличествоДнейАвансом) + " в счет будущего периода";*/
				}
			}
			/*Комментарий = Комментарий + РасшифровкаКомментария;*/
			if(true/*ДатаПриемаНаРаботу > ДобавитьМесяц(ДатаОстатков, -6)*/)
			{
				if(true/*Не ПустаяСтрока(Комментарий)*/)
				{
					/*Комментарий = Комментарий + ". ";*/
				}
				/*Комментарий = Комментарий + "Дата приема на работу: " + Формат(ДатаПриемаНаРаботу, "ДФ='д ММММ гггг ""года""'");*/
			}
			return null;
		}

		public object ДнейОтпускаВПериоде(/*ДатаНачала, ДатаОкончания, КоличествоДнейОтпускаВГод*/)
		{
			/*КоличествоМесяцевПериода		= Месяц(ДатаОкончания) - Месяц(ДатаНачала) + (Год(ДатаОкончания) - Год(ДатаНачала)) * 12;*/
			/*КоличествоДнейПериода			= День(ДатаОкончания) - День(ДатаНачала) + 1;*/
			if(true/*КоличествоДнейПериода < 0*/)
			{
				/*КоличествоДнейПериода		= КоличествоДнейПериода + День(НачалоМесяца(ДатаОкончания) - 1) - 1;*/
				/*КоличествоМесяцевПериода	= КоличествоМесяцевПериода - 1;*/
			}
			if(true/*КоличествоДнейПериода >= ?(День(ДатаОкончания) - День(ДатаНачала) + 1 >= 0, День(КонецМесяца(ДатаОкончания)), День(НачалоМесяца(ДатаОкончания) - 1)) / 2*/)
			{
				/*КоличествоМесяцевПериода	= КоличествоМесяцевПериода + 1;*/
			}
			return null;
		}
		// Функция, отвечающая за расчет отпусков, положенных сотруднику.
		// Используется всеми остальными функциями.
		//
		// В качестве таблицы данных нужно передать заполненную таблицу значений, по описанию из процедуры ОписаниеТаблицыДанных().
		//

		public object ОстаткиОтпусков(/*ТаблицаДанных*/)
		{
			/*// Для расчета остатков отпусков необходимо:
*/
			/*//	1. Определить дату приема на работу и увольнения;
*/
			/*//	2. Получить таблицу последних введенных остатков;
*/
			/*//	3. Получить таблицу всех отсутствий, влияющих на продление рабочего года;
*/
			/*//	4. Получить таблицу всех изменений количества дней отпуска в год;
*/
			/*//	5. Получить список фактических отпусков.
*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("ТаблицаДанных",	ТаблицаДанных);*/
			/*Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДанных.Сотрудник КАК Сотрудник,
	|	КОНЕЦПЕРИОДА(ТаблицаДанных.ДатаОстатков, ДЕНЬ) КАК ДатаОстатков,
	|	ТаблицаДанных.ЭтоРасчетПриУвольнении КАК ЭтоРасчетПриУвольнении,
	|	ТаблицаДанных.ЭтоЗапланированныйОтпуск КАК ЭтоЗапланированныйОтпуск,
	|	ТаблицаДанных.ДатаДокумента КАК ДатаДокумента,
	|	ТаблицаДанных.ДатаНачала КАК ДатаНачалаПериода,
	|	ТаблицаДанных.ДатаОкончания КАК ДатаОкончанияПериода,
	|	ТаблицаДанных.ТекущийРегистратор КАК ТекущийРегистратор,
	|	ТаблицаДанных.ПорядокРасчетаОсновногоОтпуска КАК ПорядокРасчетаОсновногоОтпуска,
	|	ТаблицаДанных.ИсключитьОсновнойОтпуск КАК ИсключитьОсновнойОтпуск,
	|	ТаблицаДанных.ДополнительныйОтпуск КАК ДополнительныйОтпуск,
	|	ТаблицаДанных.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска
	|ПОМЕСТИТЬ ВТТаблицаДанных
	|ИЗ
	|	&ТаблицаДанных КАК ТаблицаДанных
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ДатаОстатков,
	|	ЭтоРасчетПриУвольнении
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СотрудникиОрганизаций.Ссылка КАК Сотрудник,
	|	ТаблицаДанных.ДатаОстатков КАК ДатаОстатков,
	|	ТаблицаДанных.ЭтоРасчетПриУвольнении,
	|	ТаблицаДанных.ЭтоЗапланированныйОтпуск,
	|	ТаблицаДанных.ДатаДокумента,
	|	ТаблицаДанных.ДатаНачалаПериода,
	|	ТаблицаДанных.ДатаОкончанияПериода,
	|	ТаблицаДанных.ВидЕжегодногоОтпуска,
	|	ТаблицаДанных.КоличествоКалендарныхДнейВПериоде,
	|	ТаблицаДанных.ТекущийРегистратор,
	|	ЕСТЬNULL(НачисленияОсновногоОтпуска.ВидЕжегодногоОтпуска, ЗНАЧЕНИЕ(Справочник.ВидыЕжегодныхОтпусков.ПустаяСсылка)) КАК ВидОсновногоОтпуска,
	|	ЕСТЬNULL(НачисленияДополнительногоОтпуска.ВидЕжегодногоОтпуска, ЗНАЧЕНИЕ(Справочник.ВидыЕжегодныхОтпусков.ПустаяСсылка)) КАК ВидДополнительногоОтпуска,
	|	ТаблицаДанных.ПорядокРасчетаОсновногоОтпуска,
	|	ТаблицаДанных.ИсключитьОсновнойОтпуск,
	|	СотрудникиОрганизаций.ДатаПриемаНаРаботу,
	|	ЕСТЬNULL(РаботникиОрганизацийПриемНаРаботу.Должность, ЗНАЧЕНИЕ(Справочник.ДолжностиОрганизаций.ПустаяСсылка)) КАК Должность,
	|	СотрудникиОрганизаций.ДатаУвольнения,
	|	ВЫБОР
	|		КОГДА СотрудникиОрганизаций.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЛОЖЬ
	|		КОГДА СотрудникиОрганизаций.ДатаУвольнения > ТаблицаДанных.ДатаОстатков
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СотрудникУволен,
	|	ВЫБОР
	|		КОГДА НЕ УвольнениеИзОрганизацийРаботникиОрганизации.ПорядокРасчетаОтпуска ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА УвольнениеИзОрганизацийРаботникиОрганизации.ПорядокРасчетаОтпуска = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетаОтпуска.ПоШестидневке)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОстаткаОтпуска.ПоРабочимДням)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОстаткаОтпуска.ПоКалендарнымДням)
	|				КОНЕЦ
	|		КОГДА ВЫБОР
	|					КОГДА СотрудникиОрганизаций.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ЛОЖЬ
	|					КОГДА СотрудникиОрганизаций.ДатаУвольнения > ТаблицаДанных.ДатаОстатков
	|						ТОГДА ЛОЖЬ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|				И РАЗНОСТЬДАТ(СотрудникиОрганизаций.ДатаПриемаНаРаботу, СотрудникиОрганизаций.ДатаУвольнения, ДЕНЬ) <= 61
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОстаткаОтпуска.ПоРабочимДням)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОстаткаОтпуска.ПоКалендарнымДням)
	|	КОНЕЦ КАК СпособРасчетаОтпусков
	|ПОМЕСТИТЬ ВТТаблицаСотрудников
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТаблицаДанных.Сотрудник КАК Сотрудник,
	|			ТаблицаДанных.ДатаОстатков КАК ДатаОстатков,
	|			ТаблицаДанных.ЭтоРасчетПриУвольнении КАК ЭтоРасчетПриУвольнении,
	|			ТаблицаДанных.ЭтоЗапланированныйОтпуск КАК ЭтоЗапланированныйОтпуск,
	|			ТаблицаДанных.ДатаДокумента КАК ДатаДокумента,
	|			ТаблицаДанных.ДатаНачалаПериода КАК ДатаНачалаПериода,
	|			ТаблицаДанных.ДатаОкончанияПериода КАК ДатаОкончанияПериода,
	|			ТаблицаДанных.ТекущийРегистратор КАК ТекущийРегистратор,
	|			ТаблицаДанных.ПорядокРасчетаОсновногоОтпуска КАК ПорядокРасчетаОсновногоОтпуска,
	|			ТаблицаДанных.ИсключитьОсновнойОтпуск КАК ИсключитьОсновнойОтпуск,
	|			ТаблицаДанных.ДополнительныйОтпуск КАК ДополнительныйОтпуск,
	|			ТаблицаДанных.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
	|			СУММА(ЕСТЬNULL(РегламентированныйПроизводственныйКалендарь.КалендарныеДни, 0)) КАК КоличествоКалендарныхДнейВПериоде
	|		ИЗ
	|			ВТТаблицаДанных КАК ТаблицаДанных
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|				ПО (РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ ТаблицаДанных.ДатаНачалаПериода И ТаблицаДанных.ДатаОкончанияПериода)
	|					И (ТаблицаДанных.ДатаНачалаПериода <> ДАТАВРЕМЯ(1, 1, 1))
	|					И (ТаблицаДанных.ДатаОкончанияПериода <> ДАТАВРЕМЯ(1, 1, 1))
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаДанных.Сотрудник,
	|			ТаблицаДанных.ДатаОстатков,
	|			ТаблицаДанных.ЭтоРасчетПриУвольнении,
	|			ТаблицаДанных.ЭтоЗапланированныйОтпуск,
	|			ТаблицаДанных.ДатаДокумента,
	|			ТаблицаДанных.ДатаНачалаПериода,
	|			ТаблицаДанных.ДатаОкончанияПериода,
	|			ТаблицаДанных.ТекущийРегистратор,
	|			ТаблицаДанных.ИсключитьОсновнойОтпуск,
	|			ТаблицаДанных.ПорядокРасчетаОсновногоОтпуска,
	|			ТаблицаДанных.ДополнительныйОтпуск,
	|			ТаблицаДанных.ВидЕжегодногоОтпуска) КАК ТаблицаДанных
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК НачисленияДополнительногоОтпуска
	|			ПО ТаблицаДанных.ДополнительныйОтпуск = НачисленияДополнительногоОтпуска.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК НачисленияОсновногоОтпуска
	|			ПО (ВЫБОР
	|					КОГДА ТаблицаДанных.ПорядокРасчетаОсновногоОтпуска = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетаОтпуска.ПоКалендарнымДням)
	|						ТОГДА НачисленияОсновногоОтпуска.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтпКалендарныеДни)
	|					КОГДА ТаблицаДанных.ПорядокРасчетаОсновногоОтпуска = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетаОтпуска.ПоШестидневке)
	|						ТОГДА НачисленияОсновногоОтпуска.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтпШестидневка)
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ)
	|		ПО СотрудникиОрганизаций.Ссылка = ТаблицаДанных.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизацийПриемНаРаботу
	|		ПО СотрудникиОрганизаций.Ссылка = РаботникиОрганизацийПриемНаРаботу.Сотрудник
	|			И СотрудникиОрганизаций.ДатаПриемаНаРаботу = РаботникиОрганизацийПриемНаРаботу.Период
	|			И (РаботникиОрганизацийПриемНаРаботу.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизацийУвольнение
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УвольнениеИзОрганизаций.РаботникиОрганизации КАК УвольнениеИзОрганизацийРаботникиОрганизации
	|			ПО РаботникиОрганизацийУвольнение.Сотрудник = УвольнениеИзОрганизацийРаботникиОрганизации.Сотрудник
	|				И (ДОБАВИТЬКДАТЕ(РаботникиОрганизацийУвольнение.Период, ДЕНЬ, -1) = УвольнениеИзОрганизацийРаботникиОрганизации.ДатаУвольнения)
	|				И РаботникиОрганизацийУвольнение.Регистратор = УвольнениеИзОрганизацийРаботникиОрганизации.Ссылка
	|		ПО СотрудникиОрганизаций.Ссылка = РаботникиОрганизацийУвольнение.Сотрудник
	|			И (РаботникиОрганизацийУвольнение.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение))
	|			И (СотрудникиОрганизаций.ДатаУвольнения = ДОБАВИТЬКДАТЕ(РаботникиОрганизацийУвольнение.Период, ДЕНЬ, -1))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ДатаОстатков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСотрудников.Сотрудник КАК Сотрудник,
	|	ТаблицаСотрудников.ДатаОстатков КАК ДатаОстатков,
	|	ТаблицаСотрудников.ЭтоРасчетПриУвольнении,
	|	ТаблицаСотрудников.ДатаНачалаПериода,
	|	ТаблицаСотрудников.ДатаОкончанияПериода,
	|	ТаблицаСотрудников.ВидЕжегодногоОтпуска,
	|	ТаблицаСотрудников.КоличествоКалендарныхДнейВПериоде,
	|	ТаблицаСотрудников.ДатаПриемаНаРаботу,
	|	ТаблицаСотрудников.ДатаУвольнения,
	|	ТаблицаСотрудников.СотрудникУволен,
	|	ТаблицаСотрудников.Сотрудник.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	ТаблицаСотрудников.Сотрудник.ПодразделениеОрганизации КАК Подразделение,
	|	ТаблицаСотрудников.Сотрудник.Должность КАК Должность,
	|	ТаблицаСотрудников.Сотрудник.Физлицо.Пол КАК Пол,
	|	Константы.ОкруглятьДниОтпускаПриКомпенсации
	|ИЗ
	|	ВТТаблицаСотрудников КАК ТаблицаСотрудников,
	|	Константы КАК Константы
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	ДатаОстатков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСотрудников.Сотрудник,
	|	ТаблицаСотрудников.ДатаОстатков,
	|	ВидыЕжегодныхОтпусков.Ссылка КАК ВидЕжегодногоОтпуска,
	|	ВидыЕжегодныхОтпусков.КоличествоДнейОтпускаВГод КАК КоличествоДнейОтпускаВГод,
	|	ВЫБОР
	|		КОГДА ВидыЕжегодныхОтпусков.Ссылка = НачисленияОсновногоОтпуска.ВидЕжегодногоОтпуска
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОсновнойОтпуск
	|ПОМЕСТИТЬ ВТВидыЕжегодныхОтпусков
	|ИЗ
	|	ВТТаблицаСотрудников КАК ТаблицаСотрудников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЕжегодныхОтпусков КАК ВидыЕжегодныхОтпусков
	|		ПО (НЕ ВидыЕжегодныхОтпусков.ПометкаУдаления)
	|			И (ВЫБОР
	|				КОГДА ТаблицаСотрудников.ВидОсновногоОтпуска = ЗНАЧЕНИЕ(Справочник.ВидыЕжегодныхОтпусков.ПустаяСсылка)
	|						И ТаблицаСотрудников.ВидДополнительногоОтпуска = ЗНАЧЕНИЕ(Справочник.ВидыЕжегодныхОтпусков.ПустаяСсылка)
	|					ТОГДА ВЫБОР
	|							КОГДА ТаблицаСотрудников.ВидЕжегодногоОтпуска = ЗНАЧЕНИЕ(Справочник.ВидыЕжегодныхОтпусков.ПустаяСсылка)
	|								ТОГДА ТаблицаСотрудников.СпособРасчетаОтпусков = ВидыЕжегодныхОтпусков.СпособРасчетаОстаткаОтпуска
	|							ИНАЧЕ ТаблицаСотрудников.ВидЕжегодногоОтпуска = ВидыЕжегодныхОтпусков.Ссылка
	|						КОНЕЦ
	|				ИНАЧЕ ТаблицаСотрудников.ВидОсновногоОтпуска = ВидыЕжегодныхОтпусков.Ссылка
	|							И НЕ ТаблицаСотрудников.ИсключитьОсновнойОтпуск
	|						ИЛИ ТаблицаСотрудников.ВидДополнительногоОтпуска = ВидыЕжегодныхОтпусков.Ссылка
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК НачисленияОсновногоОтпуска
	|		ПО (ВЫБОР
	|				КОГДА ТаблицаСотрудников.ПорядокРасчетаОсновногоОтпуска = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетаОтпуска.ПоШестидневке)
	|					ТОГДА НачисленияОсновногоОтпуска.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтпШестидневка)
	|				ИНАЧЕ НачисленияОсновногоОтпуска.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтпКалендарныеДни)
	|			КОНЕЦ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидЕжегодногоОтпуска,
	|	ОсновнойОтпуск
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЕжегодныхОтпусков.Сотрудник,
	|	ВидыЕжегодныхОтпусков.ДатаОстатков,
	|	ВидыЕжегодныхОтпусков.ВидЕжегодногоОтпуска,
	|	ВидыЕжегодныхОтпусков.КоличествоДнейОтпускаВГод
	|ИЗ
	|	ВТВидыЕжегодныхОтпусков КАК ВидыЕжегодныхОтпусков
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидыЕжегодныхОтпусков.ОсновнойОтпуск УБЫВ,
	|	ВидыЕжегодныхОтпусков.ВидЕжегодногоОтпуска.Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСотрудников.Сотрудник КАК Сотрудник,
	|	ТаблицаСотрудников.ДатаОстатков,
	|	ОстаткиОтпусков.Ссылка.ДатаАктуальности КАК ДатаАктуальности,
	|	ОстаткиОтпусков.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
	|	ОстаткиОтпусков.Количество,
	|	ОстаткиОтпусков.ДатаНачалаРабочегоГода,
	|	ОстаткиОтпусков.ДатаОкончанияРабочегоГода КАК ДатаОкончанияРабочегоГода,
	|	ОстаткиОтпусков.Ссылка
	|ИЗ
	|	ВТТаблицаСотрудников КАК ТаблицаСотрудников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОстаткиОтпусковОрганизаций.Остатки КАК ОстаткиОтпусков
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ОстаткиМаксимум.Сотрудник КАК Сотрудник,
	|				ОстаткиМаксимум.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
	|				ОстаткиМаксимум.ДатаОкончанияРабочегоГода КАК ДатаОкончанияРабочегоГода,
	|				МАКСИМУМ(ОстаткиОтпусковОрганизацийОстатки.Ссылка) КАК Ссылка
	|			ИЗ
	|				Справочник.ОстаткиОтпусковОрганизаций.Остатки КАК ОстаткиОтпусковОрганизацийОстатки
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|						ОстаткиОтпусковОрганизацийОстатки.Ссылка.Сотрудник КАК Сотрудник,
	|						ОстаткиОтпусковОрганизацийОстатки.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
	|						МАКСИМУМ(ОстаткиОтпусковОрганизацийОстатки.ДатаОкончанияРабочегоГода) КАК ДатаОкончанияРабочегоГода
	|					ИЗ
	|						ВТТаблицаСотрудников КАК ВТТаблицаСотрудников
	|							ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОстаткиОтпусковОрганизаций.Остатки КАК ОстаткиОтпусковОрганизацийОстатки
	|							ПО ВТТаблицаСотрудников.Сотрудник = ОстаткиОтпусковОрганизацийОстатки.Ссылка.Сотрудник
	|					
	|					СГРУППИРОВАТЬ ПО
	|						ОстаткиОтпусковОрганизацийОстатки.Ссылка.Сотрудник,
	|						ОстаткиОтпусковОрганизацийОстатки.ВидЕжегодногоОтпуска) КАК ОстаткиМаксимум
	|					ПО ОстаткиОтпусковОрганизацийОстатки.Ссылка.Сотрудник = ОстаткиМаксимум.Сотрудник
	|						И ОстаткиОтпусковОрганизацийОстатки.ВидЕжегодногоОтпуска = ОстаткиМаксимум.ВидЕжегодногоОтпуска
	|						И ОстаткиОтпусковОрганизацийОстатки.ДатаОкончанияРабочегоГода = ОстаткиМаксимум.ДатаОкончанияРабочегоГода
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ОстаткиМаксимум.Сотрудник,
	|				ОстаткиМаксимум.ВидЕжегодногоОтпуска,
	|				ОстаткиМаксимум.ДатаОкончанияРабочегоГода) КАК ОстаткиОтпусковСрез
	|			ПО ОстаткиОтпусков.Ссылка.Сотрудник = ОстаткиОтпусковСрез.Сотрудник
	|				И ОстаткиОтпусков.ВидЕжегодногоОтпуска = ОстаткиОтпусковСрез.ВидЕжегодногоОтпуска
	|				И ОстаткиОтпусков.Ссылка = ОстаткиОтпусковСрез.Ссылка
	|		ПО ТаблицаСотрудников.Сотрудник = ОстаткиОтпусков.Ссылка.Сотрудник
	|			И (ВЫБОР
	|				КОГДА ТаблицаСотрудников.ВидОсновногоОтпуска = ЗНАЧЕНИЕ(Справочник.ВидыЕжегодныхОтпусков.ПустаяСсылка)
	|						И ТаблицаСотрудников.ВидДополнительногоОтпуска = ЗНАЧЕНИЕ(Справочник.ВидыЕжегодныхОтпусков.ПустаяСсылка)
	|					ТОГДА ВЫБОР
	|							КОГДА ТаблицаСотрудников.ВидЕжегодногоОтпуска = ЗНАЧЕНИЕ(Справочник.ВидыЕжегодныхОтпусков.ПустаяСсылка)
	|								ТОГДА ТаблицаСотрудников.СпособРасчетаОтпусков = ОстаткиОтпусков.ВидЕжегодногоОтпуска.СпособРасчетаОстаткаОтпуска
	|							ИНАЧЕ ТаблицаСотрудников.ВидЕжегодногоОтпуска = ОстаткиОтпусков.ВидЕжегодногоОтпуска.Ссылка
	|						КОНЕЦ
	|				ИНАЧЕ ТаблицаСотрудников.ВидОсновногоОтпуска = ОстаткиОтпусков.ВидЕжегодногоОтпуска
	|							И НЕ ТаблицаСотрудников.ИсключитьОсновнойОтпуск
	|						ИЛИ ТаблицаСотрудников.ВидДополнительногоОтпуска = ОстаткиОтпусков.ВидЕжегодногоОтпуска
	|			КОНЕЦ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	ДатаАктуальности,
	|	ВидЕжегодногоОтпуска,
	|	ДатаОкончанияРабочегоГода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаСотрудников.Сотрудник КАК Сотрудник,
	|	ТаблицаСотрудников.ДатаОстатков КАК ДатаОстатков,
	|	СостояниеРаботниковОрганизаций.Период КАК Период,
	|	СостояниеРаботниковОрганизаций.Состояние КАК Состояние,
	|	СостояниеРаботниковОрганизаций.ПериодЗавершения КАК ПериодЗавершения,
	|	СостояниеРаботниковОрганизаций.СостояниеЗавершения,
	|	СостояниеРаботниковОрганизаций.Регистратор
	|ПОМЕСТИТЬ ВТЗаписиОтклонений
	|ИЗ
	|	ВТТаблицаСотрудников КАК ТаблицаСотрудников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеРаботниковОрганизаций КАК СостояниеРаботниковОрганизаций
	|		ПО ТаблицаСотрудников.Сотрудник = СостояниеРаботниковОрганизаций.Сотрудник
	|			И (ВЫБОР
	|				КОГДА ТаблицаСотрудников.ЭтоЗапланированныйОтпуск
	|					ТОГДА ТаблицаСотрудников.ДатаДокумента
	|				ИНАЧЕ ТаблицаСотрудников.ДатаОстатков
	|			КОНЕЦ >= СостояниеРаботниковОрганизаций.Период)
	|			И (СостояниеРаботниковОрганизаций.Состояние В (ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускБезСохраненияЗарплаты), ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.Прогулы)))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ДатаОстатков,
	|	Период,
	|	ПериодЗавершения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаСотрудников.Сотрудник КАК Сотрудник,
	|	ТаблицаСотрудников.ДатаОстатков КАК ДатаОстатков,
	|	СостояниеРаботниковОрганизаций.Период КАК ПериодНачала,
	|	МИНИМУМ(СостояниеРаботниковОрганизацийЗавершения.Период) КАК ДатаСреза
	|ПОМЕСТИТЬ ВТСрезОтклоненийЗавершения
	|ИЗ
	|	ВТТаблицаСотрудников КАК ТаблицаСотрудников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеРаботниковОрганизаций КАК СостояниеРаботниковОрганизаций
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеРаботниковОрганизаций КАК СостояниеРаботниковОрганизацийЗавершения
	|			ПО СостояниеРаботниковОрганизаций.Сотрудник = СостояниеРаботниковОрганизацийЗавершения.Сотрудник
	|				И СостояниеРаботниковОрганизаций.Период < СостояниеРаботниковОрганизацийЗавершения.Период
	|		ПО ТаблицаСотрудников.Сотрудник = СостояниеРаботниковОрганизаций.Сотрудник
	|			И (ВЫБОР
	|				КОГДА ТаблицаСотрудников.ЭтоЗапланированныйОтпуск
	|					ТОГДА ТаблицаСотрудников.ДатаДокумента
	|				ИНАЧЕ ТаблицаСотрудников.ДатаОстатков
	|			КОНЕЦ >= СостояниеРаботниковОрганизаций.Период)
	|			И (СостояниеРаботниковОрганизаций.Состояние В (ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускБезСохраненияЗарплаты), ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.Прогулы)))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСотрудников.Сотрудник,
	|	ТаблицаСотрудников.ДатаОстатков,
	|	СостояниеРаботниковОрганизаций.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ДатаОстатков,
	|	ПериодНачала,
	|	ДатаСреза
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаписиОтклонений.Сотрудник КАК Сотрудник,
	|	ЗаписиОтклонений.ДатаОстатков КАК ДатаОстатков,
	|	ЗаписиОтклонений.ПериодНачала КАК ПериодНачала,
	|	СостояниеРаботниковОрганизацийЗавершения.Период КАК Период,
	|	СостояниеРаботниковОрганизацийЗавершения.Состояние
	|ПОМЕСТИТЬ ВТЗаписиОтклоненийЗавершения
	|ИЗ
	|	ВТСрезОтклоненийЗавершения КАК ЗаписиОтклонений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеРаботниковОрганизаций КАК СостояниеРаботниковОрганизацийЗавершения
	|		ПО ЗаписиОтклонений.Сотрудник = СостояниеРаботниковОрганизацийЗавершения.Сотрудник
	|			И ЗаписиОтклонений.ДатаСреза = СостояниеРаботниковОрганизацийЗавершения.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ДатаОстатков,
	|	ПериодНачала,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокОтклонений.Сотрудник,
	|	СписокОтклонений.ДатаОстатков,
	|	РАЗНОСТЬДАТ(СписокОтклонений.ДатаНачалаОтпуска, СписокОтклонений.ДатаОкончанияОтпуска, ДЕНЬ) КАК КоличествоДнейОтпуска,
	|	РАЗНОСТЬДАТ(СписокОтклонений.ДатаНачалаОтпуска, СписокОтклонений.ДатаОкончанияОтпуска, ДЕНЬ) КАК КоличествоДнейПродления,
	|	СписокОтклонений.ДатаНачалаОтпуска КАК ДатаНачалаОтпуска,
	|	ДОБАВИТЬКДАТЕ(СписокОтклонений.ДатаОкончанияОтпуска, ДЕНЬ, -1) КАК ДатаОкончанияОтпуска,
	|	СписокОтклонений.Состояние,
	|	СписокОтклонений.СостояниеЗавершения,
	|	СписокОтклонений.Регистратор КАК Документ,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(СписокОтклонений.Регистратор) КАК ПредставлениеДокумента
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаписиОтклонений.Сотрудник КАК Сотрудник,
	|		ЗаписиОтклонений.ДатаОстатков КАК ДатаОстатков,
	|		ЗаписиОтклонений.Период КАК ДатаНачалаОтпуска,
	|		ВЫБОР
	|			КОГДА ЗаписиОтклонений.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|					И (ЗаписиОтклоненийЗавершения.Период ЕСТЬ NULL 
	|						ИЛИ ЗаписиОтклоненийЗавершения.Период > ЗаписиОтклонений.ПериодЗавершения)
	|				ТОГДА ЗаписиОтклонений.ПериодЗавершения
	|			КОГДА ЕСТЬNULL(ЗаписиОтклоненийЗавершения.Период, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ЗаписиОтклоненийЗавершения.Период
	|			ИНАЧЕ ЗаписиОтклонений.ДатаОстатков
	|		КОНЕЦ КАК ДатаОкончанияОтпуска,
	|		ЗаписиОтклонений.Состояние КАК Состояние,
	|		ВЫБОР
	|			КОГДА НЕ ЗаписиОтклоненийЗавершения.Период ЕСТЬ NULL 
	|					И ЗаписиОтклоненийЗавершения.Период <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ЗаписиОтклоненийЗавершения.Состояние
	|			КОГДА ЗаписиОтклонений.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|					И ЗаписиОтклоненийЗавершения.Период > ЗаписиОтклонений.ПериодЗавершения
	|				ТОГДА ЗаписиОтклонений.СостояниеЗавершения
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.Работает)
	|		КОНЕЦ КАК СостояниеЗавершения,
	|		ЗаписиОтклонений.Регистратор КАК Регистратор
	|	ИЗ
	|		ВТЗаписиОтклонений КАК ЗаписиОтклонений
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаписиОтклоненийЗавершения КАК ЗаписиОтклоненийЗавершения
	|			ПО ЗаписиОтклонений.Сотрудник = ЗаписиОтклоненийЗавершения.Сотрудник
	|				И ЗаписиОтклонений.ДатаОстатков = ЗаписиОтклоненийЗавершения.ДатаОстатков
	|				И ЗаписиОтклонений.Период < ЗаписиОтклоненийЗавершения.Период
	|				И ЗаписиОтклонений.Период = ЗаписиОтклоненийЗавершения.ПериодНачала) КАК СписокОтклонений
	|
	|УПОРЯДОЧИТЬ ПО
	|	СписокОтклонений.Сотрудник,
	|	СписокОтклонений.ДатаОстатков,
	|	ДатаНачалаОтпуска
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СотрудникиСВидамиОтпусков.Сотрудник КАК Сотрудник,
	|	СотрудникиСВидамиОтпусков.ДатаОстатков,
	|	СотрудникиСВидамиОтпусков.ДатаДействия КАК ДатаДействия,
	|	СотрудникиСВидамиОтпусков.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
	|	ЕСТЬNULL(СотрудникиОрганизацийЕжегодныеОтпуска.КоличествоДнейОтпускаВГод, ЕСТЬNULL(ДолжностиОрганизацийЕжегодныеОтпуска.КоличествоДнейОтпускаВГод, ВЫБОР
	|				КОГДА СотрудникиСВидамиОтпусков.ВидЕжегодногоОтпуска.ПредоставлятьОтпускВсемСотрудникам
	|					ТОГДА СотрудникиСВидамиОтпусков.КоличествоДнейОтпускаВГод
	|				ИНАЧЕ 0
	|			КОНЕЦ)) КАК КоличествоДнейОтпускаВГод,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СотрудникиОрганизацийЕжегодныеОтпуска.КоличествоДнейОтпускаВГод, ЕСТЬNULL(ДолжностиОрганизацийЕжегодныеОтпуска.КоличествоДнейОтпускаВГод, ВЫБОР
	|						КОГДА СотрудникиСВидамиОтпусков.ВидЕжегодногоОтпуска.ПредоставлятьОтпускВсемСотрудникам
	|							ТОГДА СотрудникиСВидамиОтпусков.КоличествоДнейОтпускаВГод
	|						ИНАЧЕ 0
	|					КОНЕЦ)) <> 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Предоставляется,
	|	ВЫБОР
	|		КОГДА НЕ СотрудникиОрганизацийЕжегодныеОтпуска.КоличествоДнейОтпускаВГод ЕСТЬ NULL 
	|			ТОГДА ""(персональный)""
	|		КОГДА НЕ ДолжностиОрганизацийЕжегодныеОтпуска.КоличествоДнейОтпускаВГод ЕСТЬ NULL 
	|			ТОГДА ""(по должности)""
	|		КОГДА СотрудникиСВидамиОтпусков.ВидЕжегодногоОтпуска.ПредоставлятьОтпускВсемСотрудникам
	|			ТОГДА ""(общефирменный)""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ТипЕжегодногоОтпуска
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаСотрудников.Сотрудник КАК Сотрудник,
	|		ТаблицаСотрудников.ДатаОстатков КАК ДатаОстатков,
	|		ТаблицаСотрудников.ДатаПриемаНаРаботу КАК ДатаДействия,
	|		ТаблицаСотрудников.Должность КАК Должность,
	|		ВидыЕжегодныхОтпусков.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
	|		ВидыЕжегодныхОтпусков.КоличествоДнейОтпускаВГод КАК КоличествоДнейОтпускаВГод,
	|		ВидыЕжегодныхОтпусков.ОсновнойОтпуск КАК ОсновнойОтпуск
	|	ИЗ
	|		ВТТаблицаСотрудников КАК ТаблицаСотрудников
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВидыЕжегодныхОтпусков КАК ВидыЕжегодныхОтпусков
	|			ПО ТаблицаСотрудников.Сотрудник = ВидыЕжегодныхОтпусков.Сотрудник
	|				И ТаблицаСотрудников.ДатаОстатков = ВидыЕжегодныхОтпусков.ДатаОстатков
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаСотрудников.Сотрудник,
	|		ТаблицаСотрудников.ДатаОстатков,
	|		РаботникиОрганизаций.Период,
	|		РаботникиОрганизаций.Должность,
	|		ВидыЕжегодныхОтпусков.ВидЕжегодногоОтпуска,
	|		ВидыЕжегодныхОтпусков.КоличествоДнейОтпускаВГод,
	|		ВидыЕжегодныхОтпусков.ОсновнойОтпуск
	|	ИЗ
	|		ВТТаблицаСотрудников КАК ТаблицаСотрудников
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|			ПО ТаблицаСотрудников.Сотрудник = РаботникиОрганизаций.Сотрудник
	|				И (ВЫБОР
	|					КОГДА ТаблицаСотрудников.ЭтоЗапланированныйОтпуск
	|						ТОГДА ТаблицаСотрудников.ДатаДокумента
	|					ИНАЧЕ ТаблицаСотрудников.ДатаОстатков
	|				КОНЕЦ >= РаботникиОрганизаций.Период)
	|				И (РаботникиОрганизаций.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Перемещение))
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВидыЕжегодныхОтпусков КАК ВидыЕжегодныхОтпусков
	|			ПО ТаблицаСотрудников.Сотрудник = ВидыЕжегодныхОтпусков.Сотрудник
	|				И ТаблицаСотрудников.ДатаОстатков = ВидыЕжегодныхОтпусков.ДатаОстатков
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаСотрудников.Сотрудник,
	|		ТаблицаСотрудников.ДатаОстатков,
	|		ДОБАВИТЬКДАТЕ(РаботникиОрганизаций.ПериодЗавершения, ДЕНЬ, 1),
	|		РаботникиОрганизаций.ДолжностьЗавершения,
	|		ВидыЕжегодныхОтпусков.ВидЕжегодногоОтпуска,
	|		ВидыЕжегодныхОтпусков.КоличествоДнейОтпускаВГод,
	|		ВидыЕжегодныхОтпусков.ОсновнойОтпуск
	|	ИЗ
	|		ВТТаблицаСотрудников КАК ТаблицаСотрудников
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|			ПО ТаблицаСотрудников.Сотрудник = РаботникиОрганизаций.Сотрудник
	|				И (ВЫБОР
	|					КОГДА ТаблицаСотрудников.ЭтоЗапланированныйОтпуск
	|						ТОГДА ТаблицаСотрудников.ДатаДокумента
	|					ИНАЧЕ ТаблицаСотрудников.ДатаОстатков
	|				КОНЕЦ >= РаботникиОрганизаций.Период)
	|				И (РаботникиОрганизаций.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Перемещение))
	|				И (РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1))
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВидыЕжегодныхОтпусков КАК ВидыЕжегодныхОтпусков
	|			ПО ТаблицаСотрудников.Сотрудник = ВидыЕжегодныхОтпусков.Сотрудник
	|				И ТаблицаСотрудников.ДатаОстатков = ВидыЕжегодныхОтпусков.ДатаОстатков) КАК СотрудникиСВидамиОтпусков
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДолжностиОрганизаций.ЕжегодныеОтпуска КАК ДолжностиОрганизацийЕжегодныеОтпуска
	|		ПО СотрудникиСВидамиОтпусков.Должность = ДолжностиОрганизацийЕжегодныеОтпуска.Ссылка
	|			И СотрудникиСВидамиОтпусков.ВидЕжегодногоОтпуска = ДолжностиОрганизацийЕжегодныеОтпуска.ВидЕжегодногоОтпуска
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций.ЕжегодныеОтпуска КАК СотрудникиОрганизацийЕжегодныеОтпуска
	|		ПО СотрудникиСВидамиОтпусков.Сотрудник = СотрудникиОрганизацийЕжегодныеОтпуска.Ссылка
	|			И СотрудникиСВидамиОтпусков.ВидЕжегодногоОтпуска = СотрудникиОрганизацийЕжегодныеОтпуска.ВидЕжегодногоОтпуска
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	СотрудникиСВидамиОтпусков.ОсновнойОтпуск УБЫВ,
	|	ВидЕжегодногоОтпуска,
	|	ДатаДействия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаСотрудников.Сотрудник КАК Сотрудник,
	|	ТаблицаСотрудников.ДатаОстатков КАК ДатаОстатков,
	|	ФактическиеОтпускаОрганизаций.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
	|	ФактическиеОтпускаОрганизаций.Количество КАК КоличествоДнейОтпуска,
	|	ФактическиеОтпускаОрганизаций.Период КАК ДатаНачалаОтпуска,
	|	ФактическиеОтпускаОрганизаций.ДатаОкончания КАК ДатаОкончанияОтпуска,
	|	ФактическиеОтпускаОрганизаций.Компенсация,
	|	ФактическиеОтпускаОрганизаций.Регистратор КАК Документ,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ФактическиеОтпускаОрганизаций.Регистратор) КАК ПредставлениеДокумента,
	|	ФактическиеОтпускаОрганизаций.ДатаРегистрации,
	|	ВЫБОР
	|		КОГДА ФактическиеОтпускаОрганизаций.Компенсация
	|			ТОГДА ФактическиеОтпускаОрганизаций.Период
	|		ИНАЧЕ ФактическиеОтпускаОрганизаций.ДатаОкончания
	|	КОНЕЦ КАК ДатаДляСортировки
	|ИЗ
	|	ВТТаблицаСотрудников КАК ТаблицаСотрудников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ФактическиеОтпускаОрганизаций КАК ФактическиеОтпускаОрганизаций
	|		ПО ТаблицаСотрудников.Сотрудник = ФактическиеОтпускаОрганизаций.Сотрудник
	|			И (ВЫБОР
	|				КОГДА ТаблицаСотрудников.ЭтоЗапланированныйОтпуск
	|					ТОГДА ТаблицаСотрудников.ДатаДокумента
	|				ИНАЧЕ ТаблицаСотрудников.ДатаОстатков
	|			КОНЕЦ >= ФактическиеОтпускаОрганизаций.Период)
	|			И (НЕ(ТаблицаСотрудников.ЭтоРасчетПриУвольнении
	|					И ФактическиеОтпускаОрганизаций.Регистратор ССЫЛКА Документ.РасчетПриУвольненииРаботникаОрганизаций))
	|			И ТаблицаСотрудников.ТекущийРегистратор <> ФактическиеОтпускаОрганизаций.Регистратор,
	|	Константы КАК Константы
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	ДатаОстатков,
	|	ВидЕжегодногоОтпуска,
	|	ДатаДляСортировки";*/
			/*МассивРезультатов = Запрос.ВыполнитьПакет();*/
			/*ДополненнаяТаблицаДанных			= МассивРезультатов[2].Выгрузить();*/
			/*ТаблицаВидовОтпуска					= МассивРезультатов[4].Выгрузить();*/
			/*ТаблицаОстатков						= МассивРезультатов[5].Выгрузить();*/
			/*ТаблицаОстатков.Индексы.Добавить("Сотрудник");*/
			/*ТаблицаОстатков.Индексы.Добавить("ДатаОстатков");*/
			/*ТаблицаОтклонений					= МассивРезультатов[9].Выгрузить();*/
			/*ТаблицаОтклонений.Индексы.Добавить("Сотрудник");*/
			/*ТаблицаОтклонений.Индексы.Добавить("ДатаОстатков");*/
			/*ТаблицаКоличестваДнейОтпускаВГод	= МассивРезультатов[10].Выгрузить();*/
			/*ТаблицаКоличестваДнейОтпускаВГод.Индексы.Добавить("Сотрудник");*/
			/*ТаблицаКоличестваДнейОтпускаВГод.Индексы.Добавить("ДатаОстатков");*/
			/*ТаблицаКоличестваДнейОтпускаВГод.Индексы.Добавить("ВидЕжегодногоОтпуска");*/
			/*ТаблицаФактическихОтпусков			= МассивРезультатов[11].Выгрузить();*/
			/*ТаблицаФактическихОтпусков.Колонки.Добавить("ОстаткиПоРабочимГодам");*/
			/*ТаблицаФактическихОтпусков.Индексы.Добавить("Сотрудник");*/
			/*ТаблицаФактическихОтпусков.Индексы.Добавить("ДатаОстатков");*/
			/*ТаблицаФактическихОтпусков.Индексы.Добавить("ВидЕжегодногоОтпуска");*/
			/*РассчитанныеОстатки = Новый ТаблицаЗначений;*/
			/*РассчитанныеОстатки.Колонки.Добавить("Сотрудник");*/
			/*РассчитанныеОстатки.Колонки.Добавить("ДатаОстатков");*/
			/*РассчитанныеОстатки.Колонки.Добавить("ОстатокНаДату");*/
			/*РассчитанныеОстатки.Колонки.Добавить("ОстатокНаДатуПоВидамЕжегодныхОтпусков",	Новый ОписаниеТипов("Массив"));*/
			/*РассчитанныеОстатки.Колонки.Добавить("ПоложенныеПриПриемеНаРаботуВидыЕжегодныхОтпусков");*/
			/*РассчитанныеОстатки.Колонки.Добавить("ДанныеРасчета",							Новый ОписаниеТипов("Массив"));*/
			/*РассчитанныеОстатки.Колонки.Добавить("РабочийГодС");*/
			/*РассчитанныеОстатки.Колонки.Добавить("РабочийГодПо");*/
			/*РассчитанныеОстатки.Колонки.Добавить("Примечание");*/
			/*РассчитанныеОстатки.Колонки.Добавить("ОбособленноеПодразделение");*/
			/*РассчитанныеОстатки.Колонки.Добавить("Подразделение");*/
			/*РассчитанныеОстатки.Колонки.Добавить("Должность");*/
			/*РассчитанныеОстатки.Колонки.Добавить("ДатаПриемаНаРаботу");*/
			/*РассчитанныеОстатки.Колонки.Добавить("ДатаУвольнения");*/
			/*РассчитанныеОстатки.Колонки.Добавить("СотрудникУволен");*/
			/*РассчитанныеОстатки.Колонки.Добавить("Пол");*/
			/*РассчитанныеОстатки.Колонки.Добавить("ДатаНачалаПериода",						Новый ОписаниеТипов("Дата"));*/
			/*РассчитанныеОстатки.Колонки.Добавить("ДатаОкончанияПериода",					Новый ОписаниеТипов("Дата"));*/
			/*РассчитанныеОстатки.Колонки.Добавить("ВидЕжегодногоОтпускаПериода",				Новый ОписаниеТипов("СправочникСсылка.ВидыЕжегодныхОтпусков"));*/
			/*РассчитанныеОстатки.Колонки.Добавить("КоличествоКалендарныхДнейВПериоде",		Новый ОписаниеТипов("Число"));*/
			/*РассчитанныеОстатки.Колонки.Добавить("ПериодомИспользованоДнейПрошлыхЛет",		Новый ОписаниеТипов("Число"));*/
			/*РассчитанныеОстатки.Колонки.Добавить("ПериодомИспользованоДнейАвансом",			Новый ОписаниеТипов("Число"));*/
			/*РассчитанныеОстатки.Колонки.Добавить("РабочийГодПериодаС",						Новый ОписаниеТипов("Дата"));*/
			/*РассчитанныеОстатки.Колонки.Добавить("РабочийГодПериодаПо",						Новый ОписаниеТипов("Дата"));*/
			/*РассчитанныеОстатки.Колонки.Добавить("ПримечаниеПериода",						Новый ОписаниеТипов("Строка"));*/
			/*ДлинаСуток = 86400;*/
			return null;
		}
		// Процедуры для списания фактических отпусков

		public void СписатьФактическиеОтпускаКадровымиПриказами(/*Знач Регистратор, Знач Организация*/)
		{
			/*ПорядокСписанияФактическихОтпусков = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, "ПорядокСписанияФактическихОтпусков");*/
			if(true/*ПорядокСписанияФактическихОтпусков <> Перечисления.ПорядокСписанияФактическихОтпусков.КадровымиПриказами*/)
			{
				/*НаборЗаписей = РегистрыНакопления.ФактическиеОтпускаОрганизаций.СоздатьНаборЗаписей();*/
				/*НаборЗаписей.Отбор.Регистратор.Установить(Регистратор);*/
				/*НаборЗаписей.Записать();*/
			}
			/*// Если состояние = ЕжегодныйОтпуск и заполнен ПериодЗавершения, отпуск списывается регистратором;
*/
			/*// Для всех других состояний или пустого ПериодЗавершения отпуск списывается тем регистратором,
*/
			/*//  который прекращает отпуск;
*/
			/*// Если пользователь вводит "Возврат на работу", тем самым досрочно прекращая отпуск, документ
*/
			/*//  делает корректирующее движение. Остальные документы корректирующие движения не делают.
*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("Регистратор",	Регистратор);*/
			/*Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕжегодныеОтпуска.Сотрудник КАК Сотрудник,
	|	ЕжегодныеОтпуска.Период КАК ДатаНачала,
	|	ДОБАВИТЬКДАТЕ(ЕжегодныеОтпуска.ПериодЗавершения, СЕКУНДА, -1) КАК ДатаОкончания,
	|	ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтпКалендарныеДни) КАК ВидОсновногоОтпуска,
	|	ЕжегодныеОтпуска.ДатаНачалаДоп,
	|	ЕжегодныеОтпуска.ВидДополнительногоОтпуска,
	|	ЛОЖЬ КАК КорректироватьОтпуск,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК НоваяДатаОкончания,
	|	ЕжегодныеОтпуска.Регистратор КАК РегистраторНачалаОтпуска
	|ПОМЕСТИТЬ ВТ_ОтпускаСотрудников
	|ИЗ
	|	РегистрСведений.СостояниеРаботниковОрганизаций КАК ЕжегодныеОтпуска
	|ГДЕ
	|	ЕжегодныеОтпуска.Регистратор = &Регистратор
	|	И (НЕ ЕжегодныеОтпуска.ПериодЗавершения = ДАТАВРЕМЯ(1, 1, 1))
	|	И ЕжегодныеОтпуска.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускЕжегодный)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕжегодныеОтпускаНачало.Сотрудник,
	|	ЕжегодныеОтпускаНачало.Период,
	|	ВЫБОР
	|		КОГДА ЕжегодныеОтпускаНачало.ПериодЗавершения = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДОБАВИТЬКДАТЕ(ЕжегодныеОтпускаОкончание.Период, СЕКУНДА, -1)
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(ЕжегодныеОтпускаНачало.ПериодЗавершения, СЕКУНДА, -1)
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтпКалендарныеДни),
	|	ЕжегодныеОтпускаНачало.ДатаНачалаДоп,
	|	ЕжегодныеОтпускаНачало.ВидДополнительногоОтпуска,
	|	ВЫБОР
	|		КОГДА ЕжегодныеОтпускаОкончание.Регистратор ССЫЛКА Документ.ВозвратНаРаботуОрганизаций
	|				И ЕжегодныеОтпускаНачало.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕжегодныеОтпускаОкончание.Регистратор ССЫЛКА Документ.ВозвратНаРаботуОрганизаций
	|				И ЕжегодныеОтпускаНачало.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДОБАВИТЬКДАТЕ(ЕжегодныеОтпускаОкончание.Период, СЕКУНДА, -1)
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ,
	|	ЕжегодныеОтпускаНачало.Регистратор
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕжегодныеОтпускаОкончание.Сотрудник КАК Сотрудник,
	|		МАКСИМУМ(ЕжегодныеОтпускаНачало.Период) КАК ДатаНачала,
	|		ЕжегодныеОтпускаОкончание.Период КАК ДатаОкончания
	|	ИЗ
	|		РегистрСведений.СостояниеРаботниковОрганизаций КАК ЕжегодныеОтпускаНачало
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеРаботниковОрганизаций КАК ЕжегодныеОтпускаОкончание
	|			ПО ЕжегодныеОтпускаНачало.Сотрудник = ЕжегодныеОтпускаОкончание.Сотрудник
	|				И ЕжегодныеОтпускаНачало.Период < ЕжегодныеОтпускаОкончание.Период
	|				И (ЕжегодныеОтпускаОкончание.Регистратор = &Регистратор)
	|				И (ЕжегодныеОтпускаОкончание.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускЕжегодный))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЕжегодныеОтпускаОкончание.Сотрудник,
	|		ЕжегодныеОтпускаОкончание.Период) КАК ЕжегодныеОтпускаНачалоСрез
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеРаботниковОрганизаций КАК ЕжегодныеОтпускаНачало
	|		ПО ЕжегодныеОтпускаНачалоСрез.Сотрудник = ЕжегодныеОтпускаНачало.Сотрудник
	|			И ЕжегодныеОтпускаНачалоСрез.ДатаНачала = ЕжегодныеОтпускаНачало.Период
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеРаботниковОрганизаций КАК ЕжегодныеОтпускаОкончание
	|		ПО ЕжегодныеОтпускаНачалоСрез.Сотрудник = ЕжегодныеОтпускаОкончание.Сотрудник
	|			И ЕжегодныеОтпускаНачалоСрез.ДатаОкончания = ЕжегодныеОтпускаОкончание.Период
	|ГДЕ
	|	ЕжегодныеОтпускаНачало.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускЕжегодный)
	|	И ВЫБОР
	|			КОГДА ЕжегодныеОтпускаНачало.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ВЫБОР
	|						КОГДА ЕжегодныеОтпускаОкончание.Регистратор ССЫЛКА Документ.ВозвратНаРаботуОрганизаций
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА ЕжегодныеОтпускаОкончание.Регистратор ССЫЛКА Документ.ВозвратНаРаботуОрганизаций
	|					И ЕжегодныеОтпускаНачало.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ЕжегодныеОтпускаНачало.ПериодЗавершения > ЕжегодныеОтпускаОкончание.Период
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтпускаСотрудников.Сотрудник,
	|	ОтпускаСотрудников.ДатаНачала КАК ДатаНачала,
	|	ВЫБОР
	|		КОГДА ОтпускаСотрудников.ДатаНачалаДоп = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ ОтпускаСотрудников.ВидДополнительногоОтпуска = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка)
	|				ИЛИ ОтпускаСотрудников.ДатаОкончания < ОтпускаСотрудников.ДатаНачалаДоп
	|			ТОГДА ОтпускаСотрудников.ДатаОкончания
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(ОтпускаСотрудников.ДатаНачалаДоп, СЕКУНДА, -1)
	|	КОНЕЦ КАК ДатаОкончания,
	|	ОтпускаСотрудников.ВидОсновногоОтпуска.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
	|	ВЫБОР
	|		КОГДА ОтпускаСотрудников.КорректироватьОтпуск
	|				И ОтпускаСотрудников.НоваяДатаОкончания < ВЫБОР
	|					КОГДА ОтпускаСотрудников.ДатаНачалаДоп = ДАТАВРЕМЯ(1, 1, 1)
	|							ИЛИ ОтпускаСотрудников.ВидДополнительногоОтпуска = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка)
	|						ТОГДА ОтпускаСотрудников.ДатаОкончания
	|					ИНАЧЕ ДОБАВИТЬКДАТЕ(ОтпускаСотрудников.ДатаНачалаДоп, СЕКУНДА, -1)
	|				КОНЕЦ
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК КорректироватьОтпуск,
	|	ВЫБОР
	|		КОГДА ОтпускаСотрудников.НоваяДатаОкончания < ВЫБОР
	|				КОГДА ОтпускаСотрудников.ДатаНачалаДоп = ДАТАВРЕМЯ(1, 1, 1)
	|						ИЛИ ОтпускаСотрудников.ВидДополнительногоОтпуска = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка)
	|					ТОГДА ОтпускаСотрудников.ДатаОкончания
	|				ИНАЧЕ ДОБАВИТЬКДАТЕ(ОтпускаСотрудников.ДатаНачалаДоп, СЕКУНДА, -1)
	|			КОНЕЦ
	|			ТОГДА ОтпускаСотрудников.НоваяДатаОкончания
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК НоваяДатаОкончания,
	|	СУММА(ВЫБОР
	|			КОГДА ОтпускаСотрудников.ВидОсновногоОтпуска.ВидЕжегодногоОтпуска.СпособРасчетаОстаткаОтпуска = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОстаткаОтпуска.ПоРабочимДням)
	|				ТОГДА ЕСТЬNULL(ПроизводственныйКалендарь.Шестидневка, 0)
	|			ИНАЧЕ ЕСТЬNULL(ПроизводственныйКалендарь.КалендарныеДни, 0)
	|		КОНЕЦ) КАК ДнейОтпуска,
	|	ОтпускаСотрудников.РегистраторНачалаОтпуска
	|ПОМЕСТИТЬ ВТ_КадровыеОтпуска
	|ИЗ
	|	ВТ_ОтпускаСотрудников КАК ОтпускаСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК ПроизводственныйКалендарь
	|		ПО (ПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ ОтпускаСотрудников.ДатаНачала И ВЫБОР
	|				КОГДА ОтпускаСотрудников.ДатаНачалаДоп = ДАТАВРЕМЯ(1, 1, 1)
	|						ИЛИ ОтпускаСотрудников.ВидДополнительногоОтпуска = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка)
	|						ИЛИ ОтпускаСотрудников.ДатаОкончания < ОтпускаСотрудников.ДатаНачалаДоп
	|					ТОГДА ОтпускаСотрудников.ДатаОкончания
	|				ИНАЧЕ ДОБАВИТЬКДАТЕ(ОтпускаСотрудников.ДатаНачалаДоп, СЕКУНДА, -1)
	|			КОНЕЦ)
	|ГДЕ
	|	(НЕ ОтпускаСотрудников.ВидОсновногоОтпуска.ВидЕжегодногоОтпуска = ЗНАЧЕНИЕ(Справочник.ВидыЕжегодныхОтпусков.ПустаяСсылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтпускаСотрудников.Сотрудник,
	|	ОтпускаСотрудников.ДатаНачала,
	|	ОтпускаСотрудников.ВидОсновногоОтпуска.ВидЕжегодногоОтпуска,
	|	ОтпускаСотрудников.РегистраторНачалаОтпуска,
	|	ВЫБОР
	|		КОГДА ОтпускаСотрудников.ДатаНачалаДоп = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ ОтпускаСотрудников.ВидДополнительногоОтпуска = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка)
	|				ИЛИ ОтпускаСотрудников.ДатаОкончания < ОтпускаСотрудников.ДатаНачалаДоп
	|			ТОГДА ОтпускаСотрудников.ДатаОкончания
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(ОтпускаСотрудников.ДатаНачалаДоп, СЕКУНДА, -1)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ОтпускаСотрудников.КорректироватьОтпуск
	|				И ОтпускаСотрудников.НоваяДатаОкончания < ВЫБОР
	|					КОГДА ОтпускаСотрудников.ДатаНачалаДоп = ДАТАВРЕМЯ(1, 1, 1)
	|							ИЛИ ОтпускаСотрудников.ВидДополнительногоОтпуска = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка)
	|						ТОГДА ОтпускаСотрудников.ДатаОкончания
	|					ИНАЧЕ ДОБАВИТЬКДАТЕ(ОтпускаСотрудников.ДатаНачалаДоп, СЕКУНДА, -1)
	|				КОНЕЦ
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ОтпускаСотрудников.НоваяДатаОкончания < ВЫБОР
	|				КОГДА ОтпускаСотрудников.ДатаНачалаДоп = ДАТАВРЕМЯ(1, 1, 1)
	|						ИЛИ ОтпускаСотрудников.ВидДополнительногоОтпуска = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка)
	|					ТОГДА ОтпускаСотрудников.ДатаОкончания
	|				ИНАЧЕ ДОБАВИТЬКДАТЕ(ОтпускаСотрудников.ДатаНачалаДоп, СЕКУНДА, -1)
	|			КОНЕЦ
	|			ТОГДА ОтпускаСотрудников.НоваяДатаОкончания
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтпускаСотрудников.Сотрудник,
	|	ОтпускаСотрудников.ДатаНачалаДоп,
	|	ОтпускаСотрудников.ДатаОкончания,
	|	ОтпускаСотрудников.ВидДополнительногоОтпуска.ВидЕжегодногоОтпуска,
	|	ВЫБОР
	|		КОГДА ОтпускаСотрудников.КорректироватьОтпуск
	|				И ОтпускаСотрудников.НоваяДатаОкончания < ОтпускаСотрудников.ДатаОкончания
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ОтпускаСотрудников.НоваяДатаОкончания < ОтпускаСотрудников.ДатаОкончания
	|			ТОГДА ОтпускаСотрудников.НоваяДатаОкончания
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ,
	|	СУММА(ВЫБОР
	|			КОГДА ОтпускаСотрудников.ВидДополнительногоОтпуска.ВидЕжегодногоОтпуска.СпособРасчетаОстаткаОтпуска = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОстаткаОтпуска.ПоРабочимДням)
	|				ТОГДА ЕСТЬNULL(ПроизводственныйКалендарь.Шестидневка, 0)
	|			ИНАЧЕ ЕСТЬNULL(ПроизводственныйКалендарь.КалендарныеДни, 0)
	|		КОНЕЦ),
	|	ОтпускаСотрудников.РегистраторНачалаОтпуска
	|ИЗ
	|	ВТ_ОтпускаСотрудников КАК ОтпускаСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК ПроизводственныйКалендарь
	|		ПО (ПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ ОтпускаСотрудников.ДатаНачалаДоп И ОтпускаСотрудников.ДатаОкончания)
	|ГДЕ
	|	(НЕ ОтпускаСотрудников.ВидДополнительногоОтпуска.ВидЕжегодногоОтпуска = ЗНАЧЕНИЕ(Справочник.ВидыЕжегодныхОтпусков.ПустаяСсылка))
	|	И (НЕ ОтпускаСотрудников.ДатаНачалаДоп = ДАТАВРЕМЯ(1, 1, 1))
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтпускаСотрудников.Сотрудник,
	|	ОтпускаСотрудников.ДатаНачалаДоп,
	|	ОтпускаСотрудников.ДатаОкончания,
	|	ОтпускаСотрудников.ВидДополнительногоОтпуска.ВидЕжегодногоОтпуска,
	|	ОтпускаСотрудников.РегистраторНачалаОтпуска,
	|	ВЫБОР
	|		КОГДА ОтпускаСотрудников.КорректироватьОтпуск
	|				И ОтпускаСотрудников.НоваяДатаОкончания < ОтпускаСотрудников.ДатаОкончания
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ОтпускаСотрудников.НоваяДатаОкончания < ОтпускаСотрудников.ДатаОкончания
	|			ТОГДА ОтпускаСотрудников.НоваяДатаОкончания
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаНачала,
	|	ДатаОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СостояниеРаботниковОрганизаций.Регистратор.Дата КАК ДатаРегистрации
	|ПОМЕСТИТЬ ВТ_ДатаРегистрации
	|ИЗ
	|	РегистрСведений.СостояниеРаботниковОрганизаций КАК СостояниеРаботниковОрганизаций
	|ГДЕ
	|	СостояниеРаботниковОрганизаций.Регистратор = &Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Отпуска.Сотрудник КАК Сотрудник,
	|	Отпуска.ВидЕжегодногоОтпуска,
	|	ВЫБОР
	|		КОГДА Отпуска.КорректироватьОтпуск
	|			ТОГДА Отпуска.ДатаНачала
	|		ИНАЧЕ Отпуска.ДатаНачала
	|	КОНЕЦ КАК ДатаНачала,
	|	Отпуска.ДатаОкончания,
	|	ВЫБОР
	|		КОГДА Отпуска.КорректироватьОтпуск
	|			ТОГДА Отпуска.НовоеКоличествоКадровыхДнейОтпуска - Отпуска.КадровыхДнейОтпуска
	|		ИНАЧЕ Отпуска.КадровыхДнейОтпуска - Отпуска.РасчетныхДнейОтпуска
	|	КОНЕЦ КАК ДнейОтпуска,
	|	ВТ_ДатаРегистрации.ДатаРегистрации
	|ИЗ
	|	(ВЫБРАТЬ
	|		КадровыеОтпуска.Сотрудник КАК Сотрудник,
	|		КадровыеОтпуска.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
	|		КадровыеОтпуска.ДатаНачала КАК ДатаНачала,
	|		КадровыеОтпуска.ДатаОкончания КАК ДатаОкончания,
	|		СУММА(ЕСТЬNULL(ФактическиеОтпускаОрганизаций.Количество, 0)) КАК РасчетныхДнейОтпуска,
	|		КадровыеОтпуска.ДнейОтпуска КАК КадровыхДнейОтпуска,
	|		КадровыеОтпуска.НовоеКоличествоДнейОтпуска КАК НовоеКоличествоКадровыхДнейОтпуска,
	|		КадровыеОтпуска.КорректироватьОтпуск КАК КорректироватьОтпуск
	|	ИЗ
	|		(ВЫБРАТЬ
	|			КадровыеОтпуска.Сотрудник КАК Сотрудник,
	|			КадровыеОтпуска.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
	|			ВЫБОР
	|				КОГДА КадровыеОтпуска.КорректироватьОтпуск
	|					ТОГДА ДОБАВИТЬКДАТЕ(КадровыеОтпуска.НоваяДатаОкончания, СЕКУНДА, 1)
	|				ИНАЧЕ КадровыеОтпуска.ДатаНачала
	|			КОНЕЦ КАК ДатаНачала,
	|			КадровыеОтпуска.ДатаОкончания КАК ДатаОкончания,
	|			КадровыеОтпуска.ДнейОтпуска КАК ДнейОтпуска,
	|			КадровыеОтпуска.КорректироватьОтпуск КАК КорректироватьОтпуск,
	|			СУММА(ВЫБОР
	|					КОГДА КадровыеОтпуска.ВидЕжегодногоОтпуска.СпособРасчетаОстаткаОтпуска = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОстаткаОтпуска.ПоРабочимДням)
	|						ТОГДА ЕСТЬNULL(ПроизводственныйКалендарьКорректировка.Шестидневка, 0)
	|					ИНАЧЕ ЕСТЬNULL(ПроизводственныйКалендарьКорректировка.КалендарныеДни, 0)
	|				КОНЕЦ) КАК НовоеКоличествоДнейОтпуска,
	|			КадровыеОтпуска.РегистраторНачалаОтпуска КАК РегистраторНачалаОтпуска
	|		ИЗ
	|			ВТ_КадровыеОтпуска КАК КадровыеОтпуска
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК ПроизводственныйКалендарьКорректировка
	|				ПО (ПроизводственныйКалендарьКорректировка.ДатаКалендаря МЕЖДУ КадровыеОтпуска.ДатаНачала И КадровыеОтпуска.НоваяДатаОкончания)
	|					И (КадровыеОтпуска.КорректироватьОтпуск)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			КадровыеОтпуска.Сотрудник,
	|			КадровыеОтпуска.ВидЕжегодногоОтпуска,
	|			КадровыеОтпуска.ДатаОкончания,
	|			КадровыеОтпуска.КорректироватьОтпуск,
	|			КадровыеОтпуска.ДнейОтпуска,
	|			КадровыеОтпуска.РегистраторНачалаОтпуска,
	|			ВЫБОР
	|				КОГДА КадровыеОтпуска.КорректироватьОтпуск
	|					ТОГДА ДОБАВИТЬКДАТЕ(КадровыеОтпуска.НоваяДатаОкончания, СЕКУНДА, 1)
	|				ИНАЧЕ КадровыеОтпуска.ДатаНачала
	|			КОНЕЦ) КАК КадровыеОтпуска
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ФактическиеОтпускаОрганизаций КАК ФактическиеОтпускаОрганизаций
	|			ПО КадровыеОтпуска.Сотрудник = ФактическиеОтпускаОрганизаций.Сотрудник
	|				И КадровыеОтпуска.ВидЕжегодногоОтпуска = ФактическиеОтпускаОрганизаций.ВидЕжегодногоОтпуска
	|				И (ФактическиеОтпускаОрганизаций.Период МЕЖДУ КадровыеОтпуска.ДатаНачала И КадровыеОтпуска.ДатаОкончания
	|					ИЛИ ФактическиеОтпускаОрганизаций.ДатаОкончания МЕЖДУ КадровыеОтпуска.ДатаНачала И КадровыеОтпуска.ДатаОкончания
	|					ИЛИ КадровыеОтпуска.ДатаНачала МЕЖДУ ФактическиеОтпускаОрганизаций.Период И ФактическиеОтпускаОрганизаций.ДатаОкончания
	|					ИЛИ КадровыеОтпуска.ДатаОкончания МЕЖДУ ФактическиеОтпускаОрганизаций.Период И ФактическиеОтпускаОрганизаций.ДатаОкончания)
	|				И (ФактическиеОтпускаОрганизаций.Регистратор <> &Регистратор)
	|				И КадровыеОтпуска.РегистраторНачалаОтпуска <> ФактическиеОтпускаОрганизаций.Регистратор
	|				И КадровыеОтпуска.РегистраторНачалаОтпуска.Дата > ФактическиеОтпускаОрганизаций.ДатаРегистрации
	|	
	|	СГРУППИРОВАТЬ ПО
	|		КадровыеОтпуска.Сотрудник,
	|		КадровыеОтпуска.ВидЕжегодногоОтпуска,
	|		КадровыеОтпуска.ДатаНачала,
	|		КадровыеОтпуска.ДатаОкончания,
	|		КадровыеОтпуска.ДнейОтпуска,
	|		КадровыеОтпуска.НовоеКоличествоДнейОтпуска,
	|		КадровыеОтпуска.КорректироватьОтпуск) КАК Отпуска,
	|	ВТ_ДатаРегистрации КАК ВТ_ДатаРегистрации
	|ГДЕ
	|	ВЫБОР
	|			КОГДА Отпуска.КорректироватьОтпуск
	|				ТОГДА Отпуска.НовоеКоличествоКадровыхДнейОтпуска - Отпуска.КадровыхДнейОтпуска <> 0
	|			ИНАЧЕ Отпуска.КадровыхДнейОтпуска - Отпуска.РасчетныхДнейОтпуска <> 0
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	ДатаНачала";*/
			/*Выборка = Запрос.Выполнить().Выбрать();*/
			/*НаборЗаписей = РегистрыНакопления.ФактическиеОтпускаОрганизаций.СоздатьНаборЗаписей();*/
			/*НаборЗаписей.Отбор.Регистратор.Установить(Регистратор);*/
			while(true/*Выборка.Следующий()*/)
			{
				/*Движение = НаборЗаписей.Добавить();*/
				/*// Свойства
*/
				/*Движение.Период							= Выборка.ДатаНачала;*/
				/*// Измерения
*/
				/*Движение.Сотрудник						= Выборка.Сотрудник;*/
				/*Движение.ВидЕжегодногоОтпуска			= Выборка.ВидЕжегодногоОтпуска;*/
				/*// Ресурсы
*/
				/*Движение.Количество						= Выборка.ДнейОтпуска;*/
				/*// Реквизиты
*/
				/*Движение.ДатаОкончания					= Выборка.ДатаОкончания;*/
				/*Движение.ДатаРегистрации				= Выборка.ДатаРегистрации;*/
			}
			/*;
	НаборЗаписей.Записать();*/
		}

		public void СписатьФактическиеОтпускаОсновнымиНачислениями(/*Знач Регистратор, Знач Организация*/)
		{
			/*ПорядокСписанияФактическихОтпусков = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, "ПорядокСписанияФактическихОтпусков");*/
			if(true/*ПорядокСписанияФактическихОтпусков <> Перечисления.ПорядокСписанияФактическихОтпусков.РасчетнымиДокументами*/)
			{
			}
			/*// Необходимо получить фактическое количество дней отпуска, используя таблицу ФПД
*/
			/*// Необходимо собрать данные по кадровым отпускам за те же периоды и по тем сотрудникам
*/
			/*// После чего сделать движения на положительную разницу количества дней отпуска между кадровыми и расчетными данными
*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("Регистратор",	Регистратор);*/
			/*Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.ПериодДействия КАК ПериодДействия,
	|	Начисления.ВидРасчета КАК ВидРасчета,
	|	Начисления.Регистратор
	|ПОМЕСТИТЬ ВТ_СотрудникиПериодыДействия
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
	|ГДЕ
	|	Начисления.Регистратор = &Регистратор
	|	И (НЕ Начисления.ВидРасчета.ВидЕжегодногоОтпуска = ЗНАЧЕНИЕ(Справочник.ВидыЕжегодныхОтпусков.ПустаяСсылка))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ПериодДействия,
	|	ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачисленияФПД.Сотрудник КАК Сотрудник,
	|	НачисленияФПД.ПериодДействияНачало КАК ПериодДействияНачало,
	|	НачисленияФПД.ПериодДействияКонец КАК ПериодДействияКонец,
	|	НачисленияФПД.ВидРасчета.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
	|	СУММА(ПроизводственныйКалендарь.КалендарныеДни * ВЫБОР
	|			КОГДА НачисленияФПД.Сторно
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ДнейОтпуска,
	|	НачисленияФПД.Сторно КАК Сторно,
	|	НачисленияФПД.Регистратор.Дата КАК ДатаРегистрации,
	|	НачисленияФПД.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
	|			(Сотрудник, ПериодДействия, ВидРасчета, Регистратор) В
	|				(ВЫБРАТЬ
	|					ОсновныеНачисления.Сотрудник,
	|					ОсновныеНачисления.ПериодДействия,
	|					ОсновныеНачисления.ВидРасчета,
	|					ОсновныеНачисления.Регистратор
	|				ИЗ
	|					ВТ_СотрудникиПериодыДействия КАК ОсновныеНачисления)) КАК НачисленияФПД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК ПроизводственныйКалендарь
	|		ПО (ПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ НачисленияФПД.ПериодДействияНачало И НачисленияФПД.ПериодДействияКонец)
	|
	|СГРУППИРОВАТЬ ПО
	|	НачисленияФПД.Сотрудник,
	|	НачисленияФПД.ПериодДействияНачало,
	|	НачисленияФПД.ПериодДействияКонец,
	|	НачисленияФПД.Сторно,
	|	НачисленияФПД.ВидРасчета.ВидЕжегодногоОтпуска,
	|	НачисленияФПД.Регистратор.Дата,
	|	НачисленияФПД.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";*/
			/*Выборка = Запрос.Выполнить().Выбрать();*/
			/*НаборЗаписей = РегистрыНакопления.ФактическиеОтпускаОрганизаций.СоздатьНаборЗаписей();*/
			/*НаборЗаписей.Отбор.Регистратор.Установить(Регистратор);*/
			/*НаборЗаписей.Прочитать();*/
			while(true/*Выборка.Следующий()*/)
			{
				/*Движение = НаборЗаписей.Добавить();*/
				/*// Свойства
*/
				/*Движение.Период					= Выборка.ПериодДействияНачало;*/
				/*// Измерения
*/
				/*Движение.Сотрудник				= Выборка.Сотрудник;*/
				/*Движение.ВидЕжегодногоОтпуска	= Выборка.ВидЕжегодногоОтпуска;*/
				/*// Ресурсы
*/
				/*Движение.Количество				= Выборка.ДнейОтпуска;*/
				/*// Реквизиты
*/
				/*Движение.ДатаОкончания			= Выборка.ПериодДействияКонец;*/
				/*Движение.ДатаРегистрации		= Выборка.ДатаРегистрации;*/
			}
			/*;
	НаборЗаписей.Записать();*/
		}

		public void СписатьФактическиеОтпускаДополнительнымиНачислениями(/*Знач Регистратор*/)
		{
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("Регистратор",	Регистратор);*/
			/*Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.ДатаНачалаСобытия КАК ПериодДействия,
	|	Начисления.Сторно КАК Сторно,
	|	Начисления.ВидРасчета.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
	|	Начисления.ОплаченоДнейЧасов КАК ДнейОтпуска,
	|	Начисления.Регистратор.Дата КАК ДатаРегистрации
	|ИЗ
	|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК Начисления
	|ГДЕ
	|	Начисления.Регистратор = &Регистратор
	|	И (НЕ Начисления.ВидРасчета.ВидЕжегодногоОтпуска = ЗНАЧЕНИЕ(Справочник.ВидыЕжегодныхОтпусков.ПустаяСсылка))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	Сторно УБЫВ";*/
			/*Выборка = Запрос.Выполнить().Выбрать();*/
			/*НаборЗаписей = РегистрыНакопления.ФактическиеОтпускаОрганизаций.СоздатьНаборЗаписей();*/
			/*НаборЗаписей.Отбор.Регистратор.Установить(Регистратор);*/
			/*НаборЗаписей.Прочитать();*/
			while(true/*Выборка.Следующий()*/)
			{
				/*Движение = НаборЗаписей.Добавить();*/
				/*// Свойства
*/
				/*Движение.Период					= Выборка.ПериодДействия;*/
				/*// Измерения
*/
				/*Движение.Сотрудник				= Выборка.Сотрудник;*/
				/*Движение.ВидЕжегодногоОтпуска	= Выборка.ВидЕжегодногоОтпуска;*/
				/*// Ресурсы
*/
				/*Движение.Количество				= Выборка.ДнейОтпуска;*/
				/*// Реквизиты
*/
				/*Движение.Компенсация			= Истина;*/
				/*Движение.ДатаРегистрации		= Выборка.ДатаРегистрации;*/
			}
			/*;
	НаборЗаписей.Записать();*/
		}

		public void СписатьФактическиеОтпускаУдержаниями(/*Регистратор*/)
		{
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("Регистратор",	Регистратор);*/
			/*Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Удержания.Сотрудник КАК Сотрудник,
	|	Удержания.ДатаНачалаСобытия КАК ПериодДействия,
	|	Удержания.Сторно КАК Сторно,
	|	Начисления.ВидЕжегодногоОтпуска,
	|	Удержания.Показатель1 КАК ДнейОтпуска,
	|	Удержания.Регистратор.Дата КАК ДатаРегистрации
	|ИЗ
	|	РегистрРасчета.УдержанияРаботниковОрганизаций КАК Удержания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК Начисления
	|		ПО (Начисления.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.КомпенсацияОтпускаКалендарныеДни))
	|			И ((НЕ Начисления.ВидЕжегодногоОтпуска = ЗНАЧЕНИЕ(ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.ПустаяСсылка)))
	|ГДЕ
	|	Удержания.Регистратор = &Регистратор
	|	И Удержания.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.УдержаниеЗаНеотработанныйОтпускКалендарныеДни)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	Сторно УБЫВ";*/
			/*Выборка = Запрос.Выполнить().Выбрать();*/
			/*НаборЗаписей = РегистрыНакопления.ФактическиеОтпускаОрганизаций.СоздатьНаборЗаписей();*/
			/*НаборЗаписей.Отбор.Регистратор.Установить(Регистратор);*/
			/*НаборЗаписей.Прочитать();*/
			while(true/*Выборка.Следующий()*/)
			{
				/*Движение = НаборЗаписей.Добавить();*/
				/*// Свойства
*/
				/*Движение.Период					= Выборка.ПериодДействия;*/
				/*// Измерения
*/
				/*Движение.Сотрудник				= Выборка.Сотрудник;*/
				/*Движение.ВидЕжегодногоОтпуска	= Выборка.ВидЕжегодногоОтпуска;*/
				/*// Ресурсы
*/
				/*Движение.Количество				= -Выборка.ДнейОтпуска * ?(Выборка.Сторно, -1, 1);*/
				/*// Реквизиты
*/
				/*Движение.Компенсация			= Истина;*/
				/*Движение.ДатаРегистрации		= Выборка.ДатаРегистрации;*/
			}
			/*;
	НаборЗаписей.Записать();*/
		}
		// Процедура записи расчитанных остатков в справочник остатков

		public object ОстатокОтпускаСпискаСотрудниковНаПоследнийРабочийГод(/*Знач МассивСотрудников, Знач ДатаОстатков = '00010101'*/)
		{
			if(true/*Не ЗначениеЗаполнено(ДатаОстатков)*/)
			{
				/*ДатаОстатков = ОбщегоНазначения.ПолучитьРабочуюДату();*/
			}
			/*ТаблицаДанных = ОписаниеТаблицыДанных();*/
			/*Результат = ОстаткиОтпусков(ТаблицаДанных);*/
			/*ТаблицаСведений = Новый ТаблицаЗначений;*/
			/*ТаблицаСведений.Колонки.Добавить("Сотрудник");*/
			/*ТаблицаСведений.Колонки.Добавить("ОстаткиВРазрезеВидовОтпусков");*/
			return null;
		}

		public void РассчитатьОстаткиИЗаписатьИхВСправочник(/**/)
		{
			/*РабДата = НачалоДня(ОбщегоНазначения.ПолучитьРабочуюДату());*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("РабДата",	РабДата);*/
			/*Запрос.Текст =
	"ВЫБРАТЬ
	|	РаботникиСрезПоследних.Сотрудник КАК Сотрудник
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&РабДата, ) КАК РаботникиСрезПоследних
	|ГДЕ
	|	РаботникиСрезПоследних.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)";*/
			/*СписокСотрудников = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник");*/
			/*Результат = ОстатокОтпускаСпискаСотрудниковНаПоследнийРабочийГод(СписокСотрудников, РабДата);*/
		}
	}
}

