using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace V82.ОбщиеМодули
{
	public partial class КадровоеПеремещениеПереопределяемый
	{

		public void ДополнитьСтруктуруПечатныхФорм(/*СтруктураПечатныхФорм, ДокументОбъект*/)
		{
			/*// В этой конфигурации структура печатных форм не дополняется
*/
		}

		public object ПечатьДополнительныхФорм(/*ИмяМакета, Объект*/)
		{
			return null;
		}

		public void ДобавитьДополнительноПоСтроке(/*ДокументОбъект, СтрокаТабличнойЧасти*/)
		{
			/*// В этой конфигурации дополнительных действий не предусмотрено
*/
		}

		public void ДобавитьДополнительныеДвижения(/*ДокументОбъект, Отказ, Заголовок*/)
		{
			/*// В этой конфигурации дополнительных действий не предусмотрено
*/
		}

		public void ФормаДокументаПередОткрытиемДополнительно(/*Форма, ДополнительныеДействия, ДополнительныеОбработчики*/)
		{
			/*// В этой конфигурации дополнительных действий не предусмотрено
*/
		}

		public void ФормаДокументаРаботникиПриПолученииДанныхДополнительно(/*ПолеРаботники, ОформленияСтрок*/)
		{
			/*// В этой конфигурации структура печатных форм не дополняется
*/
		}
		// УстановитьЗначенияКолонкиТабельныйНомерСтрока()

		public void ДозаполнитьСтрокуДаннымиРаботникаДоНазначения(/*СтрокаТабличнойЧасти, Выборка*/)
		{
			/*// В этой конфигурации структура печатных форм не дополняется
*/
		}

		public void ВыполнитьДополнительныеДействия(/*Форма, Кнопка*/)
		{
			/*// В этой конфигурации дополнительных действий не предусмотрено
*/
		}

		public void ОбработатьДополнительноПриИзменении(/*Форма, Элемент*/)
		{
			/*// В этой конфигурации дополнительных действий не предусмотрено
*/
		}

		public void УдалитьДополнительноПоСтроке(/*Форма, Сотрудник*/)
		{
			/*// В этой конфигурации дополнительных действий не предусмотрено
*/
		}

		public void ФормаДокументаРаботникиПослеУдаленияСтрокиДополнительно(/*Форма*/)
		{
			/*// В этой конфигурации дополнительных действий не предусмотрено
*/
		}

		public object СформироватьЗапросПоДаннымРаботникаДоНазначения(/*Запрос, Ссылка*/)
		{
			/*ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(Работники.Период) КАК Период,
	|	ТаблицаСотрудников.Сотрудник КАК Сотрудник,
	|	ТаблицаСотрудников.Сотрудник.ФизЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ ДатыПоследнихДвиженийРаботников
	|ИЗ
	|	ВТ_ТаблицаСотрудников КАК ТаблицаСотрудников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Работники КАК Работники
	|		ПО (Работники.Период <= ТаблицаСотрудников.ДатаНачала)
	|			И ТаблицаСотрудников.Сотрудник.ФизЛицо = Работники.ФизЛицо
	|			И (Работники.Регистратор <> &Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСотрудников.Сотрудник,
	|	ТаблицаСотрудников.Сотрудник.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыПоследнихДвиженийРаботников.Сотрудник КАК Сотрудник,
	|	ДанныеПоРаботникуДоНазначения.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок,
	|	ДанныеПоРаботникуДоНазначения.Подразделение КАК Подразделение,
	|	ДанныеПоРаботникуДоНазначения.Должность КАК Должность
	|ИЗ
	|	ДатыПоследнихДвиженийРаботников КАК ДатыПоследнихДвиженийРаботников
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Работники КАК ДанныеПоРаботникуДоНазначения
	|		ПО (ДанныеПоРаботникуДоНазначения.Период = ДатыПоследнихДвиженийРаботников.Период)
	|			И ДатыПоследнихДвиженийРаботников.ФизЛицо = ДанныеПоРаботникуДоНазначения.ФизЛицо
	|			И (ДанныеПоРаботникуДоНазначения.Регистратор <> &Ссылка)";*/
			/*Запрос.УстановитьПараметр("Ссылка",	Ссылка);*/
			/*Запрос.Текст = ТекстЗапроса;*/
			return null;
		}
	}
}

