using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace V82.ОбщиеМодули
{
	public partial class ПроцедурыРасчетаСебестоимостиРасширеннаяАналитика
	{
		///////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ВЫПОЛНЕНИЯ ЗАДАННЫХ В ДОКУМЕНТЕ ДЕЙСТВИЙ
		// Процедура осуществляет выполнение заданных в документе действий.
		//
		// Параметры:
		//  СтруктураШапкиДокумента - Структура - Реквизиты документа
		//  ТаблицаОшибок - таблица, подготовленная УправлениеЗатратами.СформироватьТаблицуОшибок()

		public void ВыполнитьДействияДокумента(/*СтруктураШапкиДокумента, ТаблицаОшибок*/)
		{
			/*ЕстьРасчетФактическойСебестоимости = Ложь;*/
			/*ЕстьРаспределениеРасходов = Ложь;*/
			/*ЕстьРасчетБазыРаспределения = Ложь;*/
			/*ФормированиеДвиженийПоРегистрам = Ложь;*/
			/*СписыватьКосвенныеРасходыНаРБП = Ложь;*/
			/*РассчитыватьСебестоимостьПроизводственныхУслуг = Ложь;*/
			/*ЕстьРаспределениеТЗР = Ложь;*/
			/*ПростоеРаспределение = СтруктураШапкиДокумента.ПростоеРаспределение;*/
			/*// Получим список действий документа
*/
			/*Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	РасчетСебестоимостиВыпускаВыполняемыеДействия.ВыполняемоеДействие
	|ИЗ
	|	Документ.РасчетСебестоимостиВыпуска.ВыполняемыеДействия КАК РасчетСебестоимостиВыпускаВыполняемыеДействия
	|ГДЕ
	|	РасчетСебестоимостиВыпускаВыполняемыеДействия.Ссылка = &Ссылка"
	);*/
			/*Запрос.УстановитьПараметр("Ссылка", СтруктураШапкиДокумента.Ссылка);*/
			/*ВыборкаДействий = Запрос.Выполнить().Выбрать();*/
			while(true/*ВыборкаДействий.Следующий()*/)
			{
				if(true/*ВыборкаДействий.ВыполняемоеДействие = Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетФактическойСебестоимости*/)
				{
					/*ЕстьРасчетФактическойСебестоимости = Истина;*/
				}
			}
			/*;
	
	СтруктураШапкиДокумента.Вставить("СписыватьКосвенныеРасходыНаРБП", СписыватьКосвенныеРасходыНаРБП);*/
			if(true/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете*/)
			{
				/*УправлениеЗапасамиРасширеннаяАналитика.ВключитьНДСВЗатраты(СтруктураШапкиДокумента);*/
				/*ДобавитьЗаписьВПротоколРасчета("НДС включен в затраты", ТаблицаОшибок, СтруктураШапкиДокумента);*/
			}
			if(true/*ЕстьРаспределениеТЗР
	  И	СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете*/)
			{
				if(true/*СтруктураШапкиДокумента.ОтноситьТЗРНаОтдельныйСчет*/)
				{
					/*УправлениеЗапасамиРасширеннаяАналитика.РаспределитьТЗРСоСчета16(СтруктураШапкиДокумента);*/
					/*ДобавитьЗаписьВПротоколРасчета("Распределены ТЗР", ТаблицаОшибок, СтруктураШапкиДокумента);*/
				}
			}
			if(true/*РассчитыватьСебестоимостьПроизводственныхУслуг*/)
			{
				/*СформироватьДвиженияПоВыпускуУслуг(СтруктураШапкиДокумента);*/
				/*ДобавитьЗаписьВПротоколРасчета("Определен список реализованных услуг", ТаблицаОшибок, СтруктураШапкиДокумента);*/
			}
			if(true/*ЕстьРасчетФактическойСебестоимости ИЛИ ЕстьРаспределениеРасходов*/)
			{
				/*// Для этих действий важно, чтобы в учете затрат не было ошибок,
*/
				/*// о которых свидетельствуют отрицательные остатки
*/
				/*ПроверитьОстаткиРегистровУчетаЗатрат(СтруктураШапкиДокумента, ТаблицаОшибок);*/
			}
			/*ИспользуетсяНУ = Истина;*/
			/*// Признак необходимости НУ
*/
			if(true/*ЕстьРасчетФактическойСебестоимости И (НЕ ПростоеРаспределение ИЛИ ИспользуетсяНУ)*/)
			{
				/*РасчетФактическойСебестоимостиВыпуска(
			СтруктураШапкиДокумента,
			ТаблицаОшибок,
			Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетФактическойСебестоимости);*/
				/*ДобавитьЗаписьВПротоколРасчета("Выполнен предварительный расчет фактической себестоимости", ТаблицаОшибок, СтруктураШапкиДокумента);*/
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете*/)
			{
				/*ПереквалификацияРазницПриПередачеВЭксплуатацию(СтруктураШапкиДокумента);*/
			}
			if(true/*ЕстьРасчетБазыРаспределения И НЕ ПростоеРаспределение*/)
			{
				/*// КосвенныеЗатраты
*/
				/*);*/
				/*ДобавитьЗаписьВПротоколРасчета("Рассчитаны базы распределения", ТаблицаОшибок, СтруктураШапкиДокумента);*/
			}
			if(true/*ЕстьРаспределениеРасходов*/)
			{
				/*РаспределениеРасходов(СтруктураШапкиДокумента, ТаблицаОшибок);*/
			}
			if(true/*ФормированиеДвиженийПоРегистрам*/)
			{
				/*СверткаДвиженийПоРегиструУчетЗатрат(СтруктураШапкиДокумента);*/
				/*ФормированиеДвиженийПоАналитическимРегистрам(СтруктураШапкиДокумента);*/
				/*ДобавитьЗаписьВПротоколРасчета("Сформированы движения по регистрам", ТаблицаОшибок, СтруктураШапкиДокумента);*/
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете
	И НЕ СтруктураШапкиДокумента.ОрганизацияПрименяетУСН*/)
			{
				/*ФормированиеПроводокПоВыручкеДляНУ(СтруктураШапкиДокумента);*/
				/*ДобавитьЗаписьВПротоколРасчета("Сформированы проводки по выручке в налоговом учете", ТаблицаОшибок, СтруктураШапкиДокумента);*/
			}
			/*// Содержит менеджер временных таблиц, 
*/
			/*// эти таблицы больше не нужны
*/
			if(true/*СтруктураШапкиДокумента.Свойство("МенеджерВременнойТаблицыПредварительнаяОценкаЗатрат")*/)
			{
				/*СтруктураШапкиДокумента.Удалить("МенеджерВременнойТаблицыПредварительнаяОценкаЗатрат");*/
			}
		}
		// ВыполнитьДействияДокумента()
		// Используется для отладки расчета себестоимости.
		// Протоколирует ход расчета
		//
		// Параметры:
		//	Текст - текст сообщения
		//	ТаблицаОшибок - ТаблицаЗначений - Таблица ошибок
		//	СтруктураШапкиДокумента

		public void ДобавитьЗаписьВПротоколРасчета(/*Текст, ТаблицаОшибок, СтруктураШапкиДокумента*/)
		{
			if(true/*Не СтруктураШапкиДокумента.Свойство("ОтладочныйРежим")
	 ИЛИ Не СтруктураШапкиДокумента.ОтладочныйРежим*/)
			{
			}
			/*ОбщегоНазначения.Сообщение("" + ТекущаяДата() + " " + Текст, Перечисления.ВидыСообщений.Информация);*/
		}
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ КОНТРОЛЯ КОРРЕКТНОСТИ ДАННЫХ
		// Функция формирует запрос по отрицательным остаткам затрат.
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
		//

		public object СформироватьЗапросПоОтрицательнымОстаткам(/*
	СтруктураШапкиДокумента
	*/)
		{
			/*ТекстЗапросаСКомментариями = 
	"ВЫБРАТЬ
	|	АналитикаВидаУчета.Ссылка,
	|	АналитикаВидаУчета.РазделУчета
	|ПОМЕСТИТЬ ОтборАналитикаВидаУчета
	|ИЗ
	|	РегистрСведений.АналитикаВидаУчета КАК АналитикаВидаУчета
	|ГДЕ
	|	АналитикаВидаУчета.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчета.ПогашеннаяСтоимость)
	|	И АналитикаВидаУчета.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Выпуск)
	|	//ДляУпрУчета И АналитикаВидаУчета.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	//ДляРеглУчета И АналитикаВидаУчета.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтборАналитикаВидаУчета.Ссылка
	|ПОМЕСТИТЬ ОтборРазделУчетаЗатраты
	|ИЗ
	|	ОтборАналитикаВидаУчета КАК ОтборАналитикаВидаУчета
	|ГДЕ
	|	ОтборАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Затраты)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетЗатрат.АналитикаВидаУчета,
	|	УчетЗатрат.АналитикаУчетаЗатрат,
	|	УчетЗатрат.АналитикаУчетаПартий,
	|	УчетЗатрат.АналитикаРаспределенияЗатрат,
	|	СУММА(УчетЗатрат.Количество) КАК Количество
	|ПОМЕСТИТЬ ВозвратныеОтходы
	|ИЗ
	|	РегистрНакопления.УчетЗатрат%СуффиксРегл% КАК УчетЗатрат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборРазделУчетаЗатраты КАК ОтборРазделУчетаЗатраты
	|		ПО УчетЗатрат.АналитикаВидаУчета = ОтборРазделУчетаЗатраты.Ссылка
	|ГДЕ
	|	УчетЗатрат.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОперацийЗатратыНаВыпускПродукции.ОтрицательныеЗатраты)
	|	И УчетЗатрат.Активность
	|	И УчетЗатрат.Период МЕЖДУ &ДатаНачалаПериода И &ДатаКонцаПериода
	|	И УчетЗатрат.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|СГРУППИРОВАТЬ ПО
	|	УчетЗатрат.АналитикаВидаУчета,
	|	УчетЗатрат.АналитикаУчетаЗатрат,
	|	УчетЗатрат.АналитикаУчетаПартий,
	|	УчетЗатрат.АналитикаРаспределенияЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетЗатратОстатки.АналитикаВидаУчета,
	|	УчетЗатратОстатки.АналитикаУчетаЗатрат,
	|	УчетЗатратОстатки.АналитикаУчетаПартий,
	|	УчетЗатратОстатки.АналитикаРаспределенияЗатрат,
	|	УчетЗатратОстатки.КоличествоОстаток КАК Количество
	|ПОМЕСТИТЬ ОтрицательныеОстатки
	|ИЗ
	|	РегистрНакопления.УчетЗатрат%СуффиксРегл%.Остатки(
	|			&КонГраница,
	|			АналитикаВидаУчета В
	|				(ВЫБРАТЬ
	|					ОтборАналитикаВидаУчета.Ссылка
	|				ИЗ
	|					ОтборАналитикаВидаУчета КАК ОтборАналитикаВидаУчета)) КАК УчетЗатратОстатки
	|ГДЕ
	|	УчетЗатратОстатки.КоличествоОстаток < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтборАналитикаВидаУчета.РазделУчета КАК РазделУчета
	|	//ОтладочныйРежим , 
	|	//ОтладочныйРежим ОтрицательныеОстатки.АналитикаВидаУчета,
	|	//ОтладочныйРежим ОтрицательныеОстатки.АналитикаУчетаЗатрат,
	|	//ОтладочныйРежим ОтрицательныеОстатки.АналитикаУчетаПартий,
	|	//ОтладочныйРежим ОтрицательныеОстатки.АналитикаРаспределенияЗатрат
	|ИЗ
	|	ОтрицательныеОстатки КАК ОтрицательныеОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВозвратныеОтходы КАК ВозвратныеОтходы
	|		ПО ОтрицательныеОстатки.АналитикаВидаУчета = ВозвратныеОтходы.АналитикаВидаУчета
	|			И ОтрицательныеОстатки.АналитикаУчетаЗатрат = ВозвратныеОтходы.АналитикаУчетаЗатрат
	|			И ОтрицательныеОстатки.АналитикаУчетаПартий = ВозвратныеОтходы.АналитикаУчетаПартий
	|			И ОтрицательныеОстатки.АналитикаРаспределенияЗатрат = ВозвратныеОтходы.АналитикаРаспределенияЗатрат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборАналитикаВидаУчета КАК ОтборАналитикаВидаУчета
	|		ПО ОтрицательныеОстатки.АналитикаВидаУчета = ОтборАналитикаВидаУчета.Ссылка
	|ГДЕ
	|	ОтрицательныеОстатки.Количество < ЕСТЬNULL(ВозвратныеОтходы.Количество, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РазделУчета";*/
			/*ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);*/
			if(true/*СтруктураШапкиДокумента.Свойство("ОтладочныйРежим") 
	   И СтруктураШапкиДокумента.ОтладочныйРежим*/)
			{
				/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ОтладочныйРежим", "");*/
			}
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.УстановитьПараметр("ДатаНачалаПериода", 	СтруктураШапкиДокумента.мНачДата);*/
			/*Запрос.УстановитьПараметр("ДатаКонцаПериода", 	СтруктураШапкиДокумента.мКонДата);*/
			/*Запрос.УстановитьПараметр("КонГраница", 		СтруктураШапкиДокумента.мКонГраница);*/
			/*Запрос.УстановитьПараметр("Организация", 		СтруктураШапкиДокумента.Организация);*/
			return null;
		}
		// СформироватьЗапросПоОтрицательнымОстаткам()
		// Процедура выводит сообщение об отрицательном остатке затрат.
		//
		// Параметры:
		//	Выборка - ВыборкаИзРезультатаЗапроса
		//	СтрокаГруппы - СтрокаДереваЗначений - Текущая строка комментария
		//	ТаблицаОшибок - ТаблицаЗначений - Таблица ошибок
		//

		public void ВывестиСообщениеОбОтрицательномОстатке(/*
	Выборка,
	СтрокаГруппы,
	ТаблицаОшибок,
	ОтладочныйРежим = Ложь
	*/)
		{
			/*ТекстСообщения = "Раздел учета: " + Выборка.РазделУчета;*/
			if(true/*ОтладочныйРежим*/)
			{
				/*ТекстСообщения = "" + Выборка.АналитикаВидаУчета + "; " + Выборка.АналитикаУчетаЗатрат + "; "  + Выборка.АналитикаРаспределенияЗатрат + "; " + Выборка.АналитикаУчетаПартий;*/
			}
			if(true/*Выборка.РазделУчета = Перечисления.РазделыУчета.МПЗ
	 ИЛИ Выборка.РазделУчета = Перечисления.РазделыУчета.ТоварыОтгруженные
	 ИЛИ Выборка.РазделУчета = Перечисления.РазделыУчета.МатериалыВЭксплуатации*/)
			{
				/*Расшифровка = УправлениеЗатратами.СформироватьРасшифровкуОткрытияОтчета("ВедомостьПоУчетуМПЗ");*/
			}
			/*НоваяСтрока = ТаблицаОшибок.Добавить();*/
			/*НоваяСтрока.Группа = СтрокаГруппы;*/
			/*НоваяСтрока.Сообщение = ТекстСообщения;*/
			/*НоваяСтрока.Объект = Расшифровка;*/
		}
		// ВывестиСообщениеОбОтрицательномОстатке()
		// Процедура проверяет наличие отрицательных остатков по регистрам учета затрат.
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
		//	ТаблицаОшибок - ТаблицаЗначений - Таблица ошибок
		//

		public void ПроверитьОстаткиРегистровУчетаЗатрат(/*
	СтруктураШапкиДокумента,
	ТаблицаОшибок
	*/)
		{
			/*Запрос = СформироватьЗапросПоОтрицательнымОстаткам(СтруктураШапкиДокумента);*/
			/*РезультатЗапроса = Запрос.Выполнить();*/
			if(true/*Не РезультатЗапроса.Пустой()*/)
			{
				/*СтрокаГруппы = "Обнаружены отрицательные остатки по регистрам учета затрат!
		|Расчет себестоимости может быть выполнен некорректно и может выполняться длительное время.";*/
				/*ОтладочныйРежим = 
			СтруктураШапкиДокумента.Свойство("ОтладочныйРежим") 
	   		И СтруктураШапкиДокумента.ОтладочныйРежим;*/
				/*Выборка = РезультатЗапроса.Выбрать();*/
				while(true/*Выборка.Следующий()*/)
				{
					/*ВывестиСообщениеОбОтрицательномОстатке(
				Выборка,
				СтрокаГруппы,
				ТаблицаОшибок,
				ОтладочныйРежим
			);*/
				}
				/*;;*/
			}
		}
		// ПроверитьОстаткиРегистровУчетаЗатрат()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ СПИСАНИЯ КОСВЕННЫХ РАСХОДОВ ПО НАЛОГОВОМУ УЧЕТУ
		// Функция возвращает список счетов учета НУ, с которых необходимо выполнить списание косвенных расходов
		//
		// Параметры:
		// 	УчетнаяПолитика - Структура - учетная политика организации
		//
		// Возвращаемое значение:
		// 	СчетаУчетаНУ - СписокЗначение - счета учета расходов
		//

		public object ПолучитьСчетаУчетаКосвенныхРасходовНУ(/*УчетнаяПолитика*/)
		{
			/*СчетаУчетаНУ = Новый Массив;*/
			/*СчетаУчетаНУ.Добавить(ПланыСчетов.Налоговый.КосвенныеРасходыОсновногоПроизводства);*/
			/*СчетаУчетаНУ.Добавить(ПланыСчетов.Налоговый.КосвенныеРасходыВспомогательныхПроизводств);*/
			/*СчетаУчетаНУ.Добавить(ПланыСчетов.Налоговый.КосвенныеРасходыОбслуживающихПроизводств);*/
			/*СчетаУчетаНУ.Добавить(ПланыСчетов.Налоговый.КосвенныеОбщепроизводственныеРасходы);*/
			/*СчетаУчетаНУ.Добавить(ПланыСчетов.Налоговый.КосвенныеРасходыПоВыявленномуБраку);*/
			/*// При использовании директ-костинг списание косвенных ОХР не выполняем, 
*/
			/*// так как такие расходы не должны включаться в себестоимость,
*/
			/*// за исключением случая, когда расходы по БУ относятся на счет 90.02.
*/
			/*// В этом случае действуют разные правила для БУ и НУ (в НУ - всегда 90.08).
*/
			if(true/*НЕ УчетнаяПолитика.ДиректКостинг 
		ИЛИ УчетнаяПолитика.ДиректКостингСпособСписания = Перечисления.ДиректКостингСпособыСписания.НаСебестоимостьПродаж*/)
			{
				/*СчетаУчетаНУ.Добавить(ПланыСчетов.Налоговый.КосвенныеОбщехозяйственныеРасходы);*/
			}
			return null;
		}
		// Процедура формирует временную таблицу "СоответствиеСчетов".
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
		//

		public void СформироватьВременнуюТаблицуСоответствиеСчетов(/*
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	*/)
		{
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете*/)
			{
			}
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК СчетБУ
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (&МассивСчетов)
	|	И Не Хозрасчетный.ЗапретитьИспользоватьВПроводках
	|";*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*МассивСчетов = Новый Массив;*/
			/*МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ОсновноеПроизводство);*/
			/*МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ВспомогательныеПроизводства);*/
			/*МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ОбслуживающиеПроизводства);*/
			/*МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы);*/
			/*МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы);*/
			/*Запрос.УстановитьПараметр("МассивСчетов", МассивСчетов);*/
			/*РезультатЗапроса = Запрос.Выполнить();*/
			/*ТаблицаСчетов = Новый ТаблицаЗначений;*/
			/*ТаблицаСчетов.Колонки.Добавить("СчетБУ", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));*/
			/*ТаблицаСчетов.Колонки.Добавить("СчетНУ", Новый ОписаниеТипов("ПланСчетовСсылка.Налоговый"));*/
			/*Выборка = РезультатЗапроса.Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				/*СчетНУ = РасширеннаяАналитикаУчета.ПолучитьСчетУчетаНУ(Выборка.СчетБУ);*/
				if(true/*ЗначениеЗаполнено(СчетНУ)*/)
				{
					/*НоваяСтрока = ТаблицаСчетов.Добавить();*/
					/*НоваяСтрока.СчетБУ = Выборка.СчетБУ;*/
					/*НоваяСтрока.СчетНУ = СчетНУ;*/
				}
			}
			/*;
	
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	*
	|
	|ПОМЕСТИТЬ СоответствиеСчетов
	|ИЗ
	|	&ТаблицаСчетов КАК ТаблицаСчетов
	|";*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.УстановитьПараметр("ТаблицаСчетов", ТаблицаСчетов);*/
			/*Запрос.Выполнить();*/
			/*РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		"СоответствиеСчетов"
	);*/
		}
		// СформироватьВременнуюТаблицуСоответствиеСчетов()
		// Процедура формирования временной таблицы "АналитикаВидаУчетаЗатраты".
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
		//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц
		//

		public void СформироватьВременнуюТаблицуАналитикаВидаУчетаКосвенныеРасходы(/*
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	*/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	РегистрАналитикаВидаУчета.РазделУчета,
	|	РегистрАналитикаВидаУчета.Организация,
	|	РегистрАналитикаВидаУчета.Подразделение,
	|	РегистрАналитикаВидаУчета.ПодразделениеОрганизации,
	|	РегистрАналитикаВидаУчета.СчетУчета,
	|	РегистрАналитикаВидаУчета.СчетУчетаНУ,
	|	СоответствиеСчетов.СчетНУ КАК СчетПрямыхРасходовНУ,
	|
	|	РегистрАналитикаВидаУчета.Проект,
	|	РегистрАналитикаВидаУчета.Склад,
	|	РегистрАналитикаВидаУчета.Ссылка
	|
	|ПОМЕСТИТЬ АналитикаВидаУчетаКосвенныеРасходы
	|ИЗ
	|	РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СоответствиеСчетов КАК СоответствиеСчетов
	|	ПО
	|		РегистрАналитикаВидаУчета.СчетУчета = СоответствиеСчетов.СчетБУ
	|	
	|ГДЕ
	|	РегистрАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Затраты)
	|	И РегистрАналитикаВидаУчета.Организация = &Организация
	|	И РегистрАналитикаВидаУчета.СчетУчетаНУ В (&СчетаУчетаНУ)
	|";*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);*/
			/*СчетаУчетаНУ = Новый Массив;*/
			/*СчетаУчетаНУ.Добавить(ПланыСчетов.Налоговый.КосвенныеРасходыОсновногоПроизводства);*/
			/*СчетаУчетаНУ.Добавить(ПланыСчетов.Налоговый.КосвенныеРасходыВспомогательныхПроизводств);*/
			/*СчетаУчетаНУ.Добавить(ПланыСчетов.Налоговый.КосвенныеРасходыОбслуживающихПроизводств);*/
			/*СчетаУчетаНУ.Добавить(ПланыСчетов.Налоговый.КосвенныеОбщепроизводственныеРасходы);*/
			/*СчетаУчетаНУ.Добавить(ПланыСчетов.Налоговый.КосвенныеРасходыПоВыявленномуБраку);*/
			/*// При использовании директ-костинг переквалификацию ОХР не выполняем, 
*/
			/*// так как такие расходы не должны включаться в себестоимость,
*/
			/*// за исключением случая, когда расходы по БУ относятся на счет 90.02.
*/
			/*// В этом случае действуют разные правила для БУ и НУ (в НУ - всегда 90.08).
*/
			if(true/*НЕ СтруктураШапкиДокумента.ДиректКостинг 
		ИЛИ СтруктураШапкиДокумента.УчетнаяПолитика.ДиректКостингСпособСписания = Перечисления.ДиректКостингСпособыСписания.НаСебестоимостьПродаж*/)
			{
				/*СчетаУчетаНУ.Добавить(ПланыСчетов.Налоговый.КосвенныеОбщехозяйственныеРасходы);*/
			}
			/*//СчетаУчетаНУ.Добавить(ПланыСчетов.Налоговый.КосвенныеОбщехозяйственныеРасходы);
*/
			/*///
*/
			/*Запрос.УстановитьПараметр("СчетаУчетаНУ", СчетаУчетаНУ);*/
			/*Запрос.Выполнить();*/
			/*РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		"АналитикаВидаУчетаКосвенныеРасходы"
	);*/
		}
		// СформироватьВременнуюТаблицуАналитикаВидаУчетаКосвенныеРасходы()
		// Процедура формирования временной таблицы "АналитикаУчетаЗатратКосвенныеРасходы".
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
		//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц
		//

		public void СформироватьВременнуюТаблицуАналитикаУчетаЗатратКосвенныеРасходы(/*
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	*/)
		{
			/*СформироватьВременнуюТаблицуНормируемыеВидыРасходовНУ(МенеджерВременныхТаблиц);*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	РегистрАналитикаУчетаЗатрат.Ссылка
	|
	|ПОМЕСТИТЬ 
	|	АналитикаУчетаЗатратКосвенныеРасходы
	|ИЗ
	|	РегистрСведений.АналитикаУчетаЗатрат КАК РегистрАналитикаУчетаЗатрат
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		НормируемыеВидыРасходовНУ КАК НормируемыеВидыРасходовНУ
	|	ПО
	|		РегистрАналитикаУчетаЗатрат.СтатьяЗатрат.ВидРасходовНУ = НормируемыеВидыРасходовНУ.ВидРасходовНУ
	|	
	|ГДЕ
	|	НормируемыеВидыРасходовНУ.ВидРасходовНУ ЕСТЬ NULL";*/
			/*Запрос.Выполнить();*/
			/*РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		"АналитикаУчетаЗатратКосвенныеРасходы"
	);*/
		}
		// СформироватьВременнуюТаблицуАналитикаУчетаЗатратКосвенныеРасходы()
		// Формирует временную таблицу счетов косвенных расходов НУ
		//

		public void СформироватьВременнуюТаблицуСчетовКосвенныхРасходовНУ(/*
	СтруктураШапкиДокумента, 
	МенеджерВременныхТаблиц*/)
		{
			/*СчетаУчетаНУ = ПолучитьСчетаУчетаКосвенныхРасходовНУ(СтруктураШапкиДокумента.УчетнаяПолитика);*/
			/*ТаблицаСчетовКосвенныхРасходовНУ = Новый ТаблицаЗначений;*/
			/*ТаблицаСчетовКосвенныхРасходовНУ.Колонки.Добавить("СчетУчетаНУ", Новый ОписаниеТипов("ПланСчетовСсылка.Налоговый"));*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ СчетаКосвенныхРасходовНУ
	|ИЗ
	|	&ТаблицаСчетовКосвенныхРасходовНУ КАК ТаблицаСчетовКосвенныхРасходовНУ";*/
			/*Запрос.УстановитьПараметр("ТаблицаСчетовКосвенныхРасходовНУ", ТаблицаСчетовКосвенныхРасходовНУ);*/
			/*Запрос.Выполнить();*/
		}
		// Процедура формирует ключи аналитики вида учета, которых еще нет.
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
		//

		public void СформироватьКлючиАналитикиВидаУчетаПрямыеРасходы(/*
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	*/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АналитикаВидаУчетаЗатраты.РазделУчета,
	|	АналитикаВидаУчетаЗатраты.Организация,
	|	АналитикаВидаУчетаЗатраты.Подразделение,
	|	АналитикаВидаУчетаЗатраты.ПодразделениеОрганизации,
	|
	|	АналитикаВидаУчетаЗатраты.СчетУчета,
	|	АналитикаВидаУчетаЗатраты.СчетПрямыхРасходовНУ КАК СчетУчетаНУ
	|	
	|ИЗ 
	|	АналитикаВидаУчетаКосвенныеРасходы КАК АналитикаВидаУчетаЗатраты
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|	ПО
	|		АналитикаВидаУчетаЗатраты.РазделУчета = РегистрАналитикаВидаУчета.РазделУчета
	|		И АналитикаВидаУчетаЗатраты.Организация = РегистрАналитикаВидаУчета.Организация
	|		И АналитикаВидаУчетаЗатраты.Подразделение = РегистрАналитикаВидаУчета.Подразделение
	|		И АналитикаВидаУчетаЗатраты.ПодразделениеОрганизации = РегистрАналитикаВидаУчета.ПодразделениеОрганизации
	|		И АналитикаВидаУчетаЗатраты.СчетУчета = РегистрАналитикаВидаУчета.СчетУчета
	|		И АналитикаВидаУчетаЗатраты.СчетПрямыхРасходовНУ = РегистрАналитикаВидаУчета.СчетУчетаНУ
	|		И АналитикаВидаУчетаЗатраты.Проект = РегистрАналитикаВидаУчета.Проект
	|		И АналитикаВидаУчетаЗатраты.Склад = РегистрАналитикаВидаУчета.Склад
	|		
	|ГДЕ
	|	РегистрАналитикаВидаУчета.Ссылка ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаВидаУчетаЗатраты.РазделУчета,
	|	АналитикаВидаУчетаЗатраты.Организация,
	|	АналитикаВидаУчетаЗатраты.Подразделение,
	|	АналитикаВидаУчетаЗатраты.ПодразделениеОрганизации,
	|	АналитикаВидаУчетаЗатраты.СчетУчета,
	|	АналитикаВидаУчетаЗатраты.СчетПрямыхРасходовНУ
	|";*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*СтруктураКлючиАналитики = Новый Структура;*/
			/*РезультатЗапроса = Запрос.Выполнить();*/
			/*Выборка = РезультатЗапроса.Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				/*АналитикаУчетаЗатрат = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
			СтруктураШапкиДокумента,
			Выборка,
			Перечисления.КлючиАналитики.АналитикаВидаУчета,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВРегламентированномУчете,
			СтруктураКлючиАналитики
		);*/
			}
			/*;;*/
		}
		// СформироватьКлючиАналитикиВидаУчетаПрямыеРасходы()
		// Функция формирует запрос по регистру "Учет затрат" по разделу учета "Затраты".
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
		//
		// Возвращаемое значение:
		//   Запрос – Запрос по регистру "Учет затрат организаций".
		//

		public object СформироватьЗапросОстаткиКосвенныхРасходов(/*
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	*/)
		{
			/*ТекстЗапроса = 
	"ВЫБРАТЬ
	|	УчетЗатрат.АналитикаВидаУчета				КАК АналитикаВидаУчета,
	|	УчетЗатрат.АналитикаУчетаЗатрат				КАК АналитикаУчетаЗатрат,
	|	УчетЗатрат.АналитикаУчетаПартий				КАК АналитикаУчетаПартий,
	|	УчетЗатрат.АналитикаРаспределенияЗатрат		КАК АналитикаРаспределенияЗатрат,
	|	УчетЗатрат.КоличествоНУОстаток 				КАК КоличествоНУ,
	|	УчетЗатрат.СтоимостьНУОстаток 				КАК СтоимостьНУ,
	|	УчетЗатрат.ПостояннаяРазницаОстаток 		КАК ПостояннаяРазница,
	|	УчетЗатрат.КоличествоОстаток 				КАК Количество,
	|	УчетЗатрат.СтоимостьОстаток 				КАК Стоимость
	|	
	|ПОМЕСТИТЬ УчетЗатратОстатки
	|ИЗ
	|	РегистрНакопления.УчетЗатратРегл.Остатки(&КонГраница,
	|		АналитикаВидаУчета В (
	|			ВЫБРАТЬ
	|				Ссылка
	|			ИЗ
	|				АналитикаВидаУчетаКосвенныеРасходы
	|			)
	|		И АналитикаУчетаЗатрат В (
	|			ВЫБРАТЬ
	|				Ссылка
	|			ИЗ
	|				АналитикаУчетаЗатратКосвенныеРасходы
	|			)
	|		) КАК УчетЗатрат
	|;
	|
	|ВЫБРАТЬ
	|	УчетЗатратОстатки.АналитикаВидаУчета,
	|	УчетЗатратОстатки.АналитикаУчетаЗатрат,
	|	УчетЗатратОстатки.АналитикаУчетаПартий,
	|	УчетЗатратОстатки.АналитикаРаспределенияЗатрат,
	|	
	|	РегистрАналитикаВидаУчета.РазделУчета,
	|	РегистрАналитикаВидаУчета.Организация,
	|	РегистрАналитикаВидаУчета.Подразделение,
	|	РегистрАналитикаВидаУчета.ПодразделениеОрганизации,
	|	РегистрАналитикаВидаУчета.СчетУчета,
	|	РегистрАналитикаВидаУчета.СчетПрямыхРасходовНУ КАК СчетУчетаНУ,
	|	РегистрАналитикаВидаУчета.Проект,
	|	РегистрАналитикаВидаУчета.Склад,
	|
	|	РегистрКорАналитикаВидаУчета.Ссылка КАК КорАналитикаВидаУчета,
	|	
	|	УчетЗатратОстатки.КоличествоНУ,
	|	УчетЗатратОстатки.СтоимостьНУ,
	|	УчетЗатратОстатки.ПостояннаяРазница,
	|
	|	УчетЗатратОстатки.Количество,
	|	УчетЗатратОстатки.Стоимость
	|ИЗ
	|	УчетЗатратОстатки
	|		 
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		АналитикаВидаУчетаКосвенныеРасходы КАК РегистрАналитикаВидаУчета
	|	ПО 
	|		УчетЗатратОстатки.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрКорАналитикаВидаУчета
	|	ПО
	|		РегистрАналитикаВидаУчета.РазделУчета 				= РегистрКорАналитикаВидаУчета.РазделУчета
	|		И РегистрАналитикаВидаУчета.Организация 			= РегистрКорАналитикаВидаУчета.Организация
	|		И РегистрАналитикаВидаУчета.Подразделение 			= РегистрКорАналитикаВидаУчета.Подразделение
	|		И РегистрАналитикаВидаУчета.ПодразделениеОрганизации = РегистрКорАналитикаВидаУчета.ПодразделениеОрганизации
	|		И РегистрАналитикаВидаУчета.СчетУчета 				= РегистрКорАналитикаВидаУчета.СчетУчета
	|		И РегистрАналитикаВидаУчета.СчетПрямыхРасходовНУ 	= РегистрКорАналитикаВидаУчета.СчетУчетаНУ
	|		И РегистрАналитикаВидаУчета.Проект 					= РегистрКорАналитикаВидаУчета.Проект
	|		И РегистрАналитикаВидаУчета.Склад 					= РегистрКорАналитикаВидаУчета.Склад
	|		
	|УПОРЯДОЧИТЬ ПО
	|	УчетЗатратОстатки.АналитикаВидаУчета,
	|	УчетЗатратОстатки.АналитикаУчетаЗатрат,
	|	УчетЗатратОстатки.АналитикаУчетаПартий,
	|	УчетЗатратОстатки.АналитикаРаспределенияЗатрат
	|;
	|/////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ УчетЗатратОстатки";*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.УстановитьПараметр("КонГраница", СтруктураШапкиДокумента.мКонГраница);*/
			return null;
		}
		// СформироватьЗапросОстаткиКосвенныхРасходов()
		// В налоговом учете не должно быть затрат по статьям с признаком "не принимается для НУ".
		// Такие затраты следует отразить по виду учета ПР - переквалифицировать из НУ в ПР

		public void ПереквалификацияНепринимаемыхРасходов(/*СтруктураШапкиДокумента, СтруктураНаборыЗаписей*/)
		{
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете*/)
			{
			}
			/*Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	АналитикаВидаУчета.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВидУчетаЗатраты
	|ИЗ
	|	РегистрСведений.АналитикаВидаУчета КАК АналитикаВидаУчета
	|ГДЕ
	|	АналитикаВидаУчета.Организация = &Организация
	|	И АналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Затраты)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналитикаУчетаЗатрат.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ НеУчитываемыеДляНУ
	|ИЗ
	|	РегистрСведений.АналитикаУчетаЗатрат КАК АналитикаУчетаЗатрат
	|ГДЕ
	|	АналитикаУчетаЗатрат.СтатьяЗатрат.ВидРасходовНУ = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетЗатратРеглОстатки.АналитикаВидаУчета,
	|	УчетЗатратРеглОстатки.АналитикаУчетаЗатрат,
	|	УчетЗатратРеглОстатки.АналитикаУчетаПартий,
	|	УчетЗатратРеглОстатки.АналитикаРаспределенияЗатрат,
	|	УчетЗатратРеглОстатки.СтоимостьНУОстаток КАК СуммаНУ
	|ИЗ
	|	РегистрНакопления.УчетЗатратРегл.Остатки(
	|			&КонГраница,
	|			АналитикаВидаУчета В
	|					(ВЫБРАТЬ
	|						ОтборВидовУчета.Ссылка
	|					ИЗ
	|						ВидУчетаЗатраты КАК ОтборВидовУчета)
	|				И АналитикаУчетаЗатрат В
	|					(ВЫБРАТЬ
	|						ОтборЗатрат.Ссылка
	|					ИЗ
	|						НеУчитываемыеДляНУ КАК ОтборЗатрат)) КАК УчетЗатратРеглОстатки
	|ГДЕ
	|	УчетЗатратРеглОстатки.СтоимостьНУОстаток <> 0");*/
			/*Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("КонГраница",  СтруктураШапкиДокумента.мКонГраница);*/
			/*Результат = Запрос.Выполнить();*/
			if(true/*Результат.Пустой()*/)
			{
			}
			/*Выборка = Результат.Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				/*// АналитикаВидаУчета
*/
				/*// АналитикаУчетаЗатрат
*/
				/*// АналитикаУчетаПартий
*/
				/*// АналитикаУчетаВыпуска
*/
				/*// КорАналитикаВидаУчета
*/
				/*// КорАналитикаУчетаЗатрат
*/
				/*// КорАналитикаУчетаПартий
*/
				/*// КорАналитикаУчетаВыпуска
*/
				/*// Корректировать эти движения не следует
*/
				/*// Сумма НУ
*/
				/*// Сумма ПР
*/
				/*СтруктураНаборыЗаписей.УчетЗатрат);*/
				if(true/*СтруктураШапкиДокумента.ПоддержкаПБУ18*/)
				{
					/*// Если ПБУ18 не применяется, то достаточно списать суммы непринимаемых расходов (см. выше),
*/
					/*// движения по ПР нужны только для ПБУ18
*/
					/*// АналитикаВидаУчета
*/
					/*// АналитикаУчетаЗатрат
*/
					/*// АналитикаУчетаПартий
*/
					/*// АналитикаУчетаВыпуска
*/
					/*// КорАналитикаВидаУчета
*/
					/*// КорАналитикаУчетаЗатрат
*/
					/*// КорАналитикаУчетаПартий
*/
					/*// КорАналитикаУчетаВыпуска
*/
					/*// Корректировать эти движения не следует
*/
					/*// Сумма НУ
*/
					/*// Сумма ПР
*/
					/*СтруктураНаборыЗаписей.УчетЗатрат);*/
				}
				/*// СтруктураШапкиДокумента.ПоддержкаПБУ18
*/
			}
			/*// Выборка.Следующий()
*/
			if(true/*СтруктураНаборыЗаписей.УчетЗатрат.Модифицированность()*/)
			{
				/*СтруктураНаборыЗаписей.УчетЗатрат.Записать(Ложь);*/
			}
		}
		//ПереквалификацияНепринимаемыхРасходов()
		// Процедура выполняет списание косвенных расходов в НУ и формирует движения по прямым расходам.
		//
		// Параметры:
		//	СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров.
		//
		// С ключей, в которых указан счет налогового учета косвенных расходов, перекидываем:
		// - суммы по БУ 		- на ключи, в которых указан счет налогового учета прямых расходов
		// - суммы по НУ и ПР 	- на ключ учета прочих затрат
		//

		public void ВыполнитьСписаниеКосвенныхРасходовНУПоРасчетнойСтоимости(/*СтруктураШапкиДокумента, СтруктураНаборыЗаписей*/)
		{
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете*/)
			{
			}
			/*ПереквалификацияНепринимаемыхРасходов(СтруктураШапкиДокумента, СтруктураНаборыЗаписей);*/
			/*МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;*/
			/*// Соответствие счетов определяется функцией РасширеннаяАналитикаУчета.ПолучитьСчетУчетаНУ()
*/
			/*СформироватьВременнуюТаблицуСоответствиеСчетов(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);*/
			/*// Ключи вида учета, относящиеся к косвенным расходам в НУ
*/
			/*// с указанием соответствующего счета прямых расходов в НУ
*/
			/*СформироватьВременнуюТаблицуАналитикаВидаУчетаКосвенныеРасходы(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);*/
			/*// Все остальные ключи вида учета
*/
			/*СформироватьКлючиАналитикиВидаУчетаПрямыеРасходы(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);*/
			/*// Все ключи учета затрат, кроме статей затрат, относящихся к нормируемым в НУ.
*/
			/*// Нормируемые расходы распределяются вручную.
*/
			/*СформироватьВременнуюТаблицуАналитикаУчетаЗатратКосвенныеРасходы(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);*/
			/*// Все расходы, относящиеся к косвенным в НУ кроме нормируемых.
*/
			/*//    С указанием соответствующего ключа вида учета для отражения прямых расходов.
*/
			/*Запрос = СформироватьЗапросОстаткиКосвенныхРасходов(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);*/
			/*РезультатЗапроса = Запрос.Выполнить();*/
			/*КодОперации = Перечисления.КодыОперацийЗатраты.ЗакрытиеКосвенныхРасходовНУ;*/
			/*// Ключ аналитики, на который будут списаны косвенные расходы налогового учета
*/
			/*СтруктураПараметров = Новый Структура;*/
			/*СтруктураПараметров.Вставить("СчетУчетаНУ", ПланыСчетов.Налоговый.Продажи_УправленческиеРасходы);*/
			/*АналитикаУчетаПрочихЗатрат = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
		СтруктураШапкиДокумента,
		СтруктураПараметров,
		Перечисления.КлючиАналитики.АналитикаУчетаПрочихЗатрат,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВРегламентированномУчете
	);*/
			/*Выборка = РезультатЗапроса.Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				/*КорАналитикаВидаУчета = Выборка.КорАналитикаВидаУчета;*/
				/*// Т.е. аналитика учета прямых, на которую надо отнести суммы по БУ
*/
				if(true/*Не ЗначениеЗаполнено(КорАналитикаВидаУчета)*/)
				{
					/*КорАналитикаВидаУчета = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
				СтруктураШапкиДокумента,
				Выборка,
				Перечисления.КлючиАналитики.АналитикаВидаУчета,
				Перечисления.ВидыОтраженияВУчете.ОтражатьВРегламентированномУчете
			);*/
				}
				/*// Движения "Расход" по исходной аналитике (бухгалтерский учет)
*/
				/*// КоличествоНУ,
*/
				/*// СтоимостьНУ,
*/
				/*// ПостояннаяРазница,
*/
				/*СтруктураНаборыЗаписей.УчетЗатрат
		);*/
				/*// Движения "Приход" по аналитике прямых затрат (бухгалтерский учет)
*/
				/*// КоличествоНУ,
*/
				/*// СтоимостьНУ,
*/
				/*// ПостояннаяРазница,
*/
				/*СтруктураНаборыЗаписей.УчетЗатрат
		);*/
				/*// Движения "Расход" по исходной аналитике (налоговый учет).
*/
				/*// АналитикаУчетаЗатрат,
*/
				/*// АналитикаУчетаПартий,
*/
				/*// АналитикаРаспределенияЗатрат,
*/
				/*ВидДвиженияНакопления.Расход,
			КодОперации,
			0,
			0,
			Выборка.КоличествоНУ,
			Выборка.СтоимостьНУ,
			Выборка.ПостояннаяРазница,
			СтруктураНаборыЗаписей.УчетЗатрат
		);*/
				/*// Движения "Приход" по аналитике прямых затрат (налоговый учет).
*/
				/*// Выполняются только по количеству, так как по количеству делаются движения 
*/
				/*// по распределению материальных затрат.
*/
				/*// АналитикаУчетаЗатрат,
*/
				/*// АналитикаУчетаПартий,
*/
				/*// АналитикаРаспределенияЗатрат,
*/
				/*// СтоимостьНУ,
*/
				/*// ПостояннаяРазница,
*/
				/*СтруктураНаборыЗаписей.УчетЗатрат
		);*/
			}
			if(true/*СтруктураНаборыЗаписей.УчетЗатрат.Модифицированность()*/)
			{
				/*СтруктураНаборыЗаписей.УчетЗатрат.Записать(Ложь);*/
			}
		}
		// ВыполнитьСписаниеКосвенныхРасходовНУПоРасчетнойСтоимости()
		// Процедура выполняет списание косвенных расходов в НУ по фиксированной стоимости
		//
		// Параметры:
		//	СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров.
		//

		public void ВыполнитьСписаниеКосвенныхРасходовНУПоФиксированнойСтоимости(/*СтруктураШапкиДокумента, СтруктураНаборыЗаписей*/)
		{
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете*/)
			{
			}
			/*ПереквалификацияНепринимаемыхРасходов(СтруктураШапкиДокумента, СтруктураНаборыЗаписей);*/
			/*МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;*/
			/*// Сформируем временную таблицу для отбора по счетам учета НУ
*/
			/*СформироватьВременнуюТаблицуСчетовКосвенныхРасходовНУ(СтруктураШапкиДокумента, МенеджерВременныхТаблиц);*/
			/*// Сформируем временную таблицу ключей учета косвенных затрат - все статьи затрат, кроме относящихся к нормируемым в НУ.
*/
			/*СформироватьВременнуюТаблицуАналитикаУчетаЗатратКосвенныеРасходы(СтруктураШапкиДокумента, МенеджерВременныхТаблиц);*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	РегистрАналитикаВидаУчета.Ссылка
	|	
	|ПОМЕСТИТЬ 
	|	АналитикаВидаУчетаКосвенныеРасходы
	|ИЗ
	|	РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		СчетаКосвенныхРасходовНУ КАК СчетаКосвенныхРасходовНУ
	|	ПО 
	|		РегистрАналитикаВидаУчета.СчетУчетаНУ = СчетаКосвенныхРасходовНУ.СчетУчетаНУ
	|ГДЕ
	|	РегистрАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Затраты)
	|	И РегистрАналитикаВидаУчета.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетЗатратРеглОстатки.АналитикаВидаУчета			КАК АналитикаВидаУчета,
	|	УчетЗатратРеглОстатки.АналитикаУчетаЗатрат			КАК АналитикаУчетаЗатрат,
	|	УчетЗатратРеглОстатки.АналитикаРаспределенияЗатрат	КАК АналитикаРаспределенияЗатрат,
	|	УчетЗатратРеглОстатки.АналитикаУчетаПартий			КАК АналитикаУчетаПартий,
	|	УчетЗатратРеглОстатки.СтоимостьНУОстаток			КАК СтоимостьНУ,
	|	УчетЗатратРеглОстатки.ПостояннаяРазницаОстаток		КАК ПостояннаяРазница
	|ИЗ
	|	РегистрНакопления.УчетЗатратРегл.Остатки(&КонГраница, 
	|			АналитикаВидаУчета В (
	|					ВЫБРАТЬ
	|						Ссылка
	|					ИЗ
	|						АналитикаВидаУчетаКосвенныеРасходы)
	|			И АналитикаУчетаЗатрат В (
	|					ВЫБРАТЬ
	|						Ссылка
	|					ИЗ
	|						АналитикаУчетаЗатратКосвенныеРасходы)
	|		) КАК УчетЗатратРеглОстатки";*/
			/*Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("КонГраница",  СтруктураШапкиДокумента.мКонГраница);*/
			/*// Ключ аналитики, на который будут списаны косвенные расходы налогового учета
*/
			/*СтруктураПараметров = Новый Структура;*/
			/*СтруктураПараметров.Вставить("СчетУчетаНУ", ПланыСчетов.Налоговый.Продажи_УправленческиеРасходы);*/
			/*АналитикаУчетаПрочихЗатрат = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
		СтруктураШапкиДокумента,
		СтруктураПараметров,
		Перечисления.КлючиАналитики.АналитикаУчетаПрочихЗатрат,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВРегламентированномУчете
	);*/
			/*Выборка = Запрос.Выполнить().Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				/*// Спишем суммы НУ и ПР с ключей учета косвенных расходов НУ на ключ аналитики учета прочих затрат
*/
				/*// АналитикаУчетаЗатрат,
*/
				/*// АналитикаУчетаПартий,
*/
				/*// АналитикаРаспределенияЗатрат,
*/
				/*// Количество
*/
				/*// Стоимость
*/
				/*// КоличествоНУ
*/
				/*Выборка.СтоимостьНУ,
			Выборка.ПостояннаяРазница,
			СтруктураНаборыЗаписей.УчетЗатрат
		);*/
			}
			if(true/*СтруктураНаборыЗаписей.УчетЗатрат.Модифицированность()*/)
			{
				/*СтруктураНаборыЗаписей.УчетЗатрат.Записать(Ложь);*/
			}
		}
		// ВыполнитьСписаниеКосвенныхРасходовНУПоФиксированнойСтоимости()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ РАСЧЕТА СЕБЕСТОИМОСТИ ПО ПРЯМЫМ ЗАТРАТАМ
		// Процедура формирования временной таблицы "АналитикаВидаУчетаВыпуск".
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
		//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц
		//

		public void СформироватьВременнуюТаблицуАналитикаВидаУчетаВыпуск(/*
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	*/)
		{
			/*ТекстЗапросаСКомментариями = "
	|ВЫБРАТЬ
	|	РегистрАналитикаВидаУчета.РазделУчета,
	|	РегистрАналитикаВидаУчета.Организация,
	|	//ДляУпрУчета РегистрАналитикаВидаУчета.Подразделение,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.ПодразделениеОрганизации КАК Подразделение,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчета,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчетаНУ,
	|	РегистрАналитикаВидаУчета.Ссылка
	|
	|ПОМЕСТИТЬ АналитикаВидаУчетаВыпуск
	|ИЗ
	|	РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|ГДЕ
	|	(РегистрАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Выпуск)
	|	ИЛИ РегистрАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Наработка))
	|	//ДляУпрУчета И РегистрАналитикаВидаУчета.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	//ДляРеглУчета И РегистрАналитикаВидаУчета.Организация = &Организация
	|";*/
			/*ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);*/
			/*Запрос.Выполнить();*/
			/*РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		"АналитикаВидаУчетаВыпуск"
	);*/
		}
		// СформироватьВременнуюТаблицуАналитикаВидаУчетаВыпуск()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ЗАПРОСА ПО РЕГИСТРУ "ВЫПУСК ПРОДУКЦИИ"
		// Процедура формирования временной таблицы "ВыпускПродукции".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
		//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц
		//

		public void СформироватьВременнуюТаблицуВыпускПродукцииИУслуг(/*
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	*/)
		{
			/*ТекстЗапросаСКомментариями = 
	"ВЫБРАТЬ
	|	ВыпускПродукции.АналитикаВидаУчета,
	|	ВыпускПродукции.АналитикаРаспределенияЗатрат,
	|	ВыпускПродукции.АналитикаУчетаПартий,
	|	
	|	//ДляРеглУчета ВыпускПродукции.СтоимостьНУПриход,
	|	ВыпускПродукции.СтоимостьПриход,
	|	ВыпускПродукции.КоличествоНачальныйОстаток,
	|	ВыпускПродукции.КоличествоПриход
	|	
	|ПОМЕСТИТЬ ДанныеПоВыпуску
	|ИЗ 
	|	РегистрНакопления.УчетЗатрат%СуффиксРегл%.ОстаткиИОбороты(&НачГраница, &КонГраница, , , 
	|		АналитикаВидаУчета В (
	| 			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Ссылка
	|			ИЗ
	|				АналитикаВидаУчетаВыпуск КАК РегистрАналитикаВидаУчета
	|		)
	|	) КАК ВыпускПродукции
	|;
	|
	|ВЫБРАТЬ
	|	ВыпускПродукции.АналитикаВидаУчета,
	|	ВыпускПродукции.АналитикаРаспределенияЗатрат,
	|	ВыпускПродукции.АналитикаУчетаПартий,
	|	
	|	// Аналитика вида учета.
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчета,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчетаНУ,
	|	РегистрАналитикаВидаУчета.Подразделение,
	|	РегистрАналитикаВидаУчета.Организация,
	|
	|	ВЫБОР КОГДА РегистрАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Выпуск) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчета.ЗатратыНаВыпуск)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчета.ЗатратыПоНаработке)
	|	КОНЕЦ КАК РазделУчетаЗатрат,
	|
	|	//ДляУпрУчета 0 КАК СтоимостьНУ,
	|	//ДляРеглУчета ВыпускПродукции.СтоимостьНУПриход КАК СтоимостьНУ,
	|	ВыпускПродукции.СтоимостьПриход КАК Стоимость,
	|
	|	ВЫБОР КОГДА РегистрАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Наработка) ТОГДА
	|		ВыпускПродукции.КоличествоНачальныйОстаток
	|		+ ВыпускПродукции.КоличествоПриход
	|	ИНАЧЕ
	|		ВыпускПродукции.КоличествоПриход
	|	КОНЕЦ КАК Количество
	|	
	|ПОМЕСТИТЬ ВыпускПродукции
	|ИЗ 
	|	ДанныеПоВыпуску КАК ВыпускПродукции
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		АналитикаВидаУчетаВыпуск КАК РегистрАналитикаВидаУчета
	|	ПО 
	|		ВыпускПродукции.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|;
	|/////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДанныеПоВыпуску";*/
			/*ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.УстановитьПараметр("НачГраница", СтруктураШапкиДокумента.мНачГраница);*/
			/*Запрос.УстановитьПараметр("КонГраница", СтруктураШапкиДокумента.мКонГраница);*/
			/*Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);*/
			/*Запрос.Выполнить();*/
			/*РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		"ВыпускПродукции"
	);*/
		}
		// СформироватьВременнуюТаблицуВыпускПродукцииИУслуг()
		// Процедура формирования временной таблицы "РаспределениеПродукцииПоПеределам" для текущего передела.
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа "НаправленияВыпускаПродукции"
		//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц
		//

		public void СформироватьВременнуюТаблицуАналитикаВыпускаПродукции(/*
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	*/)
		{
			/*ТекстЗапросаСКомментариями = "
	|ВЫБРАТЬ
	|	ВыпускПродукции.АналитикаВидаУчета,
	|	ВыпускПродукции.АналитикаРаспределенияЗатрат,
	|	ВыпускПродукции.АналитикаУчетаПартий,
	|	ВыпускПродукции.КорАналитикаВидаУчета,
	|	ВыпускПродукции.КорАналитикаУчетаЗатрат,
	|	ВыпускПродукции.КорАналитикаУчетаПартий,
	|	ВыпускПродукции.КорАналитикаРаспределенияЗатрат,
	|
	|	// Аналитика учета выпуска.
	|	//ДляУпрУчета РегистрАналитикаВидаУчета.Подразделение,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.ПодразделениеОрганизации КАК Подразделение,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.Организация,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчета,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчетаНУ,
	|
	|	РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа,
	|	РегистрАналитикаРаспределенияЗатрат.Продукция,
	|	РегистрАналитикаРаспределенияЗатрат.ХарактеристикаПродукции,
	|	РегистрАналитикаРаспределенияЗатрат.СерияПродукции,
	|	РегистрАналитикаРаспределенияЗатрат.Спецификация,
	|	РегистрАналитикаРаспределенияЗатрат.ВариантВыпускаПродукции,
	|
	|	// Аналитика направления выпуска.
	|	РегистрКорАналитикаВидаУчета.Склад КАК СкладПолучатель,
	|	//ДляУпрУчета РегистрКорАналитикаВидаУчета.Подразделение КАК ПодразделениеПолучатель,
	|	//ДляРеглУчета РегистрКорАналитикаВидаУчета.ПодразделениеОрганизации КАК ПодразделениеПолучатель,
	|	
	|	//ДляРеглУчета ВЫБОР КОГДА Не РегистрКорАналитикаВидаУчета.СчетУчета ЕСТЬ NULL ТОГДА
	|	//ДляРеглУчета 	РегистрКорАналитикаВидаУчета.СчетУчета
	|	//ДляРеглУчета КОГДА Не РегистрАналитикаУчетаПрочихЗатрат.СчетУчета ЕСТЬ NULL ТОГДА
	|	//ДляРеглУчета 	РегистрАналитикаУчетаПрочихЗатрат.СчетУчета
	|	//ДляРеглУчета КОНЕЦ КАК СчетДт,
	|
	|	//ДляРеглУчета ВЫБОР КОГДА Не РегистрКорАналитикаВидаУчета.СчетУчетаНУ ЕСТЬ NULL ТОГДА
	|	//ДляРеглУчета 	РегистрКорАналитикаВидаУчета.СчетУчетаНУ
	|	//ДляРеглУчета КОГДА Не РегистрАналитикаУчетаПрочихЗатрат.СчетУчетаНУ ЕСТЬ NULL ТОГДА
	|	//ДляРеглУчета 	РегистрАналитикаУчетаПрочихЗатрат.СчетУчетаНУ
	|	//ДляРеглУчета КОНЕЦ КАК СчетДтНУ,
	|	
	|	РегистрКорАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаПолучатель,
	|	РегистрКорАналитикаУчетаЗатрат.СтатьяЗатрат КАК СтатьяЗатратПолучатель,
	|	
	|	// Аналитика учета прочих затрат
	|	//ДляРеглУчета РегистрАналитикаУчетаПрочихЗатрат.Субконто1 КАК СубконтоДт1,
	|	//ДляРеглУчета РегистрАналитикаУчетаПрочихЗатрат.Субконто2 КАК СубконтоДт2,
	|	//ДляРеглУчета РегистрАналитикаУчетаПрочихЗатрат.Субконто3 КАК СубконтоДт3,
	|	//ДляРеглУчета РегистрАналитикаУчетаПрочихЗатрат.СубконтоНУ1 КАК СубконтоДтНУ1,
	|	//ДляРеглУчета РегистрАналитикаУчетаПрочихЗатрат.СубконтоНУ2 КАК СубконтоДтНУ2,
	|	//ДляРеглУчета РегистрАналитикаУчетаПрочихЗатрат.СубконтоНУ3 КАК СубконтоДтНУ3,
	|
	|	//ДляУпрУчета ЕСТЬNULL(ПроектыНоменклатуры.Проект, ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)) КАК Проект,
	|	
	|	РегистрАналитикаУчетаПартий.Заказ,
	|	РегистрАналитикаУчетаПартий.Заказ КАК ЗаказПолучатель
	|			
	|ПОМЕСТИТЬ АналитикаВыпускаПродукции
	|ИЗ (
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ВыпускПродукции.АналитикаВидаУчета,
	|		ВыпускПродукции.АналитикаРаспределенияЗатрат,
	|		ВыпускПродукции.АналитикаУчетаПартий,
	|		ВыпускПродукции.КорАналитикаВидаУчета,
	|		ВыпускПродукции.КорАналитикаУчетаЗатрат,
	|		ВыпускПродукции.КорАналитикаУчетаПартий,
	|		ВыпускПродукции.КорАналитикаРаспределенияЗатрат
	|	ИЗ
	|		РегистрНакопления.УчетЗатрат%СуффиксРегл% КАК ВыпускПродукции
	|	ГДЕ
	|		ВыпускПродукции.Период МЕЖДУ &НачДата И &КонДата
	|		И ВыпускПродукции.Активность
	|		И ВыпускПродукции.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И ВыпускПродукции.АналитикаВидаУчета В (
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Ссылка
	|			ИЗ			
	|				АналитикаВидаУчетаВыпуск КАК РегистрАналитикаВидаУчета
	|		)
	|	) КАК ВыпускПродукции
	|
	|	// Аналитика вида учета.
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|	ПО 
	|		ВыпускПродукции.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|
	|	// Аналитика учета продукции.
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрАналитикаРаспределенияЗатрат
	|	ПО 
	|		ВыпускПродукции.АналитикаРаспределенияЗатрат = РегистрАналитикаРаспределенияЗатрат.Ссылка
	|
	|	// Аналитика учета партий.
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПартий КАК РегистрАналитикаУчетаПартий
	|	ПО 
	|		ВыпускПродукции.АналитикаУчетаПартий = РегистрАналитикаУчетаПартий.Ссылка
	|		
	|	// Аналитика вида учета (направление выпуска).
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрКорАналитикаВидаУчета
	|	ПО 
	|		ВыпускПродукции.КорАналитикаВидаУчета = РегистрКорАналитикаВидаУчета.Ссылка
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПрочихЗатрат КАК РегистрАналитикаУчетаПрочихЗатрат
	|	ПО 
	|		ВыпускПродукции.КорАналитикаВидаУчета = РегистрАналитикаУчетаПрочихЗатрат.Ссылка
	|	
	|	// Аналитика учета затрат (направление выпуска).
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаЗатрат КАК РегистрКорАналитикаУчетаЗатрат
	|	ПО 
	|		ВыпускПродукции.КорАналитикаУчетаЗатрат = РегистрКорАналитикаУчетаЗатрат.Ссылка
	|		
	|	// Аналитика учета партий (направление выпуска).
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПартий КАК РегистрКорАналитикаУчетаПартий
	|	ПО 
	|		ВыпускПродукции.КорАналитикаУчетаПартий = РегистрКорАналитикаУчетаПартий.Ссылка
	|			
	|	// Аналитика распределения затрат (направление выпуска).
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрКорАналитикаРаспределенияЗатрат
	|	ПО 
	|		ВыпускПродукции.КорАналитикаРаспределенияЗатрат = РегистрКорАналитикаРаспределенияЗатрат.Ссылка
	|
	|	//ДляУпрУчета ЛЕВОЕ СОЕДИНЕНИЕ 
	|	//ДляУпрУчета 	РегистрСведений.УстановкаПроектовДляНоменклатуры.СрезПоследних(&КонДата, 
	|	//ДляУпрУчета		) КАК ПроектыНоменклатуры
	|	//ДляУпрУчета	ПО 
	|	//ДляУпрУчета		РегистрАналитикаРаспределенияЗатрат.Продукция = ПроектыНоменклатуры.НоменклатураПроекта
	|";*/
			/*ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.УстановитьПараметр("НачДата", СтруктураШапкиДокумента.мНачДата);*/
			/*Запрос.УстановитьПараметр("КонДата", СтруктураШапкиДокумента.мКонДата);*/
			/*Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);*/
			/*Запрос.Выполнить();*/
			/*РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		"АналитикаВыпускаПродукции"
	);*/
		}
		// СформироватьВременнуюТаблицуАналитикаВыпускаПродукции()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ КОРРЕКТИРОВКИ УЧЕТНОЙ СТОИМОСТИ ВЫПУСКА ПРОДУКЦИИ
		// Функция формирует запрос по регистру "Учет затрат" по разделу учета "Выпуск продукции".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
		//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
		//
		// Возвращаемое значение:
		//   Запрос – Запрос по регистру.
		//

		public object СформироватьЗапросПриходВыпускПродукции(/*
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	*/)
		{
			/*ТекстЗапросаСКомментариями = "
	|ВЫБРАТЬ
	|	ВыпускПродукции.АналитикаВидаУчета,
	|	ВыпускПродукции.АналитикаРаспределенияЗатрат,
	|	ВыпускПродукции.АналитикаУчетаПартий,
	|	
	|	//ДляУпрУчета 0 КАК СтоимостьНУ,
	|	//ДляРеглУчета СУММА(
	|	//ДляРеглУчета 	ВЫБОР КОГДА ВыпускПродукции.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) Тогда
	|	//ДляРеглУчета 		ВыпускПродукции.СтоимостьНУ
	|	//ДляРеглУчета 	ИНАЧЕ
	|	//ДляРеглУчета 		0
	|	//ДляРеглУчета 	КОНЕЦ
	|	//ДляРеглУчета 	) КАК СтоимостьНУ,
	|
	|	СУММА(
	|		ВЫБОР КОГДА ВыпускПродукции.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) Тогда
	|			ВыпускПродукции.Стоимость
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ
	|	) КАК Стоимость
	|ИЗ 
	|	РегистрНакопления.УчетЗатрат%СуффиксРегл% КАК ВыпускПродукции
	|
	|ГДЕ
	|	ВыпускПродукции.Период МЕЖДУ &НачДата И &КонДата
	|	И ВыпускПродукции.Активность
	|	И ВыпускПродукции.АналитикаВидаУчета В (
	|		ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			Ссылка
	|		ИЗ
	|			АналитикаВидаУчетаВыпуск КАК РегистрАналитикаВидаУчета
	|		)
	|	И ВыпускПродукции.КорАналитикаВидаУчета = Неопределено
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыпускПродукции.АналитикаВидаУчета,
	|	ВыпускПродукции.АналитикаРаспределенияЗатрат,
	|	ВыпускПродукции.АналитикаУчетаПартий
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВыпускПродукции.АналитикаВидаУчета,
	|	ВыпускПродукции.АналитикаРаспределенияЗатрат,
	|	ВыпускПродукции.АналитикаУчетаПартий
	|";*/
			/*ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.УстановитьПараметр("НачДата", СтруктураШапкиДокумента.мНачДата);*/
			/*Запрос.УстановитьПараметр("КонДата", СтруктураШапкиДокумента.мКонДата);*/
			return null;
		}
		// СформироватьЗапросПриходВыпускПродукции()
		// Процедура корректировки учетной стоимости выпуска продукции.
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура – Реквизиты документа "Расчет себестоимости"
		//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров.
		//

		public void КорректировкаУчетнойСтоимостиВыпускаПродукции(/*
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц,
	СтруктураНаборыЗаписей
	*/)
		{
			/*ЗапросПриходВыпускПродукции = СформироватьЗапросПриходВыпускПродукции(
		СтруктураШапкиДокумента, 
		МенеджерВременныхТаблиц
	);*/
			/*РезультатЗапроса = ЗапросПриходВыпускПродукции.Выполнить();*/
			if(true/*РезультатЗапроса.Пустой()*/)
			{
			}
			/*Выборка = РезультатЗапроса.Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				/*// Движения "Приход" по аналитике выпуска.
*/
				/*// АналитикаУчетаЗатрат,
*/
				/*// Выборка.АналитикаВидаУчета,
*/
				/*// Выборка.АналитикаУчетаЗатрат,
*/
				/*// Выборка.АналитикаУчетаПартий,
*/
				/*// Выборка.АналитикаРаспределенияЗатрат,
*/
				/*// КодОперации
*/
				/*// Количество
*/
				/*// КоличествоНУ
*/
				/*// ПостояннаяРазница,
*/
				/*СтруктураНаборыЗаписей.УчетЗатрат
		);*/
			}
			/*;;*/
		}
		// КорректировкаУчетнойСтоимостиВыпускаПродукции()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ РАСЧЕТА СЕБЕСТОИМОСТИ ПО ПРЯМЫМ ЗАТРАТАМ
		// Процедура производит расчет фактической себестоимости выпуска.
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//	ТаблицаОшибок - ТаблицаЗначений - Таблица ошибок
		//

		public void РасчетФактическойСебестоимостиВыпуска(/*
	СтруктураШапкиДокумента,
	ТаблицаОшибок,
	ОперацияРасчетаСебестоимостиВыпуска = Неопределено,
	МенеджерВременнойТаблицыПредварительнаяОценкаЗатрат = Неопределено
	*/)
		{
			/*МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;*/
			/*СтруктураНаборыЗаписей = РасширеннаяАналитикаУчета.ПолучитьНаборыЗаписейРегистров(СтруктураШапкиДокумента);*/
			if(true/*СтруктураНаборыЗаписей.Количество() = 0*/)
			{
			}
			if(true/*НЕ СтруктураШапкиДокумента.ПростоеРаспределение*/)
			{
				/*ВыполнитьСписаниеКосвенныхРасходовНУПоРасчетнойСтоимости(
			СтруктураШапкиДокумента,
			СтруктураНаборыЗаписей
		);*/
			}
			/*СформироватьВременнуюТаблицуАналитикаВидаУчетаВыпуск(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);*/
			/*СформироватьВременнуюТаблицуВыпускПродукцииИУслуг(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);*/
			/*КорректировкаУчетнойСтоимостиВыпускаПродукции(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		СтруктураНаборыЗаписей
	);*/
			/*ПереносЗатратНаВыпускПродукции(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		СтруктураНаборыЗаписей
	);*/
			/*// ОтборПоАналитикеВидовУчета
*/
			/*ОперацияРасчетаСебестоимостиВыпуска,
		МенеджерВременнойТаблицыПредварительнаяОценкаЗатрат
	);*/
		}
		// РасчетФактическойСебестоимостиВыпуска()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ РАСПРЕДЕЛЕНИЯ РАСХОДОВ ПО БАЗЕ РАСПРЕДЕЛЕНИЯ
		////////////////////////////////////////////////////////////////////////////////
		// ФУНКЦИИ ФОРМИРОВАНИЯ ЗАПРОСА ПО РЕГИСТРУ "ЗАТРАТЫ"
		// Процедура формирования временной таблицы "АналитикаВидаУчетаЗатраты".
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
		//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц
		//

		public void СформироватьВременнуюТаблицуАналитикаВидаУчетаЗатраты(/*
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	*/)
		{
			/*ТекстЗапросаСКомментариями = "
	|ВЫБРАТЬ
	|	//ДляУпрУчета РегистрАналитикаВидаУчета.Подразделение,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.ПодразделениеОрганизации КАК Подразделение,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчета,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчетаНУ,
	|	//ДляУпрУчета РегистрАналитикаВидаУчета.Проект,
	|	РегистрАналитикаВидаУчета.Ссылка
	|
	|ПОМЕСТИТЬ АналитикаВидаУчетаЗатраты
	|ИЗ
	|	РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|ГДЕ
	|	РегистрАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Затраты)
	|	//ДляУпрУчета И РегистрАналитикаВидаУчета.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	//ДляРеглУчета И РегистрАналитикаВидаУчета.Организация = &Организация
	|";*/
			/*ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);*/
			/*Запрос.Выполнить();*/
			/*РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		"АналитикаВидаУчетаЗатраты"
	);*/
		}
		// СформироватьВременнуюТаблицуАналитикаВидаУчетаЗатраты()
		// Подготавливает временную таблицу "Инвентаризация", которая содержит данные документов
		// "ИнвентаризацияНЗП", "ИнвентаризацияБракаВПроизводстве" о затратах, которые следует оставить
		// на конец месяца (не распределять на выпуск).

		public void СформироватьВременнуюТаблицуИнвентаризация(/*
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц	
	*/)
		{
			/*// Поместим данные документов инвентаризации во временную таблицу
*/
			/*// Кроме того, получим сводные таблицы подразделений организации и счетов затрат
*/
			/*ТекстЗапросаСКомментариями = "
	|ВЫБРАТЬ 
	|		Ссылка,
	|		ХарактерЗатрат,
	|		Организация,
	|		Подразделение,
	|		ПодразделениеОрганизации,
	|
	|		СчетЗатрат,
	|		ВЫБОР КОГДА &ОрганизацияПрименяетУСН ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) ИНАЧЕ СчетЗатратНУ КОНЕЦ КАК СчетЗатратНУ,
	|
	|		Затрата,
	|		ХарактеристикаЗатраты,
	|		СерияЗатраты,
	|		
	|		СпособРаспределенияЗатрат,
	|		
	|		НоменклатурнаяГруппаНоменклатуры,
	|		СтатьяЗатратНоменклатуры,
	|		
	|		НоменклатурнаяГруппа,
	|		СтатьяЗатрат,
	|		Заказ,
	|		
	|		Продукция,
	|		ХарактеристикаПродукции,
	|		СерияПродукции,
	|		СУММА(Количество) КАК Количество,
	|		СУММА(Сумма)      КАК Сумма,
	|		СУММА(СуммаНал)   КАК СуммаНал
	|ПОМЕСТИТЬ ДокументыИнвентаризации
	|ИЗ (
	|ВЫБРАТЬ
	|		ИнвентаризацияМатериалы.Ссылка,
	|		ЗНАЧЕНИЕ(Перечисление.ХарактерЗатрат.ПроизводственныеРасходы) КАК ХарактерЗатрат,
	|		ИнвентаризацияМатериалы.Ссылка.Организация КАК Организация,
	|		ИнвентаризацияМатериалы.Ссылка.Подразделение КАК Подразделение,
	|		ИнвентаризацияМатериалы.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|
	|		ИнвентаризацияМатериалы.СчетЗатрат,
	|		ИнвентаризацияМатериалы.СчетЗатратНУ КАК СчетЗатратНУ,
	|
	|		ИнвентаризацияМатериалы.Номенклатура КАК Затрата,
	|		ВЫБОР КОГДА 
	|			//ДляУпрУчета НастройкиАналитикиУчетаХарактеристика.УправленческийУчет
	|			//ДляРеглУчета НастройкиАналитикиУчетаХарактеристика.РегламентированныйУчет
	|		ТОГДА
	|			ИнвентаризацияМатериалы.ХарактеристикаНоменклатуры
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)	
	|		КОНЕЦ КАК ХарактеристикаЗатраты,
	|		ВЫБОР КОГДА 
	|			//ДляУпрУчета НастройкиАналитикиУчетаСерия.УправленческийУчет
	|			//ДляРеглУчета НастройкиАналитикиУчетаСерия.РегламентированныйУчет
	|		ТОГДА
	|			ИнвентаризацияМатериалы.СерияНоменклатуры
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)	
	|		КОНЕЦ КАК СерияЗатраты,
	|		
	|		ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка) КАК СпособРаспределенияЗатрат,
	|		
	|		ИнвентаризацияМатериалы.Номенклатура.НоменклатурнаяГруппаЗатрат КАК НоменклатурнаяГруппаНоменклатуры,
	|		ИнвентаризацияМатериалы.Номенклатура.СтатьяЗатрат 				КАК СтатьяЗатратНоменклатуры,
	|		
	|		ИнвентаризацияМатериалы.НоменклатурнаяГруппа,
	|		ИнвентаризацияМатериалы.СтатьяЗатрат,
	|		ВЫБОР КОГДА ИнвентаризацияМатериалы.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			ИЛИ ИнвентаризацияМатериалы.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|		ТОГДА
	|			Неопределено
	|		ИНАЧЕ
	|			ИнвентаризацияМатериалы.Заказ
	|		КОНЕЦ КАК Заказ,
	|		
	|		ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Продукция,
	|		ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаПродукции,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК СерияПродукции,
	|
	|		ИнвентаризацияМатериалы.Количество * 
	|			ИнвентаризацияМатериалы.Коэффициент /
	|			ИнвентаризацияМатериалы.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент
	|		КАК Количество,
	|		0 КАК Сумма,
	|		0 КАК СуммаНал
	|		
	|	ИЗ
	|		Документ.ИнвентаризацияНЗП.Материалы КАК ИнвентаризацияМатериалы
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.НастройкиАналитикиУчета КАК НастройкиАналитикиУчетаХарактеристика
	|	ПО
	|		НастройкиАналитикиУчетаХарактеристика.Ссылка = ЗНАЧЕНИЕ(Справочник.НастройкиАналитикиУчета.ХарактеристикаЗатраты)
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.НастройкиАналитикиУчета КАК НастройкиАналитикиУчетаСерия
	|	ПО
	|		НастройкиАналитикиУчетаСерия.Ссылка = ЗНАЧЕНИЕ(Справочник.НастройкиАналитикиУчета.СерияЗатраты)
	|	
	|	ГДЕ
	|		ИнвентаризацияМатериалы.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|		И Не ИнвентаризацияМатериалы.Ссылка.ПометкаУдаления
	|		//ДляУпрУчета И ИнвентаризацияМатериалы.Ссылка.ОтражатьВУправленческомУчете
	|		//ДляРеглУчета И ИнвентаризацияМатериалы.Ссылка.ОтражатьВБухгалтерскомУчете
	|		//ДляРеглУчета И ИнвентаризацияМатериалы.Ссылка.ОтражатьВНалоговомУчете
	|		//ДляРеглУчета И ИнвентаризацияМатериалы.Ссылка.Организация = &Организация
	|			
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИнвентаризацияПрочие.Ссылка,
	|		ЗНАЧЕНИЕ(Перечисление.ХарактерЗатрат.ПроизводственныеРасходы) КАК ХарактерЗатрат,
	|		ИнвентаризацияПрочие.Ссылка.Организация,
	|		ИнвентаризацияПрочие.Ссылка.Подразделение,
	|		ИнвентаризацияПрочие.Ссылка.ПодразделениеОрганизации,
	|
	|		ИнвентаризацияПрочие.СчетЗатрат,
	|		ИнвентаризацияПрочие.СчетЗатратНУ КАК СчетЗатратНУ,
	|
	|		ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Затрата,
	|		ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаЗатраты,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК СерияЗатраты,
	|		ИнвентаризацияПрочие.СпособРаспределенияЗатратНаВыпуск КАК СпособРаспределенияЗатрат,
	
	|		ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка),
	|		ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
	
	
	|		ИнвентаризацияПрочие.НоменклатурнаяГруппа,
	|		ИнвентаризацияПрочие.СтатьяЗатрат,
	|		ВЫБОР КОГДА ИнвентаризацияПрочие.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			ИЛИ ИнвентаризацияПрочие.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|		ТОГДА
	|			Неопределено
	|		ИНАЧЕ
	|			ИнвентаризацияПрочие.Заказ
	|		КОНЕЦ КАК Заказ,
	|		
	|		ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Продукция,
	|		ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаПродукции,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК СерияПродукции,
	|
	|		0 КАК Количество,
	|		//ДляУпрУчета ИнвентаризацияПрочие.Сумма КАК Сумма,
	|		//ДляУпрУчета 0 КАК СуммаНал
	|		//ДляРеглУчета ИнвентаризацияПрочие.СуммаРегл КАК Сумма,
	|		//ДляРеглУчета ИнвентаризацияПрочие.СуммаНал КАК СуммаНал
	|	ИЗ
	|		Документ.ИнвентаризацияНЗП.ПрочиеЗатраты КАК ИнвентаризацияПрочие
	|		
	|	ГДЕ
	|		ИнвентаризацияПрочие.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|		И Не ИнвентаризацияПрочие.Ссылка.ПометкаУдаления
	|		//ДляУпрУчета И ИнвентаризацияПрочие.Ссылка.ОтражатьВУправленческомУчете
	|		//ДляРеглУчета И ИнвентаризацияПрочие.Ссылка.ОтражатьВБухгалтерскомУчете
	|		//ДляРеглУчета И ИнвентаризацияПрочие.Ссылка.ОтражатьВНалоговомУчете
	|		//ДляРеглУчета И ИнвентаризацияПрочие.Ссылка.Организация = &Организация
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИнвентаризацияБрак.Ссылка,
	|		ЗНАЧЕНИЕ(Перечисление.ХарактерЗатрат.БракВПроизводстве) КАК ХарактерЗатрат,
	|		ИнвентаризацияБрак.Ссылка.Организация,
	|		ИнвентаризацияБрак.Ссылка.Подразделение,
	|		ИнвентаризацияБрак.Ссылка.ПодразделениеОрганизации,
	|
	|		ИнвентаризацияБрак.СчетЗатрат,
	|		ИнвентаризацияБрак.СчетЗатратНУ,
	|
	|		ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Затрата,
	|		ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаЗатраты,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК СерияЗатраты,
	|		ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка) КАК СпособРаспределенияЗатрат,
	
	|		ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка),
	|		ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
	
	|		ИнвентаризацияБрак.НоменклатурнаяГруппа,
	|		ИнвентаризацияБрак.СтатьяЗатрат,
	|		ВЫБОР КОГДА ИнвентаризацияБрак.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			ИЛИ ИнвентаризацияБрак.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|		ТОГДА
	|			Неопределено
	|		ИНАЧЕ
	|			ИнвентаризацияБрак.Заказ
	|		КОНЕЦ КАК Заказ,
	|		
	|		ИнвентаризацияБрак.Продукция,
	|		ИнвентаризацияБрак.ХарактеристикаПродукции,
	|		ИнвентаризацияБрак.СерияПродукции,
	|
	|		0 КАК Количество,
	|		//ДляУпрУчета ИнвентаризацияБрак.Сумма КАК Сумма,
	|		//ДляУпрУчета 0 КАК СуммаНал
	|		//ДляРеглУчета ИнвентаризацияБрак.СуммаРегл КАК Сумма,
	|		//ДляРеглУчета ИнвентаризацияБрак.СуммаНал КАК СуммаНал
	|	ИЗ
	|		Документ.ИнвентаризацияБракаВПроизводстве.ЗатратыПоБракуВПроизводстве КАК ИнвентаризацияБрак
	|		
	|	ГДЕ
	|		ИнвентаризацияБрак.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|		И Не ИнвентаризацияБрак.Ссылка.ПометкаУдаления
	|		//ДляУпрУчета И ИнвентаризацияБрак.Ссылка.ОтражатьВУправленческомУчете
	|		//ДляРеглУчета И ИнвентаризацияБрак.Ссылка.ОтражатьВБухгалтерскомУчете
	|		//ДляРеглУчета И ИнвентаризацияБрак.Ссылка.ОтражатьВНалоговомУчете
	|		//ДляРеглУчета И ИнвентаризацияБрак.Ссылка.Организация = &Организация
	|) КАК Инвентаризация
	|СГРУППИРОВАТЬ ПО
	|		Ссылка,
	|		ХарактерЗатрат,
	|		Организация,
	|		Подразделение,
	|		ПодразделениеОрганизации,
	|
	|		СчетЗатрат,
	|		ВЫБОР КОГДА &ОрганизацияПрименяетУСН ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) ИНАЧЕ СчетЗатратНУ КОНЕЦ,
	|
	|		Затрата,
	|		ХарактеристикаЗатраты,
	|		СерияЗатраты,
	|		
	|		СпособРаспределенияЗатрат,
	|		
	|		НоменклатурнаяГруппаНоменклатуры,
	|		СтатьяЗатратНоменклатуры,
	|		
	|		НоменклатурнаяГруппа,
	|		СтатьяЗатрат,
	|		Заказ,
	|		
	|		Продукция,
	|		ХарактеристикаПродукции,
	|		СерияПродукции;
	|//////////////////////////////////////////////////////////////////////////////////
	|// В таблице не должно быть записей с повторяющимися значениями поля Ссылка
	|//ДляРеглУчета ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|//ДляРеглУчета		Ссылка,
	|//ДляРеглУчета		Организация,
	|//ДляРеглУчета		Подразделение,
	|//ДляРеглУчета		ХарактерЗатрат // Характер затрат определяется по виду документа, может принимать значения ПроизводственныеРасходы или БракВПроизводстве
	|//ДляРеглУчета ИЗ ДокументыИнвентаризации КАК ДокументыИнвентаризации
	|//ДляРеглУчета ГДЕ ПодразделениеОрганизации = Значение(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) 
	|//ДляРеглУчета 	ИЛИ СчетЗатрат   = Значение(ПланСчетов.Хозрасчетный.ПустаяСсылка) 
	|//ДляРеглУчета 	ИЛИ (НЕ &ОрганизацияПрименяетУСН И СчетЗатратНУ = Значение(ПланСчетов.Налоговый.ПустаяСсылка))";*/
			/*ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.УстановитьПараметр("НачДата",                 СтруктураШапкиДокумента.мНачДата);*/
			/*Запрос.УстановитьПараметр("КонДата",                 СтруктураШапкиДокумента.мКонДата);*/
			/*Запрос.УстановитьПараметр("Организация",             СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("ОрганизацияПрименяетУСН", СтруктураШапкиДокумента.ОрганизацияПрименяетУСН);*/
			/*РезультатЗапроса = Запрос.Выполнить();*/
			/*РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		"ДокументыИнвентаризации"
	);*/
			/*СведенияОтражениеВРеглУчете = Новый ТаблицаЗначений();*/
			/*СведенияОтражениеВРеглУчете.Колонки.Добавить("Ссылка",                   Новый ОписаниеТипов("ДокументСсылка.ИнвентаризацияНЗП, ДокументСсылка.ИнвентаризацияБракаВПроизводстве"));*/
			/*СведенияОтражениеВРеглУчете.Колонки.Добавить("ПодразделениеОрганизации", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));*/
			/*СведенияОтражениеВРеглУчете.Колонки.Добавить("СчетЗатрат",               Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));*/
			/*СведенияОтражениеВРеглУчете.Колонки.Добавить("СчетЗатратНУ",             Новый ОписаниеТипов("ПланСчетовСсылка.Налоговый"));*/
			if(true/*СтруктураШапкиДокумента.ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете*/)
			{
				/*// Для регламентированного учета получим данные о подразделении организации и счетах учета
*/
				/*ВыборкаНеЗаполненыДанныеРеглУчета = РезультатЗапроса.Выбрать();*/
				/*// Второй запрос в пакете содержит таблицу не заполненных данных регл. учета
*/
				while(true/*ВыборкаНеЗаполненыДанныеРеглУчета.Следующий()*/)
				{
					/*НоваяСтрока = СведенияОтражениеВРеглУчете.Добавить();*/
					/*ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаНеЗаполненыДанныеРеглУчета);*/
					if(true/*НЕ ЗначениеЗаполнено(НоваяСтрока.ПодразделениеОрганизации)*/)
					{
						/*// Определим подразделение организации
*/
						/*НоваяСтрока.ПодразделениеОрганизации = УправлениеЗатратами.ПолучитьПодразделениеОрганизации(ВыборкаНеЗаполненыДанныеРеглУчета.Организация, ВыборкаНеЗаполненыДанныеРеглУчета.Подразделение, Истина);*/
					}
					if(true/*НЕ ЗначениеЗаполнено(НоваяСтрока.ПодразделениеОрганизации)*/)
					{
						/*Продолжить;*/
					}
					if(true/*НЕ ЗначениеЗаполнено(НоваяСтрока.СчетЗатрат)*/)
					{
						/*// Определим счета учета
*/
						if(true/*ВыборкаНеЗаполненыДанныеРеглУчета.ХарактерЗатрат = Перечисления.ХарактерЗатрат.БракВПроизводстве*/)
						{
							/*НоваяСтрока.СчетЗатрат = ПланыСчетов.Хозрасчетный.БракВПроизводствеНеОблагаемоеЕНВД;*/
						}
					}
					if(true/*НЕ ЗначениеЗаполнено(НоваяСтрока.СчетЗатрат)*/)
					{
						/*Продолжить;*/
					}
					/*// Заполним счет НУ
*/
					if(true/*НЕ ЗначениеЗаполнено(НоваяСтрока.СчетЗатратНУ) И 
				НЕ СтруктураШапкиДокумента.ОрганизацияПрименяетУСН*/)
					{
						/*// При УСН счет НУ не нужен
*/
						/*// В налоговом учете в документе ИнвентаризацияНЗП всегда используется счет прямых расходов
*/
						/*НоваяСтрока.СчетЗатратНУ = РасширеннаяАналитикаУчета.ПолучитьСчетУчетаНУ(НоваяСтрока.СчетЗатрат);*/
					}
				}
				/*;;*/
			}
			/*// Дополним таблицу инвентаризации
*/
			/*ТекстЗапросаСКомментариями = "
	|// Помещаем данные таблицы значений во временную таблицу
	|ВЫБРАТЬ 
	|	Ссылка,
	|	ПодразделениеОрганизации,
	|	СчетЗатрат,
	|	СчетЗатратНУ
	|ПОМЕСТИТЬ СведенияОтражениеВРеглУчете
	|ИЗ &СведенияОтражениеВРеглУчете КАК СведенияОтражениеВРеглУчете;
	|////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|		ДокументыИнвентаризации.ХарактерЗатрат,
	|		ДокументыИнвентаризации.Организация,
	|		ДокументыИнвентаризации.Подразделение,
	|		ВЫБОР КОГДА ДокументыИнвентаризации.ПодразделениеОрганизации = Значение(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|		И НЕ СведенияОтражениеВРеглУчете.ПодразделениеОрганизации ЕСТЬ NULL ТОГДА
	|			СведенияОтражениеВРеглУчете.ПодразделениеОрганизации
	|		ИНАЧЕ
	|			ДокументыИнвентаризации.ПодразделениеОрганизации
	|		КОНЕЦ КАК ПодразделениеОрганизации,
	|
	|		ВЫБОР КОГДА ДокументыИнвентаризации.СчетЗатрат = Значение(ПланСчетов.Хозрасчетный.ПустаяСсылка) 
	|		И НЕ СведенияОтражениеВРеглУчете.СчетЗатрат ЕСТЬ NULL ТОГДА
	|			СведенияОтражениеВРеглУчете.СчетЗатрат
	|		ИНАЧЕ
	|			ДокументыИнвентаризации.СчетЗатрат
	|		КОНЕЦ КАК СчетЗатрат,
	|		ВЫБОР КОГДА ДокументыИнвентаризации.СчетЗатратНУ = Значение(ПланСчетов.Налоговый.ПустаяСсылка) 
	|		И НЕ СведенияОтражениеВРеглУчете.СчетЗатратНУ ЕСТЬ NULL ТОГДА
	|			СведенияОтражениеВРеглУчете.СчетЗатратНУ
	|		ИНАЧЕ
	|			ДокументыИнвентаризации.СчетЗатратНУ
	|		КОНЕЦ КАК СчетЗатратНУ,
	|
	|		ДокументыИнвентаризации.Затрата,
	|		ДокументыИнвентаризации.ХарактеристикаЗатраты,
	|		ДокументыИнвентаризации.СерияЗатраты,
	|		
	|		ДокументыИнвентаризации.СпособРаспределенияЗатрат,
	|		
	|		ВЫБОР КОГДА ДокументыИнвентаризации.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка) 
	|		И НЕ ДокументыИнвентаризации.НоменклатурнаяГруппаНоменклатуры ЕСТЬ NULL ТОГДА
	|			ДокументыИнвентаризации.НоменклатурнаяГруппаНоменклатуры
	|		ИНАЧЕ
	|			ДокументыИнвентаризации.НоменклатурнаяГруппа
	|		КОНЕЦ КАК НоменклатурнаяГруппа,
	
	|		ВЫБОР КОГДА ДокументыИнвентаризации.СтатьяЗатрат = ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) 
	|		И НЕ ДокументыИнвентаризации.СтатьяЗатратНоменклатуры ЕСТЬ NULL ТОГДА
	|			ДокументыИнвентаризации.СтатьяЗатратНоменклатуры
	|		ИНАЧЕ
	|			ДокументыИнвентаризации.СтатьяЗатрат
	|		КОНЕЦ КАК СтатьяЗатрат,
	
	|		ДокументыИнвентаризации.Заказ,
	|		
	|		ДокументыИнвентаризации.Продукция,
	|		ДокументыИнвентаризации.ХарактеристикаПродукции,
	|		ДокументыИнвентаризации.СерияПродукции,
	|		СУММА(ДокументыИнвентаризации.Количество) КАК Количество,
	|		СУММА(ДокументыИнвентаризации.Сумма)      КАК Сумма,
	|		СУММА(ДокументыИнвентаризации.СуммаНал)   КАК СуммаНал
	|ПОМЕСТИТЬ ДанныеИнвентаризации
	|ИЗ ДокументыИнвентаризации
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	СведенияОтражениеВРеглУчете
	|ПО 
	|	ДокументыИнвентаризации.Ссылка = СведенияОтражениеВРеглУчете.Ссылка
	|СГРУППИРОВАТЬ ПО 
	|		ДокументыИнвентаризации.ХарактерЗатрат,
	|		ДокументыИнвентаризации.Организация,
	|		ДокументыИнвентаризации.Подразделение,
	|		ВЫБОР КОГДА ДокументыИнвентаризации.ПодразделениеОрганизации = Значение(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|		И НЕ СведенияОтражениеВРеглУчете.ПодразделениеОрганизации ЕСТЬ NULL ТОГДА
	|			СведенияОтражениеВРеглУчете.ПодразделениеОрганизации
	|		ИНАЧЕ
	|			ДокументыИнвентаризации.ПодразделениеОрганизации
	|		КОНЕЦ,
	|
	|		ВЫБОР КОГДА ДокументыИнвентаризации.СчетЗатрат = Значение(ПланСчетов.Хозрасчетный.ПустаяСсылка) 
	|		И НЕ СведенияОтражениеВРеглУчете.СчетЗатрат ЕСТЬ NULL ТОГДА
	|			СведенияОтражениеВРеглУчете.СчетЗатрат
	|		ИНАЧЕ
	|			ДокументыИнвентаризации.СчетЗатрат
	|		КОНЕЦ,
	|		ВЫБОР КОГДА ДокументыИнвентаризации.СчетЗатратНУ = Значение(ПланСчетов.Налоговый.ПустаяСсылка) 
	|		И НЕ СведенияОтражениеВРеглУчете.СчетЗатратНУ ЕСТЬ NULL ТОГДА
	|			СведенияОтражениеВРеглУчете.СчетЗатратНУ
	|		ИНАЧЕ
	|			ДокументыИнвентаризации.СчетЗатратНУ
	|		КОНЕЦ,
	|
	|		Затрата,
	|		ХарактеристикаЗатраты,
	|		СерияЗатраты,
	|		
	|		СпособРаспределенияЗатрат,
	|		
	|		ВЫБОР КОГДА ДокументыИнвентаризации.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка) 
	|		И НЕ ДокументыИнвентаризации.НоменклатурнаяГруппаНоменклатуры ЕСТЬ NULL ТОГДА
	|			ДокументыИнвентаризации.НоменклатурнаяГруппаНоменклатуры
	|		ИНАЧЕ
	|			ДокументыИнвентаризации.НоменклатурнаяГруппа
	|		КОНЕЦ,
	
	|		ВЫБОР КОГДА ДокументыИнвентаризации.СтатьяЗатрат = ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) 
	|		И НЕ ДокументыИнвентаризации.СтатьяЗатратНоменклатуры ЕСТЬ NULL ТОГДА
	|			ДокументыИнвентаризации.СтатьяЗатратНоменклатуры
	|		ИНАЧЕ
	|			ДокументыИнвентаризации.СтатьяЗатрат
	|		КОНЕЦ,
	|		Заказ,
	|		
	|		Продукция,
	|		ХарактеристикаПродукции,
	|		СерияПродукции;
	|//////////////////////////////////////////////////////////////////////////
	|// Получим значения ключей аналитики учета
	|ВЫБРАТЬ
	|	РегистрАналитикаВидаУчета.Ссылка КАК АналитикаВидаУчета,
	|	РегистрАналитикаУчетаЗатрат.Ссылка КАК АналитикаУчетаЗатрат,
	|	РегистрАналитикаРаспределенияЗатрат.Ссылка КАК АналитикаРаспределенияЗатрат,
	|	РегистрАналитикаУчетаПартий.Ссылка КАК АналитикаУчетаПартий,
	|	Инвентаризация.Количество,
	|	Инвентаризация.Сумма,
	|	Инвентаризация.СуммаНал
	|	
	|ПОМЕСТИТЬ Инвентаризация
	|ИЗ ДанныеИнвентаризации КАК Инвентаризация
	|	 
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|	ПО
	|		РегистрАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Затраты)
	|		И РегистрАналитикаВидаУчета.Проект = Неопределено
	|	 	//ДляУпрУчета И РегистрАналитикаВидаУчета.Подразделение = Инвентаризация.Подразделение
	|	 	//ДляУпрУчета И РегистрАналитикаВидаУчета.ПодразделениеОрганизации = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.пустаяСсылка)
	|	 	//ДляУпрУчета И РегистрАналитикаВидаУчета.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	 	//ДляУпрУчета И РегистрАналитикаВидаУчета.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|		//ДляУпрУчета И РегистрАналитикаВидаУчета.СчетУчетаНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|		
	|		//ДляРеглУчета И РегистрАналитикаВидаУчета.ПодразделениеОрганизации = Инвентаризация.ПодразделениеОрганизации
	|		//ДляРеглУчета И РегистрАналитикаВидаУчета.Организация = Инвентаризация.Организация
	|		//ДляРеглУчета И РегистрАналитикаВидаУчета.СчетУчета = Инвентаризация.СчетЗатрат
	|		//ДляРеглУчета И РегистрАналитикаВидаУчета.СчетУчетаНУ = Инвентаризация.СчетЗатратНУ
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаЗатрат КАК РегистрАналитикаУчетаЗатрат
	|	ПО
	|		РегистрАналитикаУчетаЗатрат.ХарактерЗатрат = Инвентаризация.ХарактерЗатрат
	|		И РегистрАналитикаУчетаЗатрат.СтатьяЗатрат = Инвентаризация.СтатьяЗатрат
	|		И РегистрАналитикаУчетаЗатрат.Затрата = Инвентаризация.Затрата
	|		И РегистрАналитикаУчетаЗатрат.ХарактеристикаЗатраты = Инвентаризация.ХарактеристикаЗатраты
	|		И РегистрАналитикаУчетаЗатрат.СерияЗатраты = Инвентаризация.СерияЗатраты
	|		И РегистрАналитикаУчетаЗатрат.СпособРаспределенияЗатрат = Инвентаризация.СпособРаспределенияЗатрат
	|		И РегистрАналитикаУчетаЗатрат.Качество = ЗНАЧЕНИЕ(Справочник.Качество.ПустаяСсылка)
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрАналитикаРаспределенияЗатрат
	|	ПО
	|		РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа = Инвентаризация.НоменклатурнаяГруппа
	|		И РегистрАналитикаРаспределенияЗатрат.Продукция = Инвентаризация.Продукция
	|		И РегистрАналитикаРаспределенияЗатрат.ХарактеристикаПродукции = Инвентаризация.ХарактеристикаПродукции
	|		И РегистрАналитикаРаспределенияЗатрат.СерияПродукции = Инвентаризация.СерияПродукции
	|		И РегистрАналитикаРаспределенияЗатрат.Спецификация = ЗНАЧЕНИЕ(Справочник.СпецификацииНоменклатуры.ПустаяСсылка)
	|		И РегистрАналитикаРаспределенияЗатрат.ВариантВыпускаПродукции = ЗНАЧЕНИЕ(Перечисление.ВариантыВыпускаПродукции.ПустаяСсылка)
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПартий КАК РегистрАналитикаУчетаПартий
	|	ПО
	|		РегистрАналитикаУчетаПартий.Заказ = Инвентаризация.Заказ
	|		И РегистрАналитикаУчетаПартий.СтатусПартии = ЗНАЧЕНИЕ(Перечисление.СтатусыПартийТоваров.ПустаяСсылка)
	|		И РегистрАналитикаУчетаПартий.ДоговорКомитента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|		И РегистрАналитикаУчетаПартий.Комиссионер = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|		И РегистрАналитикаУчетаПартий.ДоговорКомиссионера = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|		И РегистрАналитикаУчетаПартий.ФизЛицо = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|		И РегистрАналитикаУчетаПартий.НазначениеИспользования = ЗНАЧЕНИЕ(Справочник.НазначенияИспользования.ПустаяСсылка)
	|		И РегистрАналитикаУчетаПартий.ДокументПередачи = ЗНАЧЕНИЕ(Документ.ПередачаМатериаловВЭксплуатацию.ПустаяСсылка)
	|;
	|//////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДокументыИнвентаризации;
	|УНИЧТОЖИТЬ СведенияОтражениеВРеглУчете;
	|УНИЧТОЖИТЬ ДанныеИнвентаризации;
	|";*/
			/*ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.УстановитьПараметр("СведенияОтражениеВРеглУчете", СведенияОтражениеВРеглУчете);*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.Выполнить();*/
			/*РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		"Инвентаризация"
	);*/
		}
		// Процедура формирования временной таблицы "УчетЗатрат".
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
		//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц
		//

		public void СформироватьВременнуюТаблицуУчетЗатрат(/*
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	*/)
		{
			/*СформироватьВременнуюТаблицуИнвентаризация(СтруктураШапкиДокумента, МенеджерВременныхТаблиц);*/
			/*СформироватьВременнуюТаблицуНормируемыеВидыРасходовНУ(МенеджерВременныхТаблиц);*/
			/*// Подготовим таблицу затрат за вычетом инвентаризации
*/
			/*ТекстЗапросаСКомментариями = 
	"ВЫБРАТЬ
	|	УчетЗатратОстатки.АналитикаВидаУчета,
	|	УчетЗатратОстатки.АналитикаУчетаЗатрат,
	|	УчетЗатратОстатки.АналитикаУчетаПартий,
	|	УчетЗатратОстатки.АналитикаРаспределенияЗатрат,
	|
	|	//ДляРеглУчета УчетЗатратОстатки.КоличествоНУОстаток,
	|	//ДляРеглУчета УчетЗатратОстатки.СтоимостьНУОстаток,
	|	//ДляРеглУчета УчетЗатратОстатки.ПостояннаяРазницаОстаток,
	|	УчетЗатратОстатки.КоличествоОстаток,
	|	УчетЗатратОстатки.СтоимостьОстаток
	|	
	|ПОМЕСТИТЬ УчетЗатратОстатки
	|ИЗ
	|	РегистрНакопления.УчетЗатрат%СуффиксРегл%.Остатки(&КонГраница,
	|		АналитикаВидаУчета В (
	|			ВЫБРАТЬ
	|				РегистрАналитикаВидаУчета.Ссылка
	|			ИЗ
	|				АналитикаВидаУчетаЗатраты КАК РегистрАналитикаВидаУчета)) КАК УчетЗатратОстатки
	|;
	|////////////////////////////////////////////////////////////////////////////////////////
	|	
	|ВЫБРАТЬ
	|	&ДетализацияПоФиксированнойСтатьеЗатрат КАК ДетализацияПоФиксированнойСтатьеЗатрат,
	|	ЗНАЧЕНИЕ(Перечисление.ХарактерЗатрат.ОбщепроизводственныеРасходы) КАК ХарактерЗатрат,
	|	&СтатьяОбщепроизводственныеРасходы КАК СтатьяЗатрат
	|	
	|ПОМЕСТИТЬ ДетализацияЗатрат
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|		
	|ВЫБРАТЬ
	|	&ДетализацияПоФиксированнойСтатьеЗатрат КАК ДетализацияПоФиксированнойСтатьеЗатрат,
	|	ЗНАЧЕНИЕ(Перечисление.ХарактерЗатрат.ОбщехозяйственныеРасходы),
	|	&СтатьяОбщехозяйственныеРасходы
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|		
	|ВЫБРАТЬ
	|	&ДетализацияПоФиксированнойСтатьеЗатрат КАК ДетализацияПоФиксированнойСтатьеЗатрат,
	|	ЗНАЧЕНИЕ(Перечисление.ХарактерЗатрат.БракВПроизводстве),
	|	&СтатьяБракВПроизводстве
	|;
	|////////////////////////////////////////////////////////////////////////////////////////
	|	
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА РегистрАналитикаУчетаЗатрат.СпособРаспределенияЗатрат <> ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка) ТОГДА
	|		РегистрАналитикаУчетаЗатрат.СпособРаспределенияЗатрат
	|	ИНАЧЕ
	|		ЕСТЬNULL(СпособыРаспределения.СпособРаспределения, ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка))
	|	КОНЕЦ КАК СпособРаспределенияЗатрат,
	|
	|	ВЫБОР КОГДА РегистрАналитикаУчетаЗатрат.СпособРаспределенияЗатрат <> ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ХарактерРаспределенияЗатрат.ПроизводственныеРасходы)
	|	ИНАЧЕ
	|		СпособыРаспределения.ХарактерРаспределенияЗатрат
	|	КОНЕЦ КАК ХарактерРаспределенияЗатрат,
	|
	|	ВЫБОР КОГДА РегистрАналитикаУчетаЗатрат.СпособРаспределенияЗатрат <> ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка) ТОГДА
	|		Ложь
	|	ИНАЧЕ
	|		СпособыРаспределения.РаспределятьНаПодчиненныеПодразделения
	|	КОНЕЦ КАК РаспределятьНаПодчиненныеПодразделения,
	|	
	|	Затраты.АналитикаВидаУчета,
	|	Затраты.АналитикаУчетаЗатрат,
	|	Затраты.АналитикаУчетаПартий,
	|	Затраты.АналитикаРаспределенияЗатрат,
	|	
	|	ЕСТЬNULL(Детализация.ДетализацияПоФиксированнойСтатьеЗатрат, Ложь) КАК ДетализацияПоФиксированнойСтатьеЗатрат,
	|	ВЫБОР КОГДА Детализация.ДетализацияПоФиксированнойСтатьеЗатрат ТОГДА
	|		Детализация.СтатьяЗатрат
	|	ИНАЧЕ
	|		РегистрАналитикаУчетаЗатрат.СтатьяЗатрат
	|	КОНЕЦ КАК СтатьяЗатрат,
	|	ВЫБОР КОГДА РегистрАналитикаУчетаЗатрат.СтатьяЗатрат.ВидРасходовНУ = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ТранспортныеРасходы) ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК ТранспортныеРасходы,
	|		
	|	РегистрАналитикаУчетаЗатрат.ХарактерЗатрат,
	|
	|	ВЫБОР КОГДА Затраты.КоличествоОстаток <> 0 ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК РаспределениеПоКоличеству,
	|	
	|	ВЫБОР КОГДА Детализация.ДетализацияПоФиксированнойСтатьеЗатрат ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	ИНАЧЕ
	|		РегистрАналитикаУчетаЗатрат.Затрата
	|	КОНЕЦ КАК Затрата,
	|	
	|	ВЫБОР КОГДА Детализация.ДетализацияПоФиксированнойСтатьеЗатрат ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	ИНАЧЕ
	|		РегистрАналитикаУчетаЗатрат.ХарактеристикаЗатраты
	|	КОНЕЦ КАК ХарактеристикаЗатраты,
	|	
	|	ВЫБОР КОГДА Детализация.ДетализацияПоФиксированнойСтатьеЗатрат ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	ИНАЧЕ
	|		РегистрАналитикаУчетаЗатрат.СерияЗатраты
	|	КОНЕЦ КАК СерияЗатраты,
	|
	|	//ДляРеглУчета 	Затраты.ПостояннаяРазницаОстаток,
	|	
	|	//ДляРеглУчета 	ВЫБОР КОГДА НормируемыеВидыРасходовНУ.ВидРасходовНУ ЕСТЬ NULL ТОГДА
	|	//ДляРеглУчета 		Затраты.СтоимостьНУОстаток - ЕСТЬNULL(Инвентаризация.СуммаНал, 0)
	|	//ДляРеглУчета 	ИНАЧЕ
	|	//ДляРеглУчета		0
	|	//ДляРеглУчета 	КОНЕЦ КАК СтоимостьНУОстаток,
	|
	|	//ДляРеглУчета 	ВЫБОР КОГДА НормируемыеВидыРасходовНУ.ВидРасходовНУ ЕСТЬ NULL ТОГДА
	|	//ДляРеглУчета 		Затраты.КоличествоНУОстаток - ЕСТЬNULL(Инвентаризация.Количество, 0)
	|	//ДляРеглУчета 	ИНАЧЕ
	|	//ДляРеглУчета		0
	|	//ДляРеглУчета 	КОНЕЦ КАК КоличествоНУОстаток,
	|
	|	Затраты.СтоимостьОстаток - ЕСТЬNULL(Инвентаризация.Сумма, 0) КАК СтоимостьОстаток,
	|	Затраты.КоличествоОстаток - ЕСТЬNULL(Инвентаризация.Количество, 0) КАК КоличествоОстаток
	|
	|ПОМЕСТИТЬ УчетЗатрат
	|ИЗ
	|	УчетЗатратОстатки КАК Затраты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РаспределяемыеСтатьиЗатрат%СуффиксУчета% КАК СпособыРаспределения
	|	ПО
	|		Затраты.АналитикаВидаУчета = СпособыРаспределения.АналитикаВидаУчета
	|		И Затраты.АналитикаУчетаЗатрат = СпособыРаспределения.АналитикаУчетаЗатрат
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Инвентаризация КАК Инвентаризация
	|	ПО
	|		Затраты.АналитикаВидаУчета = Инвентаризация.АналитикаВидаУчета
	|		И Затраты.АналитикаУчетаЗатрат = Инвентаризация.АналитикаУчетаЗатрат
	|		И Затраты.АналитикаРаспределенияЗатрат = Инвентаризация.АналитикаРаспределенияЗатрат
	|		И Затраты.АналитикаУчетаПартий = Инвентаризация.АналитикаУчетаПартий
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаЗатрат КАК РегистрАналитикаУчетаЗатрат
	|	ПО
	|		Затраты.АналитикаУчетаЗатрат = РегистрАналитикаУчетаЗатрат.Ссылка
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ ДетализацияЗатрат КАК Детализация 
	|	ПО
	|		&ДетализацияПоФиксированнойСтатьеЗатрат
	|		И РегистрАналитикаУчетаЗатрат.ХарактерЗатрат = Детализация.ХарактерЗатрат
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НормируемыеВидыРасходовНУ КАК НормируемыеВидыРасходовНУ
	|	ПО
	|		РегистрАналитикаУчетаЗатрат.СтатьяЗатрат.ВидРасходовНУ = НормируемыеВидыРасходовНУ.ВидРасходовНУ
	|	
	|ГДЕ
	|	Не СпособыРаспределения.НеРаспределять
	|	ИЛИ СпособыРаспределения.НеРаспределять ЕСТЬ NULL
	|	//ДляУпрУчета ИЛИ РегистрАналитикаУчетаЗатрат.ХарактерЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерЗатрат.Прочие)
	|;
	|	
	|////////////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ УчетЗатратОстатки
	|;
	|	
	|////////////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДетализацияЗатрат";*/
			/*ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.УстановитьПараметр("НачДата", 		СтруктураШапкиДокумента.мНачДата);*/
			/*Запрос.УстановитьПараметр("КонДата", 		СтруктураШапкиДокумента.мКонДата);*/
			/*Запрос.УстановитьПараметр("КонГраница", 	СтруктураШапкиДокумента.мКонГраница);*/
			/*Запрос.УстановитьПараметр("Организация", 	СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("ДетализацияПоФиксированнойСтатьеЗатрат", СтруктураШапкиДокумента.ДетализацияПоФиксированнойСтатьеЗатрат);*/
			/*Запрос.УстановитьПараметр("СтатьяОбщепроизводственныеРасходы", 		СтруктураШапкиДокумента.СтатьяОбщепроизводственныеРасходы);*/
			/*Запрос.УстановитьПараметр("СтатьяОбщехозяйственныеРасходы", 		СтруктураШапкиДокумента.СтатьяОбщехозяйственныеРасходы);*/
			/*Запрос.УстановитьПараметр("СтатьяБракВПроизводстве", 				СтруктураШапкиДокумента.СтатьяБракВПроизводстве);*/
			/*Запрос.Выполнить();*/
			/*РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		"УчетЗатрат"
	);*/
		}
		// СформироватьВременнуюТаблицуУчетЗатрат()
		// Функция формирует текст запроса по регистру "Учет затрат".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоРаспределяемымЗатратам(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Затраты.СпособРаспределенияЗатрат, ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка)) КАК СпособРаспределенияЗатрат,
	|	ЕСТЬNULL(Затраты.ХарактерРаспределенияЗатрат, ЗНАЧЕНИЕ(Перечисление.ХарактерРаспределенияЗатрат.ПустаяСсылка)) КАК ХарактерРаспределенияЗатрат,
	|	ЕСТЬNULL(Затраты.РаспределятьНаПодчиненныеПодразделения, Ложь) КАК РаспределятьНаПодчиненныеПодразделения,
	|
	|	РегистрКорАналитикаУчетаЗатрат.Ссылка КАК КорАналитикаУчетаЗатрат,
	|
	|	Затраты.АналитикаВидаУчета,
	|	Затраты.АналитикаУчетаЗатрат,
	|	Затраты.АналитикаУчетаПартий,
	|	Затраты.АналитикаРаспределенияЗатрат,
	|	
	|	РегистрАналитикаВидаУчета.Подразделение,
	|
	|	Затраты.ДетализацияПоФиксированнойСтатьеЗатрат,
	|	Затраты.СтатьяЗатрат,
	|	Затраты.ХарактерЗатрат,
	|	Затраты.СтатьяЗатрат.СтатусМатериальныхЗатрат КАК СтатусМатериальныхЗатрат,
	|	Затраты.СтатьяЗатрат.ВидРасходовНУ КАК ВидРасходовНУ,
	|	Затраты.ТранспортныеРасходы,
	|	Затраты.Затрата,
	|	Затраты.ХарактеристикаЗатраты,
	|	Затраты.СерияЗатраты,
	|	Затраты.РаспределениеПоКоличеству,
	|
	|	РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа,
	|	РегистрАналитикаРаспределенияЗатрат.Продукция,
	|	РегистрАналитикаРаспределенияЗатрат.ХарактеристикаПродукции,
	|	РегистрАналитикаРаспределенияЗатрат.СерияПродукции,
	|	РегистрАналитикаУчетаПартий.Заказ,
	|	
	|	//ДляУпрУчета РегистрАналитикаВидаУчета.Проект,
	|	
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчета,
	|	//ДляРеглУчета ЕСТЬNULL(СчетаУчетаЕНВД.ЕНВД, Ложь) КАК ЕНВД,
	|	//ДляРеглУчета ЕСТЬNULL(СчетаУчетаЕНВД.ПодлежитРаспределению, Ложь) КАК ПодлежитРаспределению,
	|
	|	//ДляРеглУчета Затраты.ПостояннаяРазницаОстаток,
	|	//ДляРеглУчета Затраты.СтоимостьНУОстаток КАК СтоимостьОстатокНУ,
	|	//ДляРеглУчета Затраты.КоличествоНУОстаток КАК КоличествоОстатокНУ,
	|	Затраты.СтоимостьОстаток,
	|	Затраты.КоличествоОстаток
	|
	|ИЗ
	|	УчетЗатрат КАК Затраты
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		АналитикаВидаУчетаЗатраты КАК РегистрАналитикаВидаУчета
	|	ПО
	|		Затраты.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПартий КАК РегистрАналитикаУчетаПартий
	|	ПО
	|		Затраты.АналитикаУчетаПартий = РегистрАналитикаУчетаПартий.Ссылка
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрАналитикаРаспределенияЗатрат
	|	ПО
	|		Затраты.АналитикаРаспределенияЗатрат = РегистрАналитикаРаспределенияЗатрат.Ссылка
	|		
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаЗатрат КАК РегистрКорАналитикаУчетаЗатрат
	|	ПО
	|		Затраты.СпособРаспределенияЗатрат = РегистрКорАналитикаУчетаЗатрат.СпособРаспределенияЗатрат
	|		И Затраты.СтатьяЗатрат = РегистрКорАналитикаУчетаЗатрат.СтатьяЗатрат
	|		И Затраты.ХарактерЗатрат = РегистрКорАналитикаУчетаЗатрат.ХарактерЗатрат
	|		И Затраты.Затрата = РегистрКорАналитикаУчетаЗатрат.Затрата
	|		И Затраты.ХарактеристикаЗатраты = РегистрКорАналитикаУчетаЗатрат.ХарактеристикаЗатраты
	|		И Затраты.СерияЗатраты = РегистрКорАналитикаУчетаЗатрат.СерияЗатраты
	|		И Затраты.ХарактерЗатрат = РегистрКорАналитикаУчетаЗатрат.ХарактерЗатрат
	|			
	|	//ДляБухУчета	ЛЕВОЕ СОЕДИНЕНИЕ (												
	|	//ДляБухУчета		ВЫБРАТЬ
	|	//ДляБухУчета			СчетаУчетаЕНВД.Счет,
	|	//ДляБухУчета			СчетаУчетаЕНВД.ПодлежитРаспределению,
	|	//ДляБухУчета			(Не СчетаУчетаЕНВД.ПодлежитРаспределению) КАК ЕНВД
	|	//ДляБухУчета		ИЗ
	|	//ДляБухУчета			РегистрСведений.СчетаУчетаПоДеятельностиЕНВД КАК СчетаУчетаЕНВД
	|	//ДляБухУчета		) КАК СчетаУчетаЕНВД
	|	//ДляБухУчета	ПО
	|	//ДляБухУчета		РегистрАналитикаВидаУчета.СчетУчета = СчетаУчетаЕНВД.Счет
	|
	|УПОРЯДОЧИТЬ ПО
	|	Затраты.СпособРаспределенияЗатрат,
	|	Затраты.АналитикаВидаУчета,
	|	Затраты.АналитикаУчетаЗатрат,
	|	Затраты.АналитикаУчетаПартий,
	|	Затраты.АналитикаРаспределенияЗатрат
    |
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаПоРаспределяемымЗатратам()
		// Функция формирует текст запроса по регистру "Учет затрат".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоРаспределяемымЗатратамСводно(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Затраты.СпособРаспределенияЗатрат, ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка)) КАК СпособРаспределенияЗатрат,
	|	ЕСТЬNULL(Затраты.ХарактерРаспределенияЗатрат, ЗНАЧЕНИЕ(Перечисление.ХарактерРаспределенияЗатрат.ПустаяСсылка)) КАК ХарактерРаспределенияЗатрат,
	|	ЕСТЬNULL(Затраты.РаспределятьНаПодчиненныеПодразделения, Ложь) КАК РаспределятьНаПодчиненныеПодразделения,
	|
	|	РегистрКорАналитикаУчетаЗатрат.Ссылка КАК КорАналитикаУчетаЗатрат,
	|
	|	Затраты.АналитикаВидаУчета,
	|	ВЫБОР КОГДА Затраты.ДетализацияПоФиксированнойСтатьеЗатрат ТОГДА
	|		РегистрКорАналитикаУчетаЗатрат.Ссылка
	|	ИНАЧЕ
	|		Затраты.АналитикаУчетаЗатрат
	|	КОНЕЦ КАК АналитикаУчетаЗатрат,
	|	Затраты.АналитикаУчетаПартий,
	|	Затраты.АналитикаРаспределенияЗатрат,
	|	
	|	РегистрАналитикаВидаУчета.Подразделение,
	|
	|	Затраты.ДетализацияПоФиксированнойСтатьеЗатрат,
	|	Затраты.СтатьяЗатрат,
	|	Затраты.ХарактерЗатрат,
	|	Затраты.СтатьяЗатрат.СтатусМатериальныхЗатрат КАК СтатусМатериальныхЗатрат,
	|	Затраты.СтатьяЗатрат.ВидРасходовНУ КАК ВидРасходовНУ,
	|	Затраты.ТранспортныеРасходы,
	|	Затраты.Затрата,
	|	Затраты.ХарактеристикаЗатраты,
	|	Затраты.СерияЗатраты,
	|	Затраты.РаспределениеПоКоличеству,
	|
	|	РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа,
	|	РегистрАналитикаРаспределенияЗатрат.Продукция,
	|	РегистрАналитикаРаспределенияЗатрат.ХарактеристикаПродукции,
	|	РегистрАналитикаРаспределенияЗатрат.СерияПродукции,
	|	РегистрАналитикаУчетаПартий.Заказ,
	|	
	|	//ДляУпрУчета РегистрАналитикаВидаУчета.Проект,
	|	
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчета,
	|	//ДляРеглУчета ЕСТЬNULL(СчетаУчетаЕНВД.ЕНВД, Ложь) КАК ЕНВД,
	|	//ДляРеглУчета ЕСТЬNULL(СчетаУчетаЕНВД.ПодлежитРаспределению, Ложь) КАК ПодлежитРаспределению,
	|
	|	//ДляРеглУчета СУММА(Затраты.ПостояннаяРазницаОстаток) КАК ПостояннаяРазницаОстаток,
	|	//ДляРеглУчета СУММА(Затраты.СтоимостьНУОстаток) КАК СтоимостьОстатокНУ,
	|	//ДляРеглУчета СУММА(Затраты.КоличествоНУОстаток) КАК КоличествоОстатокНУ,
	|	СУММА(Затраты.СтоимостьОстаток) КАК СтоимостьОстаток,
	|	СУММА(Затраты.КоличествоОстаток) КАК КоличествоОстаток
	|
	|ИЗ
	|	УчетЗатрат КАК Затраты
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		АналитикаВидаУчетаЗатраты КАК РегистрАналитикаВидаУчета
	|	ПО
	|		Затраты.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПартий КАК РегистрАналитикаУчетаПартий
	|	ПО
	|		Затраты.АналитикаУчетаПартий = РегистрАналитикаУчетаПартий.Ссылка
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрАналитикаРаспределенияЗатрат
	|	ПО
	|		Затраты.АналитикаРаспределенияЗатрат = РегистрАналитикаРаспределенияЗатрат.Ссылка
	|		
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаЗатрат КАК РегистрКорАналитикаУчетаЗатрат
	|	ПО
	|		Затраты.СпособРаспределенияЗатрат = РегистрКорАналитикаУчетаЗатрат.СпособРаспределенияЗатрат
	|		И Затраты.СтатьяЗатрат = РегистрКорАналитикаУчетаЗатрат.СтатьяЗатрат
	|		И Затраты.ХарактерЗатрат = РегистрКорАналитикаУчетаЗатрат.ХарактерЗатрат
	|		И Затраты.Затрата = РегистрКорАналитикаУчетаЗатрат.Затрата
	|		И Затраты.ХарактеристикаЗатраты = РегистрКорАналитикаУчетаЗатрат.ХарактеристикаЗатраты
	|		И Затраты.СерияЗатраты = РегистрКорАналитикаУчетаЗатрат.СерияЗатраты
	|		И Затраты.ХарактерЗатрат = РегистрКорАналитикаУчетаЗатрат.ХарактерЗатрат
	|			
	|	//ДляБухУчета	ЛЕВОЕ СОЕДИНЕНИЕ (												
	|	//ДляБухУчета		ВЫБРАТЬ
	|	//ДляБухУчета			СчетаУчетаЕНВД.Счет,
	|	//ДляБухУчета			СчетаУчетаЕНВД.ПодлежитРаспределению,
	|	//ДляБухУчета			(Не СчетаУчетаЕНВД.ПодлежитРаспределению) КАК ЕНВД
	|	//ДляБухУчета		ИЗ
	|	//ДляБухУчета			РегистрСведений.СчетаУчетаПоДеятельностиЕНВД КАК СчетаУчетаЕНВД
	|	//ДляБухУчета		) КАК СчетаУчетаЕНВД
	|	//ДляБухУчета	ПО
	|	//ДляБухУчета		РегистрАналитикаВидаУчета.СчетУчета = СчетаУчетаЕНВД.Счет
	|
	|СГРУППИРОВАТЬ ПО
	|	Затраты.СпособРаспределенияЗатрат,
	|	Затраты.ХарактерРаспределенияЗатрат,
	|	Затраты.РаспределятьНаПодчиненныеПодразделения,
	|
	|	Затраты.АналитикаВидаУчета,
	|	ВЫБОР КОГДА Затраты.ДетализацияПоФиксированнойСтатьеЗатрат ТОГДА
	|		РегистрКорАналитикаУчетаЗатрат.Ссылка
	|	ИНАЧЕ
	|		Затраты.АналитикаУчетаЗатрат
	|	КОНЕЦ,
	|	Затраты.АналитикаУчетаПартий,
	|	Затраты.АналитикаРаспределенияЗатрат,
	|	РегистрКорАналитикаУчетаЗатрат.Ссылка,
	|	
	|	РегистрАналитикаВидаУчета.Подразделение,
	|
	|	Затраты.ДетализацияПоФиксированнойСтатьеЗатрат,
	|	Затраты.СтатьяЗатрат,
	|	Затраты.ХарактерЗатрат,
	|	Затраты.Затрата,
	|	Затраты.ТранспортныеРасходы,
	|	Затраты.ХарактеристикаЗатраты,
	|	Затраты.СерияЗатраты,
	|	Затраты.РаспределениеПоКоличеству,
	|
	|	//ДляУпрУчета РегистрАналитикаВидаУчета.Проект,
	|	
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчета,
	|	//ДляРеглУчета ЕСТЬNULL(СчетаУчетаЕНВД.ЕНВД, Ложь),
	|	//ДляРеглУчета ЕСТЬNULL(СчетаУчетаЕНВД.ПодлежитРаспределению, Ложь),
	|
	|	РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа,
	|	РегистрАналитикаРаспределенияЗатрат.Продукция,
	|	РегистрАналитикаРаспределенияЗатрат.ХарактеристикаПродукции,
	|	РегистрАналитикаРаспределенияЗатрат.СерияПродукции,
	|	РегистрАналитикаУчетаПартий.Заказ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Затраты.СпособРаспределенияЗатрат,
	|	Затраты.АналитикаВидаУчета,
	|	ВЫБОР КОГДА Затраты.ДетализацияПоФиксированнойСтатьеЗатрат ТОГДА
	|		РегистрКорАналитикаУчетаЗатрат.Ссылка
	|	ИНАЧЕ
	|		Затраты.АналитикаУчетаЗатрат
	|	КОНЕЦ,
	|	Затраты.АналитикаУчетаПартий,
	|	Затраты.АналитикаРаспределенияЗатрат
    |
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаПоРаспределяемымЗатратамСводно()
		// Функция формирует запрос по регистру "Затраты".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
		//	ВидРасходовНУ - ПеречислениеСсылка.ВидыРасходовНУ - Вид расхода НУ для выборки остатков
		//	УсловиеВидРасходовНУ - ВидСравнения - Условие для вида расходов НУ
		//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
		//
		// Возвращаемое значение:
		//   Запрос – Запрос по регистру "Затраты".
		//

		public object СформироватьЗапросПоРаспределяемымЗатратам(/*
	СтруктураШапкиДокумента,
	ВидРасходовНУ,
	УсловиеВидРасходовНУ,
	МенеджерВременныхТаблиц
	*/)
		{
			if(true/*СтруктураШапкиДокумента.ДетализацияПоФиксированнойСтатьеЗатрат*/)
			{
				/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаПоРаспределяемымЗатратамСводно();*/
			}
			/*ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			return null;
		}
		// СформироватьЗапросПоРаспределяемымЗатратам()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ЗАПРОСОВ ПО БАЗЕ РАСПРЕДЕЛЕНИЯ
		// Функция формирует таблицу счетов списания затрат на расходы по продажам.
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
		//
		// Возвращаемое значение:
		//	ТаблицаЗначений - таблица счетов списания затрат
		//

		public object СформироватьТаблицуСчетовСписанияНаРасходыПоПродажам(/*
	СтруктураШапкиДокумента
	*/)
		{
			/*ТаблицаСчетов = Новый ТаблицаЗначений;*/
			/*Колонки = ТаблицаСчетов.Колонки;*/
			/*Колонки.Добавить("ДиректКостинг", Новый ОписаниеТипов("Булево"));*/
			/*Колонки.Добавить("ЕНВД", Новый ОписаниеТипов("Булево"));*/
			/*Колонки.Добавить("СчетУчета", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));*/
			/*Колонки.Добавить("СчетУчетаНУ", Новый ОписаниеТипов("ПланСчетовСсылка.Налоговый"));*/
			/*НоваяСтрока = ТаблицаСчетов.Добавить();*/
			/*НоваяСтрока.ДиректКостинг = Ложь;*/
			/*НоваяСтрока.ЕНВД = Ложь;*/
			/*НоваяСтрока = ТаблицаСчетов.Добавить();*/
			/*НоваяСтрока.ДиректКостинг = Ложь;*/
			/*НоваяСтрока.ЕНВД = Истина;*/
			if(true/*СтруктураШапкиДокумента.ДиректКостинг
	   И СтруктураШапкиДокумента.ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете*/)
			{
				/*НоваяСтрока = ТаблицаСчетов.Добавить();*/
				/*НоваяСтрока.ДиректКостинг = Истина;*/
				/*НоваяСтрока.ЕНВД = Ложь;*/
				/*НоваяСтрока = ТаблицаСчетов.Добавить();*/
				/*НоваяСтрока.ДиректКостинг = Истина;*/
				/*НоваяСтрока.ЕНВД = Истина;*/
			}
			return null;
		}
		// СформироватьТаблицуСчетовСписанияНаРасходыПоПродажам()
		// Функция формирует текст запроса по регистру сведений "База распределения затрат".
		//
		// Возвращаемое значение:
		//	Строка – Текст запроса
		//

		public object СформироватьТекстЗапросаБазаРаспределенияЗатратРасширеннаяАналитика(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Ложь КАК РаспределениеПоПродажам,
	|	Ложь КАК ДиректКостинг,
	|
	|	//ДляРеглУчета БазаРаспределенияЗатрат.Организация,
	|	БазаРаспределенияЗатрат.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
	|	БазаРаспределенияЗатрат.СпособРаспределенияЗатрат.РаспределятьНаПодчиненныеПодразделения КАК РаспределятьНаПодчиненныеПодразделения,
	|	БазаРаспределенияЗатрат.Подразделение,
	|	БазаРаспределенияЗатрат.НоменклатурнаяГруппа,
	|	БазаРаспределенияЗатрат.Заказ,
	|	БазаРаспределенияЗатрат.ПодразделениеНЗП,
	|	БазаРаспределенияЗатрат.НоменклатурнаяГруппаНЗП,
	|	БазаРаспределенияЗатрат.ЗаказНЗП,
	|	БазаРаспределенияЗатрат.ИндексБазыРаспределения,
	|	БазаРаспределенияЗатрат.ВидВыпуска,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Затраты) КАК РазделУчета,
	|	
	|	Неопределено КАК Продукция,
	|	Неопределено КАК ХарактеристикаПродукции,
	|	Неопределено КАК СерияПродукции,
	|	
	|	БазаРаспределенияЗатрат.АналитикаВидаУчета,
	|	БазаРаспределенияЗатрат.АналитикаРаспределенияЗатрат,
	|	БазаРаспределенияЗатрат.АналитикаУчетаПартий,
	|
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчета,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчетаНУ,
	|	//ДляРеглУчета ЕСТЬNULL(СчетаУчетаЕНВД.ЕНВД, Ложь) КАК ЕНВД,
	|
	|	//ДляНалУчета 	ВЫБОР КОГДА БазаРаспределенияНаПодчиненные.БазаПриходНУ ЕСТЬ NULL ИЛИ БазаРаспределенияНаПодчиненные.БазаПриходНУ = 0 ТОГДА
	|	//ДляНалУчета 		БазаРаспределенияЗатрат.БазаПриходНУ
	|	//ДляНалУчета 	ИНАЧЕ
	|	//ДляНалУчета 		(БазаРаспределенияЗатрат.БазаПриходНУ /
	|	//ДляНалУчета 		ВЫБОР КОГДА БазаРаспределенияЗатратВсего.БазаПриходНУ ЕСТЬ NULL ИЛИ БазаРаспределенияЗатратВсего.БазаПриходНУ = 0 ТОГДА
	|	//ДляНалУчета 			1
	|	//ДляНалУчета 		ИНАЧЕ
	|	//ДляНалУчета 			БазаРаспределенияЗатратВсего.БазаПриходНУ
	|	//ДляНалУчета 		КОНЕЦ)
	|	//ДляНалУчета 	КОНЕЦ КАК БазаПриходНУ,
	|
	|	//ДляНалУчета 	ВЫБОР КОГДА БазаРаспределенияНаПодчиненные.БазаПриходНУ ЕСТЬ NULL ИЛИ БазаРаспределенияНаПодчиненные.БазаПриходНУ = 0 ТОГДА
	|	//ДляНалУчета 		1
	|	//ДляНалУчета 	ИНАЧЕ
	|	//ДляНалУчета 		(БазаРаспределенияНаПодчиненные.БазаПриходНУ /
	|	//ДляНалУчета 		ВЫБОР КОГДА БазаРаспределенияНаПодчиненныеВсего.БазаПриходНУ ЕСТЬ NULL ИЛИ БазаРаспределенияНаПодчиненныеВсего.БазаПриходНУ = 0 ТОГДА
	|	//ДляНалУчета 			1
	|	//ДляНалУчета 		ИНАЧЕ
	|	//ДляНалУчета 			БазаРаспределенияНаПодчиненныеВсего.БазаПриходНУ
	|	//ДляНалУчета 		КОНЕЦ)
	|	//ДляНалУчета 	КОНЕЦ КАК БазаНаПодчиненныеНУ,
	|
	|	//ДляНалУчета	0 КАК БазаНУ,
	|	//ДляНалУчета	БазаРаспределенияЗатрат.БазаОстатокНЗПНУ,
	|
	|	ВЫБОР КОГДА БазаРаспределенияНаПодчиненные.БазаПриход ЕСТЬ NULL ИЛИ БазаРаспределенияНаПодчиненные.БазаПриход = 0 ТОГДА
	|		БазаРаспределенияЗатрат.БазаПриход
	|	ИНАЧЕ
	|		(БазаРаспределенияЗатрат.БазаПриход /
	|		ВЫБОР КОГДА БазаРаспределенияЗатратВсего.БазаПриход ЕСТЬ NULL ИЛИ БазаРаспределенияЗатратВсего.БазаПриход = 0 ТОГДА
	|			1
	|		ИНАЧЕ
	|			БазаРаспределенияЗатратВсего.БазаПриход
	|		КОНЕЦ)
	|	КОНЕЦ КАК БазаПриход,
	|
	|	ВЫБОР КОГДА БазаРаспределенияНаПодчиненные.БазаПриход ЕСТЬ NULL ИЛИ БазаРаспределенияНаПодчиненные.БазаПриход = 0 ТОГДА
	|		1
	|	ИНАЧЕ
	|		(БазаРаспределенияНаПодчиненные.БазаПриход /
	|		ВЫБОР КОГДА БазаРаспределенияНаПодчиненныеВсего.БазаПриход ЕСТЬ NULL ИЛИ БазаРаспределенияНаПодчиненныеВсего.БазаПриход = 0 ТОГДА
	|			1
	|		ИНАЧЕ
	|			БазаРаспределенияНаПодчиненныеВсего.БазаПриход
	|		КОНЕЦ)
	|	КОНЕЦ КАК БазаНаПодчиненные,
	|
	|	0 КАК База,
	|	БазаРаспределенияЗатрат.БазаОстатокНЗП
	|
	|ПОМЕСТИТЬ БазаРаспределенияЗатрат
	|ИЗ
	|	РегистрСведений.БазаРаспределенияЗатрат%СуффиксУчета% КАК БазаРаспределенияЗатрат
	|			
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|	ПО
	|		БазаРаспределенияЗатрат.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрАналитикаРаспределенияЗатрат
	|	ПО
	|		БазаРаспределенияЗатрат.АналитикаРаспределенияЗатрат = РегистрАналитикаРаспределенияЗатрат.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			БазаРаспределенияЗатрат.СпособРаспределенияЗатрат,
	|			БазаРаспределенияЗатрат.Подразделение,
	|			//ДляРеглУчета БазаРаспределенияЗатрат.СчетУчета,
	|			//ДляНалУчета СУММА(БазаРаспределенияЗатрат.БазаПриходНУ) КАК БазаПриходНУ,
	|			СУММА(БазаРаспределенияЗатрат.БазаПриход) КАК БазаПриход
	|		ИЗ
	|			РегистрСведений.БазаРаспределенияЗатрат%СуффиксУчета% КАК БазаРаспределенияЗатрат
	|		ГДЕ
	|			БазаРаспределенияЗатрат.Период МЕЖДУ &НачДата И &КонДата
	|			И БазаРаспределенияЗатрат.РаспределениеКосвенныхЗатрат = &РаспределениеКосвенныхЗатрат
	|			И БазаРаспределенияЗатрат.РасчетСебестоимостиВыпуска
	|			//ДляРеглУчета И БазаРаспределенияЗатрат.Организация = &Организация
	|
	|		СГРУППИРОВАТЬ ПО
	|			БазаРаспределенияЗатрат.СпособРаспределенияЗатрат,
	|			//ДляРеглУчета БазаРаспределенияЗатрат.СчетУчета,
	|			БазаРаспределенияЗатрат.Подразделение
	|
	|		) КАК БазаРаспределенияЗатратВсего
	|	ПО
	|		БазаРаспределенияЗатрат.СпособРаспределенияЗатрат = БазаРаспределенияЗатратВсего.СпособРаспределенияЗатрат
	|		И БазаРаспределенияЗатрат.Подразделение = БазаРаспределенияЗатратВсего.Подразделение			
	|		И БазаРаспределенияЗатрат.СпособРаспределенияЗатрат.РаспределятьНаПодчиненныеПодразделения
	|		//ДляРеглУчета И БазаРаспределенияЗатрат.СчетУчета = БазаРаспределенияЗатратВсего.СчетУчета
	|			
	|	ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			БазаРаспределенияЗатрат.СпособРаспределенияЗатрат,
	|			БазаРаспределенияЗатрат.Подразделение,
	|			//ДляРеглУчета БазаРаспределенияЗатрат.СчетУчета,
	|			//ДляНалУчета СУММА(БазаРаспределенияЗатрат.БазаПриходНУ) КАК БазаПриходНУ,
	|			СУММА(БазаРаспределенияЗатрат.БазаПриход) КАК БазаПриход
	|		ИЗ
	|			РегистрСведений.БазаРаспределенияЗатрат%СуффиксУчета% КАК БазаРаспределенияЗатрат
	|		ГДЕ
	|			БазаРаспределенияЗатрат.Период МЕЖДУ &НачДата И &КонДата
	|			И БазаРаспределенияЗатрат.РаспределениеКосвенныхЗатрат = &РаспределениеКосвенныхЗатрат
	|			И БазаРаспределенияЗатрат.РасчетСебестоимостиВыпуска
	|			//ДляРеглУчета И БазаРаспределенияЗатрат.Организация = &Организация
	|
	|		СГРУППИРОВАТЬ ПО
	|			БазаРаспределенияЗатрат.СпособРаспределенияЗатрат,
	|			//ДляРеглУчета БазаРаспределенияЗатрат.СчетУчета,
	|			БазаРаспределенияЗатрат.Подразделение
	|
	|		) КАК БазаРаспределенияНаПодчиненные
	|	ПО
	|		БазаРаспределенияЗатрат.СпособРаспределенияЗатрат.СпособРаспределенияЗатратПоПодразделениям 
	|					= БазаРаспределенияНаПодчиненные.СпособРаспределенияЗатрат
	|		И БазаРаспределенияЗатрат.СпособРаспределенияЗатрат.РаспределятьНаПодчиненныеПодразделения
	|		И БазаРаспределенияЗатрат.Подразделение = БазаРаспределенияНаПодчиненные.Подразделение
	|		//ДляРеглУчета И БазаРаспределенияЗатрат.СчетУчета 	= БазаРаспределенияНаПодчиненные.СчетУчета
	|				
	|	ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			БазаРаспределенияЗатрат.СпособРаспределенияЗатрат,
	|			//ДляНалУчета СУММА(БазаРаспределенияЗатрат.БазаПриходНУ) КАК БазаПриходНУ,
	|			СУММА(БазаРаспределенияЗатрат.БазаПриход) КАК БазаПриход
	|		ИЗ
	|			РегистрСведений.БазаРаспределенияЗатрат%СуффиксУчета% КАК БазаРаспределенияЗатрат
	|		ГДЕ
	|			БазаРаспределенияЗатрат.Период МЕЖДУ &НачДата И &КонДата
	|			И БазаРаспределенияЗатрат.РаспределениеКосвенныхЗатрат = &РаспределениеКосвенныхЗатрат
	|			И БазаРаспределенияЗатрат.РасчетСебестоимостиВыпуска
	|			//ДляРеглУчета И БазаРаспределенияЗатрат.Организация = &Организация
	|
	|		СГРУППИРОВАТЬ ПО
	|			БазаРаспределенияЗатрат.СпособРаспределенияЗатрат
	|
	|		) КАК БазаРаспределенияНаПодчиненныеВсего
	|	ПО
	|		БазаРаспределенияЗатрат.СпособРаспределенияЗатрат.СпособРаспределенияЗатратПоПодразделениям 
	|					= БазаРаспределенияНаПодчиненныеВсего.СпособРаспределенияЗатрат
	|		И БазаРаспределенияЗатрат.СпособРаспределенияЗатрат.РаспределятьНаПодчиненныеПодразделения
	|		
	|				
	|	//ДляБухУчета	ЛЕВОЕ СОЕДИНЕНИЕ (												
	|	//ДляБухУчета		ВЫБРАТЬ
	|	//ДляБухУчета			СчетаУчетаЕНВД.Счет,
	|	//ДляБухУчета			Истина КАК ЕНВД
	|	//ДляБухУчета		ИЗ
	|	//ДляБухУчета			РегистрСведений.СчетаУчетаПоДеятельностиЕНВД КАК СчетаУчетаЕНВД
	|	//ДляБухУчета		ГДЕ
	|	//ДляБухУчета			Не СчетаУчетаЕНВД.ПодлежитРаспределению
	|	//ДляБухУчета		) КАК СчетаУчетаЕНВД
	|	//ДляБухУчета	ПО
	|	//ДляБухУчета		БазаРаспределенияЗатрат.СчетУчета = СчетаУчетаЕНВД.Счет
	|			
	|ГДЕ
	|	БазаРаспределенияЗатрат.Период МЕЖДУ &НачДата И &КонДата
	|	И БазаРаспределенияЗатрат.РаспределениеКосвенныхЗатрат = &РаспределениеКосвенныхЗатрат
	|	И БазаРаспределенияЗатрат.РасчетСебестоимостиВыпуска
	|	И (БазаРаспределенияЗатрат.БазаПриход <> 0
	|		ИЛИ БазаРаспределенияЗатрат.БазаОстатокНЗП <> 0)
	|	И (БазаРаспределенияЗатрат.Продукция = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		ИЛИ БазаРаспределенияЗатрат.СпособРаспределенияЗатрат.РаспределятьНаПодчиненныеПодразделения)
	|	
	|	//ДляРеглУчета И БазаРаспределенияЗатрат.Организация = &Организация
	|	//ДляБухУчета И Не БазаРаспределенияЗатрат.СчетУчета.Забалансовый
	|				
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаБазаРаспределенияЗатратРасширеннаяАналитика()
		// Функция формирует текст запроса по регистру сведений "База распределения затрат".
		//
		// Возвращаемое значение:
		//	Строка – Текст запроса
		//

		public object СформироватьТекстЗапросаБазаРаспределенияНаВыпускРасширеннаяАналитика(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Ложь КАК РаспределениеПоПродажам,
	|	Ложь КАК ДиректКостинг,
	|
	|	//ДляРеглУчета ЕСТЬNULL(БазаРаспределенияЗатрат.Организация,
	|	//ДляРеглУчета 	БазаРаспределенияНаВыпуск.Организация) КАК Организация,
	|	
	|	ЕСТЬNULL(БазаРаспределенияЗатрат.СпособРаспределенияЗатрат,
	|		БазаРаспределенияНаВыпуск.СпособРаспределенияЗатрат) КАК СпособРаспределенияЗатрат,
	|	
	|	ЕСТЬNULL(БазаРаспределенияЗатрат.РаспределятьНаПодчиненныеПодразделения,
	|		Ложь) КАК РаспределятьНаПодчиненныеПодразделения,
	|	
	|	ЕСТЬNULL(БазаРаспределенияЗатрат.Подразделение,
	|		БазаРаспределенияНаВыпуск.Подразделение) КАК Подразделение,
	|	ЕСТЬNULL(БазаРаспределенияЗатрат.НоменклатурнаяГруппа,
	|		БазаРаспределенияНаВыпуск.НоменклатурнаяГруппа) КАК НоменклатурнаяГруппа,
	|	ЕСТЬNULL(БазаРаспределенияЗатрат.Заказ,
	|		БазаРаспределенияНаВыпуск.Заказ) КАК Заказ,
	|	
	|	ЕСТЬNULL(БазаРаспределенияЗатрат.ПодразделениеНЗП,
	|		БазаРаспределенияНаВыпуск.ПодразделениеНЗП) КАК ПодразделениеНЗП,
	|	ЕСТЬNULL(БазаРаспределенияЗатрат.НоменклатурнаяГруппаНЗП,
	|		БазаРаспределенияНаВыпуск.НоменклатурнаяГруппаНЗП) КАК НоменклатурнаяГруппаНЗП,
	|	ЕСТЬNULL(БазаРаспределенияЗатрат.ЗаказНЗП,
	|		БазаРаспределенияНаВыпуск.ЗаказНЗП) КАК ЗаказНЗП,
	|
	|	ЕСТЬNULL(БазаРаспределенияЗатрат.ИндексБазыРаспределения,
	|		-1) КАК ИндексБазыРаспределения,
	|
	|	БазаРаспределенияНаВыпуск.ВидВыпуска,
	|	
	|	ВЫБОР КОГДА БазаРаспределенияНаВыпуск.ВидВыпуска = ЗНАЧЕНИЕ(Перечисление.ВидыВыпуска.Наработка) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчета.ЗатратыПоНаработке)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчета.ЗатратыНаВыпуск)
	|	КОНЕЦ КАК РазделУчета,
	|	
	|	БазаРаспределенияНаВыпуск.Продукция,
	|	БазаРаспределенияНаВыпуск.ХарактеристикаПродукции,
	|	БазаРаспределенияНаВыпуск.СерияПродукции,
	|	
	|	БазаРаспределенияНаВыпуск.АналитикаВидаУчета,
	|	БазаРаспределенияНаВыпуск.АналитикаРаспределенияЗатрат,
	|	БазаРаспределенияНаВыпуск.АналитикаУчетаПартий,
	|
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчета,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчетаНУ,
	|	//ДляРеглУчета ЕСТЬNULL(СчетаУчетаЕНВД.ЕНВД, Ложь) КАК ЕНВД,
	|
	|	//ДляНалУчета ВЫБОР КОГДА БазаРаспределенияЗатрат.БазаПриход ЕСТЬ NULL ТОГДА
	|	//ДляНалУчета 	БазаРаспределенияНаВыпуск.БазаНУ
	|	//ДляНалУчета ИНАЧЕ
	|	//ДляНалУчета 	0
	|	//ДляНалУчета КОНЕЦ КАК БазаПриходНУ,
	|	//ДляНалУчета 0 КАК БазаНаПодчиненныеНУ,
	|	//ДляНалУчета БазаРаспределенияЗатрат.БазаНУ КАК БазаНУ,
	|	//ДляНалУчета 0 КАК БазаОстатокНЗПНУ,
	|	
	|	ВЫБОР КОГДА БазаРаспределенияЗатрат.БазаПриход ЕСТЬ NULL ТОГДА
	|		БазаРаспределенияНаВыпуск.База
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК БазаПриход,
	|	0 КАК БазаНаПодчиненные,
	|	БазаРаспределенияНаВыпуск.База КАК База,
	|	0 КАК БазаОстатокНЗП
	|
	|ПОМЕСТИТЬ БазаРаспределенияНаВыпуск
	|ИЗ
	|	РегистрСведений.БазаРаспределенияЗатрат%СуффиксУчета% КАК БазаРаспределенияНаВыпуск
	|			
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|	ПО
	|		БазаРаспределенияНаВыпуск.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		БазаРаспределенияЗатрат КАК БазаРаспределенияЗатрат
	|	ПО
	|		БазаРаспределенияЗатрат.СпособРаспределенияЗатрат = БазаРаспределенияНаВыпуск.СпособРаспределенияЗатрат
	|		И БазаРаспределенияЗатрат.ПодразделениеНЗП = БазаРаспределенияНаВыпуск.ПодразделениеНЗП
	|		И (БазаРаспределенияЗатрат.НоменклатурнаяГруппаНЗП = БазаРаспределенияНаВыпуск.НоменклатурнаяГруппаНЗП
	|			ИЛИ БазаРаспределенияЗатрат.НоменклатурнаяГруппаНЗП = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка))
	|		И (БазаРаспределенияЗатрат.ЗаказНЗП = БазаРаспределенияНаВыпуск.ЗаказНЗП
	|			ИЛИ БазаРаспределенияЗатрат.ЗаказНЗП = Неопределено)
	|		//ДляРеглУчета И РегистрАналитикаВидаУчета.СчетУчета = БазаРаспределенияЗатрат.СчетУчета
	|		//ДляРеглУчета И РегистрАналитикаВидаУчета.СчетУчетаНУ = БазаРаспределенияЗатрат.СчетУчетаНУ
	|
	|			
	|	//ДляБухУчета	ЛЕВОЕ СОЕДИНЕНИЕ (												
	|	//ДляБухУчета		ВЫБРАТЬ
	|	//ДляБухУчета			СчетаУчетаЕНВД.Счет,
	|	//ДляБухУчета			Истина КАК ЕНВД
	|	//ДляБухУчета		ИЗ
	|	//ДляБухУчета			РегистрСведений.СчетаУчетаПоДеятельностиЕНВД КАК СчетаУчетаЕНВД
	|	//ДляБухУчета		ГДЕ
	|	//ДляБухУчета			Не СчетаУчетаЕНВД.ПодлежитРаспределению
	|	//ДляБухУчета		) КАК СчетаУчетаЕНВД
	|	//ДляБухУчета	ПО
	|	//ДляБухУчета		БазаРаспределенияНаВыпуск.СчетУчета = СчетаУчетаЕНВД.Счет
	|			
	|	//ДляРеглУчета И БазаРаспределенияНаВыпуск.Организация = &Организация
	|	//ДляБухУчета И Не БазаРаспределенияНаВыпуск.СчетУчета.Забалансовый
	|	
	|ГДЕ
	|	БазаРаспределенияНаВыпуск.Период МЕЖДУ &НачДата И &КонДата
	|	И БазаРаспределенияНаВыпуск.РаспределениеКосвенныхЗатрат = &РаспределениеКосвенныхЗатрат
	|	И БазаРаспределенияНаВыпуск.РасчетСебестоимостиВыпуска
	|	И БазаРаспределенияНаВыпуск.База <> 0	
	|	//ДляРеглУчета И БазаРаспределенияНаВыпуск.Организация = &Организация
	|			
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаБазаРаспределенияНаВыпускРасширеннаяАналитика()
		// Функция формирует текст запроса по базе распределения на расходы по продажам.
		//
		// Возвращаемое значение:
		//	Строка – Текст запроса
		//

		public object СформироватьТекстЗапросаБазаРаспределенияНаРасходыПоПродажам(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ТаблицаСчетовСписания
	|ИЗ
	|	&ТаблицаСчетовСписания КАК ТаблицаСчетовСписания
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	СчетаУчетаЕНВД.Счет,
	|	Истина КАК ЕНВД
	|
	|ПОМЕСТИТЬ СчетаУчетаЕНВД
	|ИЗ
	|	РегистрСведений.СчетаУчетаПоДеятельностиЕНВД КАК СчетаУчетаЕНВД
	|ГДЕ
	|	Не СчетаУчетаЕНВД.ПодлежитРаспределению
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|	
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Счет			КАК Счет,
	|	ХозрасчетныйОбороты.Субконто1 		КАК Субконто1,
	|	ХозрасчетныйОбороты.СуммаОборот 	КАК СуммаОборот
	|	
	|ПОМЕСТИТЬ ХозрасчетныйОбороты
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачГраница, &КонГраница, Период, 
	|		Счет В ИЕРАРХИИ (&МассивСчетовБазыДиректКостинг)
	|			ИЛИ Счет В ИЕРАРХИИ (&МассивСчетовБазы), 
	|		, 
	|		Организация = &Организация
	|	) КАК ХозрасчетныйОбороты
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Ложь							 			КАК ДиректКостинг,
	|	ЕСТЬNULL(СчетаУчетаЕНВД.ЕНВД, Ложь) 		КАК ЕНВД,
	|	ХозрасчетныйОбороты.Субконто1 				КАК НоменклатурнаяГруппа,
	|	СУММА(-(ХозрасчетныйОбороты.СуммаОборот)) 	КАК База
	|
	|ПОМЕСТИТЬ ТаблицаБазыРаспределения 
	|ИЗ
	|	ХозрасчетныйОбороты КАК ХозрасчетныйОбороты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СчетаУчетаЕНВД КАК СчетаУчетаЕНВД
	|	ПО
	|		ХозрасчетныйОбороты.Счет = СчетаУчетаЕНВД.Счет
	|	
	|ГДЕ
	|	ХозрасчетныйОбороты.Счет В ИЕРАРХИИ (&МассивСчетовБазы)
	|	
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(СчетаУчетаЕНВД.ЕНВД, Ложь),
	|	ХозрасчетныйОбороты.Субконто1
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	Истина							 			КАК ДиректКостинг,
	|	ЕСТЬNULL(СчетаУчетаЕНВД.ЕНВД, Ложь) 		КАК ЕНВД,
	|	ХозрасчетныйОбороты.Субконто1 				КАК НоменклатурнаяГруппа,
	|	СУММА(-(ХозрасчетныйОбороты.СуммаОборот)) 	КАК База
	|	
	|ИЗ
	|	ХозрасчетныйОбороты КАК ХозрасчетныйОбороты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СчетаУчетаЕНВД КАК СчетаУчетаЕНВД
	|	ПО
	|		ХозрасчетныйОбороты.Счет = СчетаУчетаЕНВД.Счет
	|	
	|ГДЕ
	|	ХозрасчетныйОбороты.Счет В ИЕРАРХИИ (&МассивСчетовБазыДиректКостинг)
	|	И &ДиректКостинг
	|	И НЕ &БазаРаспределенияСебестоимость
	|	
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(СчетаУчетаЕНВД.ЕНВД, Ложь),
	|	ХозрасчетныйОбороты.Субконто1
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	Истина КАК ДиректКостинг,
	|	ЕСТЬNULL(СчетаУчетаЕНВД.ЕНВД, Ложь) КАК ЕНВД,
	|	РегистрКорАналитикаУчетаПрочихЗатрат.Субконто1 КАК НоменклатурнаяГруппа,
	|	СУММА(УчетЗатрат.Стоимость) КАК База
	|
	|ИЗ
	|	РегистрНакопления.УчетЗатратРегл КАК УчетЗатрат
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|	ПО
	|		УчетЗатрат.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|		И РегистрАналитикаВидаУчета.Организация = &Организация
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПрочихЗатрат КАК РегистрКорАналитикаУчетаПрочихЗатрат
	|	ПО
	|		УчетЗатрат.КорАналитикаВидаУчета = РегистрКорАналитикаУчетаПрочихЗатрат.Ссылка
	|		И РегистрКорАналитикаУчетаПрочихЗатрат.СчетУчета В ИЕРАРХИИ (&МассивСчетовБазыДиректКостинг)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СчетаУчетаЕНВД КАК СчетаУчетаЕНВД
	|	ПО
	|		РегистрКорАналитикаУчетаПрочихЗатрат.СчетУчета = СчетаУчетаЕНВД.Счет
	|	
	|ГДЕ
	|	&БазаРаспределенияСебестоимость
	|	И УчетЗатрат.Период МЕЖДУ &НачДата И &КонДата
	|	И УчетЗатрат.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(СчетаУчетаЕНВД.ЕНВД, Ложь),
	|	РегистрКорАналитикаУчетаПрочихЗатрат.Субконто1
	|
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Истина КАК РасходыНаПродажу,
	|	БазаРаспределенияПоВыручке.ДиректКостинг,
	|	
	|	//ДляРеглУчета &Организация КАК Организация,
	|	Неопределено КАК СпособРаспределенияЗатрат,
	|	Ложь КАК РаспределятьНаПодчиненныеПодразделения,
	|	Неопределено КАК Подразделение,
	|	БазаРаспределенияПоВыручке.НоменклатурнаяГруппа,
	|	Неопределено КАК Заказ,
	|	Неопределено КАК ПодразделениеНЗП,
	|	БазаРаспределенияПоВыручке.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаНЗП,
	|	Неопределено КАК ЗаказНЗП,
	|	
	|	-10 КАК ИндексБазыРаспределения,
	|
	|	Неопределено КАК ВидВыпуска,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчета.ПустаяСсылка) КАК РазделУчета,
	|	
	|	Неопределено КАК Продукция,
	|	Неопределено КАК ХарактеристикаПродукции,
	|	Неопределено КАК СерияПродукции,
	|	
	|	Неопределено КАК АналитикаВидаУчета,
	|	Неопределено КАК АналитикаРаспределенияЗатрат,
	|	Неопределено КАК АналитикаУчетаПартий,
	|
	|	ТаблицаСчетов.СчетУчета,
	|	ТаблицаСчетов.СчетУчетаНУ,
	|	БазаРаспределенияПоВыручке.ЕНВД,
	|
	|	//ДляНалУчета СУММА(БазаРаспределенияПоВыручке.База) КАК БазаПриходНУ,
	|	//ДляНалУчета 1 КАК БазаНаПодчиненныеНУ,
	|	//ДляНалУчета СУММА(БазаРаспределенияПоВыручке.База) КАК БазаНУ,
	|	//ДляНалУчета 0 КАК БазаОстатокНЗПНУ,
	|	
	|	СУММА(БазаРаспределенияПоВыручке.База) КАК БазаПриход,
	|	1 КАК БазаНаПодчиненные,
	|	СУММА(БазаРаспределенияПоВыручке.База) КАК База,
	|	0 КАК БазаОстатокНЗП
	|
	|ПОМЕСТИТЬ БазаРаспределенияПоВыручке
	|ИЗ
	|	ТаблицаБазыРаспределения КАК БазаРаспределенияПоВыручке
	|			
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаСчетовСписания КАК ТаблицаСчетов
	|	ПО
	|		БазаРаспределенияПоВыручке.ДиректКостинг = ТаблицаСчетов.ДиректКостинг
	|		И БазаРаспределенияПоВыручке.ЕНВД = ТаблицаСчетов.ЕНВД
	|	
	|СГРУППИРОВАТЬ ПО
	|	БазаРаспределенияПоВыручке.ДиректКостинг,
	|	БазаРаспределенияПоВыручке.ЕНВД,
	|	БазаРаспределенияПоВыручке.НоменклатурнаяГруппа,
	|	ТаблицаСчетов.СчетУчета,
	|	ТаблицаСчетов.СчетУчетаНУ
	|	
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаСчетовСписания
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаБазыРаспределения
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СчетаУчетаЕНВД
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ХозрасчетныйОбороты";*/
			return null;
		}
		// СформироватьТекстЗапросаБазаРаспределенияНаРасходыПоПродажам()
		// Процедура формирования временной таблицы "БазаРаспределенияЗатрат" и "БазаРаспределенияНаВыпуск".
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
		//

		public void СформироватьВременныеТаблицыПоБазеРаспределенияЗатрат(/*
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	*/)
		{
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаБазаРаспределенияЗатратРасширеннаяАналитика();*/
			/*ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями,
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.УстановитьПараметр("НачДата", СтруктураШапкиДокумента.мНачДата);*/
			/*Запрос.УстановитьПараметр("КонДата", СтруктураШапкиДокумента.мКонДата);*/
			/*Запрос.УстановитьПараметр("КонГраница", СтруктураШапкиДокумента.мКонГраница);*/
			/*Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("РаспределениеКосвенныхЗатрат", Истина);*/
			/*Запрос.Выполнить();*/
			/*РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		"БазаРаспределенияЗатрат"
	);*/
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаБазаРаспределенияНаВыпускРасширеннаяАналитика();*/
			/*ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями,
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.Выполнить();*/
			/*РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		"БазаРаспределенияНаВыпуск"
	);*/
			if(true/*СтруктураШапкиДокумента.ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете*/)
			{
				/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаБазаРаспределенияНаРасходыПоПродажам();*/
				/*ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
			ТекстЗапросаСКомментариями,
			СтруктураШапкиДокумента.ВидОтраженияВУчете
		);*/
				/*Запрос.Текст = ТекстЗапроса;*/
				/*Запрос.УстановитьПараметр("НачДата", СтруктураШапкиДокумента.мНачДата);*/
				/*Запрос.УстановитьПараметр("КонДата", СтруктураШапкиДокумента.мКонДата);*/
				/*Запрос.УстановитьПараметр("НачГраница", СтруктураШапкиДокумента.мНачГраница);*/
				/*Запрос.УстановитьПараметр("КонГраница", СтруктураШапкиДокумента.мКонГраница);*/
				/*Запрос.УстановитьПараметр("ДиректКостинг", СтруктураШапкиДокумента.ДиректКостинг);*/
				/*МассивСчетовБазы = Новый Массив;*/
				/*МассивСчетовБазы.Добавить(ПланыСчетов.Хозрасчетный.Выручка);*/
				/*МассивСчетовБазы.Добавить(ПланыСчетов.Хозрасчетный.Продажи_НДС);*/
				/*МассивСчетовБазы.Добавить(ПланыСчетов.Хозрасчетный.Продажи_Акцизы);*/
				/*МассивСчетовБазы.Добавить(ПланыСчетов.Хозрасчетный.Продажи_ЭкспортныеПошлины);*/
				/*Запрос.УстановитьПараметр("МассивСчетовБазы", МассивСчетовБазы);*/
				/*ДиректКостингБазаРаспределения = СтруктураШапкиДокумента.УчетнаяПолитика.ДиректКостингБазаРаспределения;*/
				if(true/*ДиректКостингБазаРаспределения = Перечисления.ДиректКостингБазаРаспределения.Себестоимость*/)
				{
					/*МассивСчетовБазыДиректКостинг = Новый Массив;*/
					/*МассивСчетовБазыДиректКостинг.Добавить(ПланыСчетов.Хозрасчетный.СебестоимостьПродаж);*/
					/*Запрос.УстановитьПараметр("МассивСчетовБазыДиректКостинг", МассивСчетовБазыДиректКостинг);*/
					/*Запрос.УстановитьПараметр("БазаРаспределенияСебестоимость", Истина);*/
				}
				/*ТаблицаСчетовСписания = СформироватьТаблицуСчетовСписанияНаРасходыПоПродажам(СтруктураШапкиДокумента);*/
				/*Запрос.УстановитьПараметр("ТаблицаСчетовСписания", ТаблицаСчетовСписания);*/
				/*Запрос.Выполнить();*/
				/*РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
			СтруктураШапкиДокумента,
			МенеджерВременныхТаблиц,
			"БазаРаспределенияПоВыручке"
		);*/
			}
		}
		// СформироватьВременныеТаблицыПоБазеРаспределенияЗатрат()
		// Функция формирует запрос по временной таблице "База распределения затрат".
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
		//
		// Возвращаемое значение:
		//	Запрос - Запрос по временной таблице
		//

		public object СформироватьЗапросПоВременнойТаблицеБазаРаспределенияЗатрат(/*
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	*/)
		{
			/*ТекстЗапросаСКомментариями = "
	|ВЫБРАТЬ
	|	Затраты.ИндексАналитики,
	|	ЕСТЬNULL(БазаРаспределения.ИндексБазыРаспределения, Затраты.ИндексАналитики) КАК ИндексБазыРаспределения,
	|	ЕСТЬNULL(БазаРаспределения.РаспределениеПоПродажам, Ложь) КАК РаспределениеПоПродажам,
	|	Затраты.СписаниеЗатрат,
	|
	|	РегистрКорАналитикаВидаУчета.Ссылка КАК КорАналитикаВидаУчета,
	|	
	|	ЕСТЬNULL(БазаРаспределения.АналитикаВидаУчета, Неопределено) КАК АналитикаВидаУчета,
	|	ЕСТЬNULL(БазаРаспределения.АналитикаРаспределенияЗатрат, Неопределено) КАК АналитикаРаспределенияЗатрат,
	|	ЕСТЬNULL(БазаРаспределения.АналитикаУчетаПартий, Неопределено) КАК АналитикаУчетаПартий,
	|
	|	//ДляУпрУчета ЕСТЬNULL(РегистрАналитикаВидаУчета.Подразделение, Неопределено) КАК Подразделение,
	|	//ДляРеглУчета ЕСТЬNULL(РегистрАналитикаВидаУчета.ПодразделениеОрганизации, Неопределено) КАК Подразделение,
	|	//ДляРеглУчета ЕСТЬNULL(РегистрАналитикаВидаУчета.ПодразделениеОрганизации, Неопределено) КАК ПодразделениеОрганизации,
	|
	|	ЕСТЬNULL(БазаРаспределения.ВидВыпуска, Неопределено) КАК ВидВыпуска,
	|	ЕСТЬNULL(БазаРаспределения.РазделУчета, Неопределено) КАК РазделУчета,
	|	ЕСТЬNULL(РегистрАналитикаВидаУчета.Организация, Неопределено) КАК Организация,
	|	//ДляРеглУчета ЕСТЬNULL(РегистрАналитикаВидаУчета.СчетУчета, БазаРаспределения.СчетУчета) КАК СчетУчета,
	|	//ДляРеглУчета ЕСТЬNULL(РегистрАналитикаВидаУчета.СчетУчетаНУ, БазаРаспределения.СчетУчетаНУ) КАК СчетУчетаНУ,
	|
	|	ЕСТЬNULL(РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа, БазаРаспределения.НоменклатурнаяГруппа) КАК НоменклатурнаяГруппа,
	|	
	|	ВЫБОР КОГДА Затраты.СписаниеЗатрат ТОГДА
	|		1
	|	КОГДА Затраты.Продукция <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		И Затраты.Продукция <> Неопределено
	|	ТОГДА
	|       ЕСТЬNULL(БазаРаспределения.База, 0)
	|	ИНАЧЕ
	|		ЕСТЬNULL(БазаРаспределения.БазаПриход, 0)
	|	КОНЕЦ КАК БазаПриход,
	|	ЕСТЬNULL(БазаРаспределения.БазаНаПодчиненные, 1) КАК БазаНаПодчиненные,
	|
	|	ВЫБОР КОГДА Затраты.СписаниеЗатрат ТОГДА
	|		1
	|	КОГДА Затраты.ТранспортныеРасходы ТОГДА
	|		ЕСТЬNULL(БазаРаспределения.База, 0) * (1 - &КоэффициентСписанияТранспортныхРасходов)
	|	ИНАЧЕ
	|		ЕСТЬNULL(БазаРаспределения.База, 0)
	|	КОНЕЦ КАК База,
	|
	|	ВЫБОР КОГДА Затраты.ТранспортныеРасходы ТОГДА
	|		ЕСТЬNULL(БазаРаспределения.База, 0) * &КоэффициентСписанияТранспортныхРасходов
	|	ИНАЧЕ
	|		ЕСТЬNULL(БазаРаспределения.БазаОстатокНЗП, 0)
	|	КОНЕЦ КАК БазаОстатокНЗП
	|   
	|ИЗ
	|	ТаблицаАналитикиЗатрат КАК Затраты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ 
	|			*
	|	    ИЗ
	|			БазаРаспределенияЗатрат КАК БазаРаспределения
	|			
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ 
	|			*
	|	    ИЗ
	|			БазаРаспределенияНаВыпуск КАК БазаРаспределения
	|
	|		//ДляРеглУчета ОБЪЕДИНИТЬ ВСЕ
	|		//ДляРеглУчета 
	|		//ДляРеглУчета ВЫБРАТЬ 
	|		//ДляРеглУчета 	*
	|	    //ДляРеглУчета ИЗ
	|		//ДляРеглУчета 	БазаРаспределенияПоВыручке КАК БазаРаспределения
	|			
	|		) КАК БазаРаспределения
	|			
	|	ПО
	|		(Затраты.СпособРаспределенияЗатрат = БазаРаспределения.СпособРаспределенияЗатрат
	|		ИЛИ (Затраты.РаспределениеПоПродажам
	|			И Затраты.РаспределениеПоПродажам = БазаРаспределения.РаспределениеПоПродажам
	|			И Затраты.ДиректКостинг = БазаРаспределения.ДиректКостинг)
	|		)
	|		И Не Затраты.СписаниеЗатрат
	|		И (Затраты.Подразделение = БазаРаспределения.ПодразделениеНЗП
	|			ИЛИ Затраты.РаспределениеПоПродажам
	|			ИЛИ Затраты.Подразделение = Неопределено
	|			ИЛИ (Затраты.РаспределятьНаПодчиненныеПодразделения
	|				И (Затраты.Подразделение = БазаРаспределения.ПодразделениеНЗП.Родитель
	|					ИЛИ Затраты.Подразделение = БазаРаспределения.ПодразделениеНЗП.Родитель.Родитель
	|					ИЛИ Затраты.Подразделение = БазаРаспределения.ПодразделениеНЗП.Родитель.Родитель.Родитель)
	|				)
	|			)
	|		И (Затраты.НоменклатурнаяГруппа = БазаРаспределения.НоменклатурнаяГруппаНЗП
	|			ИЛИ Затраты.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	|			)
	|
	|		И (Затраты.Заказ = БазаРаспределения.ЗаказНЗП
	|			ИЛИ Затраты.Заказ = Неопределено
	|			ИЛИ Затраты.РаспределениеПоПродажам)
	|
	|		И (Затраты.Продукция = БазаРаспределения.Продукция
	|			ИЛИ Затраты.Продукция = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ИЛИ Затраты.РаспределениеПоПродажам)
	|
	|		И (Затраты.ХарактеристикаПродукции = БазаРаспределения.ХарактеристикаПродукции
	|			ИЛИ Затраты.ХарактеристикаПродукции = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ИЛИ Затраты.РаспределениеПоПродажам)
	|
	|		И (Затраты.СерияПродукции = БазаРаспределения.СерияПродукции
	|			ИЛИ Затраты.СерияПродукции = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			ИЛИ Затраты.РаспределениеПоПродажам)
	|
	|		//ДляРеглУчета И (Затраты.ПодлежитРаспределению
	|		//ДляРеглУчета 		ИЛИ (Не Затраты.ПодлежитРаспределению
	|		//ДляРеглУчета 		И Затраты.ЕНВД = БазаРаспределения.ЕНВД))
	|			
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|	ПО
	|		БазаРаспределения.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|			
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрАналитикаРаспределенияЗатрат
	|	ПО
	|		БазаРаспределения.АналитикаРаспределенияЗатрат = РегистрАналитикаРаспределенияЗатрат.Ссылка
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрКорАналитикаВидаУчета
	|	ПО
	|		БазаРаспределения.РазделУчета = РегистрКорАналитикаВидаУчета.РазделУчета
	|		И РегистрАналитикаВидаУчета.Организация = РегистрКорАналитикаВидаУчета.Организация
	|		И РегистрАналитикаВидаУчета.Подразделение = РегистрКорАналитикаВидаУчета.Подразделение
	|		И РегистрАналитикаВидаУчета.ПодразделениеОрганизации = РегистрКорАналитикаВидаУчета.ПодразделениеОрганизации
	|		И РегистрАналитикаВидаУчета.СчетУчета = РегистрКорАналитикаВидаУчета.СчетУчета
	|		И РегистрАналитикаВидаУчета.СчетУчетаНУ = РегистрКорАналитикаВидаУчета.СчетУчетаНУ
	|		И РегистрАналитикаВидаУчета.Проект = РегистрКорАналитикаВидаУчета.Проект
	|		И РегистрАналитикаВидаУчета.Склад = РегистрКорАналитикаВидаУчета.Склад
	|		
	|ГДЕ
	|	Не БазаРаспределения.ИндексБазыРаспределения ЕСТЬ NULL
	|	ИЛИ Затраты.СписаниеЗатрат
	|			
	|УПОРЯДОЧИТЬ ПО
	|	БазаПриход ВОЗР,
	|	База ВОЗР,
	|	БазаОстатокНЗП ВОЗР,
	|	БазаРаспределения.АналитикаВидаУчета,
	|	БазаРаспределения.АналитикаРаспределенияЗатрат,
	|	БазаРаспределения.АналитикаУчетаПартий
	|			
	|ИТОГИ
	|	СУММА(БазаПриход),
	|	СУММА(База),
	|	МАКСИМУМ(БазаНаПодчиненные),
	|	СУММА(БазаОстатокНЗП)
	|ПО
	|	Затраты.ИндексАналитики,
	|	БазаРаспределения.ИндексБазыРаспределения
	|";*/
			/*ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями,
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			if(true/*СтруктураШапкиДокумента.ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете*/)
			{
				/*КоэффициентСписанияТранспортныхРасходов = ПроцедурыРасчетаСебестоимостиВыпуска.ПолучитьКоэффициентСписанияТранспортныхРасходов(СтруктураШапкиДокумента);*/
			}
			/*Запрос.УстановитьПараметр("КоэффициентСписанияТранспортныхРасходов", КоэффициентСписанияТранспортныхРасходов);*/
			return null;
		}
		// СформироватьЗапросПоВременнойТаблицеБазаРаспределенияЗатрат()
		////////////////////////////////////////////////////////////////////////////////
		//	ПРОЦЕДУРЫ ФОРМИРОВАНИЯ НЕДОСТАЮЩИХ КЛЮЧЕЙ АНАЛИТИКИ
		// Процедура формирует ключи аналитики вида учета, которых еще нет.
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отражения в учете
		//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
		//

		public void СформироватьКлючиАналитикиВидаУчетаБазаРаспределения(/*
	СтруктураШапкиДокумента,
	ВидОтраженияВУчете,
	МенеджерВременныхТаблиц
	*/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	БазаРаспределения.РазделУчета,
	|	РегистрАналитикаВидаУчета.Организация,
	|	РегистрАналитикаВидаУчета.Подразделение,
	|	РегистрАналитикаВидаУчета.ПодразделениеОрганизации,
	|
	|	РегистрАналитикаВидаУчета.СчетУчета,
	|	РегистрАналитикаВидаУчета.СчетУчетаНУ
	|	
	|ИЗ (
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		РазделУчета,
	|		АналитикаВидаУчета
	|	ИЗ
	|		БазаРаспределенияЗатрат КАК БазаРаспределения
	|		
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		РазделУчета,
	|		АналитикаВидаУчета
	|	ИЗ
	|		БазаРаспределенияНаВыпуск КАК БазаРаспределения
	|		
	|	) КАК БазаРаспределения
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|	ПО
	|		БазаРаспределения.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрКорАналитикаВидаУчета
	|	ПО
	|		БазаРаспределения.РазделУчета = РегистрКорАналитикаВидаУчета.РазделУчета
	|		И РегистрАналитикаВидаУчета.Организация = РегистрКорАналитикаВидаУчета.Организация
	|		И РегистрАналитикаВидаУчета.Подразделение = РегистрКорАналитикаВидаУчета.Подразделение
	|		И РегистрАналитикаВидаУчета.ПодразделениеОрганизации = РегистрКорАналитикаВидаУчета.ПодразделениеОрганизации
	|		И РегистрАналитикаВидаУчета.СчетУчета = РегистрКорАналитикаВидаУчета.СчетУчета
	|		И РегистрАналитикаВидаУчета.СчетУчетаНУ = РегистрКорАналитикаВидаУчета.СчетУчетаНУ
	|		
	|ГДЕ
	|	РегистрКорАналитикаВидаУчета.Ссылка ЕСТЬ NULL
	|		
	|УПОРЯДОЧИТЬ ПО
	|	БазаРаспределения.РазделУчета,
	|	РегистрАналитикаВидаУчета.Организация,
	|	РегистрАналитикаВидаУчета.Подразделение,
	|	РегистрАналитикаВидаУчета.ПодразделениеОрганизации,
	|	РегистрАналитикаВидаУчета.СчетУчета,
	|	РегистрАналитикаВидаУчета.СчетУчетаНУ
	|";*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*СтруктураКлючиАналитики = Новый Структура;*/
			/*РезультатЗапроса = Запрос.Выполнить();*/
			/*Выборка = РезультатЗапроса.Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				/*АналитикаУчетаЗатрат = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
			СтруктураШапкиДокумента,
			Выборка,
			Перечисления.КлючиАналитики.АналитикаВидаУчета,
			ВидОтраженияВУчете,
			СтруктураКлючиАналитики
		);*/
			}
			/*;;*/
		}
		// СформироватьКлючиАналитикиВидаУчетаБазаРаспределения()
		// Процедура формирует ключи аналитики учета затрат, которых еще нет.
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отражения в учете
		//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
		//

		public void СформироватьКлючиАналитикиУчетаЗатрат(/*
	СтруктураШапкиДокумента,
	ВидОтраженияВУчете,
	МенеджерВременныхТаблиц
	*/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Затраты.СтатьяЗатрат,
	|	Затраты.Затрата,
	|	Затраты.ХарактеристикаЗатраты,
	|	Затраты.СерияЗатраты,
	|	
	|	Затраты.СпособРаспределенияЗатрат,
	|	Затраты.ХарактерЗатрат,
	|	ЗНАЧЕНИЕ(Справочник.Качество.ПустаяСсылка) КАК Качество
	|
	|ИЗ
	|	УчетЗатрат КАК Затраты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаЗатрат КАК РегистрКорАналитикаУчетаЗатрат
	|	ПО
	|		Затраты.СпособРаспределенияЗатрат = РегистрКорАналитикаУчетаЗатрат.СпособРаспределенияЗатрат
	|		И Затраты.СтатьяЗатрат = РегистрКорАналитикаУчетаЗатрат.СтатьяЗатрат
	|		И Затраты.ХарактерЗатрат = РегистрКорАналитикаУчетаЗатрат.ХарактерЗатрат
	|		И Затраты.Затрата = РегистрКорАналитикаУчетаЗатрат.Затрата
	|		И Затраты.ХарактеристикаЗатраты = РегистрКорАналитикаУчетаЗатрат.ХарактеристикаЗатраты
	|		И Затраты.СерияЗатраты = РегистрКорАналитикаУчетаЗатрат.СерияЗатраты
	|		И Затраты.ХарактерЗатрат = РегистрКорАналитикаУчетаЗатрат.ХарактерЗатрат
	|		
	|ГДЕ
	|	РегистрКорАналитикаУчетаЗатрат.Ссылка ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	Затраты.СтатьяЗатрат,
	|	Затраты.Затрата,
	|	Затраты.ХарактеристикаЗатраты,
	|	Затраты.СерияЗатраты,
	|	Затраты.СпособРаспределенияЗатрат,
	|	Затраты.ХарактерЗатрат
	|";*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*СтруктураКлючиАналитики = Новый Структура;*/
			/*РезультатЗапроса = Запрос.Выполнить();*/
			/*Выборка = РезультатЗапроса.Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				/*АналитикаУчетаЗатрат = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
			СтруктураШапкиДокумента,
			Выборка,
			Перечисления.КлючиАналитики.АналитикаУчетаЗатрат,
			ВидОтраженияВУчете,
			СтруктураКлючиАналитики
		);*/
			}
			/*;;*/
		}
		// СформироватьКлючиАналитикиУчетаЗатрат()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ПЕРЕНОСА РАСХОДОВ НА ОБОБЩЕННЫЕ СТАТЬИ ЗАТРАТ
		// Функция формирует текст запроса по регистру "Учет затрат".
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
		//
		// Возвращаемое значение:
		//	Запрос - Запрос по распределяемым затратам
		//

		public object СформироватьЗапросПереносРаспределяемыхЗатрат(/*
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	*/)
		{
			/*ТекстЗапросаСКомментариями = "
	|ВЫБРАТЬ
	|	Затраты.СпособРаспределенияЗатрат,
	|	РегистрКорАналитикаУчетаЗатрат.Ссылка КАК КорАналитикаУчетаЗатрат,
	|
	|	Затраты.АналитикаВидаУчета,
	|	Затраты.АналитикаУчетаЗатрат,
	|	Затраты.АналитикаУчетаПартий,
	|	Затраты.АналитикаРаспределенияЗатрат,
	|	
	|	Затраты.СтатьяЗатрат,
	|	Затраты.ХарактерЗатрат,
	|	Затраты.Затрата,
	|	Затраты.ХарактеристикаЗатраты,
	|	Затраты.СерияЗатраты,
	|
	|	//ДляРеглУчета Затраты.ПостояннаяРазницаОстаток,
	|	//ДляРеглУчета Затраты.СтоимостьНУОстаток КАК СтоимостьОстатокНУ,
	|	//ДляРеглУчета Затраты.КоличествоНУОстаток КАК КоличествоОстатокНУ,
	|	Затраты.СтоимостьОстаток,
	|	Затраты.КоличествоОстаток
	|
	|ИЗ
	|	УчетЗатрат КАК Затраты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаЗатрат КАК РегистрКорАналитикаУчетаЗатрат
	|	ПО
	|		Затраты.СпособРаспределенияЗатрат = РегистрКорАналитикаУчетаЗатрат.СпособРаспределенияЗатрат
	|		И Затраты.СтатьяЗатрат = РегистрКорАналитикаУчетаЗатрат.СтатьяЗатрат
	|		И Затраты.ХарактерЗатрат = РегистрКорАналитикаУчетаЗатрат.ХарактерЗатрат
	|		И Затраты.Затрата = РегистрКорАналитикаУчетаЗатрат.Затрата
	|		И Затраты.ХарактеристикаЗатраты = РегистрКорАналитикаУчетаЗатрат.ХарактеристикаЗатраты
	|		И Затраты.СерияЗатраты = РегистрКорАналитикаУчетаЗатрат.СерияЗатраты
	|		И Затраты.ХарактерЗатрат = РегистрКорАналитикаУчетаЗатрат.ХарактерЗатрат
	|			
	|ГДЕ
	|	Затраты.ДетализацияПоФиксированнойСтатьеЗатрат
	|
	|УПОРЯДОЧИТЬ ПО
	|	Затраты.СпособРаспределенияЗатрат,
	|	Затраты.АналитикаВидаУчета,
	|	Затраты.АналитикаУчетаЗатрат,
	|	Затраты.АналитикаУчетаПартий,
	|	Затраты.АналитикаРаспределенияЗатрат
    |
	|";*/
			/*ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями,
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			return null;
		}
		// СформироватьЗапросПереносРаспределяемыхЗатрат()
		// Процедура формирует движения по переносу расходов на обобщенные статьи затрат.
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров.
		//

		public void ПеренестиРасходыНаОбобщенныеСтатьиЗатрат(/*
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц,
	СтруктураНаборыЗаписей
	*/)
		{
			/*СтруктураКлючиАналитики = Новый Структура;*/
			/*Запрос = СформироватьЗапросПереносРаспределяемыхЗатрат(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);*/
			/*РезультатЗапроса = Запрос.Выполнить();*/
			/*КодОперации = Перечисления.КодыОперацийНезавершенноеПроизводство.РаспределениеНЗПРегламент;*/
			/*Выборка = РезультатЗапроса.Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				/*АналитикаУчетаЗатрат = Выборка.КорАналитикаУчетаЗатрат;*/
				if(true/*Не ЗначениеЗаполнено(АналитикаУчетаЗатрат)*/)
				{
					/*АналитикаУчетаЗатрат = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
				СтруктураШапкиДокумента,
				Выборка,
				Перечисления.КлючиАналитики.АналитикаУчетаЗатрат,
				СтруктураШапкиДокумента.ВидОтраженияВУчете,
				СтруктураКлючиАналитики
			);*/
				}
				if(true/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете*/)
				{
					/*КоличествоНУ = Выборка.КоличествоОстатокНУ;*/
					/*СтоимостьНУ = Выборка.СтоимостьОстатокНУ;*/
					/*ПостояннаяРазница = Выборка.ПостояннаяРазницаОстаток;*/
				}
				/*РасширеннаяАналитикаУчета.СформироватьДвиженияПоРегиструУчетЗатрат(
			СтруктураШапкиДокумента,
			Выборка.АналитикаВидаУчета,
			Выборка.АналитикаУчетаЗатрат,
			Выборка.АналитикаУчетаПартий,
			Выборка.АналитикаРаспределенияЗатрат,
			
			Выборка.АналитикаВидаУчета,
			АналитикаУчетаЗатрат,
			Выборка.АналитикаУчетаПартий,
			Выборка.АналитикаРаспределенияЗатрат,
			
			ВидДвиженияНакопления.Расход,
			КодОперации,
			Выборка.КоличествоОстаток,
			Выборка.СтоимостьОстаток,
			КоличествоНУ,
			СтоимостьНУ,
			ПостояннаяРазница,
			СтруктураНаборыЗаписей.УчетЗатрат
		);*/
				/*// Количество,
*/
				/*// КоличествоНУ,
*/
				/*СтоимостьНУ,
			ПостояннаяРазница,
			СтруктураНаборыЗаписей.УчетЗатрат
		);*/
			}
			/*;;*/
		}
		// ПеренестиРасходыНаОбобщенныеСтатьиЗатрат()
		////////////////////////////////////////////////////////////////////////////////
		// Функция формирует структуру для получения ключа аналитики способа распределения.
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//	ПараметрыАналитики - Коллекция - Коллекция параметров для получения ключа
		//		(Структура, Выборка из результата запроса, Строка табличной части и т.п.)
		//
		// Возвращаемое значение:
		//	Структура - Структура со значениями параметров для получения ключа
		//

		public object СтруктураКлючаАналитикиСпособаРаспределения(/*
	СтруктураШапкиДокумента,
	ПараметрыАналитики
	*/)
		{
			/*СтруктураИзмерений = Новый Структура;*/
			/*СтруктураИзмерений.Вставить("СпособРаспределенияЗатрат");*/
			/*СтруктураИзмерений.Вставить("ХарактерРаспределенияЗатрат");*/
			/*СтруктураИзмерений.Вставить("РаспределятьНаПодчиненныеПодразделения");*/
			/*СтруктураИзмерений.Вставить("Подразделение");*/
			/*СтруктураИзмерений.Вставить("НоменклатурнаяГруппа");*/
			/*СтруктураИзмерений.Вставить("Заказ");*/
			/*СтруктураИзмерений.Вставить("Продукция");*/
			/*СтруктураИзмерений.Вставить("ХарактеристикаПродукции");*/
			/*СтруктураИзмерений.Вставить("СерияПродукции");*/
			/*СтруктураИзмерений.Вставить("ЕНВД");*/
			/*СтруктураИзмерений.Вставить("ПодлежитРаспределению");*/
			/*СтруктураИзмерений.Вставить("РаспределениеПоПродажам");*/
			/*СтруктураИзмерений.Вставить("ДиректКостинг");*/
			/*СтруктураИзмерений.Вставить("СписаниеЗатрат");*/
			/*СтруктураИзмерений.Вставить("ТранспортныеРасходы");*/
			/*ЗаполнитьЗначенияСвойств(СтруктураИзмерений, ПараметрыАналитики);*/
			/*РаспределениеПоПродажам = Ложь;*/
			/*ДиректКостинг = Ложь;*/
			/*СписаниеЗатрат = Ложь;*/
			/*ТранспортныеРасходы = Ложь;*/
			/*ХарактерЗатрат = ПараметрыАналитики.ХарактерЗатрат;*/
			if(true/*СтруктураШапкиДокумента.ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете*/)
			{
				if(true/*ХарактерЗатрат = Перечисления.ХарактерЗатрат.КоммерческиеРасходы
		 ИЛИ ХарактерЗатрат = Перечисления.ХарактерЗатрат.ИздержкиОбращения*/)
				{
					/*РаспределениеПоПродажам = Истина;*/
					/*ТранспортныеРасходы = СтруктураИзмерений.ТранспортныеРасходы;*/
				}
			}
			/*СтруктураИзмерений.РаспределениеПоПродажам = РаспределениеПоПродажам;*/
			/*СтруктураИзмерений.ДиректКостинг = ДиректКостинг;*/
			/*СтруктураИзмерений.СписаниеЗатрат = СписаниеЗатрат;*/
			/*СтруктураИзмерений.ТранспортныеРасходы = ТранспортныеРасходы;*/
			if(true/*РаспределениеПоПродажам*/)
			{
				/*СтруктураИзмерений.СпособРаспределенияЗатрат = Справочники.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка();*/
				/*СтруктураИзмерений.ХарактерРаспределенияЗатрат = Перечисления.ХарактерРаспределенияЗатрат.ПустаяСсылка();*/
				/*СтруктураИзмерений.РаспределятьНаПодчиненныеПодразделения = Ложь;*/
				/*СтруктураИзмерений.Подразделение = Неопределено;*/
				/*СтруктураИзмерений.Заказ = Неопределено;*/
			}
			/*// Поле "Подразделение" составного типа, его пустое значение должно быть Неопределено.
*/
			if(true/*Не ЗначениеЗаполнено(СтруктураИзмерений.Подразделение)
	 ИЛИ СтруктураИзмерений.ХарактерРаспределенияЗатрат = Перечисления.ХарактерРаспределенияЗатрат.НеУчитыватьПодразделение
	 ИЛИ РаспределениеПоПродажам*/)
			{
				/*СтруктураИзмерений.Подразделение = Неопределено;*/
			}
			if(true/*СтруктураИзмерений.НоменклатурнаяГруппа = Неопределено*/)
			{
				/*СтруктураИзмерений.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ПустаяСсылка();*/
			}
			if(true/*СтруктураИзмерений.Продукция = Неопределено*/)
			{
				/*СтруктураИзмерений.Продукция = Справочники.Номенклатура.ПустаяСсылка();*/
			}
			if(true/*СтруктураИзмерений.ХарактеристикаПродукции = Неопределено*/)
			{
				/*СтруктураИзмерений.ХарактеристикаПродукции = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();*/
			}
			if(true/*СтруктураИзмерений.СерияПродукции = Неопределено*/)
			{
				/*СтруктураИзмерений.СерияПродукции = Справочники.СерииНоменклатуры.ПустаяСсылка();*/
			}
			/*// Поле "Заказ" составного типа, его пустое значение должно быть Неопределено.
*/
			if(true/*Не ЗначениеЗаполнено(СтруктураИзмерений.Заказ)*/)
			{
				/*СтруктураИзмерений.Заказ = Неопределено;*/
			}
			return null;
		}
		// СтруктураКлючаАналитикиСпособаРаспределения()
		// Функция формирует временную таблицу для группировки базы распределения.
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//	ТаблицаЗатрат - ТаблицаЗначений - Таблица затрат
		//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
		//
		// Возвращаемое значение:
		//	ТаблицаЗначений - Таблица затрат
		//

		public object СформироватьВременнуюТаблицуАналитики(/*
	СтруктураШапкиДокумента,
	ТаблицаЗатрат,
	МенеджерВременныхТаблиц
	*/)
		{
			/*МассивТиповПодразделение = Новый Массив;*/
			/*МассивТиповПодразделение.Добавить(Тип("СправочникСсылка.Подразделения"));*/
			/*МассивТиповПодразделение.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));*/
			/*МассивТиповЗаказа = Новый Массив;*/
			/*МассивТиповЗаказа.Добавить(Тип("ДокументСсылка.ЗаказПокупателя"));*/
			/*МассивТиповЗаказа.Добавить(Тип("ДокументСсылка.ЗаказНаПроизводство"));*/
			/*ТаблицаАналитики = Новый ТаблицаЗначений;*/
			/*ТаблицаАналитики.Колонки.Добавить("СпособРаспределенияЗатрат", Новый ОписаниеТипов("СправочникСсылка.СпособыРаспределенияЗатратНаВыпуск"));*/
			/*ТаблицаАналитики.Колонки.Добавить("ХарактерРаспределенияЗатрат", Новый ОписаниеТипов("ПеречислениеСсылка.ХарактерРаспределенияЗатрат"));*/
			/*ТаблицаАналитики.Колонки.Добавить("РаспределятьНаПодчиненныеПодразделения", Новый ОписаниеТипов("Булево"));*/
			/*ТаблицаАналитики.Колонки.Добавить("НоменклатурнаяГруппа", Новый ОписаниеТипов("СправочникСсылка.НоменклатурныеГруппы"));*/
			/*ТаблицаАналитики.Колонки.Добавить("Подразделение", Новый ОписаниеТипов(МассивТиповПодразделение));*/
			/*ТаблицаАналитики.Колонки.Добавить("Заказ", Новый ОписаниеТипов(МассивТиповЗаказа));*/
			/*ТаблицаАналитики.Колонки.Добавить("Продукция", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));*/
			/*ТаблицаАналитики.Колонки.Добавить("ХарактеристикаПродукции", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));*/
			/*ТаблицаАналитики.Колонки.Добавить("СерияПродукции", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));*/
			/*ТаблицаАналитики.Колонки.Добавить("ЕНВД", Новый ОписаниеТипов("Булево"));*/
			/*ТаблицаАналитики.Колонки.Добавить("ПодлежитРаспределению", Новый ОписаниеТипов("Булево"));*/
			/*ТаблицаАналитики.Колонки.Добавить("РаспределениеПоПродажам", Новый ОписаниеТипов("Булево"));*/
			/*ТаблицаАналитики.Колонки.Добавить("ДиректКостинг", Новый ОписаниеТипов("Булево"));*/
			/*ТаблицаАналитики.Колонки.Добавить("СписаниеЗатрат", Новый ОписаниеТипов("Булево"));*/
			/*ТаблицаАналитики.Колонки.Добавить("ТранспортныеРасходы", Новый ОписаниеТипов("Булево"));*/
			/*ТаблицаАналитики.Колонки.Добавить("ИндексАналитики", Новый ОписаниеТипов("Число"));*/
			/*ТаблицаАналитики.Индексы.Добавить("
	|СпособРаспределенияЗатрат,
	|ХарактерРаспределенияЗатрат,
	|РаспределятьНаПодчиненныеПодразделения,
	|Подразделение,
	|НоменклатурнаяГруппа,
	|Заказ,
	|Продукция,
	|ХарактеристикаПродукции,
	|ЕНВД,
	|ПодлежитРаспределению,
	|СерияПродукции,
	|РаспределениеПоПродажам,
	|ДиректКостинг,
	|СписаниеЗатрат,
	|ТранспортныеРасходы
	|");*/
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ТаблицаАналитикиЗатрат
	|ИЗ
	|	&ТаблицаАналитики КАК ТаблицаАналитики
	|";*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.УстановитьПараметр("ТаблицаАналитики", ТаблицаАналитики);*/
			/*Запрос.Выполнить();*/
			return null;
		}
		// СформироватьВременнуюТаблицуРаспределениеЗатрат()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ РАСПРЕДЕЛЕНИЯ РАСХОДОВ
		// Функция получае ключи аналитики для списания затрат на расходы будущих периодов.
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//	СтрокаЗатрат - СтрокаТаблицыЗначений - Строка таблицы затрат
		//	ЭлементРасходовБудущихПериодов - СправочникСсылка.РасходыБудущихПериодов - Элемент расходов будущих периодов
		//	СтруктураКлючиАналитики - Структура - Структура с таблицами ключей аналитики для кэширования данных
		//
		// Выходные параметры:
		//	АналитикаВидаУчета - СправочникСсылка.КлючиАналитикиВидаУчета - Ключ аналитики
		//	АналитикаУчетаЗатрат - СправочникСсылка.КлючиАналитикиУчетаЗатрат - Ключ аналитики
		//

		public void ПолучитьАналитикуСписанияНаРасходыБудущихПериодов(/*
	СтруктураШапкиДокумента,
	СтрокаЗатрат,
	ЭлементРасходовБудущихПериодов,
	СтруктураКлючиАналитики,
	АналитикаВидаУчета,
	АналитикаУчетаЗатрат
	*/)
		{
			/*СтруктураПараметров = Новый Структура;*/
			/*СтруктураПараметров.Вставить("Организация", СтруктураШапкиДокумента.Организация);*/
			/*СтруктураПараметров.Вставить("СчетУчета", ПланыСчетов.Хозрасчетный.ПрочиеРасходыБудущихПериодов);*/
			/*СтруктураПараметров.Вставить("СчетУчетаНУ", ПланыСчетов.Налоговый.ПрочиеРасходыБудущихПериодов);*/
			/*СтруктураПараметров.Вставить("Субконто1", ЭлементРасходовБудущихПериодов);*/
			/*СтруктураПараметров.Вставить("СубконтоНУ1", ЭлементРасходовБудущихПериодов);*/
			/*АналитикаВидаУчета = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
		СтруктураШапкиДокумента,
		СтруктураПараметров,
		Перечисления.КлючиАналитики.АналитикаУчетаПрочихЗатрат,
		СтруктураШапкиДокумента.ВидОтраженияВУчете,
		СтруктураКлючиАналитики
	);*/
			if(true/*Не ЗначениеЗаполнено(АналитикаУчетаЗатрат)*/)
			{
				/*АналитикаУчетаЗатрат = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
			СтруктураШапкиДокумента,
			СтрокаЗатрат,
			Перечисления.КлючиАналитики.АналитикаУчетаЗатрат,
			СтруктураШапкиДокумента.ВидОтраженияВУчете,
			СтруктураКлючиАналитики
		);*/
			}
		}
		// ПолучитьАналитикуСписанияНаРасходыБудущихПериодов()
		// Процедура выполняет списание общепроизводственных и общехозяйственных расходов на расходы будущих периодов.
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//	ТаблицаЗатрат - ТаблицаЗначений - Таблица затрат
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров.
		//

		public void ВыполнитьСписаниеНаРасходыБудущихПериодов(/*
	СтруктураШапкиДокумента,
	ТаблицаЗатрат,
	СтруктураНаборыЗаписей
	*/)
		{
			/*СтруктураКлючиАналитики = Новый Структура;*/
			/*МассивХарактеровЗатрат = Новый Массив;*/
			/*МассивХарактеровЗатрат.Добавить(Перечисления.ХарактерЗатрат.ОбщепроизводственныеРасходы);*/
			/*МассивХарактеровЗатрат.Добавить(Перечисления.ХарактерЗатрат.ОбщехозяйственныеРасходы);*/
		}
		// ВыполнитьСписаниеНаРасходыБудущихПериодов()
		// Функция получает код операции затрат на выпуск по характеру затрат.
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//	ХарактерЗатрат - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат
		//	СтатусМатериальныхЗатрат - ПеречислениеСсылка.СтатусыМатериальныхЗатратНаПроизводство - Статус материальных затрат
		//

		public object ПолучитьКодОперацииЗатратыНаВыпускПоХарактеруЗатраты(/*
	СтруктураШапкиДокумента,
	ХарактерЗатрат,
	СтатусМатериальныхЗатрат
	*/)
		{
			if(true/*ХарактерЗатрат = Перечисления.ХарактерЗатрат.ОбщехозяйственныеРасходы*/)
			{
				if(true/*СтруктураШапкиДокумента.ДиректКостинг*/)
				{
					/*КодОперации = Перечисления.КодыОперацийЗатраты.СписаниеРасходовНаПродажу;*/
				}
			}
			return null;
		}
		// ПолучитьКодОперацииЗатратыНаВыпускПоХарактеруЗатраты()
		// Процедура рассчитает количество и стоимость затрат по коэффициенту.
		//
		// Параметры:
		//	Коэффициент - Число - Коэффициент распределения
		//	ВсегоКоэффициент - Число - Сумма коэффициентов распределения
		//	СтруктураКоличествоОстатки - Структура - Структура остатков количества
		//	СтруктураСтоимостьОстатки - Структура - Структура остатков стоимости
		//
		// Выходные параметры:
		//	СтруктураКоличество - Структура - Структура количества
		//	СтруктураСтоимость - Структура - Структура стоимости
		//

		public void РассчитатьКоличествоИСтоимостьПоКоэффициенту(/*
	Коэффициент,
	ВсегоКоэффициент,
	СтруктураКоличествоОстатки,
	СтруктураСтоимостьОстатки,
	СтруктураКоличество,
	СтруктураСтоимость
	*/)
		{
			/*СтруктураКоличество = Новый Структура;*/
			/*СтруктураСтоимость = Новый Структура;*/
			/*ВсегоКоэффициент = ВсегоКоэффициент - Коэффициент;*/
		}
		// РассчитатьКоличествоИСтоимостьПоКоэффициенту()
		// Процедура выполняет распределение строки расходов на выпуск продукции.
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//	СтрокаЗатрат - СтрокаТаблицыЗначений - Строка таблицы затрат
		//	ВыборкаПоГруппе - ВыборкаИзРезультатаЗапроса - Строка выборки по группировке
		//	СтруктураКоличествоВсего - Структура - Структура количества затрат
		//	СтруктураСтоимостьВсего - Структура - Структура стоимость затрат
		//	СтруктураКлючиАналитики - Структура - Структура с таблицами ключей аналитики для кэширования данных
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров.
		//

		public void ВыполнитьРаспределениеСтрокиРасходовНаВыпуск(/* 
	СтруктураШапкиДокумента,
	СтрокаЗатрат,
	ВыборкаПоГруппе,
	СтруктураКоличествоВсего,
	СтруктураСтоимостьВсего,
	СтруктураКлючиАналитики,
	СтруктураНаборыЗаписей
	*/)
		{
			/*ВсегоБаза = ВыборкаПоГруппе.База;*/
			/*ВсегоБазаОстатокНЗП = ?(ВыборкаПоГруппе.БазаОстатокНЗП > 0, ВыборкаПоГруппе.БазаОстатокНЗП, 0);*/
			if(true/*(ВсегоБазаОстатокНЗП + ВсегоБаза) <> 0*/)
			{
				/*Коэффициент = ВсегоБаза / (ВсегоБазаОстатокНЗП + ВсегоБаза);*/
				/*Коэффициент = ?(Коэффициент < 0, - Коэффициент, Коэффициент);*/
			}
			/*// Рассчитывается количество и стоимость затрат, распределяемых на выпуск продукции,
*/
			/*// за минусов затрат, которые должны остаться в остатках незавершенного производства.
*/
			/*// В структурах "СтруктураКоличествоВсего" и "СтруктураСтоимостьВсего" остаются остатки затрат,
*/
			/*// распределяемые на остатки незавершенного производства.
*/
			/*// ВсегоКоэффициент
*/
			/*СтруктураКоличествоВсего,
		СтруктураСтоимостьВсего,
		СтруктураКоличествоНаВыпуск,
		СтруктураСтоимостьНаВыпуск
	);*/
			/*// Выборка детальных строк базы распределения.
*/
			/*Выборка = ВыборкаПоГруппе.Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				/*АналитикаВидаУчета = Выборка.КорАналитикаВидаУчета;*/
				/*АналитикаУчетаЗатрат = СтрокаЗатрат.КорАналитикаУчетаЗатрат;*/
				/*РаспределениеНаНЗП = (Выборка.БазаОстатокНЗП <> 0 И Выборка.База = 0);*/
				/*// Формируем ключи аналитики, по которым будут отражены распределенные затраты.
*/
				if(true/*Не Выборка.СписаниеЗатрат*/)
				{
					/*ПолучитьАналитикуРаспределенияЗатратНаВыпуск(
				СтруктураШапкиДокумента,
				Выборка,
				СтрокаЗатрат,
				СтруктураШапкиДокумента.ВидОтраженияВУчете,
				РаспределениеНаНЗП,
				СтруктураКлючиАналитики,
				АналитикаВидаУчета,
				АналитикаУчетаЗатрат
			);*/
				}
				if(true/*РаспределениеНаНЗП*/)
				{
					/*// Коэффициент
*/
					/*// ВсегоКоэффициент
*/
					/*СтруктураКоличествоВсего,
				СтруктураСтоимостьВсего,
				СтруктураКоличество,
				СтруктураСтоимость
			);*/
				}
				if(true/*СтрокаЗатрат.РаспределениеПоКоличеству*/)
				{
					if(true/*СтруктураКоличество.Количество = 0*/)
					{
						/*СтруктураСтоимость.Стоимость = 0;*/
					}
					if(true/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете
			   И СтруктураКоличество.КоличествоНУ = 0*/)
					{
						/*СтруктураСтоимость.СтоимостьНУ = 0;*/
						/*СтруктураСтоимость.ПостояннаяРазница = 0;*/
					}
				}
				/*КодОперации = ПолучитьКодОперацииЗатратыНаВыпускПоХарактеруЗатраты(
			СтруктураШапкиДокумента,
			СтрокаЗатрат.ХарактерЗатрат,
			СтрокаЗатрат.СтатусМатериальныхЗатрат
		);*/
				if(true/*СтрокаЗатрат.ДетализацияПоФиксированнойСтатьеЗатрат*/)
				{
					/*АналитикаУчетаЗатратРасход = АналитикаУчетаЗатрат;*/
				}
				/*// Если аналитика не меняется, движения не формируем.
*/
				if(true/*СтрокаЗатрат.АналитикаВидаУчета = АналитикаВидаУчета
		   И АналитикаУчетаЗатратРасход = АналитикаУчетаЗатрат
		   И СтрокаЗатрат.АналитикаУчетаПартий = Выборка.АналитикаУчетаПартий
		   И СтрокаЗатрат.АналитикаРаспределенияЗатрат = Выборка.АналитикаРаспределенияЗатрат*/)
				{
					/*Продолжить;*/
				}
				if(true/*Не Выборка.СписаниеЗатрат*/)
				{
					/*КорАналитикаВидаУчета = АналитикаВидаУчета;*/
					/*КорАналитикаУчетаЗатрат = АналитикаУчетаЗатрат;*/
					/*КорАналитикаУчетаПартий = Выборка.АналитикаУчетаПартий;*/
					/*КорАналитикаРаспределенияЗатрат = Выборка.АналитикаРаспределенияЗатрат;*/
				}
				/*// При учете затрат по сводной статье затрат количество всегда нулевое. 
*/
				if(true/*СтрокаЗатрат.ДетализацияПоФиксированнойСтатьеЗатрат*/)
				{
					/*Количество = 0;*/
					/*КоличествоНУ = 0;*/
				}
				if(true/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете*/)
				{
					/*СтоимостьНУ = СтруктураСтоимость.СтоимостьНУ;*/
					/*ПостояннаяРазница = СтруктураСтоимость.ПостояннаяРазница;*/
				}
				/*РасширеннаяАналитикаУчета.СформироватьДвиженияПоРегиструУчетЗатрат(
			СтруктураШапкиДокумента,
			СтрокаЗатрат.АналитикаВидаУчета,
			АналитикаУчетаЗатратРасход,
			СтрокаЗатрат.АналитикаУчетаПартий,
			СтрокаЗатрат.АналитикаРаспределенияЗатрат,
			
			КорАналитикаВидаУчета,
			КорАналитикаУчетаЗатрат,
			КорАналитикаУчетаПартий,
			КорАналитикаРаспределенияЗатрат,
			
			ВидДвиженияНакопления.Расход,
			КодОперации,
			Количество,
			СтруктураСтоимость.Стоимость,
			КоличествоНУ,
			СтоимостьНУ,
			ПостояннаяРазница,
			СтруктураНаборыЗаписей.УчетЗатрат
		);*/
				if(true/*Не Выборка.СписаниеЗатрат*/)
				{
					/*РасширеннаяАналитикаУчета.СформироватьДвиженияПоРегиструУчетЗатрат(
				СтруктураШапкиДокумента,
				КорАналитикаВидаУчета,
				КорАналитикаУчетаЗатрат,
				КорАналитикаУчетаПартий,
				КорАналитикаРаспределенияЗатрат,
				
				СтрокаЗатрат.АналитикаВидаУчета,
				АналитикаУчетаЗатратРасход,
				СтрокаЗатрат.АналитикаУчетаПартий,
				СтрокаЗатрат.АналитикаРаспределенияЗатрат,
				
				ВидДвиженияНакопления.Приход,
				КодОперации,
				Количество,
				СтруктураСтоимость.Стоимость,
				КоличествоНУ,
				СтоимостьНУ,
				ПостояннаяРазница,
				СтруктураНаборыЗаписей.УчетЗатрат
			);*/
				}
			}
			/*;;*/
		}
		// ВыполнитьРаспределениеСтрокиРасходовНаВыпуск()
		// Функция проверяет базу распределения на наличие данных для распределения.
		// Затраты распределяем по базе, если есть "База приход" и "База" или "База остаток НЗП".
		//
		// Параметры:
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Строка выборки по группировке
		//
		// Возвращаемое значение:
		//	Булево - Истина - Затраты распределяются по данной базе
		//			 Ложь - Затраты не распределяются по данной базе.
		//

		public object РаспределятьЗатратыПоСтрокеБазыРаспределения(/*СтрокаВыборки*/)
		{
			/*РаспределятьЗатраты = Истина;*/
			if(true/*СтрокаВыборки.База = 0
	   И СтрокаВыборки.БазаОстатокНЗП = 0*/)
			{
				/*РаспределятьЗатраты = Ложь;*/
			}
			return null;
		}
		// РаспределятьЗатратыПоСтрокеБазыРаспределения()
		// Процедура выполняет распределение расходов по заданным способам распределения.
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//	РезультатЗапросаЗатраты - РезультатЗапроса - Результат запроса по затратам
		//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров.
		//

		public void ВыполнитьРаспределениеРасходов(/*
	СтруктураШапкиДокумента,
	РезультатЗапросаЗатраты,
	МенеджерВременныхТаблиц,
	СтруктураНаборыЗаписей
	*/)
		{
			/*ТаблицаЗатрат = РезультатЗапросаЗатраты.Выгрузить();*/
			/*ТаблицаЗатрат.Колонки.Добавить("ИндексАналитики", Новый ОписаниеТипов("Число"));*/
			/*ТаблицаЗатрат.Индексы.Добавить("ИндексАналитики");*/
			/*ТаблицаАналитики = СформироватьВременнуюТаблицуАналитики(
		СтруктураШапкиДокумента,
		ТаблицаЗатрат,
		МенеджерВременныхТаблиц
	);*/
			/*ЗапросПоБазе = СформироватьЗапросПоВременнойТаблицеБазаРаспределенияЗатрат(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);*/
			/*РезультатЗапросаПоБазе = ЗапросПоБазе.Выполнить();*/
			/*СтруктураКлючиАналитики = Новый Структура;*/
			/*// Выборка строк базы распределения по индексу аналитики.
*/
			/*ВыборкаПоИндексу = РезультатЗапросаПоБазе.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);*/
			while(true/*ВыборкаПоИндексу.Следующий()*/)
			{
				/*БазаПриходВсего = 0;*/
				/*Выборка = ВыборкаПоИндексу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);*/
				/*// Рассчитывается общая база распределения, равная сумме всех строк базы распределения
*/
				/*// с учетом коэффициента распределения на подчиненные подразделения.
*/
				while(true/*Выборка.Следующий()*/)
				{
					/*// Проверим строку базы распределения затрат.
*/
					if(true/*Не РаспределятьЗатратыПоСтрокеБазыРаспределения(Выборка)*/)
					{
						/*Продолжить;*/
					}
					/*БазаНаПодчиненные = ?(Выборка.БазаНаПодчиненные <> 0, Выборка.БазаНаПодчиненные, 1);*/
					/*БазаПриходВсего = БазаПриходВсего + Выборка.БазаПриход * БазаНаПодчиненные;*/
				}
				if(true/*БазаПриходВсего = 0*/)
				{
					/*Строка = ТаблицаАналитики.Найти(ВыборкаПоИндексу.ИндексАналитики, "ИндексАналитики");*/
					if(true/*Строка <> Неопределено*/)
					{
						/*ОбщегоНазначения.Сообщение("Сумма базы коэф. по " + Строка.СпособРаспределенияЗатрат + " равна 0, для:
					|Характер распределения: " + Строка.ХарактерРаспределенияЗатрат + "
					|Подразделение: " + Строка.Подразделение + "
					|Заказ: " + Строка.Заказ + "
					|Номенклатурная группа: " + Строка.НоменклатурнаяГруппа, СтатусСообщения.Важное
				);*/
					}
					/*Продолжить;*/
				}
				/*СтруктураОтбора = Новый Структура;*/
				/*СтруктураОтбора.Вставить("ИндексАналитики", ВыборкаПоИндексу.ИндексАналитики);*/
				/*// Получаем массив затрат, имеющих одинаковый индекс аналитики, соответствующий текущей выборки базы распределения.
*/
				/*// Данные затраты будут распределены по одинаковой базе распределения.
*/
				/*МассивЗатрат = ТаблицаЗатрат.НайтиСтроки(СтруктураОтбора);*/
				if(true/*МассивЗатрат.Количество() = 0*/)
				{
					/*Продолжить;*/
				}
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете
	   И СтруктураШапкиДокумента.СписыватьКосвенныеРасходыНаРБП*/)
			{
				/*ВыполнитьСписаниеНаРасходыБудущихПериодов(
			СтруктураШапкиДокумента,
			ТаблицаЗатрат,
			СтруктураНаборыЗаписей
		);*/
			}
		}
		// ВыполнитьРаспределениеРасходов()
		// Процедура производит распределение расходов по заданному способу распределения.
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//

		public void РаспределениеРасходовПоСпособуРаспределения(/*
	СтруктураШапкиДокумента
	*/)
		{
			/*СтруктураНаборыЗаписей = РасширеннаяАналитикаУчета.ПолучитьНаборыЗаписейРегистров(СтруктураШапкиДокумента);*/
			if(true/*СтруктураНаборыЗаписей.Количество() = 0*/)
			{
			}
			/*ВыполнитьСписаниеКосвенныхРасходовНУПоРасчетнойСтоимости(
		СтруктураШапкиДокумента,
		СтруктураНаборыЗаписей
	);*/
			/*МассивХарактеровРаспределения = Новый Массив;*/
			/*МассивХарактеровРаспределения.Добавить(Перечисления.ХарактерРаспределенияЗатрат.НеУчитыватьПодразделение);*/
			/*МассивХарактеровРаспределения.Добавить(Перечисления.ХарактерРаспределенияЗатрат.УчитыватьПодразделение);*/
			/*МассивХарактеровРаспределения.Добавить(Перечисления.ХарактерРаспределенияЗатрат.ПроизводственныеРасходы);*/
			/*МассивХарактеровРаспределения.Добавить(Перечисления.ХарактерРаспределенияЗатрат.ПустаяСсылка());*/
			/*МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;*/
			/*// Формируется запрос по данным регистров сведений "Способы распределения статей затрат"
*/
			/*// и "Способы распределения статей затрат организаций".
*/
			/*// ФормироватьВременнуюТаблицу
*/
			/*СтруктураШапкиДокумента.ВидОтраженияВУчете,
		МенеджерВременныхТаблиц
	);*/
			/*Запрос.Выполнить();*/
			/*// Формируется временная таблица "АналитикаВидаУчетаЗатраты"
*/
			/*// с ключами аналитики вида учета по разделу учета "Затраты".
*/
			/*СформироватьВременнуюТаблицуАналитикаВидаУчетаЗатраты(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);*/
			/*// Формируются временные таблицы базы распределения затрат по данным
*/
			/*// регистра "База распределения затрат" по соответствующему виду учета.
*/
			/*СформироватьВременныеТаблицыПоБазеРаспределенияЗатрат(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);*/
			/*// Формируется временная таблица "УчетЗатрат" по остаткам затрат, подлежащим распределению.
*/
			/*СформироватьВременнуюТаблицуУчетЗатрат(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);*/
			/*// Формируются ключи аналитики, по которым будут отражены распределенные затраты.
*/
			/*СформироватьКлючиАналитикиВидаУчетаБазаРаспределения(
		СтруктураШапкиДокумента,
		СтруктураШапкиДокумента.ВидОтраженияВУчете,
		МенеджерВременныхТаблиц
	);*/
			/*СформироватьКлючиАналитикиУчетаЗатрат(
		СтруктураШапкиДокумента,
		СтруктураШапкиДокумента.ВидОтраженияВУчете,
		МенеджерВременныхТаблиц
	);*/
			/*// Формируется запрос по остаткам затрат, подлежащим распределению, по данным временной таблицы "УчетЗатрат".
*/
			/*// Запрос формируется по-разному в зависимости от настройки детализации затрат, указанной в учетной политике.
*/
			/*// ВидРасходовНУ,
*/
			/*// УсловиеВидРасходовНУ,
*/
			/*МенеджерВременныхТаблиц
	);*/
			/*РезультатЗапросаЗатраты = Запрос.Выполнить();*/
			if(true/*Не РезультатЗапросаЗатраты.Пустой()*/)
			{
				if(true/*СтруктураШапкиДокумента.ДетализацияПоФиксированнойСтатьеЗатрат*/)
				{
					/*// Перенос статей затрат на обобщенные ("сводные") статьи затрат.
*/
					/*ПеренестиРасходыНаОбобщенныеСтатьиЗатрат(
				СтруктураШапкиДокумента,
				МенеджерВременныхТаблиц,
				СтруктураНаборыЗаписей
			);*/
				}
				/*// Распределение остатков распределяемых расходов по подготовленной базе распределения.
*/
				/*ВыполнитьРаспределениеРасходов(
			СтруктураШапкиДокумента,
			РезультатЗапросаЗатраты,
			МенеджерВременныхТаблиц,
			СтруктураНаборыЗаписей
		);*/
			}
			if(true/*СтруктураНаборыЗаписей.УчетЗатрат.Модифицированность()*/)
			{
				/*СтруктураНаборыЗаписей.УчетЗатрат.Записать(Ложь);*/
			}
		}
		// РаспределениеРасходовПоСпособуРаспределения()
		// Выполняет действие "Распределение расходов по базе" документа "Расчет себестоимости"
		//

		public void РаспределениеРасходов(/*СтруктураШапкиДокумента, ТаблицаОшибок*/)
		{
			if(true/*СтруктураШапкиДокумента.ПростоеРаспределение*/)
			{
				/*СтруктураНаборыЗаписей = РасширеннаяАналитикаУчета.ПолучитьНаборыЗаписейРегистров(СтруктураШапкиДокумента);*/
				/*// Выполним списание косвенные расходов НУ на 90.08
*/
				/*ВыполнитьСписаниеКосвенныхРасходовНУПоФиксированнойСтоимости(СтруктураШапкиДокумента, СтруктураНаборыЗаписей);*/
				/*// Распределим затраты
*/
				/*УчетЗатрат.РаспределитьЗатраты(СтруктураШапкиДокумента, Ложь);*/
				/*ДобавитьЗаписьВПротоколРасчета("Затраты распределены", ТаблицаОшибок, СтруктураШапкиДокумента);*/
			}
			/*// Рассчитаем себестоимость
*/
			/*РасчетФактическойСебестоимостиВыпуска(
		СтруктураШапкиДокумента,
		ТаблицаОшибок,
		Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеРасходовПоБазе,
		МенеджерВременныхТаблиц
	);*/
			/*ДобавитьЗаписьВПротоколРасчета("Рассчитана фактическая себестоимость", ТаблицаОшибок, СтруктураШапкиДокумента);*/
		}
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ СВЕРТКИ ДВИЖЕНИЙ ПО РЕГИСТРУ "УЧЕТ ЗАТРАТ"
		// Функция формирует запрос по движениям регистра "Учет затрат".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
		//
		// Возвращаемое значение:
		//   Запрос – Запрос по регистру "Учет затрат".
		//

		public object СформироватьЗапросПоДвижениямРегистраУчетЗатрат(/*
	СтруктураШапкиДокумента
	*/)
		{
			/*ТекстЗапросаСКомментариями = "
	|ВЫБРАТЬ
	|	УчетЗатрат.АналитикаВидаУчета,
	|	УчетЗатрат.АналитикаУчетаЗатрат,
	|	УчетЗатрат.АналитикаУчетаПартий,
	|	УчетЗатрат.АналитикаРаспределенияЗатрат,
	|		
	|	УчетЗатрат.КорАналитикаВидаУчета,
	|	УчетЗатрат.КорАналитикаУчетаЗатрат,
	|	УчетЗатрат.КорАналитикаУчетаПартий,
	|	УчетЗатрат.КорАналитикаРаспределенияЗатрат,
	|	УчетЗатрат.ВидДвижения,
	|	УчетЗатрат.КодОперации,
	|		
	|	//ДляУпрУчета 0 КАК ПостояннаяРазница,
	|	//ДляУпрУчета 0 КАК СтоимостьНУ,
	|	//ДляУпрУчета 0 КАК КоличествоНУ,
	|
	|	//ДляРеглУчета СУММА(УчетЗатрат.ПостояннаяРазница) КАК ПостояннаяРазница,
	|	//ДляРеглУчета СУММА(УчетЗатрат.СтоимостьНУ) КАК СтоимостьНУ,
	|	//ДляРеглУчета СУММА(УчетЗатрат.КоличествоНУ) КАК КоличествоНУ,
	|
	|	СУММА(УчетЗатрат.Стоимость) КАК Стоимость,
	|	СУММА(УчетЗатрат.Количество) КАК Количество
	|
	|ИЗ
	|	РегистрНакопления.УчетЗатрат%СуффиксРегл% КАК УчетЗатрат
	|ГДЕ
	|	УчетЗатрат.Регистратор = &Регистратор
	|		
	|СГРУППИРОВАТЬ ПО
	|	УчетЗатрат.АналитикаВидаУчета,
	|	УчетЗатрат.АналитикаУчетаЗатрат,
	|	УчетЗатрат.АналитикаУчетаПартий,
	|	УчетЗатрат.АналитикаРаспределенияЗатрат,
	|	
	|	УчетЗатрат.КорАналитикаВидаУчета,
	|	УчетЗатрат.КорАналитикаУчетаЗатрат,
	|	УчетЗатрат.КорАналитикаУчетаПартий,
	|	УчетЗатрат.КорАналитикаРаспределенияЗатрат,
	|	УчетЗатрат.ВидДвижения,
	|	УчетЗатрат.КодОперации
	|		
	|УПОРЯДОЧИТЬ ПО
	|	УчетЗатрат.АналитикаВидаУчета,
	|	УчетЗатрат.АналитикаУчетаЗатрат,
	|	УчетЗатрат.АналитикаУчетаПартий,
	|	УчетЗатрат.АналитикаРаспределенияЗатрат,
	|	
	|	УчетЗатрат.КорАналитикаВидаУчета,
	|	УчетЗатрат.КорАналитикаУчетаЗатрат,
	|	УчетЗатрат.КорАналитикаУчетаПартий,
	|	УчетЗатрат.КорАналитикаРаспределенияЗатрат,
	|	УчетЗатрат.ВидДвижения,
	|	УчетЗатрат.КодОперации
	|";*/
			/*ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями,
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.УстановитьПараметр("Регистратор", СтруктураШапкиДокумента.Ссылка);*/
			return null;
		}
		// СформироватьЗапросПоДвижениямРегистраУчетЗатрат()
		// Процедура производит свертку движений по регистру "Учет затрат".
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//

		public void СверткаДвиженийПоРегиструУчетЗатрат(/*СтруктураШапкиДокумента*/)
		{
			/*СтруктураИменРегистров = Новый Структура;*/
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете*/)
			{
				/*СтруктураИменРегистров.Вставить("УчетЗатрат", "УчетЗатрат");*/
			}
			/*СтруктураНаборыЗаписей = РасширеннаяАналитикаУчета.ПолучитьНаборыЗаписейРегистров(
		СтруктураШапкиДокумента,
		СтруктураИменРегистров
	);*/
			/*Запрос = СформироватьЗапросПоДвижениямРегистраУчетЗатрат(СтруктураШапкиДокумента);*/
			/*РезультатЗапроса = Запрос.Выполнить();*/
			if(true/*РезультатЗапроса.Пустой()*/)
			{
			}
			/*// Очистка движений по регистру.
*/
			/*СтруктураНаборыЗаписей.УчетЗатрат.Записать();*/
			/*Выборка = РезультатЗапроса.Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				/*РасширеннаяАналитикаУчета.СформироватьДвиженияПоРегиструУчетЗатрат(
			СтруктураШапкиДокумента,
			Выборка.АналитикаВидаУчета,
			Выборка.АналитикаУчетаЗатрат,
			Выборка.АналитикаУчетаПартий,
			Выборка.АналитикаРаспределенияЗатрат,
			
			Выборка.КорАналитикаВидаУчета,
			Выборка.КорАналитикаУчетаЗатрат,
			Выборка.КорАналитикаУчетаПартий,
			Выборка.КорАналитикаРаспределенияЗатрат,
			
			Выборка.ВидДвижения,
			Выборка.КодОперации,
			Выборка.Количество,
			Выборка.Стоимость,
			Выборка.КоличествоНУ,
			Выборка.СтоимостьНУ,
			Выборка.ПостояннаяРазница,
			СтруктураНаборыЗаписей.УчетЗатрат
		);*/
			}
			if(true/*СтруктураНаборыЗаписей.УчетЗатрат.Модифицированность()*/)
			{
				/*СтруктураНаборыЗаписей.УчетЗатрат.Записать(Ложь);*/
			}
		}
		// СверткаДвиженийПоРегиструУчетЗатрат()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ПРОВОДОК ПО ВЫПУСКУ ПРОДУКЦИИ
		// Функция формирует текст запроса по регистрам "Учет затрат" и "Выпуск продукции и услуг".
		//
		// Возвращаемое значение:
		//   Текст – текст запроса
		//

		public object СформироватьТекстЗапросаПоРегиструВыпускПродукцииИУслуг(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|   ВыпускПродукции.КодОперации,
	|    
	|	// Аналитика учета выпуска
	|	АналитикаВыпускаПродукции.Организация,
	|	АналитикаВыпускаПродукции.Подразделение,
	|	АналитикаВыпускаПродукции.НоменклатурнаяГруппа,
	|
	|	АналитикаВыпускаПродукции.Продукция,
	|	ПРЕДСТАВЛЕНИЕ(АналитикаВыпускаПродукции.Продукция),
	|	АналитикаВыпускаПродукции.ХарактеристикаПродукции,
	|	АналитикаВыпускаПродукции.СерияПродукции,
	|	АналитикаВыпускаПродукции.Спецификация,
	|
	|	АналитикаВыпускаПродукции.СчетУчета КАК СчетЗатрат,
	|	АналитикаВыпускаПродукции.СчетУчетаНУ КАК СчетЗатратНУ,
	|
	|	// Аналитика партионного учета
	|	АналитикаВыпускаПродукции.Заказ,
	|	АналитикаВыпускаПродукции.ЗаказПолучатель,
	|	АналитикаВыпускаПродукции.СкладПолучатель,
	|	
	|	// Аналитика учета затрат.
	|	АналитикаВыпускаПродукции.ПодразделениеПолучатель,
	|	АналитикаВыпускаПродукции.СчетДт,
	|	АналитикаВыпускаПродукции.СчетДтНУ,
	|	АналитикаВыпускаПродукции.НоменклатурнаяГруппаПолучатель,
	|	АналитикаВыпускаПродукции.СтатьяЗатратПолучатель,
	|	АналитикаВыпускаПродукции.СтатьяЗатратПолучатель.ХарактерЗатрат КАК ХарактерЗатрат,
	|
	|	// Аналитика учета прочих затрат
	|	АналитикаВыпускаПродукции.СубконтоДт1,
	|	АналитикаВыпускаПродукции.СубконтоДт2,
	|	АналитикаВыпускаПродукции.СубконтоДт3,
	|	АналитикаВыпускаПродукции.СубконтоДтНУ1,
	|	АналитикаВыпускаПродукции.СубконтоДтНУ2,
	|	АналитикаВыпускаПродукции.СубконтоДтНУ3,
	|
	|	ВыпускПродукции.ФактическаяСтоимость,
	|	ВыпускПродукции.ФактическаяСтоимостьНУ,
	|	ВыпускПродукции.ПостояннаяРазница,
	|	ВыпускПродукции.ПлановаяСтоимость,
	|	ВыпускПродукции.ПлановаяСтоимостьНУ
	|	
	|ИЗ (
	|	ВЫБРАТЬ
	|		ВыпускПродукции.АналитикаВидаУчета,
	|		ВыпускПродукции.АналитикаРаспределенияЗатрат,
	|		ВыпускПродукции.АналитикаУчетаПартий,
	|		ВыпускПродукции.КорАналитикаВидаУчета,
	|		ВыпускПродукции.КорАналитикаУчетаЗатрат,
	|		ВыпускПродукции.КорАналитикаУчетаПартий,
	|		ВыпускПродукции.КорАналитикаРаспределенияЗатрат,
	|		ВыпускПродукции.КодОперации,
	|		
	|		СУММА(
	|			ВЫБОР КОГДА ВыпускПродукции.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
	|				ВыпускПродукции.Стоимость
	|			ИНАЧЕ
	|				0
	|			КОНЕЦ
	|			) КАК ФактическаяСтоимость,
	|		СУММА(
	|			ВЫБОР КОГДА ВыпускПродукции.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
	|				ВыпускПродукции.СтоимостьНУ
	|			ИНАЧЕ
	|				0
	|			КОНЕЦ
	|			) КАК ФактическаяСтоимостьНУ,
	|		СУММА(
	|			ВЫБОР КОГДА ВыпускПродукции.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
	|				ВыпускПродукции.ПостояннаяРазница
	|			ИНАЧЕ
	|				0
	|			КОНЕЦ
	|			) КАК ПостояннаяРазница,
	|		
	|		СУММА(
	|			ВЫБОР КОГДА ВыпускПродукции.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И Не Регистратор ССЫЛКА Документ.РасчетСебестоимостиВыпуска
	|			ТОГДА
	|				ВыпускПродукции.Стоимость
	|			ИНАЧЕ
	|				0
	|			КОНЕЦ
	|			) КАК ПлановаяСтоимость,
	|		СУММА(
	|			ВЫБОР КОГДА ВыпускПродукции.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И Не Регистратор ССЫЛКА Документ.РасчетСебестоимостиВыпуска
	|			ТОГДА
	|				ВыпускПродукции.СтоимостьНУ
	|			ИНАЧЕ
	|				0
	|			КОНЕЦ
	|			) КАК ПлановаяСтоимостьНУ
	|	ИЗ
	|		РегистрНакопления.УчетЗатратРегл КАК ВыпускПродукции
	|	ГДЕ
	|		ВыпускПродукции.Период МЕЖДУ &НачДата И &КонДата
	|		И ВыпускПродукции.Активность
	|		И ВыпускПродукции.АналитикаВидаУчета В (
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Ссылка
	|			ИЗ
	|				АналитикаВидаУчетаВыпуск КАК РегистрАналитикаВидаУчета
	|		)
	|	СГРУППИРОВАТЬ ПО
	|		ВыпускПродукции.АналитикаВидаУчета,
	|		ВыпускПродукции.АналитикаРаспределенияЗатрат,
	|		ВыпускПродукции.АналитикаУчетаПартий,
	|		ВыпускПродукции.КорАналитикаВидаУчета,
	|		ВыпускПродукции.КорАналитикаУчетаЗатрат,
	|		ВыпускПродукции.КорАналитикаУчетаПартий,
	|		ВыпускПродукции.КорАналитикаРаспределенияЗатрат,
	|		ВыпускПродукции.КодОперации
	|		
	|	) КАК ВыпускПродукции
	|	
	|	// Аналитика учета выпуска
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		АналитикаВыпускаПродукции КАК АналитикаВыпускаПродукции
	|	ПО 
	|		ВыпускПродукции.АналитикаВидаУчета = АналитикаВыпускаПродукции.АналитикаВидаУчета
	|		И ВыпускПродукции.АналитикаРаспределенияЗатрат = АналитикаВыпускаПродукции.АналитикаРаспределенияЗатрат
	|		И ВыпускПродукции.АналитикаУчетаПартий = АналитикаВыпускаПродукции.АналитикаУчетаПартий
	|		И ВыпускПродукции.КорАналитикаВидаУчета 
	|			= АналитикаВыпускаПродукции.КорАналитикаВидаУчета
	|		И ВыпускПродукции.КорАналитикаУчетаЗатрат 
	|			= АналитикаВыпускаПродукции.КорАналитикаУчетаЗатрат
	|		И ВыпускПродукции.КорАналитикаУчетаПартий 
	|			= АналитикаВыпускаПродукции.КорАналитикаУчетаПартий
	|		И ВыпускПродукции.КорАналитикаРаспределенияЗатрат 
	|			= АналитикаВыпускаПродукции.КорАналитикаРаспределенияЗатрат
	|
	|ГДЕ
	|	ВыпускПродукции.ФактическаяСтоимость <> 0
	|	ИЛИ ВыпускПродукции.ФактическаяСтоимостьНУ <> 0
	|	ИЛИ ВыпускПродукции.ПостояннаяРазница <> 0
	|	ИЛИ ВыпускПродукции.ПлановаяСтоимость <> 0
	|	ИЛИ ВыпускПродукции.ПлановаяСтоимостьНУ <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВыпускПродукции.АналитикаВидаУчета,
	|	ВыпускПродукции.АналитикаРаспределенияЗатрат,
	|	ВыпускПродукции.АналитикаУчетаПартий,
	|	ВыпускПродукции.КорАналитикаВидаУчета,
	|	ВыпускПродукции.КорАналитикаУчетаЗатрат,
	|	ВыпускПродукции.КорАналитикаУчетаПартий,
	|	ВыпускПродукции.КорАналитикаРаспределенияЗатрат
	|
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаПоРегиструВыпускПродукцииИУслуг()
		// Функция формирует запрос по регистрам "Учет затрат" и "Выпуск продукции и услуг".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
		//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
		//
		// Возвращаемое значение:
		//   Запрос – Запрос по регистрам
		//

		public object СформироватьЗапросПоРегиструВыпускПродукцииИУслуг(/*
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	*/)
		{
			/*СформироватьВременнуюТаблицуАналитикаВыпускаПродукции(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);*/
			/*ТекстЗапроса = СформироватьТекстЗапросаПоРегиструВыпускПродукцииИУслуг();*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.УстановитьПараметр("НачДата", СтруктураШапкиДокумента.мНачДата);*/
			/*Запрос.УстановитьПараметр("КонДата", СтруктураШапкиДокумента.мКонДата);*/
			/*Запрос.УстановитьПараметр("ДокументСсылка", СтруктураШапкиДокумента.Ссылка);*/
			return null;
		}
		// СформироватьЗапросПоРегиструВыпускПродукцииИУслуг()
		// Процедура формирует проводки по выпуску продукции и услуг.
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура – Реквизиты документа "Расчет себестоимости"
		//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров.
		//

		public void ФормированиеПроводокПоВыпускуПродукции(/*
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц,
	СтруктураНаборыЗаписей
	*/)
		{
			/*ЗапросПоВыпуску = СформироватьЗапросПоРегиструВыпускПродукцииИУслуг(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);*/
			/*РезультатЗапроса = ЗапросПоВыпуску.Выполнить();*/
			if(true/*РезультатЗапроса.Пустой()*/)
			{
			}
			/*Выборка = РезультатЗапроса.Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				if(true/*Выборка.КодОперации = Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииФиксНаСклад*/)
				{
					/*ХарактерЗатрат = Неопределено;*/
				}
				/*// СуммаКорректировки,
*/
				/*// СуммаЗатратПостояннаяРазница,
*/
				/*// СуммаКорректировкиПостояннаяРазница,
*/
				/*// СуммаЗатратВременнаяРазница,
*/
				/*// СуммаКорректировкиВременнаяРазница,
*/
				/*// КосвенныеЗатраты,
*/
				/*// ЗатратыВстречногоВыпуска,
*/
				/*СоответствиеКодОперацииСодержание,
			СтруктураНаборыЗаписей.Хозрасчетный
		);*/
				if(true/*СтруктураШапкиДокумента.ПоддержкаПБУ18*/)
				{
					/*ПостояннаяРазница = Выборка.ПостояннаяРазница;*/
					/*ПлановаяВременнаяРазница = Выборка.ПлановаяСтоимость - Выборка.ПлановаяСтоимостьНУ;*/
					/*ФактическаяВременнаяРазница = Выборка.ФактическаяСтоимость - Выборка.ФактическаяСтоимостьНУ - Выборка.ПостояннаяРазница;*/
				}
				/*// СуммаКорректировки,
*/
				/*// СуммаЗатратПостояннаяРазница,
*/
				/*// СуммаКорректировкиПостояннаяРазница,
*/
				/*// СуммаЗатратВременнаяРазница,
*/
				/*// СуммаКорректировкиВременнаяРазница,
*/
				/*// КосвенныеЗатраты,
*/
				/*// ЗатратыВстречногоВыпуска,
*/
				/*СоответствиеКодОперацииСодержание,
			СтруктураНаборыЗаписей.Налоговый
		);*/
			}
			/*;;*/
		}
		// ФормированиеПроводокПоВыпускуПродукции()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ПРОВОДОК ПО РАСПРЕДЕЛЕННЫМ ЗАТРАТАМ
		// Процедура формирует временную таблицу кодов операций списания затрат
		//

		public void СформироватьВременнуюТаблицуКодовОперацийСписанияЗатрат(/*МенеджерВременныхТаблиц*/)
		{
			/*МассивКодовОперацийСписанияЗатрат = КорректировкаСтоимостиУчетЗатрат.ПолучитьМассивКодовОперацийСписаниеЗатрат();*/
			/*ТаблицаКодовОперацийСписанияЗатрат = Новый ТаблицаЗначений;*/
			/*ОписаниеТипов = Новый ОписаниеТипов("ПеречислениеСсылка.КодыОперацийЗатраты, 
		|ПеречислениеСсылка.КодыОперацийНезавершенноеПроизводство,
		|ПеречислениеСсылка.КодыОперацийЗатратыНаВыпускПродукции,
		|ПеречислениеСсылка.КодыОперацийБракВПроизводстве");*/
			/*ТаблицаКодовОперацийСписанияЗатрат.Колонки.Добавить("КодОперации", ОписаниеТипов);*/
			/*// Поместим таблицу значений во временную таблицу
*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.Текст = 
		"ВЫБРАТЬ
		|	КодОперации
		|	
		|ПОМЕСТИТЬ КодыОперацийСписанияЗатрат
		|ИЗ
		|	&ТаблицаКодовОперацийСписанияЗатрат КАК ТаблицаКодовОперацийСписанияЗатрат";*/
			/*Запрос.УстановитьПараметр("ТаблицаКодовОперацийСписанияЗатрат", ТаблицаКодовОперацийСписанияЗатрат);*/
			/*Запрос.Выполнить();*/
		}
		// Процедура формирует временную таблицу кодов операций прямых затрат
		//

		public void СформироватьВременнуюТаблицуКодовОперацийПрямыхЗатрат(/*МенеджерВременныхТаблиц*/)
		{
			/*МассивКодовОперацийПрямыеЗатраты = Новый Массив;*/
			/*МассивКодовОперацийПрямыеЗатраты.Добавить(Перечисления.КодыОперацийЗатратыНаВыпускПродукции.ПрямыеЗатраты);*/
			/*МассивКодовОперацийПрямыеЗатраты.Добавить(Перечисления.КодыОперацийЗатратыНаВыпускПродукции.ОтрицательныеЗатраты);*/
			/*ТаблицаКодовОперацийПрямыхЗатрат = Новый ТаблицаЗначений;*/
			/*ТаблицаКодовОперацийПрямыхЗатрат.Колонки.Добавить("КодОперации", Новый ОписаниеТипов("ПеречислениеСсылка.КодыОперацийЗатратыНаВыпускПродукции"));*/
			/*// Поместим таблицу значений во временную таблицу
*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.Текст = 
		"ВЫБРАТЬ
		|	КодОперации
		|	
		|ПОМЕСТИТЬ КодыОперацийПрямыхЗатрат
		|ИЗ
		|	&ТаблицаКодовОперацийПрямыхЗатрат КАК ТаблицаКодовОперацийПрямыхЗатрат";*/
			/*Запрос.УстановитьПараметр("ТаблицаКодовОперацийПрямыхЗатрат", ТаблицаКодовОперацийПрямыхЗатрат);*/
			/*Запрос.Выполнить();*/
		}
		// Функция формирует текст запроса по регистру "Учет затрат".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоСтоимостиРаспределенныхЗатрат(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	УчетЗатрат.АналитикаВидаУчета,
	|	УчетЗатрат.АналитикаУчетаЗатрат,
	|	УчетЗатрат.АналитикаРаспределенияЗатрат,
	|	
	|	УчетЗатрат.КорАналитикаВидаУчета,
	|	УчетЗатрат.КорАналитикаУчетаЗатрат,
	|	УчетЗатрат.КорАналитикаРаспределенияЗатрат,
	|	УчетЗатрат.КодОперации,
	|	
	|	СУММА(УчетЗатрат.Стоимость) КАК Стоимость,
	|	СУММА(УчетЗатрат.СтоимостьНУ) КАК СтоимостьНУ,
	|	СУММА(УчетЗатрат.ПостояннаяРазница) КАК ПостояннаяРазница
	|	
	|ПОМЕСТИТЬ Затраты 
	|ИЗ
	|	РегистрНакопления.УчетЗатратРегл КАК УчетЗатрат
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|	ПО
	|		УчетЗатрат.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|		И РегистрАналитикаВидаУчета.Организация = &Организация
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		КодыОперацийСписанияЗатрат КАК КодыОперацийСписанияЗатрат
	|	ПО 
	|		УчетЗатрат.КодОперации = КодыОперацийСписанияЗатрат.КодОперации
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КодыОперацийПрямыхЗатрат КАК КодыОперацийПрямыхЗатрат
	|	ПО
	|		УчетЗатрат.КодОперации = КодыОперацийПрямыхЗатрат.КодОперации
	|
	|ГДЕ
	|	УчетЗатрат.Период МЕЖДУ &НачДата И &КонДата
	|	И УчетЗатрат.Активность
	|	И (УчетЗатрат.Регистратор = &Регистратор
	|		ИЛИ НЕ КодыОперацийПрямыхЗатрат.КодОперации ЕСТЬ NULL)
	|	И УчетЗатрат.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	
	|СГРУППИРОВАТЬ ПО
	|	УчетЗатрат.АналитикаВидаУчета,
	|	УчетЗатрат.АналитикаУчетаЗатрат,
	|	УчетЗатрат.АналитикаРаспределенияЗатрат,
	|	
	|	УчетЗатрат.КорАналитикаВидаУчета,
	|	УчетЗатрат.КорАналитикаУчетаЗатрат,
	|	УчетЗатрат.КорАналитикаРаспределенияЗатрат,
	|	УчетЗатрат.КодОперации
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	РегистрАналитикаВидаУчета.СчетУчета,
	|	РегистрАналитикаВидаУчета.СчетУчетаНУ,
	|	РегистрАналитикаВидаУчета.ПодразделениеОрганизации КАК Подразделение,
	|	РегистрАналитикаУчетаЗатрат.СтатьяЗатрат,
	|	РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа,
	|	
	|	ЕСТЬNULL(РегистрКорАналитикаВидаУчета.СчетУчета, РегистрАналитикаУчетаПрочихЗатрат.СчетУчета) КАК СчетУчетаПолучатель,
	|	ЕСТЬNULL(РегистрКорАналитикаВидаУчета.СчетУчетаНУ, РегистрАналитикаУчетаПрочихЗатрат.СчетУчетаНУ) КАК СчетУчетаПолучательНУ,
	|	РегистрКорАналитикаВидаУчета.ПодразделениеОрганизации КАК ПодразделениеПолучатель,
	|	РегистрКорАналитикаУчетаЗатрат.СтатьяЗатрат КАК СтатьяЗатратПолучатель,
	|	ЕСТЬNULL(РегистрКорАналитикаУчетаЗатрат.ХарактерЗатрат, РегистрАналитикаУчетаЗатрат.ХарактерЗатрат) КАК ХарактерЗатрат,
	|	ЕСТЬNULL(РегистрКорАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа, РегистрАналитикаУчетаПрочихЗатрат.Субконто1) КАК НоменклатурнаяГруппаПолучатель,
	|	
	|	РегистрАналитикаУчетаПрочихЗатрат.Субконто1 КАК Субконто1,
	|	РегистрАналитикаУчетаПрочихЗатрат.Субконто2 КАК Субконто2,
	|	РегистрАналитикаУчетаПрочихЗатрат.Субконто3 КАК Субконто3,
	|	
	|	РегистрАналитикаУчетаПрочихЗатрат.СубконтоНУ1 КАК СубконтоНУ1,
	|	РегистрАналитикаУчетаПрочихЗатрат.СубконтоНУ2 КАК СубконтоНУ2,
	|	РегистрАналитикаУчетаПрочихЗатрат.СубконтоНУ3 КАК СубконтоНУ3,
	|	
	|	Затраты.КодОперации,
	|	
	|	СУММА(Затраты.Стоимость) КАК Стоимость,
	|	СУММА(Затраты.СтоимостьНУ) КАК СтоимостьНУ,
	|	СУММА(Затраты.ПостояннаяРазница) КАК ПостояннаяРазница
	|
	|ИЗ 
	|	Затраты КАК Затраты
	|		
	|	// Аналитика затрат
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|	ПО
	|		Затраты.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаЗатрат КАК РегистрАналитикаУчетаЗатрат
	|	ПО
	|		Затраты.АналитикаУчетаЗатрат = РегистрАналитикаУчетаЗатрат.Ссылка
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрАналитикаРаспределенияЗатрат
	|	ПО
	|		Затраты.АналитикаРаспределенияЗатрат = РегистрАналитикаРаспределенияЗатрат.Ссылка
	|		
	|	// Аналитика распределения
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрКорАналитикаВидаУчета
	|	ПО
	|		Затраты.КорАналитикаВидаУчета = РегистрКорАналитикаВидаУчета.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПрочихЗатрат КАК РегистрАналитикаУчетаПрочихЗатрат
	|	ПО
	|		Затраты.КорАналитикаВидаУчета = РегистрАналитикаУчетаПрочихЗатрат.Ссылка
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаЗатрат КАК РегистрКорАналитикаУчетаЗатрат
	|	ПО
	|		Затраты.КорАналитикаУчетаЗатрат = РегистрКорАналитикаУчетаЗатрат.Ссылка
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрКорАналитикаРаспределенияЗатрат
	|	ПО
	|		Затраты.КорАналитикаРаспределенияЗатрат = РегистрКорАналитикаРаспределенияЗатрат.Ссылка	
	|			
	|СГРУППИРОВАТЬ ПО
	|	РегистрАналитикаВидаУчета.СчетУчета,
	|	РегистрАналитикаВидаУчета.СчетУчетаНУ,
	|	РегистрАналитикаВидаУчета.ПодразделениеОрганизации,
	|	РегистрАналитикаУчетаЗатрат.СтатьяЗатрат,
	|	РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа,
	|	
	|	ЕСТЬNULL(РегистрКорАналитикаВидаУчета.СчетУчета, РегистрАналитикаУчетаПрочихЗатрат.СчетУчета),
	|	ЕСТЬNULL(РегистрКорАналитикаВидаУчета.СчетУчетаНУ, РегистрАналитикаУчетаПрочихЗатрат.СчетУчетаНУ),
	|	РегистрКорАналитикаВидаУчета.ПодразделениеОрганизации,
	|	РегистрКорАналитикаУчетаЗатрат.СтатьяЗатрат,
	|	ЕСТЬNULL(РегистрКорАналитикаУчетаЗатрат.ХарактерЗатрат, РегистрАналитикаУчетаЗатрат.ХарактерЗатрат),
	|	ЕСТЬNULL(РегистрКорАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа, РегистрАналитикаУчетаПрочихЗатрат.Субконто1),
	|	
	|	РегистрАналитикаУчетаПрочихЗатрат.Субконто1,
	|	РегистрАналитикаУчетаПрочихЗатрат.Субконто2,
	|	РегистрАналитикаУчетаПрочихЗатрат.Субконто3,
	|	
	|	РегистрАналитикаУчетаПрочихЗатрат.СубконтоНУ1,
	|	РегистрАналитикаУчетаПрочихЗатрат.СубконтоНУ2,
	|	РегистрАналитикаУчетаПрочихЗатрат.СубконтоНУ3,
	|	
	|	Затраты.КодОперации
	|			
	|УПОРЯДОЧИТЬ ПО
	|	РегистрАналитикаВидаУчета.СчетУчета,
	|	РегистрАналитикаВидаУчета.СчетУчетаНУ,
	|	РегистрАналитикаВидаУчета.ПодразделениеОрганизации,
	|	РегистрАналитикаУчетаЗатрат.СтатьяЗатрат,
	|	РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа,
	|	
	|	ЕСТЬNULL(РегистрКорАналитикаВидаУчета.СчетУчета, РегистрАналитикаУчетаПрочихЗатрат.СчетУчета),
	|	ЕСТЬNULL(РегистрКорАналитикаВидаУчета.СчетУчетаНУ, РегистрАналитикаУчетаПрочихЗатрат.СчетУчетаНУ),
	|	РегистрКорАналитикаВидаУчета.ПодразделениеОрганизации,
	|	РегистрКорАналитикаУчетаЗатрат.СтатьяЗатрат,
	|	ЕСТЬNULL(РегистрКорАналитикаУчетаЗатрат.ХарактерЗатрат, РегистрАналитикаУчетаЗатрат.ХарактерЗатрат),
	|	ЕСТЬNULL(РегистрКорАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа, РегистрАналитикаУчетаПрочихЗатрат.Субконто1),
	|
	|	РегистрАналитикаУчетаПрочихЗатрат.Субконто1,
	|	РегистрАналитикаУчетаПрочихЗатрат.Субконто2,
	|	РегистрАналитикаУчетаПрочихЗатрат.Субконто3,
	|	
	|	РегистрАналитикаУчетаПрочихЗатрат.СубконтоНУ1,
	|	РегистрАналитикаУчетаПрочихЗатрат.СубконтоНУ2,
	|	РегистрАналитикаУчетаПрочихЗатрат.СубконтоНУ3,
	|	
	|	Затраты.КодОперации";*/
			return null;
		}
		// СформироватьТекстЗапросаПоСтоимостиРаспределенныхЗатрат()
		// Функция формирует запрос по регистру "Учет затрат организаций".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
		//
		// Возвращаемое значение:
		//   Запрос – Запрос по регистру "Учет затрат организаций".
		//

		public object СформироватьЗапросПоСтоимостиРаспределенныхЗатрат(/*
	СтруктураШапкиДокумента
	*/)
		{
			/*МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;*/
			/*СформироватьВременнуюТаблицуКодовОперацийСписанияЗатрат(МенеджерВременныхТаблиц);*/
			/*СформироватьВременнуюТаблицуКодовОперацийПрямыхЗатрат(МенеджерВременныхТаблиц);*/
			/*ТекстЗапроса = СформироватьТекстЗапросаПоСтоимостиРаспределенныхЗатрат();*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.УстановитьПараметр("НачДата", СтруктураШапкиДокумента.мНачДата);*/
			/*Запрос.УстановитьПараметр("КонДата", СтруктураШапкиДокумента.мКонДата);*/
			/*Запрос.УстановитьПараметр("Регистратор", СтруктураШапкиДокумента.Ссылка);*/
			/*Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);*/
			return null;
		}
		// СформироватьЗапросПоСтоимостиРаспределенныхЗатрат()
		// Процедура формирует проводки по распределению затрат.
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров.
		//

		public void ФормированиеПроводокПоРаспределениюЗатрат(/*
	СтруктураШапкиДокумента,
	СтруктураНаборыЗаписей
	*/)
		{
			/*Запрос = СформироватьЗапросПоСтоимостиРаспределенныхЗатрат(СтруктураШапкиДокумента);*/
			/*РезультатЗапроса = Запрос.Выполнить();*/
			if(true/*РезультатЗапроса.Пустой()*/)
			{
			}
			/*Налоговый = ПланыСчетов.Налоговый;*/
			/*СоответствиеСчетаУчета = Новый Соответствие;*/
			/*СоответствиеСчетаУчета.Вставить(Налоговый.КосвенныеРасходыОсновногоПроизводства, Налоговый.ПрямыеРасходыОсновногоПроизводства);*/
			/*СоответствиеСчетаУчета.Вставить(Налоговый.КосвенныеРасходыВспомогательныхПроизводств, Налоговый.ПрямыеРасходыВспомогательныхПроизводств);*/
			/*СоответствиеСчетаУчета.Вставить(Налоговый.КосвенныеРасходыОбслуживающихПроизводств, Налоговый.ПрямыеРасходыОбслуживающихПроизводств);*/
			/*СоответствиеСчетаУчета.Вставить(Налоговый.КосвенныеОбщепроизводственныеРасходы, Налоговый.ПрямыеОбщепроизводственныеРасходы);*/
			/*СоответствиеСчетаУчета.Вставить(Налоговый.КосвенныеОбщехозяйственныеРасходы, Налоговый.ПрямыеОбщехозяйственныеРасходы);*/
			/*СоответствиеСчетаУчета.Вставить(Налоговый.КосвенныеРасходыПоВыявленномуБраку, Налоговый.ПрямыеРасходыПоВыявленномуБраку);*/
			/*СоответствиеСчетаУчета.Вставить(Налоговый.КосвенныеОбщепроизводственныеРасходыРаспределяемые, Налоговый.ПрямыеОбщепроизводственныеРасходы);*/
			/*СоответствиеСчетаУчета.Вставить(Налоговый.КосвенныеОбщехозяйственныеРасходыРаспределяемые, ПланыСчетов.Налоговый.ПрямыеОбщехозяйственныеРасходы);*/
			/*Выборка = РезультатЗапроса.Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				if(true/*СтруктураШапкиДокумента.ПоддержкаПБУ18*/)
				{
					/*ПостояннаяРазница = Выборка.ПостояннаяРазница;*/
					/*ВременнаяРазница = Выборка.Стоимость - Выборка.СтоимостьНУ - Выборка.ПостояннаяРазница;*/
				}
				if(true/*Выборка.КодОперации = Перечисления.КодыОперацийЗатраты.ЗакрытиеКосвенныхРасходовНУ
			 ИЛИ Выборка.КодОперации = Перечисления.КодыОперацийЗатраты.ЗакрытиеКосвенныхРасходовНУФикс*/)
				{
					/*СтруктураЗатраты = Новый Структура;*/
					/*СтруктураЗатраты.Вставить("СчетУчета", Выборка.СчетУчетаНУ);*/
					/*СтруктураЗатраты.Вставить("Подразделение", Выборка.Подразделение);*/
					/*СтруктураЗатраты.Вставить("НоменклатурнаяГруппа", Выборка.НоменклатурнаяГруппа);*/
					/*СтруктураЗатраты.Вставить("СтатьяЗатрат", Выборка.СтатьяЗатрат);*/
					/*ПроцедурыРасчетаСебестоимостиВыпуска.СформироватьДвиженияПоРегиструБухгалтерииЗакрытиеКосвенныхРасходов(
				СтруктураШапкиДокумента,
				СтруктураЗатраты,
				Выборка.СчетУчетаНУ,
				Выборка.СтоимостьНУ,
				ПостояннаяРазница,
				ВременнаяРазница,
				СтруктураНаборыЗаписей.Налоговый
			);*/
					/*// Если
*/
					/*// - применяется директ-костинг
*/
					/*// - расходы в БУ и НУ отражаются одинакого - на 90.08,
*/
					/*// то проводки по счету 26.01 формировать не нужно.
*/
					if(true/*СтруктураШапкиДокумента.ДиректКостинг
			   И Выборка.ХарактерЗатрат = Перечисления.ХарактерЗатрат.ОбщехозяйственныеРасходы
			   И СтруктураШапкиДокумента.УчетнаяПолитика.ДиректКостингСпособСписания = Перечисления.ДиректКостингСпособыСписания.НаУправленческиеРасходы*/)
					{
						/*ФормироватьПроводкиПоСчетуПрямыхРасходов = Ложь;*/
					}
					if(true/*(Выборка.СтоимостьНУ <> 0 
				ИЛИ ВременнаяРазница <> 0
				ИЛИ ПостояннаяРазница <> 0)
				И СтруктураШапкиДокумента.ПоддержкаПБУ18
				И ФормироватьПроводкиПоСчетуПрямыхРасходов*/)
					{
						/*НовыйСчетУчета = СоответствиеСчетаУчета[Выборка.СчетУчетаНУ];*/
						if(true/*Не ЗначениеЗаполнено(НовыйСчетУчета)*/)
						{
							/*Продолжить;*/
						}
						/*// Сумма,
*/
						/*// ПостояннаяРазница,
*/
						/*- Выборка.СтоимостьНУ - ВременнаяРазница - ПостояннаяРазница,
					СтруктураНаборыЗаписей.Налоговый
				);*/
					}
				}
			}
			/*;;*/
		}
		// ФормированиеПроводокПоРаспределениюЗатрат()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ПРОВОДОК ПО БУХГАЛТЕРСКОМУ И НАЛОГОВОМУ УЧЕТУ
		// Процедура формирует проводки по бухгалтерскому и налоговому учету.
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
		//

		public void ФормированиеДвиженийПоАналитическимРегистрам(/*СтруктураШапкиДокумента*/)
		{
			/*СтруктураНаборыЗаписей = РасширеннаяАналитикаУчета.ПолучитьНаборыЗаписейРегистров(СтруктураШапкиДокумента);*/
			/*МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;*/
			/*СформироватьВременнуюТаблицуАналитикаВидаУчетаВыпуск(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);*/
			/*СтруктураПараметров = Новый Структура;*/
			/*СтруктураПараметров.Вставить("Ссылка", СтруктураШапкиДокумента.Ссылка);*/
			/*СтруктураПараметров.Вставить("Дата", СтруктураШапкиДокумента.Дата);*/
			/*СтруктураПараметров.Вставить("Движения", СтруктураНаборыЗаписей);*/
			/*СтруктураПараметров.Вставить("ОтражатьВБухгалтерскомУчете", СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете);*/
			/*СтруктураПараметров.Вставить("ОтражатьВНалоговомУчете", СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете);*/
			/*СтруктураПараметров.Вставить("СтруктураКлючиАналитики", Новый Структура());*/
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете*/)
			{
				/*КорректировкаСтоимостиУчетЗатрат.СформироватьДвиженияПоРезультатамКорректировкиУпр(СтруктураПараметров);*/
			}
		}
		// ФормированиеПроводокПоРегламентированномуУчету()
		// Процедура формирует проводки по выручке по налоговому учету.
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
		//

		public void ФормированиеПроводокПоВыручкеДляНУ(/*СтруктураШапкиДокумента*/)
		{
			/*СтруктураНаборыЗаписей = РасширеннаяАналитикаУчета.ПолучитьНаборыЗаписейРегистров(СтруктураШапкиДокумента);*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;*/
			/*// ОтборСчетов
*/
			/*Истина);*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	*
	|ИЗ
	|	ВыручкаНУ
	|УПОРЯДОЧИТЬ ПО
	|	СчетУчетаНУ,
	|	Контрагент,
	|	ДоговорКонтрагента,
	|	НоменклатурнаяГруппа,
	|	Номенклатура,
	|	СтатьяПрочихДоходовИРасходов,
	|	РасчетыВУсловныхЕдиницах";*/
			/*ОценкаДоходовРасходовПоКурсуАвансов = БухгалтерскийУчетРасчетовСКонтрагентами.ПолучитьОценкуДоходовРасходовПоКурсуАвансов(СтруктураШапкиДокумента.Период);*/
			/*ТребуетсяКорректировкаПОНУ = (ОценкаДоходовРасходовПоКурсуАвансов Или СтруктураШапкиДокумента.ПоддержкаПБУ18);*/
			/*Результат = Запрос.Выполнить();*/
			if(true/*НЕ Результат.Пустой()*/)
			{
				/*Выборка = Результат.Выбрать();*/
				while(true/*Выборка.Следующий()*/)
				{
					if(true/*Выборка.Сумма <> 0
			  ИЛИ (Выборка.СчетУчетаНУ.Количественный И Выборка.Количество <> 0)*/)
					{
						/*Проводка = СтруктураНаборыЗаписей.Налоговый.Добавить();*/
						/*Проводка.Период = СтруктураШапкиДокумента.мКонДата;*/
						/*Проводка.Организация = СтруктураШапкиДокумента.Организация;*/
						/*Проводка.Содержание = "Реализация";*/
						/*Проводка.Сумма = Выборка.Сумма;*/
						/*Проводка.СчетДт = ПланыСчетов.Налоговый.ПоступлениеИВыбытиеИмуществаРаботУслугПрав;*/
						/*БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Контрагенты", Выборка.Контрагент);*/
						/*БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Договоры", Выборка.ДоговорКонтрагента);*/
						if(true/*Выборка.Количество >= 0*/)
						{
							/*БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "УсловияПоступленияИВыбытия", Перечисления.УсловияПоступленияИВыбытияИмущества.ЗаПлату);*/
						}
						/*Проводка.СчетКт = Выборка.СчетУчетаНУ;*/
						/*БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Номенклатура", Выборка.Номенклатура);*/
						/*БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НоменклатурныеГруппы", Выборка.НоменклатурнаяГруппа);*/
						/*БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ПрочиеДоходыИРасходы", Выборка.СтатьяПрочихДоходовИРасходов);*/
						if(true/*Проводка.СчетКт.Количественный*/)
						{
							/*Проводка.КоличествоКт = Выборка.Количество;*/
						}
					}
					/*//Постоянная разница
*/
					/*РасчетыВУсловныхЕдиницах = Выборка.РасчетыВУсловныхЕдиницах;*/
					/*ТекТребуетсяКорректировкаПОНУ = РасчетыВУсловныхЕдиницах ИЛИ ТребуетсяКорректировкаПОНУ;*/
					if(true/*Выборка.Корректировка <> 0 И ТекТребуетсяКорректировкаПОНУ*/)
					{
						/*РасчетыВУсловныхЕдиницах = Выборка.РасчетыВУсловныхЕдиницах;*/
						/*Проводка = СтруктураНаборыЗаписей.Налоговый.Добавить();*/
						/*Проводка.Период = СтруктураШапкиДокумента.мКонДата;*/
						/*Проводка.Организация = СтруктураШапкиДокумента.Организация;*/
						/*Проводка.Содержание = "Корректировка выручки по расчетам в " + ?(РасчетыВУсловныхЕдиницах, "у.е.", "валюте");*/
						/*ВидУчета = ?(Выборка.КорректировкуВключатьВДоходы, Перечисления.ВидыУчетаПоПБУ18.НУ, Перечисления.ВидыУчетаПоПБУ18.ПР);*/
						/*Проводка.ВидУчетаДт = ВидУчета;*/
						/*Проводка.ВидУчетаКт = ВидУчета;*/
						/*Проводка.Сумма = Выборка.Корректировка;*/
						/*Проводка.СчетДт = ПланыСчетов.Налоговый.ПоступлениеИВыбытиеИмуществаРаботУслугПрав;*/
						/*БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Контрагенты", Выборка.Контрагент);*/
						/*БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Договоры", Выборка.ДоговорКонтрагента);*/
						if(true/*Выборка.Количество >= 0*/)
						{
							/*БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "УсловияПоступленияИВыбытия", Перечисления.УсловияПоступленияИВыбытияИмущества.ЗаПлату);*/
						}
						/*Проводка.СчетКт = Выборка.СчетУчетаНУ;*/
						/*БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Номенклатура", Выборка.Номенклатура);*/
						/*БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НоменклатурныеГруппы", Выборка.НоменклатурнаяГруппа);*/
						/*БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ПрочиеДоходыИРасходы", Выборка.СтатьяПрочихДоходовИРасходов);*/
					}
				}
				/*;;*/
			}
			if(true/*СтруктураНаборыЗаписей.Налоговый.Модифицированность()*/)
			{
				/*СтруктураНаборыЗаписей.Налоговый.Записать(Ложь);*/
			}
		}
		// ФормированиеПроводокПоВыручкеДляНУ()
		// Процедура производит переквалификацию налоговых разниц при передачи спецодежды в эксплуатацию,
		// в случае, если она списывается на расходы не принимаемые в налоговом учете
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
		//

		public void ПереквалификацияРазницПриПередачеВЭксплуатацию(/*СтруктураШапкиДокумента*/)
		{
			/*Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	УчетЗатратРегл.АналитикаВидаУчета,
	|	УчетЗатратРегл.АналитикаУчетаЗатрат,
	|	УчетЗатратРегл.АналитикаУчетаПартий,
	|	УчетЗатратРегл.АналитикаРаспределенияЗатрат,
	|	МАКСИМУМ(УчетЗатратРегл.Стоимость) КАК СтоимостьБУ,
	|	МАКСИМУМ(УчетЗатратРегл.ПостояннаяРазница) КАК ПостояннаяРазница,
	|	СУММА(ВЫБОР
	|			КОГДА СпособыОтраженияРасходовПоАмортизацииСпособы.СтатьяЗатрат.ВидРасходовНУ = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения)
	|				ТОГДА СпособыОтраженияРасходовПоАмортизацииСпособы.Коэффициент
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НеПринимаемые,
	|	СУММА(СпособыОтраженияРасходовПоАмортизацииСпособы.Коэффициент) КАК Коэффициент,
	|	КлючАналитикаУчетаЗатрат.Затрата КАК Затрата,
	|	КлючАналитикаВидаУчета.СчетУчетаНУ,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СпособыОтраженияРасходовПоАмортизацииСпособы.СтатьяЗатрат.ВидРасходовНУ = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения)
	|				ТОГДА СпособыОтраженияРасходовПоАмортизацииСпособы.СтатьяЗатрат
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ) КАК СтатьяЗатрат
	|ИЗ
	|	РегистрНакопления.УчетЗатратРегл КАК УчетЗатратРегл
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаВидаУчета КАК КлючАналитикаВидаУчета
	|		ПО УчетЗатратРегл.АналитикаВидаУчета = КлючАналитикаВидаУчета.Ссылка
	|			И (КлючАналитикаВидаУчета.Организация = &Организация)
	|			И (КлючАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.МатериалыВЭксплуатации))
	|			И (КлючАналитикаВидаУчета.СчетУчетаНУ В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.СпецоснасткаИСпецодеждаВЭксплуатации)))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК КлючАналитикаУчетаПартий
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СпособыОтраженияРасходовПоАмортизации.Способы КАК СпособыОтраженияРасходовПоАмортизацииСпособы
	|			ПО КлючАналитикаУчетаПартий.НазначениеИспользования.СпособОтраженияРасходов = СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
	|		ПО УчетЗатратРегл.АналитикаУчетаПартий = КлючАналитикаУчетаПартий.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаЗатрат КАК КлючАналитикаУчетаЗатрат
	|		ПО УчетЗатратРегл.АналитикаУчетаЗатрат = КлючАналитикаУчетаЗатрат.Ссылка
	|ГДЕ
	|	УчетЗатратРегл.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И УчетЗатратРегл.Активность
	|	И УчетЗатратРегл.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОперацийПартииМатериаловВЭксплуатации.СписаниеПартийВЭксплуатацию)
	|	
	|СГРУППИРОВАТЬ ПО
	|	УчетЗатратРегл.АналитикаВидаУчета,
	|	УчетЗатратРегл.АналитикаУчетаЗатрат,
	|	УчетЗатратРегл.АналитикаУчетаПартий,
	|	УчетЗатратРегл.АналитикаРаспределенияЗатрат,
	|	КлючАналитикаУчетаЗатрат.Затрата,
	|	КлючАналитикаВидаУчета.СчетУчетаНУ
	|
	|УПОРЯДОЧИТЬ ПО
	|	УчетЗатратРегл.АналитикаВидаУчета,
	|	УчетЗатратРегл.АналитикаУчетаЗатрат,
	|	УчетЗатратРегл.АналитикаУчетаПартий,
	|	УчетЗатратРегл.АналитикаРаспределенияЗатрат,
	|	КлючАналитикаУчетаЗатрат.Затрата,
	|	КлючАналитикаВидаУчета.СчетУчетаНУ
	|");*/
			/*Запрос.УстановитьПараметр("Организация",СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("ДатаНачала",СтруктураШапкиДокумента.мНачДата);*/
			/*Запрос.УстановитьПараметр("ДатаОкончания",СтруктураШапкиДокумента.мКонДата);*/
			/*Результат = Запрос.Выполнить();*/
			if(true/*НЕ Результат.Пустой()*/)
			{
				/*СтруктураНаборыЗаписей = РасширеннаяАналитикаУчета.ПолучитьНаборыЗаписейРегистров(СтруктураШапкиДокумента);*/
				/*КэшПоИерархииСчетов = Новый Структура();*/
				/*СтруктураПараметров = Новый Структура();*/
				/*СтруктураПараметров.Вставить("ОтражатьВУправленческомУчете",Ложь);*/
				/*СтруктураПараметров.Вставить("ОтражатьВБухгалтерскомУчете",Ложь);*/
				/*СтруктураПараметров.Вставить("ОтражатьВНалоговомУчете",Истина);*/
				/*СтруктураПараметров.Вставить("Организация",СтруктураШапкиДокумента.Организация);*/
				/*СтруктураПараметров.Вставить("Дата",СтруктураШапкиДокумента.Дата);*/
				/*СтруктураПараметров.Вставить("Ссылка",СтруктураШапкиДокумента.Ссылка);*/
				/*СтруктураПараметров.Вставить("Движения",СтруктураНаборыЗаписей);*/
				/*Выборка = Результат.Выбрать();*/
				while(true/*Выборка.Следующий()*/)
				{
					/*СуммаПР = Выборка.СтоимостьБУ * Выборка.НеПринимаемые/Выборка.Коэффициент - Выборка.ПостояннаяРазница;*/
					if(true/*СуммаПР <> 0*/)
					{
						/*// АналитикаВидаУчета
*/
						/*// АналитикаУчетаЗатрат
*/
						/*// АналитикаУчетаПартий
*/
						/*// АналитикаУчетаВыпуска
*/
						/*// КорАналитикаВидаУчета
*/
						/*// КорАналитикаУчетаЗатрат
*/
						/*// КорАналитикаУчетаПартий
*/
						/*// КорАналитикаУчетаВыпуска
*/
						/*// Стоимость
*/
						/*// СтоимостьНУ
*/
						/*// ПостояннаяРазница
*/
						/*СтруктураНаборыЗаписей.УчетЗатрат
				);*/
						/*// АналитикаВидаУчета
*/
						/*// АналитикаУчетаЗатрат
*/
						/*// АналитикаУчетаПартий
*/
						/*// АналитикаУчетаВыпуска
*/
						/*// КорАналитикаВидаУчета
*/
						/*// КорАналитикаУчетаЗатрат
*/
						/*// КорАналитикаУчетаПартий
*/
						/*// КорАналитикаУчетаВыпуска
*/
						/*// Стоимость
*/
						/*// СтоимостьНУ
*/
						/*// ПостояннаяРазница
*/
						/*СтруктураНаборыЗаписей.УчетЗатрат
				);*/
						/*СтруктураПроводки = Новый Структура("Организация, СчетУчетаНУ, КорСчетУчетаНУ, КоличествоНУ, Затрата, КорЗатрата, КорСтатьяЗатрат, КодОперации",
					СтруктураШапкиДокумента.Организация,
					Выборка.СчетУчетаНУ,
					Выборка.СчетУчетаНУ,
					0,
					Выборка.Затрата,
					Выборка.Затрата,
					Выборка.СтатьяЗатрат,
					Перечисления.КодыОперацийПартииМатериаловВЭксплуатации.СписаниеПартийВЭксплуатацию);*/
						/*УправлениеЗапасамиРасширеннаяАналитика.ДобавитьПроводку(СтруктураПараметров,"Налоговый",СтруктураПроводки,КэшПоИерархииСчетов, СуммаПР, Перечисления.ВидыУчетаПоПБУ18.НУ);*/
					}
				}
				if(true/*СтруктураНаборыЗаписей.УчетЗатрат.Модифицированность()*/)
				{
					/*СтруктураНаборыЗаписей.УчетЗатрат.Записать(Ложь);*/
				}
				if(true/*СтруктураНаборыЗаписей.Налоговый.Модифицированность()*/)
				{
					/*СтруктураНаборыЗаписей.Налоговый.Записать(Ложь);*/
				}
			}
		}
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО ВЫПУСКУ УСЛУГ
		// Функция возвращает запрос по оказанным услугам в регл. учете
		//
		// Параметры:
		//  Запрос - запрос содержащий менеджер временных таблиц
		//  ДатаДокумента - дата, на которую получаются настройки параметров учета
		//  Организация - организация по которой рассчитывается себестоимость
		//
		// Возвращаемое значение:
		//   Результат запроса с данными об услугах и параметрах их учета.
		//

		public object ПолучитьДанныеПоВыпускУслугРеглУчет(/*Запрос, ДатаДокумента, Организация*/)
		{
			/*Запрос.Текст =
	"ВЫБРАТЬ
	|	АналитикаВидаУчета.Ссылка
	|
	|ПОМЕСТИТЬ ОтборПоАналитикеВидаУчета
	|ИЗ
	|	РегистрСведений.АналитикаУчетаПрочихЗатрат КАК АналитикаВидаУчета
	|ГДЕ
	|	АналитикаВидаУчета.Организация = &Организация
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	АналитикаВидаУчета.Ссылка
	|
	|ИЗ
	|	РегистрСведений.АналитикаВидаУчета КАК АналитикаВидаУчета
	|ГДЕ
	|	АналитикаВидаУчета.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетПродажИСебестоимостиОбороты.АналитикаВидаУчета,
	|	УчетПродажИСебестоимостиОбороты.АналитикаУчетаНоменклатуры,
	|	УчетПродажИСебестоимостиОбороты.АналитикаУчетаПартий,
	|	УчетПродажИСебестоимостиОбороты.КоличествоОборот
	|
	|ПОМЕСТИТЬ УчетПродажИСебестоимостиОбороты
	|ИЗ
	|	РегистрНакопления.УчетПродажИСебестоимости.Обороты(
	|		&ДатаНачала,
	|		&ДатаОкончания,
	|		,
	|		АналитикаВидаУчета В (
	|			ВЫБРАТЬ
	|				ОтборПоАналитикеВидаУчета.Ссылка
	|			ИЗ
	|				ОтборПоАналитикеВидаУчета КАК ОтборПоАналитикеВидаУчета
	|			)
	|		) КАК УчетПродажИСебестоимостиОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(УчетПродажИСебестоимостиОбороты.КоличествоОборот) КАК Количество,
	|	СУММА(УчетПродажИСебестоимостиОбороты.КоличествоОборот) КАК КоличествоНУ,
	|
	|	РегистрАналитикаРаспределенияЗатрат.Продукция КАК Номенклатура,
	|	РегистрАналитикаРаспределенияЗатрат.ХарактеристикаПродукции КАК ХарактеристикаНоменклатуры,
	|	РегистрАналитикаРаспределенияЗатрат.СерияПродукции КАК СерияНоменклатуры,
	|	РегистрАналитикаРаспределенияЗатрат.Продукция.ВидНоменклатуры КАК ВидНоменклатуры,
	|	РегистрАналитикаУчетаПартий.Заказ КАК Заказ,
	|	ЕСТЬNULL(РегистрАналитикаУчетаПрочихЗатрат.Субконто1,РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа) КАК Субконто1,
	|	ЕСТЬNULL(РегистрАналитикаУчетаПрочихЗатрат.СубконтоНУ1,РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа) КАК СубконтоНУ1
	|
	|ПОМЕСТИТЬ ДанныеНоменклатурыПолная
	|ИЗ
	|	УчетПродажИСебестоимостиОбороты КАК УчетПродажИСебестоимостиОбороты
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрАналитикаРаспределенияЗатрат
	|		ПО 
	|			УчетПродажИСебестоимостиОбороты.АналитикаУчетаНоменклатуры = РегистрАналитикаРаспределенияЗатрат.Ссылка
	|			И (РегистрАналитикаРаспределенияЗатрат.Продукция.ВидНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.АналитикаУчетаПрочихЗатрат КАК РегистрАналитикаУчетаПрочихЗатрат
	|		ПО 
	|			УчетПродажИСебестоимостиОбороты.АналитикаВидаУчета = РегистрАналитикаУчетаПрочихЗатрат.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.АналитикаУчетаПартий КАК РегистрАналитикаУчетаПартий
	|		ПО 
	|			УчетПродажИСебестоимостиОбороты.АналитикаУчетаПартий = РегистрАналитикаУчетаПартий.Ссылка
	|	
	|СГРУППИРОВАТЬ ПО
	|	РегистрАналитикаРаспределенияЗатрат.Продукция,
	|	РегистрАналитикаРаспределенияЗатрат.ХарактеристикаПродукции,
	|	РегистрАналитикаРаспределенияЗатрат.СерияПродукции,
	|	РегистрАналитикаУчетаПартий.Заказ,
	|	ЕСТЬNULL(РегистрАналитикаУчетаПрочихЗатрат.Субконто1,РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа),
	|	ЕСТЬNULL(РегистрАналитикаУчетаПрочихЗатрат.СубконтоНУ1,РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|	
	|УНИЧТОЖИТЬ УчетПродажИСебестоимостиОбороты
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|	
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеНоменклатурыПолная.Номенклатура КАК Номенклатура,
	|	ДанныеНоменклатурыПолная.ВидНоменклатуры КАК ВидНоменклатуры
	|	
	|ПОМЕСТИТЬ ДанныеНоменклатуры
	|ИЗ
	|	ДанныеНоменклатурыПолная КАК ДанныеНоменклатурыПолная";*/
			/*Запрос.Выполнить();*/
			/*СчетаУчетаВДокументах.СформироватьТаблицуПараметровУчетаУслуг(Запрос.МенеджерВременныхТаблиц, Организация, ДатаДокумента);*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеНоменклатуры.Номенклатура КАК Продукция,
	|	ДанныеНоменклатуры.ХарактеристикаНоменклатуры КАК ХарактеристикаПродукции,
	|	ДанныеНоменклатуры.СерияНоменклатуры КАК СерияПродукции,
	|	ВЫБОР
	|		КОГДА ДанныеНастроекПараметровУчета.ВестиУчетЗатратПоЗаказам
	|			ТОГДА ДанныеНоменклатуры.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	ДанныеНоменклатуры.Субконто1 КАК Субконто1,
	|	ДанныеНоменклатуры.СубконтоНУ1 КАК СубконтоНУ1,
	|	ДанныеНастроекПараметровУчета.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ДанныеНастроекПараметровУчета.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ДанныеНастроекПараметровУчета.СчетЗатрат КАК СчетУчетаЗатрат,
	|	ДанныеНастроекПараметровУчета.СчетЗатратНУ КАК СчетУчетаЗатратНУ,
	|	ДанныеНастроекПараметровУчета.СчетРасходовБУ КАК СчетУчета,
	|	ДанныеНастроекПараметровУчета.СчетРасходовНУ КАК СчетУчетаНУ,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Выпуск) КАК РазделУчета,
	|	ДанныеНоменклатуры.Количество КАК Количество,
	|	ДанныеНоменклатуры.КоличествоНУ КАК КоличествоНУ,
	|	ДанныеНастроекПараметровУчета.НоменклатураНастройки,
	|	ДанныеНастроекПараметровУчета.НомерСтроки,
	|	ДанныеНастроекПараметровУчета.Организация,
	|	ДанныеНастроекПараметровУчета.Приоритет
	|ИЗ
	|	ДанныеНоменклатурыПолная КАК ДанныеНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеНастроекПараметровУчета КАК ДанныеНастроекПараметровУчета
	|		ПО (ДанныеНастроекПараметровУчета.Номенклатура = ДанныеНоменклатуры.Номенклатура)
	|ГДЕ
	|	ДанныеНастроекПараметровУчета.СчетЗатрат В ИЕРАРХИИ(&КалькуляционныеСчета)";*/
			/*КалькуляционныеСчета = Новый Массив();*/
			/*// Счета, на которых рассчитывается себестоимость
*/
			/*КалькуляционныеСчета.Добавить(ПланыСчетов.Хозрасчетный.ОсновноеПроизводство);*/
			/*КалькуляционныеСчета.Добавить(ПланыСчетов.Хозрасчетный.ВспомогательныеПроизводства);*/
			/*КалькуляционныеСчета.Добавить(ПланыСчетов.Хозрасчетный.ОбслуживающиеПроизводства);*/
			/*Запрос.УстановитьПараметр("КалькуляционныеСчета", КалькуляционныеСчета);*/
			return null;
		}
		// Функция возвращает запрос по оказанным услугам в упр. учете
		//
		// Параметры:
		//  Запрос - запрос содержащий менеджер временных таблиц
		//  ДатаДокумента - дата, на которую получаются настройки параметров учета
		//
		// Возвращаемое значение:
		//   Результат запроса с данными об услугах и параметрах их учета.
		//

		public object ПолучитьДанныеПоВыпускУслугУпрУчет(/*Запрос, ДатаДокумента*/)
		{
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПродажиОбороты.Номенклатура КАК Номенклатура,
	|	ПродажиОбороты.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ПродажиОбороты.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ПродажиОбороты.ЗаказПокупателя КАК Заказ,
	|	ПродажиОбороты.КоличествоОборот КАК Количество,
	|	0 КАК КоличествоНУ
	|ПОМЕСТИТЬ ДанныеНоменклатурыПолная
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, , Номенклатура.ВидНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)) КАК ПродажиОбороты
	|;
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеНоменклатурыПолная.Номенклатура КАК Номенклатура,
	|	ДанныеНоменклатурыПолная.ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ДанныеНоменклатуры
	|ИЗ
	|	ДанныеНоменклатурыПолная КАК ДанныеНоменклатурыПолная";*/
			/*Запрос.Выполнить();*/
			/*СчетаУчетаВДокументах.СформироватьТаблицуПараметровУчетаУслуг(Запрос.МенеджерВременныхТаблиц, Справочники.Организации.ПустаяСсылка(), ДатаДокумента);*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеНоменклатуры.Номенклатура КАК Продукция,
	|	ДанныеНоменклатуры.ХарактеристикаНоменклатуры КАК ХарактеристикаПродукции,
	|	НЕОПРЕДЕЛЕНО КАК СерияПродукции,
	|	ДанныеНастроекПараметровУчета.Подразделение КАК Подразделение,
	|	ДанныеНастроекПараметровУчета.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ВЫБОР
	|		КОГДА ДанныеНастроекПараметровУчета.ВестиУчетЗатратПоЗаказам
	|			ТОГДА ДанныеНоменклатуры.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Выпуск) КАК РазделУчета,
	|	ДанныеНоменклатуры.Количество КАК Количество,
	|	ДанныеНоменклатуры.КоличествоНУ КАК КоличествоНУ,
	|	ДанныеНастроекПараметровУчета.НоменклатураНастройки,
	|	ДанныеНастроекПараметровУчета.НомерСтроки,
	|	ДанныеНастроекПараметровУчета.Организация,
	|	ДанныеНастроекПараметровУчета.Приоритет
	|ИЗ
	|	ДанныеНоменклатурыПолная КАК ДанныеНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеНастроекПараметровУчета КАК ДанныеНастроекПараметровУчета
	|		ПО (ДанныеНастроекПараметровУчета.Номенклатура = ДанныеНоменклатуры.Номенклатура)
	|ГДЕ
	|	ДанныеНастроекПараметровУчета.Подразделение.ВидПодразделения В(&ПроизводственныеПодразделения)";*/
			/*ПроизводственныеПодразделения = Новый Массив;*/
			/*// Виды подразделений, в которых рассчитываем себестоимость
*/
			/*ПроизводственныеПодразделения.Добавить(Перечисления.ВидыПодразделений.ОсновноеПроизводство);*/
			/*ПроизводственныеПодразделения.Добавить(Перечисления.ВидыПодразделений.ВспомогательноеПроизводство);*/
			/*Запрос.УстановитьПараметр("ПроизводственныеПодразделения", ПроизводственныеПодразделения);*/
			return null;
		}
		// Формирует движения по выпуску производственных услуг
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
		//

		public void СформироватьДвиженияПоВыпускуУслуг(/*СтруктураШапкиДокумента*/)
		{
			/*СтруктураНаборыЗаписей  = РасширеннаяАналитикаУчета.ПолучитьНаборыЗаписейРегистров(СтруктураШапкиДокумента);*/
			/*СтруктураКлючиАналитики = Новый Структура;*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;*/
			/*Запрос.УстановитьПараметр("Организация",	СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("ДатаНачала",		СтруктураШапкиДокумента.мНачГраница);*/
			/*Запрос.УстановитьПараметр("ДатаОкончания",	СтруктураШапкиДокумента.мКонГраница);*/
			/*Запрос.УстановитьПараметр("Дата",			СтруктураШапкиДокумента.Период);*/
			if(true/*СтруктураШапкиДокумента.ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете*/)
			{
				/*Результат = ПолучитьДанныеПоВыпускУслугУпрУчет(Запрос, СтруктураШапкиДокумента.Период);*/
			}
			if(true/*НЕ Результат.Пустой()*/)
			{
				/*Выборка = Результат.Выбрать();*/
				while(true/*Выборка.Следующий()*/)
				{
					/*СтруктраАналитикиВидаУчета = Новый Структура;*/
					/*СтруктраАналитикиВидаУчета.Вставить("РазделУчета", Перечисления.РазделыУчета.Выпуск);*/
					if(true/*СтруктураШапкиДокумента.ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете*/)
					{
						/*СтруктраАналитикиВидаУчета.Вставить("Подразделение",			Выборка.Подразделение);*/
					}
					/*АналитикаВидаУчетаИсточник = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
				СтруктураШапкиДокумента,
				СтруктраАналитикиВидаУчета,
				Перечисления.КлючиАналитики.АналитикаВидаУчета,
				СтруктураШапкиДокумента.ВидОтраженияВУчете,
				СтруктураКлючиАналитики
			);*/
					/*АналитикаУчетаЗатратИсточник = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
				СтруктураШапкиДокумента,
				Выборка,
				Перечисления.КлючиАналитики.АналитикаУчетаЗатрат,
				СтруктураШапкиДокумента.ВидОтраженияВУчете,
				СтруктураКлючиАналитики
			);*/
					/*АналитикаУчетаПартийИсточник = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
				СтруктураШапкиДокумента,
				Выборка,
				Перечисления.КлючиАналитики.АналитикаУчетаПартий,
				СтруктураШапкиДокумента.ВидОтраженияВУчете,
				СтруктураКлючиАналитики
			);*/
					/*АналитикаРаспределенияЗатратИсточник = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
				СтруктураШапкиДокумента,
				Выборка,
				Перечисления.КлючиАналитики.АналитикаРаспределенияЗатрат,
				СтруктураШапкиДокумента.ВидОтраженияВУчете,
				СтруктураКлючиАналитики
			);*/
					/*АналитикаУчетаПрочихЗатратПолучатель = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
				СтруктураШапкиДокумента,
				Выборка,
				Перечисления.КлючиАналитики.АналитикаУчетаПрочихЗатрат,
				СтруктураШапкиДокумента.ВидОтраженияВУчете,
				СтруктураКлючиАналитики
			);*/
					/*// АналитикаВидаУчета
*/
					/*// АналитикаУчетаЗатрат
*/
					/*// АналитикаУчетаПартий
*/
					/*// АналитикаУчетаВыпуска
*/
					/*// КорАналитикаВидаУчета
*/
					/*// КорАналитикаУчетаЗатрат
*/
					/*// КорАналитикаУчетаПартий
*/
					/*// КорАналитикаУчетаВыпуска
*/
					/*ВидДвиженияНакопления.Расход,
				Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииФиксВнешниеУслуги,
				Выборка.Количество,
				0,
				Выборка.КоличествоНУ,
				0,
				0,
				СтруктураНаборыЗаписей.УчетЗатрат
			);*/
					/*// АналитикаВидаУчета
*/
					/*// АналитикаУчетаЗатрат
*/
					/*// АналитикаУчетаПартий
*/
					/*// АналитикаУчетаВыпуска
*/
					/*// КорАналитикаВидаУчета
*/
					/*// КорАналитикаУчетаЗатрат
*/
					/*// КорАналитикаУчетаПартий
*/
					/*// КорАналитикаУчетаВыпуска
*/
					/*ВидДвиженияНакопления.Приход,
				Неопределено,
				Выборка.Количество,
				0,
				Выборка.КоличествоНУ,
				0,
				0,
				СтруктураНаборыЗаписей.УчетЗатрат			
			 );*/
				}
				/*;;*/
			}
			if(true/*СтруктураНаборыЗаписей.УчетЗатрат.Модифицированность()*/)
			{
				/*СтруктураНаборыЗаписей.УчетЗатрат.Записать(Ложь);*/
			}
		}
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ЗАПОЛНЕНИЯ СПОСОБОВ РАСПРЕДЕЛЕНИЯ

		public object ПолучитьСпособРаспределения(/*ЗначенияСвойствРаспределения, СпособыРаспределения*/)
		{
			/*Результат = Неопределено;*/
			return null;
		}
		// Функция формирует таблицу, содержащую способы распределения настройки закрытия месяца
		// Таблица упорядочена в порядке приоритета настроек
		//

		public object ПолучитьНастройкуРаспределения(/*НастройкаЗакрытияМесяца*/)
		{
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиЗакрытияМесяцаСпособыРаспределения.СпособРаспределения,
	|	НастройкиЗакрытияМесяцаСпособыРаспределения.ХарактерЗатрат,
	|	НастройкиЗакрытияМесяцаСпособыРаспределения.ВидПодразделения,
	|	НастройкиЗакрытияМесяцаСпособыРаспределения.Подразделение,
	|	НастройкиЗакрытияМесяцаСпособыРаспределения.СтатьяЗатрат
	|ИЗ
	|	Справочник.НастройкиЗакрытияМесяца.СпособыРаспределения КАК НастройкиЗакрытияМесяцаСпособыРаспределения
	|ГДЕ
	|	НастройкиЗакрытияМесяцаСпособыРаспределения.Ссылка = &Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	НастройкиЗакрытияМесяцаСпособыРаспределения.ХарактерЗатрат УБЫВ,
	|	НастройкиЗакрытияМесяцаСпособыРаспределения.ВидПодразделения УБЫВ,
	|	НастройкиЗакрытияМесяцаСпособыРаспределения.Подразделение УБЫВ,
	|	НастройкиЗакрытияМесяцаСпособыРаспределения.СтатьяЗатрат УБЫВ";*/
			/*Запрос.УстановитьПараметр("Ссылка", НастройкаЗакрытияМесяца);*/
			return null;
		}
		// Процедура заполняет регистр "СпособыРаспределенияСтатейЗатрат"
		//

		public void ЗаполнитьСпособыРаспределенияЗатратУпр(/*СтруктураШапкиДокумента, Отказ, Заголовок*/)
		{
			if(true/*НЕ ЗначениеЗаполнено(СтруктураШапкиДокумента.НастройкаЗакрытияМесяца)*/)
			{
			}
			/*НастройкаРаспределения = ПолучитьНастройкуРаспределения(СтруктураШапкиДокумента.НастройкаЗакрытияМесяца);*/
			if(true/*НастройкаРаспределения.Количество() = 0*/)
			{
				/*ТекстСообщения = "В настройке закрытия месяца не указаны способы распределения затрат.";*/
				/*ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ, Заголовок,, НастройкаРаспределения);*/
			}
			/*НаборЗаписейУпр = РегистрыСведений.СпособыРаспределенияСтатейЗатрат.СоздатьНаборЗаписей();*/
			/*НаборЗаписейУпр.Отбор.Период.Установить(НачалоМесяца(СтруктураШапкиДокумента.Дата));*/
			/*// Получим список затрат для которых требуется заполнить настройки
*/
			/*ТекстЗапроса =
	"ВЫБРАТЬ
	|	АналитикаВидаУчетаДанные.Ссылка
	|ПОМЕСТИТЬ АналитикаВидаУчетаДанные
	|ИЗ
	|	РегистрСведений.АналитикаВидаУчета КАК АналитикаВидаУчетаДанные
	|ГДЕ
	|	АналитикаВидаУчетаДанные.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Затраты)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетЗатратОстатки.АналитикаУчетаЗатрат КАК АналитикаУчетаЗатрат,
	|	УчетЗатратОстатки.АналитикаВидаУчета КАК АналитикаВидаУчета
	|	
	|ПОМЕСТИТЬ ТаблицаАналитикЗатрат
	|ИЗ
	|	РегистрНакопления.УчетЗатрат.Остатки(
	|			&КонецПериодаГраница,
	|			АналитикаВидаУчета В
	|				(ВЫБРАТЬ
	|					АналитикаВидаУчетаДанные.Ссылка
	|				ИЗ
	|					АналитикаВидаУчетаДанные)) КАК УчетЗатратОстатки
	|ГДЕ
	|	(УчетЗатратОстатки.КоличествоОстаток <> 0
	|			ИЛИ УчетЗатратОстатки.СтоимостьОстаток <> 0)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	УчетЗатратРасход.КорАналитикаУчетаЗатрат,
	|	УчетЗатратРасход.КорАналитикаВидаУчета
	|ИЗ
	|	РегистрНакопления.УчетЗатрат КАК УчетЗатратРасход
	|ГДЕ
	|	УчетЗатратРасход.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И УчетЗатратРасход.Активность
	|	И УчетЗатратРасход.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И УчетЗатратРасход.КорАналитикаВидаУчета В
	|			(ВЫБРАТЬ
	|				АналитикаВидаУчетаДанные.Ссылка
	|			ИЗ
	|				АналитикаВидаУчетаДанные)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АналитикаУчетаЗатратДанные.СтатьяЗатрат,
	|	АналитикаУчетаЗатратДанные.ХарактерЗатрат,
	|	АналитикаВидаУчетаДанные.Подразделение,
	|	АналитикаВидаУчетаДанные.Подразделение.ВидПодразделения КАК ВидПодразделения
	|ИЗ
	|	ТаблицаАналитикЗатрат КАК ТаблицаАналитикЗатрат
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.АналитикаУчетаЗатрат КАК АналитикаУчетаЗатратДанные
	|		ПО 
	|			ТаблицаАналитикЗатрат.АналитикаУчетаЗатрат = АналитикаУчетаЗатратДанные.Ссылка
	|			
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.АналитикаВидаУчета КАК АналитикаВидаУчетаДанные
	|		ПО 
	|			АналитикаВидаУчетаДанные.Ссылка = ТаблицаАналитикЗатрат.АналитикаВидаУчета
	|ГДЕ
	|	АналитикаУчетаЗатратДанные.ХарактерЗатрат В (
	|		ВЫБРАТЬ
	|			ХарактерЗатрат
	|		ИЗ
	|			РаспределяемыеХарактерыЗатрат)";*/
			/*СпособыРаспределения = НаборЗаписейУпр.ВыгрузитьКолонки();*/
			/*МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;*/
			/*СформироватьВременнуюТаблицуРаспределяемыхХарактеровЗатрат(СтруктураШапкиДокумента, МенеджерВременныхТаблиц);*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.УстановитьПараметр("НачалоПериода", 		 НачалоМесяца(СтруктураШапкиДокумента.Дата));*/
			/*Запрос.УстановитьПараметр("КонецПериода", 		 КонецМесяца(СтруктураШапкиДокумента.Дата));*/
			/*Запрос.УстановитьПараметр("КонецПериодаГраница", Новый Граница(КонецМесяца(СтруктураШапкиДокумента.Дата), ВидГраницы.Включая));*/
			/*Результат = Запрос.Выполнить();*/
			/*Выборка = Результат.Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				/*// Не добавляем настройку с пустой аналитикой
*/
				if(true/*НЕ ЗначениеЗаполнено(Выборка.СтатьяЗатрат) 
		 ИЛИ НЕ ЗначениеЗаполнено(Выборка.Подразделение)*/)
				{
					/*Продолжить;*/
				}
				/*НоваяСтрока = СпособыРаспределения.Добавить();*/
				/*НоваяСтрока.Период = НачалоМесяца(СтруктураШапкиДокумента.Дата);*/
				/*ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);*/
				if(true/*Выборка.ХарактерЗатрат = Перечисления.ХарактерЗатрат.ОбщехозяйственныеРасходы*/)
				{
					/*ХарактерРаспределенияЗатрат = Перечисления.ХарактерРаспределенияЗатрат.НеУчитыватьПодразделение;*/
				}
				/*НоваяСтрока.ХарактерРаспределенияЗатрат = ХарактерРаспределенияЗатрат;*/
				/*СпособРаспределения = ПолучитьСпособРаспределения(Выборка, НастройкаРаспределения);*/
				if(true/*СпособРаспределения = Неопределено*/)
				{
					/*НоваяСтрока.НеРаспределять = Истина;*/
				}
			}
			/*;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СпособыРаспределения.Период,
	|	СпособыРаспределения.СтатьяЗатрат,
	|	СпособыРаспределения.Подразделение,
	|	СпособыРаспределения.СпособРаспределенияЗатрат,
	|	СпособыРаспределения.НеРаспределять,
	|	СпособыРаспределения.ХарактерРаспределенияЗатрат
	|ПОМЕСТИТЬ СпособыРаспределения
	|ИЗ
	|	&СпособыРаспределения КАК СпособыРаспределения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получим противоречия в настройках
	|
	|ВЫБРАТЬ
	|	СпособыРаспределения.СтатьяЗатрат,
	|	СпособыРаспределения.Подразделение
	|ИЗ
	|	СпособыРаспределения КАК СпособыРаспределения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СпособыРаспределенияСтатейЗатрат.СрезПоследних(&Период, ) КАК СпособыРаспределенияСрезПоследних
	|		ПО (СпособыРаспределенияСрезПоследних.СтатьяЗатрат = СпособыРаспределения.СтатьяЗатрат)
	|			И (СпособыРаспределенияСрезПоследних.Подразделение = СпособыРаспределения.Подразделение)
	|ГДЕ
	|	(СпособыРаспределенияСрезПоследних.СпособРаспределенияЗатрат <> СпособыРаспределения.СпособРаспределенияЗатрат
	|			ИЛИ СпособыРаспределенияСрезПоследних.ХарактерРаспределенияЗатрат <> СпособыРаспределения.ХарактерРаспределенияЗатрат
	|			ИЛИ СпособыРаспределенияСрезПоследних.НеРаспределять <> СпособыРаспределения.НеРаспределять)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Отберем настройки, которых нет в регистре
	|
	|ВЫБРАТЬ
	|	СпособыРаспределения.Период,
	|	СпособыРаспределения.СтатьяЗатрат,
	|	СпособыРаспределения.Подразделение,
	|	СпособыРаспределения.СпособРаспределенияЗатрат,
	|	СпособыРаспределения.НеРаспределять,
	|	СпособыРаспределения.ХарактерРаспределенияЗатрат
	|ИЗ
	|	СпособыРаспределения КАК СпособыРаспределения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыРаспределенияСтатейЗатрат.СрезПоследних(&Период, ) КАК СпособыРаспределенияСрезПоследних
	|		ПО (СпособыРаспределенияСрезПоследних.Подразделение = СпособыРаспределения.Подразделение)
	|			И (СпособыРаспределенияСрезПоследних.СтатьяЗатрат = СпособыРаспределения.СтатьяЗатрат)
	|ГДЕ
	|	СпособыРаспределенияСрезПоследних.Период ЕСТЬ NULL";*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.УстановитьПараметр("СпособыРаспределения", СпособыРаспределения);*/
			/*Запрос.УстановитьПараметр("Период", 			  КонецМесяца(СтруктураШапкиДокумента.Дата));*/
			/*Результат = Запрос.ВыполнитьПакет();*/
			if(true/*НЕ Результат[1].Пустой()*/)
			{
				/*ТекстСообщения = "Обнаружены противоречия между настройкой закрытия месяца (закладка ""Распределение затрат"") и данными регистра ""Способы распределения статей затрат"".
						|Необходимо внести исправления в регистр ""Способы распределения статей затрат"".
						|Список противоречивых записей:";*/
				/*ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ, Заголовок, СтатусСообщения.Важное);*/
				/*// Выведим обнаруженные противоречия
*/
				/*Выборка = Результат[1].Выбрать();*/
				while(true/*Выборка.Следующий()*/)
				{
					/*ТекстСообщения = "Статья затрат: " + Выборка.СтатьяЗатрат 
							+ "; Подразделение: " + Выборка.Подразделение;*/
					/*ОбщегоНазначения.Сообщение(ТекстСообщения, СтатусСообщения.Информация, Заголовок);*/
				}
			}
			/*НаборЗаписейУпр.Загрузить(Результат[2].Выгрузить());*/
			/*НаборЗаписейУпр.Записать(Ложь);*/
		}
		// ЗаполнитьСпособыРаспределенияЗатратУпр
		// Процедура заполняет регистр "СпособыРаспределенияСтатейЗатратОрганизаций"
		//

		public void ЗаполнитьСпособыРаспределенияЗатратРегл(/*СтруктураШапкиДокумента, Отказ, Заголовок*/)
		{
			if(true/*НЕ ЗначениеЗаполнено(СтруктураШапкиДокумента.НастройкаЗакрытияМесяца)*/)
			{
			}
			/*НастройкаРаспределения = ПолучитьНастройкуРаспределения(СтруктураШапкиДокумента.НастройкаЗакрытияМесяца);*/
			if(true/*НастройкаРаспределения.Количество() = 0*/)
			{
				/*ТекстСообщения = "В настройке закрытия месяца не указаны способы распределения затрат.";*/
				/*ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ, Заголовок,, НастройкаРаспределения);*/
			}
			/*// Получим список затрат для которых требуется заполнить настройки
*/
			/*ТекстЗапроса = 
	"ВЫБРАТЬ
	|	АналитикаВидаУчетаДанные.Ссылка
	|ПОМЕСТИТЬ АналитикаВидаУчетаДанные
	|ИЗ
	|	РегистрСведений.АналитикаВидаУчета КАК АналитикаВидаУчетаДанные
	|ГДЕ
	|	АналитикаВидаУчетаДанные.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Затраты)
	|	И АналитикаВидаУчетаДанные.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПланСчетовЭлемент.Ссылка КАК Счет,
	|	ПланСчетовРодитель.Ссылка КАК СчетРодитель
	|ПОМЕСТИТЬ ДанныеПоСчетам
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетовРодитель
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный КАК ПланСчетовЭлемент
	|		ПО (ПланСчетовЭлемент.Родитель = ПланСчетовРодитель.Ссылка
	|				ИЛИ ПланСчетовЭлемент.Родитель.Родитель = ПланСчетовРодитель.Ссылка
	|				ИЛИ ПланСчетовЭлемент.Родитель.Родитель.Родитель = ПланСчетовРодитель.Ссылка)
	|ГДЕ
	|	ПланСчетовРодитель.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	И (НЕ ПланСчетовЭлемент.Ссылка ЕСТЬ NULL )
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ПланСчетовЭлемент.Ссылка,
	|	ПланСчетовРодитель.Ссылка
	|ИЗ
	|	ПланСчетов.Налоговый КАК ПланСчетовРодитель
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый КАК ПланСчетовЭлемент
	|		ПО (ПланСчетовЭлемент.Родитель = ПланСчетовРодитель.Ссылка
	|				ИЛИ ПланСчетовЭлемент.Родитель.Родитель = ПланСчетовРодитель.Ссылка
	|				ИЛИ ПланСчетовЭлемент.Родитель.Родитель.Родитель = ПланСчетовРодитель.Ссылка)
	|ГДЕ
	|	ПланСчетовРодитель.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|	И (НЕ ПланСчетовЭлемент.Ссылка ЕСТЬ NULL )
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетЗатратОстатки.АналитикаУчетаЗатрат КАК АналитикаУчетаЗатрат,
	|	УчетЗатратОстатки.АналитикаВидаУчета КАК АналитикаВидаУчета
	|	
	|ПОМЕСТИТЬ ТаблицаАналитикЗатрат
	|ИЗ
	|	РегистрНакопления.УчетЗатратРегл.Остатки(
	|			&КонецПериодаГраница,
	|			АналитикаВидаУчета В
	|				(ВЫБРАТЬ
	|					АналитикаВидаУчетаДанные.Ссылка
	|				ИЗ
	|					АналитикаВидаУчетаДанные)) КАК УчетЗатратОстатки
	|ГДЕ
	|	(УчетЗатратОстатки.КоличествоОстаток <> 0
	|			ИЛИ УчетЗатратОстатки.СтоимостьОстаток <> 0)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	УчетЗатратРасход.КорАналитикаУчетаЗатрат,
	|	УчетЗатратРасход.КорАналитикаВидаУчета
	|ИЗ
	|	РегистрНакопления.УчетЗатратРегл КАК УчетЗатратРасход
	|ГДЕ
	|	УчетЗатратРасход.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И УчетЗатратРасход.Активность
	|	И УчетЗатратРасход.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И УчетЗатратРасход.КорАналитикаВидаУчета В
	|			(ВЫБРАТЬ
	|				АналитикаВидаУчетаДанные.Ссылка
	|			ИЗ
	|				АналитикаВидаУчетаДанные)
	|;
	|	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналитикаУчетаЗатратДанные.СтатьяЗатрат,
	|	АналитикаУчетаЗатратДанные.ХарактерЗатрат,
	|	АналитикаВидаУчетаДанные.Организация,
	|	ДанныеПоСчетам.СчетРодитель КАК СчетЗатрат,
	|	ДанныеПоСчетамНУ.СчетРодитель КАК СчетЗатратНУ,
	|	АналитикаВидаУчетаДанные.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СоответствиеПодразделенийИПодразделенийОрганизаций.Подразделение) КАК КоличествоПодразделений,
	|	МАКСИМУМ(СоответствиеПодразделенийИПодразделенийОрганизаций.Подразделение.ВидПодразделения) КАК ВидПодразделения,
	|	МАКСИМУМ(СоответствиеПодразделенийИПодразделенийОрганизаций.Подразделение) КАК Подразделение
	|ИЗ
	|	ТаблицаАналитикЗатрат КАК ТаблицаАналитикЗатрат
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.АналитикаУчетаЗатрат КАК АналитикаУчетаЗатратДанные
	|		ПО 
	|			ТаблицаАналитикЗатрат.АналитикаУчетаЗатрат = АналитикаУчетаЗатратДанные.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.АналитикаВидаУчета КАК АналитикаВидаУчетаДанные
	|			
	|			ЛЕВОЕ СОЕДИНЕНИЕ 
	|				РегистрСведений.СоответствиеПодразделенийИПодразделенийОрганизаций КАК СоответствиеПодразделенийИПодразделенийОрганизаций
	|			ПО 
	|				АналитикаВидаУчетаДанные.Организация = СоответствиеПодразделенийИПодразделенийОрганизаций.Организация
	|				И АналитикаВидаУчетаДанные.ПодразделениеОрганизации = СоответствиеПодразделенийИПодразделенийОрганизаций.ПодразделениеОрганизации
	|			
	|			ЛЕВОЕ СОЕДИНЕНИЕ 
	|				ДанныеПоСчетам КАК ДанныеПоСчетам
	|			ПО 
	|				ДанныеПоСчетам.Счет = АналитикаВидаУчетаДанные.СчетУчета
	|			
	|			ЛЕВОЕ СОЕДИНЕНИЕ 
	|				ДанныеПоСчетам КАК ДанныеПоСчетамНУ
	|			ПО 
	|				ДанныеПоСчетамНУ.Счет = АналитикаВидаУчетаДанные.СчетУчетаНУ
	|		
	|		ПО АналитикаВидаУчетаДанные.Ссылка = ТаблицаАналитикЗатрат.АналитикаВидаУчета
	|	
	|ГДЕ
	|	АналитикаУчетаЗатратДанные.ХарактерЗатрат В (
	|		ВЫБРАТЬ
	|			ХарактерЗатрат
	|		ИЗ
	|			РаспределяемыеХарактерыЗатрат)
	|
	|СГРУППИРОВАТЬ ПО
	|	АналитикаУчетаЗатратДанные.СтатьяЗатрат,
	|	АналитикаУчетаЗатратДанные.ХарактерЗатрат,
	|	АналитикаВидаУчетаДанные.ПодразделениеОрганизации,
	|	АналитикаВидаУчетаДанные.Организация,
	|	ДанныеПоСчетам.СчетРодитель,
	|	ДанныеПоСчетамНУ.СчетРодитель";*/
			/*НаборЗаписейРегл = РегистрыСведений.СпособыРаспределенияСтатейЗатратОрганизаций.СоздатьНаборЗаписей();*/
			/*НаборЗаписейРегл.Отбор.Период.Установить(НачалоМесяца(СтруктураШапкиДокумента.Дата));*/
			/*СпособыРаспределения = НаборЗаписейРегл.ВыгрузитьКолонки();*/
			/*МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;*/
			/*СформироватьВременнуюТаблицуРаспределяемыхХарактеровЗатрат(СтруктураШапкиДокумента, МенеджерВременныхТаблиц);*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.УстановитьПараметр("НачалоПериода", 		 НачалоМесяца(СтруктураШапкиДокумента.Дата));*/
			/*Запрос.УстановитьПараметр("КонецПериода", 		 КонецМесяца(СтруктураШапкиДокумента.Дата));*/
			/*Запрос.УстановитьПараметр("КонецПериодаГраница", Новый Граница(КонецМесяца(СтруктураШапкиДокумента.Дата), ВидГраницы.Включая));*/
			/*Запрос.УстановитьПараметр("Организация", 		 СтруктураШапкиДокумента.Организация);*/
			/*Результат = Запрос.Выполнить();*/
			/*Выборка = Результат.Выбрать();*/
			/*СписокПропущенныхНастроек = Новый СписокЗначений;*/
			while(true/*Выборка.Следующий()*/)
			{
				/*// Не добавляем настройку с пустой аналитикой
*/
				if(true/*НЕ ЗначениеЗаполнено(Выборка.СтатьяЗатрат) 
		 ИЛИ НЕ ЗначениеЗаполнено(Выборка.ПодразделениеОрганизации)
		 ИЛИ НЕ ЗначениеЗаполнено(Выборка.СчетЗатрат)
		 ИЛИ ((НЕ ЗначениеЗаполнено(Выборка.СчетЗатратНУ)) 
				И (НЕ СтруктураШапкиДокумента.ОрганизацияПрименяетУСН))*/)
				{
					/*Продолжить;*/
				}
				/*ТекстСообщения = "";*/
				if(true/*Выборка.КоличествоПодразделений = 0*/)
				{
					/*ТекстСообщения = "C подразделением организации """ + Выборка.ПодразделениеОрганизации + """ не связано ни одно подразделение.";*/
				}
				if(true/*ТекстСообщения <> ""*/)
				{
					/*СписокПропущенныхНастроек.Добавить(Выборка.ПодразделениеОрганизации, ТекстСообщения);*/
					/*Продолжить;*/
				}
				/*НоваяСтрока = СпособыРаспределения.Добавить();*/
				/*НоваяСтрока.Период = НачалоМесяца(СтруктураШапкиДокумента.Дата);*/
				/*ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);*/
				/*НоваяСтрока.Подразделение = Выборка.ПодразделениеОрганизации;*/
				if(true/*Выборка.ХарактерЗатрат = Перечисления.ХарактерЗатрат.ОбщехозяйственныеРасходы*/)
				{
					/*ХарактерРаспределенияЗатрат = Перечисления.ХарактерРаспределенияЗатрат.НеУчитыватьПодразделение;*/
				}
				/*НоваяСтрока.ХарактерРаспределенияЗатрат = ХарактерРаспределенияЗатрат;*/
				/*СпособРаспределения = ПолучитьСпособРаспределения(Выборка, НастройкаРаспределения);*/
				if(true/*СпособРаспределения = Неопределено*/)
				{
					/*НоваяСтрока.НеРаспределять = Истина;*/
				}
			}
			if(true/*СписокПропущенныхНастроек.Количество() <> 0*/)
			{
				/*ТекстСообщения = "При заполнении способов распределения затрат возникли следующие ошибки:";*/
				/*СтрокаРодитель = ОбщегоНазначения.Сообщение(ТекстСообщения, СтатусСообщения.Важное, Заголовок, СтруктураШапкиДокумента.Ссылка);*/
			}
			/*// Отберем новые настройки
*/
			/*ТекстЗапроса =
	"ВЫБРАТЬ
	|	СпособыРаспределения.Период,
	|	СпособыРаспределения.Организация,
	|	СпособыРаспределения.СчетЗатрат,
	|	СпособыРаспределения.СчетЗатратНУ,
	|	СпособыРаспределения.СтатьяЗатрат,
	|	СпособыРаспределения.Подразделение,
	|	СпособыРаспределения.СпособРаспределенияЗатрат,
	|	СпособыРаспределения.НеРаспределять,
	|	СпособыРаспределения.ХарактерРаспределенияЗатрат
	|ПОМЕСТИТЬ СпособыРаспределения
	|ИЗ
	|	&СпособыРаспределения КАК СпособыРаспределения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Проверим, что нет противоречий в настройках
	|
	|ВЫБРАТЬ
	|	СпособыРаспределения.СчетЗатрат,
	|	СпособыРаспределения.СчетЗатратНУ,
	|	СпособыРаспределения.СтатьяЗатрат,
	|	СпособыРаспределения.Подразделение
	|ИЗ
	|	СпособыРаспределения КАК СпособыРаспределения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СпособыРаспределенияСтатейЗатратОрганизаций.СрезПоследних(&Период, ) КАК СпособыРаспределенияСрезПоследних
	|		ПО (СпособыРаспределенияСрезПоследних.СтатьяЗатрат = СпособыРаспределения.СтатьяЗатрат)
	|			И (СпособыРаспределенияСрезПоследних.Подразделение = СпособыРаспределения.Подразделение)
	|			И СпособыРаспределения.Организация = СпособыРаспределенияСрезПоследних.Организация
	|			И СпособыРаспределения.СчетЗатрат = СпособыРаспределенияСрезПоследних.СчетЗатрат
	|			И СпособыРаспределения.СчетЗатратНУ = СпособыРаспределенияСрезПоследних.СчетЗатратНУ
	|ГДЕ
	|	(СпособыРаспределенияСрезПоследних.СпособРаспределенияЗатрат <> СпособыРаспределения.СпособРаспределенияЗатрат
	|			ИЛИ СпособыРаспределенияСрезПоследних.ХарактерРаспределенияЗатрат <> СпособыРаспределения.ХарактерРаспределенияЗатрат
	|			ИЛИ СпособыРаспределенияСрезПоследних.НеРаспределять <> СпособыРаспределения.НеРаспределять)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Отберем настройки, которых нет в регистре
	|
	|ВЫБРАТЬ
	|	СпособыРаспределения.Период,
	|	СпособыРаспределения.Организация,
	|	СпособыРаспределения.СчетЗатрат,
	|	СпособыРаспределения.СчетЗатратНУ,
	|	СпособыРаспределения.СтатьяЗатрат,
	|	СпособыРаспределения.Подразделение,
	|	СпособыРаспределения.СпособРаспределенияЗатрат,
	|	СпособыРаспределения.НеРаспределять,
	|	СпособыРаспределения.ХарактерРаспределенияЗатрат
	|ИЗ
	|	СпособыРаспределения КАК СпособыРаспределения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыРаспределенияСтатейЗатратОрганизаций.СрезПоследних(&Период, ) КАК СпособыРаспределенияСрезПоследних
	|		ПО (СпособыРаспределенияСрезПоследних.СтатьяЗатрат = СпособыРаспределения.СтатьяЗатрат)
	|			И (СпособыРаспределенияСрезПоследних.Подразделение = СпособыРаспределения.Подразделение)
	|			И СпособыРаспределения.Организация = СпособыРаспределенияСрезПоследних.Организация
	|			И СпособыРаспределения.СчетЗатрат = СпособыРаспределенияСрезПоследних.СчетЗатрат
	|			И СпособыРаспределения.СчетЗатратНУ = СпособыРаспределенияСрезПоследних.СчетЗатратНУ
	|ГДЕ
	|	СпособыРаспределенияСрезПоследних.Период ЕСТЬ NULL ";*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.УстановитьПараметр("СпособыРаспределения", СпособыРаспределения);*/
			/*Запрос.УстановитьПараметр("Период", 			  КонецМесяца(СтруктураШапкиДокумента.Дата));*/
			/*Результат = Запрос.ВыполнитьПакет();*/
			if(true/*НЕ Результат[1].Пустой()*/)
			{
				/*ТекстСообщения = "Обнаружены противоречия между настройкой закрытия месяца (закладка ""Распределение затрат"") и данными регистра ""Способы распределения статей затрат организаций"".
						|Необходимо внести исправления в регистр ""Способы распределения статей затрат организаций""";*/
				/*ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ, Заголовок, СтатусСообщения.Важное);*/
				/*// Выведим обнаруженные противоречия
*/
				/*Выборка = Результат[1].Выбрать();*/
				while(true/*Выборка.Следующий()*/)
				{
					/*ТекстСообщения = "Статья затрат: " + Выборка.СтатьяЗатрат 
							+ "; Подразделение: " + Выборка.Подразделение
							+ "; Счет затрат: " + Выборка.СчетЗатрат
							+ "; Счет затрат (НУ): " + Выборка.СчетЗатратНУ;*/
					/*ОбщегоНазначения.Сообщение(ТекстСообщения, СтатусСообщения.Информация, Заголовок);*/
				}
			}
			/*НаборЗаписейРегл.Загрузить(Результат[2].Выгрузить());*/
			/*НаборЗаписейРегл.Записать(Ложь);*/
		}
		// ЗаполнитьСпособыРаспределенияЗатратРегл
		// Процедура формирует верменную таблицу "НормируемыеВидыРасходовНУ"
		//
		// Параметры:
		//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц
		//

		public void СформироватьВременнуюТаблицуНормируемыеВидыРасходовНУ(/*МенеджерВременныхТаблиц*/)
		{
			/*НормируемыеВидыРасходовНУ = Новый Массив;*/
			/*НормируемыеВидыРасходовНУ.Добавить(Перечисления.ВидыРасходовНУ.ДобровольноеЛичноеСтрахование);*/
			/*НормируемыеВидыРасходовНУ.Добавить(Перечисления.ВидыРасходовНУ.ДобровольноеЛичноеСтрахованиеНаСлучайСмертиИлиУтратыРаботоспособности);*/
			/*НормируемыеВидыРасходовНУ.Добавить(Перечисления.ВидыРасходовНУ.ДобровольноеСтрахованиеПоДоговорамДолгосрочногоСтрахованияЖизниРаботников);*/
			/*НормируемыеВидыРасходовНУ.Добавить(Перечисления.ВидыРасходовНУ.ПредставительскиеРасходы);*/
			/*НормируемыеВидыРасходовНУ.Добавить(Перечисления.ВидыРасходовНУ.РасходыНаРекламуНормируемые);*/
			/*ТаблицаНормируемыхВидовРасходовНУ = Новый ТаблицаЗначений;*/
			/*ТаблицаНормируемыхВидовРасходовНУ.Колонки.Добавить("ВидРасходовНУ", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыРасходовНУ"));*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидРасходовНУ
	|ПОМЕСТИТЬ 
	|	НормируемыеВидыРасходовНУ
	|ИЗ
	|	&ТаблицаНормируемыхВидовРасходовНУ КАК ТаблицаНормируемыхВидовРасходовНУ";*/
			/*Запрос.УстановитьПараметр("ТаблицаНормируемыхВидовРасходовНУ", ТаблицаНормируемыхВидовРасходовНУ);*/
			/*Запрос.Выполнить();*/
		}
		// Процедура формирует верменную таблицу "РаспределяемыеХарактерыЗатрат"
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура шапки документа "Расчет себестоимости"
		//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц
		//

		public void СформироватьВременнуюТаблицуРаспределяемыхХарактеровЗатрат(/*СтруктураШапкиДокумента, МенеджерВременныхТаблиц*/)
		{
			/*ХарактерыЗатрат = Новый Массив;*/
			/*ХарактерыЗатрат.Добавить(Перечисления.ХарактерЗатрат.ПроизводственныеРасходы);*/
			/*ХарактерыЗатрат.Добавить(Перечисления.ХарактерЗатрат.ОбщепроизводственныеРасходы);*/
			/*ХарактерыЗатрат.Добавить(Перечисления.ХарактерЗатрат.БракВПроизводстве);*/
			if(true/*НЕ СтруктураШапкиДокумента.ДиректКостинг*/)
			{
				/*ХарактерыЗатрат.Добавить(Перечисления.ХарактерЗатрат.ОбщехозяйственныеРасходы);*/
			}
			/*ТаблицаРаспределяемыхХарактеровЗатрат = Новый ТаблицаЗначений;*/
			/*ТаблицаРаспределяемыхХарактеровЗатрат.Колонки.Добавить("ХарактерЗатрат", Новый ОписаниеТипов("ПеречислениеСсылка.ХарактерЗатрат"));*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХарактерЗатрат
	|ПОМЕСТИТЬ 
	|	РаспределяемыеХарактерыЗатрат
	|ИЗ
	|	&ТаблицаРаспределяемыхХарактеровЗатрат КАК ТаблицаРаспределяемыхХарактеровЗатрат";*/
			/*Запрос.УстановитьПараметр("ТаблицаРаспределяемыхХарактеровЗатрат", ТаблицаРаспределяемыхХарактеровЗатрат);*/
			/*Запрос.Выполнить();*/
		}
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ПЕРЕНОСА ЗАТРАТ НА ВЫПУСК ПРОДУКЦИИ
		// Функция формирует запрос по регистру "Учет затрат" по разделу учета "Затраты на выпуск.
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
		//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
		//
		// Возвращаемое значение:
		//   Запрос – Запрос по регистрам "Выпуск продукции" и "Затраты на выпуск продукции".
		//

		public object СформироватьЗапросОстаткиЗатратНаВыпуск(/*
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	*/)
		{
			/*ТекстЗапросаСКомментариями =
	"ВЫБРАТЬ
	|	//ДляУпрУчета РегистрАналитикаВидаУчета.Подразделение,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.ПодразделениеОрганизации КАК Подразделение,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчета,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчетаНУ,
	|	РегистрАналитикаВидаУчета.РазделУчета,
	|	РегистрАналитикаВидаУчета.Организация,
	|	РегистрАналитикаВидаУчета.Ссылка
	|	
	|ПОМЕСТИТЬ АналитикаВидаУчетаЗатратыПоВыпускуНаработке
	|ИЗ
	|	РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|ГДЕ
	|	(РегистрАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.ЗатратыНаВыпуск)
	|		ИЛИ РегистрАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.ЗатратыПоНаработке))
	|	//ДляУпрУчета И РегистрАналитикаВидаУчета.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	//ДляРеглУчета И РегистрАналитикаВидаУчета.Организация = &Организация
	|;
	|
	|ВЫБРАТЬ
	|	УчетЗатрат.АналитикаВидаУчета,
	|	УчетЗатрат.АналитикаУчетаЗатрат,
	|	УчетЗатрат.АналитикаУчетаПартий,
	|	УчетЗатрат.АналитикаРаспределенияЗатрат,
	|
	|	//ДляРеглУчета УчетЗатрат.КоличествоНУОстаток КАК КоличествоНУ,
	|	//ДляРеглУчета УчетЗатрат.СтоимостьНУОстаток КАК СтоимостьНУ,
	|	//ДляРеглУчета УчетЗатрат.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
	|	
	|	УчетЗатрат.КоличествоОстаток КАК Количество,
	|	УчетЗатрат.СтоимостьОстаток КАК Стоимость
	|
	|ПОМЕСТИТЬ УчетЗатратОстатки
	|ИЗ
	|	РегистрНакопления.УчетЗатрат%СуффиксРегл%.Остатки(&КонГраница,
	|		АналитикаВидаУчета В (
	|			ВЫБРАТЬ
	|				Ссылка
	|			ИЗ  
	|				АналитикаВидаУчетаЗатратыПоВыпускуНаработке
	|			)
	|	) КАК УчетЗатрат
	|;
	|
	|ВЫБРАТЬ
	|	УчетЗатрат.АналитикаВидаУчета,
	|	УчетЗатрат.АналитикаУчетаЗатрат,
	|	УчетЗатрат.АналитикаУчетаПартий,
	|	УчетЗатрат.АналитикаРаспределенияЗатрат,
	|
	|	ВыпускПродукции.АналитикаВидаУчета КАК АналитикаВидаУчетаВыпуск,
	|	ВыпускПродукции.АналитикаУчетаПартий КАК АналитикаУчетаПартийВыпуск,
	|	ВыпускПродукции.АналитикаРаспределенияЗатрат КАК АналитикаРаспределенияЗатратВыпуск,
	|	
	|	// Аналитика вида учета.
	|	РегистрАналитикаВидаУчета.Подразделение,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчета,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчетаНУ,
	|	
	|	//ДляУпрУчета 0 КАК КоличествоНУ,
	|	//ДляУпрУчета 0 КАК СтоимостьНУ,
	|	//ДляУпрУчета 0 КАК ПостояннаяРазница,
	|
	|	//ДляРеглУчета УчетЗатрат.КоличествоНУ,
	|	//ДляРеглУчета УчетЗатрат.СтоимостьНУ,
	|	//ДляРеглУчета УчетЗатрат.ПостояннаяРазница,
	|
	|	ВыпускПродукции.Количество КАК КоличествоВыпуск,
	|
	|	УчетЗатрат.Количество,
	|	УчетЗатрат.Стоимость
	|ИЗ
	|	УчетЗатратОстатки КАК УчетЗатрат
	|		 
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		АналитикаВидаУчетаЗатратыПоВыпускуНаработке КАК РегистрАналитикаВидаУчета 
	|	ПО 
	|		УчетЗатрат.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|		 
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрАналитикаРаспределенияЗатрат
	|	ПО 
	|		УчетЗатрат.АналитикаРаспределенияЗатрат = РегистрАналитикаРаспределенияЗатрат.Ссылка
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВыпускПродукции КАК ВыпускПродукции
	|	ПО
	|		УчетЗатрат.АналитикаУчетаПартий = ВыпускПродукции.АналитикаУчетаПартий
	|		И УчетЗатрат.АналитикаРаспределенияЗатрат = ВыпускПродукции.АналитикаРаспределенияЗатрат
	|		И РегистрАналитикаВидаУчета.РазделУчета = ВыпускПродукции.РазделУчетаЗатрат
	|		И РегистрАналитикаВидаУчета.Организация = ВыпускПродукции.Организация
	|		И РегистрАналитикаВидаУчета.Подразделение = ВыпускПродукции.Подразделение
	|		//ДляРеглУчета И РегистрАналитикаВидаУчета.СчетУчета = ВыпускПродукции.СчетУчета
	|		//ДляРеглУчета И РегистрАналитикаВидаУчета.СчетУчетаНУ = ВыпускПродукции.СчетУчетаНУ
	|
	|УПОРЯДОЧИТЬ ПО
	|	УчетЗатрат.АналитикаВидаУчета,
	|	УчетЗатрат.АналитикаУчетаЗатрат,
	|	УчетЗатрат.АналитикаУчетаПартий,
	|	УчетЗатрат.АналитикаРаспределенияЗатрат
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ АналитикаВидаУчетаЗатратыПоВыпускуНаработке
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ УчетЗатратОстатки";*/
			/*ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.УстановитьПараметр("НачГраница", СтруктураШапкиДокумента.мНачГраница);*/
			/*Запрос.УстановитьПараметр("КонГраница", СтруктураШапкиДокумента.мКонГраница);*/
			/*Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);*/
			return null;
		}
		// СформироватьЗапросОстаткиЗатратНаВыпуск()
		// Процедура переноса затрат на себестоимость выпуска продукции.
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура – Реквизиты документа "Расчет себестоимости"
		//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров.
		//

		public void ПереносЗатратНаВыпускПродукции(/*
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц,
	СтруктураНаборыЗаписей
	*/)
		{
			/*ЗапросОстаткиЗатратНаВыпуск = СформироватьЗапросОстаткиЗатратНаВыпуск(
		СтруктураШапкиДокумента, 
		МенеджерВременныхТаблиц
	);*/
			/*РезультатЗапросаОстаткиЗатрат = ЗапросОстаткиЗатратНаВыпуск.Выполнить();*/
			if(true/*РезультатЗапросаОстаткиЗатрат.Пустой()*/)
			{
			}
			/*Выборка = РезультатЗапросаОстаткиЗатрат.Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				/*// Движения "Расход" по исходной аналитике.
*/
				/*// КорАналитикаУчетаЗатрат,
*/
				/*// КодОперации
*/
				/*Выборка.Количество,
			Выборка.Стоимость,
			Выборка.КоличествоНУ,
			Выборка.СтоимостьНУ,
			Выборка.ПостояннаяРазница,
			СтруктураНаборыЗаписей.УчетЗатрат
		);*/
				/*// Движения "Приход" по аналитике выпуска.
*/
				/*// АналитикаУчетаЗатрат,
*/
				/*// КодОперации
*/
				/*// Количество
*/
				/*// КоличествоНУ
*/
				/*Выборка.СтоимостьНУ,
			Выборка.ПостояннаяРазница,
			СтруктураНаборыЗаписей.УчетЗатрат
		);*/
			}
			if(true/*СтруктураНаборыЗаписей.УчетЗатрат.Модифицированность()*/)
			{
				/*СтруктураНаборыЗаписей.УчетЗатрат.Записать(Ложь);*/
			}
		}
		// ПереносЗатратНаВыпускПродукции()
		// Процедура получает ключи аналитики для распределения затрат.
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Строка выборки из результата запроса
		//	СтрокаВыборкиЗатрат - ВыборкаИзРезультатаЗапроса - Строка выборки из результата запроса
		//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отражения в учете для получения ключа аналитики
		//	РаспределениеНаНЗП - Булево - Признак распределения на остаток НЗП
		//	СтруктураКлючиАналитики - Структура - Структура с таблицами ключей аналитики для кэширования данных
		//
		// Выходные параметры:
		//	АналитикаВидаУчета - СправочникСсылка.КлючиАналитикиВидаУчета - Ключ аналитики
		//	АналитикаУчетаЗатрат - СправочникСсылка.КлючиАналитикиУчетаЗатрат - Ключ аналитики
		//

		public void ПолучитьАналитикуРаспределенияЗатратНаВыпуск(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	СтрокаВыборкиЗатрат,
	ВидОтраженияВУчете,
	РаспределениеНаНЗП,
	СтруктураКлючиАналитики,
	АналитикаВидаУчета,
	АналитикаУчетаЗатрат
	*/)
		{
			if(true/*Не ЗначениеЗаполнено(АналитикаВидаУчета)*/)
			{
				/*СтруктураПараметров = Новый Структура;*/
				if(true/*РаспределениеНаНЗП*/)
				{
					/*СтруктураПараметров.Вставить("РазделУчета", Перечисления.РазделыУчета.Затраты);*/
				}
				if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете*/)
				{
					/*СтруктураПараметров.Вставить("Подразделение", СтрокаВыборки.Подразделение);*/
				}
				if(true/*СтрокаВыборки.РаспределениеПоПродажам*/)
				{
					/*КлючАналитики = Перечисления.КлючиАналитики.АналитикаУчетаПрочихЗатрат;*/
				}
				/*АналитикаВидаУчета = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
			СтруктураШапкиДокумента,
			СтруктураПараметров,
			КлючАналитики,
			ВидОтраженияВУчете,
			СтруктураКлючиАналитики
		);*/
			}
			if(true/*Не ЗначениеЗаполнено(АналитикаУчетаЗатрат)
	   И Не СтрокаВыборки.РаспределениеПоПродажам*/)
			{
				/*АналитикаУчетаЗатрат = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
			СтруктураШапкиДокумента,
			СтрокаВыборкиЗатрат,
			Перечисления.КлючиАналитики.АналитикаУчетаЗатрат,
			ВидОтраженияВУчете,
			СтруктураКлючиАналитики
		);*/
			}
		}
	}
}

