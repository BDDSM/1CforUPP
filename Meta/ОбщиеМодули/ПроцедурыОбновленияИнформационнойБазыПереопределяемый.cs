using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace V82.ОбщиеМодули
{
	public partial class ПроцедурыОбновленияИнформационнойБазыПереопределяемый
	{
		///////////////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ БСП
		// Возвращает номер версии Библиотеки УПП
		//

		public object ВерсияБиблиотеки(/**/)
		{
			return null;
		}
		// Возвращает список процедур-обработчиков обновления библиотеки
		//
		// Возвращаемое значение:
		//   Структура - описание полей структуры см. в функции
		//               ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления()

		public object ОбработчикиОбновления(/**/)
		{
			/*Обработчики = ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления();*/
			/*Обработчик = Обработчики.Добавить();*/
			/*Обработчик.Версия       = "2.5.1.1";*/
			/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазыПереопределяемый.ПервыйЗапуск";*/
			/*ЭтоНеПериферияРИБ = Не ЗначениеЗаполнено(ПланыОбмена.ГлавныйУзел());*/
			/*// 2.5.38.1
*/
			/*//
*/
			/*// 2.5.39.1
*/
			/*//
*/
			if(true/*ЭтоНеПериферияРИБ*/)
			{
				/*Обработчик = Обработчики.Добавить();*/
				/*Обработчик.Версия       = "2.5.39.1";*/
				/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазыПереопределяемый.УстановитьКодЭлементаРасходыПоУплатеСтраховыхВзносов";*/
				/*Обработчик.Опциональный = Истина;*/
				/*Обработчик = Обработчики.Добавить();*/
				/*Обработчик.Версия       = "2.5.39.1";*/
				/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазыПереопределяемый.ОбновитьРегистрСведенийСсылкиНаСайтеИТС";*/
				/*Обработчик.Опциональный = Истина;*/
			}
			/*// 2.5.40.3
*/
			/*//
*/
			if(true/*ЭтоНеПериферияРИБ*/)
			{
				/*Обработчик = Обработчики.Добавить();*/
				/*Обработчик.Версия       = "2.5.40.3";*/
				/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазыПереопределяемый.ОбновитьСписокСсылокССайтаИТС";*/
				/*Обработчик.Опциональный = Истина;*/
				/*Обработчик = Обработчики.Добавить();*/
				/*Обработчик.Версия       = "2.5.40.3";*/
				/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазыПереопределяемый.ЗаполнитьУчетнуюПолитикуПоОценочнымОбязательствам";*/
				/*Обработчик.Опциональный = Истина;*/
				/*Обработчик = Обработчики.Добавить();*/
				/*Обработчик.Версия       = "2.5.40.3";*/
				/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазыПереопределяемый.ОбработатьИзмененияСчета96";*/
				/*Обработчик.Опциональный = Истина;*/
			}
			/*Обработчик = Обработчики.Добавить();*/
			/*Обработчик.Версия       = "2.5.40.3";*/
			/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ПрописатьФИОДетейПилотногоПроекта";*/
			/*Обработчик.Опциональный = Истина;*/
			/*// 2.5.41.3
*/
			/*//
*/
			/*Обработчик = Обработчики.Добавить();*/
			/*Обработчик.Версия       = "2.5.41.3";*/
			/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ПрописатьФИОДетейПилотногоПроекта";*/
			/*Обработчик.Опциональный = Истина;*/
			/*Обработчик = Обработчики.Добавить();*/
			/*Обработчик.Версия       = "2.5.41.3";*/
			/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьКоличествоДнейОтпусковОрганизаций";*/
			/*Обработчик.Опциональный = Истина;*/
			/*Обработчик = Обработчики.Добавить();*/
			/*Обработчик.Версия       = "2.5.41.3";*/
			/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.УстановитьДоступностьОтпускаВсемСотрудникамЕслиЗаполненоКоличествоДней";*/
			/*Обработчик.Опциональный = Истина;*/
			/*// 2.5.42.3, 2.5.42.4 
*/
			/*//
*/
			if(true/*ЭтоНеПериферияРИБ*/)
			{
				/*Обработчик = Обработчики.Добавить();*/
				/*Обработчик.Версия       = "2.5.42.4";*/
				/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ОбновлениеВычетовНДФЛНоябрь2011";*/
				/*Обработчик.Опциональный = Истина;*/
			}
			/*Обработчик = Обработчики.Добавить();*/
			/*Обработчик.Версия       = "2.5.42.3";*/
			/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазыПереопределяемый.ЗаполнитьСведенияОЗаймах";*/
			/*Обработчик.Опциональный = Истина;*/
			/*Обработчик = Обработчики.Добавить();*/
			/*Обработчик.Версия       = "2.5.42.3";*/
			/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ОбработкаМесяцаРасчетногоПериода";*/
			/*Обработчик.Опциональный = Истина;*/
			/*Обработчик = Обработчики.Добавить();*/
			/*Обработчик.Версия       = "2.5.42.3";*/
			/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ОбновлениеВычетовФизлицНоябрь2011";*/
			/*Обработчик.Опциональный = Истина;*/
			/*Обработчик = Обработчики.Добавить();*/
			/*Обработчик.Версия       = "2.5.42.3";*/
			/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ОбновитьНастройкиОтчетаПоМедицинскомуСтрахованию";*/
			/*Обработчик.Опциональный = Истина;*/
			/*Обработчик = Обработчики.Добавить();*/
			/*Обработчик.Версия       = "2.5.42.3";*/
			/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ЗагрузитьНастройкиОтчетов";*/
			/*Обработчик.Опциональный = Истина;*/
			/*// 2.5.43.3
*/
			/*//
*/
			if(true/*ЭтоНеПериферияРИБ*/)
			{
				/*Обработчик = Обработчики.Добавить();*/
				/*Обработчик.Версия       = "2.5.43.3";*/
				/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ИндексироватьПособияСоцСтрахования2012";*/
				/*Обработчик.Опциональный = Истина;*/
				/*Обработчик = Обработчики.Добавить();*/
				/*Обработчик.Версия       = "2.5.43.3";*/
				/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ВписатьТарифыСтраховыхВзносов2012";*/
				/*Обработчик.Опциональный = Истина;*/
				/*Обработчик = Обработчики.Добавить();*/
				/*Обработчик.Версия       = "2.5.43.3";*/
				/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ОбновлениеДоходовВычетовНДФЛДекабрь2011";*/
				/*Обработчик.Опциональный = Истина;*/
				/*Обработчик = Обработчики.Добавить();*/
				/*Обработчик.Версия       = "2.5.43.3";*/
				/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.СозданиеВРБанковскиеИздержкиПоИЛ";*/
				/*Обработчик.Опциональный = Истина;*/
				/*Обработчик = Обработчики.Добавить();*/
				/*Обработчик.Версия       = "2.5.43.3";*/
				/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ОбновлениеДокументовИсполнительныйЛист";*/
				/*Обработчик.Опциональный = Истина;*/
				/*Обработчик = Обработчики.Добавить();*/
				/*Обработчик.Версия       = "2.5.43.3";*/
				/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьПроизводственныйКалендарьЗа2012Год";*/
				/*Обработчик.Опциональный = Истина;*/
			}
			/*Обработчик = Обработчики.Добавить();*/
			/*Обработчик.Версия       = "2.5.43.3";*/
			/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьКраткийСоставСохраненныхНастроек";*/
			/*Обработчик.Опциональный = Истина;*/
			/*Обработчик = Обработчики.Добавить();*/
			/*Обработчик.Версия       = "2.5.43.3";*/
			/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ПрописатьВидЗастрахованногоЛица";*/
			/*Обработчик.Опциональный = Истина;*/
			/*// Минимальный релиз для обновления с ЗиК - 318
*/
			/*Обработчик = Обработчики.Добавить();*/
			/*Обработчик.Версия       = "2.5.43.3";*/
			/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьПредопределенныеЭлементы77";*/
			/*Обработчик.Опциональный = Истина;*/
			/*Обработчик = Обработчики.Добавить();*/
			/*Обработчик.Версия       = "2.5.43.3";*/
			/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ОчиститьЗагруженныеПравилаПереноса";*/
			/*Обработчик.Опциональный = Истина;*/
			/*// 2.5.45.3
*/
			/*//
*/
			if(true/*ЭтоНеПериферияРИБ*/)
			{
				/*Обработчик = Обработчики.Добавить();*/
				/*Обработчик.Версия       = "2.5.45.1";*/
				/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ОбновлениеДоходовВычетовНДФЛЯнварь2012";*/
				/*Обработчик.Опциональный = Истина;*/
			}
			/*Обработчик = Обработчики.Добавить();*/
			/*Обработчик.Версия       = "2.5.45.1";*/
			/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ОбработкаСправок2НДФЛза2011год";*/
			/*Обработчик.Опциональный = Истина;*/
			/*// 2.5.47.1
*/
			/*//
*/
			if(true/*ЭтоНеПериферияРИБ*/)
			{
				/*Обработчик = Обработчики.Добавить();*/
				/*Обработчик.Версия       = "2.5.47.1";*/
				/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.СозданиеВРИЛВПрожиточныхМинимумах";*/
				/*Обработчик.Опциональный = Истина;*/
			}
			/*Обработчик = Обработчики.Добавить();*/
			/*Обработчик.Версия       = "2.5.47.1";*/
			/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьКонтрольРазмераСтавокШтатногоРасписания";*/
			/*Обработчик.Опциональный = Истина;*/
			/*Обработчик = Обработчики.Добавить();*/
			/*Обработчик.Версия       = "2.5.47.1";*/
			/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ЗаполнениеРеквизитовУчетныхЗаписейПриОбновлении";*/
			/*Обработчик.Опциональный = Истина;*/
			/*Обработчик = Обработчики.Добавить();*/
			/*Обработчик.Версия       = "2.5.47.1";*/
			/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ОбновлениеИсполнительныхЛистов";*/
			/*Обработчик.Опциональный = Истина;*/
			/*Обработчик = Обработчики.Добавить();*/
			/*Обработчик.Версия       = "2.5.47.1";*/
			/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ЗагрузитьНастройкиОтчетов";*/
			/*Обработчик.Опциональный = Истина;*/
			/*// 2.5.48.1
*/
			/*//
*/
			if(true/*ЭтоНеПериферияРИБ*/)
			{
				/*Обработчик = Обработчики.Добавить();*/
				/*Обработчик.Версия       = "2.5.48.1";*/
				/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ОбновитьВидСтажаСЗВ4ОтпускаПоУходуЗаРебенком";*/
				/*Обработчик.Опциональный = Истина;*/
			}
			/*Обработчик = Обработчики.Добавить();*/
			/*Обработчик.Версия       = "2.5.48.1";*/
			/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ПеренестиВыходныеДниМая2012";*/
			/*Обработчик.Опциональный = Истина;*/
			/*// 2.5.51.1
*/
			/*//
*/
			if(true/*ЭтоНеПериферияРИБ*/)
			{
				/*Обработчик = Обработчики.Добавить();*/
				/*Обработчик.Версия       = "2.5.51.1";*/
				/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ИндексироватьПособиеНаПогребение2012";*/
				/*Обработчик.Опциональный = Истина;*/
				/*// Обновление правил конвертации из ЗиК и перевод на минимальный релиз 323
*/
				/*Обработчик = Обработчики.Добавить();*/
				/*Обработчик.Версия       = "2.5.51.1";*/
				/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ОчиститьЗагруженныеПравилаПереноса";*/
				/*Обработчик.Опциональный = Истина;*/
				/*Обработчик = Обработчики.Добавить();*/
				/*Обработчик.Версия       = "2.5.51.1";*/
				/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьПредопределенныеЭлементы77";*/
				/*Обработчик.Опциональный = Истина;*/
			}
			/*// 2.5.52.3
*/
			/*//
*/
			if(true/*ЭтоНеПериферияРИБ*/)
			{
				/*// здесь обновляем предопределенные данные
*/
				/*Обработчик = Обработчики.Добавить();*/
				/*Обработчик.Версия       = "2.5.52.3";*/
				/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазыПереопределяемый.ЗаполнитьРеквизитЕжегодныйОтпускДляРезервов";*/
				/*Обработчик.Опциональный = Истина;*/
			}
			/*Обработчик = Обработчики.Добавить();*/
			/*Обработчик.Версия       = "2.5.52.3";*/
			/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьРеквизитыУчетаПремий";*/
			/*Обработчик.Опциональный = Истина;*/
			/*Обработчик = Обработчики.Добавить();*/
			/*Обработчик.Версия       = "2.5.52.3";*/
			/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ПроставитьВУчетнойПолитикеОтношениеКПремиям";*/
			/*Обработчик.Опциональный = Истина;*/
			/*Обработчик = Обработчики.Добавить();*/
			/*Обработчик.Версия       = "2.5.52.3";*/
			/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ОбновлениеРеестровПособийПриРожденииРебенка";*/
			/*Обработчик.Опциональный = Истина;*/
			/*Обработчик = Обработчики.Добавить();*/
			/*Обработчик.Версия       = "2.5.52.3";*/
			/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьВидыЕжегодныхОтпусков";*/
			/*Обработчик.Опциональный = Истина;*/
			/*Обработчик = Обработчики.Добавить();*/
			/*Обработчик.Версия       = "2.5.52.3";*/
			/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазыПереопределяемый.ВосстановитьВариантОбработкиЗаписиПриОтраженииВРеглУчете";*/
			/*Обработчик.Опциональный = Истина;*/
			/*// 2.5.54.1
*/
			/*//
*/
			if(true/*ЭтоНеПериферияРИБ*/)
			{
				/*// здесь обновляем предопределенные данные
*/
				/*Обработчик = Обработчики.Добавить();*/
				/*Обработчик.Версия       = "2.5.54.1";*/
				/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ВзвестиФлажокУчитыватьДоходыНДФЛПоПериодуДействия";*/
				/*Обработчик.Опциональный = Истина;*/
				/*Обработчик = Обработчики.Добавить();*/
				/*Обработчик.Версия       = "2.5.54.1";*/
				/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ОписатьМатпомощьПрокуроров";*/
				/*Обработчик.Опциональный = Истина;*/
			}
			/*Обработчик = Обработчики.Добавить();*/
			/*Обработчик.Версия       = "2.5.54.1";*/
			/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ВыделитьКодНалоговогоОрганаВСправках2НДФЛ";*/
			/*Обработчик.Опциональный = Истина;*/
			/*// Текущее обновление
*/
			/*//
*/
			if(true/*ЭтоНеПериферияРИБ*/)
			{
				/*// здесь обновляем предопределенные данные
*/
				/*Обработчик = Обработчики.Добавить();*/
				/*Обработчик.Версия       = "2.5.55.1";*/
				/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ИсправитьОписаниеУдержаний";*/
				/*Обработчик.Опциональный = Истина;*/
				/*Обработчик = Обработчики.Добавить();*/
				/*Обработчик.Версия       = "2.5.55.1";*/
				/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьСправочникЛПУ";*/
				/*Обработчик.Опциональный = Истина;*/
				/*Обработчик = Обработчики.Добавить();*/
				/*Обработчик.Версия       = "2.5.55.1";*/
				/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ДополнитьРегистрДопустимыхСочетанийМеждуГруппамиСтажа";*/
				/*Обработчик.Опциональный = Истина;*/
			}
			/*Обработчик = Обработчики.Добавить();*/
			/*Обработчик.Версия       = "2.5.55.1";*/
			/*Обработчик.Процедура    = "ПроцедурыОбновленияИнформационнойБазы.ВыделитьКодНалоговогоОрганаВСправках2НДФЛ";*/
			/*Обработчик.Опциональный = Истина;*/
			return null;
		}

		public object ПараметрыМакетаОписаниеОбновлений(/**/)
		{
			/*Параметры = Новый Структура;*/
			/*#Если Клиент Тогда
	Параметры.Вставить("ФормаСпискаПВРСреднийЗаработок",    РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.ПланыВидовРасчета.СреднийЗаработок, ПланыВидовРасчета.СреднийЗаработок, "ФормаСписка"));*/
			/*Параметры.Вставить("ФормаСпискаГосударственныеПособия", РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.РегистрыСведений.ГосударственныеПособия, РегистрыСведений.ГосударственныеПособия, "ФормаСписка"));*/
			/*Параметры.Вставить("ФормаУдержанийОрганизации",         РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.ПланыВидовРасчета.УдержанияОрганизаций, ПланыВидовРасчета.УдержанияОрганизаций, "ФормаСписка"));*/
			/*Параметры.Вставить("Переход2010",                       РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Обработки.ПереходНаПорядокИсчисленияПособий2010, Обработки.ПереходНаПорядокИсчисленияПособий2010));*/
			/*Параметры.Вставить("ФормаНастройки",                    РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Обработки.НастройкаПараметровУчета, Обработки.НастройкаПараметровУчета));*/
			/*Форма = РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Справочники.СотрудникиОрганизаций, Справочники.СотрудникиОрганизаций,"ФормаСписка");*/
			if(true/*Форма <> Неопределено*/)
			{
				/*// Переопределение формы списка
*/
				/*Форма = Справочники.СотрудникиОрганизаций.ПолучитьФормуСписка(,, "ФормаОстатковОтпусков");*/
				/*Форма.мРежимРаботыФормы = "ФормаОстатковОтпусков";*/
				/*Параметры.Вставить("ФормаОстатковОтпусков", Форма);*/
			}
			/*ФормаОбработки = РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Обработки.ИндексацияИПерерасчетПособийНаДетейЗаСчетФСС, Обработки.ИндексацияИПерерасчетПособийНаДетейЗаСчетФСС);*/
			if(true/*ФормаОбработки <> Неопределено*/)
			{
				/*// Переопределим форму
*/
				/*ФормаОбработки = РаботаСДиалогамиЗК.ОткрытьПерерасчетПособийНаДетей("Перерасчет", Ложь);*/
				/*ФормаОбработки.ДатаНачала = '20090101';*/
			}
			/*Параметры.Вставить("ФормаПерерасчетПособийНаДетейМай2009", ФормаОбработки);*/
			/*ФормаНастроек = РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Справочники.СохраненныеНастройки, Справочники.СохраненныеНастройки, "ФормаСписка");*/
			if(true/*ФормаНастроек <> Неопределено*/)
			{
				/*ФормаНастроек.Отбор.НастраиваемыйОбъект.ВидСравнения = ВидСравнения.Равно;*/
				/*ФормаНастроек.Отбор.НастраиваемыйОбъект.Использование = Истина;*/
				/*ФормаНастроек.Отбор.НастраиваемыйОбъект.Значение = "ОтчетОбъект.АнализНачисленныхНалоговИВзносов";*/
			}
			/*Параметры.Вставить("ФормаСохраненныеНастройки2514", ФормаНастроек);*/
			/*Параметры.Вставить("Переход2010", РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Обработки.ПереходНаПорядокИсчисленияПособий2010, Обработки.ПереходНаПорядокИсчисленияПособий2010));*/
			/*Параметры.Вставить("ФормаРедактированиеВычетовНаДетей2011", РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Обработки.РедактированиеВычетовНаДетей2011, Обработки.РедактированиеВычетовНаДетей2011));*/
			/*#КонецЕсли
	
	Возврат Параметры;*/
			return null;
		}
		// Неинтерактивное обновление данных ИБ при смене версии библиотеки
		// Обязательная "точка входа" обновления ИБ в библиотеке.

		public void ВыполнитьОбновлениеИнформационнойБазы(/**/)
		{
			/*ОбновлениеИнформационнойБазы.ВыполнитьИтерациюОбновления(
		"ЗУП",
		ВерсияБиблиотеки(),
		ОбработчикиОбновления());*/
		}
		///////////////////////////////////////////////////////////////////////////////////////////
		// ОБРАБОТЧИКИ

		public void ПервыйЗапуск(/**/)
		{
			if(true/*ПланыОбмена.ГлавныйУзел() <> Неопределено*/)
			{
				/*// Первоначальное заполнение делаем только в главном узле.
*/
				/*// Информация о версиях подсистем не мигрирует в составе РИБ
*/
			}
			/*ВалютаРегламентированногоУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета");*/
			/*Константы.РежимНабораПерсонала.Установить(Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц);*/
			/*// Заполнение сведений по заработной плате и учету персонала
*/
			/*ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьРегистрДопустимыхСочетанийМеждуГруппамиСтажа();*/
			/*ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьКодыДоходовНДФЛ();*/
			/*ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьКодыВычетовНДФЛ();*/
			/*ПроцедурыОбновленияИнформационнойБазы.КодыПерсучета2010();*/
			/*ЗаполнитьКодыДоходовЕСН();*/
			/*ЗаполнитьКлассификаторИспользованияРабочегоВремени();*/
			/*ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьСведенияОСтавкахЕСНиПФР();*/
			/*ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьСведенияОМинимальномРазмереОплатыТруда();*/
			/*ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьСведенияОРазмерахГосударственныхПособий();*/
			/*ПроцедурыОбновленияИнформационнойБазыДополнительный.ЗаполнитьРеквизитыВопросов();*/
			/*ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьСправочникВоинскихЗваний();*/
			/*ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьОснованияУвольнения();*/
			/*ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьФормыОбучения();*/
			/*ПроцедурыОбновленияИнформационнойБазы.НачальноеЗаполнениеСправочникаКлассификаторСтранМира();*/
			/*ПроцедурыОбновленияИнформационнойБазы.НачальноеЗаполнениеСправочникаДокументыУдостоверяющиеЛичность();*/
			/*ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьВидыЕжегодныхОтпусков();*/
			/*ЗаполнитьПериодичностьНачислений();*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьПризнакАвтоНачислениеПоТабелю();*/
			/*ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьВидыДоходовПоСтраховымВзносам();*/
			/*ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьСведенияОТарифахСтраховыхВзносов();*/
			/*ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьУченыеСтепениИЗвания();*/
			/*ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьПочтовыеСборы();*/
			/*ЗаполнитьПланыВидовРасчетаОрганизации();*/
			/*ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьРасчетнуюБазуСреднегоДляПособий2010();*/
			/*ЗаполнитьРеквизитыПВРДниНеоплачиваемыеСогласноТабелю();*/
			/*ЗаполнитьСхемыМотивации(ВалютаРегламентированногоУчета);*/
			/*ЗаполнитьПланыВидовРасчетаУправленческиеУдержания();*/
			/*ОбновитьНастройкиРасчетов();*/
			/*// Заполнение справочников "Шкалы оценок компетенций"
*/
			/*ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьСправочникШкалОценок();*/
			/*// Заполнение объектов для подсистемы Управление персоналом
*/
			/*ПроцедурыОбновленияИнформационнойБазыДополнительный.СоздатьАнкетуРезюме();*/
			/*ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьСписокВнешнихКомпонент();*/
			/*//Заполнить реквизиты предопределенных смен
*/
			/*ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьПредопределенныеСмены();*/
			/*// Заполнить предопределенные элементы для перехода с 1С:Предприятие 7.7
*/
			/*ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьПредопределенныеЭлементы77();*/
			/*// Включить генерацию всех видов задач
*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьИспользованиеВидовЗадачПользователей();*/
			/*// Заполнить предопределенные настройки отчетов
*/
			/*ПроцедурыОбновленияИнформационнойБазы.ЗагрузитьНастройкиОтчетов();*/
			/*// Заполняем список ссылок на сайте ИТС.
*/
			/*РегистрыСведений.СсылкиНаСайтеИТС.ПроизвестиЗаполнениеРегистраСведенийСсылкиНаСайтеИТС();*/
			/*#Если ТолстыйКлиентОбычноеПриложение Тогда
		
		Оповестить("ОбновленСписокСсылокНаСайтеИТС");*/
			/*#КонецЕсли;*/
		}
		///////////////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ЗУП
		// Выполняет заполнение справочника "КлассификаторИспользованияРабочегоВремени"
		//

		public void ЗаполнитьКлассификаторИспользованияРабочегоВремени(/**/)
		{
			/*// Установка реквизитов предопределенных элементов
*/
			/*ВремяОтработанноеВПределахНормы = Перечисления.ВидыВремени.ОтработанноеВПределахНормы;*/
			/*ВремяДополнительноОплачиваемоеВПределахНормы = Перечисления.ВидыВремени.ДополнительноОплачиваемоеВПределахНормы;*/
			/*ВремяОтработанноеСверхНормы = Перечисления.ВидыВремени.ОтработанноеСверхНормы;*/
			/*ВремяЦелодневноеНеотработанное = Перечисления.ВидыВремени.ЦелодневноеНеотработанное;*/
			/*ВремяЧасовоеНеотработанное = Перечисления.ВидыВремени.ЧасовоеНеотработанное;*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.ВыходныеДни.ПолучитьОбъект(),									"В", "26", "Выходные дни",							"Выходные дни (еженедельный отпуск) и  нерабочие праздничные дни",Перечисления.ВидыВремени.ПустаяСсылка());*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.Работа.ПолучитьОбъект(),										"Я", "01", "Явка",									"Продолжительность работы в дневное время", ВремяОтработанноеВПределахНормы,Истина);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.Командировка.ПолучитьОбъект(),									"К", "06", "Командировка",							"Служебная командировка",ВремяЦелодневноеНеотработанное);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.ПовышениеКвалификации.ПолучитьОбъект(),						"ПК","07", "Повышение квалификации",				"Повышение квалификации с отрывом от работы",ВремяЦелодневноеНеотработанное);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.ПовышениеКвалификацииВДругойМестности.ПолучитьОбъект(),		"ПМ","08", "Повышение квалификации в другой местности",		"Повышение квалификации с отрывом от работы в другой местности",ВремяЦелодневноеНеотработанное);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.ОсновнойОтпуск.ПолучитьОбъект(),								"ОТ","09", "Отпуск",								"Ежегодный основной оплачиваемый отпуск",ВремяЦелодневноеНеотработанное);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.ДополнительныйОтпуск.ПолучитьОбъект(),							"ОД","10", "Дополнительный отпуск",					"Ежегодный дополнительный оплачиваемый отпуск",ВремяЦелодневноеНеотработанное);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.ОтпускНаОбучение.ПолучитьОбъект(),								"У", "11", "Отпуск дополнительный (оплачиваемый учебный)",	"Дополнительный отпуск в связи с обучением с сохранением среднего заработка работникам, совмещающим работу с обучением",ВремяЦелодневноеНеотработанное);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.ОтпускНаОбучениеНеоплачиваемый.ПолучитьОбъект(),				"УД","13", "Отпуск дополнительный (неоплачиваемый учебный)",	"Дополнительный отпуск в связи с обучением без сохранения заработной платы",ВремяЦелодневноеНеотработанное);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.ОтпускПоБеременностиИРодам.ПолучитьОбъект(),					"Р", "14", "Отпуск по беременности и родам",			"Отпуск по беременности и родам (отпуск в связи с усыновлением новорожденного ребенка)",ВремяЦелодневноеНеотработанное);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.ОтпускПоУходуЗаРебенком.ПолучитьОбъект(),						"ОЖ","15", "Отпуск по уходу за ребенком",			"Отпуск по уходу за ребенком до достижения им возраста трех лет",ВремяЦелодневноеНеотработанное);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.НеоплачиваемыйОтпускПоРазрешениюРаботодателя.ПолучитьОбъект(),	"ДО","16", "Отпуск неоплачиваемый с разрешения работодателя",	"Отпуск без сохранения заработной платы, предоставляемый работнику по разрешению работодателя",ВремяЦелодневноеНеотработанное);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.НеоплачиваемыйОтпускПоЗаконодательству.ПолучитьОбъект(),		"ОЗ","17", "Отпуск неоплачиваемый в соответствии с законом",	"Отпуск без сохранения заработной платы в случаях, предусмотренных законодательством",ВремяЦелодневноеНеотработанное);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.НеоплачиваемыйДополнительныйОтпуск.ПолучитьОбъект(),			"ДБ","18", "Доп.отпуск без сохранения заработной платы",	"Ежегодный дополнительный отпуск без сохранения заработной платы",ВремяЦелодневноеНеотработанное);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.Болезнь.ПолучитьОбъект(),										"Б ","19", "Больничный",							"Временная нетрудоспособность с назначением пособия согласно законодательству",ВремяЦелодневноеНеотработанное);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.БолезньБезОплаты.ПолучитьОбъект(),								"Т", "20", "Больничный неоплачиваемый",				"Временная нетрудоспособность без назначения пособия в случаях, предусмотренных законодательством",ВремяЦелодневноеНеотработанное);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.ВынужденныйПрогул.ПолучитьОбъект(),							"ПВ","22", "Время вынужденного прогула",			"Время вынужденного прогула в случае признания увольнения, перевода на другую работу или отстранения от работы незаконными с восстановлением на прежней работе",ВремяЦелодневноеНеотработанное);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.ГосударственныеОбязанности.ПолучитьОбъект(),					"Г", "23", "Выполнение государственных обязанностей",		"Невыходы на время исполнения государственных или общественных обязанностей согласно законодательству",ВремяЦелодневноеНеотработанное);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.Прогулы.ПолучитьОбъект(),										"ПР","24", "Прогул",								"Прогулы (отсутствие на рабочем месте без уважительных причин в течение времени, установленного законодательством)",ВремяЦелодневноеНеотработанное);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.ДополнительныеВыходныеДниОплачиваемые.ПолучитьОбъект(),		"ОВ","27", "Дополнительные выходные дни (оплачиваемые)",	"Дополнительные выходные дни (оплачиваемые)",ВремяЦелодневноеНеотработанное);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.ДополнительныеВыходныеДниНеОплачиваемые.ПолучитьОбъект(),		"НВ","28", "Дополнительные выходные дни (неоплачиваемые)",	"Дополнительные выходные дни (без сохранения заработной платы)",ВремяЦелодневноеНеотработанное);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.Забастовка.ПолучитьОбъект(),									"ЗБ","29", "Забастовка",							"Забастовка (при условиях и в порядке, предусмотренных законом)",ВремяЦелодневноеНеотработанное);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.НеявкиПоНевыясненнымПричинам.ПолучитьОбъект(),					"НН","30", "Неявки по невыясненным причинам",			"Неявки по невыясненным причинам (до выяснения обстоятельств)",ВремяЦелодневноеНеотработанное);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.ПростойПоВинеРаботодателя.ПолучитьОбъект(),					"РП","31", "Время простоя по вине работодателя",		"Время простоя по вине работодателя",ВремяЦелодневноеНеотработанное);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.Простой.ПолучитьОбъект(),										"НП","32", "Простой, не зависящий от работодателя и работника", "Время простоя по причинам, не зависящим от работодателя и работника",ВремяЦелодневноеНеотработанное);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.ПростойПоВинеРаботника.ПолучитьОбъект(),						"ВП","33", "Простой по вине работника",				"Простои по вине работника",ВремяЦелодневноеНеотработанное);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.ОтстранениеОтРаботыСОплатой.ПолучитьОбъект(),					"НО","34", "Отстранение от работы с оплатой",			"Отстранение от работы (недопущение к работе) с оплатой (пособием) в соответствии с законодательством",ВремяЦелодневноеНеотработанное);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.ОтстранениеОтРаботыБезОплаты.ПолучитьОбъект(),					"НБ","35", "Отстранение от работы без оплаты",			"Отстранение от работы (недопущение к работе) по причинам, предусмотренным законодательством, без начисления заработной платы",ВремяЦелодневноеНеотработанное);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.ЗадержкаВыплатыЗаработнойПлаты.ПолучитьОбъект(),				"НЗ","36", "Приостановка работы в случае задержки выплаты з/п", "Время приостановки работы в случае задержки выплаты заработной платы",ВремяЦелодневноеНеотработанное);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.РаботаНочныеЧасы.ПолучитьОбъект(),								"Н ","02", "Ночные часы",							"Продолжительность работы в ночное время",ВремяДополнительноОплачиваемоеВПределахНормы,Истина);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.РаботаВечерниеЧасы.ПолучитьОбъект(),							"ВЧ","41", "Вечерние часы",							"Продолжительность работы в вечернее время",ВремяДополнительноОплачиваемоеВПределахНормы,Истина);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.Сверхурочные.ПолучитьОбъект(),									"С ","04", "Сверхурочно",							"Продолжительность сверхурочной работы",ВремяОтработанноеСверхНормы, Истина);*/
			/*ОписатьКодИспользованияРабочегоВремени(Справочники.КлассификаторИспользованияРабочегоВремени.Праздники.ПолучитьОбъект(),									"РВ","03", "Праздники",								"Продолжительность работы в выходные и нерабочие, праздничные дни", ВремяОтработанноеСверхНормы, Истина);*/
			/*// Создание остальных элементов классификатора
*/
			/*ДобавитьКодИспользованияРабочегоВремени("ВМ","05", "Вахта", "Продолжительность работы вахтовым методом",ВремяОтработанноеВПределахНормы,Истина);*/
			/*ДобавитьКодИспользованияРабочегоВремени("УВ","12", "Сокр.время обучающихся без отрыва от производства", "Сокращенная продолжительность рабочего для обучающихся без отрыва от производства с частичным сохранением заработной платы",ВремяОтработанноеВПределахНормы,Истина);*/
			/*ДобавитьКодИспользованияРабочегоВремени("ЛЧ","21", "Сокращенное рабочее время в соответствии с законом", "Сокращенная продолжительность рабочего времени против нормальной продолжительности рабочего дня в случаях, предусмотренных законодательством",ВремяОтработанноеВПределахНормы,Истина);*/
			/*ДобавитьКодИспользованияРабочегоВремени("НС","25", "Работа в режиме неполного рабочего времени", "Продолжительность работы в режиме неполного рабочего времени по инициативе работодателя в случаях, предусмотренных законодательством",ВремяОтработанноеВПределахНормы,Истина);*/
		}
		// Выполняет заполнение справочника "ДоходыЕСН"
		// Запускается при первоначальном заполнении пустой ИБ.
		//

		public void ЗаполнитьКодыДоходовЕСН(/**/)
		{
			/*СпрКодыЕСН = Справочники.ДоходыЕСН;*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьРеквизитыКодаЕСН(СпрКодыЕСН.РаспределятьПоБазовымНачислениям, Ложь, 	Ложь,   Ложь);*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьРеквизитыКодаЕСН(СпрКодыЕСН.НеЯвляетсяОбъектом,	Ложь, 	Ложь, 	Ложь);*/
			/*// ФБ , ФСС, ФОМС
*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьРеквизитыКодаЕСН(СпрКодыЕСН.ВыплатыЗаСчетПрибыли,	Ложь, 	Ложь, 	Ложь);*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьРеквизитыКодаЕСН(СпрКодыЕСН.НеОблагаетсяЦеликом,	Ложь, 	Ложь,   Ложь);*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьРеквизитыКодаЕСН(СпрКодыЕСН.ПособияЗаСчетФСС,		Ложь, 	Ложь,	Ложь);*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьРеквизитыКодаЕСН(СпрКодыЕСН.ДоговораАвторские,	Истина, Ложь,	Истина);*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьРеквизитыКодаЕСН(СпрКодыЕСН.ДоговораГПХ,			Истина, Ложь,	Истина);*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьРеквизитыКодаЕСН(СпрКодыЕСН.ОблагаетсяЦеликом,	Истина, Истина, Истина);*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьРеквизитыКодаЕСН(СпрКодыЕСН.Матпомощь,			Истина, Истина,	Истина);*/
			/*// ---------------------------------------------------
*/
			/*// ЗНАЧЕНИЯ СКИДОК К ДОХОДАМ ЕСН НА 01.01.2005
*/
			/*Запрос = Новый Запрос("ВЫБРАТЬ
	|	ЕСНДоходы.Ссылка
	|ИЗ
	|	Справочник.ДоходыЕСН КАК ЕСНДоходы
	|
	|ГДЕ
	|	(ЕСНДоходы.Предопределенный)");*/
			/*СписокПредопределенныхКодовДоходов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");*/
			/*ДатаСведений = Дата("20050101");*/
			/*НаборЗаписей = РегистрыСведений.ЕСНСкидкиКДоходам.СоздатьНаборЗаписей();*/
			/*// Удалим ранее установленные значения на дату сведений по предопределенным элементам
*/
			/*НаборЗаписей.Отбор.Период.Значение = ДатаСведений;*/
			/*НаборЗаписей.Отбор.Период.Использование = Истина;*/
			/*НаборЗаписей.Отбор.КодДоходаЕСН.ВидСравнения = ВидСравнения.Равно;*/
			/*НаборЗаписей.Отбор.КодДоходаЕСН.Использование = Истина;*/
			/*// Скинем фильтр по кодам доходов перед получением оставшихся записей на дату сведений
*/
			/*НаборЗаписей.Отбор.КодДоходаЕСН.Использование = Ложь;*/
			/*НаборЗаписей.Прочитать();*/
			/*ПроцедурыОбновленияИнформационнойБазы.ДобавитьСкидкуКДодохамЕСН(НаборЗаписей, ДатаСведений, СпрКодыЕСН.Матпомощь,3000);*/
			/*// Запишем набор записей
*/
			/*НаборЗаписей.Записать();*/
		}
		// Выполняет заполнение реквизитов планов видов расчета регламентированного учета
		// Запускается при первоначальном заполнении пустой ИБ.
		//

		public void ЗаполнитьПланыВидовРасчетаОрганизации(/**/)
		{
			/*СпРасчета  = Перечисления.СпособыРасчетаОплатыТруда;*/
			/*Категории  = Справочники.КатегорииРасчетов;*/
			/*ЗависимоеВторогоУровня = ПроцедурыОбновленияИнформационнойБазы.НайтиСоздатьКатегорию("00002","Зависимое второго уровня");*/
			/*ЗависимоеТретьегоУровня = ПроцедурыОбновленияИнформационнойБазы.НайтиСоздатьКатегорию("00003","Зависимое третьего уровня");*/
			/*ЗависимоеЧетвертогоУровня = ПроцедурыОбновленияИнформационнойБазы.НайтиСоздатьКатегорию("00004","Зависимое четвертого уровня");*/
			/*ДоходыНДФЛ = Справочники.ДоходыНДФЛ;*/
			/*ЕСНСпособыОтражения      = Справочники.ДоходыЕСН;*/
			/*ВзносыСпособыОтражения   = Справочники.ДоходыПоСтраховымВзносам;*/
			/*КодыДоходаПоСт255		 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК;*/
			/*КодДоходаНДФЛПоУмолчанию = ДоходыНДФЛ.КодДоходаПоУмолчанию;*/
			/*КодДоходаНДФЛБЛ = ДоходыНДФЛ.Код2300;*/
			/*КодДоходаНДФЛОтпуск = ДоходыНДФЛ.Код2012;*/
			/*КодДоходаЕСНПоУмолчанию  = ЕСНСпособыОтражения.ОблагаетсяЦеликом;*/
			/*КодДоходаВзносовПоУмолчанию = ВзносыСпособыОтражения.ОблагаетсяЦеликом;*/
			/*КодДоходаВзносовПоБазе   = ВзносыСпособыОтражения.РаспределятьПоБазовымНачислениям;*/
			/*ПособияЗаСчетФССВзносов	 = ВзносыСпособыОтражения.ПособияЗаСчетФСС;*/
			/*КодДоходаЕСНПоБазе		 = ЕСНСпособыОтражения.РаспределятьПоБазовымНачислениям;*/
			/*ПособияЗаСчетФСС		 = ЕСНСпособыОтражения.ПособияЗаСчетФСС;*/
			/*НеОтражатьВБухУчете   = Справочники.СпособыОтраженияЗарплатыВРеглУчете.НеОтражатьВБухучете;*/
			/*ПустойСпособОтражения = Справочники.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка();*/
			/*СпособОтраженияПоБазовымРасчетам = Справочники.СпособыОтраженияЗарплатыВРеглУчете.РаспределятьПоБазовымНачислениям;*/
			/*ПланСчетов = ПланыСчетов.Хозрасчетный;*/
			/*//заполним способ отражения по умолчанию
*/
			/*СпособУчетПоУмолчанию = Справочники.СпособыОтраженияЗарплатыВРеглУчете.ОтражениеНачисленийПоУмолчанию.ПолучитьОбъект();*/
			/*СпособУчетПоУмолчанию.СчетДт = ПланСчетов.ОбщехозяйственныеРасходы;*/
			/*СпособУчетПоУмолчанию.СубконтоДт1 = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();*/
			/*СпособУчетПоУмолчанию.СубконтоДт2 = Справочники.СтатьиЗатрат.ПустаяСсылка();*/
			/*СпособУчетПоУмолчанию.СчетКт = ПланСчетов.РасчетыСПерсоналомПоОплатеТруда;*/
			/*СпособУчетПоУмолчанию.СубконтоКт1 = Справочники.ФизическиеЛица.ПустаяСсылка();*/
			/*СпособУчетПоУмолчанию.СчетДтНУ = БухгалтерскийУчетДополнительный.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ",ПланСчетов.ОбщехозяйственныеРасходы));*/
			/*СпособУчетПоУмолчанию.СубконтоДтНУ1 = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();*/
			/*СпособУчетПоУмолчанию.СубконтоДтНУ2 = Справочники.СтатьиЗатрат.ПустаяСсылка();*/
			/*СпособУчетПоУмолчанию.СчетКтНУ = БухгалтерскийУчетДополнительный.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ",ПланСчетов.РасчетыСПерсоналомПоОплатеТруда));*/
			/*СпособУчетПоУмолчанию.СубконтоКтНУ1 = Справочники.ФизическиеЛица.ПустаяСсылка();*/
			/*СпособУчетПоУмолчанию.СубконтоКтНУ2 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.пп1ст255;*/
			/*СпособУчетПоУмолчанию.Записать();*/
			/*// Основные начисления организации 
*/
			/*ПВР = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций;*/
			/*УчетВремени = Справочники.КлассификаторИспользованияРабочегоВремени;*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ОкладПоДням, 						СпРасчета.ПоМесячнойТарифнойСтавкеПоДням,				Перечисления.ВидыВремени.ОтработанноеВПределахНормы,	Категории.Первичное,			УчетВремени.Работа,				Истина, Истина, КодДоходаНДФЛПоУмолчанию, КодДоходаЕСНПоУмолчанию, КодДоходаВзносовПоУмолчанию, Перечисления.ДоходыФСС_НС.Облагается, , КодыДоходаПоСт255.пп1ст255,,,Ложь);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ОкладПоЧасам, 					СпРасчета.ПоМесячнойТарифнойСтавкеПоЧасам,				Перечисления.ВидыВремени.ОтработанноеВПределахНормы,	Категории.Первичное,			УчетВремени.Работа,	 			Истина, Истина, КодДоходаНДФЛПоУмолчанию, КодДоходаЕСНПоУмолчанию, КодДоходаВзносовПоУмолчанию, Перечисления.ДоходыФСС_НС.Облагается, , КодыДоходаПоСт255.пп1ст255,,,Ложь);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ТарифЧасовой, 					СпРасчета.ПоЧасовойТарифнойСтавке,						Перечисления.ВидыВремени.ОтработанноеВПределахНормы,	Категории.Первичное,			УчетВремени.Работа,				Истина, Истина, КодДоходаНДФЛПоУмолчанию, КодДоходаЕСНПоУмолчанию, КодДоходаВзносовПоУмолчанию, Перечисления.ДоходыФСС_НС.Облагается, , КодыДоходаПоСт255.пп1ст255,,,Ложь);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ТарифДневной, 					СпРасчета.ПоДневнойТарифнойСтавке,						Перечисления.ВидыВремени.ОтработанноеВПределахНормы,	Категории.Первичное,			УчетВремени.Работа, 				Истина, Истина, КодДоходаНДФЛПоУмолчанию, КодДоходаЕСНПоУмолчанию, КодДоходаВзносовПоУмолчанию, Перечисления.ДоходыФСС_НС.Облагается, , КодыДоходаПоСт255.пп1ст255,,,Ложь);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.СдельнаяОплата, 					СпРасчета.СдельныйЗаработок,							Перечисления.ВидыВремени.ОтработанноеВПределахНормы,	Категории.Первичное,			УчетВремени.Работа,				Истина, Истина, КодДоходаНДФЛПоУмолчанию, КодДоходаЕСНПоУмолчанию, КодДоходаВзносовПоУмолчанию, Перечисления.ДоходыФСС_НС.Облагается, , КодыДоходаПоСт255.пп1ст255,,,Ложь);*/
			/*КодДоходаЕСН    = КодДоходаЕСНПоУмолчанию;*/
			/*СпособОтражения = ПустойСпособОтражения;*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ОплатаПоСреднему,   				СпРасчета.ПоСреднемуЗаработку,							Перечисления.ВидыВремени.ЦелодневноеНеотработанное,		Категории.Первичное,			УчетВремени.Командировка,			Ложь,   Истина, КодДоходаНДФЛПоУмолчанию, КодДоходаЕСН,	КодДоходаВзносовПоУмолчанию, Перечисления.ДоходыФСС_НС.Облагается, СпособОтражения, КодыДоходаПоСт255.пп6ст255,Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоТрудовомуЗаконодательству,,Ложь);*/
			/*// два отпуска
*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ОплатаПоСреднемуОтпШестидневка,	СпРасчета.ПоСреднемуЗаработкуДляОтпускаПоШестидневке,	Перечисления.ВидыВремени.ЦелодневноеНеотработанное,		ЗависимоеТретьегоУровня, 	УчетВремени.ОсновнойОтпуск, 		Ложь,   Истина, КодДоходаНДФЛОтпуск,	КодДоходаЕСН, КодДоходаВзносовПоУмолчанию, Перечисления.ДоходыФСС_НС.Облагается, СпособОтражения, КодыДоходаПоСт255.пп7ст255,Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоТрудовомуЗаконодательству,,Ложь);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ОплатаПоСреднемуОтпКалендарныеДни,СпРасчета.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням,Перечисления.ВидыВремени.ЦелодневноеНеотработанное, 	ЗависимоеТретьегоУровня, 	УчетВремени.ОсновнойОтпуск, 		Ложь,   Истина, КодДоходаНДФЛОтпуск,	КодДоходаЕСН, КодДоходаВзносовПоУмолчанию, Перечисления.ДоходыФСС_НС.Облагается, СпособОтражения, КодыДоходаПоСт255.пп7ст255,Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоТрудовомуЗаконодательству,,Ложь);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ПростойОкладПоДням,				СпРасчета.ПоМесячнойТарифнойСтавкеПоДням,				Перечисления.ВидыВремени.ЦелодневноеНеотработанное, 	Категории.Первичное, 			УчетВремени.Простой, 				Ложь,   Истина, КодДоходаНДФЛПоУмолчанию, КодДоходаЕСНПоУмолчанию, КодДоходаВзносовПоУмолчанию, Перечисления.ДоходыФСС_НС.Облагается, , КодыДоходаПоСт255.пп6ст255,,,Ложь);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ПростойОкладПоЧасам,				СпРасчета.ПоМесячнойТарифнойСтавкеПоЧасам,				Перечисления.ВидыВремени.ЦелодневноеНеотработанное, 	Категории.Первичное, 			УчетВремени.Простой, 				Ложь,   Истина, КодДоходаНДФЛПоУмолчанию, КодДоходаЕСНПоУмолчанию, КодДоходаВзносовПоУмолчанию, Перечисления.ДоходыФСС_НС.Облагается, , КодыДоходаПоСт255.пп6ст255,,,Ложь);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ПочасовойПростойОкладПоЧасам,		СпРасчета.ПоМесячнойТарифнойСтавкеПоЧасам,				Перечисления.ВидыВремени.ЧасовоеНеотработанное, 		Категории.Первичное,	 		УчетВремени.Простой,				Ложь,   Истина, КодДоходаНДФЛПоУмолчанию, КодДоходаЕСНПоУмолчанию, КодДоходаВзносовПоУмолчанию, Перечисления.ДоходыФСС_НС.Облагается, , КодыДоходаПоСт255.пп6ст255,,,Ложь);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ПростойТарифДневной,				СпРасчета.ПоДневнойТарифнойСтавке,						Перечисления.ВидыВремени.ЦелодневноеНеотработанное, 	Категории.Первичное, 			УчетВремени.Простой, 				Ложь,   Истина, КодДоходаНДФЛПоУмолчанию, КодДоходаЕСНПоУмолчанию, КодДоходаВзносовПоУмолчанию, Перечисления.ДоходыФСС_НС.Облагается, , КодыДоходаПоСт255.пп6ст255,,,Ложь);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ПростойТарифЧасовой,				СпРасчета.ПоЧасовойТарифнойСтавке,						Перечисления.ВидыВремени.ЦелодневноеНеотработанное, 	Категории.Первичное, 			УчетВремени.Простой, 				Ложь,   Истина, КодДоходаНДФЛПоУмолчанию, КодДоходаЕСНПоУмолчанию, КодДоходаВзносовПоУмолчанию, Перечисления.ДоходыФСС_НС.Облагается, , КодыДоходаПоСт255.пп6ст255,,,Ложь);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ПочасовойПростойТарифЧасовой,		СпРасчета.ПоЧасовойТарифнойСтавке,						Перечисления.ВидыВремени.ЧасовоеНеотработанное, 		Категории.Первичное, 			УчетВремени.Простой,				Ложь,   Истина, КодДоходаНДФЛПоУмолчанию, КодДоходаЕСНПоУмолчанию, КодДоходаВзносовПоУмолчанию, Перечисления.ДоходыФСС_НС.Облагается, , КодыДоходаПоСт255.пп6ст255,,,Ложь);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ПростойПоВинеРаботодателя,		СпРасчета.ПоСреднемуЗаработку,							Перечисления.ВидыВремени.ЦелодневноеНеотработанное, 	Категории.Первичное,			УчетВремени.ПростойПоВинеРаботодателя,		Ложь,   Истина, КодДоходаНДФЛПоУмолчанию, КодДоходаЕСН, КодДоходаВзносовПоУмолчанию, Перечисления.ДоходыФСС_НС.Облагается, СпособОтражения, КодыДоходаПоСт255.пп6ст255, Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоТрудовомуЗаконодательству,,Ложь);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ПочасовойПростойПоВинеРаботодателя,СпРасчета.ПоСреднемуЗаработку,							Перечисления.ВидыВремени.ЧасовоеНеотработанное, 		Категории.Первичное,			УчетВремени.ПростойПоВинеРаботодателя,		Ложь,	Истина, КодДоходаНДФЛПоУмолчанию, КодДоходаЕСН,	КодДоходаВзносовПоУмолчанию, Перечисления.ДоходыФСС_НС.Облагается, СпособОтражения, КодыДоходаПоСт255.пп6ст255, Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоТрудовомуЗаконодательству,,Ложь);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ОплатаПраздничныхИВыходных,		СпРасчета.ФиксированнойСуммой,							Перечисления.ВидыВремени.ОтработанноеСверхНормы, 		Категории.Первичное, 			УчетВремени.Праздники, 				Истина, Ложь,   КодДоходаНДФЛПоУмолчанию, КодДоходаЕСНПоУмолчанию, КодДоходаВзносовПоУмолчанию, Перечисления.ДоходыФСС_НС.Облагается, , КодыДоходаПоСт255.пп1ст255,,,Ложь);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ДоплатаЗаПраздничныеИВыходные,	СпРасчета.ФиксированнойСуммой,							Перечисления.ВидыВремени.ДополнительноОплачиваемоеВПределахНормы,Категории.Первичное,		Неопределено, 					Ложь,   Ложь,   КодДоходаНДФЛПоУмолчанию, КодДоходаЕСНПоУмолчанию, КодДоходаВзносовПоУмолчанию, Перечисления.ДоходыФСС_НС.Облагается, , КодыДоходаПоСт255.пп3ст255,,,Ложь);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ОплатаСверхурочных,				СпРасчета.ФиксированнойСуммой,							Перечисления.ВидыВремени.ОтработанноеСверхНормы, 		Категории.Первичное,			УчетВремени.Сверхурочные, 			Истина, Ложь,   КодДоходаНДФЛПоУмолчанию, КодДоходаЕСНПоУмолчанию, КодДоходаВзносовПоУмолчанию, Перечисления.ДоходыФСС_НС.Облагается, , КодыДоходаПоСт255.пп3ст255,,,Ложь);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ДоплатаЗаВечерниеЧасы,	 		СпРасчета.ДоплатаЗаВечерниеЧасы,						Перечисления.ВидыВремени.ДополнительноОплачиваемоеВПределахНормы,Категории.Первичное,		УчетВремени.РаботаВечерниеЧасы,			Ложь,   Ложь,   КодДоходаНДФЛПоУмолчанию, КодДоходаЕСНПоУмолчанию, КодДоходаВзносовПоУмолчанию, Перечисления.ДоходыФСС_НС.Облагается, , КодыДоходаПоСт255.пп3ст255,,,Ложь);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ДоплатаЗаНочныеЧасы, 				СпРасчета.ДоплатаЗаНочныеЧасы,							Перечисления.ВидыВремени.ДополнительноОплачиваемоеВПределахНормы,Категории.Первичное,		УчетВремени.РаботаНочныеЧасы, 			Ложь,   Ложь,   КодДоходаНДФЛПоУмолчанию, КодДоходаЕСНПоУмолчанию, КодДоходаВзносовПоУмолчанию, Перечисления.ДоходыФСС_НС.Облагается, , КодыДоходаПоСт255.пп3ст255,,,Ложь);*/
			/*// начисления по больничному листу	
*/
			/*СпособУчетаБЛ = Справочники.СпособыОтраженияЗарплатыВРеглУчете.РаспределятьПоБазовымНачислениям;*/
			/*СпособУчетаФСС = ДобавитьСпособУчетаРегЗарплаты("За счет ЕСН в части ФСС", ПланСчетов.ФСС, Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию, , , 
			ПланСчетов.РасчетыСПерсоналомПоОплатеТруда,Справочники.ФизическиеЛица.ПустаяСсылка(),,,
			ПланыСчетов.Налоговый.ПустаяСсылка(), , , ,
			ПланыСчетов.Налоговый.ПустаяСсылка());*/
			/*СпособУчетаБЛпоТравме = ДобавитьСпособУчетаРегЗарплаты("Оплата б/л по травматизму", ПланСчетов.ФСС_НСиПЗ, Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию,,, 
			ПланСчетов.РасчетыСПерсоналомПоОплатеТруда,Справочники.ФизическиеЛица.ПустаяСсылка(),,,
			ПланыСчетов.Налоговый.ПустаяСсылка(), , , ,
			ПланыСчетов.Налоговый.ПустаяСсылка());*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ОплатаПоСреднемуБЛ, 				СпРасчета.ПоСреднемуЗаработкуФСС,						Перечисления.ВидыВремени.ЦелодневноеНеотработанное, 	ЗависимоеТретьегоУровня, 		УчетВремени.Болезнь, 				Ложь,   Истина, КодДоходаНДФЛБЛ, 	 ПособияЗаСчетФСС, ПособияЗаСчетФССВзносов,	 Перечисления.ДоходыФСС_НС.НеОблагается, СпособУчетаБЛ, ,Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоТрудовомуЗаконодательству,,Ложь,Перечисления.ВидыПособийСоциальногоСтрахования.Нетрудоспособность);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ДоплатаПоСреднемуБЛ, 				СпРасчета.ДоплатаДоСреднегоЗаработкаФСС,				Перечисления.ВидыВремени.ДополнительноОплачиваемоеВПределахНормы, 	ЗависимоеЧетвертогоУровня, 	УчетВремени.Болезнь, 				Ложь,   Ложь, КодДоходаНДФЛПоУмолчанию,  КодДоходаЕСНПоБазе, КодДоходаВзносовПоБазе,	 Перечисления.ДоходыФСС_НС.Облагается, СпособОтраженияПоБазовымРасчетам, Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоТрудовомуЗаконодательству,,Ложь);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ОтсутствиеПоБолезни, 				СпРасчета.НулеваяСумма,									Перечисления.ВидыВремени.ЦелодневноеНеотработанное, 	Категории.Первичное, 			УчетВремени.Болезнь, 				Ложь,   Истина, , , ,						 Перечисления.ДоходыФСС_НС.НеОблагается, НеОтражатьВБухУчете);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ОплатаВыходныхДнейПоУходуЗаДетьмиИнвалидами,СпРасчета.ПоСреднемуЗаработку,				Перечисления.ВидыВремени.ЦелодневноеНеотработанное, 	Категории.Первичное, 			УчетВремени.ДополнительныеВыходныеДниОплачиваемые,Ложь, Истина, ,			ПособияЗаСчетФСС, ПособияЗаСчетФССВзносов,	 Перечисления.ДоходыФСС_НС.НеОблагается, СпособУчетаБЛ, ,Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоТрудовомуЗаконодательству,,Ложь, Перечисления.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ОплатаБЛПоТравмеНаПроизводстве,	СпРасчета.ПоСреднемуЗаработкуФСС,						Перечисления.ВидыВремени.ЦелодневноеНеотработанное, 	ЗависимоеТретьегоУровня, 		УчетВремени.Болезнь, 				Ложь,   Истина, КодДоходаНДФЛБЛ, ЕСНСпособыОтражения.НеОблагаетсяЦеликом, ВзносыСпособыОтражения.НеОблагаетсяЦеликом, Перечисления.ДоходыФСС_НС.НеОблагается, СпособУчетаБЛпоТравме, ,Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоТрудовомуЗаконодательству,,Ложь, Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ОтпускПоБеременностиИРодам, 		СпРасчета.ПоСреднемуЗаработкуФСС,						Перечисления.ВидыВремени.ЦелодневноеНеотработанное, 	ЗависимоеТретьегоУровня, 		УчетВремени.ОтпускПоБеременностиИРодам, 	Ложь,   Истина, , 			 ПособияЗаСчетФСС, ПособияЗаСчетФССВзносов, 	 Перечисления.ДоходыФСС_НС.НеОблагается, СпособУчетаБЛ, ,Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоТрудовомуЗаконодательству,,Ложь, Перечисления.ВидыПособийСоциальногоСтрахования.БеременностьРоды);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ОтсутствиеПоБолезниПоБеременности,СпРасчета.НулеваяСумма,									Перечисления.ВидыВремени.ЦелодневноеНеотработанное, 	Категории.Первичное, 			УчетВремени.ОтпускПоБеременностиИРодам, 	Ложь,   Истина, , , ,						 Перечисления.ДоходыФСС_НС.НеОблагается, НеОтражатьВБухУчете);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ОплатаБЛПоТравмеВБыту,			СпРасчета.НулеваяСумма,									Перечисления.ВидыВремени.ЦелодневноеНеотработанное,		Категории.Первичное,			УчетВремени.БолезньБезОплаты,			Ложь,   Истина, , , , 						 Перечисления.ДоходыФСС_НС.НеОблагается, НеОтражатьВБухУчете);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ПособиеПоУходуЗаРебенкомДо1_5Лет,	СпРасчета.ПособиеПоУходуЗаРебенкомДо1_5Лет,				Перечисления.ВидыВремени.ДополнительноОплачиваемоеВПределахНормы, Категории.Первичное,	Неопределено,	 						Ложь,   Ложь, ,			 ПособияЗаСчетФСС, ПособияЗаСчетФССВзносов,	 Перечисления.ДоходыФСС_НС.НеОблагается, СпособУчетаБЛ, , Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоТрудовомуЗаконодательству,,Ложь,Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ПособиеПоУходуЗаРебенкомДо3Лет,	СпРасчета.ПособиеПоУходуЗаРебенкомДо3Лет,				Перечисления.ВидыВремени.ДополнительноОплачиваемоеВПределахНормы, Категории.Первичное,	Неопределено, 							Ложь,   Ложь, ,		ЕСНСпособыОтражения.НеОблагаетсяЦеликом, ВзносыСпособыОтражения.НеОблагаетсяЦеликом, Перечисления.ДоходыФСС_НС.НеОблагается);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ОтпускПоУходуЗаРебенкомБезОплаты,	СпРасчета.НулеваяСумма,									Перечисления.ВидыВремени.ЦелодневноеНеотработанное, 	Категории.Первичное,			УчетВремени.ОтпускПоУходуЗаРебенком, 		Ложь,   Истина, , , , Перечисления.ДоходыФСС_НС.Облагается, НеОтражатьВБухУчете);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.Невыход,							СпРасчета.НулеваяСумма,									Перечисления.ВидыВремени.ЦелодневноеНеотработанное, 	Категории.Первичное, 			УчетВремени.НеявкиПоНевыясненнымПричинам, 	Ложь,   Истина, , , , Перечисления.ДоходыФСС_НС.Облагается, НеОтражатьВБухУчете);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ОтпускБезОплатыПоТКРФ,			СпРасчета.НулеваяСумма,									Перечисления.ВидыВремени.ЦелодневноеНеотработанное, 	Категории.Первичное, 			УчетВремени.НеоплачиваемыйОтпускПоЗаконодательству,Ложь,Истина, , , , Перечисления.ДоходыФСС_НС.Облагается, НеОтражатьВБухУчете);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ОтпускБезОплатыУчебный,			СпРасчета.НулеваяСумма,									Перечисления.ВидыВремени.ЦелодневноеНеотработанное, 	Категории.Первичное, 			УчетВремени.ОтпускНаОбучениеНеоплачиваемый, 	Ложь,   Истина, , , , Перечисления.ДоходыФСС_НС.Облагается, НеОтражатьВБухУчете);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.ОтпускЗаСвойСчет,					СпРасчета.НулеваяСумма,									Перечисления.ВидыВремени.ЦелодневноеНеотработанное, 	Категории.Первичное,		УчетВремени.НеоплачиваемыйОтпускПоРазрешениюРаботодателя,Ложь,	Истина, , , , Перечисления.ДоходыФСС_НС.Облагается, НеОтражатьВБухУчете);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.Прогул,							СпРасчета.НулеваяСумма,									Перечисления.ВидыВремени.ЦелодневноеНеотработанное, 	Категории.Первичное, 			УчетВремени.Прогулы, 				Ложь,   Истина, , , , Перечисления.ДоходыФСС_НС.Облагается, НеОтражатьВБухУчете);*/
			/*КодДоходаЕСН    = КодДоходаЕСНПоБазе;*/
			/*СпособОтражения = СпособОтраженияПоБазовымРасчетам;*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.РайонныйКоэффициент,				СпРасчета.Процентом,									Перечисления.ВидыВремени.ДополнительноОплачиваемоеВПределахНормы, 	ЗависимоеВторогоУровня, УчетВремени.Работа, 		 		Ложь,   Ложь,	КодДоходаНДФЛПоУмолчанию, КодДоходаЕСН, КодДоходаВзносовПоБазе,Перечисления.ДоходыФСС_НС.Облагается, СпособОтражения, КодыДоходаПоСт255.пп11ст255,,,Ложь);*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ПВР.СевернаяНадбавка,					СпРасчета.СевернаяНадбавка,								Перечисления.ВидыВремени.ДополнительноОплачиваемоеВПределахНормы,	ЗависимоеВторогоУровня, УчетВремени.Работа, 		 		Ложь,   Ложь,	КодДоходаНДФЛПоУмолчанию, КодДоходаЕСН, КодДоходаВзносовПоБазе,Перечисления.ДоходыФСС_НС.Облагается, СпособОтражения, КодыДоходаПоСт255.пп12ст255,,,Ложь);*/
			/*// Непредопределенные виды расчетов
*/
			/*// доплата до среднего заработка
*/
			/*ВидРасчетаДоплатаДоСреднегоЗаработка = ПроцедурыОбновленияИнформационнойБазы.СоздатьВидРасчета(ПВР, "00035", "Доплата до среднего заработка");*/
			/*КодДоходаЕСН    = КодДоходаЕСНПоУмолчанию;*/
			/*СпособОтражения = ПустойСпособОтражения;*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ВидРасчетаДоплатаДоСреднегоЗаработка, СпРасчета.ДоплатаДоСреднегоЗаработка, Перечисления.ВидыВремени.ДополнительноОплачиваемоеВПределахНормы, Категории.ЗависимоеПервогоУровня, УчетВремени.Работа, Ложь, Ложь,   КодДоходаНДФЛПоУмолчанию, КодДоходаЕСН, КодДоходаВзносовПоУмолчанию, Перечисления.ДоходыФСС_НС.Облагается, СпособОтражения, КодыДоходаПоСт255.пп6ст255, Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоТрудовомуЗаконодательству, Истина, Ложь);*/
			/*БЛпрофзаболевание = ПроцедурыОбновленияИнформационнойБазы.СоздатьВидРасчета(ПВР, "00028", "Пособие в связи с профессиональными заболеваниями");*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(БЛпрофзаболевание,					СпРасчета.ПоСреднемуЗаработкуФСС,	Перечисления.ВидыВремени.ЦелодневноеНеотработанное, 				ЗависимоеТретьегоУровня, 		УчетВремени.Болезнь, Ложь,   Истина, КодДоходаНДФЛБЛ, ЕСНСпособыОтражения.НеОблагаетсяЦеликом, ВзносыСпособыОтражения.НеОблагаетсяЦеликом, Перечисления.ДоходыФСС_НС.НеОблагается, СпособУчетаБЛпоТравме, ,Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоТрудовомуЗаконодательству,,Ложь, Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание);*/
			/*// Внутрисменный прогул
*/
			/*ВидРасчетаВнутрисменныйПрогул = ПроцедурыОбновленияИнформационнойБазы.СоздатьВидРасчета(ПВР, "00036", "Внутрисменный прогул");*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(ВидРасчетаВнутрисменныйПрогул, СпРасчета.НулеваяСумма, Перечисления.ВидыВремени.ЧасовоеНеотработанное, Категории.Первичное, УчетВремени.Прогулы, Ложь, Истина, , , , Перечисления.ДоходыФСС_НС.Облагается, НеОтражатьВБухУчете,,,, Ложь);*/
			/*// ОтпускУчебный
*/
			/*ВидРасчетаОтпускУчебный = ПроцедурыОбновленияИнформационнойБазы.СоздатьВидРасчета(ПВР, "00037", "Отпуск учебный");*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(
		ВидРасчетаОтпускУчебный,
		СпРасчета.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням,
		Перечисления.ВидыВремени.ЦелодневноеНеотработанное,
		ЗависимоеТретьегоУровня,
		УчетВремени.ОтпускНаОбучение,
		Ложь,
		Истина,
		КодДоходаНДФЛОтпуск,
		КодДоходаЕСН,
		КодДоходаВзносовПоУмолчанию,
		Перечисления.ДоходыФСС_НС.Облагается,
		СпособОтражения,
		КодыДоходаПоСт255.пп7ст255,
		Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоТрудовомуЗаконодательству,
		,
		Ложь);*/
			/*ОплатаБолезниЗаСчетРаботодателя = ПроцедурыОбновленияИнформационнойБазы.ОписатьОплатуБолезниЗаСчетРаботодателя();*/
			/*// Дополнительные начисления организации
*/
			/*ПВР = ПланыВидовРасчета.ДополнительныеНачисленияОрганизаций;*/
			/*ВидыПремии = Перечисления.ВидыПремии;*/
			/*КодДоходаЕСН    = КодДоходаЕСНПоУмолчанию;*/
			/*СпособОтражения = ПустойСпособОтражения;*/
			/*УстановитьРеквизитыДополнительногоНачисленияОрганизации(ПВР.Годовая, СпРасчета.Процентом, Категории.ЗависимоеПервогоУровня, ВидыПремии.ГодоваяПремия, 	12, , КодДоходаНДФЛПоУмолчанию, КодДоходаЕСН, КодДоходаВзносовПоУмолчанию, Перечисления.ДоходыФСС_НС.Облагается, СпособОтражения, КодыДоходаПоСт255.пп2ст255);*/
			/*УстановитьРеквизитыДополнительногоНачисленияОрганизации(ПВР.Квартальная, СпРасчета.Процентом, Категории.ЗависимоеПервогоУровня, ВидыПремии.Премия, 		 3, , КодДоходаНДФЛПоУмолчанию, КодДоходаЕСН, КодДоходаВзносовПоУмолчанию, Перечисления.ДоходыФСС_НС.Облагается, СпособОтражения, КодыДоходаПоСт255.пп2ст255);*/
			/*УстановитьРеквизитыДополнительногоНачисленияОрганизации(ПВР.Месячная, СпРасчета.Процентом, Категории.ЗависимоеПервогоУровня, ВидыПремии.Премия, 	   	 1, , КодДоходаНДФЛПоУмолчанию, КодДоходаЕСН, КодДоходаВзносовПоУмолчанию, Перечисления.ДоходыФСС_НС.Облагается, СпособОтражения, КодыДоходаПоСт255.пп2ст255);*/
			/*УстановитьРеквизитыДополнительногоНачисленияОрганизации(ПВР.ДивидендыРаботников,						СпРасчета.ФиксированнойСуммой, 			Категории.Первичное				, ВидыПремии.НеПремия, 		 0, , ДоходыНДФЛ.Код1010	, 	ЕСНСпособыОтражения.ВыплатыЗаСчетПрибыли, ВзносыСпособыОтражения.НеЯвляетсяОбъектом, Перечисления.ДоходыФСС_НС.НеОблагается, Неопределено, Неопределено);*/
			/*УстановитьРеквизитыДополнительногоНачисленияОрганизации(ПВР.ДивидендыАкционеров,						СпРасчета.ФиксированнойСуммой, 			Категории.Первичное				, ВидыПремии.НеПремия, 		 0, , ДоходыНДФЛ.Код1010	, 	ЕСНСпособыОтражения.ВыплатыЗаСчетПрибыли, ВзносыСпособыОтражения.НеЯвляетсяОбъектом, Перечисления.ДоходыФСС_НС.НеОблагается, Неопределено, Неопределено);*/
			/*КодДоходаЕСН    = ЕСНСпособыОтражения.НеОблагаетсяЦеликом;*/
			/*УстановитьРеквизитыДополнительногоНачисленияОрганизации(ПВР.ВыходноеПособие,							СпРасчета.ПоСреднемуЗаработку, 			Категории.Первичное 			, ВидыПремии.НеПремия,		 0, Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоТрудовомуЗаконодательству, Неопределено	, 	КодДоходаЕСН, ВзносыСпособыОтражения.НеОблагаетсяЦеликом,  Перечисления.ДоходыФСС_НС.НеОблагается, СпособОтражения, КодыДоходаПоСт255.пп9ст255);*/
			/*УстановитьРеквизитыДополнительногоНачисленияОрганизации(ПВР.СохраняемыйЗаработокНаВремяТрудоустройства,	СпРасчета.ПоСреднемуЗаработку, 			Категории.Первичное 			, ВидыПремии.НеПремия,		 0, Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоТрудовомуЗаконодательству, Неопределено	, 	КодДоходаЕСН, ВзносыСпособыОтражения.НеОблагаетсяЦеликом,  Перечисления.ДоходыФСС_НС.НеОблагается, СпособОтражения, КодыДоходаПоСт255.пп9ст255);*/
			/*// две компенсации отпуска (при увольнении)
*/
			/*УстановитьРеквизитыДополнительногоНачисленияОрганизации(ПВР.КомпенсацияОтпускаКалендарныеДни,	СпРасчета.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням,	Категории.Первичное	, ВидыПремии.НеПремия,		 0, Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоТрудовомуЗаконодательству, КодДоходаНДФЛОтпуск, КодДоходаЕСН, КодДоходаВзносовПоУмолчанию, Перечисления.ДоходыФСС_НС.НеОблагается, СпособОтражения, КодыДоходаПоСт255.пп8ст255);*/
			/*УстановитьРеквизитыДополнительногоНачисленияОрганизации(ПВР.КомпенсацияОтпускаШестидневка,		СпРасчета.ПоСреднемуЗаработкуДляОтпускаПоШестидневке,		Категории.Первичное	, ВидыПремии.НеПремия,		 0, Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоТрудовомуЗаконодательству, КодДоходаНДФЛОтпуск, КодДоходаЕСН, КодДоходаВзносовПоУмолчанию,  Перечисления.ДоходыФСС_НС.НеОблагается, СпособОтражения, КодыДоходаПоСт255.пп8ст255);*/
			/*// и еще две компенсации отпуска (без увольнения)
*/
			/*КодДоходаЕСН    = КодДоходаЕСНПоУмолчанию;*/
			/*СпособОтражения = ПустойСпособОтражения;*/
			/*УстановитьРеквизитыДополнительногоНачисленияОрганизации(ПВР.УдержаниеЗаНеотработанныйОтпускКалендарныеДни, СпРасчета.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням,Категории.Первичное	, ВидыПремии.НеПремия,	 0, Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоТрудовомуЗаконодательству, КодДоходаНДФЛОтпуск, КодДоходаЕСН, КодДоходаВзносовПоУмолчанию,	Перечисления.ДоходыФСС_НС.Облагается,	СпособОтражения, КодыДоходаПоСт255.пп7ст255);*/
			/*УстановитьРеквизитыДополнительногоНачисленияОрганизации(ПВР.УдержаниеЗаНеотработанныйОтпускШестидневка,	СпРасчета.ПоСреднемуЗаработкуДляОтпускаПоШестидневке,		Категории.Первичное	, ВидыПремии.НеПремия,	 0, Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоТрудовомуЗаконодательству, КодДоходаНДФЛОтпуск, КодДоходаЕСН, КодДоходаВзносовПоУмолчанию,	Перечисления.ДоходыФСС_НС.Облагается,	СпособОтражения, КодыДоходаПоСт255.пп7ст255);*/
			/*УстановитьРеквизитыДополнительногоНачисленияОрганизации(ПВР.КомпенсацияОтпускаКалендарныеДниБезУвольнения,СпРасчета.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням,	Категории.Первичное	, ВидыПремии.НеПремия,	 0, Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоТрудовомуЗаконодательству, КодДоходаНДФЛОтпуск, КодДоходаЕСН, КодДоходаВзносовПоУмолчанию,	Перечисления.ДоходыФСС_НС.Облагается,	СпособОтражения, КодыДоходаПоСт255.пп8ст255);*/
			/*УстановитьРеквизитыДополнительногоНачисленияОрганизации(ПВР.КомпенсацияОтпускаШестидневкаБезУвольнения,	СпРасчета.ПоСреднемуЗаработкуДляОтпускаПоШестидневке,		Категории.Первичное	, ВидыПремии.НеПремия,	 0, Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоТрудовомуЗаконодательству, КодДоходаНДФЛОтпуск, КодДоходаЕСН, КодДоходаВзносовПоУмолчанию,	Перечисления.ДоходыФСС_НС.Облагается,	СпособОтражения, КодыДоходаПоСт255.пп8ст255);*/
			/*// пособия за счет ФСС
*/
			/*УстановитьРеквизитыДополнительногоНачисленияОрганизации(ПВР.ВСвязиСоСмертью,							СпРасчета.ФиксированнойСуммой, 			Категории.Первичное 			, ВидыПремии.НеПремия,		 0, ,  Неопределено	, 	ПособияЗаСчетФСС, ПособияЗаСчетФССВзносов,	Перечисления.ДоходыФСС_НС.НеОблагается, Неопределено, Неопределено, Перечисления.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью);*/
			/*УстановитьРеквизитыДополнительногоНачисленияОрганизации(ПВР.ПриПостановкеНаУчетВРанниеСрокиБеременности,СпРасчета.ФиксированнойСуммой, 			Категории.Первичное 			, ВидыПремии.НеПремия,		 0, ,  Неопределено	, 	ПособияЗаСчетФСС, ПособияЗаСчетФССВзносов,	Перечисления.ДоходыФСС_НС.НеОблагается, Неопределено, Неопределено, Перечисления.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности);*/
			/*УстановитьРеквизитыДополнительногоНачисленияОрганизации(ПВР.ПриРожденииРебенка,							СпРасчета.ФиксированнойСуммой, 			Категории.Первичное 			, ВидыПремии.НеПремия,		 0, ,  Неопределено	, 	ПособияЗаСчетФСС, ПособияЗаСчетФССВзносов,	Перечисления.ДоходыФСС_НС.НеОблагается, Неопределено, Неопределено, Перечисления.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка);*/
			/*УстановитьРеквизитыДополнительногоНачисленияОрганизации(ПВР.ПриУсыновленииРебенка,						СпРасчета.ФиксированнойСуммой, 			Категории.Первичное 			, ВидыПремии.НеПремия,		 0, ,  Неопределено	, 	ПособияЗаСчетФСС, ПособияЗаСчетФССВзносов,	Перечисления.ДоходыФСС_НС.НеОблагается, Неопределено, Неопределено, Перечисления.ВидыПособийСоциальногоСтрахования.ПриУсыновленииРебенка);*/
			/*// договора ГПХ
*/
			/*УстановитьРеквизитыДополнительногоНачисленияОрганизации(ПВР.ДоговорПодряда, 							СпРасчета.ПоДоговоруФиксированнойСуммой,	Категории.Первичное			, ВидыПремии.НеПремия,		 0, ,  ДоходыНДФЛ.Код2010, 	ЕСНСпособыОтражения.ДоговораГПХ, ВзносыСпособыОтражения.ДоговорыГПХ,	  Перечисления.ДоходыФСС_НС.НеОблагается, Неопределено, КодыДоходаПоСт255.пп21ст255);*/
			/*УстановитьРеквизитыДополнительногоНачисленияОрганизации(ПВР.АвторскийДоговор, 							СпРасчета.ПоДоговоруФиксированнойСуммой,	Категории.Первичное			, ВидыПремии.НеПремия,		 0, ,  ДоходыНДФЛ.Код2201, 	ЕСНСпособыОтражения.ДоговораАвторские, ВзносыСпособыОтражения.АвторскиеЛитературныеПроизведения,	  Перечисления.ДоходыФСС_НС.НеОблагается, Неопределено, КодыДоходаПоСт255.пп21ст255);*/
			/*УстановитьРеквизитыДополнительногоНачисленияОрганизации(ПВР.ЛицензионныйДоговор, 						СпРасчета.ПоДоговоруФиксированнойСуммой,	Категории.Первичное			, ВидыПремии.НеПремия,		 0, ,  ДоходыНДФЛ.Код1300, 	ЕСНСпособыОтражения.НеЯвляетсяОбъектом, ВзносыСпособыОтражения.АвторскиеЛитературныеПроизведения,	  Перечисления.ДоходыФСС_НС.НеОблагается, Неопределено, КодыДоходаПоСт255.пп21ст255);*/
			/*// компенсация подотчетных ДС
*/
			/*УстановитьРеквизитыДополнительногоНачисленияОрганизации(ПВР.КомпенсацияПодотчетныхДС, 					СпРасчета.ФиксированнойСуммой,				Категории.Первичное			, ВидыПремии.НеПремия,		 0, , Неопределено, 		Неопределено,				  Неопределено,	Неопределено,			 Неопределено, Неопределено);*/
			/*// ----------------------------------------------------------------------------------------------------
*/
			/*// Установка базовых видов расчетов
*/
			/*ПВРОсн  = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций;*/
			/*ПВРДоп  = ПланыВидовРасчета.ДополнительныеНачисленияОрганизаций;*/
			/*ПВРУд   = ПланыВидовРасчета.УдержанияОрганизаций;*/
			/*ПВРСред = ПланыВидовРасчета.СреднийЗаработок;*/
			/*СпНачисленийЗаОтработанноеВремя = Новый СписокЗначений;*/
			/*СпНачисленийЗаОтработанноеВремя.Добавить(ПВРОсн.ОкладПоДням);*/
			/*СпНачисленийЗаОтработанноеВремя.Добавить(ПВРОсн.ОкладПоЧасам);*/
			/*СпНачисленийЗаОтработанноеВремя.Добавить(ПВРОсн.ТарифДневной);*/
			/*СпНачисленийЗаОтработанноеВремя.Добавить(ПВРОсн.ТарифЧасовой);*/
			/*СпНачисленийЗаОтработанноеВремя.Добавить(ПВРОсн.ДоплатаЗаПраздничныеИВыходные);*/
			/*СпНачисленийЗаОтработанноеВремя.Добавить(ПВРОсн.ОплатаПраздничныхИВыходных);*/
			/*СпНачисленийЗаОтработанноеВремя.Добавить(ПВРОсн.ОплатаСверхурочных);*/
			/*СпНачисленийЗаОтработанноеВремя.Добавить(ПВРОсн.СдельнаяОплата);*/
			/*СпНачисленийЗаОтработанноеВремя.Добавить(ПВРОсн.ДоплатаЗаВечерниеЧасы);*/
			/*СпНачисленийЗаОтработанноеВремя.Добавить(ПВРОсн.ДоплатаЗаНочныеЧасы);*/
			/*// База основных начислений организации
*/
			/*СпБазовыхРасчетов = СпНачисленийЗаОтработанноеВремя.Скопировать();*/
			/*СпБазовыхРасчетов.Добавить(ПВРДоп.Годовая);*/
			/*СпБазовыхРасчетов.Добавить(ПВРДоп.Месячная);*/
			/*СпБазовыхРасчетов.Добавить(ПВРДоп.Квартальная);*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьБазовыеИВедущиеРасчеты(ПВРОсн.РайонныйКоэффициент, СпБазовыхРасчетов, СпБазовыхРасчетов);*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьБазовыеИВедущиеРасчеты(ПВРОсн.СевернаяНадбавка, СпБазовыхРасчетов, СпБазовыхРасчетов);*/
			/*// доплата до среднего заработка имеет базу
*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьБазовыеИВедущиеРасчеты(ВидРасчетаДоплатаДоСреднегоЗаработка, СпБазовыхРасчетов, СпБазовыхРасчетов);*/
			/*СпБазовыхРасчетов = Новый СписокЗначений;*/
			/*СпБазовыхРасчетов.Добавить(ПВРОсн.ОплатаБЛПоТравмеНаПроизводстве);*/
			/*СпБазовыхРасчетов.Добавить(ПВРОсн.ОплатаПоСреднемуБЛ);*/
			/*СпБазовыхРасчетов.Добавить(ОплатаБолезниЗаСчетРаботодателя);*/
			/*СпБазовыхРасчетов.Добавить(ПВРОсн.ОтпускПоБеременностиИРодам);*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьБазовыеИВедущиеРасчеты(ПВРОсн.ДоплатаПоСреднемуБЛ, СпБазовыхРасчетов, СпБазовыхРасчетов);*/
			/*// База дополнительных начислений организации
*/
			/*// все виды премий
*/
			/*СпБазовыхРасчетов = СпНачисленийЗаОтработанноеВремя.Скопировать();*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьБазовыеИВедущиеРасчеты(ПВРДоп.Годовая, СпБазовыхРасчетов, СпБазовыхРасчетов);*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьБазовыеИВедущиеРасчеты(ПВРДоп.Квартальная, СпБазовыхРасчетов, СпБазовыхРасчетов);*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьБазовыеИВедущиеРасчеты(ПВРДоп.Месячная, СпБазовыхРасчетов, СпБазовыхРасчетов);*/
			/*ПроцедурыОбновленияИнформационнойБазы.ОписатьЗаработокПособийС2011();*/
			/*// Базы видов расчета плана "средний заработок" 
*/
			/*// месячные и квартальные премии
*/
			/*СпБазовыхРасчетов = Новый СписокЗначений;*/
			/*СпБазовыхРасчетов.Добавить(ПВРДоп.Годовая);*/
			/*СпВедущихРасчетов = СпНачисленийЗаОтработанноеВремя.Скопировать();*/
			/*// т.е. изменение оклада должно вызвать перерасчет не только премии, но и среднего заработка
*/
			/*СпВедущихРасчетов.Добавить(ПВРДоп.Годовая);*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьБазовыеИВедущиеРасчеты(ПВРСред.ПоГодовойПремии, СпБазовыхРасчетов, СпВедущихРасчетов);*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьБазовыеИВедущиеРасчеты(ПВРСред.ПоГодовойПремииБЛ, СпБазовыхРасчетов, СпВедущихРасчетов);*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьБазовыеИВедущиеРасчеты(ПВРСред.ПоГодовойПремииИндексируемые, СпБазовыхРасчетов, СпВедущихРасчетов);*/
			/*// месячные и квартальные премии
*/
			/*СпБазовыхРасчетов = Новый СписокЗначений;*/
			/*СпБазовыхРасчетов.Добавить(ПВРДоп.Месячная);*/
			/*СпБазовыхРасчетов.Добавить(ПВРДоп.Квартальная);*/
			/*СпВедущихРасчетов = СпНачисленийЗаОтработанноеВремя.Скопировать();*/
			/*// т.е. изменение оклада должно вызвать перерасчет не только премии, но и среднего заработка
*/
			/*СпВедущихРасчетов.Добавить(ПВРДоп.Месячная);*/
			/*СпВедущихРасчетов.Добавить(ПВРДоп.Квартальная);*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьБазовыеИВедущиеРасчеты(ПВРСред.ПоПремиям, СпБазовыхРасчетов, СпВедущихРасчетов);*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьБазовыеИВедущиеРасчеты(ПВРСред.ПоПремиямБЛ, СпБазовыхРасчетов, СпВедущихРасчетов);*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьБазовыеИВедущиеРасчеты(ПВРСред.ПоПремиямПособий, СпБазовыхРасчетов, СпВедущихРасчетов);*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьБазовыеИВедущиеРасчеты(ПВРСред.ПоПремиямИндексируемые, СпБазовыхРасчетов, СпВедущихРасчетов);*/
			/*// основной заработок
*/
			/*СпБазовыхРасчетов = СпНачисленийЗаОтработанноеВремя.Скопировать();*/
			/*СпБазовыхРасчетов.Добавить(ПВРОсн.РайонныйКоэффициент);*/
			/*СпБазовыхРасчетов.Добавить(ПВРОсн.СевернаяНадбавка);*/
			/*СпВедущихРасчетов = СпНачисленийЗаОтработанноеВремя.Скопировать();*/
			/*СпВедущихРасчетов.Добавить(ПВРДоп.Годовая);*/
			/*СпВедущихРасчетов.Добавить(ПВРДоп.Месячная);*/
			/*СпВедущихРасчетов.Добавить(ПВРДоп.Квартальная);*/
			/*СпВедущихРасчетов.Добавить(ПВРОсн.РайонныйКоэффициент);*/
			/*СпВедущихРасчетов.Добавить(ПВРОсн.СевернаяНадбавка);*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьБазовыеИВедущиеРасчеты(ПВРСред.ПоЗаработкуБЛ, СпБазовыхРасчетов, СпВедущихРасчетов);*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьБазовыеИВедущиеРасчеты(ПВРСред.ПоЗаработку, СпБазовыхРасчетов, СпВедущихРасчетов);*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьБазовыеИВедущиеРасчеты(ПВРСред.ПоЗаработкуПособий, СпБазовыхРасчетов, СпВедущихРасчетов);*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьБазовыеИВедущиеРасчеты(ПВРСред.ПоЗаработкуИндексируемые, СпБазовыхРасчетов, СпВедущихРасчетов);*/
			/*// База удержаний организации
*/
			/*// исполнительные листы
*/
			/*СпБазовыхРасчетов = СпНачисленийЗаОтработанноеВремя.Скопировать();*/
			/*СпБазовыхРасчетов.Добавить(ПВРОсн.ОплатаПоСреднему);*/
			/*СпБазовыхРасчетов.Добавить(ПВРОсн.ОплатаПоСреднемуОтпКалендарныеДни);*/
			/*СпБазовыхРасчетов.Добавить(ПВРОсн.ОплатаПоСреднемуОтпШестидневка);*/
			/*СпБазовыхРасчетов.Добавить(ПВРОсн.ОплатаВыходныхДнейПоУходуЗаДетьмиИнвалидами);*/
			/*СпБазовыхРасчетов.Добавить(ВидРасчетаДоплатаДоСреднегоЗаработка);*/
			/*СпБазовыхРасчетов.Добавить(ПВРОсн.ПростойОкладПоДням);*/
			/*СпБазовыхРасчетов.Добавить(ПВРОсн.ПростойОкладПоЧасам);*/
			/*СпБазовыхРасчетов.Добавить(ПВРОсн.ПростойПоВинеРаботодателя);*/
			/*СпБазовыхРасчетов.Добавить(ПВРОсн.ПростойТарифДневной);*/
			/*СпБазовыхРасчетов.Добавить(ПВРОсн.ПростойТарифЧасовой);*/
			/*СпБазовыхРасчетов.Добавить(ПВРОсн.РайонныйКоэффициент);*/
			/*СпБазовыхРасчетов.Добавить(ПВРОсн.СевернаяНадбавка);*/
			/*СпБазовыхРасчетов.Добавить(ПВРДоп.Годовая);*/
			/*СпБазовыхРасчетов.Добавить(ПВРДоп.Квартальная);*/
			/*СпБазовыхРасчетов.Добавить(ПВРДоп.Месячная);*/
			/*СпБазовыхРасчетов.Добавить(ПВРДоп.КомпенсацияОтпускаКалендарныеДниБезУвольнения);*/
			/*СпБазовыхРасчетов.Добавить(ПВРДоп.КомпенсацияОтпускаКалендарныеДни);*/
			/*СпБазовыхРасчетов.Добавить(ПВРДоп.КомпенсацияОтпускаШестидневка);*/
			/*СпБазовыхРасчетов.Добавить(ПВРДоп.КомпенсацияОтпускаШестидневкаБезУвольнения);*/
			/*СпБазовыхРасчетов.Добавить(ПВРДоп.СохраняемыйЗаработокНаВремяТрудоустройства);*/
			/*СпБазовыхРасчетов.Добавить(ПВРДоп.АвторскийДоговор);*/
			/*СпБазовыхРасчетов.Добавить(ПВРДоп.ДоговорПодряда);*/
			/*СпБазовыхРасчетов.Добавить(ПВРДоп.ЛицензионныйДоговор);*/
			/*СпБазовыхРасчетов.Добавить(ПВРДоп.ДивидендыРаботников);*/
			/*СпБазовыхРасчетов.Добавить(ПВРДоп.ДивидендыАкционеров);*/
			/*// Удержания организаций 
*/
			/*УстановитьРеквизитыУдержанияОрганизации(ПВРУд.УдержаниеЗаНеотработанныйОтпускКалендарныеДни, 	СпРасчета.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням,	Категории.Первичное, Неопределено, Неопределено, );*/
			/*УстановитьРеквизитыУдержанияОрганизации(ПВРУд.УдержаниеЗаНеотработанныйОтпускШестидневка, 	СпРасчета.ПоСреднемуЗаработкуДляОтпускаПоШестидневке,		Категории.Первичное, Неопределено, Неопределено, );*/
			/*СпособУчетаИЛ = ДобавитьСпособУчетаРегЗарплаты("Удержания по исполнительным документам", ПланСчетов.РасчетыСПерсоналомПоОплатеТруда,Справочники.ФизическиеЛица.ПустаяСсылка(),,, 
					ПланСчетов.РасчетыПоИсполнительнымДокументамРаботников,Справочники.Контрагенты.ПустаяСсылка(),Документы.ИсполнительныйЛист.ПустаяСсылка(),,
					ПланыСчетов.Налоговый.ПустаяСсылка(), , , ,
					ПланыСчетов.Налоговый.ПустаяСсылка());*/
			/*УстановитьРеквизитыУдержанияОрганизации(ПВРУд.ИЛПроцентомБезБЛ			, СпРасчета.ИсполнительныйЛистПроцентом				, Категории.Первичное			, СпособУчетаИЛ,СпБазовыхРасчетов);*/
			/*УстановитьРеквизитыУдержанияОрганизации(ПВРУд.ИЛПроцентомДоПределаБезБЛ	, СпРасчета.ИсполнительныйЛистПроцентомДоПредела	, Категории.Первичное			, СпособУчетаИЛ,СпБазовыхРасчетов);*/
			/*УстановитьРеквизитыУдержанияОрганизации(ПВРУд.ИЛФиксированнойСуммой		, СпРасчета.УдержаниеФиксированнойСуммой			, Категории.Первичное			, СпособУчетаИЛ);*/
			/*УстановитьРеквизитыУдержанияОрганизации(ПВРУд.ИЛФиксированнойСуммойДоПредела, СпРасчета.ИсполнительныйЛистФиксСуммойДоПредела	, Категории.Первичное			, СпособУчетаИЛ);*/
			/*УстановитьРеквизитыУдержанияОрганизации(ПВРУд.ПочтовыйСборПоИЛ			, СпРасчета.ПочтовыйСбор							, Категории.ЗависимоеПервогоУровня,	СпособУчетаИЛ);*/
			/*// Создадим квази-предопределенные ВР 
*/
			/*ПроцедурыОбновленияИнформационнойБазы.СозданиеВРБанковскиеИздержкиПоИЛ();*/
			/*ПроцедурыОбновленияИнформационнойБазы.СозданиеВРИЛВПрожиточныхМинимумах();*/
			/*СпБазовыхРасчетов.Добавить(ПВРОсн.ОплатаПоСреднемуБЛ);*/
			/*СпБазовыхРасчетов.Добавить(ОплатаБолезниЗаСчетРаботодателя);*/
			/*СпБазовыхРасчетов.Добавить(ПВРОсн.ОплатаБЛПоТравмеВБыту);*/
			/*СпБазовыхРасчетов.Добавить(ПВРОсн.ОплатаБЛПоТравмеНаПроизводстве);*/
			/*СпБазовыхРасчетов.Добавить(ПВРОсн.ДоплатаПоСреднемуБЛ);*/
			/*УстановитьРеквизитыУдержанияОрганизации(ПВРУд.ИЛПроцентом					, СпРасчета.ИсполнительныйЛистПроцентом				, Категории.Первичное			, СпособУчетаИЛ,СпБазовыхРасчетов);*/
			/*УстановитьРеквизитыУдержанияОрганизации(ПВРУд.ИЛПроцентомДоПредела		, СпРасчета.ИсполнительныйЛистПроцентомДоПредела	, Категории.Первичное			, СпособУчетаИЛ,СпБазовыхРасчетов);*/
			/*УстановитьРеквизитыУдержанияОрганизации(ПВРУд.УдержаниеПодотчетныхДС	, СпРасчета.УдержаниеФиксированнойСуммой			, Категории.Первичное			, Неопределено);*/
			/*ВидРасчетаДСВ = ПроцедурыОбновленияИнформационнойБазы.СоздатьВидРасчета(ПВРУд, "00023", "Добровольные страховые взносы в ПФР (процентом)");*/
			/*УстановитьРеквизитыУдержанияОрганизации(ВидРасчетаДСВ, СпРасчета.ПроцентомОтОблагаемыхЕСННачислений	, Категории.Первичное, Неопределено, , , Истина);*/
			/*ВидРасчетаДСВ = ПроцедурыОбновленияИнформационнойБазы.СоздатьВидРасчета(ПВРУд, "00022", "Добровольные страховые взносы в ПФР (фиксированной суммой)");*/
			/*УстановитьРеквизитыУдержанияОрганизации(ВидРасчетаДСВ, СпРасчета.УдержаниеФиксированнойСуммой		, Категории.Первичное, Неопределено, , , Истина);*/
			/*// для вида расчета Отпуск учебный заполним список вытесняющих
*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст =
	"ВЫБРАТЬ
	|	ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета.ВидРасчета
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВытесняющиеВидыРасчета КАК ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета
	|ГДЕ
	|	ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтпКалендарныеДни)";*/
			/*ВидРасчета = ВидРасчетаОтпускУчебный.ПолучитьОбъект();*/
			/*ВидРасчета.ВытесняющиеВидыРасчета.Загрузить(Запрос.Выполнить().Выгрузить());*/
			/*ВидРасчета.ОбменДанными.Загрузка = Истина;*/
			/*ВидРасчета.Записать();*/
			/*// для вида расчета ОтпускПоУходуЗаРебенкомБезОплаты заполним список вытесняющих
*/
			/*Запрос.Текст =
	"ВЫБРАТЬ
	|	ОсновныеНачисленияОрганизаций.Ссылка КАК ВидРасчета
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
	|ГДЕ
	|	ОсновныеНачисленияОрганизаций.ВидВремени В (ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ОтработанноеВПределахНормы), ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ЦелодневноеНеотработанное))
	|	И ОсновныеНачисленияОрганизаций.Ссылка <> ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты)";*/
			/*ВидРасчета = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты.ПолучитьОбъект();*/
			/*ВидРасчета.ВытесняющиеВидыРасчета.Загрузить(Запрос.Выполнить().Выгрузить());*/
			/*ВидРасчета.ОбменДанными.Загрузка = Истина;*/
			/*ВидРасчета.Записать();*/
			/*СоответствиеВидовРасчета = Новый ТаблицаЗначений;*/
			/*СоответствиеВидовРасчета.Колонки.Добавить("Образец", Новый ОписаниеТипов("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"));*/
			/*СоответствиеВидовРасчета.Колонки.Добавить("НовыйВидРасчета", Новый ОписаниеТипов("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"));*/
			/*НоваяСтрока = СоответствиеВидовРасчета.Добавить();*/
			/*НоваяСтрока.Образец = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуБЛ;*/
			/*НоваяСтрока.НовыйВидРасчета = ОплатаБолезниЗаСчетРаботодателя;*/
			/*НоваяСтрока = СоответствиеВидовРасчета.Добавить();*/
			/*НоваяСтрока.Образец = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуБЛ;*/
			/*НоваяСтрока.НовыйВидРасчета = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтсутствиеПоБолезни;*/
			/*НоваяСтрока = СоответствиеВидовРасчета.Добавить();*/
			/*НоваяСтрока.Образец = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоБеременностиИРодам;*/
			/*НоваяСтрока.НовыйВидРасчета = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтсутствиеПоБолезниПоБеременности;*/
			/*НоваяСтрока = СоответствиеВидовРасчета.Добавить();*/
			/*НоваяСтрока.Образец = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтпКалендарныеДни;*/
			/*НоваяСтрока.НовыйВидРасчета = ВидРасчетаОтпускУчебный;*/
			/*ПроцедурыОбновленияИнформационнойБазы.СкопироватьВытеснениеВидовРасчета(СоответствиеВидовРасчета);*/
		}
		// Функция заполняет реквизиты элемента справочника "Показатели схем мотивации" по переданому
		// наименованию. Если наименование не передано, создается новый элемент справочника.
		// Запускается при первоначальном заполнении пустой ИБ.
		//

		public object УстановитьРеквизитыПоказателяСхемМотивации(/*Показатель = Неопределено, ТипПоказателя, ВозможностьИзменения, Наименование = "", ВидПоказателя = Неопределено, Идентификатор = "", ТарифнаяСтавка = Ложь, ВалютаРегламентированногоУчета=Неопределено*/)
		{
			if(true/*Наименование <> ""*/)
			{
				/*Ссылка = Справочники.ПоказателиСхемМотивации.НайтиПоНаименованию(Наименование);*/
				if(true/*Ссылка.Пустая()*/)
				{
					/*ПоказательОбъект = Справочники.ПоказателиСхемМотивации.СоздатьЭлемент();*/
					/*ПоказательОбъект.Наименование = Наименование;*/
				}
			}
			/*// по умолчанию показатель "индивидуальный"
*/
			if(true/*ВидПоказателя = Неопределено*/)
			{
				/*ПоказательОбъект.ВидПоказателя = Перечисления.ВидыПоказателейСхемМотивации.Индивидуальный;*/
			}
			if(true/*ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.Денежный*/)
			{
				/*ПоказательОбъект.Валюта = ВалютаРегламентированногоУчета;*/
			}
			/*ПоказательОбъект.ТипПоказателя = ТипПоказателя;*/
			/*ПоказательОбъект.ВозможностьИзменения = ВозможностьИзменения;*/
			/*ПоказательОбъект.Идентификатор = Идентификатор;*/
			/*ПоказательОбъект.Записать();*/
			return null;
		}
		//УстановитьРеквизитыПоказателяСхемМотивации
		// Процедура заполняет реквизиты упр. удержания УдержаноПоБухгалтерии
		// Запускается при обновлении на 1.2.15 и при первоначальном заполнении пустой ИБ.
		//

		public void ЗаполнитьПланыВидовРасчетаУправленческиеУдержания(/**/)
		{
			/*Экспорт

	ОбъектВР = ПланыВидовРасчета.УправленческиеУдержания.УдержаноПоБухгалтерии.ПолучитьОбъект();*/
			/*ОбъектВР.ПроизвольнаяФормулаРасчета	= Истина;*/
			/*ОбъектВР.СпособРасчета				= Перечисления.СпособыРасчетаОплатыТруда.ФиксированнойСуммой;*/
			/*ОбъектВР.КатегорияРасчета			= Справочники.КатегорииРасчетов.Первичное;*/
			/*ОбъектВР.ФормулаРасчета				= "";*/
			/*ОбъектВР.Записать();*/
		}
		// Выполняет заполнение реквизитов управленческих планов видов расчета
		// Запускается при первоначальном заполнении пустой ИБ.
		//

		public void ЗаполнитьСхемыМотивации(/*ВалютаРегламентированногоУчета*/)
		{
			/*Числовой = Перечисления.ТипыПоказателейСхемМотивации.Числовой;*/
			/*Денежный = Перечисления.ТипыПоказателейСхемМотивации.Денежный;*/
			/*Процентный = Перечисления.ТипыПоказателейСхемМотивации.Процентный;*/
			/*Ежемесячно = Перечисления.ИзменениеПоказателейСхемМотивации.Ежемесячно;*/
			/*НеИзменяется = Перечисления.ИзменениеПоказателейСхемМотивации.НеИзменяется;*/
			/*ВозможностьИзмененияНеУказана = Перечисления.ИзменениеПоказателейСхемМотивации.ПустаяСсылка();*/
			/*ПоказателиСхемМотивации = Справочники.ПоказателиСхемМотивации;*/
			/*ВремяВДнях = ПоказателиСхемМотивации.ВремяВДнях.ПолучитьОбъект();*/
			/*ВремяВЧасах = ПоказателиСхемМотивации.ВремяВЧасах.ПолучитьОбъект();*/
			/*НормаВремениВДнях = ПоказателиСхемМотивации.НормаВремениВДнях.ПолучитьОбъект();*/
			/*НормаВремениВЧасах = ПоказателиСхемМотивации.НормаВремениВЧасах.ПолучитьОбъект();*/
			/*РасчетнаяБаза = ПоказателиСхемМотивации.РасчетнаяБаза.ПолучитьОбъект();*/
			/*СдельнаяВыработка = ПоказателиСхемМотивации.СдельнаяВыработка.ПолучитьОбъект();*/
			/*Стаж = ПоказателиСхемМотивации.Стаж.ПолучитьОбъект();*/
			/*// пустой вид показателя
*/
			/*УстановитьРеквизитыПоказателяСхемМотивации(ВремяВДнях,				Числовой, ВозможностьИзмененияНеУказана,,,"ВремяВДнях",,ВалютаРегламентированногоУчета);*/
			/*УстановитьРеквизитыПоказателяСхемМотивации(ВремяВЧасах,				Числовой, ВозможностьИзмененияНеУказана,,,"ВремяВЧасах",,ВалютаРегламентированногоУчета);*/
			/*УстановитьРеквизитыПоказателяСхемМотивации(НормаВремениВДнях,		Числовой, ВозможностьИзмененияНеУказана,,,"НормаВремениВДнях",,ВалютаРегламентированногоУчета);*/
			/*УстановитьРеквизитыПоказателяСхемМотивации(НормаВремениВЧасах,		Числовой, ВозможностьИзмененияНеУказана,,,"НормаВремениВЧасах",,ВалютаРегламентированногоУчета);*/
			/*УстановитьРеквизитыПоказателяСхемМотивации(РасчетнаяБаза,			Числовой, ВозможностьИзмененияНеУказана,,,"РасчетнаяБаза",,ВалютаРегламентированногоУчета);*/
			/*УстановитьРеквизитыПоказателяСхемМотивации(СдельнаяВыработка,		Числовой, ВозможностьИзмененияНеУказана,,,"СдельнаяВыработка",,ВалютаРегламентированногоУчета);*/
			/*УстановитьРеквизитыПоказателяСхемМотивации(Стаж,					Числовой, ВозможностьИзмененияНеУказана,,,"Стаж",,ВалютаРегламентированногоУчета);*/
			/*УстановитьРеквизитыПоказателяСхемМотивации(ПоказателиСхемМотивации.ТарифнаяСтавкаДневная.ПолучитьОбъект(),	Денежный, НеИзменяется,,,"ТарифнаяСтавкаДневная",Истина,ВалютаРегламентированногоУчета);*/
			/*УстановитьРеквизитыПоказателяСхемМотивации(ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная.ПолучитьОбъект(),	Денежный, НеИзменяется,,,"ТарифнаяСтавкаМесячная",Истина,ВалютаРегламентированногоУчета);*/
			/*УстановитьРеквизитыПоказателяСхемМотивации(ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая.ПолучитьОбъект(),	Денежный, НеИзменяется,,,"ТарифнаяСтавкаЧасовая",Истина,ВалютаРегламентированногоУчета);*/
			/*УстановитьРеквизитыПоказателяСхемМотивации(ПоказателиСхемМотивации.ВремяВКалендарныхДнях.ПолучитьОбъект(),	Числовой, НеИзменяется,,,"ВремяВКалендарныхДнях",,ВалютаРегламентированногоУчета);*/
			/*УстановитьРеквизитыПоказателяСхемМотивации(ПоказателиСхемМотивации.ОтработаноВремениВДнях.ПолучитьОбъект(),	Числовой, ВозможностьИзмененияНеУказана,,,"ОтработаноВремениВДнях",,ВалютаРегламентированногоУчета);*/
			/*УстановитьРеквизитыПоказателяСхемМотивации(ПоказателиСхемМотивации.ОтработаноВремениВЧасах.ПолучитьОбъект(),Числовой, ВозможностьИзмененияНеУказана,,,"ОтработаноВремениВЧасах",,ВалютаРегламентированногоУчета);*/
			/*УстановитьРеквизитыПоказателяСхемМотивации(ПоказателиСхемМотивации.КалендарныхДнейВмесяце.ПолучитьОбъект(),	Числовой, НеИзменяется,,,"КалендарныхДнейВмесяце",,ВалютаРегламентированногоУчета);*/
			/*ОкладПоДням = УстановитьРеквизитыПоказателяСхемМотивации(,		Денежный,НеИзменяется,"Оклад по дням",,"ОкладПоДням",Истина,ВалютаРегламентированногоУчета);*/
			/*ОкладПоЧасам = УстановитьРеквизитыПоказателяСхемМотивации(,		Денежный,НеИзменяется,"Оклад по часам",,"ОкладПоЧасам",Истина,ВалютаРегламентированногоУчета);*/
			/*КомиссионнаяВыручка = УстановитьРеквизитыПоказателяСхемМотивации(,Денежный,Ежемесячно,"Комиссионная выручка",,"КомиссионнаяВыручка",,ВалютаРегламентированногоУчета);*/
			/*Процент = УстановитьРеквизитыПоказателяСхемМотивации(,			Процентный,НеИзменяется,"Процент",,"Процент",,ВалютаРегламентированногоУчета);*/
			/*ПроцентПлана = УстановитьРеквизитыПоказателяСхемМотивации(,		Процентный,Ежемесячно,"Процент плана",,"ПроцентПлана",,ВалютаРегламентированногоУчета);*/
			/*РазмерПремии = УстановитьРеквизитыПоказателяСхемМотивации(,		Денежный,Ежемесячно,"Размер премии",,"РазмерПремии",,ВалютаРегламентированногоУчета);*/
			/*ФиксированнаяСумма = УстановитьРеквизитыПоказателяСхемМотивации(,Денежный,НеИзменяется,"Фиксированная сумма",,"ФиксированнаяСумма",,ВалютаРегламентированногоУчета);*/
			/*СпРасчета  = Перечисления.СпособыРасчетаОплатыТруда;*/
			/*Категории  = Справочники.КатегорииРасчетов;*/
			/*СпРасчетов = Новый СписокЗначений;*/
			/*// Управленческие начисления
*/
			/*ПВР = ПланыВидовРасчета.УправленческиеНачисления;*/
			/*УстановитьРеквизитыУправленческогоНачисления(ПВР.НачисленоПоБухгалтерии,		СпРасчета.ФиксированнойСуммой, Категории.Первичное);*/
			/*УстановитьРеквизитыУправленческогоНачисления(ПВР.НачисленоПоБухгалтерииСдельно,	СпРасчета.ФиксированнойСуммой, Категории.Первичное);*/
			/*Оклад = ПроцедурыОбновленияИнформационнойБазы.СоздатьВидРасчета(ПВР, "00003", "Оклад");*/
			/*Невыход = ПроцедурыОбновленияИнформационнойБазы.СоздатьВидРасчета(ПВР, "00023", "Отсутствие по невыясненной причине");*/
			/*Отпуск = ПроцедурыОбновленияИнформационнойБазы.СоздатьВидРасчета(ПВР, "00021", "Отпуск");*/
			/*Больничный = ПроцедурыОбновленияИнформационнойБазы.СоздатьВидРасчета(ПВР, "00022", "Больничный");*/
			/*КомиссионнаяОплата = ПроцедурыОбновленияИнформационнойБазы.СоздатьВидРасчета(ПВР, "00024", "Комиссионная оплата");*/
			/*СдельнаяОплата = ПроцедурыОбновленияИнформационнойБазы.СоздатьВидРасчета(ПВР, "00025", "Сдельная оплата");*/
			/*СпРасчетов.Добавить(Невыход);*/
			/*СпРасчетов.Добавить(Отпуск);*/
			/*СпРасчетов.Добавить(Больничный);*/
			/*УстановитьРеквизитыУправленческогоНачисления(Невыход, 				СпРасчета.ПроизвольнаяФормула,	 Категории.Первичное,,,,					ФиксированнаяСумма,,,Справочники.КлассификаторИспользованияРабочегоВремени.НеявкиПоНевыясненнымПричинам,"ИсходныеДанные.Показатель1", Истина);*/
			/*УстановитьРеквизитыУправленческогоНачисления(Отпуск,				СпРасчета.ПроизвольнаяФормула,	 Категории.Первичное,,,,					ОкладПоДням,ПоказателиСхемМотивации.ВремяВДнях,ПоказателиСхемМотивации.НормаВремениВДнях, Справочники.КлассификаторИспользованияРабочегоВремени.ОсновнойОтпуск,"ИсходныеДанные.Показатель1*ИсходныеДанные.Показатель2/ИсходныеДанные.Показатель3");*/
			/*УстановитьРеквизитыУправленческогоНачисления(Больничный,			СпРасчета.ПроизвольнаяФормула,	 Категории.Первичное,,,,					ФиксированнаяСумма,,, Справочники.КлассификаторИспользованияРабочегоВремени.Болезнь,"ИсходныеДанные.Показатель1");*/
			/*УстановитьРеквизитыУправленческогоНачисления(Оклад, 				СпРасчета.ПроизвольнаяФормула,	 Категории.Первичное, Истина, СпРасчетов,,ОкладПоДням,ПоказателиСхемМотивации.ВремяВДнях,ПоказателиСхемМотивации.НормаВремениВДнях, Справочники.КлассификаторИспользованияРабочегоВремени.Работа,"ИсходныеДанные.Показатель1*ИсходныеДанные.Показатель2/ИсходныеДанные.Показатель3", Истина);*/
			/*УстановитьРеквизитыУправленческогоНачисления(КомиссионнаяОплата, 	СпРасчета.ПроизвольнаяФормула, 	Категории.Первичное, Истина, СпРасчетов,,КомиссионнаяВыручка,Процент,,,"ИсходныеДанные.Показатель1*ИсходныеДанные.Показатель2",,Истина);*/
			/*УстановитьРеквизитыУправленческогоНачисления(СдельнаяОплата, 		СпРасчета.ПроизвольнаяФормула, 	Категории.Первичное, Истина, СпРасчетов,,ПоказателиСхемМотивации.СдельнаяВыработка,,,"ИсходныеДанные.Показатель1");*/
		}
		//ЗаполнитьСхемыМотивации
		// Добавляет в справочник "СпособыОтраженияЗарплатыВРеглУчете" новый элемент
		// Запускается при первоначальном заполнении пустой ИБ.
		//

		public object ДобавитьСпособУчетаРегЗарплаты(/*Наименование, СчетДт, СубконтоДт1 = Неопределено, СубконтоДт2 = Неопределено, СубконтоДт3 = Неопределено, 
													СчетКт, СубконтоКт1 = Неопределено, СубконтоКт2 = Неопределено, СубконтоКт3 = Неопределено, 
													СчетДтНУ = Неопределено, СубконтоДтНУ1 = Неопределено, СубконтоДтНУ2 = Неопределено, СубконтоДтНУ3 = Неопределено, 
													СчетКтНУ = Неопределено, СубконтоКтНУ1 = Неопределено, СубконтоКтНУ2 = Неопределено, СубконтоКтНУ3 = Неопределено*/)
		{
			/*Элемент = Справочники.СпособыОтраженияЗарплатыВРеглУчете.НайтиПоНаименованию(Наименование);*/
			if(true/*Элемент.Пустая()*/)
			{
				/*Элемент     = Справочники.СпособыОтраженияЗарплатыВРеглУчете.СоздатьЭлемент();*/
				/*Элемент.Наименование     = Наименование;*/
			}
			/*Элемент.СчетДт = СчетДт;*/
			/*Элемент.СубконтоДт1 = СубконтоДт1;*/
			/*Элемент.СубконтоДт2 = СубконтоДт2;*/
			/*Элемент.СубконтоДт3 = СубконтоДт3;*/
			/*Элемент.СчетКт = СчетКт;*/
			/*Элемент.СубконтоКт1 = СубконтоКт1;*/
			/*Элемент.СубконтоКт2 = СубконтоКт2;*/
			/*Элемент.СубконтоКт3 = СубконтоКт3;*/
			if(true/*СчетДтНУ = Неопределено*/)
			{
				/*Элемент.СчетДтНУ = БухгалтерскийУчетДополнительный.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ",СчетДт));*/
			}
			/*Элемент.СубконтоДтНУ1 = СубконтоДтНУ1;*/
			/*Элемент.СубконтоДтНУ2 = СубконтоДтНУ2;*/
			/*Элемент.СубконтоДтНУ3 = СубконтоДтНУ3;*/
			if(true/*СчетКтНУ = Неопределено*/)
			{
				/*Элемент.СчетКтНУ = БухгалтерскийУчетДополнительный.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ",СчетКт));*/
			}
			/*Элемент.СубконтоКтНУ1 = СубконтоКтНУ1;*/
			/*Элемент.СубконтоКтНУ2 = СубконтоКтНУ2;*/
			/*Элемент.СубконтоКтНУ3 = СубконтоКтНУ3;*/
			/*Элемент.Записать();*/
			return null;
		}
		// Добавляет в справочник "КлассификаторИспользованияРабочегоВремени" новый элемент
		// Запускается при первоначальном заполнении пустой ИБ.
		//

		public void ДобавитьКодИспользованияРабочегоВремени(/*Знач БуквенныйКод, Знач  ЦифровойКод, Знач  Наименование = Неопределено, Знач  ПолноеНаименование, ВидВремени, РабочееВремя = Неопределено*/)
		{
			/*ЦифровойКод    = СокрЛП(ЦифровойКод);*/
			/*СсылкаНаЭлемент = Справочники.КлассификаторИспользованияРабочегоВремени.НайтиПоРеквизиту("ЦифровойКод", ЦифровойКод);*/
			if(true/*СсылкаНаЭлемент.Пустая()*/)
			{
				/*Элемент              = Справочники.КлассификаторИспользованияРабочегоВремени.СоздатьЭлемент();*/
				/*Элемент.ЦифровойКод  = СокрЛП(ЦифровойКод);*/
			}
			/*Элемент.БуквенныйКод = СокрЛП(БуквенныйКод);*/
			/*Элемент.ПолноеНаименование = СокрЛП(ПолноеНаименование);*/
			/*Элемент.Наименование = СокрЛП(?(Наименование = Неопределено,ПолноеНаименование,Наименование));*/
			/*//Элемент.ВидВремени = ВидВремени;
*/
			if(true/*РабочееВремя <> Неопределено*/)
			{
				/*Элемент.РабочееВремя = РабочееВремя;*/
			}
			/*Элемент.Записать();*/
		}
		// Добавляет в справочник "КлассификаторИспользованияРабочегоВремени" новый элемент
		// Запускается при первоначальном заполнении пустой ИБ.
		//

		public void ОписатьКодИспользованияРабочегоВремени(/*КодИспользованияРабочегоВремени, Знач БуквенныйКод, Знач  ЦифровойКод, Знач  Наименование = Неопределено, Знач  ПолноеНаименование, ВидВремени, РабочееВремя = Неопределено*/)
		{
			if(true/*КодИспользованияРабочегоВремени.БуквенныйКод <> СокрЛП(БуквенныйКод)*/)
			{
				/*КодИспользованияРабочегоВремени.БуквенныйКод = СокрЛП(БуквенныйКод);*/
			}
			if(true/*КодИспользованияРабочегоВремени.ЦифровойКод <> СокрЛП(ЦифровойКод)*/)
			{
				/*КодИспользованияРабочегоВремени.ЦифровойКод  = СокрЛП(ЦифровойКод);*/
			}
			if(true/*КодИспользованияРабочегоВремени.ПолноеНаименование <> СокрЛП(ПолноеНаименование)*/)
			{
				/*КодИспользованияРабочегоВремени.ПолноеНаименование = СокрЛП(ПолноеНаименование);*/
			}
			if(true/*КодИспользованияРабочегоВремени.Наименование <> СокрЛП(Наименование)*/)
			{
				/*КодИспользованияРабочегоВремени.Наименование = СокрЛП(Наименование);*/
			}
			if(true/*РабочееВремя <> Неопределено*/)
			{
				/*КодИспользованияРабочегоВремени.РабочееВремя = РабочееВремя;*/
			}
			if(true/*КодИспользованияРабочегоВремени.Модифицированность()*/)
			{
				/*КодИспользованияРабочегоВремени.Записать();*/
			}
		}
		// Устанавливает реквизиты элемента плана видов расчета "УправленческиеНачисления"
		// Запускается при первоначальном заполнении пустой ИБ.
		//

		public void УстановитьРеквизитыУправленческогоНачисления(/*	ВидРасчета, 
														СпособРасчета, 
														КатегорияРасчета, 
														ЗачетОтработанногоВремени = Ложь, 
														ВытесняющиеРасчеты = Неопределено, 
														ПериодДействияБазовый = Ложь,														
														Показатель1 = Неопределено,
														Показатель2 = Неопределено,
														Показатель3 = Неопределено,
														ВидУчетаРабочегоВремени = Неопределено,
														ФормулаРасчета = "", ЗапрашиватьПриКадровыхПеремещениях1= Ложь, ЗапрашиватьПриКадровыхПеремещениях2= Ложь, ЗапрашиватьПриКадровыхПеремещениях3= Ложь*/)
		{
			/*ОбъектВР = ВидРасчета.ПолучитьОбъект();*/
			/*ОбъектВР.ПроизвольнаяФормулаРасчета	= Истина;*/
			/*ОбъектВР.ФормулаРасчета				= ФормулаРасчета;*/
			/*ОбъектВР.ФормулаРасчетаПредставление= ФормулаРасчета;*/
			/*ОбъектВР.СпособРасчета				= Перечисления.СпособыРасчетаОплатыТруда.ПроизвольнаяФормула;*/
			/*ОбъектВР.КатегорияРасчета			= КатегорияРасчета;*/
			/*ОбъектВР.ЗачетОтработанногоВремени	= ЗачетОтработанногоВремени;*/
			/*ОбъектВР.ВидУчетаРабочегоВремени	= ВидУчетаРабочегоВремени;*/
			if(true/*НЕ ОбъектВР.Предопределенный*/)
			{
				/*ОбъектВР.ПериодДействияБазовый = ПериодДействияБазовый;*/
			}
			/*// обходим с последней строки табличной части и удаляем не предопределенные строки
*/
			/*Индекс = ОбъектВР.ВытесняющиеВидыРасчета.Количество();*/
			while(true/*Индекс > 0*/)
			{
				/*Индекс = Индекс - 1;*/
				if(true/*ОбъектВР.ВытесняющиеВидыРасчета[Индекс].Предопределенный*/)
				{
					/*Продолжить;*/
				}
				/*ОбъектВР.ВытесняющиеВидыРасчета.Удалить(Индекс);*/
			}
			if(true/*ВытесняющиеРасчеты <> Неопределено*/)
			{
			}
			if(true/*ЗначениеЗаполнено(Показатель1)*/)
			{
				/*Показатели = ОбъектВР.Показатели.Добавить();*/
				/*Показатели.Показатель = Показатель1;*/
				/*Показатели.ЗапрашиватьПриКадровыхПеремещениях = ЗапрашиватьПриКадровыхПеремещениях1;*/
				if(true/*ЗначениеЗаполнено(Показатель2)*/)
				{
					/*Показатели = ОбъектВР.Показатели.Добавить();*/
					/*Показатели.Показатель = Показатель2;*/
					/*Показатели.ЗапрашиватьПриКадровыхПеремещениях = ЗапрашиватьПриКадровыхПеремещениях2;*/
					if(true/*ЗначениеЗаполнено(Показатель3)*/)
					{
						/*Показатели = ОбъектВР.Показатели.Добавить();*/
						/*Показатели.Показатель = Показатель3;*/
						/*Показатели.ЗапрашиватьПриКадровыхПеремещениях = ЗапрашиватьПриКадровыхПеремещениях3;*/
					}
				}
			}
			/*ОбъектВР.Записать();*/
		}
		// УстановитьРеквизитыУправленческогоНачисления()
		// Устанавливает реквизиты элемента плана видов расчета "ДополнительныеНачисленияОрганизаций"
		// Запускается при первоначальном заполнении пустой ИБ.
		//

		public void УстановитьРеквизитыДополнительногоНачисленияОрганизации(/*ВидРасчета, СпособРасчета, КатегорияРасчета, ВидПремии, ЧислоМесяцев, ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка=Неопределено, КодДоходаНДФЛ, КодДоходаЕСН, КодДоходаСтраховыеВзносы, КодДоходаФСС_НС, СпособОтраженияВБухучете, ВидНачисленияПоСт255НК, ВидПособияСоциальногоСтрахования = Неопределено*/)
		{
			/*ОбъектВР = ВидРасчета.ПолучитьОбъект();*/
			/*ОбъектВР.СпособРасчета            = СпособРасчета;*/
			/*ОбъектВР.КатегорияРасчета  		  = КатегорияРасчета;*/
			/*ОбъектВР.ВидПремии                = ВидПремии;*/
			/*ОбъектВР.ЧислоМесяцев             = ЧислоМесяцев;*/
			/*ОбъектВР.КодДоходаНДФЛ            = КодДоходаНДФЛ;*/
			/*ОбъектВР.КодДоходаЕСН             = КодДоходаЕСН;*/
			/*ОбъектВР.КодДоходаСтраховыеВзносы = КодДоходаСтраховыеВзносы;*/
			/*ОбъектВР.КодДоходаФСС_НС		  = КодДоходаФСС_НС;*/
			/*ОбъектВР.СпособОтраженияВБухучете = СпособОтраженияВБухучете;*/
			/*ОбъектВР.ВидПособияСоциальногоСтрахования       = ВидПособияСоциальногоСтрахования;*/
			/*ОбъектВР.СтратегияОтраженияВУчете = ?(СпособОтраженияВБухучете = Справочники.СпособыОтраженияЗарплатыВРеглУчете.РаспределятьПоБазовымНачислениям, Перечисления.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления,
											?(ЗначениеЗаполнено(СпособОтраженияВБухучете), Перечисления.СтратегииОтраженияВРеглУчетеНачислений.КакЗаданоВидуРасчета,Перечисления.СтратегииОтраженияВРеглУчетеНачислений.КакЗаданоНаНачалоСобытия));*/
			/*ОбъектВР.ВидНачисленияПоСт255НК   = ВидНачисленияПоСт255НК;*/
			/*ОбъектВР.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка = ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка;*/
			/*ОбъектВР.ОтнесениеРасходовКДеятельностиЕНВД  = ?(КодДоходаЕСН = Справочники.ДоходыЕСН.ВыплатыЗаСчетПрибыли,Перечисления.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКнеЕНВД,Перечисления.ОтнесениеРасходовКДеятельностиЕНВД.РасходыРаспределяются);*/
			/*ОбъектВР.Записать();*/
		}
		// УстановитьРеквизитыДополнительногоНачисленияОрганизации()
		// Устанавливает реквизиты элемента плана видов расчета "УдержанияОрганизаций"
		// Запускается при первоначальном заполнении пустой ИБ.
		//

		public void УстановитьРеквизитыУдержанияОрганизации(/*ВидРасчета, СпособРасчета, КатегорияРасчета, СпособОтраженияВБухучете = Неопределено, БазовыеВидыРасчетов = Неопределено, ПериодРасчетаСреднегоЗаработка = 0, ЯвляетсяДСВ = Ложь*/)
		{
			/*ОбъектВР = ВидРасчета.ПолучитьОбъект();*/
			/*ОбъектВР.СпособРасчета            = СпособРасчета;*/
			/*ОбъектВР.КатегорияРасчета         = КатегорияРасчета;*/
			/*ОбъектВР.СпособОтраженияВБухучете = СпособОтраженияВБухучете;*/
			/*ОбъектВР.ПериодРасчетаСреднегоЗаработка = ПериодРасчетаСреднегоЗаработка;*/
			/*ОбъектВР.ЯвляетсяДСВ			  = ЯвляетсяДСВ;*/
			if(true/*ПериодРасчетаСреднегоЗаработка <> 0*/)
			{
				/*ОбъектВР.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка = Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоКолдоговору;*/
			}
			if(true/*БазовыеВидыРасчетов<>Неопределено*/)
			{
				/*ОбъектВР.БазовыеВидыРасчета.Очистить();*/
			}
			/*ОбъектВР.Записать();*/
		}

		public void ЗаполнитьПериодичностьНачислений(/**/)
		{
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст =
	"ВЫБРАТЬ
	|	ДополнительныеНачисленияОрганизаций.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ПериодичностьНачисления.НеОпределена) КАК ПериодичностьНачисления
	|ИЗ
	|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК ДополнительныеНачисленияОрганизаций
	|ГДЕ
	|	ДополнительныеНачисленияОрганизаций.ПериодичностьНачисления = ЗНАЧЕНИЕ(Перечисление.ПериодичностьНачисления.ПустаяСсылка)";*/
			/*ПроцедурыОбновленияИнформационнойБазы.ОбновитьОбъектыПоЗапросу(Запрос, "Обработка разовых начислений");*/
		}

		public void ОбновитьНастройкиРасчетов(/**/)
		{
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст =
	"ВЫБРАТЬ
	|	ВариантыВстроенныхАлгоритмовРасчетаЗарплаты.УдержаниеЗаОтпускУменьшаетНалоги КАК УдержаниеЗаОтпускУменьшаетНалоги
	|ИЗ
	|	РегистрСведений.ВариантыВстроенныхАлгоритмовРасчетаЗарплаты КАК ВариантыВстроенныхАлгоритмовРасчетаЗарплаты";*/
			if(true/*Запрос.Выполнить().Пустой()*/)
			{
				/*НаборЗаписей = РегистрыСведений.ВариантыВстроенныхАлгоритмовРасчетаЗарплаты.СоздатьНаборЗаписей();*/
				/*НаборЗаписей.Добавить().ПорядокПересчетаМесячнойСтавкиВЧасовую = Перечисления.ПорядкиПересчетаМесячнойСтавкиВЧасовую.ПоСреднемуКоличествуЧасовВМесяце;*/
				/*НаборЗаписей.Записать();*/
			}
		}
		// Процедура заполняет реквизиты ВР (в т.ч. вытесняемые и вытесняющие начисления)
		// Запускается при обновлении на 1.2.15
		//

		public void ЗаполнитьРеквизитыПВРДниНеоплачиваемыеСогласноТабелю(/**/)
		{
			/*// Заполнение реквизитов для Вида расчета ДниНеоплачиваемыеСогласноТабелю
*/
			/*СпРасчета  = Перечисления.СпособыРасчетаОплатыТруда;*/
			/*НеОтражатьВБухУчете = Справочники.СпособыОтраженияЗарплатыВРеглУчете.НеОтражатьВБухучете;*/
			/*УчетВремени = Справочники.КлассификаторИспользованияРабочегоВремени;*/
			/*АнализируемоеНачисление = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДниНеоплачиваемыеСогласноТабелю;*/
			/*УстановитьРеквизитыОсновногоНачисленияОрганизации(АнализируемоеНачисление, СпРасчета.НулеваяСумма, Перечисления.ВидыВремени.ЦелодневноеНеотработанное, Справочники.КатегорииРасчетов.Первичное, УчетВремени.НеявкиПоНевыясненнымПричинам, Ложь,   Истина, , , , Перечисления.ДоходыФСС_НС.Облагается, НеОтражатьВБухУчете,,,,Ложь);*/
			/*СписокПредопределенныхВытесняющихПВР = Новый Массив;*/
			/*СписокПредопределенныхВытесняющихПВР.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаБЛПоТравмеВБыту);*/
			/*СписокПредопределенныхВытесняющихПВР.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускБезОплатыУчебный);*/
			/*СписокПредопределенныхВытесняющихПВР.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаБЛПоТравмеНаПроизводстве);*/
			/*СписокПредопределенныхВытесняющихПВР.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуБЛ);*/
			/*СписокПредопределенныхВытесняющихПВР.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаВыходныхДнейПоУходуЗаДетьмиИнвалидами);*/
			/*СписокПредопределенныхВытесняющихПВР.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтпКалендарныеДни);*/
			/*СписокПредопределенныхВытесняющихПВР.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтпШестидневка);*/
			/*СписокПредопределенныхВытесняющихПВР.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднему);*/
			/*СписокПредопределенныхВытесняющихПВР.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПростойОкладПоДням);*/
			/*СписокПредопределенныхВытесняющихПВР.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПростойОкладПоЧасам);*/
			/*СписокПредопределенныхВытесняющихПВР.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПростойТарифДневной);*/
			/*СписокПредопределенныхВытесняющихПВР.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПростойТарифЧасовой);*/
			/*СписокПредопределенныхВытесняющихПВР.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускБезОплатыПоТКРФ);*/
			/*СписокПредопределенныхВытесняющихПВР.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускЗаСвойСчет);*/
			/*СписокПредопределенныхВытесняющихПВР.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоБеременностиИРодам);*/
			/*СписокПредопределенныхВытесняющихПВР.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтсутствиеПоБолезни);*/
			/*СписокПредопределенныхВытесняющихПВР.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтсутствиеПоБолезниПоБеременности);*/
			/*СписокПредопределенныхВытесняющихПВР.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.Прогул);*/
			/*СписокПредопределенныхВытесняющихПВР.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПростойПоВинеРаботодателя);*/
			/*СписокПредопределенныхВытесняющихПВР.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.Невыход);*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("СписокПВР", СписокПредопределенныхВытесняющихПВР);*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВыбранныеВР.ВидРасчета,
	|	ВЫБОР
	|		КОГДА ВыбранныеВР.ВидРасчета В (&СписокПВР)
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Порядок
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета.ВидРасчета КАК ВидРасчета
	|	ИЗ
	|		ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВытесняющиеВидыРасчета КАК ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета
	|	ГДЕ
	|		ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета.Ссылка В(&СписокПВР)
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ОсновныеНачисленияОрганизаций.Ссылка
	|	ИЗ
	|		ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
	|	ГДЕ
	|		ОсновныеНачисленияОрганизаций.Ссылка В(&СписокПВР)) КАК ВыбранныеВР
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВытесняющиеВидыРасчета КАК ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета
	|		ПО ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета.ВидРасчета = ВыбранныеВР.ВидРасчета
	|			И (ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ДниНеоплачиваемыеСогласноТабелю))
	|ГДЕ
	|	ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета.Ссылка ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";*/
			/*АнализируемоеНачислениеОбъект = АнализируемоеНачисление.ПолучитьОбъект();*/
			/*Выборка = Запрос.Выполнить().Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				/*АнализируемоеНачислениеОбъект.ВытесняющиеВидыРасчета.Добавить().ВидРасчета = Выборка.ВидРасчета;*/
			}
			/*;
	АнализируемоеНачислениеОбъект.ОбменДанными.Загрузка = Истина;*/
			/*АнализируемоеНачислениеОбъект.Записать();*/
			/*СписокПредопределенныхВытесняемыхПВР = Новый Массив;*/
			/*СписокПредопределенныхВытесняемыхПВР.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДоплатаЗаВечерниеЧасы);*/
			/*СписокПредопределенныхВытесняемыхПВР.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДоплатаЗаНочныеЧасы);*/
			/*СписокПредопределенныхВытесняемыхПВР.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОкладПоДням);*/
			/*СписокПредопределенныхВытесняемыхПВР.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОкладПоЧасам);*/
			/*СписокПредопределенныхВытесняемыхПВР.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ТарифДневной);*/
			/*СписокПредопределенныхВытесняемыхПВР.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ТарифЧасовой);*/
			/*СписокПредопределенныхВытесняемыхПВР.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.СдельнаяОплата);*/
			/*Запрос.УстановитьПараметр("СписокПВР", СписокПредопределенныхВытесняемыхПВР);*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВыбранныеВР.ВидРасчета,
	|	ВЫБОР
	|		КОГДА ВыбранныеВР.ВидРасчета В (&СписокПВР)
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК Порядок
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета.Ссылка КАК ВидРасчета
	|	ИЗ
	|		ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВытесняющиеВидыРасчета КАК ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета
	|	ГДЕ
	|		ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета.ВидРасчета В(&СписокПВР)
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ОсновныеНачисленияОрганизаций.Ссылка
	|	ИЗ
	|		ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
	|	ГДЕ
	|		ОсновныеНачисленияОрганизаций.Ссылка В(&СписокПВР)) КАК ВыбранныеВР
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВытесняющиеВидыРасчета КАК ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета
	|		ПО ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета.Ссылка = ВыбранныеВР.ВидРасчета
	|			И (ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ДниНеоплачиваемыеСогласноТабелю))
	|ГДЕ
	|	ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета.Ссылка ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";*/
			/*Выборка = Запрос.Выполнить().Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				/*ЗаписываемоеНачислениеОбъект = Выборка.ВидРасчета.ПолучитьОбъект();*/
				/*ЗаписываемоеНачислениеОбъект.ВытесняющиеВидыРасчета.Добавить().ВидРасчета = АнализируемоеНачисление;*/
				/*ЗаписываемоеНачислениеОбъект.ОбменДанными.Загрузка = Истина;*/
				/*ЗаписываемоеНачислениеОбъект.Записать();*/
			}
			/*;
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
				   |	ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета.Ссылка Как ВидРасчета
				   |ИЗ
				   |	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВытесняющиеВидыРасчета КАК ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета
				   |ГДЕ
				   |	ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета.Ссылка <> &ПВРТабель
				   |	И ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета.ВидРасчета = &ПВРНеявка
				   |	И (НЕ ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета.Ссылка В
				   |				(ВЫБРАТЬ
				   |					ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета.Ссылка
				   |				ИЗ
				   |					ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВытесняющиеВидыРасчета КАК ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета
				   |				ГДЕ
				   |					ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета.ВидРасчета = &ПВРТабель))";*/
			/*Запрос.УстановитьПараметр("ПВРТабель", ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДниНеоплачиваемыеСогласноТабелю);*/
			/*Запрос.УстановитьПараметр("ПВРНеявка", ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.Невыход);*/
			/*Выборка = Запрос.Выполнить().Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				/*ЗаписываемоеНачислениеОбъект = Выборка.ВидРасчета.ПолучитьОбъект();*/
				/*ЗаписываемоеНачислениеОбъект.ВытесняющиеВидыРасчета.Добавить().ВидРасчета = АнализируемоеНачисление;*/
				/*ЗаписываемоеНачислениеОбъект.ОбменДанными.Загрузка = Истина;*/
				/*ЗаписываемоеНачислениеОбъект.Записать();*/
			}
			/*;;*/
		}
		// Устанавливает реквизиты элемента плана видов расчета "ОсновныеНачисленияОрганизаций"
		//

		public void УстановитьРеквизитыОсновногоНачисленияОрганизации(/*
								ВидРасчета,
								СпособРасчета,
								ВидВремени,
								КатегорияРасчета,
								ОбозначениеВТабелеУчетаРабочегоВремени,
								ЗачетОтработанногоВремени,
								ЗачетНормыВремени,
								КодДоходаНДФЛ = Неопределено,
								КодДоходаЕСН = Неопределено,
								КодДоходаСтраховыеВзносы = Неопределено,
								КодДоходаФСС_НС,
								СпособОтраженияВБухучете = Неопределено,
								ВидНачисленияПоСт255НК = Неопределено,
								ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка = Неопределено,
								ПериодДействияБазовый = Ложь,
								ПроверятьПравильностьУстановкиРеквизитов = Истина,
								ВидПособияСоциальногоСтрахования = Неопределено*/)
		{
			if(true/*ТипЗнч(ОбозначениеВТабелеУчетаРабочегоВремени) = Тип("Строка")*/)
			{
				/*КодУчетаРабочегоВремени = Справочники.КлассификаторИспользованияРабочегоВремени.НайтиПоРеквизиту("БуквенныйКод", СокрЛП(ОбозначениеВТабелеУчетаРабочегоВремени));*/
			}
			/*ОбъектВР = ВидРасчета.ПолучитьОбъект();*/
			/*ОбъектВР.СпособРасчета							= СпособРасчета;*/
			/*ОбъектВР.ВидВремени								= ВидВремени;*/
			/*ОбъектВР.КатегорияРасчета						= КатегорияРасчета;*/
			/*ОбъектВР.ОбозначениеВТабелеУчетаРабочегоВремени = КодУчетаРабочегоВремени;*/
			/*ОбъектВР.ЗачетОтработанногоВремени              = ЗачетОтработанногоВремени;*/
			/*ОбъектВР.ЗачетНормыВремени                      = ЗачетНормыВремени;*/
			/*ОбъектВР.КодДоходаНДФЛ                          = КодДоходаНДФЛ;*/
			/*ОбъектВР.КодДоходаЕСН                           = КодДоходаЕСН;*/
			/*ОбъектВР.КодДоходаСтраховыеВзносы               = КодДоходаСтраховыеВзносы;*/
			/*ОбъектВР.КодДоходаФСС_НС				        = КодДоходаФСС_НС;*/
			/*ОбъектВР.СпособОтраженияВБухучете               = СпособОтраженияВБухучете;*/
			/*ОбъектВР.ВидПособияСоциальногоСтрахования       = ВидПособияСоциальногоСтрахования;*/
			/*ОбъектВР.СтратегияОтраженияВУчете               = ?(СпособОтраженияВБухучете = Справочники.СпособыОтраженияЗарплатыВРеглУчете.РаспределятьПоБазовымНачислениям, Перечисления.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления,
														?(ЗначениеЗаполнено(СпособОтраженияВБухучете), Перечисления.СтратегииОтраженияВРеглУчетеНачислений.КакЗаданоВидуРасчета,Перечисления.СтратегииОтраженияВРеглУчетеНачислений.КакЗаданоНаНачалоСобытия));*/
			/*ОбъектВР.ВидНачисленияПоСт255НК                 = ВидНачисленияПоСт255НК;*/
			/*ОбъектВР.ОтнесениеРасходовКДеятельностиЕНВД     = ?(КодДоходаЕСН = Справочники.ДоходыЕСН.ВыплатыЗаСчетПрибыли,Перечисления.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКнеЕНВД,Перечисления.ОтнесениеРасходовКДеятельностиЕНВД.РасходыРаспределяются);*/
			/*ОбъектВР.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка = ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка;*/
			/*ОбъектВР.ВидСтажаСЗВ4 = ПроцедурыПерсонифицированногоУчета.ПолучитьПорядокВключенияПериодаВСтраховойСтаж(ВидПособияСоциальногоСтрахования, ВидВремени, КодУчетаРабочегоВремени);*/
			if(true/*НЕ ОбъектВР.Предопределенный*/)
			{
				/*ОбъектВР.ПериодДействияБазовый = ПериодДействияБазовый;*/
			}
			if(true/*НЕ ПроверятьПравильностьУстановкиРеквизитов*/)
			{
				/*ОбъектВР.ОбменДанными.Загрузка = Истина;*/
			}
			/*Попытка
		ОбъектВР.Записать();*/
			/*Исключение
		
	КонецПопытки;*/
		}
		// УстановитьРеквизитыОсновногоНачисленияОрганизации()
		// Заполним новые настройки пользователей

		public void ЗаполнитьНастройкиПользователей(/**/)
		{
			/*// необходимо установить использование  Рабочего стола
*/
			/*// в зависимости от доступных ролей пользователя
*/
			/*// для пользователей рабочего стола с "управленческими" ролями 
*/
			/*// установим настройку режима рабочего стола
*/
			/*МассивПользователейРабочийСтол = Новый Массив;*/
			/*МассивПользователейСДоступомКУпрУчету = Новый Массив;*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Пользователи.Ссылка,
	|	Пользователи.Код
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи";*/
			/*ВыборкаПользователей = Запрос.Выполнить().Выбрать();*/
			while(true/*ВыборкаПользователей.Следующий()*/)
			{
				/*ИмяПользователяИБ	= СокрЛП(ВыборкаПользователей.Код);*/
				/*ПользовательИБ		= УправлениеПользователями.НайтиПользователяИБ(ИмяПользователяИБ);*/
				if(true/*ПользовательИБ = Неопределено*/)
				{
					/*Продолжить;*/
				}
				if(true/*ПользовательИБ.Роли.Содержит(Метаданные.Роли.КадровикРегламентированныхДанных)
			или ПользовательИБ.Роли.Содержит(Метаданные.Роли.РасчетчикРегламентированнойЗарплаты)*/)
				{
					/*МассивПользователейРабочийСтол.Добавить(ВыборкаПользователей.Ссылка);*/
				}
				if(true/*ПользовательИБ.Роли.Содержит(Метаданные.Роли.КадровикУправленческихДанных)
			или ПользовательИБ.Роли.Содержит(Метаданные.Роли.РасчетчикУправленческойЗарплаты)*/)
				{
					/*МассивПользователейРабочийСтол.Добавить(ВыборкаПользователей.Ссылка);*/
					/*МассивПользователейСДоступомКУпрУчету.Добавить(ВыборкаПользователей.Ссылка);*/
				}
			}
			/*;
	
	НаборЗаписей = РегистрыСведений.НастройкиПользователей.СоздатьНаборЗаписей();*/
			/*Запрос.Текст=
	"ВЫБРАТЬ
	|	Пользователи.Ссылка
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиПользователей КАК НастройкиПользователей
	|		ПО Пользователи.Ссылка = НастройкиПользователей.Пользователь
	|			И (НастройкиПользователей.Настройка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НастройкиПользователей.ОткрыватьПриЗапускеРабочийСтол))
	|			И (НастройкиПользователей.Значение = ИСТИНА)
	|ГДЕ
	|	Пользователи.Ссылка В(&МассивПользователейРабочийСтол)
	|	И НастройкиПользователей.Значение ЕСТЬ NULL ";*/
			/*Запрос.УстановитьПараметр("МассивПользователейРабочийСтол", МассивПользователейРабочийСтол);*/
			/*ВыборкаПользователей = Запрос.Выполнить().Выбрать();*/
			while(true/*ВыборкаПользователей.Следующий()*/)
			{
				/*НаборЗаписей.Отбор.Пользователь.Установить(ВыборкаПользователей.Ссылка);*/
				/*НаборЗаписей.Отбор.Настройка.Установить(ПланыВидовХарактеристик.НастройкиПользователей.ОткрыватьПриЗапускеРабочийСтол);*/
				/*НоваяЗапись = НаборЗаписей.Добавить();*/
				/*НоваяЗапись.Пользователь = ВыборкаПользователей.Ссылка;*/
				/*НоваяЗапись.Настройка = ПланыВидовХарактеристик.НастройкиПользователей.ОткрыватьПриЗапускеРабочийСтол;*/
				/*НоваяЗапись.Значение = Истина;*/
				/*НаборЗаписей.Записать();*/
				/*НаборЗаписей.Очистить();*/
			}
			/*;
	
	Запрос.Текст=
	"ВЫБРАТЬ
	|	Пользователи.Ссылка
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиПользователей КАК НастройкиПользователей
	|		ПО Пользователи.Ссылка = НастройкиПользователей.Пользователь
	|			И (НастройкиПользователей.Настройка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НастройкиПользователей.ОткрыватьПриЗапускеРабочийСтол)
	|				ИЛИ НастройкиПользователей.Настройка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НастройкиПользователей.ИспользоватьУправленческийРежимРабочегоСтола))
	|			И (НастройкиПользователей.Значение = ИСТИНА)
	|ГДЕ
	|	Пользователи.Ссылка В(&МассивПользователейРабочийСтол)
	|	И Пользователи.Ссылка В(&МассивПользователейСДоступомКУпрУчету)
	|	И НастройкиПользователей.Значение ЕСТЬ NULL";*/
			/*Запрос.УстановитьПараметр("МассивПользователейРабочийСтол", МассивПользователейРабочийСтол);*/
			/*Запрос.УстановитьПараметр("МассивПользователейСДоступомКУпрУчету", МассивПользователейСДоступомКУпрУчету);*/
			/*ВыборкаПользователей = Запрос.Выполнить().Выбрать();*/
			while(true/*ВыборкаПользователей.Следующий()*/)
			{
				/*НаборЗаписей.Отбор.Пользователь.Установить(ВыборкаПользователей.Ссылка);*/
				/*НаборЗаписей.Отбор.Настройка.Установить(ПланыВидовХарактеристик.НастройкиПользователей.ИспользоватьУправленческийРежимРабочегоСтола);*/
				/*НоваяЗапись = НаборЗаписей.Добавить();*/
				/*НоваяЗапись.Пользователь = ВыборкаПользователей.Ссылка;*/
				/*НоваяЗапись.Настройка = ПланыВидовХарактеристик.НастройкиПользователей.ИспользоватьУправленческийРежимРабочегоСтола;*/
				/*НоваяЗапись.Значение = Истина;*/
				/*НаборЗаписей.Записать();*/
				/*НаборЗаписей.Очистить();*/
			}
			/*;;*/
		}
		// Заполняет историю изменения МаксимумПособияПоУходуЗаРебенкомДоПолутораЛет
		// с 01.01.2010

		public void УстановитьМаксимумПособияПоУходуЗаРебенкомДоПолутораЛет(/*НаборЗаписей*/)
		{
			/*// в этой конфигурации история не устанавливается
*/
		}
		////////////////////////////////////////////////////////////////////////////////
		// 2.0.27
		// Перезаполняет наборы записей регистраторов исправленными данными и записывает их.
		//
		// Параметры:
		//  НаборЗаписей - РегистрБухгалтерииНаборЗаписей.<Имя> - переписываемый набор записей
		//  Запрос - исполняемый запрос, в котором обязательно присутствует поле Регистратор
		//			 остальные поля должны соответствовать полям записи заполняемого регистра;
		//			 кроме того, результат запроса должен быть упорядочен,
		//			 первое поле упорядочивания - Регистратор
		//  ТекстЗаголовка - строка, начало сообщения, выводимого в строке состояния
		//
		// Возвращаемое значение:
		//  Нет
		//

		public void ИзменитьНаборыЗаписейРегистраБухгалтерииПоРегистраторам(/*НаборЗаписей, Запрос, ТекстЗаголовка = ""*/)
		{
			/*#Если ТолстыйКлиентОбычноеПриложение Тогда
		ТекстСообщения = ТекстЗаголовка;*/
			/*Состояние(ТекстСообщения + ": подготовка данных ...");*/
			/*#КонецЕсли
	ВыборкаРегистраторов = Запрос.Выполнить().Выбрать();*/
			/*#Если ТолстыйКлиентОбычноеПриложение Тогда
		ВсегоДоков = ВыборкаРегистраторов.Количество();*/
			/*Номер = 1;*/
			/*Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоДоков);*/
			while(true/*ВыборкаРегистраторов.СледующийПоЗначениюПоля("Регистратор")*/)
			{
				/*НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаРегистраторов.Регистратор);*/
				/*НаборЗаписей.Прочитать();*/
				while(true/*ВыборкаРегистраторов.Следующий()*/)
				{
					/*НеНашлиДвижениеПоНомеруСтроки = Истина;*/
					if(true/*НеНашлиДвижениеПоНомеруСтроки*/)
					{
						/*Продолжить;*/
					}
					/*Запись.СчетДт = ВыборкаРегистраторов.СчетДт;*/
					/*Запись.СчетКт = ВыборкаРегистраторов.СчетКт;*/
					/*Суффикс = ?(ВыборкаРегистраторов.ВидДвижения = ВидДвиженияБухгалтерии.Дебет, "Дт", "Кт");*/
					if(true/*Номер % 10 = 0*/)
					{
						/*Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоДоков);*/
					}
					/*Номер = Номер + 1;*/
					/*#КонецЕсли;*/
				}
				/*;
		
		НаборЗаписей.Записать();*/
				/*НаборЗаписей.Очистить();*/
			}
			/*;
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);*/
			/*#КонецЕсли;*/
		}
		// Заменяет табличные части исправляемых объектов.
		//
		// Параметры:
		//  Запрос - исполняемый запрос, в котором обязательно присутствует поле Ссылка
		//			 остальные поля должны содержать исправленные данные, имена полей
		//           должны соответствовать именам исправляемых реквизитов;
		//           кроме того, результат запроса должен быть упорядочен по полю Ссылка
		//  ИмяТЧ - строка, имя табличной части объекта
		//  ТекстСообщения - строка, начало сообщения, выводимого в строке состояния
		//
		// Возвращаемое значение:
		//  Нет
		//

		public void ЗаменитьТабличнуюЧастьОбъектаПоЗапросу(/*Запрос = Неопределено, ИмяТЧ, ТекстСообщения = ""*/)
		{
			if(true/*Запрос = Неопределено*/)
			{
			}
			/*#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": подготовка данных ...");*/
			/*#КонецЕсли
	ВыборкаОбъектов = Запрос.Выполнить().Выбрать();*/
			/*#Если ТолстыйКлиентОбычноеПриложение Тогда
		ВсегоДоков = ВыборкаОбъектов.Количество();*/
			/*Номер = 1;*/
			/*Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоДоков);*/
			while(true/*ВыборкаОбъектов.СледующийПоЗначениюПоля("Ссылка")*/)
			{
				/*Объект = ВыборкаОбъектов.Ссылка.ПолучитьОбъект();*/
				/*Объект.ОбменДанными.Загрузка = Истина;*/
				/*Объект[ИмяТЧ].Очистить();*/
				while(true/*ВыборкаОбъектов.Следующий()*/)
				{
					/*ЗаполнитьЗначенияСвойств(Объект[ИмяТЧ].Добавить(),ВыборкаОбъектов);*/
					if(true/*Номер % 10 = 0*/)
					{
						/*Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоДоков);*/
					}
					/*Номер = Номер + 1;*/
					/*#КонецЕсли;*/
				}
				/*;
		
		Объект.Записать();*/
			}
			/*;
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);*/
			/*#КонецЕсли;*/
		}
		// Обработка оценочных обязательств в БУ и НУ
		//
		// Параметры:
		//  Нет
		//
		// Возвращаемое значение:
		//  Нет
		//

		public void ОбработатьИзмененияСчета96БУиНУ(/**/)
		{
			/*// обработаем счета
*/
			/*Счет = ПланыСчетов.Хозрасчетный.УдалитьОценочныеОбязательства;*/
			/*ДанныеСчета = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Счет, "КодБыстрогоВыбора");*/
			if(true/*ЗначениеЗаполнено(ДанныеСчета.КодБыстрогоВыбора)*/)
			{
				/*ОбъектСчет = Счет.ПолучитьОбъект();*/
				/*ОбъектСчет.КодБыстрогоВыбора = "";*/
				/*ОбъектСчет.Записать();*/
			}
			/*Счет = ПланыСчетов.Хозрасчетный.УдалитьОценочныеОбязательстваИРезервы;*/
			/*ДанныеСчета = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Счет, "КодБыстрогоВыбора");*/
			if(true/*ЗначениеЗаполнено(ДанныеСчета.КодБыстрогоВыбора)*/)
			{
				/*ОбъектСчет = Счет.ПолучитьОбъект();*/
				/*ОбъектСчет.КодБыстрогоВыбора = "";*/
				/*ОбъектСчет.Записать();*/
			}
			/*Счет = ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов;*/
			/*ДанныеСчета = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Счет, "Код, КодБыстрогоВыбора");*/
			/*КодБыстрогоВыбора = СокрЛП(СтрЗаменить(ДанныеСчета.Код, ".", ""));*/
			if(true/*КодБыстрогоВыбора <> СокрЛП(ДанныеСчета.КодБыстрогоВыбора)*/)
			{
				/*ОбъектСчет = Счет.ПолучитьОбъект();*/
				/*ОбъектСчет.КодБыстрогоВыбора = КодБыстрогоВыбора;*/
				/*ОбъектСчет.Записать();*/
			}
			/*СчетНУ = ПланыСчетов.Налоговый.УдалитьОценочныеОбязательства;*/
			/*ДанныеСчета = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(СчетНУ, "КодБыстрогоВыбора");*/
			if(true/*ЗначениеЗаполнено(ДанныеСчета.КодБыстрогоВыбора)*/)
			{
				/*ОбъектСчет = СчетНУ.ПолучитьОбъект();*/
				/*ОбъектСчет.КодБыстрогоВыбора = "";*/
				/*ОбъектСчет.Записать();*/
			}
			/*СчетНУ = ПланыСчетов.Налоговый.УдалитьОценочныеОбязательстваИРезервы;*/
			/*ДанныеСчета = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(СчетНУ, "КодБыстрогоВыбора");*/
			if(true/*ЗначениеЗаполнено(ДанныеСчета.КодБыстрогоВыбора)*/)
			{
				/*ОбъектСчет = СчетНУ.ПолучитьОбъект();*/
				/*ОбъектСчет.КодБыстрогоВыбора = "";*/
				/*ОбъектСчет.Записать();*/
			}
			/*СчетНУ = ПланыСчетов.Налоговый.РезервыПредстоящихРасходов;*/
			/*ДанныеСчета = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(СчетНУ, "Код, КодБыстрогоВыбора");*/
			/*КодБыстрогоВыбора = СокрЛП(СтрЗаменить(ДанныеСчета.Код, ".", ""));*/
			if(true/*КодБыстрогоВыбора <> СокрЛП(ДанныеСчета.КодБыстрогоВыбора)*/)
			{
				/*ОбъектСчет = СчетНУ.ПолучитьОбъект();*/
				/*ОбъектСчет.КодБыстрогоВыбора = КодБыстрогоВыбора;*/
				/*ОбъектСчет.Записать();*/
			}
			/*// обработаем справочники
*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст =
	"ВЫБРАТЬ
	|	УдалитьОценочныеОбязательства.Наименование КАК Наименование
	|ИЗ
	|	Справочник.УдалитьОценочныеОбязательства КАК УдалитьОценочныеОбязательства
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Резервы КАК Резервы
	|		ПО УдалитьОценочныеОбязательства.Наименование = Резервы.Наименование
	|ГДЕ
	|	(НЕ УдалитьОценочныеОбязательства.ПометкаУдаления)
	|	И Резервы.Ссылка ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование";*/
			/*Выборка = Запрос.Выполнить().Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				/*СправочникРезервы = Справочники.Резервы.СоздатьЭлемент();*/
				/*СправочникРезервы.Наименование = СокрЛП(Выборка.Наименование);*/
				/*//ПроцедурыОбновленияИнформационнойБазы.ЗаписатьСправочникОбъект(СправочникРезервы);
*/
				/*Попытка
			СправочникРезервы.Записать();*/
				/*Исключение
			ШаблонСообщения =
				НСтр("ru = 'Не удалось создать элемент справочника ""Оценочные обязательства и резервы"": <%1>. Рекомедуем создать его самостоятельно'");*/
				/*ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонСообщения, СокрЛП(Выборка.Наименование));*/
				/*ОбщегоНазначения.СообщитьОбОшибке(ШаблонСообщения);*/
				/*#Если ТолстыйКлиентОбычноеПриложение Тогда
			ИмяСобытияЖурнала = ОбновлениеКонфигурацииКлиент.СобытиеЖурналаРегистрации();*/
				/*ОбщегоНазначенияКлиент.ДобавитьСообщениеДляЖурналаРегистрации(ИмяСобытияЖурнала, 
				"Ошибка создания элемента справочника",  ТекстСообщения);*/
				/*#КонецЕсли
		КонецПопытки;*/
			}
			/*;
	
	Запрос = Новый Запрос;*/
			/*// БУ
*/
			/*МассивСтарыеСчета = Новый Массив;*/
			/*МассивСтарыеСчета.Добавить(ПланыСчетов.Хозрасчетный.УдалитьОценочныеОбязательства);*/
			/*МассивСтарыеСчета.Добавить(ПланыСчетов.Хозрасчетный.УдалитьОценочныеОбязательстваИРезервы);*/
			/*Запрос.УстановитьПараметр("СтарыеСчета", МассивСтарыеСчета);*/
			/*Запрос.УстановитьПараметр("Счет96", ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов);*/
			/*// НУ
*/
			/*МассивСтарыеСчетаНУ = Новый Массив;*/
			/*МассивСтарыеСчетаНУ.Добавить(ПланыСчетов.Налоговый.УдалитьОценочныеОбязательства);*/
			/*МассивСтарыеСчетаНУ.Добавить(ПланыСчетов.Налоговый.УдалитьОценочныеОбязательстваИРезервы);*/
			/*Запрос.УстановитьПараметр("СтарыеСчетаНУ", МассивСтарыеСчетаНУ);*/
			/*Запрос.УстановитьПараметр("Счет96НУ", ПланыСчетов.Налоговый.РезервыПредстоящихРасходов);*/
			/*ЭтапОбновления = 0;*/
			if(true/*Метаданные.Имя = "КомплекснаяАвтоматизация"*/)
			{
				/*ВсегоЧастей = 5;*/
			}
			/*// обработаем документы
*/
			/*ЭтапОбновления = ЭтапОбновления + 1;*/
			/*ТекстСообщения = "Обработка оценочных обязательств часть " + ЭтапОбновления + " из " + ВсегоЧастей;*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПрочиеЗатраты.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА ПрочиеЗатраты.Счет В (&СтарыеСчета)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РезервыПредстоящихРасходов)
	|		ИНАЧЕ ПрочиеЗатраты.Счет
	|	КОНЕЦ КАК Счет,
	|	ПрочиеЗатраты.Субконто1,
	|	ПрочиеЗатраты.Субконто2,
	|	ПрочиеЗатраты.Субконто3,
	|	ВЫБОР
	|		КОГДА ПрочиеЗатраты.СчетНУ В (&СтарыеСчетаНУ)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Налоговый.РезервыПредстоящихРасходов)
	|		ИНАЧЕ ПрочиеЗатраты.СчетНУ
	|	КОНЕЦ КАК СчетНУ,
	|	ПрочиеЗатраты.СубконтоНУ1,
	|	ПрочиеЗатраты.СубконтоНУ2,
	|	ПрочиеЗатраты.СубконтоНУ3,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ПрочиеЗатраты.Субконто1 ССЫЛКА Справочник.УдалитьОценочныеОбязательства
	|				ТОГДА ПрочиеЗатраты.Субконто1
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.УдалитьОценочныеОбязательства.ПустаяСсылка)
	|		КОНЕЦ КАК Справочник.УдалитьОценочныеОбязательства) КАК Субконто,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ПрочиеЗатраты.СубконтоНУ1 ССЫЛКА Справочник.УдалитьОценочныеОбязательства
	|				ТОГДА ПрочиеЗатраты.СубконтоНУ1
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК Справочник.УдалитьОценочныеОбязательства) КАК СубконтоНУ
	|ПОМЕСТИТЬ ВТ_ПрочиеРасходы
	|ИЗ
	|	Документ.ПрочиеЗатраты КАК ПрочиеЗатраты
	|ГДЕ
	|	(ПрочиеЗатраты.Счет В (&СтарыеСчета)
	|			ИЛИ ПрочиеЗатраты.СчетНУ В (&СтарыеСчетаНУ))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Субконто,
	|	СубконтоНУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПрочиеРасходы.Ссылка,
	|	ВТ_ПрочиеРасходы.Счет,
	|	ВЫБОР
	|		КОГДА ВТ_ПрочиеРасходы.Субконто1 ССЫЛКА Справочник.УдалитьОценочныеОбязательства
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ_ПрочиеРасходы.Субконто1 = НЕОПРЕДЕЛЕНО
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.Резервы.ПустаяСсылка)
	|					ИНАЧЕ ЕСТЬNULL(Резервы.Ссылка, ЗНАЧЕНИЕ(Справочник.Резервы.ПустаяСсылка))
	|				КОНЕЦ
	|		ИНАЧЕ ВТ_ПрочиеРасходы.Субконто1
	|	КОНЕЦ КАК Субконто1,
	|	ВТ_ПрочиеРасходы.Субконто2 КАК Субконто2,
	|	ВТ_ПрочиеРасходы.Субконто3 КАК Субконто3,
	|	ВТ_ПрочиеРасходы.СчетНУ,
	|	NULL КАК СубконтоНУ1,
	|	NULL КАК СубконтоНУ2,
	|	NULL КАК СубконтоНУ3
	|ПОМЕСТИТЬ ВТ_Объединение
	|ИЗ
	|	ВТ_ПрочиеРасходы КАК ВТ_ПрочиеРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Резервы КАК Резервы
	|		ПО ВТ_ПрочиеРасходы.Субконто.Наименование = Резервы.Наименование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ПрочиеРасходы.Ссылка,
	|	ВТ_ПрочиеРасходы.Счет,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ВТ_ПрочиеРасходы.СчетНУ,
	|	ВЫБОР
	|		КОГДА ВТ_ПрочиеРасходы.СубконтоНУ1 ССЫЛКА Справочник.УдалитьОценочныеОбязательства
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ_ПрочиеРасходы.СубконтоНУ1 = НЕОПРЕДЕЛЕНО
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.Резервы.ПустаяСсылка)
	|					ИНАЧЕ ЕСТЬNULL(Резервы.Ссылка, ЗНАЧЕНИЕ(Справочник.Резервы.ПустаяСсылка))
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТ_ПрочиеРасходы.СубконтоНУ1 = НЕОПРЕДЕЛЕНО
	|						И ВТ_ПрочиеРасходы.СубконтоНУ ЕСТЬ NULL 
	|					ТОГДА ЗНАЧЕНИЕ(Справочник.Резервы.ПустаяСсылка)
	|				ИНАЧЕ ВТ_ПрочиеРасходы.СубконтоНУ1
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВТ_ПрочиеРасходы.СубконтоНУ2,
	|	ВТ_ПрочиеРасходы.СубконтоНУ3
	|ИЗ
	|	ВТ_ПрочиеРасходы КАК ВТ_ПрочиеРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Резервы КАК Резервы
	|		ПО ВТ_ПрочиеРасходы.СубконтоНУ.Наименование = Резервы.Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Объединение.Ссылка КАК Ссылка,
	|	ВТ_Объединение.Счет,
	|	МАКСИМУМ(ВТ_Объединение.Субконто1) КАК Субконто1,
	|	МАКСИМУМ(ВТ_Объединение.Субконто2) КАК Субконто2,
	|	МАКСИМУМ(ВТ_Объединение.Субконто3) КАК Субконто3,
	|	ВТ_Объединение.СчетНУ,
	|	МАКСИМУМ(ВТ_Объединение.СубконтоНУ1) КАК СубконтоНУ1,
	|	МАКСИМУМ(ВТ_Объединение.СубконтоНУ2) КАК СубконтоНУ2,
	|	МАКСИМУМ(ВТ_Объединение.СубконтоНУ3) КАК СубконтоНУ3
	|ИЗ
	|	ВТ_Объединение КАК ВТ_Объединение
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Объединение.Ссылка,
	|	ВТ_Объединение.Счет,
	|	ВТ_Объединение.СчетНУ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";*/
			/*ПроцедурыОбновленияИнформационнойБазы.ОбновитьОбъектыПоЗапросу(Запрос, ТекстСообщения);*/
			if(true/*Метаданные.Имя <> "КомплекснаяАвтоматизация"*/)
			{
				/*ЭтапОбновления = ЭтапОбновления + 1;*/
				/*ТекстСообщения = "Обработка оценочных обязательств часть " + ЭтапОбновления + " из " + ВсегоЧастей;*/
				/*Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОтчетПроизводстваЗаСмену.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_ОтчетПроизводстваСсылки
		|ИЗ
		|	Документ.ОтчетПроизводстваЗаСмену.ТехнологическиеОперации КАК ОтчетПроизводстваЗаСмену
		|ГДЕ
		|	(ОтчетПроизводстваЗаСмену.СчетЗатрат В (&СтарыеСчета)
		|			ИЛИ ОтчетПроизводстваЗаСмену.СчетЗатратНУ В (&СтарыеСчетаНУ))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтчетПроизводстваЗаСменуТехнологическиеОперации.Ссылка КАК Ссылка,
		|	ОтчетПроизводстваЗаСменуТехнологическиеОперации.НомерСтроки КАК НомерСтроки,
		|	ОтчетПроизводстваЗаСменуТехнологическиеОперации.Валюта,
		|	ОтчетПроизводстваЗаСменуТехнологическиеОперации.ВидВыпуска,
		|	ОтчетПроизводстваЗаСменуТехнологическиеОперации.Заказ,
		|	ОтчетПроизводстваЗаСменуТехнологическиеОперации.Количество,
		|	ОтчетПроизводстваЗаСменуТехнологическиеОперации.НоменклатурнаяГруппа,
		|	ОтчетПроизводстваЗаСменуТехнологическиеОперации.ОбъектСтроительства,
		|	ОтчетПроизводстваЗаСменуТехнологическиеОперации.Продукция,
		|	ОтчетПроизводстваЗаСменуТехнологическиеОперации.Расценка,
		|	ОтчетПроизводстваЗаСменуТехнологическиеОперации.СерияПродукции,
		|	ОтчетПроизводстваЗаСменуТехнологическиеОперации.СтатьяЗатрат,
		|	ОтчетПроизводстваЗаСменуТехнологическиеОперации.Сумма,
		|	ОтчетПроизводстваЗаСменуТехнологическиеОперации.СуммаВВалютеРасценки,
		|	ОтчетПроизводстваЗаСменуТехнологическиеОперации.СуммаРегл,
		|	ВЫБОР
		|		КОГДА ОтчетПроизводстваЗаСменуТехнологическиеОперации.СчетЗатрат В (&СтарыеСчета)
		|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РезервыПредстоящихРасходов)
		|		ИНАЧЕ ОтчетПроизводстваЗаСменуТехнологическиеОперации.СчетЗатрат
		|	КОНЕЦ КАК СчетЗатрат,
		|	ВЫБОР
		|		КОГДА ОтчетПроизводстваЗаСменуТехнологическиеОперации.СчетЗатратНУ В (&СтарыеСчетаНУ)
		|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Налоговый.РезервыПредстоящихРасходов)
		|		ИНАЧЕ ОтчетПроизводстваЗаСменуТехнологическиеОперации.СчетЗатратНУ
		|	КОНЕЦ КАК СчетЗатратНУ,
		|	ОтчетПроизводстваЗаСменуТехнологическиеОперации.ТехнологическаяОперация,
		|	ОтчетПроизводстваЗаСменуТехнологическиеОперации.ХарактеристикаПродукции,
		|	ОтчетПроизводстваЗаСменуТехнологическиеОперации.ОтражениеВУСН,
		|	ОтчетПроизводстваЗаСменуТехнологическиеОперации.Проект,
		|	ОтчетПроизводстваЗаСменуТехнологическиеОперации.ПодразделениеНЗП,
		|	ОтчетПроизводстваЗаСменуТехнологическиеОперации.ПодразделениеОрганизацииНЗП,
		|	ОтчетПроизводстваЗаСменуТехнологическиеОперации.СпособСтроительства
		|ИЗ
		|	ВТ_ОтчетПроизводстваСсылки КАК ВТ_ОтчетПроизводстваСсылки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПроизводстваЗаСмену.ТехнологическиеОперации КАК ОтчетПроизводстваЗаСменуТехнологическиеОперации
		|		ПО ВТ_ОтчетПроизводстваСсылки.Ссылка = ОтчетПроизводстваЗаСменуТехнологическиеОперации.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтроки";*/
				/*ПроцедурыОбновленияИнформационнойБазы.ОбновитьТабличнуюЧастьОбъектаПоЗапросу(Запрос, "ТехнологическиеОперации", ТекстСообщения);*/
			}
			/*ЭтапОбновления = ЭтапОбновления + 1;*/
			/*ТекстСообщения = "Обработка оценочных обязательств часть " + ЭтапОбновления + " из " + ВсегоЧастей;*/
			/*Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УстановкаСоответствияСчетовБУиНУ.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_УстановкаСоответствияСчетовБУиНУ
	|ИЗ
	|	Документ.УстановкаСоответствияСчетовБУиНУ.СоответствиеСчетовБУиНУ КАК УстановкаСоответствияСчетовБУиНУ
	|ГДЕ
	|	(УстановкаСоответствияСчетовБУиНУ.СчетБУ В (&СтарыеСчета)
	|			ИЛИ УстановкаСоответствияСчетовБУиНУ.СчетКоррБУ В (&СтарыеСчета)
	|			ИЛИ УстановкаСоответствияСчетовБУиНУ.СчетНУ В (&СтарыеСчетаНУ))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УстановкаСоответствияСчетовБУиНУ.Ссылка КАК Ссылка,
	|	МИНИМУМ(УстановкаСоответствияСчетовБУиНУ.НомерСтроки) КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА УстановкаСоответствияСчетовБУиНУ.СчетБУ В (&СтарыеСчета)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РезервыПредстоящихРасходов)
	|		ИНАЧЕ УстановкаСоответствияСчетовБУиНУ.СчетБУ
	|	КОНЕЦ КАК СчетБУ,
	|	ВЫБОР
	|		КОГДА УстановкаСоответствияСчетовБУиНУ.СчетКоррБУ В (&СтарыеСчета)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РезервыПредстоящихРасходов)
	|		ИНАЧЕ УстановкаСоответствияСчетовБУиНУ.СчетКоррБУ
	|	КОНЕЦ КАК СчетКоррБУ,
	|	УстановкаСоответствияСчетовБУиНУ.ВидЗатратНУ,
	|	ВЫБОР
	|		КОГДА УстановкаСоответствияСчетовБУиНУ.СчетНУ В (&СтарыеСчетаНУ)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Налоговый.РезервыПредстоящихРасходов)
	|		ИНАЧЕ УстановкаСоответствияСчетовБУиНУ.СчетНУ
	|	КОНЕЦ КАК СчетНУ,
	|	УстановкаСоответствияСчетовБУиНУ.Учитывается,
	|	МАКСИМУМ(УстановкаСоответствияСчетовБУиНУ.Комментарий) КАК Комментарий
	|ИЗ
	|	ВТ_УстановкаСоответствияСчетовБУиНУ КАК ВТ_УстановкаСоответствияСчетовБУиНУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УстановкаСоответствияСчетовБУиНУ.СоответствиеСчетовБУиНУ КАК УстановкаСоответствияСчетовБУиНУ
	|		ПО ВТ_УстановкаСоответствияСчетовБУиНУ.Ссылка = УстановкаСоответствияСчетовБУиНУ.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	УстановкаСоответствияСчетовБУиНУ.Ссылка,
	|	ВЫБОР
	|		КОГДА УстановкаСоответствияСчетовБУиНУ.СчетБУ В (&СтарыеСчета)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РезервыПредстоящихРасходов)
	|		ИНАЧЕ УстановкаСоответствияСчетовБУиНУ.СчетБУ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА УстановкаСоответствияСчетовБУиНУ.СчетКоррБУ В (&СтарыеСчета)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РезервыПредстоящихРасходов)
	|		ИНАЧЕ УстановкаСоответствияСчетовБУиНУ.СчетКоррБУ
	|	КОНЕЦ,
	|	УстановкаСоответствияСчетовБУиНУ.ВидЗатратНУ,
	|	ВЫБОР
	|		КОГДА УстановкаСоответствияСчетовБУиНУ.СчетНУ В (&СтарыеСчетаНУ)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Налоговый.РезервыПредстоящихРасходов)
	|		ИНАЧЕ УстановкаСоответствияСчетовБУиНУ.СчетНУ
	|	КОНЕЦ,
	|	УстановкаСоответствияСчетовБУиНУ.Учитывается
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";*/
			/*ЗаменитьТабличнуюЧастьОбъектаПоЗапросу(Запрос, "СоответствиеСчетовБУиНУ", ТекстСообщения);*/
			/*// обработаем движения
*/
			/*ЭтапОбновления = ЭтапОбновления + 1;*/
			/*ТекстСообщения = "Обработка оценочных обязательств часть " + ЭтапОбновления + " из " + ВсегоЧастей;*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	СоответствиеСчетовБУиНУ.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТ_Регистраторы
	|ИЗ
	|	РегистрСведений.СоответствиеСчетовБУиНУ КАК СоответствиеСчетовБУиНУ
	|ГДЕ
	|	(СоответствиеСчетовБУиНУ.СчетБУ В (&СтарыеСчета)
	|			ИЛИ СоответствиеСчетовБУиНУ.СчетКоррБУ В (&СтарыеСчета)
	|			ИЛИ СоответствиеСчетовБУиНУ.СчетНУ В (&СтарыеСчетаНУ))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеСчетовБУиНУ.Период,
	|	СоответствиеСчетовБУиНУ.Регистратор КАК Регистратор,
	|	МИНИМУМ(СоответствиеСчетовБУиНУ.НомерСтроки) КАК НомерСтроки,
	|	СоответствиеСчетовБУиНУ.Активность,
	|	ВЫБОР
	|		КОГДА СоответствиеСчетовБУиНУ.СчетБУ В (&СтарыеСчета)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РезервыПредстоящихРасходов)
	|		ИНАЧЕ СоответствиеСчетовБУиНУ.СчетБУ
	|	КОНЕЦ КАК СчетБУ,
	|	ВЫБОР
	|		КОГДА СоответствиеСчетовБУиНУ.СчетКоррБУ В (&СтарыеСчета)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РезервыПредстоящихРасходов)
	|		ИНАЧЕ СоответствиеСчетовБУиНУ.СчетКоррБУ
	|	КОНЕЦ КАК СчетКоррБУ,
	|	СоответствиеСчетовБУиНУ.ВидЗатратНУ,
	|	ВЫБОР
	|		КОГДА СоответствиеСчетовБУиНУ.СчетНУ В (&СтарыеСчетаНУ)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Налоговый.РезервыПредстоящихРасходов)
	|		ИНАЧЕ СоответствиеСчетовБУиНУ.СчетНУ
	|	КОНЕЦ КАК СчетНУ,
	|	СоответствиеСчетовБУиНУ.Учитывается,
	|	МАКСИМУМ(СоответствиеСчетовБУиНУ.Комментарий) КАК Комментарий,
	|	СоответствиеСчетовБУиНУ.РеквизитПредставление
	|ИЗ
	|	РегистрСведений.СоответствиеСчетовБУиНУ КАК СоответствиеСчетовБУиНУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Регистраторы КАК ВТ_Регистраторы
	|		ПО СоответствиеСчетовБУиНУ.Регистратор = ВТ_Регистраторы.Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеСчетовБУиНУ.Период,
	|	СоответствиеСчетовБУиНУ.Активность,
	|	СоответствиеСчетовБУиНУ.РеквизитПредставление,
	|	ВЫБОР
	|		КОГДА СоответствиеСчетовБУиНУ.СчетНУ В (&СтарыеСчетаНУ)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Налоговый.РезервыПредстоящихРасходов)
	|		ИНАЧЕ СоответствиеСчетовБУиНУ.СчетНУ
	|	КОНЕЦ,
	|	СоответствиеСчетовБУиНУ.Учитывается,
	|	ВЫБОР
	|		КОГДА СоответствиеСчетовБУиНУ.СчетБУ В (&СтарыеСчета)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РезервыПредстоящихРасходов)
	|		ИНАЧЕ СоответствиеСчетовБУиНУ.СчетБУ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СоответствиеСчетовБУиНУ.СчетКоррБУ В (&СтарыеСчета)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РезервыПредстоящихРасходов)
	|		ИНАЧЕ СоответствиеСчетовБУиНУ.СчетКоррБУ
	|	КОНЕЦ,
	|	СоответствиеСчетовБУиНУ.ВидЗатратНУ,
	|	СоответствиеСчетовБУиНУ.Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";*/
			/*ПроцедурыОбновленияИнформационнойБазы.ПереписатьНаборыЗаписейПоРегистраторам(РегистрыСведений.СоответствиеСчетовБУиНУ, Запрос, ТекстСообщения);*/
			/*ЭтапОбновления = ЭтапОбновления + 1;*/
			/*ТекстСообщения = "Обработка оценочных обязательств часть " + ЭтапОбновления + " из " + ВсегоЧастей;*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Регистратор КАК Регистратор,
	|	Хозрасчетный.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА Хозрасчетный.СчетДт В (&СтарыеСчета)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РезервыПредстоящихРасходов)
	|		ИНАЧЕ Хозрасчетный.СчетДт
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА Хозрасчетный.СчетКт В (&СтарыеСчета)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РезервыПредстоящихРасходов)
	|		ИНАЧЕ Хозрасчетный.СчетКт
	|	КОНЕЦ КАК СчетКт
	|ПОМЕСТИТЬ ВТ_Счета
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	(Хозрасчетный.СчетДт В (&СтарыеСчета)
	|			ИЛИ Хозрасчетный.СчетКт В (&СтарыеСчета))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйСубконто.Регистратор КАК Регистратор,
	|	ХозрасчетныйСубконто.НомерСтроки КАК НомерСтроки,
	|	ХозрасчетныйСубконто.ВидДвижения,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.УдалитьОценочныеОбязательства)
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Резервы)
	|		ИНАЧЕ ХозрасчетныйСубконто.Вид
	|	КОНЕЦ КАК Вид,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.УдалитьОценочныеОбязательства)
	|			ТОГДА ВЫБОР
	|					КОГДА ХозрасчетныйСубконто.Значение ССЫЛКА Справочник.УдалитьОценочныеОбязательства
	|						ТОГДА ЕСТЬNULL(Резервы.Ссылка, ЗНАЧЕНИЕ(Справочник.Резервы.ПустаяСсылка))
	|					ИНАЧЕ ХозрасчетныйСубконто.Значение
	|				КОНЕЦ
	|		ИНАЧЕ ХозрасчетныйСубконто.Значение
	|	КОНЕЦ КАК Значение
	|ПОМЕСТИТЬ ВТ_Субконто
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Резервы КАК Резервы
	|		ПО (ВЫРАЗИТЬ(ХозрасчетныйСубконто.Значение КАК Справочник.УдалитьОценочныеОбязательства).Наименование = Резервы.Наименование)
	|ГДЕ
	|	(ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.УдалитьОценочныеОбязательства)
	|			ИЛИ ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Резервы))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Счета.Регистратор КАК Регистратор,
	|	ВТ_Счета.НомерСтроки КАК НомерСтроки,
	|	ВТ_Счета.СчетДт,
	|	ВТ_Счета.СчетКт,
	|	ВТ_Субконто.ВидДвижения,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.УдалитьОценочныеОбязательства) КАК УдалитьВидСубконто,
	|	ВТ_Субконто.Вид,
	|	ВЫБОР
	|		КОГДА ВТ_Субконто.Значение = НЕОПРЕДЕЛЕНО
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Резервы.ПустаяСсылка)
	|		ИНАЧЕ ВТ_Субконто.Значение
	|	КОНЕЦ КАК Значение
	|ИЗ
	|	ВТ_Счета КАК ВТ_Счета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Субконто КАК ВТ_Субконто
	|		ПО ВТ_Счета.Регистратор = ВТ_Субконто.Регистратор
	|			И ВТ_Счета.НомерСтроки = ВТ_Субконто.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";*/
			/*ИзменитьНаборыЗаписейРегистраБухгалтерииПоРегистраторам(РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей(), Запрос, ТекстСообщения);*/
			/*ЭтапОбновления = ЭтапОбновления + 1;*/
			/*ТекстСообщения = "Обработка оценочных обязательств часть " + ЭтапОбновления + " из " + ВсегоЧастей;*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	Налоговый.Регистратор КАК Регистратор,
	|	Налоговый.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА Налоговый.СчетДт В (&СтарыеСчетаНУ)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Налоговый.РезервыПредстоящихРасходов)
	|		ИНАЧЕ Налоговый.СчетДт
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА Налоговый.СчетКт В (&СтарыеСчетаНУ)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Налоговый.РезервыПредстоящихРасходов)
	|		ИНАЧЕ Налоговый.СчетКт
	|	КОНЕЦ КАК СчетКт
	|ПОМЕСТИТЬ ВТ_Счета
	|ИЗ
	|	РегистрБухгалтерии.Налоговый КАК Налоговый
	|ГДЕ
	|	(Налоговый.СчетДт В (&СтарыеСчетаНУ)
	|			ИЛИ Налоговый.СчетКт В (&СтарыеСчетаНУ))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НалоговыйСубконто.Регистратор КАК Регистратор,
	|	НалоговыйСубконто.НомерСтроки КАК НомерСтроки,
	|	НалоговыйСубконто.ВидДвижения,
	|	ВЫБОР
	|		КОГДА НалоговыйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.УдалитьОценочныеОбязательства)
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Резервы)
	|		ИНАЧЕ НалоговыйСубконто.Вид
	|	КОНЕЦ КАК Вид,
	|	ВЫБОР
	|		КОГДА НалоговыйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.УдалитьОценочныеОбязательства)
	|			ТОГДА ВЫБОР
	|					КОГДА НалоговыйСубконто.Значение ССЫЛКА Справочник.УдалитьОценочныеОбязательства
	|						ТОГДА ЕСТЬNULL(Резервы.Ссылка, ЗНАЧЕНИЕ(Справочник.Резервы.ПустаяСсылка))
	|					ИНАЧЕ НалоговыйСубконто.Значение
	|				КОНЕЦ
	|		ИНАЧЕ НалоговыйСубконто.Значение
	|	КОНЕЦ КАК Значение
	|ПОМЕСТИТЬ ВТ_Субконто
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.Субконто КАК НалоговыйСубконто
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Резервы КАК Резервы
	|		ПО (ВЫРАЗИТЬ(НалоговыйСубконто.Значение КАК Справочник.УдалитьОценочныеОбязательства).Наименование = Резервы.Наименование)
	|ГДЕ
	|	(НалоговыйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.УдалитьОценочныеОбязательства)
	|			ИЛИ НалоговыйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Резервы))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Счета.Регистратор КАК Регистратор,
	|	ВТ_Счета.НомерСтроки КАК НомерСтроки,
	|	ВТ_Счета.СчетДт,
	|	ВТ_Счета.СчетКт,
	|	ВТ_Субконто.ВидДвижения,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.УдалитьОценочныеОбязательства) КАК УдалитьВидСубконто,
	|	ВТ_Субконто.Вид,
	|	ВЫБОР
	|		КОГДА ВТ_Субконто.Значение = НЕОПРЕДЕЛЕНО
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Резервы.ПустаяСсылка)
	|		ИНАЧЕ ВТ_Субконто.Значение
	|	КОНЕЦ КАК Значение
	|ИЗ
	|	ВТ_Счета КАК ВТ_Счета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Субконто КАК ВТ_Субконто
	|		ПО ВТ_Счета.Регистратор = ВТ_Субконто.Регистратор
	|			И ВТ_Счета.НомерСтроки = ВТ_Субконто.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";*/
			/*ИзменитьНаборыЗаписейРегистраБухгалтерииПоРегистраторам(РегистрыБухгалтерии.Налоговый.СоздатьНаборЗаписей(), Запрос, ТекстСообщения);*/
			/*#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние("");*/
			/*#КонецЕсли;*/
		}
		////////////////////////////////////////////////////////////////////////////////
		// 2.5.39

		public void ОбновитьРегистрСведенийСсылкиНаСайтеИТС(/**/)
		{
			/*// Заполняем список ссылок на сайте ИТС, независимо от того первый это запуск или обновление с предыдущих версий.
*/
			/*РегистрыСведений.СсылкиНаСайтеИТС.ПроизвестиЗаполнениеРегистраСведенийСсылкиНаСайтеИТС();*/
			/*#Если ТолстыйКлиентОбычноеПриложение Тогда
		
		Оповестить("ОбновленСписокСсылокНаСайтеИТС");*/
			/*#КонецЕсли;*/
		}

		public void УстановитьКодЭлементаРасходыПоУплатеСтраховыхВзносов(/**/)
		{
			/*Экспорт

	Ссылка = Справочники.ПрочиеДоходыИРасходы.РасходыПоУплатеСтраховыхВзносов;*/
			/*СписокЭлементов = Новый СписокЗначений;*/
			/*СписокЭлементов.Добавить(Ссылка);*/
			/*ПроцедурыОбновленияИнформационнойБазы.УстановитьЗначениеКодаПредопределенныхЭлементов(СписокЭлементов);*/
			/*Объект = Ссылка.ПолучитьОбъект();*/
			/*Объект.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеКосвенныеРасходы;*/
			/*Объект.ПринятиеКналоговомуУчету = Истина;*/
			/*Объект.Записать();*/
		}
		////////////////////////////////////////////////////////////////////////////////
		// 2.5.40

		public void ЗаполнитьУчетнуюПолитикуПоОценочнымОбязательствам(/**/)
		{
			/*// восстановим учетную политику по состоянию на 01.01.2011
*/
			/*Запрос = Новый Запрос;*/
			/*ДатаСреза = Дата(2011,1,1);*/
			/*Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РазмерыОтчисленийСрезПоследних.Организация
	|ИЗ
	|	РегистрСведений.РазмерыОтчисленийВРезервы.СрезПоследних(&ДатаСреза, ) КАК РазмерыОтчисленийСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Резервы.БазовыеВидыРасчета КАК РезервыБазовыеВидыРасчета
	|		ПО РазмерыОтчисленийСрезПоследних.Резерв = РезервыБазовыеВидыРасчета.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоОценочнымОбязательствам.СрезПоследних(&ДатаСреза, ) КАК УчетнаяПолитикаПоОценочнымОбязательствамСрезПоследних
	|		ПО РазмерыОтчисленийСрезПоследних.Организация = УчетнаяПолитикаПоОценочнымОбязательствамСрезПоследних.Организация
	|ГДЕ
	|	РазмерыОтчисленийСрезПоследних.Размер > 0
	|	И УчетнаяПолитикаПоОценочнымОбязательствамСрезПоследних.ФормироватьБУ ЕСТЬ NULL ";*/
			/*РезультатЗапроса = Запрос.Выполнить();*/
			/*Выборка = РезультатЗапроса.Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				/*НаборЗаписей = РегистрыСведений.УчетнаяПолитикаПоОценочнымОбязательствам.СоздатьНаборЗаписей();*/
				/*НаборЗаписей.Отбор.Период.Значение = ДатаСреза;*/
				/*НаборЗаписей.Отбор.Период.Использование = Истина;*/
				/*НаборЗаписей.Отбор.Организация.Использование = Истина;*/
				/*НаборЗаписей.Отбор.Организация.Значение = Выборка.Организация;*/
				/*НоваяЗапись = НаборЗаписей.Добавить();*/
				/*НоваяЗапись.Период = ДатаСреза;*/
				/*НоваяЗапись.Организация = Выборка.Организация;*/
				/*НоваяЗапись.ФормироватьБУ = Истина;*/
				/*НоваяЗапись.ФормироватьНУ = Истина;*/
				/*НоваяЗапись.ПорядокРасчета = Перечисления.ПорядокРасчетаОценочныхОбязательств.Начисления;*/
				/*НаборЗаписей.Записать();*/
			}
			/*;;*/
		}

		public void ОбработатьИзмененияСчета96(/**/)
		{
			/*Запрос = Новый Запрос;*/
			/*// БУ
*/
			/*МассивСтарыеСчета = Новый Массив;*/
			/*МассивСтарыеСчета.Добавить(ПланыСчетов.Хозрасчетный.УдалитьОценочныеОбязательства);*/
			/*МассивСтарыеСчета.Добавить(ПланыСчетов.Хозрасчетный.УдалитьОценочныеОбязательстваИРезервы);*/
			/*Запрос.УстановитьПараметр("СтарыеСчета", МассивСтарыеСчета);*/
			/*Запрос.УстановитьПараметр("Счет96", ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов);*/
			/*// НУ
*/
			/*МассивСтарыеСчетаНУ = Новый Массив;*/
			/*МассивСтарыеСчетаНУ.Добавить(ПланыСчетов.Налоговый.УдалитьОценочныеОбязательства);*/
			/*МассивСтарыеСчетаНУ.Добавить(ПланыСчетов.Налоговый.УдалитьОценочныеОбязательстваИРезервы);*/
			/*Запрос.УстановитьПараметр("СтарыеСчетаНУ", МассивСтарыеСчетаНУ);*/
			/*Запрос.УстановитьПараметр("Счет96НУ", ПланыСчетов.Налоговый.РезервыПредстоящихРасходов);*/
			/*ВсегоЧастей = 8;*/
			/*// обработка способов отражения
*/
			/*ТекстСообщения = "Обработка оценочных обязательств часть 1 из " + ВсегоЧастей;*/
			/*#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": подготовка данных ...");*/
			/*#КонецЕсли
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СпособыОтраженияЗарплатыВРеглУчете.Ссылка,
	|	ВЫБОР
	|		КОГДА СпособыОтраженияЗарплатыВРеглУчете.СчетДт В (&СтарыеСчета)
	|			ТОГДА &Счет96
	|		ИНАЧЕ СпособыОтраженияЗарплатыВРеглУчете.СчетДт
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА СпособыОтраженияЗарплатыВРеглУчете.СчетКт В (&СтарыеСчета)
	|			ТОГДА &Счет96
	|		ИНАЧЕ СпособыОтраженияЗарплатыВРеглУчете.СчетКт
	|	КОНЕЦ КАК СчетКт,
	|	ВЫБОР
	|		КОГДА СпособыОтраженияЗарплатыВРеглУчете.СчетДтНУ В (&СтарыеСчетаНУ)
	|			ТОГДА &Счет96НУ
	|		ИНАЧЕ СпособыОтраженияЗарплатыВРеглУчете.СчетДтНУ
	|	КОНЕЦ КАК СчетДтНУ,
	|	ВЫБОР
	|		КОГДА СпособыОтраженияЗарплатыВРеглУчете.СчетКтНУ В (&СтарыеСчетаНУ)
	|			ТОГДА &Счет96НУ
	|		ИНАЧЕ СпособыОтраженияЗарплатыВРеглУчете.СчетКтНУ
	|	КОНЕЦ КАК СчетКтНУ
	|ИЗ
	|	Справочник.СпособыОтраженияЗарплатыВРеглУчете КАК СпособыОтраженияЗарплатыВРеглУчете
	|ГДЕ
	|	(СпособыОтраженияЗарплатыВРеглУчете.СчетДт В (&СтарыеСчета)
	|			ИЛИ СпособыОтраженияЗарплатыВРеглУчете.СчетКт В (&СтарыеСчета)
	|			ИЛИ СпособыОтраженияЗарплатыВРеглУчете.СчетДтНУ В (&СтарыеСчетаНУ)
	|			ИЛИ СпособыОтраженияЗарплатыВРеглУчете.СчетКтНУ В (&СтарыеСчетаНУ))";*/
			/*Выборка = Запрос.Выполнить().Выбрать();*/
			/*#Если ТолстыйКлиентОбычноеПриложение Тогда
		ВсегоДоков = Выборка.Количество();*/
			/*Номер = 1;*/
			/*Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоДоков);*/
			while(true/*Выборка.Следующий()*/)
			{
				/*СпособОбъект = Выборка.Ссылка.ПолучитьОбъект();*/
				/*СпособОбъект.СчетДт = Выборка.СчетДт;*/
				/*СпособОбъект.СчетКт = Выборка.СчетКт;*/
				/*СпособОбъект.СчетДтНУ = Выборка.СчетДтНУ;*/
				/*СпособОбъект.СчетКтНУ = Выборка.СчетКтНУ;*/
				if(true/*Номер % 30 = 0*/)
				{
					/*Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоДоков);*/
				}
				/*Номер = Номер + 1;*/
				/*#КонецЕсли
		
		СпособОбъект.Записать();*/
			}
			/*;	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);*/
			/*// обработаем документы
*/
			/*ТекстСообщения = "Обработка оценочных обязательств часть 2 из " + ВсегоЧастей;*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	БольничныйОтражениеНачислений.Ссылка КАК Ссылка,
	|	БольничныйОтражениеНачислений.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА БольничныйОтражениеНачислений.СчетДт В (&СтарыеСчета)
	|			ТОГДА &Счет96
	|		ИНАЧЕ БольничныйОтражениеНачислений.СчетДт
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА БольничныйОтражениеНачислений.СчетКт В (&СтарыеСчета)
	|			ТОГДА &Счет96
	|		ИНАЧЕ БольничныйОтражениеНачислений.СчетКт
	|	КОНЕЦ КАК СчетКт,
	|	БольничныйОтражениеНачислений.СубконтоДт1,
	|	БольничныйОтражениеНачислений.СубконтоДт2,
	|	БольничныйОтражениеНачислений.СубконтоДт3,
	|	БольничныйОтражениеНачислений.СубконтоКт1,
	|	БольничныйОтражениеНачислений.СубконтоКт2,
	|	БольничныйОтражениеНачислений.СубконтоКт3,
	|	ВЫБОР
	|		КОГДА БольничныйОтражениеНачислений.СчетДтНУ В (&СтарыеСчетаНУ)
	|			ТОГДА &Счет96НУ
	|		ИНАЧЕ БольничныйОтражениеНачислений.СчетДтНУ
	|	КОНЕЦ КАК СчетДтНУ,
	|	БольничныйОтражениеНачислений.СубконтоДтНУ1,
	|	БольничныйОтражениеНачислений.СубконтоДтНУ2,
	|	БольничныйОтражениеНачислений.СубконтоДтНУ3,
	|	ВЫБОР
	|		КОГДА БольничныйОтражениеНачислений.СчетКтНУ В (&СтарыеСчетаНУ)
	|			ТОГДА &Счет96НУ
	|		ИНАЧЕ БольничныйОтражениеНачислений.СчетКтНУ
	|	КОНЕЦ КАК СчетКтНУ,
	|	БольничныйОтражениеНачислений.СубконтоКтНУ1,
	|	БольничныйОтражениеНачислений.СубконтоКтНУ2,
	|	БольничныйОтражениеНачислений.СубконтоКтНУ3,
	|	БольничныйОтражениеНачислений.ОтражениеВУСН,
	|	БольничныйОтражениеНачислений.Результат,
	|	БольничныйОтражениеНачислений.ДополнительныйРезультат,
	|	БольничныйОтражениеНачислений.ПериодДействияНачало,
	|	БольничныйОтражениеНачислений.ПериодДействияКонец,
	|	БольничныйОтражениеНачислений.ОблагаетсяЕНВД,
	|	БольничныйОтражениеНачислений.КодДоходаЕСН,
	|	БольничныйОтражениеНачислений.ПодразделениеДт,
	|	БольничныйОтражениеНачислений.ПодразделениеКт,
	|	БольничныйОтражениеНачислений.СуммаНУ,
	|	БольничныйОтражениеНачислений.СуммаПР,
	|	БольничныйОтражениеНачислений.СуммаВР,
	|	БольничныйОтражениеНачислений.ВидНачисленийОплатыТрудаПоСтатье255НК,
	|	БольничныйОтражениеНачислений.Сторно,
	|	БольничныйОтражениеНачислений.СпособРаспределенияЗатрат
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту.ОтражениеНачислений КАК БольничныйОтражениеНачислений
	|ГДЕ
	|	БольничныйОтражениеНачислений.Ссылка В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Больничный.Ссылка
	|			ИЗ
	|				Документ.НачислениеПоБольничномуЛисту.ОтражениеНачислений КАК Больничный
	|			ГДЕ
	|				(Больничный.СчетДт В (&СтарыеСчета)
	|					ИЛИ Больничный.СчетКт В (&СтарыеСчета)
	|					ИЛИ Больничный.СчетДтНУ В (&СтарыеСчетаНУ)
	|					ИЛИ Больничный.СчетКтНУ В (&СтарыеСчетаНУ)))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";*/
			/*ПроцедурыОбновленияИнформационнойБазы.ОбновитьТабличнуюЧастьОбъектаПоЗапросу(Запрос, "ОтражениеНачислений", ТекстСообщения);*/
			/*ТекстСообщения = "Обработка оценочных обязательств часть 3 из " + ВсегоЧастей;*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	СдельныйНарядВыработка.Ссылка КАК Ссылка,
	|	СдельныйНарядВыработка.НомерСтроки КАК НомерСтроки,
	|	СдельныйНарядВыработка.ТехнологическаяОперация,
	|	СдельныйНарядВыработка.СтатьяЗатрат,
	|	СдельныйНарядВыработка.НоменклатурнаяГруппа,
	|	СдельныйНарядВыработка.Расценка,
	|	СдельныйНарядВыработка.Валюта,
	|	СдельныйНарядВыработка.Количество,
	|	СдельныйНарядВыработка.СуммаЗаРаботуВВалютеРасценки,
	|	СдельныйНарядВыработка.Сумма,
	|	СдельныйНарядВыработка.СуммаРегл,
	|	ВЫБОР
	|		КОГДА СдельныйНарядВыработка.СчетЗатрат В (&СтарыеСчета)
	|			ТОГДА &Счет96
	|		ИНАЧЕ СдельныйНарядВыработка.СчетЗатрат
	|	КОНЕЦ КАК СчетЗатрат,
	|	ВЫБОР
	|		КОГДА СдельныйНарядВыработка.СчетЗатратНУ В (&СтарыеСчетаНУ)
	|			ТОГДА &Счет96НУ
	|		ИНАЧЕ СдельныйНарядВыработка.СчетЗатратНУ
	|	КОНЕЦ КАК СчетЗатратНУ,
	|	СдельныйНарядВыработка.ОбъектСтроительства,
	|	СдельныйНарядВыработка.ОтражениеВУСН,
	|	СдельныйНарядВыработка.Продукция,
	|	СдельныйНарядВыработка.ПодразделениеОрганизации,
	|	СдельныйНарядВыработка.СерияПродукции,
	|	СдельныйНарядВыработка.СпособРаспределенияЗатратНаВыпуск,
	|	СдельныйНарядВыработка.ХарактеристикаПродукции,
	|	СдельныйНарядВыработка.Проект,
	|	СдельныйНарядВыработка.СпособСтроительства
	|ИЗ
	|	Документ.СдельныйНаряд.Выработка КАК СдельныйНарядВыработка
	|ГДЕ
	|	СдельныйНарядВыработка.Ссылка В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				СдельныйНаряд.Ссылка
	|			ИЗ
	|				Документ.СдельныйНаряд.Выработка КАК СдельныйНаряд
	|			ГДЕ
	|				(СдельныйНаряд.СчетЗатрат В (&СтарыеСчета)
	|					ИЛИ СдельныйНаряд.СчетЗатратНУ В (&СтарыеСчетаНУ)))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";*/
			/*ПроцедурыОбновленияИнформационнойБазы.ОбновитьТабличнуюЧастьОбъектаПоЗапросу(Запрос, "Выработка", ТекстСообщения);*/
			/*ТекстСообщения = "Обработка оценочных обязательств часть 4 из " + ВсегоЧастей;*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка КАК Ссылка,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт В (&СтарыеСчета)
	|			ТОГДА &Счет96
	|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт В (&СтарыеСчета)
	|			ТОГДА &Счет96
	|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт
	|	КОНЕЦ КАК СчетКт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт1,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт2,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт3,
	|	ВЫБОР
	|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ В (&СтарыеСчетаНУ)
	|			ТОГДА &Счет96НУ
	|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ
	|	КОНЕЦ КАК СчетДтНУ,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ1,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ2,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ3,
	|	ВЫБОР
	|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКтНУ В (&СтарыеСчетаНУ)
	|			ТОГДА &Счет96НУ
	|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКтНУ
	|	КОНЕЦ КАК СчетКтНУ,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКтНУ1,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКтНУ2,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКтНУ3,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ОтражениеВУСН,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ВидНачисленияУдержания,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ПодразделениеДт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ПодразделениеКт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СуммаНУ,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СуммаПР,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СуммаВР,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ВидНачисленийОплатыТрудаПоСтатье255НК,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СпособРаспределенияЗатрат,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Субконто255НК
	|ИЗ
	|	Документ.ОтражениеЗарплатыВРеглУчете.ОтражениеВУчете КАК ОтражениеЗарплатыВРеглУчетеОтражениеВУчете
	|ГДЕ
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ОтражениеВУчете.Ссылка
	|			ИЗ
	|				Документ.ОтражениеЗарплатыВРеглУчете.ОтражениеВУчете КАК ОтражениеВУчете
	|			ГДЕ
	|				(ОтражениеВУчете.СчетДт В (&СтарыеСчета)
	|					ИЛИ ОтражениеВУчете.СчетКт В (&СтарыеСчета)
	|					ИЛИ ОтражениеВУчете.СчетДтНУ В (&СтарыеСчетаНУ)
	|					ИЛИ ОтражениеВУчете.СчетКтНУ В (&СтарыеСчетаНУ)))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";*/
			/*ПроцедурыОбновленияИнформационнойБазы.ОбновитьТабличнуюЧастьОбъектаПоЗапросу(Запрос, "ОтражениеВУчете", ТекстСообщения);*/
			/*ТекстСообщения = "Обработка оценочных обязательств часть 5 из " + ВсегоЧастей;*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка КАК Ссылка,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт В (&СтарыеСчета)
	|			ТОГДА &Счет96
	|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт В (&СтарыеСчета)
	|			ТОГДА &Счет96
	|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт
	|	КОНЕЦ КАК СчетКт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ВидРасчета,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сотрудник,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ФизЛицо,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт1,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт2,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт3,
	|	ВЫБОР
	|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ В (&СтарыеСчетаНУ)
	|			ТОГДА &Счет96НУ
	|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ
	|	КОНЕЦ КАК СчетДтНУ,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ1,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ2,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ3,
	|	ВЫБОР
	|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКтНУ В (&СтарыеСчетаНУ)
	|			ТОГДА &Счет96НУ
	|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКтНУ
	|	КОНЕЦ КАК СчетКтНУ,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Результат,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКтНУ1,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКтНУ2,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКтНУ3,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ОтражениеВУСН,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ПериодДействияНачало,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ПериодДействияКонец,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сторно,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ДокументОснование,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ПодразделениеДт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ПодразделениеКт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СуммаНУ,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СуммаПР,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СуммаВР,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ВидНачисленийОплатыТрудаПоСтатье255НК,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СпособРаспределенияЗатрат
	|ИЗ
	|	Документ.ОтражениеЗарплатыВРеглУчете.ОсновныеНачисления КАК ОтражениеЗарплатыВРеглУчетеОтражениеВУчете
	|ГДЕ
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ОтражениеВУчете.Ссылка
	|			ИЗ
	|				Документ.ОтражениеЗарплатыВРеглУчете.ОсновныеНачисления КАК ОтражениеВУчете
	|			ГДЕ
	|				(ОтражениеВУчете.СчетДт В (&СтарыеСчета)
	|					ИЛИ ОтражениеВУчете.СчетКт В (&СтарыеСчета)
	|					ИЛИ ОтражениеВУчете.СчетДтНУ В (&СтарыеСчетаНУ)
	|					ИЛИ ОтражениеВУчете.СчетКтНУ В (&СтарыеСчетаНУ)))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";*/
			/*ПроцедурыОбновленияИнформационнойБазы.ОбновитьТабличнуюЧастьОбъектаПоЗапросу(Запрос, "ОсновныеНачисления", ТекстСообщения);*/
			/*ТекстСообщения = "Обработка оценочных обязательств часть 6 из " + ВсегоЧастей;*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка КАК Ссылка,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт В (&СтарыеСчета)
	|			ТОГДА &Счет96
	|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт В (&СтарыеСчета)
	|			ТОГДА &Счет96
	|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт
	|	КОНЕЦ КАК СчетКт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ВидРасчета,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сотрудник,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ФизЛицо,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт1,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт2,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт3,
	|	ВЫБОР
	|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ В (&СтарыеСчетаНУ)
	|			ТОГДА &Счет96НУ
	|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ
	|	КОНЕЦ КАК СчетДтНУ,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ1,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ2,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ3,
	|	ВЫБОР
	|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКтНУ В (&СтарыеСчетаНУ)
	|			ТОГДА &Счет96НУ
	|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКтНУ
	|	КОНЕЦ КАК СчетКтНУ,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКтНУ1,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКтНУ2,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКтНУ3,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ОтражениеВУСН,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Результат,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сторно,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ДокументОснование,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ПодразделениеДт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ПодразделениеКт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СуммаНУ,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СуммаПР,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СуммаВР,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ВидНачисленийОплатыТрудаПоСтатье255НК,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ДатаНачисления,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СпособРаспределенияЗатрат
	|ИЗ
	|	Документ.ОтражениеЗарплатыВРеглУчете.ДополнительныеНачисления КАК ОтражениеЗарплатыВРеглУчетеОтражениеВУчете
	|ГДЕ
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ОтражениеВУчете.Ссылка
	|			ИЗ
	|				Документ.ОтражениеЗарплатыВРеглУчете.ДополнительныеНачисления КАК ОтражениеВУчете
	|			ГДЕ
	|				(ОтражениеВУчете.СчетДт В (&СтарыеСчета)
	|					ИЛИ ОтражениеВУчете.СчетКт В (&СтарыеСчета)
	|					ИЛИ ОтражениеВУчете.СчетДтНУ В (&СтарыеСчетаНУ)
	|					ИЛИ ОтражениеВУчете.СчетКтНУ В (&СтарыеСчетаНУ)))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";*/
			/*ПроцедурыОбновленияИнформационнойБазы.ОбновитьТабличнуюЧастьОбъектаПоЗапросу(Запрос, "ДополнительныеНачисления", ТекстСообщения);*/
			/*ТекстСообщения = "Обработка оценочных обязательств часть 7 из " + ВсегоЧастей;*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	БУОсновныеНачисления.Активность,
	|	БУОсновныеНачисления.ПериодРегистрации,
	|	БУОсновныеНачисления.Регистратор КАК Регистратор,
	|	БУОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	БУОсновныеНачисления.ВидРасчета,
	|	БУОсновныеНачисления.ПериодДействия,
	|	БУОсновныеНачисления.ПериодДействияНачало,
	|	БУОсновныеНачисления.ПериодДействияКонец,
	|	БУОсновныеНачисления.Сторно,
	|	БУОсновныеНачисления.Сотрудник,
	|	БУОсновныеНачисления.ФизЛицо,
	|	БУОсновныеНачисления.Организация,
	|	БУОсновныеНачисления.Результат,
	|	БУОсновныеНачисления.СуммаНУ,
	|	БУОсновныеНачисления.СуммаПР,
	|	БУОсновныеНачисления.СуммаВР,
	|	БУОсновныеНачисления.ГрафикРаботы,
	|	БУОсновныеНачисления.ВидУчетаВремени,
	|	ВЫБОР
	|		КОГДА БУОсновныеНачисления.СчетДт В (&СтарыеСчета)
	|			ТОГДА &Счет96
	|		ИНАЧЕ БУОсновныеНачисления.СчетДт
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА БУОсновныеНачисления.СчетКт В (&СтарыеСчета)
	|			ТОГДА &Счет96
	|		ИНАЧЕ БУОсновныеНачисления.СчетКт
	|	КОНЕЦ КАК СчетКт,
	|	БУОсновныеНачисления.СубконтоДт1,
	|	БУОсновныеНачисления.СубконтоДт2,
	|	БУОсновныеНачисления.СубконтоДт3,
	|	БУОсновныеНачисления.СубконтоКт1,
	|	БУОсновныеНачисления.СубконтоКт2,
	|	БУОсновныеНачисления.СубконтоКт3,
	|	ВЫБОР
	|		КОГДА БУОсновныеНачисления.СчетДтНУ В (&СтарыеСчетаНУ)
	|			ТОГДА &Счет96НУ
	|		ИНАЧЕ БУОсновныеНачисления.СчетДтНУ
	|	КОНЕЦ КАК СчетДтНУ,
	|	БУОсновныеНачисления.СубконтоДтНУ1,
	|	БУОсновныеНачисления.СубконтоДтНУ2,
	|	БУОсновныеНачисления.СубконтоДтНУ3,
	|	ВЫБОР
	|		КОГДА БУОсновныеНачисления.СчетКтНУ В (&СтарыеСчетаНУ)
	|			ТОГДА &Счет96НУ
	|		ИНАЧЕ БУОсновныеНачисления.СчетКтНУ
	|	КОНЕЦ КАК СчетКтНУ,
	|	БУОсновныеНачисления.СубконтоКтНУ1,
	|	БУОсновныеНачисления.СубконтоКтНУ2,
	|	БУОсновныеНачисления.СубконтоКтНУ3,
	|	БУОсновныеНачисления.ОтражениеВУСН,
	|	БУОсновныеНачисления.ОбособленноеПодразделение,
	|	БУОсновныеНачисления.ДокументОснование,
	|	БУОсновныеНачисления.ПодразделениеДт,
	|	БУОсновныеНачисления.ПодразделениеКт,
	|	БУОсновныеНачисления.ВидНачисленийОплатыТрудаПоСтатье255НК,
	|	БУОсновныеНачисления.СпособРаспределенияЗатрат
	|ИЗ
	|	РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|ГДЕ
	|	БУОсновныеНачисления.Регистратор В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ОтражениеВУчете.Регистратор
	|			ИЗ
	|				РегистрРасчета.БУОсновныеНачисления КАК ОтражениеВУчете
	|			ГДЕ
	|				(ОтражениеВУчете.СчетДт В (&СтарыеСчета)
	|					ИЛИ ОтражениеВУчете.СчетКт В (&СтарыеСчета)
	|					ИЛИ ОтражениеВУчете.СчетДтНУ В (&СтарыеСчетаНУ)
	|					ИЛИ ОтражениеВУчете.СчетКтНУ В (&СтарыеСчетаНУ)))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";*/
			/*ПроцедурыОбновленияИнформационнойБазы.ПереписатьНаборыЗаписейРегистраРасчетаПоРегистраторам(РегистрыРасчета.БУОсновныеНачисления, Ложь, Запрос, ТекстСообщения);*/
			/*ТекстСообщения = "Обработка оценочных обязательств часть 8 из " + ВсегоЧастей;*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА БУДополнительныеНачисления.СчетДт В (&СтарыеСчета)
	|			ТОГДА &Счет96
	|		ИНАЧЕ БУДополнительныеНачисления.СчетДт
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА БУДополнительныеНачисления.СчетКт В (&СтарыеСчета)
	|			ТОГДА &Счет96
	|		ИНАЧЕ БУДополнительныеНачисления.СчетКт
	|	КОНЕЦ КАК СчетКт,
	|	БУДополнительныеНачисления.ПериодРегистрации,
	|	БУДополнительныеНачисления.Регистратор КАК Регистратор,
	|	БУДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
	|	БУДополнительныеНачисления.ВидРасчета,
	|	БУДополнительныеНачисления.Активность,
	|	БУДополнительныеНачисления.Сторно,
	|	БУДополнительныеНачисления.Сотрудник,
	|	БУДополнительныеНачисления.ФизЛицо,
	|	БУДополнительныеНачисления.Организация,
	|	БУДополнительныеНачисления.Результат,
	|	БУДополнительныеНачисления.СуммаНУ,
	|	БУДополнительныеНачисления.СуммаПР,
	|	БУДополнительныеНачисления.СуммаВР,
	|	БУДополнительныеНачисления.СубконтоДт1,
	|	БУДополнительныеНачисления.СубконтоДт2,
	|	БУДополнительныеНачисления.СубконтоДт3,
	|	БУДополнительныеНачисления.СубконтоКт1,
	|	БУДополнительныеНачисления.СубконтоКт2,
	|	БУДополнительныеНачисления.СубконтоКт3,
	|	ВЫБОР
	|		КОГДА БУДополнительныеНачисления.СчетДтНУ В (&СтарыеСчетаНУ)
	|			ТОГДА &Счет96НУ
	|		ИНАЧЕ БУДополнительныеНачисления.СчетДтНУ
	|	КОНЕЦ КАК СчетДтНУ,
	|	БУДополнительныеНачисления.ОбособленноеПодразделение,
	|	БУДополнительныеНачисления.СубконтоДтНУ1,
	|	БУДополнительныеНачисления.СубконтоДтНУ2,
	|	БУДополнительныеНачисления.СубконтоДтНУ3,
	|	ВЫБОР
	|		КОГДА БУДополнительныеНачисления.СчетКтНУ В (&СтарыеСчетаНУ)
	|			ТОГДА &Счет96НУ
	|		ИНАЧЕ БУДополнительныеНачисления.СчетКтНУ
	|	КОНЕЦ КАК СчетКтНУ,
	|	БУДополнительныеНачисления.СубконтоКтНУ1,
	|	БУДополнительныеНачисления.СубконтоКтНУ2,
	|	БУДополнительныеНачисления.СубконтоКтНУ3,
	|	БУДополнительныеНачисления.ОтражениеВУСН,
	|	БУДополнительныеНачисления.ДокументОснование,
	|	БУДополнительныеНачисления.ПодразделениеДт,
	|	БУДополнительныеНачисления.ПодразделениеКт,
	|	БУДополнительныеНачисления.ВидНачисленийОплатыТрудаПоСтатье255НК,
	|	БУДополнительныеНачисления.СпособРаспределенияЗатрат
	|ИЗ
	|	РегистрРасчета.БУДополнительныеНачисления КАК БУДополнительныеНачисления
	|ГДЕ
	|	БУДополнительныеНачисления.Регистратор В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ОтражениеВУчете.Регистратор
	|			ИЗ
	|				РегистрРасчета.БУДополнительныеНачисления КАК ОтражениеВУчете
	|			ГДЕ
	|				(ОтражениеВУчете.СчетДт В (&СтарыеСчета)
	|					ИЛИ ОтражениеВУчете.СчетКт В (&СтарыеСчета)
	|					ИЛИ ОтражениеВУчете.СчетДтНУ В (&СтарыеСчетаНУ)
	|					ИЛИ ОтражениеВУчете.СчетКтНУ В (&СтарыеСчетаНУ)))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";*/
			/*ПроцедурыОбновленияИнформационнойБазы.ПереписатьНаборыЗаписейРегистраРасчетаПоРегистраторам(РегистрыРасчета.БУДополнительныеНачисления, Ложь, Запрос, ТекстСообщения);*/
			/*#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние("");*/
			/*#КонецЕсли;*/
		}

		public void ОбновитьСписокСсылокССайтаИТС(/**/)
		{
			/*РегистрыСведений.СсылкиНаСайтеИТС.ПроизвестиЗаполнениеРегистраСведенийСсылкиНаСайтеИТС();*/
			/*#Если ТолстыйКлиентОбычноеПриложение Тогда
		
		Оповестить("ОбновленСписокСсылокНаСайтеИТС");*/
			/*#КонецЕсли;*/
		}
		////////////////////////////////////////////////////////////////////////////////
		// 2.5.42

		public void ЗаполнитьСведенияОЗаймах(/**/)
		{
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст =
	"ВЫБРАТЬ
	|	ДоговорыЗаймаСРаботниками.Регистратор КАК Регистратор,
	|	ДоговорЗаймаСРаботником.Ссылка КАК ДоговорЗайма,
	|	ДоговорЗаймаСРаботником.ФизЛицо,
	|	ДоговорЗаймаСРаботником.Организация,
	|	ДоговорЗаймаСРаботником.НачалоПогашения,
	|	ДоговорЗаймаСРаботником.ПроцентЗаПользованиеЗаймом,
	|	ДоговорЗаймаСРаботником.СрокПогашения,
	|	ДоговорЗаймаСРаботником.ПорядокПогашенияЗайма,
	|	ДоговорЗаймаСРаботником.НачислятьМатериальнуюВыгоду,
	|	ДоговорЗаймаСРаботником.СтавкаНалогообложенияРезидента,
	|	ДоговорЗаймаСРаботником.СчетУчетаПроцентовПоЗайму,
	|	ДоговорЗаймаСРаботником.Субконто1,
	|	ДоговорЗаймаСРаботником.Субконто2,
	|	ДоговорЗаймаСРаботником.Субконто3,
	|	ДоговорЗаймаСРаботником.СуммаЗайма,
	|	ДоговорЗаймаСРаботником.КурсДокумента,
	|	ДоговорЗаймаСРаботником.КратностьДокумента,
	|	ДоговорЗаймаСРаботником.ВалютаДокумента,
	|	ДоговорЗаймаСРаботником.Номер КАК НомерДокумента,
	|	ДоговорЗаймаСРаботником.Дата КАК ДатаДокумента,
	|	ДоговорЗаймаСРаботником.ОтражатьВБухгалтерскомУчете,
	|	ДоговорЗаймаСРаботником.ОтражатьВУправленческомУчете
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ПогашениеЗаймовРаботниками.ДоговорЗайма КАК Регистратор
	|	ИЗ
	|		РегистрНакопления.ПогашениеЗаймовРаботниками КАК ПогашениеЗаймовРаботниками
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ПогашениеЗаймовРаботникамиОрганизаций.ДоговорЗайма
	|	ИЗ
	|		РегистрНакопления.ПогашениеЗаймовРаботникамиОрганизаций КАК ПогашениеЗаймовРаботникамиОрганизаций) КАК ДоговорыЗаймаСРаботниками
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДоговорЗаймаСРаботником КАК ДоговорЗаймаСРаботником
	|		ПО ДоговорыЗаймаСРаботниками.Регистратор = ДоговорЗаймаСРаботником.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОЗаймах КАК СведенияОЗаймах
	|		ПО ДоговорыЗаймаСРаботниками.Регистратор = СведенияОЗаймах.ДоговорЗайма
	|ГДЕ
	|	СведенияОЗаймах.Регистратор ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор";*/
			/*ПроцедурыОбновленияИнформационнойБазы.ПереписатьНаборыЗаписейПоРегистраторам(РегистрыСведений.СведенияОЗаймах, Запрос, "Обновление записей сведений о займах работников");*/
		}
		// ЗаполнитьСведенияОЗаймах
		////////////////////////////////////////////////////////////////////////////////
		// 2.5.43

		public void УстановитьМаксимумПособияПоУходуЗаРебенкомДоПолутораЛет2011(/*НаборЗаписей*/)
		{
			/*//
*/
		}
		////////////////////////////////////////////////////////////////////////////////
		// 2.5.52

		public void ЗаполнитьРеквизитЕжегодныйОтпускДляРезервов(/**/)
		{
			/*Запрос = Новый Запрос;*/
			/*МассивПоСреднемуЗаработкуОтпуска = Новый Массив;*/
			/*МассивПоСреднемуЗаработкуОтпуска.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням);*/
			/*МассивПоСреднемуЗаработкуОтпуска.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке);*/
			/*Запрос.УстановитьПараметр("парамПоСреднемуЗаработкуОтпуска", МассивПоСреднемуЗаработкуОтпуска);*/
			/*ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОсновныеНачисления.Ссылка
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисления
	|ГДЕ
	|	ОсновныеНачисления.СпособРасчета В (&парамПоСреднемуЗаработкуОтпуска)
	|			И ОсновныеНачисления.ОбозначениеВТабелеУчетаРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ОтпускНаОбучение)
	|			И ОсновныеНачисления.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
	|			И (НЕ ОсновныеНачисления.ЕжегодныйОтпускДляРезервов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДополнительныеНачисления.Ссылка
	|ИЗ
	|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК ДополнительныеНачисления
	|ГДЕ
	|	ДополнительныеНачисления.СпособРасчета В (&парамПоСреднемуЗаработкуОтпуска)
	|			И ДополнительныеНачисления.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
	|			И (НЕ ДополнительныеНачисления.ЕжегодныйОтпускДляРезервов)";*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Выборка = Запрос.Выполнить().Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				/*ВРОбъект = Выборка.Ссылка.ПолучитьОбъект();*/
				/*ВРОбъект.ЕжегодныйОтпускДляРезервов = Истина;*/
				/*ВРОбъект.ОбменДанными.Загрузка = Истина;*/
				/*ВРОбъект.Записать();*/
			}
			/*;;*/
		}

		public object ДополнительныеПоляОсновногоРегистраРасчетов(/**/)
		{
			return null;
		}

		public void ВосстановитьВариантОбработкиЗаписиПриОтраженииВРеглУчете(/**/)
		{
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("ДатаНачалаРеформыСоцСтрахования",ПроведениеРасчетов.ДатаНачалаРеформыСоцСтрахования());*/
			/*Запрос.Текст =
	"ВЫБРАТЬ
	|	ОсновныеНачисленияОрганизаций.Ссылка
	|ПОМЕСТИТЬ ВТВидыРасчетов
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
	|ГДЕ
	|	(ОсновныеНачисленияОрганизаций.ВидПособияСоциальногоСтрахования <> ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
	|			ИЛИ ОсновныеНачисленияОрганизаций.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.СдельныйЗаработок))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|ГДЕ
	|	ОсновныеНачисленияРаботниковОрганизаций.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ПустаяСсылка)
	|	И ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета В
	|			(ВЫБРАТЬ
	|				ВидыРасчетов.Ссылка
	|			ИЗ
	|				ВТВидыРасчетов КАК ВидыРасчетов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Регистраторы.Регистратор КАК Регистратор,
	|	ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки КАК НомерСтроки,
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации,
	|	ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета,
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия,
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало,
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец,
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало,
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодКонец,
	|	ОсновныеНачисленияРаботниковОрганизаций.Активность,
	|	ОсновныеНачисленияРаботниковОрганизаций.Сторно,
	|	ОсновныеНачисленияРаботниковОрганизаций.Сотрудник,
	|	ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо,
	|	ОсновныеНачисленияРаботниковОрганизаций.Организация,
	|	ОсновныеНачисленияРаботниковОрганизаций.Результат,
	|	ОсновныеНачисленияРаботниковОрганизаций.ДополнительныйРезультат,
	|	ОсновныеНачисленияРаботниковОрганизаций.ОтработаноДней,
	|	ОсновныеНачисленияРаботниковОрганизаций.ОтработаноЧасов,
	|	ОсновныеНачисленияРаботниковОрганизаций.ОтработаноДнейПоПятидневке,
	|	ОсновныеНачисленияРаботниковОрганизаций.НормаДней,
	|	ОсновныеНачисленияРаботниковОрганизаций.НормаЧасов,
	|	ОсновныеНачисленияРаботниковОрганизаций.НормаДнейПоПятидневке,
	|	ОсновныеНачисленияРаботниковОрганизаций.ОплаченоДнейЧасов,
	|	ОсновныеНачисленияРаботниковОрганизаций.ОтработаноЧасовПоПятидневке,
	|	ОсновныеНачисленияРаботниковОрганизаций.НормаЧасовПоПятидневке,
	|	ОсновныеНачисленияРаботниковОрганизаций.ГрафикРаботы,
	|	ОсновныеНачисленияРаботниковОрганизаций.ГрафикРаботыНорма,
	|	ОсновныеНачисленияРаботниковОрганизаций.ВидУчетаВремени,
	|	ОсновныеНачисленияРаботниковОрганизаций.Показатель1,
	|	ОсновныеНачисленияРаботниковОрганизаций.Показатель2,
	|	ОсновныеНачисленияРаботниковОрганизаций.Показатель3,
	|	ОсновныеНачисленияРаботниковОрганизаций.Показатель4,
	|	ОсновныеНачисленияРаботниковОрганизаций.Показатель5,
	|	ОсновныеНачисленияРаботниковОрганизаций.Показатель6,
	|	ОсновныеНачисленияРаботниковОрганизаций.ДополнительныеДанные,
	|	ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации,
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодРасчетаСреднегоЗаработкаНачало,
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодРасчетаСреднегоЗаработкаОкончание,
	|	ОсновныеНачисленияРаботниковОрганизаций.ДатаНачалаСобытия,
	|	ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение,
	|	ОсновныеНачисленияРаботниковОрганизаций.Авторасчет,
	|	ВЫБОР
	|		КОГДА Регистраторы.Регистратор ССЫЛКА Документ.НачислениеПоБольничномуЛисту
	|			ТОГДА ВЫБОР
	|					КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = ВЫРАЗИТЬ(Регистраторы.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ВидРасчетаЗаСчетРаботодателя
	|						ТОГДА ВЫБОР
	|								КОГДА ОсновныеНачисленияРаботниковОрганизаций.Сторно
	|										И (НЕ ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни)
	|										И ВЫРАЗИТЬ(Регистраторы.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни
	|										И ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент КАК Документ.НачислениеПоБольничномуЛисту).ПерерассчитываемыйДокумент = ЗНАЧЕНИЕ(Документ.НачислениеПоБольничномуЛисту.ПустаяСсылка)
	|									ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйЗаСчетРаботодателяНовыйСтраховойСлучай)
	|								КОГДА (НЕ ВЫРАЗИТЬ(Регистраторы.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни)
	|										И ВЫРАЗИТЬ(Регистраторы.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ПерерассчитываемыйДокумент = ЗНАЧЕНИЕ(Документ.НачислениеПоБольничномуЛисту.ПустаяСсылка)
	|									ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйЗаСчетРаботодателяНовыйСтраховойСлучай)
	|								ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйЗаСчетРаботодателя)
	|							КОНЕЦ
	|					КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ПустаяСсылка)
	|					КОГДА ВЫРАЗИТЬ(Регистраторы.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ПериодРегистрации < &ДатаНачалаРеформыСоцСтрахования
	|							И ВЫРАЗИТЬ(Регистраторы.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ПособиеОтражаетсяВРеглУчетеТекущимДокументом
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
	|					КОГДА ВЫРАЗИТЬ(Регистраторы.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоБеременностиИРодам)
	|						ТОГДА ВЫБОР
	|								КОГДА ОсновныеНачисленияРаботниковОрганизаций.Сторно
	|										И (НЕ ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни)
	|										И ВЫРАЗИТЬ(Регистраторы.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни
	|										И ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент КАК Документ.НачислениеПоБольничномуЛисту).ПерерассчитываемыйДокумент = ЗНАЧЕНИЕ(Документ.НачислениеПоБольничномуЛисту.ПустаяСсылка)
	|									ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай)
	|								КОГДА (НЕ ВЫРАЗИТЬ(Регистраторы.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни)
	|										И ВЫРАЗИТЬ(Регистраторы.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ПерерассчитываемыйДокумент = ЗНАЧЕНИЕ(Документ.НачислениеПоБольничномуЛисту.ПустаяСсылка)
	|									ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай)
	|								ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком)
	|							КОНЕЦ
	|					КОГДА ВЫРАЗИТЬ(Регистраторы.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ТравмаНаПроизводстве)
	|						ТОГДА ВЫБОР
	|								КОГДА ОсновныеНачисленияРаботниковОрганизаций.Сторно
	|										И (НЕ ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни)
	|										И ВЫРАЗИТЬ(Регистраторы.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни
	|										И ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент КАК Документ.НачислениеПоБольничномуЛисту).ПерерассчитываемыйДокумент = ЗНАЧЕНИЕ(Документ.НачислениеПоБольничномуЛисту.ПустаяСсылка)
	|									ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай)
	|								КОГДА (НЕ ВЫРАЗИТЬ(Регистраторы.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни)
	|										И ВЫРАЗИТЬ(Регистраторы.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ПерерассчитываемыйДокумент = ЗНАЧЕНИЕ(Документ.НачислениеПоБольничномуЛисту.ПустаяСсылка)
	|									ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай)
	|								ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве)
	|							КОНЕЦ
	|					КОГДА ВЫРАЗИТЬ(Регистраторы.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ПричинаНетрудоспособности В (ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ТравмаВБыту), ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ОбщееЗаболевание))
	|						ТОГДА ВЫБОР
	|								КОГДА ОсновныеНачисленияРаботниковОрганизаций.Сторно
	|										И (НЕ ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни)
	|										И ВЫРАЗИТЬ(Регистраторы.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни
	|										И ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент КАК Документ.НачислениеПоБольничномуЛисту).ПерерассчитываемыйДокумент = ЗНАЧЕНИЕ(Документ.НачислениеПоБольничномуЛисту.ПустаяСсылка)
	|									ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай)
	|								КОГДА (НЕ ВЫРАЗИТЬ(Регистраторы.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни)
	|										И ВЫРАЗИТЬ(Регистраторы.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ПерерассчитываемыйДокумент = ЗНАЧЕНИЕ(Документ.НачислениеПоБольничномуЛисту.ПустаяСсылка)
	|									ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай)
	|								ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание)
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ОсновныеНачисленияРаботниковОрганизаций.Сторно
	|									И (НЕ ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни)
	|									И ВЫРАЗИТЬ(Регистраторы.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни
	|									И ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент КАК Документ.НачислениеПоБольничномуЛисту).ПерерассчитываемыйДокумент = ЗНАЧЕНИЕ(Документ.НачислениеПоБольничномуЛисту.ПустаяСсылка)
	|								ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай)
	|							КОГДА (НЕ ВЫРАЗИТЬ(Регистраторы.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ЯвляетсяПродолжениемБолезни)
	|									И ВЫРАЗИТЬ(Регистраторы.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ПерерассчитываемыйДокумент = ЗНАЧЕНИЕ(Документ.НачислениеПоБольничномуЛисту.ПустаяСсылка)
	|								ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай)
	|							ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий)
	|						КОНЕЦ
	|				КОНЕЦ
	|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.СдельныйЗаработок)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
	|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком)
	|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком)
	|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком)
	|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве)
	|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве)
	|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве)
	|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ПустаяСсылка)
	|	КОНЕЦ КАК ВариантОбработкиЗаписиПриОтраженииВРеглУчете,
	|	ОсновныеНачисленияРаботниковОрганизаций.ВариантАлгоритмаРасчета,
	|	ОсновныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент,
	|	ОсновныеНачисленияРаботниковОрганизаций.РасчетнаяБазаЗаЕдиницуНормыВремени,
	|	ОсновныеНачисленияРаботниковОрганизаций.ГодУчетаПремийПоИтогамГода,
	|	ОсновныеНачисленияРаботниковОрганизаций.ДатаНачалаБазовогоПериода
	|ИЗ
	|	ВТРегистраторы КАК Регистраторы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|		ПО Регистраторы.Регистратор = ОсновныеНачисленияРаботниковОрганизаций.Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";*/
			/*ПроцедурыОбновленияИнформационнойБазы.ПереписатьНаборыЗаписейРегистраРасчетаПоРегистраторам(РегистрыРасчета.ОсновныеНачисленияРаботниковОрганизаций, Ложь, Запрос, "Обработка записей расчета для отражения в учете");*/
		}
	}
}

