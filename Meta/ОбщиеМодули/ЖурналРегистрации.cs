using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace V82.ќбщиећодули
{
	public partial class ∆урнал–егистрации
	{
		////////////////////////////////////////////////////////////////////////////////
		// Ё —ѕќ–“Ќџ≈ ѕ–ќ÷≈ƒ”–џ » ‘”Ќ ÷»»
		// ѕроцедура выполн€ет чтение событий журнала регистрации в соответствии с установленным отбором
		//
		// ѕараметры:
		//	∆урнал	- ƒанные‘ормы оллекци€, содержаща€ записи журнала регистрации
		//	ќтбор∆урналаЌа лиенте - —труктура, настройки отбора дл€ чтени€ записей журнала регистрации
		//	 оличество—обытий - „исло, ограничивает число считываемых событий журнала
		//	”никальный»дентификатор - ”никальный»дентификатор, уникальный идентификатор формы
		//	ћенеджер¬ладельца - менеджер объекта, в форме которого отображаетс€ журнал регистрации,
		//						необходим дл€ обратного вызова функций оформлени€
		//	ƒобавл€тьƒополнительные олонки - Ѕулево, определ€ет необходимость обратного вызова дл€ добавлени€ дополнительных колонок
		//

		public void ѕрочитать—обыти€∆урнала–егистрации(/*∆урнал, ќтбор∆урналаЌа лиенте,  оличество—обытий, ”никальный»дентификатор, ћенеджер¬ладельца, ƒобавл€тьƒополнительные олонки = Ћожь*/)
		{
			/*// ”даление ранее подготовленных временных данных
*/
			/*ќписани€јдресов = ∆урнал.¬ыгрузить(, "јдресƒанных");*/
			/*ќписани€јдресов.—вернуть("јдресƒанных");*/
			/*// ѕодготовка ќтбора
*/
			/*ќтбор = Ќовый —труктура;*/
			/*ѕреобразованиеќтбора(ќтбор);*/
			/*// ¬ыгрузка отбираемых событий
*/
			/*—обыти€∆урнала = Ќовый “аблица«начений;*/
			/*¬ыгрузить∆урнал–егистрации(—обыти€∆урнала, ќтбор, , ,  оличество—обытий);*/
			/*—обыти€∆урнала. олонки.ƒобавить("Ќомер–исунка", Ќовый ќписание“ипов("„исло"));*/
			/*—обыти€∆урнала. олонки.ƒобавить("јдресƒанных",  Ќовый ќписание“ипов("—трока"));*/
			/*ѕравила”становки–исунка = Ќеопределено;*/
			if(true/*ƒобавл€тьƒополнительные олонки*/)
			{
				/*// ƒобавление дополнительных колонок
*/
				/*ћенеджер¬ладельца.ƒобавитьƒополнительные олонки—обыти€(—обыти€∆урнала);*/
			}
			/*«начение¬ƒанные‘ормы(—обыти€∆урнала, ∆урнал);*/
		}
		// ѕрочитать—обыти€∆урнала–егистрации
		// ѕроцедура создает пользовательское представление отбора журнала регистрации
		//
		// ѕараметры:
		//	ѕредставлениеќтбора - —трока, строка, содержаща€ пользовательское представление отбора
		//	ќтбор∆урнала–егистрации - —труктура, значени€ отбора журнала регистрации
		//	ќтбор∆урнала–егистрацииѕо”молчанию - —труктура, значени€ отбора журнала регистрации по умолчанию
		//										(не включаютс€ в пользовательское представлени€)
		//

		public void —формироватьѕредставлениеќтбора(/*ѕредставлениеќтбора, ќтбор∆урнала–егистрации, ќтбор∆урнала–егистрацииѕо”молчанию = Ќеопределено*/)
		{
			/*ѕредставлениеќтбора = "";*/
			/*// »нтервал
*/
			/*ƒатаЌачала»нтервала    = Ќеопределено;*/
			/*ƒатаќкончани€»нтервала = Ќеопределено;*/
			if(true/*Ќе ќтбор∆урнала–егистрации.—войство("ƒатаЌачала", ƒатаЌачала»нтервала) »ли
		 ƒатаЌачала»нтервала = Ќеопределено*/)
			{
				/*ƒатаЌачала»нтервала    = '00010101000000';*/
			}
			if(true/*Ќе ќтбор∆урнала–егистрации.—войство("ƒатаќкончани€", ƒатаќкончани€»нтервала) »ли
		 ƒатаќкончани€»нтервала = Ќеопределено*/)
			{
				/*ƒатаќкончани€»нтервала = '00010101000000';*/
			}
			if(true/*Ќе (ƒатаЌачала»нтервала = '00010101000000' » ƒатаќкончани€»нтервала = '00010101000000')*/)
			{
				/*ѕредставлениеќтбора = ѕредставлениеѕериода(ƒатаЌачала»нтервала, ƒатаќкончани€»нтервала);*/
			}
			/*ƒобавитьќграничение¬ѕредставлениеќтбора(ќтбор∆урнала–егистрации, ѕредставлениеќтбора, "ѕользователь");*/
			/*ƒобавитьќграничение¬ѕредставлениеќтбора(ќтбор∆урнала–егистрации, ѕредставлениеќтбора, "—обытие", ќтбор∆урнала–егистрацииѕо”молчанию);*/
			/*ƒобавитьќграничение¬ѕредставлениеќтбора(ќтбор∆урнала–егистрации, ѕредставлениеќтбора, "»м€ѕриложени€", ќтбор∆урнала–егистрацииѕо”молчанию);*/
			/*// ќстальные ограничени€ указываем просто по представлением, без указани€ значений ограничени€
*/
			if(true/*ѕуста€—трока(ѕредставлениеќтбора)*/)
			{
				/*ѕредставлениеќтбора = Ќ—тр("ru = 'Ќе установлен'");*/
			}
		}
		// —формироватьѕредставлениеќтбора
		////////////////////////////////////////////////////////////////////////////////
		// ¬—ѕќћќ√ј“≈Ћ№Ќџ≈ ѕ–ќ÷≈ƒ”–џ » ‘”Ќ ÷»»

		public void ѕреобразованиеќтбора(/*ќтбор*/)
		{
		}

		public void ѕреобразованиеЁлементаќтбора(/*ќтбор, Ёлементќтбора*/)
		{
			/*// Ёта процедура вызываетс€, если элемент отбора €вл€етс€ списком значений,
*/
			/*// в отборе же должен быть массив значений. ѕреобразуем список в массив.
*/
			/*Ќовое«начение = Ќовый ћассив;*/
			/*ќтбор.¬ставить(Ёлементќтбора. люч, Ќовое«начение);*/
		}

		public void ƒобавитьќграничение¬ѕредставлениеќтбора(/*ќтбор∆урнала–егистрации, ѕредставлениеќтбора, »м€ќграничени€, ќтбор∆урнала–егистрацииѕо”молчанию = Ќеопределено*/)
		{
			/*—писокќграничений = "";*/
			/*ќграничение = "";*/
			if(true/*ќтбор∆урнала–егистрации.—войство(»м€ќграничени€, —писокќграничений)*/)
			{
				/*// Ќе формируем представление отбора, если его значение соответствует значению отбора по умолчанию
*/
				if(true/*ќтбор∆урнала–егистрацииѕо”молчанию <> Ќеопределено*/)
				{
					/*—писокќграниченийѕо”молчанию = "";*/
					if(true/*ќтбор∆урнала–егистрацииѕо”молчанию.—войство(»м€ќграничени€, —писокќграниченийѕо”молчанию) » ќбщегоЌазначени€ лиент—ервер.—писки«начений»дентичны(—писокќграниченийѕо”молчанию, —писокќграничений)*/)
					{
					}
				}
				if(true/*Ќе ѕуста€—трока(ѕредставлениеќтбора)*/)
				{
					/*ѕредставлениеќтбора = ѕредставлениеќтбора + "; ";*/
				}
				/*ѕредставлениеќтбора = ѕредставлениеќтбора + ќграничение;*/
			}
		}
	}
}

