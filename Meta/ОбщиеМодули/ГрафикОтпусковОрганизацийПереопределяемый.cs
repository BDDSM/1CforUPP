using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace V82.ОбщиеМодули
{
	public partial class ГрафикОтпусковОрганизацийПереопределяемый
	{
		////////////////////////////////////////////////////////////////////////////////
		// Процедуры, функции объекта
		// Заполняет табличную часть документа отпусками на основании утвержденного документа
		// планирования отпусков управленческого учета
		//
		// Параметры
		//  Объект - ДокументОбъект.ГрафикОтпусковОрганизаций, заполняемый документ
		//	Основание - ДокументСсылка.ПланированиеОтпуска, документ-основание
		//

		public void ОбработкаЗаполнения(/*Объект, Основание*/)
		{
			//ТипОснования = ТипЗнч(Основание);
			if(true/*ТипОснования = Тип("ДокументСсылка.ПланированиеОтпуска")*/)
			{
				/*// Заполним реквизиты из стандартного набора.
*/
				//ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(Объект, Основание);
				if(true/*Основание.Проведен
			И (Основание.СостояниеУтвержденияДокумента = Перечисления.СостоянияУтвержденияДокумента.УтвержденПолностьюПроведен
			ИЛИ Основание.СостояниеУтвержденияДокумента = Перечисления.СостоянияУтвержденияДокумента.УтвержденЧастичноПроведен)*/)
				{
					if(true/*НЕ ЗначениеЗаполнено(Объект.Организация)*/)
					{
						//Объект.Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
					}
					if(true/*НЕ ЗначениеЗаполнено(Объект.Организация)*/)
					{
					}
					//Запрос = Новый Запрос;
					//Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
					//Запрос.УстановитьПараметр("ГоловнаяОрганизация",	ОбщегоНазначения.ГоловнаяОрганизация(Объект.Организация));
					//Запрос.УстановитьПараметр("Организация",			Объект.Организация);
					//Запрос.УстановитьПараметр("ДатаАктуальности",		Объект.Дата);
					//Запрос.УстановитьПараметр("Регистратор",			Основание);
					//Запрос.УстановитьПараметр("Ссылка",					Объект.Ссылка);
					/*Запрос.Текст =
			"ВЫБРАТЬ
			|	СобытийныйПланЗанятостиФизлиц.Период,
			|	СобытийныйПланЗанятостиФизлиц.ПериодЗавершения,
			|	СобытийныйПланЗанятостиФизлиц.ФизЛицо КАК ФизЛицо
			|ПОМЕСТИТЬ ВТФизЛица
			|ИЗ
			|	РегистрСведений.СобытийныйПланЗанятостиФизлиц КАК СобытийныйПланЗанятостиФизлиц
			|ГДЕ
			|	СобытийныйПланЗанятостиФизлиц.Регистратор = &Регистратор
			|	И СобытийныйПланЗанятостиФизлиц.Состояние = ЗНАЧЕНИЕ(Перечисление.ТипыПериодическихЗадачРаботника.ОтпускЕжегодный)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ФизЛицо";*/
					//Результат = Запрос.Выполнить().Выгрузить();
					if(true/*Результат[0].Количество = 0*/)
					{
						/*// нет данных
*/
					}
					//Запрос.Текст = ГрафикОтпусковОрганизацийДополнительный.ПолучитьТекстЗапросаАвтозаполнения();
					//Объект.РаботникиОрганизации.Загрузить(Запрос.Выполнить().Выгрузить());
				}
			}
		}
		// ОбработкаЗаполнения()
		////////////////////////////////////////////////////////////////////////////////
		// Процедуры, функции для работы формы документа

		public void ДополнитьПодменюЗаполненияТЧ(/*ПодменюЗаполнить, Действие*/)
		{
			//Кнопки = ПодменюЗаполнить.Кнопки;
			//Кнопки.Вставить(0,"РазделительУпр",ТипКнопкиКоманднойПанели.Разделитель);
			//Кнопка = Кнопки.Вставить(0,"ЗаполнитьПоУпрУчету",ТипКнопкиКоманднойПанели.Действие,ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("По управленческому графику отпусков"),Действие);
			//Кнопка.Подсказка = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Заполнить утвержденными отпусками управленческого учета");
			//Кнопка.Пояснение = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Заполнить утвержденными отпусками управленческого учета");
		}

		public void ОбработатьНажатиеНаКнопкуЗаполнения(/*Кнопка, Объект, НастройкаПериода*/)
		{
			if(true/*Кнопка.Имя = "ЗаполнитьПоУпрУчету"*/)
			{
				if(true/*Объект.Организация.Пустая()*/)
				{
					//Предупреждение("Укажите организацию!");
				}
				if(true/*Объект.РаботникиОрганизации.Количество() > 0*/)
				{
					//ТекстВопроса = "Перед заполнением табличная часть будет очищена. Заполнить?";
					//Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
					if(true/*Ответ <> КодВозвратаДиалога.Да*/)
					{
					}
				}
				if(true/*НастройкаПериода.Редактировать()*/)
				{
					//ДатаНачала		= НастройкаПериода.ПолучитьДатуНачала();
					//ДатаОкончания	= НастройкаПериода.ПолучитьДатуОкончания();
					if(true/*НЕ ЗначениеЗаполнено(ДатаНачала) или НЕ ЗначениеЗаполнено(ДатаОкончания)*/)
					{
						//Предупреждение("Укажите границы периода просмотра графика отпусков!");
					}
					//Объект.РаботникиОрганизации.Очистить();
					//ГрафикОтпусковОрганизацийДополнительный.Автозаполнение(Объект, ДатаНачала, ДатаОкончания);
				}
			}
		}
	}
}
