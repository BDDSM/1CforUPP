using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace V82.ОбщиеМодули
{
	public partial class ОбменСведениямиОПособияхСФСС
	{
		////////////////////////////////////////////////////////////////////////////////
		//  Вспомогательные процедуры/функции формирования файла реестра

		public void ДобавитьИнформациюВДерево(/*ДеревоВыгрузки, НаборЗаписей*/)
		{
		}

		public void ДобавитьСтрокуВРеестр(/*Узел, ФорматСтроки, СтруктураДанных*/)
		{
			/*НаборЗаписей = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(ФорматСтроки);*/
			/*НаборЗаписей.BATCH_NO.Значение = СтруктураДанных.НомерСтроки;*/
			/*НаборЗаписей.TYPE_INFO.Значение = Формат(СтруктураДанных.Перерасчет,"БЛ=0; БИ=1");*/
			if(true/*СтруктураДанных.Перерасчет*/)
			{
				/*НаборЗаписей.RECALC_REASON_CODE.Значение = Число(СтруктураДанных.КодПричиныПерерасчета);*/
			}
			/*НаборЗаписей.DOC_TYPE.Значение = СтруктураДанных.ВидВыплаты;*/
			/*НаборЗаписей.DOC_DT1.Значение = СтруктураДанных.ДатаПредставленияПакетаДокументов;*/
			/*НаборЗаписей.SNILS.Значение = СтрЗаменить(СтрЗаменить(СтруктураДанных.СтраховойНомерПФР, "-","")," ","");*/
			/*НаборЗаписей.INN_PERSON.Значение = СтруктураДанных.ИНН;*/
			/*НаборЗаписей.SURNAME.Значение = СтруктураДанных.Фамилия;*/
			/*НаборЗаписей.NAME.Значение = СтруктураДанных.Имя;*/
			/*НаборЗаписей.PATRONIMIC.Значение = СтруктураДанных.Отчество;*/
			/*НаборЗаписей.RESIDENT_FLAG.Значение = СтруктураДанных.СтатусНалогоплательщика;*/
			/*НаборЗаписей.BIRTHDAY.Значение = СтруктураДанных.ДатаРождения;*/
			/*НаборЗаписей.GENDER.Значение = Формат(СтруктураДанных.Пол = Перечисления.ПолФизическихЛиц.Женский,"БЛ=0; БИ=1");*/
			/*НаборЗаписей.ID_TYPE.Значение = СтруктураДанных.ВидУдостоверенияЛичности;*/
			/*НаборЗаписей.ID_NO.Значение = СтруктураДанных.СерияДокумента + " " + СтруктураДанных.НомерДокумента;*/
			/*НаборЗаписей.ID_DT.Значение = СтруктураДанных.ДатаВыдачиДокумента;*/
			/*НаборЗаписей.ID_DEPT.Значение = СтруктураДанных.КемВыданДокумент;*/
			/*НаборЗаписей.OWNER_FLAG.Значение = 1;*/
			/*НаборЗаписей.PAYMENT_TYPE.Значение = Формат(СтруктураДанных.ПеречислятьПособиеПочтовымПереводом,"БЛ=1; БИ=0");*/
			if(true/*СтруктураДанных.ПеречислятьПособиеПочтовымПереводом*/)
			{
				if(true/*Не ПустаяСтрока(СтруктураДанных.АдресПочтовый)*/)
				{
					/*СтруктураАдреса = УправлениеКонтактнойИнформацией.ПолучитьСтруктуруАдресаИзСтроки(СтруктураДанных.АдресПочтовый);*/
					/*НаборЗаписей.ADDR_KLADR.Значение = "#" + СтруктураДанных.АдресПочтовыйКодПоКЛАДР;*/
				}
				if(true/*СтруктураАдреса.Свойство("Индекс")*/)
				{
					/*НаборЗаписей.POST_INDEX.Значение = СтруктураАдреса.Индекс;*/
					/*НаборЗаписей.ADDR_A1.Значение = СтруктураАдреса.Регион;*/
					/*НаборЗаписей.ADDR_A2.Значение = СтруктураАдреса.Район;*/
					/*НаборЗаписей.ADDR_A3.Значение = СтруктураАдреса.Город;*/
					/*НаборЗаписей.ADDR_A4.Значение = СтруктураАдреса.НаселенныйПункт;*/
					/*НаборЗаписей.ADDR_A5.Значение = СтруктураАдреса.Улица;*/
					/*НаборЗаписей.ADDR_HOUSE.Значение = СтруктураАдреса.Дом;*/
					/*НаборЗаписей.ADDR_BUILDING.Значение = СтруктураАдреса.Корпус;*/
					/*НаборЗаписей.ADDR_FLAT.Значение = СтруктураАдреса.Квартира;*/
				}
				/*НаборЗаписей.Удалить("ACCOUNT_BIC");*/
				/*НаборЗаписей.Удалить("ACCOUNT_NAME");*/
				/*НаборЗаписей.Удалить("ACCOUNT");*/
			}
			/*НаборЗаписей.EMPLOYER.Значение = СтруктураДанных.ОрганизацияСокращенно;*/
			/*НаборЗаписей.EMPL_FLAG.Значение = Формат(СтруктураДанных.Совместительство,"БЛ=1; БИ=0");*/
			/*НаборЗаписей.EMPL_OGRN.Значение = СтруктураДанных.ОГРНОрганизации;*/
			/*НаборЗаписей.EMPL_REG_NO.Значение = СтруктураДанных.РегистрационныйНомерФСС;*/
			/*НаборЗаписей.EMPL_PARENT_NO.Значение = СтруктураДанных.КодПодчиненностиФСС;*/
			/*НаборЗаписей.EMPL_KPP.Значение = СтруктураДанных.КППОрганизации;*/
			/*НаборЗаписей.EMPL_INN.Значение = СтруктураДанных.ИННОрганизации;*/
			/*НаборЗаписей.APPROVE1.Значение = СтруктураДанных.ФИОРуководителя;*/
			/*НаборЗаписей.APPROVE1_ROLE.Значение = СтруктураДанных.ДолжностьРуководителя;*/
			if(true/*ЗначениеЗаполнено(СтруктураДанных.ФИОГлБуха)*/)
			{
				/*НаборЗаписей.APPROVE2.Значение = СтруктураДанных.ФИОГлБуха;*/
			}
			if(true/*СтруктураДанных.ПрименятьЛьготыПриНачисленииПособия*/)
			{
				/*НаборЗаписей.LIVE_COND_FLAG.Значение = Формат(СтруктураДанных.ПроживаниеРаботаВЛьготнойЗоне,"БЛ=2; БИ=1");*/
				/*НаборЗаписей.LIVE_COND.Значение = ?(СтруктураДанных.СтатусЛьготнойЗоны = Перечисления.ВидыЗонРадиационногоПоражения.ЗонаОтселения, 2, ?(СтруктураДанных.СтатусЛьготнойЗоны = Перечисления.ВидыЗонРадиационногоПоражения.ЗонаСЛьготнымСоциальноЭкономическимСтатусом,3,1));*/
				if(true/*СтруктураДанных.ВыплатаЗаСчетФедеральногоБюджета = Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль*/)
				{
					/*НаборЗаписей.CODE_NUCLEAR.Значение = 1;*/
				}
			}
			/*НаборЗаписей.CALC_METHOD.Значение = 1;*/
			if(true/*СтруктураДанных.РайонныйКоэффициент >= 1.15 И СтруктураДанных.РайонныйКоэффициент <= 2*/)
			{
				/*НаборЗаписей.KF_REG.Значение = СтруктураДанных.РайонныйКоэффициент * 100;*/
			}
			if(true/*СтруктураДанных.ВидВыплаты = "1"*/)
			{
				/*СтруктураАдреса = УправлениеКонтактнойИнформацией.ПолучитьСтруктуруАдресаИзСтроки(СтруктураДанных.АдресРегистрации);*/
				/*НаборЗаписей.ADDR2_KLADR.Значение = "#" + СтруктураДанных.АдресРегистрацииКодПоКЛАДР;*/
				/*НаборЗаписей.POST_INDEX2.Значение = СтруктураАдреса.Индекс;*/
				/*НаборЗаписей.ADDR2_A1.Значение = СтруктураАдреса.Регион;*/
				/*НаборЗаписей.ADDR2_A2.Значение = СтруктураАдреса.Район;*/
				/*НаборЗаписей.ADDR2_A3.Значение = СтруктураАдреса.Город;*/
				/*НаборЗаписей.ADDR2_A4.Значение = СтруктураАдреса.НаселенныйПункт;*/
				/*НаборЗаписей.ADDR2_A5.Значение = СтруктураАдреса.Улица;*/
				/*НаборЗаписей.ADDR2_HOUSE.Значение = СтруктураАдреса.Дом;*/
				/*НаборЗаписей.ADDR2_BUILDING.Значение = СтруктураАдреса.Корпус;*/
				/*НаборЗаписей.ADDR2_FLAT.Значение = СтруктураАдреса.Квартира;*/
			}
			if(true/*СтруктураДанных.ВидВыплаты = "1" Или СтруктураДанных.ВидВыплаты = "2"*/)
			{
				if(true/*ЗначениеЗаполнено(СтруктураДанных.ПериодПростояС) и ЗначениеЗаполнено(СтруктураДанных.ПериодПростояПо)*/)
				{
					/*СтрокаПериодов = НаборЗаписей.PERIODS.Значение.PERIOD.Значение.Добавить();*/
					/*СтрокаПериодов.START_DATE = СтруктураДанных.ПериодПростояС;*/
					/*СтрокаПериодов.END_DATE = СтруктураДанных.ПериодПростояПо;*/
					/*СтрокаПериодов.IDLE_AVERAGE = СтруктураДанных.СреднийЗаработокНаПериодПростоя;*/
				}
				/*НаборЗаписей.INSUR_YY.Значение = СтруктураДанных.СтажЛет;*/
				/*НаборЗаписей.INSUR_MM.Значение = СтруктураДанных.СтажМесяцев;*/
				/*ЛетСтажа = 0;*/
				/*МесяцевСтажа = 0;*/
				/*ПодсчитатьРазностьСтажейВГодахИМесяцах(СтруктураДанных.СтажЛет, СтруктураДанных.СтажМесяцев, СтруктураДанных.СтажБезНестраховыхПериодовЛет,СтруктураДанных.СтажБезНестраховыхПериодовСтажМесяцев, ЛетСтажа, МесяцевСтажа);*/
				if(true/*ЛетСтажа = 0 И МесяцевСтажа = 0*/)
				{
					/*НаборЗаписей.Удалить("NOT_INSUR_YY");*/
					/*НаборЗаписей.Удалить("NOT_INSUR_MM");*/
				}
				/*НаборЗаписей.LN_CODE.Значение = СтруктураДанных.НомерВходящегоДокумента;*/
				if(true/*ЗначениеЗаполнено(СтруктураДанных.НомерПервичногоБольничного)*/)
				{
					/*НаборЗаписей.PREV_LN_CODE.Значение = СтруктураДанных.НомерПервичногоБольничного;*/
				}
				/*НаборЗаписей.DUPLICATE_FLAG.Значение = Формат(СтруктураДанных.ЯвляетсяДубликатом, "БЛ=0; БИ=1");*/
				/*НаборЗаписей.LN_DATE.Значение = СтруктураДанных.ДатаВыдачиБольничного;*/
				/*НаборЗаписей.LPU_NAME.Значение = СтруктураДанных.НаименованиеЛПУ;*/
				/*НаборЗаписей.LPU_ADDRESS_KLADR.Значение = "#" + СтруктураДанных.АдресЛПУКодПоКЛАДР;*/
				/*СтруктураАдреса = УправлениеКонтактнойИнформацией.ПолучитьСтруктуруАдресаИзСтроки(СтруктураДанных.АдресЛПУ);*/
				if(true/*ЗначениеЗаполнено(СтруктураАдреса) И СтруктураАдреса.Свойство("Индекс")*/)
				{
					/*НаборЗаписей.LPU_ADDR_POST_INDEX.Значение = СтруктураАдреса.Индекс;*/
					/*НаборЗаписей.LPU_ADDR_A1.Значение = СтруктураАдреса.Регион;*/
					/*НаборЗаписей.LPU_ADDR_A2.Значение = СтруктураАдреса.Район;*/
					/*НаборЗаписей.LPU_ADDR_A3.Значение = СтруктураАдреса.Город;*/
					/*НаборЗаписей.LPU_ADDR_A4.Значение = СтруктураАдреса.НаселенныйПункт;*/
					/*НаборЗаписей.LPU_ADDR_A5.Значение = СтруктураАдреса.Улица;*/
					/*НаборЗаписей.LPU_ADDR_HOUSE.Значение = СтруктураАдреса.Дом;*/
					/*НаборЗаписей.LPU_ADDR_BUILDING.Значение = СтруктураАдреса.Корпус;*/
					/*НаборЗаписей.LPU_ADDR_FLAT.Значение = СтруктураАдреса.Квартира;*/
				}
				/*НаборЗаписей.LPU_OGRN.Значение = СтруктураДанных.ОГРН_ЛПУ;*/
				/*НаборЗаписей.REASON1.Значение = СтруктураДанных.КодПричиныНетрудоспособности;*/
				/*НаборЗаписей.REASON2.Значение = СтруктураДанных.ДополнительныйКодПричиныНетрудоспособности;*/
				/*НаборЗаписей.REASON3.Значение = СтруктураДанных.ВторойКодПричиныНетрудоспособности;*/
				if(true/*СтруктураДанных.Совместительство*/)
				{
					/*НаборЗаписей.PARENT_CODE.Значение = СтруктураДанных.НомерЛисткаПоОсновномуМестуРаботы;*/
				}
				/*НаборЗаписей.DATE1.Значение = СтруктураДанных.ДатаИзмененияКодаПричиныНетрудоспособности;*/
				/*НаборЗаписей.DATE2.Значение = СтруктураДанных.ДатаОкончанияПутевки;*/
				/*НаборЗаписей.VOUCHER_NO.Значение = СтруктураДанных.НомерПутевки;*/
				/*НаборЗаписей.VOUCHER_OGRN.Значение = СтруктураДанных.ОГРН_Санатория;*/
				if(true/*ЗначениеЗаполнено(СтруктураДанных.УходЗаРодственникомФИО1)*/)
				{
					/*НаборЗаписей.SERV1_AGE.Значение = СтруктураДанных.УходЗаРодственникомЛет1;*/
					/*НаборЗаписей.SERV1_MM.Значение = СтруктураДанных.УходЗаРодственникомМесяцев1;*/
					/*НаборЗаписей.SERV1_RELATION_CODE.Значение = СтруктураДанных.УходЗаРодственникомРодственнаяСвязь1;*/
					/*НаборЗаписей.SERV1_FIO.Значение = СтруктураДанных.УходЗаРодственникомФИО1;*/
					/*НаборЗаписей.SERV1_DAYS.Значение = СтруктураДанных.УходЗаРодственникомИспользованоДней1;*/
				}
				if(true/*ЗначениеЗаполнено(СтруктураДанных.УходЗаРодственникомФИО2)*/)
				{
					/*НаборЗаписей.SERV2_AGE.Значение = СтруктураДанных.УходЗаРодственникомЛет2;*/
					/*НаборЗаписей.SERV2_MM.Значение = СтруктураДанных.УходЗаРодственникомМесяцев2;*/
					/*НаборЗаписей.SERV2_RELATION_CODE.Значение = СтруктураДанных.УходЗаРодственникомРодственнаяСвязь2;*/
					/*НаборЗаписей.SERV2_FIO.Значение = СтруктураДанных.УходЗаРодственникомФИО2;*/
					/*НаборЗаписей.SERV2_DAYS.Значение = СтруктураДанных.УходЗаРодственникомИспользованоДней2;*/
				}
				if(true/*ЗначениеЗаполнено(СтруктураДанных.ПериодНахожденияВСтационареСРебенкомС) И ЗначениеЗаполнено(СтруктураДанных.ПериодНахожденияВСтационареСРебенкомПо)*/)
				{
					/*НаборЗаписей.HOSPITAL_DT1.Значение = СтруктураДанных.ПериодНахожденияВСтационареСРебенкомС;*/
					/*НаборЗаписей.HOSPITAL_DT2.Значение = СтруктураДанных.ПериодНахожденияВСтационареСРебенкомПо;*/
				}
				if(true/*ЗначениеЗаполнено(СтруктураДанных.КодНарушенияРежима) И ЗначениеЗаполнено(СтруктураДанных.ДатаНарушенияРежима)*/)
				{
					/*НаборЗаписей.HOSPITAL_BREACH_CODE.Значение = СтруктураДанных.КодНарушенияРежима;*/
					/*НаборЗаписей.HOSPITAL_BREACH_DT.Значение = СтруктураДанных.ДатаНарушенияРежима;*/
				}
				/*НаборЗаписей.MSE_DT1.Значение = СтруктураДанных.ДатаНаправленияВБюроМСЭ;*/
				/*НаборЗаписей.MSE_DT2.Значение = СтруктураДанных.ДатаРегистрацииДокументовМСЭ;*/
				/*НаборЗаписей.MSE_DT3.Значение = СтруктураДанных.ДатаОсвидетельствованияМСЭ;*/
				if(true/*СтруктураДанных.УстановленаИзмененаГруппаИнвалидности И ЗначениеЗаполнено(СтруктураДанных.ГруппаИнвалидности)*/)
				{
					/*НаборЗаписей.MSE_INVALID_GROUP.Значение = СтруктураДанных.ГруппаИнвалидности;*/
				}
				if(true/*ЗначениеЗаполнено(СтруктураДанных.ДнейБолезниИнвалида)*/)
				{
					/*НаборЗаписей.MSE_INVALID_DAYS.Значение = СтруктураДанных.ДнейБолезниИнвалида;*/
				}
				if(true/*ЗначениеЗаполнено(СтруктураДанных.НовыйСтатусНетрудопособного)*/)
				{
					/*НаборЗаписей.MSE_RESULT.Значение = СтруктураДанных.НовыйСтатусНетрудопособного;*/
				}
				if(true/*ЗначениеЗаполнено(СтруктураДанных.ОсвобождениеС1) И ЗначениеЗаполнено(СтруктураДанных.ОсвобождениеПо1)*/)
				{
					/*НаборЗаписей.TREAT1_DT1.Значение = СтруктураДанных.ОсвобождениеС1;*/
					/*НаборЗаписей.TREAT1_DT2.Значение = СтруктураДанных.ОсвобождениеПо1;*/
					/*НаборЗаписей.TREAT1_DOCTOR_ROLE.Значение = СтруктураДанных.ДолжностьВрача1;*/
					/*НаборЗаписей.TREAT1_DOCTOR.Значение = СтруктураДанных.ФИОВрача1;*/
					/*НаборЗаписей.TREAT1_DOC_ID.Значение = СтруктураДанных.ИдентификационныйНомерВрача1;*/
					/*НаборЗаписей.TREAT1_DOCTOR2_ROLE.Значение = СтруктураДанных.ДолжностьВрачаПредседателяВК1;*/
					/*НаборЗаписей.TREAT1_CHAIRMAN_VK.Значение = СтруктураДанных.ФИОВрачаПредседателяВК1;*/
					/*НаборЗаписей.TREAT1_DOC2_ID.Значение = СтруктураДанных.ИдентификационныйНомерВрачаПредседателяВК1;*/
				}
				if(true/*ЗначениеЗаполнено(СтруктураДанных.ОсвобождениеС2) И ЗначениеЗаполнено(СтруктураДанных.ОсвобождениеПо2)*/)
				{
					/*НаборЗаписей.TREAT2_DT1.Значение = СтруктураДанных.ОсвобождениеС2;*/
					/*НаборЗаписей.TREAT2_DT2.Значение = СтруктураДанных.ОсвобождениеПо2;*/
					/*НаборЗаписей.TREAT2_DOCTOR_ROLE.Значение = СтруктураДанных.ДолжностьВрача2;*/
					/*НаборЗаписей.TREAT2_DOCTOR.Значение = СтруктураДанных.ФИОВрача2;*/
					/*НаборЗаписей.TREAT2_DOC_ID.Значение = СтруктураДанных.ИдентификационныйНомерВрача2;*/
					/*НаборЗаписей.TREAT2_DOCTOR2_ROLE.Значение = СтруктураДанных.ДолжностьВрачаПредседателяВК2;*/
					/*НаборЗаписей.TREAT2_CHAIRMAN_VK.Значение = СтруктураДанных.ФИОВрачаПредседателяВК2;*/
					/*НаборЗаписей.TREAT2_DOC2_ID.Значение = СтруктураДанных.ИдентификационныйНомерВрачаПредседателяВК2;*/
				}
				if(true/*ЗначениеЗаполнено(СтруктураДанных.ОсвобождениеС3) И ЗначениеЗаполнено(СтруктураДанных.ОсвобождениеПо3)*/)
				{
					/*НаборЗаписей.TREAT3_DT1.Значение = СтруктураДанных.ОсвобождениеС3;*/
					/*НаборЗаписей.TREAT3_DT2.Значение = СтруктураДанных.ОсвобождениеПо3;*/
					/*НаборЗаписей.TREAT3_DOCTOR_ROLE.Значение = СтруктураДанных.ДолжностьВрача3;*/
					/*НаборЗаписей.TREAT3_DOCTOR.Значение = СтруктураДанных.ФИОВрача3;*/
					/*НаборЗаписей.TREAT3_DOC_ID.Значение = СтруктураДанных.ИдентификационныйНомерВрача3;*/
					/*НаборЗаписей.TREAT3_DOCTOR2_ROLE.Значение = СтруктураДанных.ДолжностьВрачаПредседателяВК3;*/
					/*НаборЗаписей.TREAT3_CHAIRMAN_VK.Значение = СтруктураДанных.ФИОВрачаПредседателяВК3;*/
					/*НаборЗаписей.TREAT3_DOC2_ID.Значение = СтруктураДанных.ИдентификационныйНомерВрачаПредседателяВК3;*/
				}
				/*НаборЗаписей.OTHER_STATE_DT.Значение = СтруктураДанных.ДатаНовыйСтатусНетрудопособного;*/
				/*НаборЗаписей.RETURN_DATE_LPU.Значение = СтруктураДанных.ДатаВыходаНаРаботу;*/
				/*НаборЗаписей.NEXT_LN_CODE.Значение = СтруктураДанных.НомерЛисткаПродолжения;*/
				/*НаборЗаписей.CALC_CONDITION1.Значение = СтруктураДанных.УсловияИсчисленияКод1;*/
				/*НаборЗаписей.CALC_CONDITION2.Значение = СтруктураДанных.УсловияИсчисленияКод2;*/
				/*НаборЗаписей.CALC_CONDITION3.Значение = СтруктураДанных.УсловияИсчисленияКод3;*/
				if(true/*СтруктураДанных.УсловияИсчисленияКод1 = "43" Или СтруктураДанных.УсловияИсчисленияКод2 = "43" Или СтруктураДанных.УсловияИсчисленияКод3 = "43"*/)
				{
					if(true/*СтруктураДанных.ВыплатаЗаСчетФедеральногоБюджета = Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль*/)
					{
						/*НаборЗаписей.CODE_NUCLEAR.Значение = 1;*/
					}
				}
				if(true/*ЗначениеЗаполнено(СтруктураДанных.ДатаАктаФормыН1)*/)
				{
					/*НаборЗаписей.FORM1_DT.Значение = СтруктураДанных.ДатаАктаФормыН1;*/
				}
				if(true/*ЗначениеЗаполнено(СтруктураДанных.ДатаНачалаРаботы)*/)
				{
					/*НаборЗаписей.RETURN_DATE_EMPL.Значение = СтруктураДанных.ДатаНачалаРаботы;*/
				}
				if(true/*ЗначениеЗаполнено(СтруктураДанных.СрочныйДоговорС) И ЗначениеЗаполнено(СтруктураДанных.СрочныйДоговорПо)*/)
				{
					/*НаборЗаписей.WORK_CONTRACT_START_DT.Значение = СтруктураДанных.СрочныйДоговорС;*/
					/*НаборЗаписей.WORK_CONTRACT_FINISH_DT.Значение = СтруктураДанных.СрочныйДоговорПо;*/
				}
				/*НаборЗаписей.DT1.Значение = СтруктураДанных.ДатаНачалаОплаты;*/
				/*НаборЗаписей.DT2.Значение = СтруктураДанных.ДатаОкончанияОплаты;*/
				/*ДатаС = СтруктураДанных.ОсвобождениеС1;*/
				/*ДатаПо = Макс(СтруктураДанных.ОсвобождениеПо1,СтруктураДанных.ОсвобождениеПо2,СтруктураДанных.ОсвобождениеПо3);*/
				if(true/*ЗначениеЗаполнено(ДатаС) И ЗначениеЗаполнено(ДатаПо)*/)
				{
					/*НаборЗаписей.CALC_DAYS.Значение = (ДатаПо - ДатаС) / 86400 + 1;*/
				}
				if(true/*ЗначениеЗаполнено(СтруктураДанных.СуммаПособияРаботодателя)*/)
				{
					/*НаборЗаписей.EMPL_PAYMENT.Значение = СтруктураДанных.СуммаПособияРаботодателя;*/
				}
				if(true/*ЗначениеЗаполнено(СтруктураДанных.СуммаПособияФСС)*/)
				{
					/*НаборЗаписей.FSS_PAYMENT.Значение = СтруктураДанных.СуммаПособияФСС;*/
				}
				if(true/*ЗначениеЗаполнено(СтруктураДанных.СуммаПособияВсего)*/)
				{
					/*НаборЗаписей.PAYMENT.Значение = СтруктураДанных.СуммаПособияВсего;*/
				}
			}
			if(true/*СтруктураДанных.ВидВыплаты = "2" Или СтруктураДанных.ВидВыплаты = "3"*/)
			{
				/*НаборЗаписей.PREGN12W_FLAG.Значение = Формат(СтруктураДанных.ПоставленаНаУчетВРанниеСрокиБеременности,"БЛ=0; БИ=1");*/
			}
			if(true/*СтруктураДанных.ВидВыплаты = "1" Или СтруктураДанных.ВидВыплаты = "2" Или СтруктураДанных.ВидВыплаты = "5"*/)
			{
				/*НаборЗаписей.BASE_AVG_DAILY_SAL.Значение = СтруктураДанных.СреднийДневнойЗаработок;*/
				if(true/*СтруктураДанных.ПорядокРасчетаСреднегоЗаработка = 0*/)
				{
					if(true/*ЗначениеЗаполнено(СтруктураДанных.ЗамененныйПервыйГодРасчета) И СтруктураДанных.ПервыйГодРасчета <> СтруктураДанных.ЗамененныйПервыйГодРасчета
				Или ЗначениеЗаполнено(СтруктураДанных.ЗамененныйВторойГодРасчета) И СтруктураДанных.ВторойГодРасчета <> СтруктураДанных.ЗамененныйВторойГодРасчета*/)
					{
						/*НаборЗаписей.YEAR_CHANGE_FLAG.Значение = 1;*/
						/*НаборЗаписей.YEAR1_OLD.Значение = СтруктураДанных.ЗамененныйПервыйГодРасчета;*/
						/*НаборЗаписей.YEAR2_OLD.Значение = СтруктураДанных.ЗамененныйВторойГодРасчета;*/
					}
					/*НаборЗаписей.YEAR1.Значение = СтруктураДанных.ПервыйГодРасчета;*/
					/*НаборЗаписей.YEAR2.Значение = СтруктураДанных.ВторойГодРасчета;*/
					/*НаборЗаписей.BASE_SUM1.Значение = СтруктураДанных.ЗаработокПервыйГодРасчета;*/
					/*НаборЗаписей.BASE_SUM2.Значение = СтруктураДанных.ЗаработокВторойГодРасчета;*/
					/*НаборЗаписей.BASE_AVG_SAL.Значение = СтруктураДанных.ЗаработокПервыйГодРасчета + СтруктураДанных.ЗаработокВторойГодРасчета;*/
					/*НаборЗаписей.Удалить("ROLE_WAGE");*/
					/*НаборЗаписей.Удалить("BASE_CALC_DAYS");*/
					/*НаборЗаписей.Удалить("CALC_MH_PERIOD_START");*/
					/*НаборЗаписей.Удалить("CALC_MH_PERIOD_FINISH");*/
				}
				if(true/*СтруктураДанных.ДоляВремени > 0 И СтруктураДанных.ДоляВремени < 1*/)
				{
					/*НаборЗаписей.KF_SHORT_DAY.Значение = СтруктураДанных.ДоляВремени;*/
				}
			}
			if(true/*СтруктураДанных.ВидВыплаты = "3"*/)
			{
				/*НаборЗаписей.REF_12WEEK_NO.Значение = СтруктураДанных.НомерСправкиБеременной;*/
				/*НаборЗаписей.REF_12WEEK_DT.Значение = СтруктураДанных.ДатаСправкиБеременной;*/
			}
			if(true/*СтруктураДанных.ВидВыплаты = "4" Или СтруктураДанных.ВидВыплаты = "5"*/)
			{
				/*НаборЗаписей.CERT_BR.Значение = СтруктураДанных.ДатаРожденияРебенка;*/
				/*НаборЗаписей.CERT_SURNAME.Значение = СтруктураДанных.ФамилияРебенка;*/
				/*НаборЗаписей.CERT_NAME.Значение = СтруктураДанных.ИмяРебенка;*/
				/*НаборЗаписей.CERT_PATRONIMIC.Значение = СтруктураДанных.ОтчествоРебенка;*/
				if(true/*ЗначениеЗаполнено(СтруктураДанных.УсыновлениеОпека)*/)
				{
					/*НаборЗаписей.WARD_FLAG.Значение = СтруктураДанных.УсыновлениеОпека;*/
					/*НаборЗаписей.WARD_REF_NO.Значение = СтруктураДанных.УсыновлениеОпекаСерияНомер;*/
					/*НаборЗаписей.WARD_REF_DT.Значение = СтруктураДанных.УсыновлениеОпекаДатаВыдачи;*/
				}
			}
			if(true/*СтруктураДанных.ВидВыплаты = "4"*/)
			{
				/*НаборЗаписей.CERT_TYPE.Значение = СтруктураДанных.ДокументОРожденииВид;*/
				if(true/*ЗначениеЗаполнено(СтруктураДанных.НомерСправкиОРождении) И ЗначениеЗаполнено(СтруктураДанных.ДатаСправкиОРождении)*/)
				{
					/*НаборЗаписей.REF_24_NO.Значение = СтруктураДанных.НомерСправкиОРождении;*/
					/*НаборЗаписей.REF_24_DT.Значение = СтруктураДанных.ДатаСправкиОРождении;*/
				}
				if(true/*ЗначениеЗаполнено(СтруктураДанных.НомерДоговораОПередачеНаВоспитание) И ЗначениеЗаполнено(СтруктураДанных.ДатаДоговораОПередачеНаВоспитание)*/)
				{
					/*НаборЗаписей.REF_FAMILY_NO.Значение = СтруктураДанных.НомерДоговораОПередачеНаВоспитание;*/
					/*НаборЗаписей.REF_FAMILY_DT.Значение = СтруктураДанных.ДатаДоговораОПередачеНаВоспитание;*/
				}
				/*НаборЗаписей.REF_NPAY_OTHER_NO.Значение = СтруктураДанных.НомерСправкиОтДругогоРодителя;*/
				/*НаборЗаписей.REF_NPAY_OTHER_DT.Значение = СтруктураДанных.ДатаСправкиОтДругогоРодителя;*/
			}
			if(true/*СтруктураДанных.ВидВыплаты = "5"*/)
			{
				/*НаборЗаписей.CERT_NO.Значение = СтруктураДанных.ДокументОРожденииСерияНомер;*/
				/*НаборЗаписей.CERT_DT.Значение = СтруктураДанных.ДокументОРожденииДатаВыдачи;*/
				/*НаборЗаписей.HOLID_DT_ST.Значение = СтруктураДанных.ДатаНачала;*/
				/*НаборЗаписей.HOLID_DT_FN.Значение = СтруктураДанных.ДатаОкончания;*/
				/*НаборЗаписей.MULTPATR.Значение = Формат(СтруктураДанных.ОдновременныйУходЗаНесколькимиДетьми,"БЛ=0; БИ=1");*/
				if(true/*СтруктураДанных.ОдновременныйУходЗаНесколькимиДетьми*/)
				{
					/*НаборЗаписей.AVG_SAL.Значение = СтруктураДанных.СреднийДневнойЗаработок * 30.4;*/
				}
				/*НаборЗаписей.CHILD_SER.Значение = СтруктураДанных.Очередность;*/
				/*НаборЗаписей.MH_OUT.Значение = Формат(СтруктураДанных.НаличиеРешенияСудаОЛишенииПрав,"БЛ=0; БИ=1");*/
				if(true/*ЗначениеЗаполнено(СтруктураДанных.НомерПриказаНаОтпускПоУходуЗаРебенком) И ЗначениеЗаполнено(СтруктураДанных.ДатаПриказаНаОтпускПоУходуЗаРебенком)*/)
				{
					/*НаборЗаписей.HOLID_ORD_NO.Значение = СтруктураДанных.НомерПриказаНаОтпускПоУходуЗаРебенком;*/
					/*НаборЗаписей.HOLID_ORD_DT.Значение = СтруктураДанных.ДатаПриказаНаОтпускПоУходуЗаРебенком;*/
				}
				if(true/*ЗначениеЗаполнено(СтруктураДанных.НомерПриказаОЗаменеПослеродовогоОтпуска) И ЗначениеЗаполнено(СтруктураДанных.ДатаПриказаОЗаменеПослеродовогоОтпуска)*/)
				{
					/*НаборЗаписей.HOLID_CH_ORD_NO.Значение = СтруктураДанных.НомерПриказаОЗаменеПослеродовогоОтпуска;*/
					/*НаборЗаписей.HOLID_CH_ORD_DT.Значение = СтруктураДанных.ДатаПриказаОЗаменеПослеродовогоОтпуска;*/
				}
				/*НаборЗаписей.OTHER_CHILD_FLAG_DT.Значение = Формат(СтруктураДанных.НаличиеДокументаОСмерти,"БЛ=0; БИ=1");*/
				/*НаборЗаписей.OTHER_CHILD_FLAG_BR.Значение = Формат(СтруктураДанных.НаличиеДокументаОРождении,"БЛ=0; БИ=1");*/
				if(true/*ЗначениеЗаполнено(СтруктураДанных.НомерСправкиОНеполученииПособияОтОтца) И ЗначениеЗаполнено(СтруктураДанных.ДатаСправкиОНеполученииПособияОтОтца)*/)
				{
					/*НаборЗаписей.REF_NPAY_FATHER_NO.Значение = СтруктураДанных.НомерСправкиОНеполученииПособияОтОтца;*/
					/*НаборЗаписей.REF_NPAY_FATHER_DT.Значение = СтруктураДанных.ДатаСправкиОНеполученииПособияОтОтца;*/
				}
				if(true/*ЗначениеЗаполнено(СтруктураДанных.НомерСправкиОНеполученииПособияОтМатери) И ЗначениеЗаполнено(СтруктураДанных.ДатаСправкиОНеполученииПособияОтМатери)*/)
				{
					/*НаборЗаписей.REF_NPAY_MOTHER_NO.Значение = СтруктураДанных.НомерСправкиОНеполученииПособияОтМатери;*/
					/*НаборЗаписей.REF_NPAY_MOTHER_DT.Значение = СтруктураДанных.ДатаСправкиОНеполученииПособияОтМатери;*/
				}
				if(true/*ЗначениеЗаполнено(СтруктураДанных.ДатаСмертиРебенка)*/)
				{
					/*НаборЗаписей.CERT_DT_DATE.Значение = СтруктураДанных.ДатаСмертиРебенка;*/
				}
			}
			/*ДобавитьИнформациюВДерево(ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(Узел, "ROW",""), НаборЗаписей);*/
		}

		public object СтруктураДанныхДляФайлаРеестра(/**/)
		{
			/*СтруктураДанных = Новый Структура;*/
			/*СтруктураДанных.Вставить("НомерСтроки","");*/
			/*СтруктураДанных.Вставить("ВидВыплаты","");*/
			/*СтруктураДанных.Вставить("Перерасчет", Ложь);*/
			/*СтруктураДанных.Вставить("КодПричиныПерерасчета","");*/
			/*СтруктураДанных.Вставить("ДатаПредставленияПакетаДокументов","");*/
			/*СтруктураДанных.Вставить("СтраховойНомерПФР","");*/
			/*СтруктураДанных.Вставить("ИНН","");*/
			/*СтруктураДанных.Вставить("Фамилия","");*/
			/*СтруктураДанных.Вставить("Имя","");*/
			/*СтруктураДанных.Вставить("Отчество","");*/
			/*СтруктураДанных.Вставить("СтатусНалогоплательщика",0);*/
			/*СтруктураДанных.Вставить("ВидУдостоверенияЛичности","");*/
			/*СтруктураДанных.Вставить("СерияДокумента","");*/
			/*СтруктураДанных.Вставить("НомерДокумента","");*/
			/*СтруктураДанных.Вставить("ДатаВыдачиДокумента","");*/
			/*СтруктураДанных.Вставить("КемВыданДокумент","");*/
			/*СтруктураДанных.Вставить("АдресПочтовый","");*/
			/*СтруктураДанных.Вставить("АдресРегистрации","");*/
			/*СтруктураДанных.Вставить("АдресПочтовыйКодПоКЛАДР","");*/
			/*СтруктураДанных.Вставить("АдресРегистрацииКодПоКЛАДР","");*/
			/*СтруктураДанных.Вставить("ПеречислятьПособиеПочтовымПереводом", Ложь);*/
			/*СтруктураДанных.Вставить("БИКБанка","");*/
			/*СтруктураДанных.Вставить("НаименованиеБанка","");*/
			/*СтруктураДанных.Вставить("НомерЛицевогоСчета","");*/
			/*СтруктураДанных.Вставить("ОрганизацияСокращенно","");*/
			/*СтруктураДанных.Вставить("Совместительство", Ложь);*/
			/*СтруктураДанных.Вставить("ОГРНОрганизации","");*/
			/*СтруктураДанных.Вставить("РегистрационныйНомерФСС","");*/
			/*СтруктураДанных.Вставить("КодПодчиненностиФСС","");*/
			/*СтруктураДанных.Вставить("КППОрганизации","");*/
			/*СтруктураДанных.Вставить("ИННОрганизации","");*/
			/*СтруктураДанных.Вставить("ФИОРуководителя","");*/
			/*СтруктураДанных.Вставить("ДолжностьРуководителя","");*/
			/*СтруктураДанных.Вставить("ФИОГлБуха","");*/
			/*СтруктураДанных.Вставить("ДатаРождения","");*/
			/*СтруктураДанных.Вставить("Пол","");*/
			/*СтруктураДанных.Вставить("СреднийДневнойЗаработок","");*/
			/*СтруктураДанных.Вставить("ЗамененныйПервыйГодРасчета","");*/
			/*СтруктураДанных.Вставить("ЗамененныйВторойГодРасчета","");*/
			/*СтруктураДанных.Вставить("ПервыйГодРасчета","");*/
			/*СтруктураДанных.Вставить("ВторойГодРасчета","");*/
			/*СтруктураДанных.Вставить("ЗаработокПервыйГодРасчета",0);*/
			/*СтруктураДанных.Вставить("ЗаработокВторойГодРасчета",0);*/
			/*СтруктураДанных.Вставить("ЗаработокЗаПериодРасчета","");*/
			/*СтруктураДанных.Вставить("КалендарныхДнейРасчетногоПериода","");*/
			/*СтруктураДанных.Вставить("ПорядокРасчетаСреднегоЗаработка","");*/
			/*СтруктураДанных.Вставить("ПериодРасчетаСреднегоЗаработкаНачало","");*/
			/*СтруктураДанных.Вставить("ПериодРасчетаСреднегоЗаработкаОкончание","");*/
			/*СтруктураДанных.Вставить("ТарифнаяСтавкаОклад", 0);*/
			/*СтруктураДанных.Вставить("МРОТ", 0);*/
			/*СтруктураДанных.Вставить("РайонныйКоэффициент", 0);*/
			/*СтруктураДанных.Вставить("ДоляВремени", 0);*/
			/*СтруктураДанных.Вставить("ПрименятьЛьготыПриНачисленииПособия", Ложь);*/
			/*СтруктураДанных.Вставить("ВыплатаЗаСчетФедеральногоБюджета", "");*/
			/*СтруктураДанных.Вставить("ПроживаниеРаботаВЛьготнойЗоне","");*/
			/*СтруктураДанных.Вставить("СтатусЛьготнойЗоны","");*/
			/*СтруктураДанных.Вставить("ПериодПростояС","");*/
			/*СтруктураДанных.Вставить("ПериодПростояПо","");*/
			/*СтруктураДанных.Вставить("СреднийЗаработокНаПериодПростоя",0);*/
			/*СтруктураДанных.Вставить("СтажЛет", 0);*/
			/*СтруктураДанных.Вставить("СтажМесяцев", 0);*/
			/*СтруктураДанных.Вставить("СтажБезНестраховыхПериодовЛет", 0);*/
			/*СтруктураДанных.Вставить("СтажБезНестраховыхПериодовСтажМесяцев", 0);*/
			/*СтруктураДанных.Вставить("НомерВходящегоДокумента","");*/
			/*СтруктураДанных.Вставить("НомерПервичногоБольничного","");*/
			/*СтруктураДанных.Вставить("ЯвляетсяДубликатом","");*/
			/*СтруктураДанных.Вставить("ДатаВыдачиБольничного","");*/
			/*СтруктураДанных.Вставить("НаименованиеЛПУ","");*/
			/*СтруктураДанных.Вставить("АдресЛПУ","");*/
			/*СтруктураДанных.Вставить("АдресЛПУКодПоКЛАДР","");*/
			/*СтруктураДанных.Вставить("ОГРН_ЛПУ","");*/
			/*СтруктураДанных.Вставить("КодПричиныНетрудоспособности","");*/
			/*СтруктураДанных.Вставить("ДополнительныйКодПричиныНетрудоспособности","");*/
			/*СтруктураДанных.Вставить("ВторойКодПричиныНетрудоспособности","");*/
			/*СтруктураДанных.Вставить("НомерЛисткаПоОсновномуМестуРаботы","");*/
			/*СтруктураДанных.Вставить("ДатаИзмененияКодаПричиныНетрудоспособности","");*/
			/*СтруктураДанных.Вставить("ДатаОкончанияПутевки","");*/
			/*СтруктураДанных.Вставить("НомерПутевки","");*/
			/*СтруктураДанных.Вставить("ОГРН_Санатория","");*/
			/*СтруктураДанных.Вставить("УходЗаРодственникомЛет1","");*/
			/*СтруктураДанных.Вставить("УходЗаРодственникомМесяцев1","");*/
			/*СтруктураДанных.Вставить("УходЗаРодственникомРодственнаяСвязь1","");*/
			/*СтруктураДанных.Вставить("УходЗаРодственникомФИО1","");*/
			/*СтруктураДанных.Вставить("УходЗаРодственникомИспользованоДней1","");*/
			/*СтруктураДанных.Вставить("УходЗаРодственникомЛет2","");*/
			/*СтруктураДанных.Вставить("УходЗаРодственникомМесяцев2","");*/
			/*СтруктураДанных.Вставить("УходЗаРодственникомРодственнаяСвязь2","");*/
			/*СтруктураДанных.Вставить("УходЗаРодственникомФИО2","");*/
			/*СтруктураДанных.Вставить("УходЗаРодственникомИспользованоДней2","");*/
			/*СтруктураДанных.Вставить("ВидПособия","");*/
			/*СтруктураДанных.Вставить("ПоставленаНаУчетВРанниеСрокиБеременности","");*/
			/*СтруктураДанных.Вставить("ДатаСправкиБеременной","");*/
			/*СтруктураДанных.Вставить("НомерСправкиБеременной","");*/
			/*СтруктураДанных.Вставить("ПериодНахожденияВСтационареСРебенкомС","");*/
			/*СтруктураДанных.Вставить("ПериодНахожденияВСтационареСРебенкомПо","");*/
			/*СтруктураДанных.Вставить("КодНарушенияРежима","");*/
			/*СтруктураДанных.Вставить("ДатаНарушенияРежима","");*/
			/*СтруктураДанных.Вставить("ДатаНаправленияВБюроМСЭ","");*/
			/*СтруктураДанных.Вставить("ДатаРегистрацииДокументовМСЭ","");*/
			/*СтруктураДанных.Вставить("ДатаОсвидетельствованияМСЭ","");*/
			/*СтруктураДанных.Вставить("УстановленаИзмененаГруппаИнвалидности", Ложь);*/
			/*СтруктураДанных.Вставить("ГруппаИнвалидности","");*/
			/*СтруктураДанных.Вставить("ДнейБолезниИнвалида",0);*/
			/*СтруктураДанных.Вставить("НовыйСтатусНетрудопособного","");*/
			/*СтруктураДанных.Вставить("ОсвобождениеС1","");*/
			/*СтруктураДанных.Вставить("ОсвобождениеПо1","");*/
			/*СтруктураДанных.Вставить("ДолжностьВрача1","");*/
			/*СтруктураДанных.Вставить("ФИОВрача1","");*/
			/*СтруктураДанных.Вставить("ИдентификационныйНомерВрача1","");*/
			/*СтруктураДанных.Вставить("ФИОВрачаПредседателяВК1","");*/
			/*СтруктураДанных.Вставить("ДолжностьВрачаПредседателяВК1","");*/
			/*СтруктураДанных.Вставить("ИдентификационныйНомерВрачаПредседателяВК1","");*/
			/*СтруктураДанных.Вставить("ОсвобождениеС2","");*/
			/*СтруктураДанных.Вставить("ОсвобождениеПо2","");*/
			/*СтруктураДанных.Вставить("ДолжностьВрача2","");*/
			/*СтруктураДанных.Вставить("ФИОВрача2","");*/
			/*СтруктураДанных.Вставить("ИдентификационныйНомерВрача2","");*/
			/*СтруктураДанных.Вставить("ФИОВрачаПредседателяВК2","");*/
			/*СтруктураДанных.Вставить("ДолжностьВрачаПредседателяВК2","");*/
			/*СтруктураДанных.Вставить("ИдентификационныйНомерВрачаПредседателяВК2","");*/
			/*СтруктураДанных.Вставить("ОсвобождениеС3","");*/
			/*СтруктураДанных.Вставить("ОсвобождениеПо3","");*/
			/*СтруктураДанных.Вставить("ДолжностьВрача3","");*/
			/*СтруктураДанных.Вставить("ФИОВрача3","");*/
			/*СтруктураДанных.Вставить("ИдентификационныйНомерВрача3","");*/
			/*СтруктураДанных.Вставить("ФИОВрачаПредседателяВК3","");*/
			/*СтруктураДанных.Вставить("ДолжностьВрачаПредседателяВК3","");*/
			/*СтруктураДанных.Вставить("ИдентификационныйНомерВрачаПредседателяВК3","");*/
			/*СтруктураДанных.Вставить("ДатаНовыйСтатусНетрудопособного","");*/
			/*СтруктураДанных.Вставить("ДатаВыходаНаРаботу","");*/
			/*СтруктураДанных.Вставить("НомерЛисткаПродолжения","");*/
			/*СтруктураДанных.Вставить("УсловияИсчисленияКод1","");*/
			/*СтруктураДанных.Вставить("УсловияИсчисленияКод2","");*/
			/*СтруктураДанных.Вставить("УсловияИсчисленияКод3","");*/
			/*СтруктураДанных.Вставить("ДатаАктаФормыН1","");*/
			/*СтруктураДанных.Вставить("ДатаНачалаРаботы","");*/
			/*СтруктураДанных.Вставить("СрочныйДоговорС","");*/
			/*СтруктураДанных.Вставить("СрочныйДоговорПо","");*/
			/*СтруктураДанных.Вставить("ДатаНачалаОплаты","");*/
			/*СтруктураДанных.Вставить("ДатаОкончанияОплаты","");*/
			/*СтруктураДанных.Вставить("СуммаПособияРаботодателя",0);*/
			/*СтруктураДанных.Вставить("СуммаПособияФСС",0);*/
			/*СтруктураДанных.Вставить("СуммаПособияВсего",0);*/
			/*СтруктураДанных.Вставить("ДокументОРожденииВид","");*/
			/*СтруктураДанных.Вставить("ДокументОРожденииСерияНомер","");*/
			/*СтруктураДанных.Вставить("ДокументОРожденииДатаВыдачи","");*/
			/*СтруктураДанных.Вставить("ФамилияРебенка","");*/
			/*СтруктураДанных.Вставить("ИмяРебенка","");*/
			/*СтруктураДанных.Вставить("ОтчествоРебенка","");*/
			/*СтруктураДанных.Вставить("ДатаРожденияРебенка","");*/
			/*СтруктураДанных.Вставить("ДатаСмертиРебенка","");*/
			/*СтруктураДанных.Вставить("УсыновлениеОпека","");*/
			/*СтруктураДанных.Вставить("УсыновлениеОпекаСерияНомер","");*/
			/*СтруктураДанных.Вставить("УсыновлениеОпекаДатаВыдачи","");*/
			/*СтруктураДанных.Вставить("ДатаСправкиОРождении","");*/
			/*СтруктураДанных.Вставить("НомерСправкиОРождении","");*/
			/*СтруктураДанных.Вставить("ДатаДоговораОПередачеНаВоспитание","");*/
			/*СтруктураДанных.Вставить("НомерДоговораОПередачеНаВоспитание","");*/
			/*СтруктураДанных.Вставить("ДатаСправкиОтДругогоРодителя","");*/
			/*СтруктураДанных.Вставить("НомерСправкиОтДругогоРодителя","");*/
			/*СтруктураДанных.Вставить("ОдновременныйУходЗаНесколькимиДетьми",Ложь);*/
			/*СтруктураДанных.Вставить("ДатаПриказаНаОтпускПоУходуЗаРебенком","");*/
			/*СтруктураДанных.Вставить("НомерПриказаНаОтпускПоУходуЗаРебенком","");*/
			/*СтруктураДанных.Вставить("Очередность",0);*/
			/*СтруктураДанных.Вставить("НаличиеРешенияСудаОЛишенииПрав",Ложь);*/
			/*СтруктураДанных.Вставить("ДатаНачала","");*/
			/*СтруктураДанных.Вставить("ДатаОкончания","");*/
			/*СтруктураДанных.Вставить("ДатаСправкиОНеполученииПособияОтОтца","");*/
			/*СтруктураДанных.Вставить("НомерСправкиОНеполученииПособияОтОтца","");*/
			/*СтруктураДанных.Вставить("ДатаСправкиОНеполученииПособияОтМатери","");*/
			/*СтруктураДанных.Вставить("НомерСправкиОНеполученииПособияОтМатери","");*/
			/*СтруктураДанных.Вставить("НаличиеДокументаОРождении",Ложь);*/
			/*СтруктураДанных.Вставить("НаличиеДокументаОСмерти",Ложь);*/
			/*СтруктураДанных.Вставить("ДатаПриказаОЗаменеПослеродовогоОтпуска","");*/
			/*СтруктураДанных.Вставить("НомерПриказаОЗаменеПослеродовогоОтпуска","");*/
			return null;
		}
		// СтруктураДанныхДляФайлаРеестра()
		////////////////////////////////////////////////////////////////////////////////

		public void ЗаписатьФИОРебенкаВПоляДокумента(/*СтрокаФИО, СтрокаДокумента, ПолеФамилия = "ФамилияРебенка", ПолеИмя = "ИмяРебенка",ПолеОтчество = "ОтчествоРебенка"*/)
		{
			/*ФИО = ОбщегоНазначения.ПолучитьМассивФИО(СтрокаФИО);*/
			/*СтрокаДокумента[ПолеФамилия] = ФИО[0];*/
			/*СтрокаДокумента[ПолеИмя] = ФИО[1];*/
			/*СтрокаДокумента[ПолеОтчество] = ФИО[2];*/
		}

		public void ЗаполнитьДанныеЗастрахованныхВРеестреПособий(/*ДатаАктуальности, ТабличнаяЧастьРеестра = Неопределено, СтрокаТабличнойЧастиРеестра = Неопределено, СтрокаИсключений = ""*/)
		{
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	СотрудникиОрганизаций.Физлицо,
	|	СотрудникиОрганизаций.Физлицо.СтраховойНомерПФР КАК СтраховойНомерПФР,
	|	СотрудникиОрганизаций.Ссылка,
	|	СотрудникиОрганизаций.Физлицо.ИНН КАК ИНН,
	|	СотрудникиОрганизаций.Физлицо.ДатаРождения КАК ДатаРождения,
	|	СотрудникиОрганизаций.Физлицо.Пол КАК Пол
	|ПОМЕСТИТЬ ВТСотрудник
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|ГДЕ
	|	СотрудникиОрганизаций.Ссылка В(&Ссылки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатусФизЛицКакНалогоплательщиковНДФЛСрезПоследних.ФизЛицо,
	|	СтатусФизЛицКакНалогоплательщиковНДФЛСрезПоследних.Статус
	|ПОМЕСТИТЬ ВТСтатусыНалогоплательщика
	|ИЗ
	|	РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ.СрезПоследних(
	|			&ДатаАктуальности,
	|			ФизЛицо В
	|				(ВЫБРАТЬ
	|					СотрудникиОрганизаций.Физлицо
	|				ИЗ
	|					ВТСотрудник КАК СотрудникиОрганизаций)) КАК СтатусФизЛицКакНалогоплательщиковНДФЛСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Сотрудник.Ссылка,
	|	Сотрудник.Физлицо,
	|	Сотрудник.СтраховойНомерПФР,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество,
	|	ЕСТЬNULL(СтатусыНалогоплательщика.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) КАК СтатусНалогоплательщика,
	|	Сотрудник.ИНН,
	|	Сотрудник.ДатаРождения,
	|	Сотрудник.Пол
	|ИЗ
	|	ВТСотрудник КАК Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусыНалогоплательщика КАК СтатусыНалогоплательщика
	|		ПО Сотрудник.Физлицо = СтатусыНалогоплательщика.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
	|				&ДатаАктуальности,
	|				ФизЛицо В
	|					(ВЫБРАТЬ
	|						Сотрудник.Физлицо
	|					ИЗ
	|						ВТСотрудник КАК Сотрудник)) КАК ФИОФизЛицСрезПоследних
	|		ПО Сотрудник.Физлицо = ФИОФизЛицСрезПоследних.ФизЛицо";*/
			/*Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);*/
			if(true/*СтрокаТабличнойЧастиРеестра = Неопределено*/)
			{
				/*Запрос.УстановитьПараметр("Ссылки", ТабличнаяЧастьРеестра.ВыгрузитьКолонку("Сотрудник"));*/
				/*Выборка = Запрос.Выполнить().Выбрать();*/
				/*СтруктураПоиска = Новый Структура("Сотрудник");*/
				while(true/*Выборка.Следующий()*/)
				{
					/*СтруктураПоиска.Сотрудник = Выборка.Ссылка;*/
					/*СтрокиТЧ = ТабличнаяЧастьРеестра.НайтиСтроки(СтруктураПоиска);*/
				}
				/*;;*/
			}
		}

		public void ЗаполнитьДанныеОрганизации(/*ЭтотОбъект, ЗаполнятьГлавБуха = Истина*/)
		{
			/*ДанныеСтрахователя = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(ЭтотОбъект.Организация,"РегистрационныйНомерФСС, ДополнительныйКодФСС, КодПодчиненностиФСС, НаименованиеТерриториальногоОрганаФСС, ИНН, КПП, ОГРН, ИндивидуальныйПредприниматель");*/
			/*ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеСтрахователя);*/
			if(true/*ОбщегоНазначенияПереопределяемый.ЭтоЮрЛицо(ЭтотОбъект.Организация)*/)
			{
				/*Запрос = Новый Запрос;*/
				/*Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОтветственныеЛицаСрезПоследних.Должность КАК ДолжностьРуководителя,
		|	ОтветственныеЛицаСрезПоследних.ОтветственноеЛицо,
		|	ОтветственныеЛицаСрезПоследних.ФизическоеЛицо,
		|	ФизическиеЛица.Комментарий
		|ИЗ
		|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
		|			&Дата,
		|			ОтветственноеЛицо в (ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель), ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер))
		|				И СтруктурнаяЕдиница = &Организация) КАК ОтветственныеЛицаСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ПО ОтветственныеЛицаСрезПоследних.ФизическоеЛицо = ФизическиеЛица.Ссылка";*/
				/*Запрос.УстановитьПараметр("Организация", ЭтотОбъект.Организация);*/
				/*Запрос.УстановитьПараметр("Дата", ЭтотОбъект.Дата);*/
				/*Выборка = Запрос.Выполнить().Выбрать();*/
				while(true/*Выборка.Следующий()*/)
				{
					if(true/*Выборка.ОтветственноеЛицо = Перечисления.ОтветственныеЛицаОрганизаций.Руководитель*/)
					{
						/*ЭтотОбъект.Руководитель = Выборка.ФизическоеЛицо;*/
						/*ЭтотОбъект.ДолжностьРуководителя = Выборка.ДолжностьРуководителя;*/
					}
				}
				/*;;*/
			}
		}

		public void ЗаполнитьДанныеОрганизацииВЗаявленияхНаВозмещениеПособий(/*ЭтотОбъект*/)
		{
			/*ЭтотОбъект.Руководитель = Неопределено;*/
			/*ЭтотОбъект.ДолжностьРуководителя = Неопределено;*/
			/*ЭтотОбъект.АдресОрганизации = Неопределено;*/
			if(true/*ОбщегоНазначенияПереопределяемый.ЭтоЮрЛицо(ЭтотОбъект.Организация)*/)
			{
				/*Запрос = Новый Запрос;*/
				/*Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОтветственныеЛицаСрезПоследних.Должность КАК ДолжностьРуководителя,
		|	ОтветственныеЛицаСрезПоследних.ОтветственноеЛицо,
		|	ОтветственныеЛицаСрезПоследних.ФизическоеЛицо,
		|	ФизическиеЛица.Комментарий
		|ИЗ
		|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
		|			&Дата,
		|			ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)
		|				И СтруктурнаяЕдиница = &Организация) КАК ОтветственныеЛицаСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ПО ОтветственныеЛицаСрезПоследних.ФизическоеЛицо = ФизическиеЛица.Ссылка";*/
				/*Запрос.УстановитьПараметр("Организация", ЭтотОбъект.Организация);*/
				/*Запрос.УстановитьПараметр("Дата", ЭтотОбъект.Дата);*/
				/*Выборка = Запрос.Выполнить().Выбрать();*/
				while(true/*Выборка.Следующий()*/)
				{
					/*ЭтотОбъект.Руководитель = Выборка.ФизическоеЛицо;*/
					/*ЭтотОбъект.ДолжностьРуководителя = Выборка.ДолжностьРуководителя;*/
				}
				/*;;*/
			}
			/*Запрос.УстановитьПараметр("ЭтоЮрЛицо", ОбщегоНазначенияПереопределяемый.ЭтоЮрЛицо(ЭтотОбъект.Организация));*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА &ЭтоЮрЛицо
	|			ТОГДА "","" + АдресЮрЛица.Поле1 + "","" + АдресЮрЛица.Поле2 + "","" + АдресЮрЛица.Поле3 + "","" + АдресЮрЛица.Поле4 + "","" + АдресЮрЛица.Поле5 + "","" + АдресЮрЛица.Поле6 + "","" + АдресЮрЛица.Поле7 + "","" + АдресЮрЛица.Поле8 + "","" + АдресЮрЛица.Поле9 + "","" + ВЫБОР
	|					КОГДА АдресЮрЛица.ТипДома В (ЗНАЧЕНИЕ(Перечисление.ТипыДомов.Дом), ЗНАЧЕНИЕ(Перечисление.ТипыДомов.ПустаяСсылка))
	|						ТОГДА ""дом""
	|					ИНАЧЕ ""владение""
	|				КОНЕЦ + "","" + ВЫБОР
	|					КОГДА АдресЮрЛица.ТипКорпуса В (ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.Корпус), ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.ПустаяСсылка))
	|						ТОГДА ""корпус""
	|					ИНАЧЕ ""строение""
	|				КОНЕЦ + "","" + ВЫБОР
	|					КОГДА АдресЮрЛица.ТипКвартиры В (ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.Квартира), ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.ПустаяСсылка))
	|						ТОГДА ""кв.""
	|					ИНАЧЕ ""оф.""
	|				КОНЕЦ
	|		КОГДА АдресаФактические.Поле1 ЕСТЬ NULL 
	|			ТОГДА "","" + АдресаРегистрации.Поле1 + "","" + АдресаРегистрации.Поле2 + "","" + АдресаРегистрации.Поле3 + "","" + АдресаРегистрации.Поле4 + "","" + АдресаРегистрации.Поле5 + "","" + АдресаРегистрации.Поле6 + "","" + АдресаРегистрации.Поле7 + "","" + АдресаРегистрации.Поле8 + "","" + АдресаРегистрации.Поле9 + "","" + ВЫБОР
	|					КОГДА АдресаРегистрации.ТипДома В (ЗНАЧЕНИЕ(Перечисление.ТипыДомов.Дом), ЗНАЧЕНИЕ(Перечисление.ТипыДомов.ПустаяСсылка))
	|						ТОГДА ""дом""
	|					ИНАЧЕ ""владение""
	|				КОНЕЦ + "","" + ВЫБОР
	|					КОГДА АдресаРегистрации.ТипКорпуса В (ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.Корпус), ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.ПустаяСсылка))
	|						ТОГДА ""корпус""
	|					ИНАЧЕ ""строение""
	|				КОНЕЦ + "","" + ВЫБОР
	|					КОГДА АдресаРегистрации.ТипКвартиры В (ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.Квартира), ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.ПустаяСсылка))
	|						ТОГДА ""кв.""
	|					ИНАЧЕ ""оф.""
	|				КОНЕЦ
	|		ИНАЧЕ "","" + АдресаФактические.Поле1 + "","" + АдресаФактические.Поле2 + "","" + АдресаФактические.Поле3 + "","" + АдресаФактические.Поле4 + "","" + АдресаФактические.Поле5 + "","" + АдресаФактические.Поле6 + "","" + АдресаФактические.Поле7 + "","" + АдресаФактические.Поле8 + "","" + АдресаФактические.Поле9 + "","" + ВЫБОР
	|				КОГДА АдресаФактические.ТипДома В (ЗНАЧЕНИЕ(Перечисление.ТипыДомов.Дом), ЗНАЧЕНИЕ(Перечисление.ТипыДомов.ПустаяСсылка))
	|					ТОГДА ""дом""
	|				ИНАЧЕ ""владение""
	|			КОНЕЦ + "","" + ВЫБОР
	|				КОГДА АдресаФактические.ТипКорпуса В (ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.Корпус), ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.ПустаяСсылка))
	|					ТОГДА ""корпус""
	|				ИНАЧЕ ""строение""
	|			КОНЕЦ + "","" + ВЫБОР
	|				КОГДА АдресаФактические.ТипКвартиры В (ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.Квартира), ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.ПустаяСсылка))
	|					ТОГДА ""кв.""
	|				ИНАЧЕ ""оф.""
	|			КОНЕЦ
	|	КОНЕЦ КАК АдресОрганизации,
	|	Организация.ДополнительныйКодФСС,
	|	Организация.КодПодчиненностиФСС,
	|	Организация.НаименованиеТерриториальногоОрганаФСС,
	|	Организация.РегистрационныйНомерФСС,
	|	Организация.ИндивидуальныйПредприниматель,
	|	Организация.ОсновнойБанковскийСчет.Банк КАК Банк,
	|	Организация.ОсновнойБанковскийСчет.НомерСчета КАК НомерСчета,
	|	Организация.ОсновнойБанковскийСчет.Банк.КоррСчет КАК КоррСчетБанка,
	|	Организация.ОсновнойБанковскийСчет.Банк.Наименование КАК НаименованиеБанка,
	|	Организация.ОсновнойБанковскийСчет.Банк.Код КАК БИКБанка
	|ИЗ
	|	Справочник.Организации КАК Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресаФактические
	|		ПО Организация.ИндивидуальныйПредприниматель = АдресаФактические.Объект
	|			И (АдресаФактические.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресФизЛица))
	|			И (АдресаФактические.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресаРегистрации
	|		ПО Организация.ИндивидуальныйПредприниматель = АдресаРегистрации.Объект
	|			И (АдресаРегистрации.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресФизЛица))
	|			И (АдресаРегистрации.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресЮрЛица
	|		ПО Организация.Ссылка = АдресЮрЛица.Объект
	|			И (АдресЮрЛица.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации))
	|			И (АдресЮрЛица.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|ГДЕ
	|	Организация.Ссылка = &Организация";*/
			/*Выборка = Запрос.Выполнить().Выбрать();*/
			if(true/*Выборка.Следующий()*/)
			{
				/*ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);*/
				if(true/*Не ОбщегоНазначенияПереопределяемый.ЭтоЮрЛицо(ЭтотОбъект.Организация)*/)
				{
					/*ЭтотОбъект.Руководитель = Выборка.ИндивидуальныйПредприниматель;*/
					/*ЭтотОбъект.ДолжностьРуководителя = "";*/
				}
				/*ЭтотОбъект.АдресОрганизации = СокрЛП(ЭтотОбъект.АдресОрганизации);*/
			}
		}

		public void ПодсчитатьРазностьСтажейВГодахИМесяцах(/*БольшийСтажЛет, БольшийСтажМесяцев, МеньшийСтажЛет, МеньшийСтажМесяцев, РазностьЛет, РазностьМесяцев*/)
		{
			/*РазностьМесяцев = БольшийСтажЛет * 12 + БольшийСтажМесяцев - МеньшийСтажЛет * 12 - МеньшийСтажМесяцев;*/
			if(true/*РазностьМесяцев > 0*/)
			{
				/*РазностьЛет = Цел(РазностьМесяцев / 12);*/
				/*РазностьМесяцев = РазностьМесяцев - РазностьЛет * 12;*/
			}
		}

		public void ПроверитьДанныеЗастрахованного(/*ДанныеЗастрахованного, Отказ, Заголовок, НачалоСообщения = ""*/)
		{
			if(true/*Не ЗначениеЗаполнено(ДанныеЗастрахованного.ФИОСотрудника)*/)
			{
				/*ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоСообщения + "Не указано ФИО сотрудника!", Отказ, Заголовок);*/
			}
			if(true/*Не ЗначениеЗаполнено(ДанныеЗастрахованного.ДатаРождения)*/)
			{
				/*ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоСообщения + "Не указана дата рождения получателя пособия!", Отказ, Заголовок);*/
			}
			if(true/*Не ЗначениеЗаполнено(ДанныеЗастрахованного.Пол)*/)
			{
				/*ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоСообщения + "Не указан пол получателя пособия!", Отказ, Заголовок);*/
			}
			if(true/*Не ЗначениеЗаполнено(СтрЗаменить(ДанныеЗастрахованного.СтраховойНомерПФР,"-",""))*/)
			{
				/*ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоСообщения + "Не указан номер страхового свидетельства!", Отказ, Заголовок);*/
			}
			if(true/*Не ЗначениеЗаполнено(ДанныеЗастрахованного.СтатусНалогоплательщикаДляПроверки)*/)
			{
				/*ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоСообщения + "Не указан статус налогоплательщика!", Отказ, Заголовок);*/
			}
			if(true/*Не ПустаяСтрока(ДанныеЗастрахованного.ИНН) И Не РегламентированнаяОтчетность.ИННСоответствуетТребованиям(ДанныеЗастрахованного.ИНН, Перечисления.ЮрФизЛицо.ФизЛицо)*/)
			{
				/*ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоСообщения + "Указан неверный ИНН!", Отказ, Заголовок);*/
			}
			if(true/*Не ЗначениеЗаполнено(ДанныеЗастрахованного.ВидУдостоверенияЛичности)*/)
			{
				/*ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоСообщения + "Не указан вид документа, удостоверяющего личность!", Отказ, Заголовок);*/
			}
			if(true/*Не ЗначениеЗаполнено(ДанныеЗастрахованного.СерияДокумента + ДанныеЗастрахованного.НомерДокумента)*/)
			{
				/*ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоСообщения + "Не указаны серия и номер документа, удостоверяющего личность!", Отказ, Заголовок);*/
			}
			if(true/*Не ЗначениеЗаполнено(ДанныеЗастрахованного.ДатаВыдачиДокумента)*/)
			{
				/*ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоСообщения + "Не указана дата выдачи документа, удостоверяющего личность!", Отказ, Заголовок);*/
			}
			if(true/*Не ЗначениеЗаполнено(ДанныеЗастрахованного.КемВыданДокумент)*/)
			{
				/*ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоСообщения + "Не указано, кем выдан документ!", Отказ, Заголовок);*/
			}
			if(true/*ДанныеЗастрахованного.ВидВыплаты = "1"*/)
			{
				if(true/*Не ЗначениеЗаполнено(ДанныеЗастрахованного.АдресРегистрации)*/)
				{
					/*ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоСообщения + "Не указан адрес регистрации!", Отказ, Заголовок);*/
				}
				if(true/*Не ЗначениеЗаполнено(ДанныеЗастрахованного.АдресРегистрацииКодПоКЛАДР)*/)
				{
					/*ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоСообщения + "Не указан код по КЛАДР адреса регистрации!", Отказ, Заголовок);*/
				}
			}
			/*// Банковские реквизиты проверяем только если планируется банковский перевод
*/
			if(true/*ДанныеЗастрахованного.ПеречислятьПособиеПочтовымПереводом*/)
			{
				if(true/*Не ЗначениеЗаполнено(ДанныеЗастрахованного.АдресПочтовый)*/)
				{
					/*ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоСообщения + "Не указан почтовый адрес для пересылки пособия!", Отказ, Заголовок);*/
				}
				if(true/*Не ЗначениеЗаполнено(ДанныеЗастрахованного.АдресПочтовыйКодПоКЛАДР)*/)
				{
					/*ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоСообщения + "Не указан код по КЛАДР почтового адреса!", Отказ, Заголовок);*/
				}
			}
			if(true/*Не ЗначениеЗаполнено(ДанныеЗастрахованного.ДатаПредставленияПакетаДокументов)*/)
			{
				/*ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоСообщения + "Не указана дата представления пакета документов!", Отказ, Заголовок);*/
			}
			if(true/*ЗначениеЗаполнено(ДанныеЗастрахованного.НаименованиеДокументаНаПроживание)*/)
			{
				if(true/*Не ЗначениеЗаполнено(ДанныеЗастрахованного.ДатаВыдачиДокументаНаПроживание)*/)
				{
					/*ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоСообщения + "Не указана дата выдачи (продления) документа на проживание в РФ!", Отказ, Заголовок);*/
				}
				if(true/*Не ЗначениеЗаполнено(ДанныеЗастрахованного.НомерДокументаНаПроживание)*/)
				{
					/*ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоСообщения + "Не указан номер документа на проживание в РФ!", Отказ, Заголовок);*/
				}
			}
		}
		// ПроверитьДанныеЗастрахованного()

		public void ПроверитьДанныеСтрахователя(/*ДанныеСтрахователя, Отказ, Заголовок*/)
		{
			if(true/*Не ЗначениеЗаполнено(ДанныеСтрахователя.Организация)*/)
			{
				/*ОбщегоНазначения.ВывестиИнформациюОбОшибке(ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Не указана организация!"), Отказ, Заголовок);*/
			}
			if(true/*Не ЗначениеЗаполнено(ДанныеСтрахователя.ИННОрганизации)*/)
			{
				/*ОбщегоНазначения.ВывестиИнформациюОбОшибке("Не указан ИНН страхователя!", Отказ, Заголовок);*/
			}
			if(true/*ОбщегоНазначенияПереопределяемый.ЭтоЮрЛицо(ДанныеСтрахователя.Организация) И Не ЗначениеЗаполнено(ДанныеСтрахователя.КППОрганизации)*/)
			{
				/*ОбщегоНазначения.ВывестиИнформациюОбОшибке("Не указан КПП страхователя!", Отказ, Заголовок);*/
			}
			if(true/*Не ЗначениеЗаполнено(ДанныеСтрахователя.ОГРНОрганизации)*/)
			{
				/*ОбщегоНазначения.ВывестиИнформациюОбОшибке("Не указан ОГРН (ОГРНИП) страхователя!", Отказ, Заголовок);*/
			}
			if(true/*Не ЗначениеЗаполнено(ДанныеСтрахователя.НаименованиеТерриториальногоОрганаФСС)*/)
			{
				/*ОбщегоНазначения.ВывестиИнформациюОбОшибке("Не указано наименование территориального органа ФСС!", Отказ, Заголовок);*/
			}
			if(true/*Не ЗначениеЗаполнено(ДанныеСтрахователя.РегистрационныйНомерФСС)*/)
			{
				/*ОбщегоНазначения.ВывестиИнформациюОбОшибке("Не указан регистрационный номер в ФСС!", Отказ, Заголовок);*/
			}
			if(true/*Не ЗначениеЗаполнено(ДанныеСтрахователя.КодПодчиненностиФСС)*/)
			{
				/*ОбщегоНазначения.ВывестиИнформациюОбОшибке("Не указан код подчиненности ФСС!", Отказ, Заголовок);*/
			}
			if(true/*Не ЗначениеЗаполнено(ДанныеСтрахователя.РеестрСоставил)*/)
			{
				/*ОбщегоНазначения.ВывестиИнформациюОбОшибке("Не указан составитель реестра!", Отказ, Заголовок);*/
			}
			if(true/*Не ЗначениеЗаполнено(ДанныеСтрахователя.ФИОРуководителя)*/)
			{
				/*ОбщегоНазначения.ВывестиИнформациюОбОшибке("Не указан руководитель страхователя!", Отказ, Заголовок);*/
			}
			if(true/*Не ЗначениеЗаполнено(ДанныеСтрахователя.ТелефонСоставителя)*/)
			{
				/*ОбщегоНазначения.ВывестиИнформациюОбОшибке("Не указан телефон составителя реестра!", Отказ, Заголовок);*/
			}
		}
		// ПроверитьДанныеСтрахователя()

		public object ДанныеОрганизацииДляЗаявленияНаВыплатуПособия(/*Организация, Дата*/)
		{
			/*ДанныеОрганизации = Новый Структура("Уполномоченный, ДолжностьУполномоченного, ТелефонСоставителя");*/
			/*Запрос = Новый Запрос;*/
			if(true/*ОбщегоНазначенияПереопределяемый.ЭтоЮрЛицо(Организация)*/)
			{
				/*Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОтветственныеЛицаСрезПоследних.Должность КАК ДолжностьУполномоченного,
		|	ОтветственныеЛицаСрезПоследних.ФизическоеЛицо КАК Уполномоченный,
		|	Телефон.Представление КАК ТелефонСоставителя,
		|	ФизическиеЛица.Комментарий
		|ИЗ
		|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
		|			&Дата,
		|			ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер)
		|				И СтруктурнаяЕдиница = &Организация) КАК ОтветственныеЛицаСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК Телефон
		|		ПО ОтветственныеЛицаСрезПоследних.ФизическоеЛицо = Телефон.Объект
		|			И (Телефон.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонСлужебный))
		|			И (Телефон.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ПО ОтветственныеЛицаСрезПоследних.ФизическоеЛицо = ФизическиеЛица.Ссылка";*/
				/*Запрос.УстановитьПараметр("Организация", Организация);*/
				/*Запрос.УстановитьПараметр("Дата", Дата);*/
			}
			/*Выборка = Запрос.Выполнить().Выбрать();*/
			if(true/*Выборка.Следующий()*/)
			{
				/*ЗаполнитьЗначенияСвойств(ДанныеОрганизации, Выборка);*/
			}
			return null;
		}

		public object ДанныеСоставителяРеестра(/*Ответственный*/)
		{
			/*ДанныеСоставителя = Новый Структура("РеестрСоставил, ТелефонСоставителя, АдресЭлектроннойПочтыСоставителя");*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Пользователи.ФизЛицо КАК РеестрСоставил,
	|	АдресЭП.Представление КАК АдресЭлектроннойПочтыСоставителя,
	|	Телефон.Представление КАК ТелефонСоставителя
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресЭП
	|		ПО Пользователи.Ссылка = АдресЭП.Объект
	|			И (АдресЭП.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.СлужебныйАдресЭлектроннойПочтыПользователя))
	|			И (АдресЭП.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК Телефон
	|		ПО Пользователи.ФизЛицо = Телефон.Объект
	|			И (Телефон.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонСлужебный))
	|			И (Телефон.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
	|ГДЕ
	|	Пользователи.Ссылка = &Ссылка";*/
			/*Запрос.УстановитьПараметр("Ссылка", Ответственный);*/
			/*Выборка = Запрос.Выполнить().Выбрать();*/
			if(true/*Выборка.Следующий()*/)
			{
				/*ЗаполнитьЗначенияСвойств(ДанныеСоставителя,Выборка);*/
			}
			return null;
		}
		// ДанныеСоставителяРеестра()

		public object ДанныеСотрудникаДляЗаявленияНаВыплатуПособия(/*Организация, Сотрудник, Дата, Режим = "ДляДокумента"*/)
		{
			return null;
		}

		public object ИмяФайла(/*ДокументОбъект*/)
		{
			return null;
		}
		// ИмяФайла()

		public object КодАдресаПоКЛАДРдляФСС(/*Адрес*/)
		{
			/*СтруктураАдреса = УправлениеКонтактнойИнформацией.ПолучитьСтруктуруАдресаИзСтроки(Адрес);*/
			if(true/*ЗначениеЗаполнено(СтруктураАдреса) И СтруктураАдреса.Свойство("Индекс")*/)
			{
				/*СтрокаКладр = УправлениеКонтактнойИнформацией.ВернутьСтрокуАдресногоКлассификатораПоАдреснымЭлементам(СтруктураАдреса.Регион, СтруктураАдреса.Район, СтруктураАдреса.Город, СтруктураАдреса.НаселенныйПункт, СтруктураАдреса.Улица);*/
			}
			return null;
		}

		public object СформироватьЗапросПоШапкеДокумента(/*ДокументОбъект*/)
		{
			/*Запрос = Новый Запрос();*/
			/*Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК ДатаПодачиЗаявления,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Организация.НаименованиеПолное КАК НаименованиеОрганизации,
	|	ДанныеДокумента.НаименованиеТерриториальногоОрганаФСС,
	|	ДанныеДокумента.РегистрационныйНомерФСС,
	|	ДанныеДокумента.ДополнительныйКодФСС,
	|	ДанныеДокумента.КодПодчиненностиФСС,
	|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество, ДанныеДокумента.Руководитель.Наименование) КАК ФИОРуководителя,
	|	ЕСТЬNULL(ФИОГлавБуха.Фамилия + "" "" + ФИОГлавБуха.Имя + "" "" + ФИОГлавБуха.Отчество, ДанныеДокумента.ГлавныйБухгалтер.Наименование) КАК ФИОГлавБуха,
	|	ЕСТЬNULL(ФИОСоставителя.Фамилия + "" "" + ФИОСоставителя.Имя + "" "" + ФИОСоставителя.Отчество, ДанныеДокумента.РеестрСоставил.Наименование) КАК ФИОСоставителя,
	|	ДанныеДокумента.ТелефонСоставителя,
	|	ДанныеДокумента.АдресЭлектроннойПочтыСоставителя,
	|	ДанныеДокумента.ДолжностьРуководителя.Наименование КАК ДолжностьРуководителя,
	|	ДанныеДокумента.КраткийСоставДокумента,
	|	ДанныеДокумента.ОГРН КАК ОГРНОрганизации,
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.ИНН КАК ИННОрганизации,
	|	ДанныеДокумента.КПП КАК КППОрганизации,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Организация.НаименованиеСокращенное = """"
	|			ТОГДА ДанныеДокумента.Организация.НаименованиеПолное
	|		ИНАЧЕ ДанныеДокумента.Организация.НаименованиеСокращенное
	|	КОНЕЦ КАК ОрганизацияСокращенно,
	|	ДанныеДокумента.РеестрСоставил,
	|	ДанныеДокумента.ГлавныйБухгалтер,
	|	ДанныеДокумента.ВыводитьПодписиВРеестрПособий
	|ИЗ
	|	Документ.РеестрСведенийВФССОПособияхПриРожденииРебенка КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ФизЛицо = &Руководитель) КАК ФИОФизЛицСрезПоследних
	|		ПО ДанныеДокумента.Руководитель = ФИОФизЛицСрезПоследних.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ФизЛицо = &ГлавныйБухгалтер) КАК ФИОГлавБуха
	|		ПО ДанныеДокумента.ГлавныйБухгалтер = ФИОГлавБуха.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ФизЛицо = &Составитель) КАК ФИОСоставителя
	|		ПО ДанныеДокумента.РеестрСоставил = ФИОСоставителя.ФизЛицо
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка";*/
			/*Запрос.Текст = СтрЗаменить(Запрос.Текст,"РеестрСведенийВФССОПособияхПриРожденииРебенка",ДокументОбъект.Метаданные().Имя);*/
			/*// Установим параметры запроса
*/
			/*Запрос.УстановитьПараметр("ДокументСсылка", ДокументОбъект.Ссылка);*/
			/*Запрос.УстановитьПараметр("Составитель", ДокументОбъект.РеестрСоставил);*/
			/*Запрос.УстановитьПараметр("Руководитель", ДокументОбъект.Руководитель);*/
			/*Запрос.УстановитьПараметр("ГлавныйБухгалтер", ДокументОбъект.ГлавныйБухгалтер);*/
			/*Запрос.УстановитьПараметр("Дата", ДокументОбъект.Дата);*/
			return null;
		}
		// СформироватьЗапросПоШапкеДокумента()

		public object СформироватьФайлРеестра(/*ДокументОбъект, Отказ, ПроверятьДанные = Истина, ВыборкаПоШапкеДокумента = Неопределено, ВыборкаПоРаботникиОрганизации = Неопределено*/)
		{
			if(true/*ВыборкаПоШапкеДокумента = Неопределено*/)
			{
				/*ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапкеДокумента(ДокументОбъект).Выбрать();*/
				/*ВыборкаПоШапкеДокумента.Следующий();*/
			}
			if(true/*ВыборкаПоРаботникиОрганизации = Неопределено*/)
			{
				/*ВыборкаПоРаботникиОрганизации = ДокументОбъект.СформироватьЗапросПоТЧРаботникиОрганизации().Выбрать();*/
			}
			/*//Проверка корректности заполнения документа
*/
			if(true/*ПроверятьДанные*/)
			{
				/*ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");*/
				/*ОбработкаКомментариев.УдалитьСообщения();*/
				/*ДокументОбъект.ПроверитьПравильностьЗаполненияДокумента(Отказ, Ложь, ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации);*/
				/*ВыборкаПоРаботникиОрганизации.Сбросить();*/
			}
			/*ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");*/
			/*ОбработкаКомментариев.ПоказатьСообщения();*/
			if(true/*Отказ*/)
			{
			}
			/*// Загружаем формат файла сведений
*/
			/*МакетФормата = ПолучитьОбщийМакет("ФорматФСС");*/
			/*// Создаем начальное дерево
*/
			/*ДеревоВыгрузки = ПроцедурыПерсонифицированногоУчета.СоздатьДеревоXML();*/
			/*Атрибуты = Новый Соответствие;*/
			/*Атрибуты.Вставить("author", ВыборкаПоШапкеДокумента.ФИОСоставителя);*/
			/*Атрибуты.Вставить("version", "1.6");*/
			/*Атрибуты.Вставить("software", Лев("1С:" + Метаданные.Синоним, 80));*/
			/*Атрибуты.Вставить("version_software", Лев(Метаданные.Версия, 15));*/
			/*Атрибуты.Вставить("phone", ВыборкаПоШапкеДокумента.ТелефонСоставителя);*/
			/*Атрибуты.Вставить("email", ВыборкаПоШапкеДокумента.АдресЭлектроннойПочтыСоставителя);*/
			/*Атрибуты.Вставить("xsi:noNamespaceSchemaLocation", "Страхователь.xsd");*/
			/*Узел = ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(ДеревоВыгрузки, "ROWSET", "", Атрибуты);*/
			/*ФорматСтроки = ПроцедурыПерсонифицированногоУчета.ЗагрузитьФорматНабораЗаписейдляПФР(МакетФормата, "Строка");*/
			/*СтруктураДанных = СтруктураДанныхДляФайлаРеестра();*/
			/*ЗаполнитьЗначенияСвойств(СтруктураДанных, ВыборкаПоШапкеДокумента);*/
			/*НачалоНомераСтроки = ИмяФайла(ДокументОбъект) + ":";*/
			/*НомерДокументаВПачке = 0;*/
			while(true/*ВыборкаПоРаботникиОрганизации.Следующий()*/)
			{
				/*НомерДокументаВПачке = 	НомерДокументаВПачке + 1;*/
				/*ЗаполнитьЗначенияСвойств(СтруктураДанных, ВыборкаПоРаботникиОрганизации);*/
				/*СтруктураДанных.НомерСтроки = НачалоНомераСтроки + Формат(НомерДокументаВПачке,"ЧЦ=10; ЧГ=0");*/
				/*ДобавитьСтрокуВРеестр(Узел, ФорматСтроки, СтруктураДанных);*/
			}
			/*// Преобразуем дерево в строковое описание XML
*/
			/*ПотокВыгрузкиXML = ПроцедурыПерсонифицированногоУчета.СоздатьПотокXML();*/
			/*СправкиПоНДФЛ.ЗаписатьУзелДереваXMLВXML(ДеревоВыгрузки, ПотокВыгрузкиXML, "xsi", "http://www.w3.org/2001/XMLSchema-instance");*/
			/*// получаем содержимое файла в виде строки
*/
			/*СтрокаXML = ПроцедурыПерсонифицированногоУчета.ЗаписатьПотокXML(ПотокВыгрузкиXML);*/
			return null;
		}
		// СформироватьФайлРеестра()
		////////////////////////////////////////////////////////////////////////////////

		public void ВывестиСуммуВРубляхКопейкахВЯчейки(/*Данные, ТабличныйДокумент, ПрефиксЯчеек, КоличествоЯчеек*/)
		{
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Прав("                  " + Формат(Данные, "ЧЦ=" + (КоличествоЯчеек + 1) + "; ЧДЦ=0; ЧС=-2; ЧГ="), КоличествоЯчеек), ТабличныйДокумент, ПрефиксЯчеек, КоличествоЯчеек);*/
		}
		// Разбивает строку (не разрывая слов) на подстроки указанной длинны,
		//							строки дополняются пробелами, переводы строк удаляются
		// Параметры
		//  ТекстСтроки  - Строка, которую необходимо разбить на подстроки
		//
		//  МассивДлинСтрок  - Массив длин строк, если в результирующей строке оказалось подстрок больше
		//                     Чем кодичество указанных длин, то все "лишние" строки выравниваются по последнему
		//                     значению длинны строки.
		// Возвращаемое значение:
		//   Строка   - разбитая на подстроки указанной длинны
		//

		public object РазбитьСтрокуНаПодСтроки(/*Знач ТекстСтроки, МассивДлинСтрок*/)
		{
			/*ВозвращаемаяСтрока = "";*/
			/*РазделителиСлов = " .,:;?!%\<>+-*/=_" + Символы.ПС;*/
			/*ТекстСтроки = СокрЛП(ТекстСтроки);*/
			/*// обыграем случай, когда у нас многострочная строка
*/
			if(true/*СтрЧислоСтрок(ТекстСтроки) > 1*/)
			{
			}
			if(true/*СтрЧислоСтрок(ВозвращаемаяСтрока) > 1*/)
			{
				/*ВыравненнаяСтрока = "";*/
				/*ВозвращаемаяСтрока = ВыравненнаяСтрока + Символы.ПС + СтрПолучитьСтроку(ВозвращаемаяСтрока, СтрЧислоСтрок(ВозвращаемаяСтрока));*/
			}
			/*ВозвращаемаяСтрока = СтрЗаменить(ВозвращаемаяСтрока, Символы.ПС, "");*/
			return null;
		}
		// РазбитьСтрокуПоСтрочно()

		public object ОписаниеПериодаВПечатнойФорме(/*ДатаС, ДатаПо*/)
		{
			return null;
		}
		// ОписаниеПериодаВПечатнойФорме()
		////////////////////////////////////////////////////////////////////////////////
		//  Формирование общих печатных форм
		// Формирует табличный документ с печатной формой заявление
		//
		// Параметры
		//  СтруктураДанных 		- Структура полученная с помощью функции СтруктураДанныхДляПечатиЗаявленийВФССОВыплатеПособия()
		//								и в последствии заполненная в процедуре вывода на печать, если передать не заполненную структуру
		//								вернется бланк заявления
		//
		// Возвращаемое значение:
		//   ТабличныйДокумент   	- печатная форма заявление в ФСС о выплате пособия
		//

		public object ПечатьЗаявлениеВФССОВыплатеПособия(/*СтруктураДанных, ИмяМакета = "ЗаявлениеВФССОВыплатеПособия_2011"*/)
		{
			/*ТабДокумент = Новый ТабличныйДокумент;*/
			/*ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаявлениеВФССОВыплатеПособия";*/
			/*ТабДокумент.ПолеСлева = 0;*/
			/*ТабДокумент.ПолеСправа = 0;*/
			/*Макет = ПолучитьОбщийМакет(ИмяМакета);*/
			/*ЭтоБланк2012года = Макет.Области.Найти("НаименованиеБанка_35") <> Неопределено;*/
			/*СписокВидовПособий = Новый СписокЗначений();*/
			/*СписокВидовПособий.Добавить(СтруктураДанных.ВидПособия);*/
			/*СписокВидовПособий.Добавить(СтруктураДанных.ВидПособия2);*/
			/*// Шапка формы
*/
			/*// Наименование  ФСС
*/
			/*ДлиныСтрок = Новый Массив();*/
			/*ДлиныСтрок.Добавить(27);*/
			/*НаименованиеТерриториальногоОрганаФСС = РазбитьСтрокуНаПодСтроки(СтруктураДанных.НаименованиеТерриториальногоОрганаФСС, ДлиныСтрок);*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(НаименованиеТерриториальногоОрганаФСС, Макет, "Наименование_ФСС_", 135);*/
			/*// ФИО заявителя в родительном падеже
*/
			/*ФИО = СтруктураДанных.ФИОСотрудника;*/
			/*УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), ФИО, 2, СтруктураДанных.ПолСотрудника, ФИО);*/
			/*Фамилия = Лев(ФИО, Найти(ФИО, " ") - 1);*/
			/*ФИО = СокрЛП(Сред(ФИО, Найти(ФИО, " ") + 1));*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Фамилия, 	Макет, "ФИО_Заявителя_", 27);*/
			/*Имя = Лев(ФИО, Найти(ФИО, " ") - 1);*/
			/*Отчество = СокрЛП(Сред(ФИО, Найти(ФИО, " ") + 1));*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Имя, 		Макет, "ФИО_Заявителя_", 27, 28);*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Отчество, 	Макет, "ФИО_Заявителя_", 27, 55);*/
			/*// Отмечаем вид пособия
*/
			if(true/*СписокВидовПособий.НайтиПоЗначению(Перечисления.ВидыПособийСоциальногоСтрахования.Нетрудоспособность) <> Неопределено*/)
			{
				/*Макет.Области["Нетрудоспособность"].Текст = "V";*/
			}
			if(true/*СписокВидовПособий.НайтиПоЗначению(Перечисления.ВидыПособийСоциальногоСтрахования.БеременностьРоды) <> Неопределено*/)
			{
				/*Макет.Области["БеременностьРоды"].Текст = "V";*/
			}
			if(true/*СписокВидовПособий.НайтиПоЗначению(Перечисления.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности) <> Неопределено*/)
			{
				/*Макет.Области["ПриПостановкеНаУчетВРанниеСрокиБеременности"].Текст = "V";*/
			}
			if(true/*СписокВидовПособий.НайтиПоЗначению(Перечисления.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка) <> Неопределено*/)
			{
				/*Макет.Области["ПриРожденииРебенка"].Текст = "V";*/
			}
			if(true/*СписокВидовПособий.НайтиПоЗначению(Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет) <> Неопределено*/)
			{
				/*Макет.Области["ПоУходуЗаРебенкомДоПолутораЛет"].Текст = "V";*/
			}
			if(true/*СписокВидовПособий.НайтиПоЗначению(Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай) <> Неопределено*/)
			{
				/*Макет.Области["НетрудоспособностьНесчастныйСлучай"].Текст = "V";*/
			}
			if(true/*СписокВидовПособий.НайтиПоЗначению(Перечисления.ВидыПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев) <> Неопределено*/)
			{
				/*Макет.Области["ДополнительныйОтпускПослеНесчастныхСлучаев"].Текст = "V";*/
			}
			/*// Отмечаем желательный способ получения пособия
*/
			if(true/*СтруктураДанных.ПеречислятьПособиеПочтовымПереводом <> Неопределено И СтруктураДанных.ПеречислятьПособиеПочтовымПереводом*/)
			{
				/*Макет.Области["ВыплатаПочтой"].Текст = "V";*/
			}
			/*// Выводим реквизиты банка
*/
			if(true/*Макет.Области["ВыплатаЧерезБанк"].Текст = "V"*/)
			{
				if(true/*ЭтоБланк2012года*/)
				{
					/*ДлиныСтрок = Новый Массив();*/
					/*ДлиныСтрок.Добавить(34);*/
					/*ДлиныСтрок.Добавить(43);*/
					/*ДлиныСтрок.Добавить(43);*/
					/*НаименованиеБанка = РазбитьСтрокуНаПодСтроки(СтруктураДанных.НаименованиеБанка, ДлиныСтрок);*/
					/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(НаименованиеБанка, Макет, "НаименованиеБанка_", 120);*/
					/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.КоррСчетБанка, Макет, "КорСчет_", 20);*/
				}
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.НомерЛицевогоСчета, Макет, "НомерСчета_", 20);*/
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.БИКБанка, Макет, "БИК_", 9);*/
			}
			/*// Выводим ФИО получателя
*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.ФИОСотрудника, Макет, "ФИО_Получателя_", 42);*/
			if(true/*ЭтоБланк2012года*/)
			{
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(СтруктураДанных.ДатаРождения, "ДФ=dd.MM.yyyy"),".",""), Макет, "ДатаРождения_", 8);*/
			}
			/*// Выводим данные удостоверения личности
*/
			/*// из серии нужно удалить лишние пробелы
*/
			/*ДокументСерия = СтруктураДанных.УдостоверениеЛичностиСерия;*/
			/*ДокументСерия = СтрЗаменить(ДокументСерия, " ", "");*/
			if(true/*СтруктураДанных.УдостоверениеЛичностиВид = Справочники.ДокументыУдостоверяющиеЛичность.ИМНС21*/)
			{
				/*Макет.Области["Паспорт"].Текст = "V";*/
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ДокументСерия, Макет, "ПаспортСерия_", 4);*/
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.УдостоверениеЛичностиНомер, Макет, "ПаспортНомер_", 6);*/
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(СтруктураДанных.УдостоверениеЛичностиДата, "ДФ=dd.MM.yyyy"),".",""), Макет, "ПаспортДата_", 8);*/
				if(true/*ЭтоБланк2012года*/)
				{
					/*ДлиныСтрок = Новый Массив();*/
					/*ДлиныСтрок.Добавить(38);*/
					/*ДлиныСтрок.Добавить(43);*/
					/*УдостоверениеЛичностиКемВыдан = РазбитьСтрокуНаПодСтроки(СтруктураДанных.УдостоверениеЛичностиКемВыдан, ДлиныСтрок);*/
					/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(УдостоверениеЛичностиКемВыдан, Макет, "ПаспортКемВыдан_", 81);*/
				}
			}
			if(true/*ЭтоБланк2012года*/)
			{
				/*ДокументСерия = СтруктураДанных.СерияДокументаНаПроживание;*/
				/*ДокументСерия = СтрЗаменить(ДокументСерия, " ", "");*/
				if(true/*Найти(НРег(СтруктураДанных.НаименованиеДокументаНаПроживание),"разрешение") > 0*/)
				{
					/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ДокументСерия, Макет, "РазрешениеСерия_", 2);*/
					/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.НомерДокументаНаПроживание, Макет, "РазрешениеНомер_", 8);*/
					/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(СтруктураДанных.ДатаВыдачиДокументаНаПроживание, "ДФ=dd.MM.yyyy"),".",""), Макет, "РазрешениеДата_", 8);*/
				}
			}
			/*// Выводим адреса
*/
			if(true/*ЭтоБланк2012года*/)
			{
				/*ДлиныСтрок = Новый Массив();*/
				/*ДлиныСтрок.Добавить(23);*/
				/*ДлиныСтрок.Добавить(43);*/
				/*ДлиныСтрок.Добавить(43);*/
				/*ДлиныСтрок.Добавить(43);*/
				/*Адрес = РазбитьСтрокуНаПодСтроки(УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(СтруктураДанных.АдресРегистрации), ДлиныСтрок);*/
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Адрес, Макет, "АдресРегистрации_", 152);*/
				if(true/*Макет.Области["ВыплатаПочтой"].Текст = "V"*/)
				{
					/*Адрес = РазбитьСтрокуНаПодСтроки(УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(СтруктураДанных.АдресПроживания), ДлиныСтрок);*/
					/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Адрес, Макет, "Адрес_", 152);*/
				}
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.Телефон, Макет, "Тел_", 15);*/
			}
			/*// Пособия по временной нетрудоспособности
*/
			if(true/*ЭтоБланк2012года*/)
			{
				/*ПрефиксОбласти = "";*/
				if(true/*Макет.Области["Нетрудоспособность"].Текст = "V" Или Макет.Области["НетрудоспособностьНесчастныйСлучай"].Текст = "V"*/)
				{
					/*ПрефиксОбласти = "Нетрудоспособность";*/
				}
				if(true/*ЗначениеЗаполнено(ПрефиксОбласти)*/)
				{
					/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(СтруктураДанных.ДатаВыдачиБольничного, "ДФ=dd.MM.yyyy"),".",""),  Макет, ПрефиксОбласти + "ЛН_Дата_", 8);*/
					/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.НомерБольничного, Макет, ПрефиксОбласти + "ЛН_Номер_", 12);*/
				}
			}
			/*ДлинаНомераСправок = ?(ЭтоБланк2012года, 10, 5);*/
			/*// Единовременное пособие при рождении ребенка:
*/
			if(true/*ЭтоБланк2012года И ЗначениеЗаполнено(СтруктураДанных.ВидСправкиОРожденииРебенка)*/)
			{
				if(true/*СтруктураДанных.ВидСправкиОРожденииРебенка = Перечисления.ВидыСправокОРожденииРебенка.ФормаНомер24*/)
				{
					/*Макет.Области["Форма24"].Текст = "V";*/
				}
			}
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(СтруктураДанных.ДатаСправкиОРождении, "ДФ=dd.MM.yyyy"),".",""),  Макет, "СправкаДата_", 8);*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.НомерСправкиОРождении, Макет, "СправкаНомер_", ДлинаНомераСправок);*/
			/*// Выводим дату и номер справки от другого родителя
*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(СтруктураДанных.ДатаСправкиОтДругогоРодителя, "ДФ=dd.MM.yyyy"),".",""),  Макет, "СправкаОтДругогоРодителяДата_", 8);*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.НомерСправкиОтДругогоРодителя, Макет, "СправкаОтДругогоРодителяНомер_", ДлинаНомераСправок);*/
			/*// Выводим Дату и номер решения об усыновлении
*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(СтруктураДанных.ДатаРешенияОбУсыновлении, "ДФ=dd.MM.yyyy"),".",""),  Макет, "РешениеОбУсыновленииДата_", 8);*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.НомерРешенияОбУсыновлении, Макет, "РешениеОбУсыновленииНомер_", ДлинаНомераСправок);*/
			/*// Выводим Дату и номер договора о передаче на воспитание
*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(СтруктураДанных.ДатаДоговораОПередачеНаВоспитание, "ДФ=dd.MM.yyyy"),".",""),  Макет, "ДоговорОВоспитанииДата_", 8);*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.НомерДоговораОПередачеНаВоспитание, Макет, "ДоговорОВоспитанииНомер_", 5);*/
			/*// Выводим дату подачи заявления
*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(СтруктураДанных.ДатаПодачиЗаявления, "ДФ=dd.MM.yyyy"),".",""),  Макет, "ДатаПодачи_", 8);*/
			/*// Ежемесячное пособие по уходу за ребенком:
*/
			/*// Выводим данные о предыдущих детях
*/
			if(true/*СтруктураДанных.НаличиеДокументаОРожденииПредыдущегоРебенка <> Неопределено И СтруктураДанных.НаличиеДокументаОРожденииПредыдущегоРебенка*/)
			{
				/*Макет.Области["НаличиеДокументаОРожденииПредыдущегоРебенка"].Текст = "V";*/
			}
			if(true/*СтруктураДанных.НаличиеДокументаОСмертиПредыдущегоРебенка <> Неопределено И СтруктураДанных.НаличиеДокументаОСмертиПредыдущегоРебенка*/)
			{
				/*Макет.Области["НаличиеДокументаОСмертиПредыдущегоРебенка"].Текст = "V";*/
			}
			/*// Выводим информацию о справках о не получении пособия
*/
			if(true/*СтруктураДанных.СправкаОтОбоихРодителейОНеполученииПособия <> Неопределено И СтруктураДанных.СправкаОтОбоихРодителейОНеполученииПособия*/)
			{
				/*Макет.Области["СправкаОтОбоихРодителейОНеполученииПособия"].Текст = "V";*/
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(СтруктураДанных.ДатаСправкиОтОтца, "ДФ=dd.MM.yyyy"),".",""),  Макет, "ДатаСправкиОтОтца_", 8);*/
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.НомерСправкиОтОтца,  Макет, "НомерСправкиОтОтца_", ДлинаНомераСправок);*/
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(СтруктураДанных.ДатаСправкиОтМатери, "ДФ=dd.MM.yyyy"),".",""),  Макет, "ДатаСправкиОтМатери_", 8);*/
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.НомерСправкиОтМатери,  Макет, "НомерСправкиОтМатери_", ДлинаНомераСправок);*/
			}
			/*// И по другим местам работы
*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(СтруктураДанных.ДатаСправкиПоДругимМестамРаботы, "ДФ=dd.MM.yyyy"),".",""),  Макет, "ДатаСправкиПоДругимМестамРаботы_", 8);*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.НомерСправкиПоДругимМестамРаботы,  Макет, "НомерСправкиПоДругимМестамРаботы_", ?(ЭтоБланк2012года, 8, 5));*/
			/*// Выводим сведения о проживании работе в зоне
*/
			/*// в зависимости от типа пособия
*/
			if(true/*Макет.Области["ПриРожденииРебенка"].Текст = "V"*/)
			{
				/*// Выводим дату и номер свидетельства о рождении
*/
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(СтруктураДанных.ДатаСвидетельстваОРождении, "ДФ=dd.MM.yyyy"),".",""),  Макет, "СвидетельствоОРожденииДата_", 8);*/
				if(true/*ЭтоБланк2012года*/)
				{
					/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.СерияСвидетельстваОРождении, Макет, "СвидетельствоОРожденииСерия_", ДлинаНомераСправок);*/
				}
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.НомерСвидетельстваОРождении, Макет, "СвидетельствоОРожденииНомер_", ДлинаНомераСправок);*/
				/*// Выводим Дату и номер решения об опеке
*/
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(СтруктураДанных.ДатаРешенияОбОпеке, "ДФ=dd.MM.yyyy"),".",""),  Макет, "РешениеОбОпекеДата_", 8);*/
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.НомерРешенияОбОпеке, Макет, "РешениеОбОпекеНомер_", ДлинаНомераСправок);*/
				/*// Выводим дату и номер иного подтверждения о рождении
*/
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(СтруктураДанных.ДатаИногоПодтвержденияРождения, "ДФ=dd.MM.yyyy"),".",""),  Макет, "ИноеПодтверждениеРожденияДата_", 8);*/
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.НомерИногоПодтвержденияРождения, Макет, "ИноеПодтверждениеРожденияНомер_", ДлинаНомераСправок);*/
			}
			if(true/*Макет.Области["ПоУходуЗаРебенкомДоПолутораЛет"].Текст = "V"*/)
			{
				/*// Выводим дату и номер свидетельства о рождении
*/
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(СтруктураДанных.ДатаСвидетельстваОРождении, "ДФ=dd.MM.yyyy"),".",""),  Макет, "СвидетельствоОРожденииIIДата_", 8);*/
				if(true/*ЭтоБланк2012года*/)
				{
					/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.СерияСвидетельстваОРождении, Макет, "СвидетельствоОРожденииIIСерия_", ДлинаНомераСправок);*/
				}
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.НомерСвидетельстваОРождении, Макет, "СвидетельствоОРожденииIIНомер_", ДлинаНомераСправок);*/
				/*// Выводим Дату и номер решения об опеке
*/
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(СтруктураДанных.ДатаРешенияОбОпеке, "ДФ=dd.MM.yyyy"),".",""),  Макет, "РешениеОбОпекеIIДата_", 8);*/
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.НомерРешенияОбОпеке, Макет, "РешениеОбОпекеIIНомер_", ДлинаНомераСправок);*/
				/*// Выводим дату и номер иного подтверждения о рождении
*/
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(СтруктураДанных.ДатаИногоПодтвержденияРождения, "ДФ=dd.MM.yyyy"),".",""),  Макет, "ИноеПодтверждениеРожденияIIДата_", 8);*/
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.НомерИногоПодтвержденияРождения, Макет, "ИноеПодтверждениеРожденияIIНомер_", ДлинаНомераСправок);*/
				if(true/*ЭтоБланк2012года*/)
				{
					/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(СтруктураДанных.ДатаПриказаНаОтпускПоУходуЗаРебенком, "ДФ=dd.MM.yyyy"),".",""),  Макет, "ДатаПриказаНаОтпускПоУходуЗаРебенком_", 8);*/
					/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(СтруктураДанных.ОтпускПоУходуЗаРебенкомДатаНачало, "ДФ=dd.MM.yyyy"),".",""),  Макет, "ОтпускПоУходуЗаРебенкомДатаНачало_", 8);*/
					/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(СтруктураДанных.ОтпускПоУходуЗаРебенкомДатаОкончание, "ДФ=dd.MM.yyyy"),".",""),  Макет, "ОтпускПоУходуЗаРебенкомДатаОкончание_", 8);*/
					/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Прав(СтруктураДанных.НомерПриказаНаОтпускПоУходуЗаРебенком,9), Макет, "НомерПриказаНаОтпускПоУходуЗаРебенком_", 9);*/
				}
			}
			if(true/*СтруктураДанных.ПроживаниеВЗоне <> Неопределено И СтруктураДанных.ПроживаниеВЗоне*/)
			{
				/*Макет.Области["ПроживаниеВЗоне"].Текст = "V";*/
			}
			if(true/*СтруктураДанных.РаботаВЗоне <> Неопределено И СтруктураДанных.РаботаВЗоне*/)
			{
				/*Макет.Области["РаботаВЗоне"].Текст = "V";*/
			}
			if(true/*СтруктураДанных.ВЗонеСПравомНаОтселение <> Неопределено И СтруктураДанных.ВЗонеСПравомНаОтселение*/)
			{
				/*Макет.Области["ВЗонеСПравомНаОтселение"].Текст = "V";*/
			}
			if(true/*СтруктураДанных.ВЗонеОтселения <> Неопределено И СтруктураДанных.ВЗонеОтселения*/)
			{
				/*Макет.Области["ВЗонеОтселения"].Текст = "V";*/
			}
			if(true/*СтруктураДанных.ВЗонеСЛьготнымСтатусом <> Неопределено И СтруктураДанных.ВЗонеСЛьготнымСтатусом*/)
			{
				/*Макет.Области["ВЗонеСЛьготнымСтатусом"].Текст = "V";*/
			}
			/*// Выводим ннаименование работодателя и тип занятости получателя пособия
*/
			/*ДлиныСтрок = Новый Массив();*/
			/*ДлиныСтрок.Добавить(42);*/
			/*НаименованиеРаботодателяИВидЗанятости = "" + СтруктураДанных.НаименованиеОрганизации;*/
			/*НаименованиеРаботодателяИВидЗанятости = НаименованиеРаботодателяИВидЗанятости + ?(ПустаяСтрока(НаименованиеРаботодателяИВидЗанятости), "", ", ") + СтруктураДанных.ВидЗанятостиСотрудника;*/
			/*НаименованиеРаботодателяИВидЗанятости = РазбитьСтрокуНаПодСтроки(НаименованиеРаботодателяИВидЗанятости, ДлиныСтрок);*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(НаименованиеРаботодателяИВидЗанятости, Макет, "РаботодательИВидЗанятости_", ?(ЭтоБланк2012года,168,84));*/
			/*// Выводим СНИЛС и ИНН получателя
*/
			/*// из СНИЛСа удаляем - и пробелы
*/
			/*СНИЛС = СтруктураДанных.СНИЛССотрудника;*/
			/*СНИЛС = СтрЗаменить(СНИЛС,"-","");*/
			/*СНИЛС = СтрЗаменить(СНИЛС," ","");*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СНИЛС, Макет, "СНИЛС_", 11);*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.ИННСотрудника, Макет, "ИНННетрудоспособного_", 12);*/
			/*// Выводим данные Заявление работника о замене календарных годов
*/
			if(true/*СтруктураДанных.ЗаявлениеРаботникаОЗаменеКалендарныхГодов <> Неопределено И СтруктураДанных.ЗаявлениеРаботникаОЗаменеКалендарныхГодов*/)
			{
				/*Макет.Области["ЗаявлениеРаботникаОЗаменеКалендарныхГодов"].Текст = "V";*/
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Формат(СтруктураДанных.ПервыйГод,"ЧЦ=2; ЧВН="), Макет, "ПервыйГод_", 2);*/
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Формат(СтруктураДанных.ВторойГод,"ЧЦ=2; ЧВН="), Макет, "ВторойГод_", 2);*/
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Формат(СтруктураДанных.ТретийГод,"ЧЦ=2; ЧВН="), Макет, "ТретийГод_", 2);*/
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Формат(СтруктураДанных.ЧетвертыйГод,"ЧЦ=2; ЧВН="), Макет, "ЧетвертыйГод_", 2);*/
			}
			/*// Выводим данные Заявление работника об исчислении пособий по материнству
*/
			if(true/*СтруктураДанных.ЗаявлениеПоМатеринству2010 <> Неопределено И СтруктураДанных.ЗаявлениеПоМатеринству2010*/)
			{
				/*Макет.Области["ЗаявлениеПоМатеринству2010"].Текст = "V";*/
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(СтруктураДанных.ЗаявлениеПоМатеринству2010ДатаНачало, "ДФ=dd.MM.yyyy"),".",""),  Макет, "ЗаявлениеПоМатеринству2010ДатаНачало_", 8);*/
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(СтруктураДанных.ЗаявлениеПоМатеринству2010ДатаОкончание, "ДФ=dd.MM.yyyy"),".",""),  Макет, "ЗаявлениеПоМатеринству2010ДатаОкончание_", 8);*/
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.ЧислоКалендарныхДней, Макет, "ЧислоКалендарныхДней_", 3);*/
			}
			/*// Выводим данные по расчету среднего заработка
*/
			if(true/*ЭтоБланк2012года*/)
			{
				if(true/*СтруктураДанных.НеполноеРабочееВремя <> Неопределено И СтруктураДанных.НеполноеРабочееВремя*/)
				{
					/*Макет.Области["НеполноеРабочееВремя"].Текст = "V";*/
					/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Формат(СтруктураДанных.ДоляВремени, "ЧЦ=4; ЧДЦ=2; ЧРД=,; ЧН=' '"), Макет, "Ставка_", 4);*/
				}
				/*ВывестиСуммуВРубляхКопейкахВЯчейки(СтруктураДанных.ТарифнаяСтавкаОклад, Макет, "ТарифнаяСтавкаОклад_", 9);*/
				/*ВывестиСуммуВРубляхКопейкахВЯчейки(СтруктураДанных.СреднийЗаработок, Макет, "СреднийЗаработок_", 10);*/
			}
			/*// Выводим период простоя
*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(СтруктураДанных.ПериодПростояДатаНачало, "ДФ=dd.MM.yyyy"),".",""),  Макет, "ПериодПростояДатаНачало_", 8);*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(СтруктураДанных.ПериодПростояДатаОкончание, "ДФ=dd.MM.yyyy"),".",""),  Макет, "ПериодПростояДатаОкончание_", 8);*/
			if(true/*ЭтоБланк2012года*/)
			{
				/*ВывестиСуммуВРубляхКопейкахВЯчейки(СтруктураДанных.СреднедневнойЗаработокНаПериодПростоя, Макет, "СреднедневнойЗаработокНаПериодПростоя_", 7);*/
			}
			/*// Выводим Период, за который пособие по временной нетрудоспособности не назначается
*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(СтруктураДанных.ПособияНеНазначаютсяДатаНачало, "ДФ=dd.MM.yyyy"),".",""),  Макет, "ПособияНеНазначаютсяДатаНачало_", 8);*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(СтруктураДанных.ПособияНеНазначаютсяДатаОкончание, "ДФ=dd.MM.yyyy"),".",""),  Макет, "ПособияНеНазначаютсяДатаОкончание_", 8);*/
			/*// Выводим должность и ФИО руководителя, а также ставим галочку о том, что он подтверждает сведения
*/
			if(true/*ЗначениеЗаполнено(СтруктураДанных.ФИОРуководителя)*/)
			{
				/*Макет.Области["Подтверждаю"].Текст = "V";*/
			}
			/*Макет.Области["ДолжностьФИОРуководителя"].Текст = "" + СтруктураДанных.ДолжностьРуководителя + ", " + СтруктураДанных.ФИОРуководителя;*/
			if(true/*ЭтоБланк2012года*/)
			{
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.ТелефонСоставителя, Макет, "ТелефонСоставителя_", 20);*/
			}
			/*ТабДокумент.Вывести(Макет);*/
			return null;
		}
		// ПечатьЗаявлениеВФССОВыплатеПособия()
		// Формирует опись заявлений и документов для передачи в ФСС
		//
		// Параметры
		//  СтруктураДанных  		- Строка выборки по шапке документа, который выводится на печать
		//  ВыборкаПоТЧРаботникиОрганизации - Выборка по табличной части РаботникиОрганизации
		//
		// Возвращаемое значение:
		//   Табличный документ   - <описание возвращаемого значения>
		//

		public object ПечатьОписьЗаявленийИДокументовВФСС(/*СтруктураДанных, ВыборкаПоТЧРаботникиОрганизации, ИмяМакета = "ОписьЗаявленийИДокументовВФСС_2011"*/)
		{
			/*ТабДокумент = Новый ТабличныйДокумент;*/
			/*ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОписьЗаявленийИДокументовВФСС";*/
			/*Макет = ПолучитьОбщийМакет(ИмяМакета);*/
			/*ОбластьШапка = Макет.ПолучитьОбласть("Шапка");*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.РегистрационныйНомерФСС, ОбластьШапка, "РегистрационныйНомер_", 10);*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.ДополнительныйКодФСС, ОбластьШапка, "ДополнительныйКод_", 10);*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.КодПодчиненностиФСС, ОбластьШапка, "КодПодчиненности_", 5);*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.ИННОрганизации, ОбластьШапка, "ИНН_", 12);*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.КППОрганизации, ОбластьШапка, "КПП_", 9);*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.ОрганизацияСокращенно, ОбластьШапка, "Страхователь_", 29);*/
			/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.НаименованиеТерриториальногоОрганаФСС, ОбластьШапка, "Фонд_", 38);*/
			/*ТабДокумент.Вывести(ОбластьШапка);*/
			while(true/*ВыборкаПоТЧРаботникиОрганизации.Следующий()*/)
			{
				if(true/*ВыборкаПоТЧРаботникиОрганизации.НомерСтроки > 1*/)
				{
					/*ОбластьСтрока = Макет.ПолучитьОбласть("Строка");*/
					/*ТабДокумент.Вывести(ОбластьСтрока);*/
				}
				/*НомерСтроки = Формат(ВыборкаПоТЧРаботникиОрганизации.НомерСтроки, "ЧЦ=2; ЧГ=");*/
				/*НомерСтроки = Лев("  ", 2 - СтрДлина(НомерСтроки)) + НомерСтроки;*/
				/*ДлиныСтрок = Новый Массив();*/
				/*ДлиныСтрок.Добавить(17);*/
				/*ФИО = РазбитьСтрокуНаПодСтроки(ОбщегоНазначения.ФамилияИнициалыФизЛица(ВыборкаПоТЧРаботникиОрганизации.ФИОСотрудника), ДлиныСтрок);*/
				/*ДокументыОснования = РазбитьСтрокуНаПодСтроки(ВыборкаПоТЧРаботникиОрганизации.ДокументыОснования, ДлиныСтрок);*/
				/*КоличествоСтраниц = Формат(ВыборкаПоТЧРаботникиОрганизации.КоличествоСтраниц, "ЧЦ=4; ЧГ=");*/
				/*КоличествоСтраниц = Лев("    ", 4 - СтрДлина(КоличествоСтраниц)) + КоличествоСтраниц;*/
				/*ПерваяСтрокаВыводилась = Ложь;*/
				while(true/*СтрДлина(ФИО) > 0 ИЛИ СтрДлина(ДокументыОснования) > 0 ИЛИ НЕ ПерваяСтрокаВыводилась*/)
				{
					/*ОбластьСтрока = Макет.ПолучитьОбласть("Строка");*/
					if(true/*НЕ ПерваяСтрокаВыводилась*/)
					{
						/*ПерваяСтрокаВыводилась = Истина;*/
						/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(НомерСтроки, ОбластьСтрока, "НПП_", 2);*/
						/*ОбластьСтрока.Области["ВидВыплаты"].Текст = ВыборкаПоТЧРаботникиОрганизации.ВидВыплаты;*/
						/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(КоличествоСтраниц, ОбластьСтрока, "КоличествоСраниц_", 4);*/
					}
					if(true/*СтрДлина(ФИО) <= 17*/)
					{
						/*СтрокаФИОНаПечать = ФИО;*/
						/*ФИО = "";*/
					}
					if(true/*СтрДлина(ДокументыОснования) <= 17*/)
					{
						/*СтрокаДокументыНаПечать = ДокументыОснования;*/
						/*ДокументыОснования = "";*/
					}
					/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрокаФИОНаПечать, ОбластьСтрока, "ФИО_", 17);*/
					/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрокаДокументыНаПечать, ОбластьСтрока, "Документы_", 17);*/
					/*ТабДокумент.Вывести(ОбластьСтрока);*/
				}
				/*;;*/
			}
			/*; 
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");*/
			if(true/*ОбластьПодвал.Области.Найти("Тел_1") <> Неопределено*/)
			{
				/*ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.ТелефонСоставителя, ОбластьПодвал, "Тел_", 20);*/
			}
			/*ОбластьПодвал.Области["ДолжностьФИОРуководителя"].Текст = "" + СтруктураДанных.ДолжностьРуководителя + ", " + СтруктураДанных.ФИОРуководителя;*/
			/*ТабДокумент.Вывести(ОбластьПодвал);*/
			return null;
		}
		// ПечатьОписьЗаявленийИДокументовВФСС()
		// Формирует набор полей необходимый для печати Заявления в ФСС о выплате пособия
		//
		// Параметры
		//  <Параметр1>  - <Тип.Вид> - <описание параметра>
		//                 <продолжение описания параметра>
		//  <Параметр2>  - <Тип.Вид> - <описание параметра>
		//                 <продолжение описания параметра>
		//
		// Возвращаемое значение:
		//   Пустую структуру полей, необходимых для печати Заявления в ФСС о выплате пособия
		//

		public object СтруктураДанныхДляПечатиЗаявленийВФССОВыплатеПособия(/**/)
		{
			/*// ПеречислениеСсылка.ВидыПособийСоциальногоСтрахования - необходим для определения какую
*/
			/*// галочку поставить в шапке и какой раздел заполнять сведениями о документах подтверждения рождения
*/
			/*// ПеречислениеСсылка.ВидыПособийСоциальногоСтрахования - если заявление оформляется по двум пособиям
*/
			/*// Дата
*/
			/*// Строка
*/
			/*// Строка
*/
			/*// Строка
*/
			/*// Строка
*/
			/*// Строка
*/
			/*// Дата
*/
			/*// Строка
*/
			/*// ПеречислениеСсылка.ПолФизическихЛиц - необходим для склонения ФИО заявителя в родительный падеж
*/
			/*// Строка
*/
			/*// Строка
*/
			/*// строка
*/
			/*// СправочникСсылка.ДокументыУдостоверяющиеЛичность - необходим для определения в какой документ писать
*/
			/*// Строка
*/
			/*// Строка
*/
			/*// Строка
*/
			/*// Дата
*/
			/*// Дата
*/
			/*// Строка
*/
			/*// Строка
*/
			/*// Булево
*/
			/*// Строка
*/
			/*// Строка
*/
			/*// Строка
*/
			/*// Строка
*/
			/*// Строка
*/
			/*// Строка
*/
			/*// Строка
*/
			/*// Строка
*/
			/*// Дата
*/
			/*// Дата
*/
			/*// Строка
*/
			/*// Дата
*/
			/*// Строка
*/
			/*// ПеречислениеСсылка.ВидыСправокОРожденииРебенка
*/
			/*// Дата
*/
			/*// Строка
*/
			/*// Дата
*/
			/*// Строка
*/
			/*// Строка
*/
			/*// Дата
*/
			/*// Строка
*/
			/*// Дата
*/
			/*// Строка
*/
			/*// Дата
*/
			/*// Строка
*/
			/*// Дата
*/
			/*// Строка
*/
			/*// Дата
*/
			/*// Строка
*/
			/*// Булево
*/
			/*// Булево
*/
			/*// Булево
*/
			/*// Булево
*/
			/*// Булево
*/
			/*// Дата
*/
			/*// Строка
*/
			/*// Дата
*/
			/*// Строка
*/
			/*// Дата
*/
			/*// Строка
*/
			/*// Булево
*/
			/*// Булево
*/
			/*// Булево
*/
			/*// Булево
*/
			/*// Булево
*/
			/*// Булево
*/
			/*// Число(2)
*/
			/*// Число(2)
*/
			/*// Число(2)
*/
			/*// Число(2)
*/
			/*// Булево
*/
			/*// Дата
*/
			/*// Дата
*/
			/*// Число(3)
*/
			/*// Булево
*/
			/*// Число(4.2)
*/
			/*// Число(10.2)
*/
			/*// Число(10.2)
*/
			/*// Дата
*/
			/*// Дата
*/
			/*// Число(10.2)
*/
			/*// Дата
*/
			/*// Дата
*/
			/*// Дата
*/
			/*// Строка
*/
			/*// Дата
*/
			/*// Дата
*/
			/*);*/
			return null;
		}
		// СтруктураДанныхДляПечатиЗаявленийВФССОВыплатеПособия()
		////////////////////////////////////////////////////////////////////////////////

		public object ПроверкаУчастияВПилотномПроектеИОтказОтДействия(/*Организация, ПериодРегистрации, ЗаголовокОкна, ТекстОписанияДействия*/)
		{
			if(true/*ЗначениеЗаполнено(Организация)*/)
			{
				/*РезультатПроверки = УчастникиПилотногоПроектаБезДатыВступленияВПроект(Организация);*/
				if(true/*Не РезультатПроверки.ПроверкаПрошлаУспешно*/)
				{
					/*Форма = ПолучитьОбщуюФорму("ФормаОповещенияПилотногоПроекта");*/
					/*Форма.ЭлементыФормы.КнопкаДействие1.Заголовок = "Перейти к настройке параметров учета";*/
					/*Форма.ЭлементыФормы.КнопкаДействие2.Заголовок = "Перейти к редактированию ИНН и КПП";*/
					/*ТекстВопросаДействия = СтрЗаменить(ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация % зарегистрирована"), "%", """" + Строка(Организация) + """") + " в одном из регионов, ";*/
					if(true/*ПериодРегистрации < РезультатПроверки.Организации[Организация]*/)
					{
						/*ТекстВопросаДействия = ТекстВопросаДействия + "где в 2011-2012 годах проводится Пилотный проект ФСС по непосредственной выплате пособий."
					+ Символы.ПС + "В параметрах учета необходимо указать дату вступления в Пилотный проект, либо уточнить ИНН и КПП " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("организации") + ".";*/
						/*Форма.ЭлементыФормы.НадписьДействияПользователя.Заголовок = ТекстВопросаДействия;*/
						/*Ответ = Форма.ОткрытьМодально();*/
						if(true/*Ответ = "ПараметрыУчета"*/)
						{
							/*ПроцедурыУправленияПерсоналом.ОткрытьФормуНастройкаПараметровУчета("РазмерыПособий", Новый Структура("Организация, ОбособленноеПодразделение", ОбщегоНазначения.ГоловнаяОрганизация(Организация), Организация));*/
						}
					}
				}
			}
			return null;
		}

		public object УчастникиПилотногоПроектаБезДатыВступленияВПроект(/*Организация = Неопределено*/)
		{
			/*СоответствиеПилотногоПроекта = Новый Соответствие;*/
			/*СоответствиеПилотногоПроекта.Вставить("09",'20110701');*/
			/*// Карачаево-Черкесская респ.
*/
			/*СоответствиеПилотногоПроекта.Вставить("52",'20110701');*/
			/*// Нижегородская обл.
*/
			/*СоответствиеПилотногоПроекта.Вставить("30",'20120701');*/
			/*// Астраханская обл.
*/
			/*СоответствиеПилотногоПроекта.Вставить("45",'20120701');*/
			/*// Курганская обл.
*/
			/*СоответствиеПилотногоПроекта.Вставить("53",'20120701');*/
			/*// Новгородская обл.
*/
			/*СоответствиеПилотногоПроекта.Вставить("54",'20120701');*/
			/*// Новосибирская обл.
*/
			/*СоответствиеПилотногоПроекта.Вставить("68",'20120701');*/
			/*// Тамбовская обл.
*/
			/*СоответствиеПилотногоПроекта.Вставить("27",'20120701');*/
			/*// Хабаровский край
*/
			/*Запрос = Новый Запрос;*/
			/*Организации = Новый Массив;*/
			if(true/*ЗначениеЗаполнено(Организация)*/)
			{
				if(true/*СоответствиеПилотногоПроекта[Лев(ОбщегоНазначения.ПолучитьЗначениеРеквизита(Организация, "КПП"),2)] <> Неопределено*/)
				{
					/*Организации.Добавить(Организация);*/
				}
			}
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	УчетнаяПолитикаПоРасчетуЗарплатыОрганизацийИхПодразделений.ДатаПередачиФССВыплатыПособий,
	|	Организации.Ссылка,
	|	Организации.КПП
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоРасчетуЗарплатыОрганизацийИхПодразделений КАК УчетнаяПолитикаПоРасчетуЗарплатыОрганизацийИхПодразделений
	|		ПО (УчетнаяПолитикаПоРасчетуЗарплатыОрганизацийИхПодразделений.Организация = Организации.Ссылка)
	|ГДЕ
	|	Организации.Ссылка В(&Организации)";*/
			/*Запрос.УстановитьПараметр("Организации", Организации);*/
			/*Организации = Новый Соответствие;*/
			/*Выборка = Запрос.Выполнить().Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				if(true/*Не ЗначениеЗаполнено(Выборка.ДатаПередачиФССВыплатыПособий)*/)
				{
					/*Организации.Вставить(Выборка.Ссылка, СоответствиеПилотногоПроекта[Лев(Выборка.КПП,2)]);*/
				}
			}
			return null;
		}

		public void ПриНачалеРаботыСистемы(/**/)
		{
			if(true/*Не НастройкаПравДоступаПереопределяемый.ДоступнаРольРасчетчикаРегл()*/)
			{
			}
			/*РезультатПроверки = УчастникиПилотногоПроектаБезДатыВступленияВПроект();*/
			if(true/*Не РезультатПроверки.ПроверкаПрошлаУспешно*/)
			{
				/*ОписаниеОрг = "";*/
				/*Форма = ПолучитьОбщуюФорму("ФормаОповещенияПилотногоПроекта");*/
				/*Форма.ЭлементыФормы.НадписьДействияПользователя.Заголовок = 
			"В данной ИБ присутствуют " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("организации") + " (" + ОписаниеОрг + "), зарегистрированные в одном из регионов, " 
			+"где в 2011-2012 годах проводится Пилотный проект ФСС по непосредственной выплате пособий."
			+ Символы.ПС + "В параметрах учета необходимо для них указать дату вступления в Пилотный проект.";*/
				/*Форма.Организация = Организация;*/
				/*Форма.ЭлементыФормы.КнопкаДействие1.Заголовок = "Перейти к настройке параметров учета";*/
				/*Форма.ЭлементыФормы.КнопкаДействие2.Заголовок = "Укажу дату вступления в проект позже";*/
				/*Форма.Открыть();*/
			}
		}
		////////////////////////////////////////////////////////////////////////////////

		public object ОписаниеДокументаНаПроживание(/*Данные*/)
		{
			if(true/*Данные = Неопределено*/)
			{
			}
			return null;
		}

		public void ОткрытьФормуРедактированияДокументаНаПроживание(/*ФормаДокумента, ТекущаяСтрока*/)
		{
			if(true/*ТекущаяСтрока = Неопределено*/)
			{
			}
			/*ФормаРедактированияСтроки = ПолучитьОбщуюФорму("РедактированиеДокументаНаПроживание", ФормаДокумента, ТекущаяСтрока);*/
			/*ЗаполнитьЗначенияСвойств(ФормаРедактированияСтроки, ТекущаяСтрока);*/
			/*ФормаРедактированияСтроки.Открыть();*/
		}

		public void ЗаполнитьДанныеБанка(/*Банк, ТекущаяСтрока*/)
		{
			/*ДанныеОБанке = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Банк,"Наименование, Код, КоррСчет");*/
			/*ТекущаяСтрока.НаименованиеБанка = ДанныеОБанке.Наименование;*/
			/*ТекущаяСтрока.БИКБанка = ДанныеОБанке.Код;*/
			/*ТекущаяСтрока.КоррСчетБанка = ДанныеОБанке.КоррСчет;*/
		}

		public void ЗаполнитьДанныеЛПУ(/*ЛПУ, ТекущаяСтрока, АдресЛПУВФорме*/)
		{
			if(true/*ЗначениеЗаполнено(ЛПУ) И ТекущаяСтрока <> Неопределено*/)
			{
				/*РеквизитыЛПУ = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(ТекущаяСтрока.ЛПУ,"Наименование, Адрес, ОГРН, АдресКодПоКЛАДР");*/
				/*ТекущаяСтрока.НаименованиеЛПУ = РеквизитыЛПУ.Наименование;*/
				/*ТекущаяСтрока.АдресЛПУ = РеквизитыЛПУ.Адрес;*/
				/*ТекущаяСтрока.АдресЛПУКодПоКЛАДР = РеквизитыЛПУ.АдресКодПоКЛАДР;*/
				/*ТекущаяСтрока.ОГРН_ЛПУ = РеквизитыЛПУ.ОГРН;*/
				/*АдресЛПУВФорме = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(РеквизитыЛПУ.Адрес);*/
			}
		}
	}
}

