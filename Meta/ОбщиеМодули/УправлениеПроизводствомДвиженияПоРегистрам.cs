using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace V82.ОбщиеМодули
{
	public partial class УправлениеПроизводствомДвиженияПоРегистрам
	{
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ПРОВЕДЕНИЯ ДОКУМЕНТА "ПЕРЕНОС ЗАТРАТ НА ПРОИЗВОДСТВО (МЕЖДУНАРОДНЫЙ)"
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ПЕРЕСЧЕТА СУММЫ В ВАЛЮТУ МЕЖДУНАРОДНОГО УЧЕТА
		// Функция получает курс валюты регламентированного учета.
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//	Период - Дата - Дата курса
		//
		// Возвращаемое значение:
		//	Число - Курс валюты
		//

		public object ПолучитьКурсВалютыРегл(/*
	СтруктураШапкиДокумента,
	Период
	*/)
		{
			/*КурсыВалютыРегл = СтруктураШапкиДокумента.КурсыВалютыРегл;*/
			/*Курс = КурсыВалютыРегл.Получить(Период);*/
			if(true/*Курс = Неопределено*/)
			{
				/*Курс = МодульВалютногоУчета.ПолучитьКурсВалюты(СтруктураШапкиДокумента.ВалютаРегламентированногоУчета, Период).Курс;*/
				/*КурсыВалютыРегл.Вставить(Период, Курс);*/
			}
			return null;
		}
		// ПолучитьКурсВалютыРегл()
		// Функция получает курс валюты международного учета.
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//	Период - Дата - Дата курса
		//
		// Возвращаемое значение:
		//	Число - Курс валюты
		//

		public object ПолучитьКурсВалютыМежд(/*
	СтруктураШапкиДокумента,
	Период
	*/)
		{
			/*КурсыВалютыМежд = СтруктураШапкиДокумента.КурсыВалютыМежд;*/
			/*Курс = КурсыВалютыМежд.Получить(Период);*/
			if(true/*Курс = Неопределено*/)
			{
				/*Курс = МодульВалютногоУчета.ПолучитьКурсВалюты(СтруктураШапкиДокумента.ВалютаМеждународногоУчета, Период).Курс;*/
				/*КурсыВалютыМежд.Вставить(Период, Курс);*/
			}
			return null;
		}
		// ПолучитьКурсВалютыМежд()
		// Функция пересчитывает сумму из валюты регламентированного учета в валюту международного учета.
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//	Сумма - Число - Сумма в валюте регламентированного учета
		//	Период - Дата - Дата операции
		//
		// Возвращаемое значение:
		//	Число - Сумма в валюте международного учета
		//

		public object ПолучитьСуммуВВалютеМеждународногоУчета(/*
	СтруктураШапкиДокумента,
	Сумма, 
	Знач Период
	*/)
		{
			if(true/*СтруктураШапкиДокумента.ВалютаМеждународногоУчета = СтруктураШапкиДокумента.ВалютаРегламентированногоУчета*/)
			{
				/*СуммаМежд = Сумма;*/
			}
			return null;
		}
		// ПолучитьСуммуВВалютеМеждународногоУчета()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ПОЛУЧЕНИЯ СЧЕТА МЕЖДУНАРОДНОГО УЧЕТА
		// Функция получает счет межд. учета соответствующий счету бух. учета
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//	СчетБух - ПланСчетовСсылка.Хозрасчетный - Счет бух. учета
		//
		// Возвращаемое значение:
		//	ПланСчетовСсылка.Международный - Счет межд. учета
		//

		public object ПолучитьСчетМежд(/*
	СтруктураШапкиДокумента,
	Знач СчетБух
	*/)
		{
			/*СоответствиеСчетаМежд = СтруктураШапкиДокумента.СоответствиеСчетаМежд;*/
			/*СчетМежд = СоответствиеСчетаМежд.Получить(СчетБух);*/
			if(true/*СчетМежд = Неопределено*/)
			{
				/*СчетМежд = МеждународныйУчет.ПреобразоватьСчетаБУвСчетМСФО(СчетБух, , , , СтруктураШапкиДокумента.ПериодКонец).Счет;*/
				/*СоответствиеСчетаМежд.Вставить(СчетБух, СчетМежд);*/
			}
			return null;
		}
		// ПолучитьСчетМежд()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ПЕРЕНОСА ДВИЖЕНИЙ ПО РЕГИСТРУ "НЕЗАВЕРШЕННОЕ ПРОИЗВОДСТВО"
		// Функция формирует запрос по регистру "Незавершенное производство (бухгалтерский учет)".
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Структура реквизитов документа
		//
		// Возвращаемое значение:
		//	Запрос - Запрос по регистру "Незавершенное производство (бухгалтерский учет)"
		//

		public object СформироватьЗапросПоРегиструНезавершенноеПроизводство(/*
	СтруктураШапкиДокумента
	*/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	*,
	|	НезавершенноеПроизводство.СтатьяЗатрат.ВидЗатрат КАК ВидЗатрат
	|ИЗ
	|	РегистрНакопления.НезавершенноеПроизводствоБухгалтерскийУчет КАК НезавершенноеПроизводство
	|
	|ГДЕ
	|	НезавершенноеПроизводство.Организация = &Организация
	|	И НезавершенноеПроизводство.Период МЕЖДУ &ПериодНачало И &ПериодКонец
	|	И НезавершенноеПроизводство.Активность
	|	И НезавершенноеПроизводство.СтатьяЗатрат.ВидЗатрат <> &Амортизация
	|	И НезавершенноеПроизводство.КодОперации В (&КодыОпераций)
	|	И Не НезавершенноеПроизводство.Регистратор ССЫЛКА Документ.ТребованиеНакладная
	|	И Не НезавершенноеПроизводство.Регистратор ССЫЛКА Документ.РасчетСебестоимостиВыпуска
	|
	|УПОРЯДОЧИТЬ ПО
	|	НезавершенноеПроизводство.Регистратор,
	|	НезавершенноеПроизводство.НомерСтроки
	|";*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("ПериодНачало", СтруктураШапкиДокумента.ПериодНачало);*/
			/*Запрос.УстановитьПараметр("ПериодКонец", СтруктураШапкиДокумента.ПериодКонец);*/
			/*Запрос.УстановитьПараметр("Амортизация", Перечисления.ВидыЗатрат.Амортизация);*/
			/*КодыОпераций = Новый Массив;*/
			/*КодыОпераций.Добавить(Перечисления.КодыОперацийНезавершенноеПроизводство.СписаниеПрочихЗатратВПроизводство);*/
			/*КодыОпераций.Добавить(Перечисления.КодыОперацийНезавершенноеПроизводство.ВозвратМатериаловИзПроизводстваФикс);*/
			/*КодыОпераций.Добавить(Перечисления.КодыОперацийНезавершенноеПроизводство.ВнутренниеУслугиНаПроизводство);*/
			/*КодыОпераций.Добавить(Перечисления.КодыОперацийНезавершенноеПроизводство.УслугиКонтрагентаНаПроизводство);*/
			/*КодыОпераций.Добавить(Перечисления.КодыОперацийНезавершенноеПроизводство.СписаниеНЗПФикс);*/
			/*КодыОпераций.Добавить(Перечисления.КодыОперацийНезавершенноеПроизводство.ОтрицательныеЗатраты);*/
			/*КодыОпераций.Добавить(Перечисления.КодыОперацийНезавершенноеПроизводство.ОприходованиеНЗП);*/
			/*КодыОпераций.Добавить(Перечисления.КодыОперацийНезавершенноеПроизводство.ОприходованиеНЗПФикс);*/
			/*КодыОпераций.Добавить(Перечисления.КодыОперацийНезавершенноеПроизводство.КорректировкаНЗПФикс);*/
			/*КодыОпераций.Добавить(Перечисления.КодыОперацийНезавершенноеПроизводство.ПустаяСсылка());*/
			/*Запрос.УстановитьПараметр("КодыОпераций", КодыОпераций);*/
			return null;
		}
		// СформироватьЗапросПоРегиструНезавершенноеПроизводство()
		// Процедура формирует движения по регистру "Незавершенное производство (международный учет)"
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Структура реквизитов документа
		//	СчетУчета - ПланСчетовСсылка.Международный - Счет межд. учета
		//	НаборЗаписейНезавершенноеПроизводство - РегистрНакопленияНаборЗаписей - Набор записей регистра накопления "Незавершенное производство (Межд)"
		//

		public void СформироватьДвиженияПоРегиструНезавершенноеПроизводствоМежд(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	СчетУчета,
	НаборЗаписейНезавершенноеПроизводство
	*/)
		{
			/*Стоимость = ПолучитьСуммуВВалютеМеждународногоУчета(
		СтруктураШапкиДокумента,
		СтрокаВыборки.Стоимость, 
		СтрокаВыборки.Период
	);*/
			if(true/*Стоимость = 0
	   И СтрокаВыборки.Количество = 0*/)
			{
			}
			/*// В движениях по регистру "Незавершенное производство (международный учет)" должны быть заполнены измерения:
*/
			/*//	- Организация,
*/
			/*//	- Подразделение,
*/
			/*//	- СчетУчета,
*/
			/*//	- СтатьяЗатрат,
*/
			/*//	- НоменклатурнаяГруппа,
*/
			/*//	- Заказ,
*/
			/*//	- Затрата - всегда заполняется в случае указания статей затрат с видом затрат "Материальные",
*/
			/*//		для нематериальных статей затрат должен заполнятся способ распределения затрат.
*/
			/*//	- ХарактеристикаЗатраты,
*/
			/*//	- СерияЗатраты - заполняется, если ведется учет по сериям в НЗП.
*/
			/*НоваяСтрока = НаборЗаписейНезавершенноеПроизводство.Добавить();*/
			/*НоваяСтрока.Активность = Истина;*/
			/*ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВыборки);*/
			/*НоваяСтрока.СчетУчета = СчетУчета;*/
			/*НоваяСтрока.Стоимость = Стоимость;*/
			/*// Если в наборе записей 1000 строк, запишем набор.
*/
			if(true/*НаборЗаписейНезавершенноеПроизводство.Количество() = 1000*/)
			{
				/*НаборЗаписейНезавершенноеПроизводство.Записать(Ложь);*/
			}
		}
		// СформироватьДвиженияПоРегиструНезавершенноеПроизводствоМежд()
		// Процедура переносит движения по регистру "Незавершенное производство" в межд. учет
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Структура реквизитов документа
		//

		public void ПеренестиДвиженияПоРегиструНезавершенноеПроизводствоМежд(/*
	СтруктураШапкиДокумента
	*/)
		{
			/*Запрос = СформироватьЗапросПоРегиструНезавершенноеПроизводство(СтруктураШапкиДокумента);*/
			/*РезультатЗапроса = Запрос.Выполнить();*/
			if(true/*РезультатЗапроса.Пустой()*/)
			{
			}
			/*СтруктураНаборыЗаписей = Новый Структура;*/
			/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
		СтруктураШапкиДокумента, 
		"НезавершенноеПроизводствоМеждународныйУчет", 
		СтруктураНаборыЗаписей
	);*/
			if(true/*Не ПолученНаборЗаписей*/)
			{
			}
			/*Выборка = РезультатЗапроса.Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				if(true/*Выборка.ВидЗатрат = Перечисления.ВидыЗатрат.Материальные 
		   И Выборка.Количество = 0*/)
				{
					/*Продолжить;*/
				}
				/*СчетУчетаМежд = ПолучитьСчетМежд(
			СтруктураШапкиДокумента,
			Выборка.СчетУчета
		);*/
				if(true/*ЗначениеЗаполнено(СчетУчетаМежд)*/)
				{
					/*СформироватьДвиженияПоРегиструНезавершенноеПроизводствоМежд(
				СтруктураШапкиДокумента,
				Выборка,
				СчетУчетаМежд,
				СтруктураНаборыЗаписей.НезавершенноеПроизводствоМеждународныйУчет
			);*/
				}
			}
			if(true/*СтруктураНаборыЗаписей.НезавершенноеПроизводствоМеждународныйУчет.Модифицированность()*/)
			{
				/*СтруктураНаборыЗаписей.НезавершенноеПроизводствоМеждународныйУчет.Записать(Ложь);*/
			}
		}
		// ПеренестиДвиженияПоРегиструНезавершенноеПроизводствоМежд()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ПЕРЕНОСА ДВИЖЕНИЙ ПО РЕГИСТРУ "ЗАТРАТЫ"
		// Функция формирует запрос по регистру "Затраты (бухгалтерский учет)".
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Структура реквизитов документа
		//
		// Возвращаемое значение:
		//	Запрос - Запрос по регистру "Затраты (бухгалтерский учет)"
		//

		public object СформироватьЗапросПоРегиструЗатраты(/*
	СтруктураШапкиДокумента
	*/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	РегистрНакопления.ЗатратыБухгалтерскийУчет КАК Затраты
	|
	|ГДЕ
	|	Затраты.Организация = &Организация
	|	И Затраты.Период МЕЖДУ &ПериодНачало И &ПериодКонец
	|	И Затраты.Активность
	|	И Затраты.СтатьяЗатрат.ВидЗатрат <> &Амортизация
	|	И Затраты.КодОперации В (&КодыОпераций)
	|	И Не Затраты.Регистратор ССЫЛКА Документ.ТребованиеНакладная
	|	И Не Затраты.Регистратор ССЫЛКА Документ.РасчетСебестоимостиВыпуска
	|
	|УПОРЯДОЧИТЬ ПО
	|	Затраты.Регистратор,
	|	Затраты.НомерСтроки
	|";*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("ПериодНачало", СтруктураШапкиДокумента.ПериодНачало);*/
			/*Запрос.УстановитьПараметр("ПериодКонец", СтруктураШапкиДокумента.ПериодКонец);*/
			/*Запрос.УстановитьПараметр("Амортизация", Перечисления.ВидыЗатрат.Амортизация);*/
			/*КодыОпераций = Новый Массив;*/
			/*КодыОпераций.Добавить(Перечисления.КодыОперацийЗатраты.ПрочиеПостоянныеЗатраты);*/
			/*КодыОпераций.Добавить(Перечисления.КодыОперацийЗатраты.ВнутренниеУслугиНаПостоянныеЗатраты);*/
			/*КодыОпераций.Добавить(Перечисления.КодыОперацийЗатраты.УслугиКонтрагентаНаПостоянныеЗатраты);*/
			/*КодыОпераций.Добавить(Перечисления.КодыОперацийЗатраты.ПустаяСсылка());*/
			/*Запрос.УстановитьПараметр("КодыОпераций", КодыОпераций);*/
			return null;
		}
		// СформироватьЗапросПоРегиструЗатраты()
		// Процедура формирует движения по регистру "Затраты (международный учет)"
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Структура реквизитов документа
		//	СчетУчета - ПланСчетовСсылка.Международный - Счет межд. учета
		//	НаборЗаписейЗатраты - РегистрНакопленияНаборЗаписей - Набор записей регистра накопления "Затраты (Межд)"
		//

		public void СформироватьДвиженияПоРегиструЗатратыМежд(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	СчетУчета,
	НаборЗаписейЗатраты
	*/)
		{
			/*Сумма = ПолучитьСуммуВВалютеМеждународногоУчета(
		СтруктураШапкиДокумента,
		СтрокаВыборки.Сумма, 
		СтрокаВыборки.Период
	);*/
			if(true/*Сумма = 0*/)
			{
			}
			/*// В движениях по регистру "Затраты (международный учет)" должны быть заполнены измерения:
*/
			/*//	- Организация,
*/
			/*//	- Подразделение,
*/
			/*//	- СчетУчета,
*/
			/*//	- СтатьяЗатрат,
*/
			/*//	- НоменклатурнаяГруппа,
*/
			/*//	- Заказ.
*/
			/*НоваяСтрока = НаборЗаписейЗатраты.Добавить();*/
			/*НоваяСтрока.Активность = Истина;*/
			/*ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВыборки);*/
			/*НоваяСтрока.СчетУчета = СчетУчета;*/
			/*НоваяСтрока.Сумма = Сумма;*/
			/*// Если в наборе записей 1000 строк, запишем набор.
*/
			if(true/*НаборЗаписейЗатраты.Количество() = 1000*/)
			{
				/*НаборЗаписейЗатраты.Записать(Ложь);*/
			}
		}
		// СформироватьДвиженияПоРегиструЗатратыМежд()
		// Процедура переносит движения по регистру "Затраты" в межд. учет
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Структура реквизитов документа
		//

		public void ПеренестиДвиженияПоРегиструЗатратыМежд(/*
	СтруктураШапкиДокумента
	*/)
		{
			/*Запрос = СформироватьЗапросПоРегиструЗатраты(СтруктураШапкиДокумента);*/
			/*РезультатЗапроса = Запрос.Выполнить();*/
			if(true/*РезультатЗапроса.Пустой()*/)
			{
			}
			/*СтруктураНаборыЗаписей = Новый Структура;*/
			/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
		СтруктураШапкиДокумента, 
		"ЗатратыМеждународныйУчет", 
		СтруктураНаборыЗаписей
	);*/
			if(true/*Не ПолученНаборЗаписей*/)
			{
			}
			/*Выборка = РезультатЗапроса.Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				/*СчетУчетаМежд = ПолучитьСчетМежд(
			СтруктураШапкиДокумента,
			Выборка.СчетУчета
		);*/
				if(true/*ЗначениеЗаполнено(СчетУчетаМежд)*/)
				{
					/*СформироватьДвиженияПоРегиструЗатратыМежд(
				СтруктураШапкиДокумента,
				Выборка,
				СчетУчетаМежд,
				СтруктураНаборыЗаписей.ЗатратыМеждународныйУчет
			);*/
				}
			}
			if(true/*СтруктураНаборыЗаписей.ЗатратыМеждународныйУчет.Модифицированность()*/)
			{
				/*СтруктураНаборыЗаписей.ЗатратыМеждународныйУчет.Записать(Ложь);*/
			}
		}
		// ПеренестиДвиженияПоРегиструЗатратыМежд()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ПЕРЕНОСА ДВИЖЕНИЙ ПО РЕГИСТРУ "БРАК В ПРОИЗВОДСТВЕ"
		// Функция формирует запрос по регистру "Брак в производстве (бухгалтерский учет)".
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Структура реквизитов документа
		//
		// Возвращаемое значение:
		//	Запрос - Запрос по регистру "Брак в производстве (бухгалтерский учет)"
		//

		public object СформироватьЗапросПоРегиструБракВПроизводстве(/*
	СтруктураШапкиДокумента
	*/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	РегистрНакопления.БракВПроизводствеБухгалтерскийУчет КАК БракВПроизводстве
	|
	|ГДЕ
	|	БракВПроизводстве.Организация = &Организация
	|	И БракВПроизводстве.Период МЕЖДУ &ПериодНачало И &ПериодКонец
	|	И БракВПроизводстве.Активность
	|	И БракВПроизводстве.СтатьяЗатрат.ВидЗатрат <> &Амортизация
	|	И БракВПроизводстве.КодОперации В (&КодыОпераций)
	|	И Не БракВПроизводстве.Регистратор ССЫЛКА Документ.ТребованиеНакладная
	|	И Не БракВПроизводстве.Регистратор ССЫЛКА Документ.РасчетСебестоимостиВыпуска
	|
	|УПОРЯДОЧИТЬ ПО
	|	БракВПроизводстве.Регистратор,
	|	БракВПроизводстве.НомерСтроки
	|";*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("ПериодНачало", СтруктураШапкиДокумента.ПериодНачало);*/
			/*Запрос.УстановитьПараметр("ПериодКонец", СтруктураШапкиДокумента.ПериодКонец);*/
			/*Запрос.УстановитьПараметр("Амортизация", Перечисления.ВидыЗатрат.Амортизация);*/
			/*КодыОпераций = Новый Массив;*/
			/*КодыОпераций.Добавить(Перечисления.КодыОперацийБракВПроизводстве.ПрочиеПостоянныеЗатраты);*/
			/*КодыОпераций.Добавить(Перечисления.КодыОперацийБракВПроизводстве.ВнутренниеУслугиНаПостоянныеЗатраты);*/
			/*КодыОпераций.Добавить(Перечисления.КодыОперацийБракВПроизводстве.УслугиКонтрагентаНаПостоянныеЗатраты);*/
			/*КодыОпераций.Добавить(Перечисления.КодыОперацийБракВПроизводстве.ПустаяСсылка());*/
			/*Запрос.УстановитьПараметр("КодыОпераций", КодыОпераций);*/
			return null;
		}
		// СформироватьЗапросПоРегиструБракВПроизводстве()
		// Процедура формирует движения по регистру "Брак в производстве (международный учет)"
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Структура реквизитов документа
		//	СчетУчета - ПланСчетовСсылка.Международный - Счет межд. учета
		//	НаборЗаписейБракВПроизводстве - РегистрНакопленияНаборЗаписей - Набор записей регистра накопления "Брак в производстве (Межд)"
		//

		public void СформироватьДвиженияПоРегиструБракВПроизводствеМежд(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	СчетУчета,
	НаборЗаписейБракВПроизводстве
	*/)
		{
			/*Сумма = ПолучитьСуммуВВалютеМеждународногоУчета(
		СтруктураШапкиДокумента,
		СтрокаВыборки.Сумма, 
		СтрокаВыборки.Период
	);*/
			if(true/*Сумма = 0*/)
			{
			}
			/*// В движениях по регистру "Брак в производстве (международный учет)" должны быть заполнены измерения:
*/
			/*//	- Организация,
*/
			/*//	- Подразделение,
*/
			/*//	- СчетУчета,
*/
			/*//	- СтатьяЗатрат,
*/
			/*//	- НоменклатурнаяГруппа,
*/
			/*//	- Заказ
*/
			/*//	- Продукция,
*/
			/*//	- ХарактеристикаПродукции,
*/
			/*//	- СерияПродукции.
*/
			/*НоваяСтрока = НаборЗаписейБракВПроизводстве.Добавить();*/
			/*НоваяСтрока.Активность = Истина;*/
			/*ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВыборки);*/
			/*НоваяСтрока.СчетУчета = СчетУчета;*/
			/*НоваяСтрока.Сумма = Сумма;*/
			/*// Если в наборе записей 1000 строк, запишем набор.
*/
			if(true/*НаборЗаписейБракВПроизводстве.Количество() = 1000*/)
			{
				/*НаборЗаписейБракВПроизводстве.Записать(Ложь);*/
			}
		}
		// СформироватьДвиженияПоРегиструБракВПроизводствеМежд()
		// Процедура переносит движения по регистру "Брак в производстве" в межд. учет
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Структура реквизитов документа
		//

		public void ПеренестиДвиженияПоРегиструБракВПроизводствеМежд(/*
	СтруктураШапкиДокумента
	*/)
		{
			/*Запрос = СформироватьЗапросПоРегиструБракВПроизводстве(СтруктураШапкиДокумента);*/
			/*РезультатЗапроса = Запрос.Выполнить();*/
			if(true/*РезультатЗапроса.Пустой()*/)
			{
			}
			/*СтруктураНаборыЗаписей = Новый Структура;*/
			/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
		СтруктураШапкиДокумента, 
		"БракВПроизводствеМеждународныйУчет", 
		СтруктураНаборыЗаписей
	);*/
			if(true/*Не ПолученНаборЗаписей*/)
			{
			}
			/*Выборка = РезультатЗапроса.Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				/*СчетУчетаМежд = ПолучитьСчетМежд(
			СтруктураШапкиДокумента,
			Выборка.СчетУчета
		);*/
				if(true/*ЗначениеЗаполнено(СчетУчетаМежд)*/)
				{
					/*СформироватьДвиженияПоРегиструБракВПроизводствеМежд(
				СтруктураШапкиДокумента,
				Выборка,
				СчетУчетаМежд,
				СтруктураНаборыЗаписей.БракВПроизводствеМеждународныйУчет
			);*/
				}
			}
			if(true/*СтруктураНаборыЗаписей.БракВПроизводствеМеждународныйУчет.Модифицированность()*/)
			{
				/*СтруктураНаборыЗаписей.БракВПроизводствеМеждународныйУчет.Записать(Ложь);*/
			}
		}
		// ПеренестиДвиженияПоРегиструБракВПроизводствеМежд()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ПЕРЕНОСА ДВИЖЕНИЙ ПО РЕГИСТРУ "ЗАТРАТЫ НА ВЫПУСК ПРОДУКЦИИ"
		// Функция формирует запрос по регистру "Затраты на выпуск продукции (бухгалтерский учет)".
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Структура реквизитов документа
		//
		// Возвращаемое значение:
		//	Запрос - Запрос по регистру "Затраты на выпуск продукции (бухгалтерский учет)"
		//

		public object СформироватьЗапросПоРегиструЗатратыНаВыпускПродукции(/*
	СтруктураШапкиДокумента
	*/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	*,
	|	СтатьяЗатрат.ВидЗатрат КАК ВидЗатрат
	|ИЗ
	|	РегистрНакопления.ЗатратыНаВыпускПродукцииБухгалтерскийУчет КАК ЗатратыНаВыпуск
	|
	|ГДЕ
	|	ЗатратыНаВыпуск.Организация = &Организация
	|	И ЗатратыНаВыпуск.Период МЕЖДУ &ПериодНачало И &ПериодКонец
	|	И ЗатратыНаВыпуск.Активность
	|	И Не ЗатратыНаВыпуск.Регистратор ССЫЛКА Документ.РасчетСебестоимостиВыпуска
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗатратыНаВыпуск.Регистратор,
	|	ЗатратыНаВыпуск.НомерСтроки
	|";*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("ПериодНачало", СтруктураШапкиДокумента.ПериодНачало);*/
			/*Запрос.УстановитьПараметр("ПериодКонец", СтруктураШапкиДокумента.ПериодКонец);*/
			return null;
		}
		// СформироватьЗапросПоРегиструЗатратыНаВыпускПродукции()
		// Процедура формирует движения по регистру "Затраты на выпуск продукции (международный учет)"
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Структура реквизитов документа
		//	СчетУчета - ПланСчетовСсылка.Международный - Счет межд. учета
		//	НаборЗаписейЗатратыНаВыпуск - РегистрНакопленияНаборЗаписей - Набор записей регистра накопления "Затраты на выпуск продукции (Межд)"
		//

		public void СформироватьДвиженияПоРегиструЗатратыНаВыпускМежд(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	СчетУчета,
	НаборЗаписейЗатратыНаВыпуск
	*/)
		{
			/*// В движениях по регистру "Затраты на выпуск продукции (международный учет)" должны быть заполнены измерения:
*/
			/*//	- Организация,
*/
			/*//	- Подразделение,
*/
			/*//	- СчетУчета
*/
			/*//	- НоменклатурнаяГруппа,
*/
			/*//	- Продукция,
*/
			/*//	- ХарактеристикаПродукции,
*/
			/*//	- СерияПродукции,
*/
			/*//	- Спецификация,
*/
			/*//	- Заказ,
*/
			/*//	- ДокументВыпуска,
*/
			/*//
*/
			/*//	- СтатьяЗатрат,
*/
			/*//	- Затрата,
*/
			/*//	- ХарактеристикаЗатраты,
*/
			/*//	- СерияЗатраты,
*/
			/*//	- НоменклатурнаяГруппаНЗП,
*/
			/*//	- ЗаказНЗП,
*/
			/*//	- ПодразделениеНЗП.
*/
			/*НоваяСтрока = НаборЗаписейЗатратыНаВыпуск.Добавить();*/
			/*НоваяСтрока.Активность = Истина;*/
			/*ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВыборки);*/
			/*НоваяСтрока.СчетУчета = СчетУчета;*/
			/*НоваяСтрока.Сумма = ПолучитьСуммуВВалютеМеждународногоУчета(
		СтруктураШапкиДокумента,
		СтрокаВыборки.Сумма, 
		СтрокаВыборки.Период
	);*/
			/*// Если в наборе записей 1000 строк, запишем набор.
*/
			if(true/*НаборЗаписейЗатратыНаВыпуск.Количество() = 1000*/)
			{
				/*НаборЗаписейЗатратыНаВыпуск.Записать(Ложь);*/
			}
		}
		// СформироватьДвиженияПоРегиструЗатратыНаВыпускМежд()
		// Процедура переносит движения по регистру "Затраты на выпуск продукции" в межд. учет
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Структура реквизитов документа
		//

		public void ПеренестиДвиженияПоРегиструЗатратыНаВыпускМежд(/*
	СтруктураШапкиДокумента
	*/)
		{
			/*Запрос = СформироватьЗапросПоРегиструЗатратыНаВыпускПродукции(СтруктураШапкиДокумента);*/
			/*РезультатЗапроса = Запрос.Выполнить();*/
			if(true/*РезультатЗапроса.Пустой()*/)
			{
			}
			/*СтруктураНаборыЗаписей = Новый Структура;*/
			/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
		СтруктураШапкиДокумента, 
		"ЗатратыНаВыпускПродукцииМеждународныйУчет", 
		СтруктураНаборыЗаписей
	);*/
			if(true/*Не ПолученНаборЗаписей*/)
			{
			}
			/*Выборка = РезультатЗапроса.Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				/*СчетУчетаМежд = ПолучитьСчетМежд(
			СтруктураШапкиДокумента,
			Выборка.СчетУчета
		);*/
				if(true/*ЗначениеЗаполнено(СчетУчетаМежд)*/)
				{
					/*СформироватьДвиженияПоРегиструЗатратыНаВыпускМежд(
				СтруктураШапкиДокумента,
				Выборка,
				СчетУчетаМежд,
				СтруктураНаборыЗаписей.ЗатратыНаВыпускПродукцииМеждународныйУчет
			);*/
				}
			}
			if(true/*СтруктураНаборыЗаписей.ЗатратыНаВыпускПродукцииМеждународныйУчет.Модифицированность()*/)
			{
				/*СтруктураНаборыЗаписей.ЗатратыНаВыпускПродукцииМеждународныйУчет.Записать(Ложь);*/
			}
		}
		// ПеренестиДвиженияПоРегиструЗатратыНаВыпускМежд()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ПЕРЕНОСА ДВИЖЕНИЙ ПО РЕГИСТРУ "ВЫПУСК ПРОДУКЦИИ"
		// Функция формирует запрос по регистру "Выпуск продукции (бухгалтерский учет)".
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Структура реквизитов документа
		//
		// Возвращаемое значение:
		//	Запрос - Запрос по регистру "Выпуск продукции (бухгалтерский учет)"
		//

		public object СформироватьЗапросПоРегиструВыпускПродукции(/*
	СтруктураШапкиДокумента
	*/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	РегистрНакопления.ВыпускПродукцииБухгалтерскийУчет КАК ВыпускПродукции
	|
	|ГДЕ
	|	ВыпускПродукции.Организация = &Организация
	|	И ВыпускПродукции.Период МЕЖДУ &ПериодНачало И &ПериодКонец
	|	И ВыпускПродукции.Активность
	|	И Не ВыпускПродукции.Регистратор ССЫЛКА Документ.РасчетСебестоимостиВыпуска
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВыпускПродукции.Регистратор,
	|	ВыпускПродукции.НомерСтроки
	|";*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);*/
			/*Запрос.УстановитьПараметр("ПериодНачало", СтруктураШапкиДокумента.ПериодНачало);*/
			/*Запрос.УстановитьПараметр("ПериодКонец", СтруктураШапкиДокумента.ПериодКонец);*/
			return null;
		}
		// СформироватьЗапросПоРегиструВыпускПродукции()
		// Процедура формирует движения по регистру "Выпуск продукции (международный учет)"
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Структура реквизитов документа
		//	СчетУчетаНЗП - ПланСчетовСсылка.Международный - Счет межд. учета
		//	НаборЗаписейВыпускПродукции - РегистрНакопленияНаборЗаписей - Набор записей регистра накопления "Выпуск продукции (Межд)"
		//

		public void СформироватьДвиженияПоРегиструВыпускПродукцииМежд(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	СчетУчетаНЗП,
	НаборЗаписейВыпускПродукции
	*/)
		{
			/*// В движениях по регистру "Выпуск продукции (международный учет)" должны быть заполнены измерения:
*/
			/*//	- Организация,
*/
			/*//	- Подразделение,
*/
			/*//	- НоменклатурнаяГруппа,
*/
			/*//	- Продукция,
*/
			/*//	- ХарактеристикаПродукции,
*/
			/*//	- СерияПродукции,
*/
			/*//	- Спецификация,
*/
			/*//	- Заказ,
*/
			/*//	- ДокументВыпуска,
*/
			/*//	- Качество,
*/
			/*//
*/
			/*//	- КодОперации,
*/
			/*//	- ПодразделениеПолучатель,
*/
			/*//	- ЗаказПолучатель,
*/
			/*//	- СтатьяЗатратПолучатель,
*/
			/*//	- НоменклатурнаяГруппаПолучатель,
*/
			/*//	- СкладПолучатель,
*/
			/*//	- СчетДт,
*/
			/*//	- СубконтоДт1,
*/
			/*//	- СубконтоДт2,
*/
			/*//	- СубконтоДт3,
*/
			/*//	- СчетУчетаНЗП,
*/
			/*//	- ПродукцияПолучатель,
*/
			/*//	- ХарактеристикаПродукцииПолучатель,
*/
			/*//	- СерияПродукцииПолучатель,
*/
			/*//	- ВариантВыпускаПродукции.
*/
			/*НоваяСтрока = НаборЗаписейВыпускПродукции.Добавить();*/
			/*НоваяСтрока.Активность = Истина;*/
			/*ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВыборки);*/
			/*НоваяСтрока.СчетУчетаНЗП = СчетУчетаНЗП;*/
			/*НоваяСтрока.СчетДт = ПолучитьСчетМежд(
		СтруктураШапкиДокумента,
		СтрокаВыборки.СчетДт
	);*/
			/*НоваяСтрока.Стоимость = 0;*/
			/*// Если в наборе записей 1000 строк, запишем набор.
*/
			if(true/*НаборЗаписейВыпускПродукции.Количество() = 1000*/)
			{
				/*НаборЗаписейВыпускПродукции.Записать(Ложь);*/
			}
		}
		// СформироватьДвиженияПоРегиструВыпускПродукцииМежд()
		// Процедура переносит движения по регистру "Выпуск продукции" в межд. учет
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Структура реквизитов документа
		//

		public void ПеренестиДвиженияПоРегиструВыпускПродукцииМежд(/*
	СтруктураШапкиДокумента
	*/)
		{
			/*Запрос = СформироватьЗапросПоРегиструВыпускПродукции(СтруктураШапкиДокумента);*/
			/*РезультатЗапроса = Запрос.Выполнить();*/
			if(true/*РезультатЗапроса.Пустой()*/)
			{
			}
			/*СтруктураНаборыЗаписей = Новый Структура;*/
			/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
		СтруктураШапкиДокумента, 
		"ВыпускПродукцииМеждународныйУчет", 
		СтруктураНаборыЗаписей
	);*/
			if(true/*Не ПолученНаборЗаписей*/)
			{
			}
			/*Выборка = РезультатЗапроса.Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				/*СчетУчетаМежд = ПолучитьСчетМежд(
			СтруктураШапкиДокумента,
			Выборка.СчетУчетаНЗП
		);*/
				if(true/*ЗначениеЗаполнено(СчетУчетаМежд)*/)
				{
					/*СформироватьДвиженияПоРегиструВыпускПродукцииМежд(
				СтруктураШапкиДокумента,
				Выборка,
				СчетУчетаМежд,
				СтруктураНаборыЗаписей.ВыпускПродукцииМеждународныйУчет
			);*/
				}
			}
			if(true/*СтруктураНаборыЗаписей.ВыпускПродукцииМеждународныйУчет.Модифицированность()*/)
			{
				/*СтруктураНаборыЗаписей.ВыпускПродукцииМеждународныйУчет.Записать(Ложь);*/
			}
		}
		// ПеренестиДвиженияПоРегиструВыпускПродукцииМежд()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ПЕРЕНОСА ДВИЖЕНИЙ ПО РЕГИСТРАМ
		// Процедура переносит движения по производственнымрегистрам в межд. учет
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Структура реквизитов документа
		//

		public void ПеренестиДвиженияПоПроизводственнымРегистрамМеждународныйУчет(/*
	СтруктураШапкиДокумента
	*/)
		{
			/*ВалютаРегламентированногоУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета");*/
			/*ВалютаМеждународногоУчета = глЗначениеПеременной("ВалютаМеждународногоУчета");*/
			/*СтруктураШапкиДокумента.Вставить("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);*/
			/*СтруктураШапкиДокумента.Вставить("ВалютаМеждународногоУчета", ВалютаМеждународногоУчета);*/
			/*КратностьВалютыРегл = МодульВалютногоУчета.ПолучитьКурсВалюты(
		СтруктураШапкиДокумента.ВалютаРегламентированногоУчета, 
		СтруктураШапкиДокумента.ПериодНачало).Кратность;*/
			/*КратностьВалютыМежд = МодульВалютногоУчета.ПолучитьКурсВалюты(
		СтруктураШапкиДокумента.ВалютаМеждународногоУчета, 
		СтруктураШапкиДокумента.ПериодНачало).Кратность;*/
			/*СтруктураШапкиДокумента.Вставить("КратностьВалютыРегл", КратностьВалютыРегл);*/
			/*СтруктураШапкиДокумента.Вставить("КратностьВалютыМежд", КратностьВалютыМежд);*/
			/*СтруктураШапкиДокумента.Вставить("КурсыВалютыРегл", Новый Соответствие);*/
			/*СтруктураШапкиДокумента.Вставить("КурсыВалютыМежд", Новый Соответствие);*/
			/*СтруктураШапкиДокумента.Вставить("СоответствиеСчетаМежд", Новый Соответствие);*/
			/*ПеренестиДвиженияПоРегиструНезавершенноеПроизводствоМежд(СтруктураШапкиДокумента);*/
			/*ПеренестиДвиженияПоРегиструЗатратыМежд(СтруктураШапкиДокумента);*/
			/*ПеренестиДвиженияПоРегиструБракВПроизводствеМежд(СтруктураШапкиДокумента);*/
			/*ПеренестиДвиженияПоРегиструЗатратыНаВыпускМежд(СтруктураШапкиДокумента);*/
			/*ПеренестиДвиженияПоРегиструВыпускПродукцииМежд(СтруктураШапкиДокумента);*/
		}
		// ПеренестиДвиженияПоПроизводственнымРегистрамМеждународныйУчет()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО РЕГИСТРУ НАКОПЛЕНИЯ "ЗАТРАТЫ НА ВЫПУСК ПРОДУКЦИИ"
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ПОДГОТОВКИ ТЕКСТА ЗАПРОСА ДЛЯ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО РЕГИСТРУ НАКОПЛЕНИЯ "ЗАТРАТЫ НА ВЫПУСК ПРОДУКЦИИ"
		// Формирует текст запроса для документа "Распределение материалов на выпуск"
		// для табличных частей "Распределение материалов" или "Распределение возвратных отходов".
		//
		// Возвращаемое значение:
		//	Строка - Текст запроса
		//

		public object СформироватьТекстЗапросаДляДокументаАктОбОказанииПроизводственныхУслуг(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Док.Ссылка.Организация			КАК Организация,
	|	Док.Ссылка.Подразделение		КАК Подразделение,
	|	Док.Ссылка.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|
	|	Док.НомерСтроки,
	|	&ВидВыпускаВыпуск КАК ВидВыпуска,
	|	Док.Продукция,
	|	Неопределено КАК ХарактеристикаПродукции,
	|	Неопределено КАК СерияПродукции,
	|	Док.Спецификация,
	|
	|	Док.Номенклатура,
	|	Док.Номенклатура.ВестиУчетПоСериямВНЗП КАК ВестиУчетПоСериямВНЗП,
	|	Док.ХарактеристикаНоменклатуры,
	|	ВЫБОР КОГДА Док.Номенклатура.ВестиУчетПоСериямВНЗП ТОГДА
	|		Док.СерияНоменклатуры
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК СерияНоменклатуры,
	|	Док.НоменклатурнаяГруппа,
	|	Док.СтатьяЗатрат,
	|
	|	Док.СчетЗатрат,
	|	Док.СчетЗатратНУ,
	|	Док.СчетЗатрат КАК СчетУчета,
	|	Док.СчетЗатратНУ КАК СчетУчетаНУ,
	|
	|	Док.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаНЗП,
	|
	|	Док.Ссылка.Подразделение КАК ПодразделениеНЗП,
	|	Док.Ссылка.ПодразделениеОрганизации	КАК ПодразделениеОрганизацииНЗП,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Ссылка.Сделка ССЫЛКА Документ.ЗаказПокупателя И Док.Ссылка.Сделка <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Ссылка.Сделка
	|	КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.ЗаказВыпуска ССЫЛКА Документ.ЗаказНаПроизводство И Док.ЗаказВыпуска <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.ЗаказВыпуска
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК Заказ,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Ссылка.Сделка ССЫЛКА Документ.ЗаказПокупателя И Док.Ссылка.Сделка <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Ссылка.Сделка
	|	КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.ЗаказВыпуска ССЫЛКА Документ.ЗаказНаПроизводство И Док.ЗаказВыпуска <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.ЗаказВыпуска
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказРегл,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Ссылка.Сделка ССЫЛКА Документ.ЗаказПокупателя И Док.Ссылка.Сделка <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Ссылка.Сделка
	|	КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.ЗаказВыпуска ССЫЛКА Документ.ЗаказНаПроизводство И Док.ЗаказВыпуска <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.ЗаказВыпуска
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказНЗП,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Ссылка.Сделка ССЫЛКА Документ.ЗаказПокупателя И Док.Ссылка.Сделка <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Ссылка.Сделка
	|	КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.ЗаказВыпуска ССЫЛКА Документ.ЗаказНаПроизводство И Док.ЗаказВыпуска <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.ЗаказВыпуска
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказНЗПРегл,
	|
	|	Неопределено КАК ТипСтоимости,
	|	Неопределено КАК КодОперации,
	|
	|	Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Количество,
	|	0 КАК Сумма,
	|	0 КАК СуммаРегл,
	|	0 КАК СуммаНал
	|
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.АктОбОказанииПроизводственныхУслуг.РаспределениеМатериалов КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|	И Док.Ссылка.ИспользоватьМатериалы
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаДляДокументаАктОбОказанииПроизводственныхУслуг()
		// Формирует текст запроса для документа "Распределение материалов на выпуск"
		// для табличных частей "Распределение материалов" или "Распределение возвратных отходов".
		//
		// Возвращаемое значение:
		//	Строка - Текст запроса
		//

		public object СформироватьТекстЗапросаДляДокументаАктОбОказанииПроизводственныхУслугПрочие(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Док.Ссылка.Организация			КАК Организация,
	|	Док.Ссылка.Подразделение		КАК Подразделение,
	|	Док.Ссылка.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|
	|	Док.НомерСтроки,
	|	&ВидВыпускаВыпуск 	КАК ВидВыпуска,
	|	Док.Номенклатура 	КАК Продукция,
	|	Неопределено 		КАК ХарактеристикаПродукции,
	|	Неопределено 		КАК СерияПродукции,
	|	Док.Спецификация,
	|
	|	Док.СпособРаспределенияЗатратНаВыпуск,
	|	Док.НоменклатурнаяГруппа,
	|	Док.СтатьяЗатрат,
	|
	|	Док.СчетЗатрат,
	|	Док.СчетЗатратНУ,
	|	Док.СчетЗатрат КАК СчетУчета,
	|	Док.СчетЗатратНУ КАК СчетУчетаНУ,
	|
	|	Док.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаНЗП,
	|
	|	Док.Ссылка.Подразделение КАК ПодразделениеНЗП,
	|	Док.Ссылка.ПодразделениеОрганизации	КАК ПодразделениеОрганизацииНЗП,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК Заказ,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказРегл,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказНЗП,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказНЗПРегл,
	|
	|	Неопределено КАК ТипСтоимости,
	|	Неопределено КАК КодОперации,
	|
	|	Док.Сумма 		КАК Сумма,
	|	Док.СуммаРегл 	КАК СуммаРегл,
	|	Док.СуммаРегл 	КАК СуммаНал
	|
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.АктОбОказанииПроизводственныхУслуг.РаспределениеПрочихЗатрат КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|	И Док.Ссылка.ИспользоватьПрочиеЗатраты
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаДляДокументаАктОбОказанииПроизводственныхУслуг()
		// Формирует текст запроса для документа "Поступление товаров из переработки"
		// для табличных частей "Распределение материалов" или "Распределение возвратных отходов".
		//
		// Возвращаемое значение:
		//	Строка - Текст запроса
		//

		public object СформироватьТекстЗапросаДляДокументаПоступлениеТоваровИзПереработки(/*ИмяТабличнойЧасти*/)
		{
			if(true/*ИмяТабличнойЧасти = "РаспределениеМатериалов"*/)
			{
				/*ТекстУсловиеИспользовать = "И Док.Ссылка.ИспользоватьМатериалы";*/
				/*ТекстКоличество = "Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент";*/
			}
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Док.Ссылка.Организация			КАК Организация,
	|	Док.Ссылка.Подразделение		КАК Подразделение,
	|	Док.Ссылка.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|
	|	Док.НомерСтроки,
	|	&ВидВыпускаВыпуск КАК ВидВыпуска,
	|	Док.Продукция,
	|	Док.ХарактеристикаПродукции,
	|	Док.СерияПродукции,
	|	Док.Спецификация,
	|
	|	Док.Номенклатура,
	|	Док.Номенклатура.ВестиУчетПоСериямВНЗП КАК ВестиУчетПоСериямВНЗП,
	|	Док.ХарактеристикаНоменклатуры,
	|	ВЫБОР КОГДА Док.Номенклатура.ВестиУчетПоСериямВНЗП ТОГДА
	|		Док.СерияНоменклатуры
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК СерияНоменклатуры,
	|	Док.НоменклатурнаяГруппа,
	|	Док.СтатьяЗатрат,
	|
	|	Док.СчетЗатрат,
	|	Док.СчетЗатратНУ,
	|	Док.СчетЗатрат КАК СчетУчета,
	|	Док.СчетЗатратНУ КАК СчетУчетаНУ,
	|
	|	Док.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаНЗП,
	|
	|	Док.Ссылка.Подразделение КАК ПодразделениеНЗП,
	|	Док.Ссылка.ПодразделениеОрганизации	КАК ПодразделениеОрганизацииНЗП,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК Заказ,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказРегл,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказНЗП,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказНЗПРегл,
	|
	|	Неопределено КАК ТипСтоимости,
	|	Неопределено КАК КодОперации,
	|
	|	" + ТекстКоличество + " КАК Количество,
	|	0 КАК Сумма,
	|	0 КАК СуммаРегл,
	|	0 КАК СуммаНал
	|
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.ПоступлениеТоваровИзПереработки." + ИмяТабличнойЧасти + " КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|	" + ТекстУсловиеИспользовать + "
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаДляДокументаПоступлениеТоваровИзПереработки()
		// Формирует текст запроса для документа "Поступление товаров из переработки"
		// для табличных частей "Распределение прочих затрат".
		//
		// Возвращаемое значение:
		//	Строка - Текст запроса
		//

		public object СформироватьТекстЗапросаДляДокументаПоступлениеТоваровИзПереработкиПрочие(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Док.Ссылка.Организация			КАК Организация,
	|	Док.Ссылка.Подразделение		КАК Подразделение,
	|	Док.Ссылка.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|
	|	Док.НомерСтроки,
	|	&ВидВыпускаВыпуск 				КАК ВидВыпуска,
	|	Док.Номенклатура 				КАК Продукция,
	|	Док.ХарактеристикаНоменклатуры 	КАК ХарактеристикаПродукции,
	|	Док.СерияНоменклатуры 			КАК СерияПродукции,
	|	Док.Спецификация,
	|
	|	Док.СпособРаспределенияЗатратНаВыпуск,
	|	Док.НоменклатурнаяГруппа,
	|	Док.СтатьяЗатрат,
	|
	|	Док.СчетЗатрат,
	|	Док.СчетЗатратНУ,
	|	Док.СчетЗатрат КАК СчетУчета,
	|	Док.СчетЗатратНУ КАК СчетУчетаНУ,
	|
	|	Док.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаНЗП,
	|
	|	Док.Ссылка.Подразделение КАК ПодразделениеНЗП,
	|	Док.Ссылка.ПодразделениеОрганизации	КАК ПодразделениеОрганизацииНЗП,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК Заказ,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказРегл,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказНЗП,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказНЗПРегл,
	|
	|	Неопределено КАК ТипСтоимости,
	|	Неопределено КАК КодОперации,
	|
	|	Док.Сумма 		КАК Сумма,
	|	Док.СуммаРегл 	КАК СуммаРегл,
	|	Док.СуммаРегл 	КАК СуммаНал
	|
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.ПоступлениеТоваровИзПереработки.РаспределениеПрочихЗатрат КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|	И Док.Ссылка.ИспользоватьПрочиеЗатраты
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаДляДокументаПоступлениеТоваровИзПереработкиПрочие()
		// Формирует текст запроса для документа "Отчет производства за смену"
		// для табличных частей "Распределение материалов" или "Распределение возвратных отходов".
		//
		// Возвращаемое значение:
		//	Строка - Текст запроса
		//

		public object СформироватьТекстЗапросаДляДокументаОтчетПроизводстваЗаСмену(/*ИмяТабличнойЧасти*/)
		{
			if(true/*ИмяТабличнойЧасти = "РаспределениеМатериалов"*/)
			{
				/*ТекстУсловиеИспользовать = "И Док.Ссылка.ИспользоватьМатериалы";*/
			}
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Док.Ссылка.Организация			КАК Организация,
	|	Док.Ссылка.Подразделение		КАК Подразделение,
	|	Док.Ссылка.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|
	|	Док.НомерСтроки,
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьНаработку ТОГДА
	|		Док.ВидВыпуска
	|	ИНАЧЕ
	|		&ВидВыпускаВыпуск		
	|	КОНЕЦ КАК ВидВыпуска,
	|	Док.Продукция,
	|	Док.ХарактеристикаПродукции,
	|	Док.СерияПродукции,
	|	Док.Спецификация,
	|
	|	Док.Номенклатура,
	|	Док.Номенклатура.ВестиУчетПоСериямВНЗП КАК ВестиУчетПоСериямВНЗП,
	|	Док.ХарактеристикаНоменклатуры,
	|	ВЫБОР КОГДА Док.Номенклатура.ВестиУчетПоСериямВНЗП ТОГДА
	|		Док.СерияНоменклатуры
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК СерияНоменклатуры,
	|	Док.НоменклатурнаяГруппа,
	|	Док.СтатьяЗатрат,
	|
	|	Док.СчетЗатрат,
	|	Док.СчетЗатратНУ,
	|	Док.СчетЗатрат КАК СчетУчета,
	|	Док.СчетЗатратНУ КАК СчетУчетаНУ,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьАналитикуНЗП ТОГДА
	|		Док.НоменклатурнаяГруппаНЗП 
	|	ИНАЧЕ
	|		Док.НоменклатурнаяГруппа
	|	КОНЕЦ КАК НоменклатурнаяГруппаНЗП,
	|
	|	ВЫБОР КОГДА Док.ПодразделениеНЗП = &ПустоеПодразделение ИЛИ Не Док.Ссылка.ИспользоватьПодразделенияНЗП ТОГДА
	|		Док.Ссылка.Подразделение
	|	ИНАЧЕ
	|		Док.ПодразделениеНЗП
	|	КОНЕЦ КАК ПодразделениеНЗП,
	|
	|	ВЫБОР КОГДА Док.ПодразделениеОрганизацииНЗП = &ПустоеПодразделениеОрганизации ИЛИ Не Док.Ссылка.ИспользоватьПодразделенияНЗП ТОГДА
	|		Док.Ссылка.ПодразделениеОрганизации
	|	ИНАЧЕ
	|		Док.ПодразделениеОрганизацииНЗП
	|	КОНЕЦ КАК ПодразделениеОрганизацииНЗП,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьЗаказы 
	|			И Док.Заказ ССЫЛКА Документ.ЗаказПокупателя 
	|			И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|
	|	КОГДА Док.Ссылка.ИспользоватьЗаказы 
	|			И Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
	|			И Док.Заказ <> &ПустойЗаказНаПроизводство
	|			И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК Заказ,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьЗаказы 
	|			И Док.Заказ ССЫЛКА Документ.ЗаказПокупателя 
	|			И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|
	|	КОГДА Док.Ссылка.ИспользоватьЗаказы 
	|			И Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
	|			И Док.Заказ <> &ПустойЗаказНаПроизводство
	|			И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказРегл,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьАналитикуНЗП 
	|			И Док.ЗаказНЗП ССЫЛКА Документ.ЗаказПокупателя
	|			И Док.ЗаказНЗП <> &ПустойЗаказПокупателя ТОГДА
	|		Док.ЗаказНЗП
	|
	|	КОГДА Док.Ссылка.ИспользоватьАналитикуНЗП 
	|			И Док.ЗаказНЗП ССЫЛКА Документ.ЗаказНаПроизводство 
	|			И Док.ЗаказНЗП <> &ПустойЗаказНаПроизводство
	|			И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.ЗаказНЗП
	|
	|	КОГДА Не Док.Ссылка.ИспользоватьАналитикуНЗП 
	|			И Док.Заказ ССЫЛКА Документ.ЗаказПокупателя 
	|			И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|
	|	КОГДА Не Док.Ссылка.ИспользоватьАналитикуНЗП 
	|			И Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
	|			И Док.Заказ <> &ПустойЗаказНаПроизводство
	|			И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказНЗП,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьАналитикуНЗП 
	|			И Док.ЗаказНЗП ССЫЛКА Документ.ЗаказПокупателя 
	|			И Док.ЗаказНЗП <> &ПустойЗаказПокупателя ТОГДА
	|		Док.ЗаказНЗП
	|
	|	КОГДА Док.Ссылка.ИспользоватьАналитикуНЗП 
	|			И Док.ЗаказНЗП ССЫЛКА Документ.ЗаказНаПроизводство 
	|			И Док.ЗаказНЗП <> &ПустойЗаказНаПроизводство
	|			И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.ЗаказНЗП
	|
	|	КОГДА Не Док.Ссылка.ИспользоватьАналитикуНЗП 
	|			И Док.Заказ ССЫЛКА Документ.ЗаказПокупателя 
	|			И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|
	|	КОГДА Не Док.Ссылка.ИспользоватьАналитикуНЗП 
	|			И Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
	|			И Док.Заказ <> &ПустойЗаказНаПроизводство
	|			И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказНЗПРегл,
	|
	|	Неопределено КАК ТипСтоимости,
	|	Неопределено КАК КодОперации,
	|
	|	Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Количество,
	|	0 КАК Сумма,
	|	0 КАК СуммаРегл,
	|	0 КАК СуммаНал
	|
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.ОтчетПроизводстваЗаСмену." + ИмяТабличнойЧасти + " КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|	" + ТекстУсловиеИспользовать + "
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаДляДокументаОтчетПроизводстваЗаСмену()
		// Формирует текст запроса для документа "Отчет производства за смену"
		// для табличных частей "Распределение прочих затрат".
		//
		// Возвращаемое значение:
		//	Строка - Текст запроса
		//

		public object СформироватьТекстЗапросаДляДокументаОтчетПроизводстваЗаСменуПрочие(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Док.Ссылка.Организация			КАК Организация,
	|	Док.Ссылка.Подразделение		КАК Подразделение,
	|	Док.Ссылка.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|
	|	Док.НомерСтроки,
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьНаработку ТОГДА
	|		Док.ВидВыпуска
	|	ИНАЧЕ
	|		&ВидВыпускаВыпуск		
	|	КОНЕЦ КАК ВидВыпуска,
	|	Док.Продукция,
	|	Док.ХарактеристикаПродукции,
	|	Док.СерияПродукции,
	|	Док.Спецификация,
	|
	|	Док.СпособРаспределенияЗатратНаВыпуск,
	|	Док.НоменклатурнаяГруппа,
	|	Док.СтатьяЗатрат,
	|
	|	Док.СчетЗатрат,
	|	Док.СчетЗатратНУ,
	|	Док.СчетЗатрат КАК СчетУчета,
	|	Док.СчетЗатратНУ КАК СчетУчетаНУ,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьАналитикуНЗП ТОГДА
	|		Док.НоменклатурнаяГруппаНЗП 
	|	ИНАЧЕ
	|		Док.НоменклатурнаяГруппа
	|	КОНЕЦ КАК НоменклатурнаяГруппаНЗП,
	|
	|	ВЫБОР КОГДА Док.ПодразделениеНЗП = &ПустоеПодразделение ИЛИ Не Док.Ссылка.ИспользоватьПодразделенияНЗП ТОГДА
	|		Док.Ссылка.Подразделение
	|	ИНАЧЕ
	|		Док.ПодразделениеНЗП
	|	КОНЕЦ КАК ПодразделениеНЗП,
	|
	|	ВЫБОР КОГДА Док.ПодразделениеОрганизацииНЗП = &ПустоеПодразделениеОрганизации ИЛИ Не Док.Ссылка.ИспользоватьПодразделенияНЗП ТОГДА
	|		Док.Ссылка.ПодразделениеОрганизации
	|	ИНАЧЕ
	|		Док.ПодразделениеОрганизацииНЗП
	|	КОНЕЦ КАК ПодразделениеОрганизацииНЗП,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК Заказ,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказРегл,
	|
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьАналитикуНЗП 
	|			И Док.ЗаказНЗП ССЫЛКА Документ.ЗаказПокупателя
	|			И Док.ЗаказНЗП <> &ПустойЗаказПокупателя ТОГДА
	|		Док.ЗаказНЗП
	|
	|	КОГДА Док.Ссылка.ИспользоватьАналитикуНЗП 
	|			И Док.ЗаказНЗП ССЫЛКА Документ.ЗаказНаПроизводство 
	|			И Док.ЗаказНЗП <> &ПустойЗаказНаПроизводство
	|			И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.ЗаказНЗП
	|
	|	КОГДА Не Док.Ссылка.ИспользоватьАналитикуНЗП 
	|			И Док.Заказ ССЫЛКА Документ.ЗаказПокупателя 
	|			И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|
	|	КОГДА Не Док.Ссылка.ИспользоватьАналитикуНЗП 
	|			И Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
	|			И Док.Заказ <> &ПустойЗаказНаПроизводство
	|			И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказНЗП,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьАналитикуНЗП 
	|			И Док.ЗаказНЗП ССЫЛКА Документ.ЗаказПокупателя 
	|			И Док.ЗаказНЗП <> &ПустойЗаказПокупателя ТОГДА
	|		Док.ЗаказНЗП
	|
	|	КОГДА Док.Ссылка.ИспользоватьАналитикуНЗП 
	|			И Док.ЗаказНЗП ССЫЛКА Документ.ЗаказНаПроизводство 
	|			И Док.ЗаказНЗП <> &ПустойЗаказНаПроизводство
	|			И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.ЗаказНЗП
	|
	|	КОГДА Не Док.Ссылка.ИспользоватьАналитикуНЗП 
	|			И Док.Заказ ССЫЛКА Документ.ЗаказПокупателя 
	|			И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|
	|	КОГДА Не Док.Ссылка.ИспользоватьАналитикуНЗП 
	|			И Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
	|			И Док.Заказ <> &ПустойЗаказНаПроизводство
	|			И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказНЗПРегл,
	|
	|	Неопределено КАК ТипСтоимости,
	|	Неопределено КАК КодОперации,
	|
	|	Док.Сумма 		КАК Сумма,
	|	Док.СуммаРегл 	КАК СуммаРегл,
	|	Док.СуммаРегл 	КАК СуммаНал
	|
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.ОтчетПроизводстваЗаСмену.РаспределениеПрочихЗатрат КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|	И Док.Ссылка.ИспользоватьПрочиеЗатраты
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаДляДокументаОтчетПроизводстваЗаСмену()
		// Формирует текст запроса для документа "Отчет производства за смену"
		// для табличных частей "Распределение тех. операций".
		//
		// Возвращаемое значение:
		//	Строка - Текст запроса
		//

		public object СформироватьТекстЗапросаДляДокументаОтчетПроизводстваЗаСменуТехОперации(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Док.Ссылка.Организация			КАК Организация,
	|	Док.Ссылка.Подразделение		КАК Подразделение,
	|	Док.Ссылка.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|
	|	Док.НомерСтроки,
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьНаработку ТОГДА
	|		Док.ВидВыпуска
	|	ИНАЧЕ
	|		&ВидВыпускаВыпуск		
	|	КОНЕЦ КАК ВидВыпуска,
	|	Док.Номенклатура 				КАК Продукция,
	|	Док.ХарактеристикаНоменклатуры 	КАК ХарактеристикаПродукции,
	|	Док.СерияНоменклатуры 			КАК СерияПродукции,
	|	Док.Спецификация,
	|
	|	Неопределено КАК СпособРаспределенияЗатратНаВыпуск,
	|	Док.НоменклатурнаяГруппа,
	|	Док.СтатьяЗатрат,
	|
	|	Док.СчетЗатрат,
	|	Док.СчетЗатратНУ,
	|	Док.СчетЗатрат КАК СчетУчета,
	|	Док.СчетЗатратНУ КАК СчетУчетаНУ,
	|
	|	Док.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаНЗП,
	|
	|	ВЫБОР КОГДА Док.ПодразделениеНЗП = &ПустоеПодразделение ИЛИ Не Док.Ссылка.ИспользоватьПодразделенияНЗП ТОГДА
	|		Док.Ссылка.Подразделение
	|	ИНАЧЕ
	|		Док.ПодразделениеНЗП
	|	КОНЕЦ КАК ПодразделениеНЗП,
	|
	|	ВЫБОР КОГДА Док.ПодразделениеОрганизацииНЗП = &ПустоеПодразделениеОрганизации ИЛИ Не Док.Ссылка.ИспользоватьПодразделенияНЗП ТОГДА
	|		Док.Ссылка.ПодразделениеОрганизации
	|	ИНАЧЕ
	|		Док.ПодразделениеОрганизацииНЗП
	|	КОНЕЦ КАК ПодразделениеОрганизацииНЗП,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК Заказ,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказРегл,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказНЗП,
	|
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Ссылка.ИспользоватьЗаказы И Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказНЗПРегл,
	|
	|	Неопределено КАК ТипСтоимости,
	|	Неопределено КАК КодОперации,
	|
	|	Док.Сумма 		КАК Сумма,
	|	Док.СуммаРегл 	КАК СуммаРегл,
	|	Док.СуммаРегл 	КАК СуммаНал
	|
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.ОтчетПроизводстваЗаСмену.РаспределениеТехнологическихОпераций КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|	И Док.Ссылка.ИспользоватьТехнологическиеОперации
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаДляДокументаОтчетПроизводстваЗаСменуТехОперации()
		// Формирует текст запроса для документа "Распределение материалов на выпуск"
		// для табличных частей "Распределение материалов" или "Распределение возвратных отходов".
		//
		// Возвращаемое значение:
		//	Строка - Текст запроса
		//

		public object СформироватьТекстЗапросаДляДокументаРаспределениеМатериаловНаВыпуск(/*ИмяТабличнойЧасти*/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Док.Ссылка.Организация			КАК Организация,
	|	Док.Ссылка.Подразделение		КАК Подразделение,
	|	Док.Ссылка.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|
	|	Док.НомерСтроки,
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьНаработку ТОГДА
	|		Док.ВидВыпуска
	|	ИНАЧЕ
	|		&ВидВыпускаВыпуск		
	|	КОНЕЦ КАК ВидВыпуска,
	|	Док.Продукция,
	|	Док.ХарактеристикаПродукции,
	|	Док.СерияПродукции,
	|	Док.Спецификация,
	|
	|	Док.Номенклатура,
	|	Док.Номенклатура.ВестиУчетПоСериямВНЗП КАК ВестиУчетПоСериямВНЗП,
	|	Док.ХарактеристикаНоменклатуры,
	|	ВЫБОР КОГДА Док.Номенклатура.ВестиУчетПоСериямВНЗП ТОГДА
	|		Док.СерияНоменклатуры
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК СерияНоменклатуры,
	|	Док.НоменклатурнаяГруппа,
	|	Док.СтатьяЗатрат,
	|
	|	Док.СчетЗатрат,
	|	Док.СчетЗатратНУ,
	|	Док.СчетЗатрат КАК СчетУчета,
	|	Док.СчетЗатратНУ КАК СчетУчетаНУ,
	|
	|	Док.НоменклатурнаяГруппаНЗП,
	|
	|	ВЫБОР КОГДА Док.ПодразделениеНЗП = &ПустоеПодразделение ИЛИ Не Док.Ссылка.ИспользоватьПодразделенияНЗП ТОГДА
	|		Док.Ссылка.Подразделение
	|	ИНАЧЕ
	|		Док.ПодразделениеНЗП
	|	КОНЕЦ КАК ПодразделениеНЗП,
	|
	|	ВЫБОР КОГДА Док.ПодразделениеОрганизацииНЗП = &ПустоеПодразделениеОрганизации ИЛИ Не Док.Ссылка.ИспользоватьПодразделенияНЗП ТОГДА
	|		Док.Ссылка.ПодразделениеОрганизации
	|	ИНАЧЕ
	|		Док.ПодразделениеОрганизацииНЗП
	|	КОНЕЦ КАК ПодразделениеОрганизацииНЗП,
	|
	|	ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК Заказ,
	|
	|	ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказРегл,
	|
	|	ВЫБОР КОГДА Док.ЗаказНЗП ССЫЛКА Документ.ЗаказПокупателя И Док.ЗаказНЗП <> &ПустойЗаказПокупателя ТОГДА
	|		Док.ЗаказНЗП
	|	КОГДА Док.ЗаказНЗП ССЫЛКА Документ.ЗаказНаПроизводство И Док.ЗаказНЗП <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.ЗаказНЗП
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказНЗП,
	|
	|	ВЫБОР КОГДА Док.ЗаказНЗП ССЫЛКА Документ.ЗаказПокупателя И Док.ЗаказНЗП <> &ПустойЗаказПокупателя ТОГДА
	|		Док.ЗаказНЗП
	|	КОГДА Док.ЗаказНЗП ССЫЛКА Документ.ЗаказНаПроизводство И Док.ЗаказНЗП <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.ЗаказНЗП
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказНЗПРегл,
	|
	|	Неопределено КАК ТипСтоимости,
	|	Неопределено КАК КодОперации,
	|
	|	Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Количество,
	|	0 КАК Сумма,
	|	0 КАК СуммаРегл,
	|	0 КАК СуммаНал
	|
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.РаспределениеМатериаловНаВыпуск." + ИмяТабличнойЧасти + " КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаДляДокументаРаспределениеМатериаловНаВыпуск()
		// Формирует текст запроса для документа "Распределение материалов на выпуск"
		// для табличных частей "Распределение материалов" или "Распределение возвратных отходов".
		//
		// Возвращаемое значение:
		//	Строка - Текст запроса
		//

		public object СформироватьТекстЗапросаДляДокументаРаспределениеПрочихЗатрат(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Док.Ссылка.Организация			КАК Организация,
	|	Док.Ссылка.Подразделение		КАК Подразделение,
	|	Док.Ссылка.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|
	|	Док.НомерСтроки,
	|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьНаработку ТОГДА
	|		Док.ВидВыпуска
	|	ИНАЧЕ
	|		&ВидВыпускаВыпуск		
	|	КОНЕЦ КАК ВидВыпуска,
	|	Док.Продукция,
	|	Док.ХарактеристикаПродукции,
	|	Док.СерияПродукции,
	|	Док.Спецификация,
	|
	|	Док.СпособРаспределенияЗатратНаВыпуск,
	|	Док.НоменклатурнаяГруппа,
	|	Док.СтатьяЗатрат,
	|
	|	Док.СчетЗатрат,
	|	Док.СчетЗатратНУ,
	|	Док.СчетЗатрат КАК СчетУчета,
	|	Док.СчетЗатратНУ КАК СчетУчетаНУ,
	|
	|	Док.НоменклатурнаяГруппаНЗП,
	|
	|	ВЫБОР КОГДА Док.ПодразделениеНЗП = &ПустоеПодразделение ИЛИ Не Док.Ссылка.ИспользоватьПодразделенияНЗП ТОГДА
	|		Док.Ссылка.Подразделение
	|	ИНАЧЕ
	|		Док.ПодразделениеНЗП
	|	КОНЕЦ КАК ПодразделениеНЗП,
	|
	|	ВЫБОР КОГДА Док.ПодразделениеОрганизацииНЗП = &ПустоеПодразделениеОрганизации ИЛИ Не Док.Ссылка.ИспользоватьПодразделенияНЗП ТОГДА
	|		Док.Ссылка.ПодразделениеОрганизации
	|	ИНАЧЕ
	|		Док.ПодразделениеОрганизацииНЗП
	|	КОНЕЦ КАК ПодразделениеОрганизацииНЗП,
	|
	|	ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК Заказ,
	|
	|	ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказРегл,
	|
	|	ВЫБОР КОГДА Док.ЗаказНЗП ССЫЛКА Документ.ЗаказПокупателя И Док.ЗаказНЗП <> &ПустойЗаказПокупателя ТОГДА
	|		Док.ЗаказНЗП
	|	КОГДА Док.ЗаказНЗП ССЫЛКА Документ.ЗаказНаПроизводство И Док.ЗаказНЗП <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.ЗаказНЗП
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказНЗП,
	|
	|	ВЫБОР КОГДА Док.ЗаказНЗП ССЫЛКА Документ.ЗаказПокупателя И Док.ЗаказНЗП <> &ПустойЗаказПокупателя ТОГДА
	|		Док.ЗаказНЗП
	|	КОГДА Док.ЗаказНЗП ССЫЛКА Документ.ЗаказНаПроизводство И Док.ЗаказНЗП <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.ЗаказНЗП
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказНЗПРегл,
	|
	|	Неопределено КАК ТипСтоимости,
	|	Неопределено КАК КодОперации,
	|
	|	Док.Сумма,
	|	Док.СуммаРегл,
	|	Док.СуммаНал
	|
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.РаспределениеПрочихЗатрат.ЗатратыНаПродукцию КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаДляДокументаРаспределениеПрочихЗатрат()
		// Формирует текст запроса для документа "КомплектацияНоменклатуры".
		//
		// Возвращаемое значение:
		//	Строка - Текст запроса
		//

		public object СформироватьТекстЗапросаДляДокументаКомплектацияНоменклатуры(/*ВидКомплектации*/)
		{
			if(true/*ВидКомплектации = Перечисления.ВидыКомплектации.Сборка*/)
			{
				/*ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Док.Ссылка.Организация			КАК Организация,
		|	Док.Ссылка.Подразделение		КАК Подразделение,
		|	Док.Ссылка.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
		|
		|	Док.НомерСтроки,
		|	&ВидВыпускаВыпуск КАК ВидВыпуска,		
		|	Док.Ссылка.Номенклатура  КАК Продукция,
		|	Док.Ссылка.ХарактеристикаНоменклатуры КАК ХарактеристикаПродукции,
		|	Док.Ссылка.СерияНоменклатуры КАК СерияПродукции,
		|	Док.Ссылка.Спецификация,
		|
		|	Док.Номенклатура,
		|	Док.Номенклатура.ВестиУчетПоСериямВНЗП КАК ВестиУчетПоСериямВНЗП,
		|	Док.ХарактеристикаНоменклатуры,
		|	ВЫБОР КОГДА Док.Номенклатура.ВестиУчетПоСериямВНЗП ТОГДА
		|		Док.СерияНоменклатуры
		|	ИНАЧЕ
		|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|	КОНЕЦ КАК СерияНоменклатуры,
		|	Док.Ссылка.НоменклатурнаяГруппа,
		|	Док.СтатьяЗатрат,
		|
		|	Док.Ссылка.СчетЗатрат,
		|	Док.Ссылка.СчетЗатратНУ,
		|	Док.Ссылка.СчетЗатрат КАК СчетУчета,
		|	Док.Ссылка.СчетЗатратНУ КАК СчетУчетаНУ,
		|	Док.Ссылка.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаНЗП,
		|	Док.Ссылка.Подразделение КАК ПодразделениеНЗП,
		|	Док.Ссылка.ПодразделениеОрганизации	КАК ПодразделениеОрганизацииНЗП,
		|
		|	ВЫБОР КОГДА Док.Ссылка.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Ссылка.Заказ <> &ПустойЗаказПокупателя ТОГДА
		|		Док.Ссылка.Заказ
		|	КОГДА Док.Ссылка.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Ссылка.Заказ <> &ПустойЗаказНаПроизводство
		|		  И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
		|		Док.Ссылка.Заказ
		|	ИНАЧЕ
		|		Неопределено
		|	КОНЕЦ КАК Заказ,
		|
		|	ВЫБОР КОГДА Док.Ссылка.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Ссылка.Заказ <> &ПустойЗаказПокупателя ТОГДА
		|		Док.Ссылка.Заказ
		|	КОГДА Док.Ссылка.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Ссылка.Заказ <> &ПустойЗаказНаПроизводство
		|		  И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
		|		Док.Ссылка.Заказ
		|	ИНАЧЕ
		|		Неопределено
		|	КОНЕЦ КАК ЗаказРегл,
		|
		|	ВЫБОР КОГДА Док.Ссылка.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Ссылка.Заказ <> &ПустойЗаказПокупателя ТОГДА
		|		Док.Ссылка.Заказ
		|	КОГДА Док.Ссылка.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Ссылка.Заказ <> &ПустойЗаказНаПроизводство
		|		  И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
		|		Док.Ссылка.Заказ
		|	ИНАЧЕ
		|		Неопределено
		|	КОНЕЦ КАК ЗаказНЗП,
		|
		|	ВЫБОР КОГДА Док.Ссылка.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Ссылка.Заказ <> &ПустойЗаказПокупателя ТОГДА
		|		Док.Ссылка.Заказ
		|	КОГДА Док.Ссылка.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Ссылка.Заказ <> &ПустойЗаказНаПроизводство
		|		  И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
		|		Док.Ссылка.Заказ
		|	ИНАЧЕ
		|		Неопределено
		|	КОНЕЦ КАК ЗаказНЗПРегл,
		|
		|	Неопределено КАК ТипСтоимости,
		|	Неопределено КАК КодОперации,
		|
		|	Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Количество,
		|	0 КАК Сумма,
		|	0 КАК СуммаРегл,
		|	0 КАК СуммаНал
		|
		|ПОМЕСТИТЬ ТаблицаДокумента
		|ИЗ
		|	Документ.КомплектацияНоменклатуры.Комплектующие КАК Док
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|";*/
			}
			return null;
		}
		// Формирует текст запроса для документа "Корректировка НЗП".
		//
		// Возвращаемое значение:
		//	Строка - Текст запроса
		//

		public object СформироватьТекстЗапросаДляДокументаКорректировкаНЗП(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Док.Ссылка.Организация			КАК Организация,
	|	Док.Ссылка.Подразделение		КАК Подразделение,
	|	Док.Ссылка.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|
	|	Док.НомерСтроки,
	|	&ВидВыпускаВыпуск КАК ВидВыпуска,
	|	Док.Номенклатура КАК Продукция,
	|	Док.ХарактеристикаНоменклатуры КАК ХарактеристикаПродукции,
	|	Док.СерияНоменклатуры КАК СерияПродукции,
	|	&ПустаяСпецификация КАК Спецификация,
	|
	|	Док.Номенклатура,
	|	Док.Номенклатура.ВестиУчетПоСериямВНЗП КАК ВестиУчетПоСериямВНЗП,
	|	Док.ХарактеристикаНоменклатуры,
	|	ВЫБОР КОГДА Док.Номенклатура.ВестиУчетПоСериямВНЗП ТОГДА
	|		Док.СерияНоменклатуры
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК СерияНоменклатуры,
	|	Док.НоменклатурнаяГруппа,
	|	Док.СтатьяЗатрат,
	|
	|	Док.СчетЗатрат,
	|	Док.СчетЗатратНУ,
	|	Док.СчетЗатрат КАК СчетУчета,
	|	Док.СчетЗатратНУ КАК СчетУчетаНУ,
	|
	|	Док.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаНЗП,
	|
	|	Док.Ссылка.Подразделение КАК ПодразделениеНЗП,
	|	Док.Ссылка.ПодразделениеОрганизации	КАК ПодразделениеОрганизацииНЗП,
	|
	|	ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК Заказ,
	|
	|	ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказРегл,
	|
	|	ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказНЗП,
	|
	|	ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказНЗПРегл,
	|
	|	Док.Ссылка.ТипСтоимости КАК ТипСтоимости,
	|	Неопределено КАК КодОперации,
	|
	|	Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Количество,
	|	Док.Сумма,
	|	Док.СуммаРегл,
	|	Док.СуммаНал
	|
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.КорректировкаНЗП.Материалы КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаДляДокументаКорректировкаНЗП()
		// Формирует текст запроса для документа "Оприходование НЗП".
		//
		// Возвращаемое значение:
		//	Строка - Текст запроса
		//

		public object СформироватьТекстЗапросаДляДокументаОприходованиеНЗП(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Док.Ссылка.Организация			КАК Организация,
	|	Док.Ссылка.Подразделение		КАК Подразделение,
	|	Док.Ссылка.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|
	|	Док.НомерСтроки,
	|	&ВидВыпускаВыпуск КАК ВидВыпуска,
	|	Док.Номенклатура КАК Продукция,
	|	Док.ХарактеристикаНоменклатуры КАК ХарактеристикаПродукции,
	|	Док.СерияНоменклатуры КАК СерияПродукции,
	|	&ПустаяСпецификация КАК Спецификация,
	|
	|	Док.Номенклатура,
	|	Док.Номенклатура.ВестиУчетПоСериямВНЗП КАК ВестиУчетПоСериямВНЗП,
	|	Док.ХарактеристикаНоменклатуры,
	|	ВЫБОР КОГДА Док.Номенклатура.ВестиУчетПоСериямВНЗП ТОГДА
	|		Док.СерияНоменклатуры
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК СерияНоменклатуры,
	|	Док.НоменклатурнаяГруппа,
	|	Док.СтатьяЗатрат,
	|
	|	Док.СчетЗатрат,
	|	Док.СчетЗатратНУ,
	|	Док.СчетЗатрат КАК СчетУчета,
	|	Док.СчетЗатратНУ КАК СчетУчетаНУ,
	|
	|	Док.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаНЗП,
	|
	|	Док.Ссылка.Подразделение КАК ПодразделениеНЗП,
	|	Док.Ссылка.ПодразделениеОрганизации	КАК ПодразделениеОрганизацииНЗП,
	|
	|	ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК Заказ,
	|
	|	ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказРегл,
	|
	|	ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказНЗП,
	|
	|	ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказНЗПРегл,
	|
	|	Док.Ссылка.ТипСтоимости КАК ТипСтоимости,
	|	Неопределено КАК КодОперации,
	|
	|	Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Количество,
	|	Док.Сумма,
	|	Док.СуммаРегл,
	|	Док.СуммаРегл КАК СуммаНал
	|
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.ОприходованиеНЗП.Материалы КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|	И Док.Ссылка.ТипСтоимости <> ЗНАЧЕНИЕ(Перечисление.ВидыНормативнойСтоимостиПроизводства.Фиксированная)
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаДляДокументаОприходованиеНЗП()
		// Формирует текст запроса для документа "Списание НЗП".
		//
		// Возвращаемое значение:
		//	Строка - Текст запроса
		//

		public object СформироватьТекстЗапросаДляДокументаСписаниеНЗП(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Док.Ссылка.Организация			КАК Организация,
	|	Док.Ссылка.Подразделение		КАК Подразделение,
	|	Док.Ссылка.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|
	|	Док.НомерСтроки,
	|	&ВидВыпускаВыпуск КАК ВидВыпуска,
	|	Док.Номенклатура КАК Продукция,
	|	Док.ХарактеристикаНоменклатуры КАК ХарактеристикаПродукции,
	|	Док.СерияНоменклатуры КАК СерияПродукции,
	|	&ПустаяСпецификация КАК Спецификация,
	|
	|	Док.Номенклатура,
	|	Док.Номенклатура.ВестиУчетПоСериямВНЗП КАК ВестиУчетПоСериямВНЗП,
	|	Док.ХарактеристикаНоменклатуры,
	|	ВЫБОР КОГДА Док.Номенклатура.ВестиУчетПоСериямВНЗП ТОГДА
	|		Док.СерияНоменклатуры
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК СерияНоменклатуры,
	|	Док.НоменклатурнаяГруппа,
	|	Док.СтатьяЗатрат,
	|
	|	Док.СчетЗатрат,
	|	Док.СчетЗатратНУ,
	|	Док.СчетЗатрат КАК СчетУчета,
	|	Док.СчетЗатратНУ КАК СчетУчетаНУ,
	|
	|	Док.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаНЗП,
	|
	|	Док.Ссылка.Подразделение КАК ПодразделениеНЗП,
	|	Док.Ссылка.ПодразделениеОрганизации	КАК ПодразделениеОрганизацииНЗП,
	|
	|	ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК Заказ,
	|
	|	ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказРегл,
	|
	|	ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказНЗП,
	|
	|	ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказНЗПРегл,
	|
	|	Док.Ссылка.ТипСтоимости КАК ТипСтоимости,
	|	Неопределено КАК КодОперации,
	|
	|	Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Количество,
	|	Док.Сумма,
	|	Док.СуммаРегл,
	|	Док.СуммаРегл КАК СуммаНал
	|
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.СписаниеНЗП.Материалы КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаДляДокументаСписаниеНЗП()
		// Формирует текст запроса для документа "Оприходование материалов из производства".
		//
		// Возвращаемое значение:
		//	Строка - Текст запроса
		//

		public object СформироватьТекстЗапросаДляДокументаОприходованиеМатериалов(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Док.Ссылка.Организация			КАК Организация,
	|	Док.Ссылка.Подразделение		КАК Подразделение,
	|	Док.Ссылка.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|
	|	Док.НомерСтроки,
	|	&ВидВыпускаВыпуск КАК ВидВыпуска,
	|	Док.Номенклатура КАК Продукция,
	|	Док.ХарактеристикаНоменклатуры КАК ХарактеристикаПродукции,
	|	Док.СерияНоменклатуры КАК СерияПродукции,
	|	&ПустаяСпецификация КАК Спецификация,
	|
	|	Док.Номенклатура,
	|	Док.Номенклатура.ВестиУчетПоСериямВНЗП КАК ВестиУчетПоСериямВНЗП,
	|	Док.ХарактеристикаНоменклатуры,
	|	ВЫБОР КОГДА Док.Номенклатура.ВестиУчетПоСериямВНЗП ТОГДА
	|		Док.СерияНоменклатуры
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК СерияНоменклатуры,
	|	Док.НоменклатурнаяГруппа,
	|	Док.СтатьяЗатрат,
	|
	|	Док.СчетЗатрат,
	|	Док.СчетЗатратНУ,
	|	Док.СчетЗатрат КАК СчетУчета,
	|	Док.СчетЗатратНУ КАК СчетУчетаНУ,
	|
	|	Док.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаНЗП,
	|
	|	Док.Ссылка.Подразделение КАК ПодразделениеНЗП,
	|	Док.Ссылка.ПодразделениеОрганизации	КАК ПодразделениеОрганизацииНЗП,
	|
	|	ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК Заказ,
	|
	|	ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказРегл,
	|
	|	ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказНЗП,
	|
	|	ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство И Док.Заказ <> &ПустойЗаказНаПроизводство
	|		  И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказНЗПРегл,
	|
	|	Док.ТипСтоимости,
	|	ВЫБОР КОГДА Док.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ВидыНормативнойСтоимостиПроизводства.Фиксированная) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.КодыОперацийЗатратыНаВыпускПродукции.ВозвратМатериаловИзПроизводстваФикс)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.КодыОперацийЗатратыНаВыпускПродукции.ВозвратМатериаловИзПроизводстваРасч)
	|	КОНЕЦ КАК КодОперации,
	|
	|	Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Количество,
	|	Док.Сумма,
	|	Док.СуммаРегл,
	|	Док.СуммаРегл КАК СуммаНал
	|
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.ОприходованиеМатериаловИзПроизводства.Материалы КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|	И Док.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОприходованиеМатериаловИзПроизводства.Материалы)
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаДляДокументаОприходованиеМатериалов()
		// Процедура формирует временную таблицу документа.
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//	ТекстЗапросаДокумент - Строка - Текст запроса
		//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
		//

		public void СформироватьВременнуюТаблицуДокумента(/*
	СтруктураШапкиДокумента,
	ТекстЗапросаДокумент,
	МенеджерВременныхТаблиц
	*/)
		{
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапросаДокумент;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*УстановитьПараметрыЗапроса(
		СтруктураШапкиДокумента,
		Запрос
	);*/
			/*Запрос.Выполнить();*/
			/*РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		"ТаблицаДокумента"
	);*/
		}
		// СформироватьВременнуюТаблицуДокумента()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО РЕГИСТРАМ
		// Процедура формирует строку движения по регистру "Затраты на выпуск продукции".
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура – Реквизиты документа
		//  СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки из результата запроса
		//  Количество - Число - Количество затрат
		//  Сумма - Число - Сумма затрат
		//  ПостояннаяРазница - Число - Сумма затрат в части постоянной разницы
		//  ВременнаяРазница - Число - Сумма затрат в части временной разницы
		//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отражения в учете
		//	НаборЗаписейЗатратыНаВыпуск - ТаблицаЗначений - Таблица движений регистра накопления "Затраты на выпуск".
		//

		public void СформироватьСтрокуДвиженияПоРегиструЗатратыНаВыпускПродукции(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	Количество,
	Сумма,
	ПостояннаяРазница,
	ВременнаяРазница,
	ВидОтраженияВУчете,
	НаборЗаписейЗатратыНаВыпуск
	*/)
		{
			if(true/*Количество = 0
	   И Сумма = 0
	   И ПостояннаяРазница = 0
	   И ВременнаяРазница = 0*/)
			{
			}
			/*// Давальческое сырье не отражается в движениях регистра по налоговому учету.
*/
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВНалоговомУчете
	   И СтрокаВыборки.СтатусМатериальныхЗатрат = Перечисления.СтатусыМатериальныхЗатратНаПроизводство.ПринятыеВПереработку*/)
			{
			}
			/*// В движениях по регистру "Затраты на выпуск" должны быть заполнены измерения:
*/
			/*//	- Организация - заполняется только при отражении документа в бухгалтерском или налоговомучете,
*/
			/*//	- Подразделение,
*/
			/*//	- СчетУчета - заполняется только при отражении документа в бухгалтерском, налоговом или международном учете,
*/
			/*//	- НоменклатурнаяГруппа,
*/
			/*//	- Продукция,
*/
			/*//	- ХарактеристикаПродукции,
*/
			/*//	- СерияПродукции,
*/
			/*//	- Спецификация,
*/
			/*//	- Заказ,
*/
			/*//	- ДокументВыпуска,
*/
			/*//
*/
			/*//	- СтатьяЗатрат,
*/
			/*//	- Затрата,
*/
			/*//	- ХарактеристикаЗатраты,
*/
			/*//	- СерияЗатраты,
*/
			/*//	- НоменклатурнаяГруппаНЗП,
*/
			/*//	- ЗаказНЗП,
*/
			/*//	- ПодразделениеНЗП,
*/
			/*НоваяСтрока = НаборЗаписейЗатратыНаВыпуск.Добавить();*/
			/*НоваяСтрока.Период = СтруктураШапкиДокумента.Дата;*/
			/*НоваяСтрока.Активность = Истина;*/
			/*ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВыборки);*/
			/*// Заполнение заказа зависит от вида отражения в учете.
*/
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете*/)
			{
				/*НоваяСтрока.Подразделение = СтрокаВыборки.Подразделение;*/
				/*НоваяСтрока.ПодразделениеНЗП = СтрокаВыборки.ПодразделениеНЗП;*/
				/*НоваяСтрока.Заказ = СтрокаВыборки.Заказ;*/
				/*НоваяСтрока.ЗаказНЗП = СтрокаВыборки.ЗаказНЗП;*/
			}
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете*/)
			{
				/*НоваяСтрока.СчетУчета = СтрокаВыборки.СчетЗатрат;*/
			}
			/*НоваяСтрока.Количество = Количество;*/
			/*НоваяСтрока.Сумма = Сумма;*/
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВНалоговомУчете*/)
			{
				/*НоваяСтрока.ПостояннаяРазница = ПостояннаяРазница;*/
				/*НоваяСтрока.ВременнаяРазница = ВременнаяРазница;*/
			}
		}
		// СформироватьСтрокуДвиженияПоРегиструЗатратыНаВыпускПродукции()
		// Процедура формирует движения по регистру "Затраты на выпуск продукции".
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	Количество - Число - Количество затрат
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void СформироватьДвиженияПоРегистрамЗатратыНаВыпускПродукции(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	Количество,
	СтруктураНаборыЗаписей
	*/)
		{
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете*/)
			{
				/*ИмяРегистра = "ЗатратыНаВыпускПродукции";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*// ПостояннаяРазница
*/
				/*// ВременнаяРазница
*/
				/*Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете,
			СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете*/)
			{
				/*ИмяРегистра = "ЗатратыНаВыпускПродукцииБухгалтерскийУчет";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*// ПостояннаяРазница
*/
				/*// ВременнаяРазница
*/
				/*Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете,
			СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВНалоговомУчете*/)
			{
				/*ИмяРегистра = "ЗатратыНаВыпускПродукцииНалоговыйУчет";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				if(true/*СтруктураШапкиДокумента.ПоддержкаПБУ18*/)
				{
					/*ВременнаяРазница = СтрокаВыборки.СуммаБУ - СтрокаВыборки.СуммаНУ;*/
				}
				/*// ПостояннаяРазница
*/
				/*// ВременнаяРазница
*/
				/*Перечисления.ВидыОтраженияВУчете.ОтражатьВНалоговомУчете,
			СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
		}
		// СформироватьДвиженияПоРегистрамЗатратыНаВыпускПродукции()
		// Процедура формирует строку движения по регистру "Затраты на выпуск продукции (наработка)".
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура – Реквизиты документа
		//  СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки из результата запроса
		//  Количество - Число - Количество затрат
		//  Сумма - Число - Сумма затрат
		//  ПостояннаяРазница - Число - Сумма затрат в части постоянной разницы
		//  ВременнаяРазница - Число - Сумма затрат в части временной разницы
		//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отражения в учете
		//	НаборЗаписейЗатратыНаВыпуск - ТаблицаЗначений - Таблица движений регистра накопления "Затраты на выпуск (наработка)".
		//

		public void СформироватьСтрокуДвиженияПоРегиструЗатратыНаВыпускПродукцииНаработка(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	Количество,
	Сумма,
	ВидОтраженияВУчете,
	НаборЗаписейЗатратыНаВыпуск
	*/)
		{
			if(true/*Количество = 0
	   И Сумма = 0*/)
			{
			}
			/*// Давальческое сырье не отражается в движениях регистра по налоговому учету.
*/
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВНалоговомУчете
	   И СтрокаВыборки.СтатусМатериальныхЗатрат = Перечисления.СтатусыМатериальныхЗатратНаПроизводство.ПринятыеВПереработку*/)
			{
			}
			/*// В движениях по регистру "Затраты на выпуск (наработка)" должны быть заполнены измерения:
*/
			/*//	- Организация - заполняется только при отражении документа в бухгалтерском или налоговомучете,
*/
			/*//	- Подразделение,
*/
			/*//	- СчетУчета - заполняется только при отражении документа в бухгалтерском, налоговом или международном учете,
*/
			/*//	- НоменклатурнаяГруппа,
*/
			/*//	- Продукция,
*/
			/*//	- ХарактеристикаПродукции,
*/
			/*//	- Заказ,
*/
			/*//
*/
			/*//	- СтатьяЗатрат,
*/
			/*//	- Затрата,
*/
			/*//	- ХарактеристикаЗатраты,
*/
			/*//	- СерияЗатраты,
*/
			/*//	- НоменклатурнаяГруппаНЗП,
*/
			/*//	- ЗаказНЗП,
*/
			/*//	- ПодразделениеНЗП,
*/
			/*НоваяСтрока = НаборЗаписейЗатратыНаВыпуск.Добавить();*/
			/*НоваяСтрока.Период = СтруктураШапкиДокумента.Дата;*/
			/*НоваяСтрока.Активность = Истина;*/
			/*ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВыборки);*/
			/*// Заполнение заказа зависит от вида отражения в учете.
*/
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете*/)
			{
				/*НоваяСтрока.Подразделение = СтрокаВыборки.Подразделение;*/
				/*НоваяСтрока.ПодразделениеНЗП = СтрокаВыборки.ПодразделениеНЗП;*/
				/*НоваяСтрока.Заказ = СтрокаВыборки.Заказ;*/
				/*НоваяСтрока.ЗаказНЗП = СтрокаВыборки.ЗаказНЗП;*/
			}
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете*/)
			{
				/*НоваяСтрока.СчетУчета = СтрокаВыборки.СчетЗатрат;*/
			}
			/*НоваяСтрока.Количество = Количество;*/
			/*НоваяСтрока.Сумма = Сумма;*/
		}
		// СформироватьСтрокуДвиженияПоРегиструЗатратыНаВыпускПродукцииНаработка()
		// Процедура формирует движения по регистру "Затраты на выпуск продукции (наработка)".
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void СформироватьДвиженияПоРегистрамЗатратыНаВыпускПродукцииНаработка(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	СтруктураНаборыЗаписей
	*/)
		{
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете*/)
			{
				/*ИмяРегистра = "ЗатратыНаВыпускПродукцииНаработка";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*СформироватьСтрокуДвиженияПоРегиструЗатратыНаВыпускПродукцииНаработка(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			СтрокаВыборки.Количество,
			СтрокаВыборки.СуммаУУ,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете,
			СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете*/)
			{
				/*ИмяРегистра = "ЗатратыНаВыпускПродукцииНаработкаБухгалтерскийУчет";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*СформироватьСтрокуДвиженияПоРегиструЗатратыНаВыпускПродукцииНаработка(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			СтрокаВыборки.Количество,
			СтрокаВыборки.СуммаБУ,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете,
			СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВНалоговомУчете*/)
			{
				/*ИмяРегистра = "ЗатратыНаВыпускПродукцииНаработкаНалоговыйУчет";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*СформироватьСтрокуДвиженияПоРегиструЗатратыНаВыпускПродукцииНаработка(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			СтрокаВыборки.Количество,
			СтрокаВыборки.СуммаНУ,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВНалоговомУчете,
			СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
		}
		// СформироватьДвиженияПоРегистрамЗатратыНаВыпускПродукцииНаработка()
		//////////////////////////////////////////////////////////////////////////////////
		// ФОРМИРОВАНИЕ ДВИЖЕНИЙ ПО РАСПРЕДЕЛЕНИЮ ЗАТРАТ ПРИ РАСШИРЕННОЙ АНАЛИТИКЕ
		// Процедура формирует движения по регистрам "Учет затрат" (распределение на выпуск).
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	СтруктураКлючиАналитики - Структура - Структура с таблицами ключей аналитики для кэширования данных
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void ДвиженияПоРегистрамРаспределениеЗатрат(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	СтруктураКлючиАналитики,
	СтруктураНаборыЗаписей*/)
		{
			/*МассивКодовОпераций = Новый Массив;*/
			/*МассивКодовОпераций.Добавить(Перечисления.КодыОперацийЗатратыНаВыпускПродукции.СписаниеНЗП);*/
			/*МассивКодовОпераций.Добавить(Перечисления.КодыОперацийЗатратыНаВыпускПродукции.СписаниеНЗПФикс);*/
			/*МассивКодовОпераций.Добавить(Перечисления.КодыОперацийЗатратыНаВыпускПродукции.ВозвратМатериаловИзПроизводстваРасч);*/
			/*МассивКодовОпераций.Добавить(Перечисления.КодыОперацийЗатратыНаВыпускПродукции.ВозвратМатериаловИзПроизводстваФикс);*/
			/*МассивКодовОпераций.Добавить(Перечисления.КодыОперацийЗатратыНаВыпускПродукции.КорректировкаНЗПРасч);*/
			/*МассивКодовОпераций.Добавить(Перечисления.КодыОперацийЗатратыНаВыпускПродукции.КорректировкаНЗПФикс);*/
			/*МассивКодовОпераций.Добавить(Перечисления.КодыОперацийЗатратыНаВыпускПродукции.ОприходованиеНЗП);*/
			/*// Для операций корректировки НЗП движение по распределению затрат не формируется.
*/
			if(true/*МассивКодовОпераций.Найти(СтрокаВыборки.КодОперации) <> Неопределено*/)
			{
			}
			/*//По материалам принятым в переработку движения по регистрам учета затрат не формируются
*/
			if(true/*ОпределитьСтатусМатериальныхЗатратВПереработку(СтрокаВыборки)*/)
			{
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете
	   И СтруктураШапкиДокумента.ОтражатьЗатратыВУпрУчете*/)
			{
				/*ИмяРегистра = "УчетЗатрат";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*АналитикаВидаУчета = Неопределено;*/
				/*АналитикаУчетаЗатрат = Неопределено;*/
				/*АналитикаУчетаПартий = Неопределено;*/
				/*АналитикаРаспределенияЗатрат = Неопределено;*/
				/*КорАналитикаВидаУчета = Неопределено;*/
				/*КорАналитикаУчетаПартий = Неопределено;*/
				/*КорАналитикаРаспределенияЗатрат = Неопределено;*/
				/*ПолучитьАналитикуРаспределенияЗатрат(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете,
			СтруктураКлючиАналитики,
			АналитикаВидаУчета,
			АналитикаУчетаЗатрат,
			АналитикаУчетаПартий,
			АналитикаРаспределенияЗатрат,
			КорАналитикаВидаУчета,
			КорАналитикаУчетаПартий,
			КорАналитикаРаспределенияЗатрат
		);*/
				/*// Движения "Расход" по исходной аналитике.
*/
				/*// КорАналитикаВидаУчета
*/
				/*// КорАналитикаУчетаЗатрат
*/
				/*// КорАналитикаУчетаПартий
*/
				/*// КорАналитикаРаспределенияЗатрат
*/
				/*// КоличествоНУ,
*/
				/*// СтоимостьНУ,
*/
				/*// ПостояннаяРазница
*/
				/*СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
				/*// Движения "Приход" по новой аналитике.
*/
				/*// КоличествоНУ,
*/
				/*// СтоимостьНУ,
*/
				/*// ПостояннаяРазница
*/
				/*СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете*/)
			{
				/*ИмяРегистра = "УчетЗатратРегл";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*АналитикаВидаУчета = Неопределено;*/
				/*АналитикаУчетаЗатрат = Неопределено;*/
				/*АналитикаУчетаПартий = Неопределено;*/
				/*АналитикаРаспределенияЗатрат = Неопределено;*/
				/*КорАналитикаВидаУчета = Неопределено;*/
				/*КорАналитикаУчетаПартий = Неопределено;*/
				/*КорАналитикаРаспределенияЗатрат = Неопределено;*/
				/*ПолучитьАналитикуРаспределенияЗатрат(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете,
			СтруктураКлючиАналитики,
			АналитикаВидаУчета,
			АналитикаУчетаЗатрат,
			АналитикаУчетаПартий,
			АналитикаРаспределенияЗатрат,
			КорАналитикаВидаУчета,
			КорАналитикаУчетаПартий,
			КорАналитикаРаспределенияЗатрат
		);*/
				if(true/*СтруктураШапкиДокумента.ОтражатьВНалоговомУчете*/)
				{
					/*КоличествоНУ = СтрокаВыборки.Количество;*/
					/*СтоимостьНУ = СтрокаВыборки.СуммаНУ;*/
				}
				/*// Движения "Расход" по исходной аналитике.
*/
				/*// КорАналитикаВидаУчета
*/
				/*// КорАналитикаУчетаЗатрат
*/
				/*// КорАналитикаУчетаПартий
*/
				/*// КорАналитикаРаспределенияЗатрат
*/
				/*// ПостояннаяРазница
*/
				/*СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
				/*// Движения "Приход" по новой аналитике.
*/
				/*// ПостояннаяРазница
*/
				/*СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
		}
		// ДвиженияПоРегистрамРаспределениеЗатрат()
		// Процедура получает ключи аналитики для распределения затрат.
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Строка выборки из результата запроса
		//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отражения в учете для получения ключа аналитики
		//	СтруктураКлючиАналитики - Структура - Структура с таблицами ключей аналитики для кэширования данных
		//
		// Выходные параметры:
		//	АналитикаВидаУчета - СправочникСсылка.КлючиАналитикиВидаУчета - Ключ аналитики
		//	АналитикаУчетаЗатрат - СправочникСсылка.КлючиАналитикиУчетаЗатрат - Ключ аналитики
		//	АналитикаУчетаПартий - СправочникСсылка.КлючиАналитикиУчетаПартий - Ключ аналитики
		//	АналитикаРаспределенияЗатрат - СправочникСсылка.КлючиАналитикиРаспределенияЗатрат - Ключ аналитики
		//	КорАналитикаВидаУчета - СправочникСсылка.КлючиАналитикиВидаУчета - Ключ аналитики
		//	КорАналитикаУчетаПартий - СправочникСсылка.КлючиАналитикиУчетаПартий - Ключ аналитики
		//	КорАналитикаРаспределенияЗатрат - СправочникСсылка.КлючиАналитикиРаспределенияЗатрат - Ключ аналитики
		//

		public void ПолучитьАналитикуРаспределенияЗатрат(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	ВидОтраженияВУчете,
	СтруктураКлючиАналитики,
	АналитикаВидаУчета,
	АналитикаУчетаЗатрат,
	АналитикаУчетаПартий,
	АналитикаРаспределенияЗатрат,
	КорАналитикаВидаУчета,
	КорАналитикаУчетаПартий,
	КорАналитикаРаспределенияЗатрат
	*/)
		{
			/*СтруктураПараметров = Новый Структура;*/
			if(true/*СтрокаВыборки.ВидВыпуска = Перечисления.ВидыВыпуска.Выпуск*/)
			{
				/*СтруктураПараметров.Вставить("РазделУчета", Перечисления.РазделыУчета.ЗатратыНаВыпуск);*/
			}
			/*СтруктураПараметров.Вставить("Подразделение", СтрокаВыборки.Подразделение);*/
			/*СтруктураПараметров.Вставить("Организация", СтрокаВыборки.Организация);*/
			/*СтруктураПараметров.Вставить("ПодразделениеОрганизации", СтрокаВыборки.ПодразделениеОрганизации);*/
			/*СтруктураПараметров.Вставить("СчетУчета", СтрокаВыборки.СчетУчета);*/
			/*СтруктураПараметров.Вставить("СчетУчетаНУ", СтрокаВыборки.СчетУчетаНУ);*/
			/*АналитикаВидаУчета = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
		СтруктураШапкиДокумента,
		СтруктураПараметров,
		Перечисления.КлючиАналитики.АналитикаВидаУчета,
		ВидОтраженияВУчете,
		СтруктураКлючиАналитики
	);*/
			/*СтруктураПараметров = Новый Структура;*/
			/*СтруктураПараметров.Вставить("СтатьяЗатрат", СтрокаВыборки.СтатьяЗатрат);*/
			/*СтруктураПараметров.Вставить("ХарактерЗатрат", Перечисления.ХарактерЗатрат.ПроизводственныеРасходы);*/
			if(true/*СтрокаВыборки.ВидЗатрат = Перечисления.ВидыЗатрат.Материальные*/)
			{
				/*СтруктураПараметров.Вставить("Затрата", СтрокаВыборки.Затрата);*/
				/*СтруктураПараметров.Вставить("ХарактеристикаЗатраты", СтрокаВыборки.ХарактеристикаЗатраты);*/
				if(true/*СтрокаВыборки.ВестиУчетПоСериямВНЗП*/)
				{
					/*СтруктураПараметров.Вставить("СерияЗатраты", СтрокаВыборки.СерияЗатраты);*/
				}
			}
			/*АналитикаУчетаЗатрат = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
		СтруктураШапкиДокумента,
		СтруктураПараметров,
		Перечисления.КлючиАналитики.АналитикаУчетаЗатрат,
		ВидОтраженияВУчете,
		СтруктураКлючиАналитики
	);*/
			/*СтруктураПараметров = Новый Структура;*/
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете*/)
			{
				/*СтруктураПараметров.Вставить("Заказ", СтрокаВыборки.Заказ);*/
			}
			/*АналитикаУчетаПартий = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
		СтруктураШапкиДокумента,
		СтруктураПараметров,
		Перечисления.КлючиАналитики.АналитикаУчетаПартий,
		ВидОтраженияВУчете,
		СтруктураКлючиАналитики
	);*/
			/*СтруктураПараметров = Новый Структура;*/
			/*СтруктураПараметров.Вставить("НоменклатурнаяГруппа", СтрокаВыборки.НоменклатурнаяГруппа);*/
			/*СтруктураПараметров.Вставить("Продукция", СтрокаВыборки.Продукция);*/
			/*СтруктураПараметров.Вставить("ХарактеристикаПродукции", СтрокаВыборки.ХарактеристикаПродукции);*/
			/*СтруктураПараметров.Вставить("СерияПродукции", СтрокаВыборки.СерияПродукции);*/
			/*СтруктураПараметров.Вставить("Спецификация", СтрокаВыборки.Спецификация);*/
			/*АналитикаРаспределенияЗатрат = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
		СтруктураШапкиДокумента,
		СтруктураПараметров,
		Перечисления.КлючиАналитики.АналитикаРаспределенияЗатрат,
		ВидОтраженияВУчете,
		СтруктураКлючиАналитики
	);*/
			/*СтруктураПараметров = Новый Структура;*/
			/*СтруктураПараметров.Вставить("РазделУчета", Перечисления.РазделыУчета.Затраты);*/
			if(true/*СтрокаВыборки.ПодразделениеНЗП = Неопределено*/)
			{
				/*СтруктураПараметров.Вставить("Подразделение", СтрокаВыборки.Подразделение);*/
			}
			/*СтруктураПараметров.Вставить("Организация", СтрокаВыборки.Организация);*/
			/*СтруктураПараметров.Вставить("СчетУчета", СтрокаВыборки.СчетУчета);*/
			/*СтруктураПараметров.Вставить("СчетУчетаНУ", СтрокаВыборки.СчетУчетаНУ);*/
			if(true/*СтрокаВыборки.ПодразделениеОрганизацииНЗП = Неопределено*/)
			{
				/*СтруктураПараметров.Вставить("ПодразделениеОрганизации", СтрокаВыборки.ПодразделениеОрганизации);*/
			}
			/*КорАналитикаВидаУчета = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
		СтруктураШапкиДокумента,
		СтруктураПараметров,
		Перечисления.КлючиАналитики.АналитикаВидаУчета,
		ВидОтраженияВУчете,
		СтруктураКлючиАналитики
	);*/
			/*СтруктураПараметров = Новый Структура;*/
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете*/)
			{
				/*СтруктураПараметров.Вставить("Заказ", СтрокаВыборки.ЗаказНЗП);*/
			}
			/*КорАналитикаУчетаПартий = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
		СтруктураШапкиДокумента,
		СтруктураПараметров,
		Перечисления.КлючиАналитики.АналитикаУчетаПартий,
		ВидОтраженияВУчете,
		СтруктураКлючиАналитики
	);*/
			/*СтруктураПараметров = Новый Структура;*/
			/*СтруктураПараметров.Вставить("НоменклатурнаяГруппа", СтрокаВыборки.НоменклатурнаяГруппаНЗП);*/
			if(true/*ТипЗнч(СтрокаВыборки.ДокументВыпуска) = Тип("ДокументСсылка.КомплектацияНоменклатуры")*/)
			{
				/*СтруктураПараметров.Вставить("Продукция", СтрокаВыборки.Продукция);*/
				/*СтруктураПараметров.Вставить("ХарактеристикаПродукции", СтрокаВыборки.ХарактеристикаПродукции);*/
				/*СтруктураПараметров.Вставить("СерияПродукции", СтрокаВыборки.СерияПродукции);*/
				/*СтруктураПараметров.Вставить("Спецификация", СтрокаВыборки.Спецификация);*/
			}
			/*КорАналитикаРаспределенияЗатрат = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
		СтруктураШапкиДокумента,
		СтруктураПараметров,
		Перечисления.КлючиАналитики.АналитикаРаспределенияЗатрат,
		ВидОтраженияВУчете,
		СтруктураКлючиАналитики
	);*/
		}
		// ПолучитьАналитикуРаспределенияЗатрат()
		//////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО РАСПРЕДЕЛЕНИЮ МАТЕРИАЛОВ
		// Функция определяет код операции для регистра "Затраты на выпуск продукции" по реквизитам документа.
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//
		// Возвращаемое значение:
		//  ПеречислениеСсылка.КодыОперацийВыпускПродукции – код операции выпуска продукции
		//

		public object ПолучитьКодОперацииЗатратыНаВыпуск(/*
	СтруктураШапкиДокумента
	*/)
		{
			if(true/*ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.КорректировкаНЗП")*/)
			{
				if(true/*СтруктураШапкиДокумента.ТипСтоимости = Перечисления.ВидыНормативнойСтоимостиПроизводства.Рассчитывается*/)
				{
					/*КодОперации = Перечисления.КодыОперацийЗатратыНаВыпускПродукции.КорректировкаНЗПРасч;*/
				}
			}
			return null;
		}
		// ПолучитьКодОперацииЗатратыНаВыпуск()
		// Функция формирует текст запроса по табличной части "Распределение материалов".
		//
		// Возвращаемое значение:
		//	Строка - Текст запроса
		//

		public object СформироватьТекстЗапросаПоРаспределениюМатериалов(/**/)
		{
			/*ТекстЗапроса = "
	|//ТекстТаблицаСтоимостиУпр
	|//ТекстТаблицаСтоимостиРегл
	|
	|ВЫБРАТЬ
	|	Док.*,
	|	Док.СтатьяЗатрат.ВидЗатрат КАК ВидЗатрат,
	|	Док.СтатьяЗатрат.СтатусМатериальныхЗатрат КАК СтатусМатериальныхЗатрат,
	|	Неопределено КАК СпособРаспределенияЗатрат,
	|	Док.Номенклатура КАК Затрата,
	|	Док.ХарактеристикаНоменклатуры КАК ХарактеристикаЗатраты,
	|	Док.СерияНоменклатуры КАК СерияЗатраты,
	|	ВЫБОР КОГДА Док.КодОперации <> Неопределено ТОГДА
	|		Док.КодОперации 
	|	ИНАЧЕ
	|   	&ПрямыеЗатраты
	|	КОНЕЦ КАК КодОперации,
	|
	|	ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя
	|		И Док.Заказ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.Переработка)
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыВыпускаПродукции.ПродукцияИзДавальческогоСырья)
	|	ИНАЧЕ
	|      	Неопределено
	|	КОНЕЦ КАК ВариантВыпускаПродукции,
	|
	|	&Ссылка КАК ДокументВыпуска,
	|
	|	//ПрямыеЗатратыУУ	ВЫБОР КОГДА Док.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ВидыНормативнойСтоимостиПроизводства.Фиксированная) ТОГДА
	|	//ПрямыеЗатратыУУ		Док.Сумма
	|	//ПрямыеЗатратыУУ 	КОГДА ТаблицаСтоимостиЗатратУУ.КоличествоОстаток = 0
	|	//ПрямыеЗатратыУУ			ИЛИ ТаблицаСтоимостиЗатратУУ.КоличествоОстаток ЕСТЬ NULL ТОГДА
	|	//ПрямыеЗатратыУУ		0
	|	//ПрямыеЗатратыУУ	ИНАЧЕ
	|	//ПрямыеЗатратыУУ		Док.Количество *
	|	//ПрямыеЗатратыУУ		ТаблицаСтоимостиЗатратУУ.СтоимостьОстаток /
	|	//ПрямыеЗатратыУУ		ТаблицаСтоимостиЗатратУУ.КоличествоОстаток
	|	//ПрямыеЗатратыУУ	КОНЕЦ КАК СуммаУУ,
	|
	|	//ПрямыеЗатратыБУ	ВЫБОР КОГДА Док.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ВидыНормативнойСтоимостиПроизводства.Фиксированная) ТОГДА
	|	//ПрямыеЗатратыБУ		Док.СуммаРегл
	|	//ПрямыеЗатратыБУ 	КОГДА ТаблицаСтоимостиЗатратРегл.КоличествоОстаток = 0
	|	//ПрямыеЗатратыБУ			ИЛИ ТаблицаСтоимостиЗатратРегл.КоличествоОстаток ЕСТЬ NULL ТОГДА
	|	//ПрямыеЗатратыБУ		0
	|	//ПрямыеЗатратыБУ	ИНАЧЕ
	|	//ПрямыеЗатратыБУ		Док.Количество *
	|	//ПрямыеЗатратыБУ		ТаблицаСтоимостиЗатратРегл.СтоимостьОстаток /
	|	//ПрямыеЗатратыБУ		ТаблицаСтоимостиЗатратРегл.КоличествоОстаток
	|	//ПрямыеЗатратыБУ	КОНЕЦ КАК СуммаБУ,
	|
	|	//ПрямыеЗатратыБУ	ВЫБОР КОГДА Док.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ВидыНормативнойСтоимостиПроизводства.Фиксированная) ТОГДА
	|	//ПрямыеЗатратыБУ		Док.СуммаНал
	|	//ПрямыеЗатратыБУ 	КОГДА ТаблицаСтоимостиЗатратРегл.КоличествоНУОстаток = 0
	|	//ПрямыеЗатратыБУ			ИЛИ ТаблицаСтоимостиЗатратРегл.КоличествоНУОстаток ЕСТЬ NULL ТОГДА
	|	//ПрямыеЗатратыБУ		0
	|	//ПрямыеЗатратыБУ	ИНАЧЕ
	|	//ПрямыеЗатратыБУ		Док.Количество *
	|	//ПрямыеЗатратыБУ		ТаблицаСтоимостиЗатратРегл.СтоимостьНУОстаток /
	|	//ПрямыеЗатратыБУ		ТаблицаСтоимостиЗатратРегл.КоличествоНУОстаток
	|	//ПрямыеЗатратыБУ	КОНЕЦ КАК СуммаНУ,
	|
	|	//ФиксСтоимость		Док.Сумма КАК СуммаУУ,
	|	//ФиксСтоимость		Док.СуммаРегл КАК СуммаБУ,
	|	//ФиксСтоимость		Док.СуммаНал КАК СуммаНУ,
	|
	|	//ПоНулевойУУ 		0 КАК СуммаУУ,
	|	//ПоНулевойБУ 		0 КАК СуммаБУ,
	|	//ПоНулевойБУ 		0 КАК СуммаНУ,
	|
	|	Док.Количество
	|
	|ИЗ 
	|	ТаблицаДокумента КАК Док
	|
	|	//ПрямыеЗатратыУУ	ЛЕВОЕ СОЕДИНЕНИЕ 
	|	//ПрямыеЗатратыУУ		ТаблицаСтоимостиЗатрат КАК ТаблицаСтоимостиЗатратУУ
	|	//ПрямыеЗатратыУУ	ПО 
	|	//ПрямыеЗатратыУУ		Док.Номенклатура = ТаблицаСтоимостиЗатратУУ.Затрата
	|	//ПрямыеЗатратыУУ		И Док.ХарактеристикаНоменклатуры = ТаблицаСтоимостиЗатратУУ.ХарактеристикаЗатраты
	|	//ПрямыеЗатратыУУ		И Док.СерияНоменклатуры = ТаблицаСтоимостиЗатратУУ.СерияЗатраты
	|	//ПрямыеЗатратыУУ		И Док.СтатьяЗатрат = ТаблицаСтоимостиЗатратУУ.СтатьяЗатрат
	|	//ПрямыеЗатратыУУ		И Док.НоменклатурнаяГруппаНЗП = ТаблицаСтоимостиЗатратУУ.НоменклатурнаяГруппа
	|	//ПрямыеЗатратыУУ		И Док.ЗаказНЗП = ТаблицаСтоимостиЗатратУУ.Заказ
	|	//ПрямыеЗатратыУУ		И Док.ПодразделениеНЗП = ТаблицаСтоимостиЗатратУУ.Подразделение
	|
	|	//ПрямыеЗатратыБУ	ЛЕВОЕ СОЕДИНЕНИЕ 
	|	//ПрямыеЗатратыБУ		ТаблицаСтоимостиЗатратРегл КАК ТаблицаСтоимостиЗатратРегл
	|	//ПрямыеЗатратыБУ	ПО 
	|	//ПрямыеЗатратыБУ		Док.Номенклатура = ТаблицаСтоимостиЗатратРегл.Затрата
	|	//ПрямыеЗатратыБУ		И Док.ХарактеристикаНоменклатуры = ТаблицаСтоимостиЗатратРегл.ХарактеристикаЗатраты
	|	//ПрямыеЗатратыБУ		И Док.СерияНоменклатуры = ТаблицаСтоимостиЗатратРегл.СерияЗатраты
	|	//ПрямыеЗатратыБУ		И Док.СтатьяЗатрат = ТаблицаСтоимостиЗатратРегл.СтатьяЗатрат
	|	//ПрямыеЗатратыБУ		И Док.НоменклатурнаяГруппаНЗП = ТаблицаСтоимостиЗатратРегл.НоменклатурнаяГруппа
	|	//ПрямыеЗатратыБУ		И Док.ЗаказНЗПРегл = ТаблицаСтоимостиЗатратРегл.ЗаказРегл
	|	//ПрямыеЗатратыБУ		И (Док.СчетЗатрат = ТаблицаСтоимостиЗатратРегл.СчетУчета
	|	//ПрямыеЗатратыБУ			ИЛИ ТаблицаСтоимостиЗатратРегл.СчетУчета = Неопределено)
	|	//ПрямыеЗатратыБУ		И Док.ПодразделениеОрганизацииНЗП = ТаблицаСтоимостиЗатратРегл.ПодразделениеОрганизации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Док.НомерСтроки
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаПоРаспределениюМатериалов()
		// Функция заменяет комментарии в тексте запроса в зависимости от отражения в учете.
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	ИмяТабличнойЧасти - Строка - Имя табличной части документа
		//  ИсходныхТекстЗапроса – Строка – Текст запроса
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса, в котором заменены комментарии.
		//

		public object ЗаменитьКомментарииВТекстеЗапросаПоРаспределениюМатериалов(/*
	СтруктураШапкиДокумента,
	ИмяТабличнойЧасти,
	ИсходныйТекстЗапроса
	*/)
		{
			/*ТекстЗапроса = ИсходныйТекстЗапроса;*/
			if(true/*СтруктураШапкиДокумента.РасчетПоПрямымЗатратамУпр*/)
			{
				/*ТекстЗапросаТаблицаСтоимости = СформироватьТекстЗапросаТаблицыСтоимостиЗатрат(
			СтруктураШапкиДокумента,
			ИмяТабличнойЧасти
		);*/
				/*ТекстЗапросаТаблицаСтоимости = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
			ТекстЗапросаТаблицаСтоимости,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
		);*/
				/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстТаблицаСтоимостиУпр", ТекстЗапросаТаблицаСтоимости);*/
				/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ПрямыеЗатратыУУ", "");*/
			}
			if(true/*СтруктураШапкиДокумента.РасчетПоПрямымЗатратамРегл*/)
			{
				/*ТекстЗапросаТаблицаСтоимости = СформироватьТекстЗапросаТаблицыСтоимостиЗатрат(
			СтруктураШапкиДокумента,
			ИмяТабличнойЧасти
		);*/
				/*ТекстЗапросаТаблицаСтоимости = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
			ТекстЗапросаТаблицаСтоимости,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
		);*/
				/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстТаблицаСтоимостиРегл", ТекстЗапросаТаблицаСтоимости);*/
				/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ПрямыеЗатратыБУ", "");*/
			}
			return null;
		}
		// ЗаменитьКомментарииВТекстеЗапросаПоРаспределениюМатериалов()
		// Процедура устанавливает параметры запроса.
		//
		// Параметры:
		//	СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	Запрос - Запрос - Запрос по распределению
		//

		public void УстановитьПараметрыЗапроса(/*
	СтруктураШапкиДокумента,
	Запрос
	*/)
		{
			/*Запрос.УстановитьПараметр("Ссылка", СтруктураШапкиДокумента.Ссылка);*/
			/*Запрос.УстановитьПараметр("КонДата", Новый Граница(СтруктураШапкиДокумента.Дата, ВидГраницы.Включая));*/
			/*Запрос.УстановитьПараметр("ПустойЗаказПокупателя", Документы.ЗаказПокупателя.ПустаяСсылка());*/
			/*Запрос.УстановитьПараметр("ПустойЗаказНаПроизводство", Документы.ЗаказНаПроизводство.ПустаяСсылка());*/
			/*Запрос.УстановитьПараметр("ПустоеПодразделение", Справочники.Подразделения.ПустаяСсылка());*/
			/*Запрос.УстановитьПараметр("ПустоеПодразделениеОрганизации", Справочники.ПодразделенияОрганизаций.ПустаяСсылка());*/
			/*Запрос.УстановитьПараметр("ПустаяСпецификация", Справочники.СпецификацииНоменклатуры.ПустаяСсылка());*/
			/*Запрос.УстановитьПараметр("ПустойСпособРаспределения", Справочники.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка());*/
			/*Запрос.УстановитьПараметр("ВидВыпускаВыпуск", Перечисления.ВидыВыпуска.Выпуск);*/
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете*/)
			{
				/*Запрос.УстановитьПараметр("УчетЗатратПоЗаказамНаПроизводство", СтруктураШапкиДокумента.УчетЗатратПоЗаказамНаПроизводство);*/
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете*/)
			{
				/*Запрос.УстановитьПараметр("УчетЗатратПоЗаказамНаПроизводствоРегл", СтруктураШапкиДокумента.УчетЗатратПоЗаказамНаПроизводствоРегл);*/
			}
			if(true/*СтруктураШапкиДокумента.ВидДокумента = "КомплектацияНоменклатуры"*/)
			{
				/*Запрос.УстановитьПараметр("СуммаДолейСтоимости", СтруктураШапкиДокумента.СуммаДолейСтоимости);*/
			}
			/*КодОперацииЗатратыНаВыпуск = ПолучитьКодОперацииЗатратыНаВыпуск(СтруктураШапкиДокумента);*/
			/*Запрос.УстановитьПараметр("ПрямыеЗатраты", КодОперацииЗатратыНаВыпуск);*/
			/*Запрос.УстановитьПараметр("ОтрицательныеЗатраты", Перечисления.КодыОперацийЗатратыНаВыпускПродукции.ОтрицательныеЗатраты);*/
		}
		// УстановитьПараметрыЗапроса()
		// Процедура формирует движения по табличной части "Распределение материалов".
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	УчетнаяПолитика - Структура - Учетная политика по управленческому учету
		//	УчетнаяПолитикаБух - Структура - Учетная политика по регламентированному учету
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса
		//

		public object СформироватьЗапросПоРаспределениюМатериалов(/*
	СтруктураШапкиДокумента, 
	УчетнаяПолитика,
	УчетнаяПолитикаБух
	*/)
		{
			if(true/*ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.КомплектацияНоменклатуры")*/)
			{
				if(true/*СтруктураШапкиДокумента.ВидКомплектации = Перечисления.ВидыКомплектации.Сборка*/)
				{
					/*ИмяТабличнойЧасти = "Комплектующие";*/
				}
			}
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаПоРаспределениюМатериалов();*/
			/*ТекстЗапроса = ЗаменитьКомментарииВТекстеЗапросаПоРаспределениюМатериалов(
		СтруктураШапкиДокумента,
		ИмяТабличнойЧасти,
		ТекстЗапросаСКомментариями
	);*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*УстановитьПараметрыЗапроса(
		СтруктураШапкиДокумента,
		Запрос
	);*/
			return null;
		}
		// СформироватьЗапросПоРаспределениюМатериалов()
		// Процедура формирует движения по табличной части "Распределение материалов".
		//
		// Параметры:
		//	СтруктураШапкиДокумента – Структура - Реквизиты документа
		//  ТекстЗапросаДокумент – Строка – Текст запроса по документу
		//	УчетнаяПолитика - Структура - Учетная политика по управленческому учету
		//	УчетнаяПолитикаБух - Структура - Учетная политика по регламентированному учету
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void СформироватьДвиженияПоРаспределениюМатериалов(/*
	СтруктураШапкиДокумента, 
	ТекстЗапросаДокумент,
	УчетнаяПолитика,
	УчетнаяПолитикаБух,
	СтруктураНаборыЗаписей
	*/)
		{
			if(true/*ПустаяСтрока(ТекстЗапросаДокумент)*/)
			{
			}
			/*МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;*/
			/*СформироватьВременнуюТаблицуДокумента(
		СтруктураШапкиДокумента,
		ТекстЗапросаДокумент,
		МенеджерВременныхТаблиц
	);*/
			if(true/*СтруктураШапкиДокумента.ИспользоватьРасширеннуюАналитику*/)
			{
				/*СформироватьТаблицуАналитики(
			СтруктураШапкиДокумента,
			МенеджерВременныхТаблиц
		);*/
			}
			/*Запрос = СформироватьЗапросПоРаспределениюМатериалов(
		СтруктураШапкиДокумента, 
		УчетнаяПолитика,
		УчетнаяПолитикаБух
	);*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*РезультатЗапроса = Запрос.Выполнить();*/
			/*РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		"ТаблицаДокумента"
	);*/
			if(true/*СтруктураШапкиДокумента.РасчетПоПрямымЗатратамУпр*/)
			{
				/*РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
			СтруктураШапкиДокумента,
			МенеджерВременныхТаблиц,
			"ТаблицаСтоимостиЗатрат"
		);*/
			}
			if(true/*СтруктураШапкиДокумента.РасчетПоПрямымЗатратамРегл*/)
			{
				/*РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
			СтруктураШапкиДокумента,
			МенеджерВременныхТаблиц,
			"ТаблицаСтоимостиЗатратРегл"
		);*/
			}
			if(true/*РезультатЗапроса.Пустой()*/)
			{
			}
			/*ТаблицаРаспределения = РезультатЗапроса.Выгрузить();*/
			/*ТипДокумента = ТипЗнч(СтруктураШапкиДокумента.Ссылка);*/
			if(true/*ТипДокумента = Тип("ДокументСсылка.КомплектацияНоменклатуры")
	   И СтруктураШапкиДокумента.ВидКомплектации = Перечисления.ВидыКомплектации.Разборка*/)
			{
				/*// Количество необходимо распределить пропорционально доле стоимости
*/
				/*РаспределятьПоДолеСтоимости = Истина;*/
				if(true/*СтруктураШапкиДокумента.КоэффициентЕдиницыХранения <> 0*/)
				{
					/*ВсегоКоличество = СтруктураШапкиДокумента.Количество * СтруктураШапкиДокумента.Коэффициент / СтруктураШапкиДокумента.КоэффициентЕдиницыХранения;*/
				}
				/*РаспределениеКоличества = ОбщегоНазначения.РаспределитьПропорционально(ВсегоКоличество, ТаблицаРаспределения.ВыгрузитьКолонку("ДоляСтоимости"), 3);*/
			}
			/*СтруктураКлючиАналитики = Новый Структура;*/
		}
		// СформироватьДвиженияПоРаспределениюМатериалов()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО РАСПРЕДЕЛЕНИЮ ВОЗВРАТНЫХ ОТХОДОВ
		// Функция формирует текст запроса по табличной части "Распределение возвратных отходов".
		//
		// Возвращаемое значение:
		//	Строка - Текст запроса
		//

		public object СформироватьТекстЗапросаПоРаспределениюВозвратныхОтходов(/**/)
		{
			/*ТекстЗапроса = "
	|//ТекстТаблицаСтоимостиУпр
	|//ТекстТаблицаСтоимостиРегл
	|
	|ВЫБРАТЬ
	|	Док.*,
	|	Док.СтатьяЗатрат.ВидЗатрат КАК ВидЗатрат,
	|	Док.СтатьяЗатрат.СтатусМатериальныхЗатрат КАК СтатусМатериальныхЗатрат,
	|	Неопределено КАК СпособРаспределенияЗатрат,
	|	Док.Номенклатура КАК Затрата,
	|	Док.ХарактеристикаНоменклатуры КАК ХарактеристикаЗатраты,
	|	Док.СерияНоменклатуры КАК СерияЗатраты,
	|	&ОтрицательныеЗатраты КАК КодОперации,
	|
	|	ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя
	|		И Док.Заказ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.Переработка)
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыВыпускаПродукции.ПродукцияИзДавальческогоСырья)
	|	ИНАЧЕ
	|      	Неопределено
	|	КОНЕЦ КАК ВариантВыпускаПродукции,
	|
	|	&Ссылка КАК ДокументВыпуска,
	|
	|	//ПрямыеЗатратыУУ 	ВЫБОР КОГДА ТаблицаСтоимостиЗатратУУ.КоличествоОстаток = 0
	|	//ПрямыеЗатратыУУ			ИЛИ ТаблицаСтоимостиЗатратУУ.КоличествоОстаток ЕСТЬ NULL ТОГДА
	|	//ПрямыеЗатратыУУ		0
	|	//ПрямыеЗатратыУУ	ИНАЧЕ
	|	//ПрямыеЗатратыУУ		- Док.Количество *
	|	//ПрямыеЗатратыУУ		ТаблицаСтоимостиЗатратУУ.СтоимостьОстаток /
	|	//ПрямыеЗатратыУУ		ТаблицаСтоимостиЗатратУУ.КоличествоОстаток
	|	//ПрямыеЗатратыУУ	КОНЕЦ КАК СуммаУУ,
	|
	|	//ПрямыеЗатратыБУ 	ВЫБОР КОГДА ТаблицаСтоимостиЗатратРегл.КоличествоОстаток = 0
	|	//ПрямыеЗатратыБУ			ИЛИ ТаблицаСтоимостиЗатратРегл.КоличествоОстаток ЕСТЬ NULL ТОГДА
	|	//ПрямыеЗатратыБУ		0
	|	//ПрямыеЗатратыБУ	ИНАЧЕ
	|	//ПрямыеЗатратыБУ		- Док.Количество *
	|	//ПрямыеЗатратыБУ		ТаблицаСтоимостиЗатратРегл.СтоимостьОстаток /
	|	//ПрямыеЗатратыБУ		ТаблицаСтоимостиЗатратРегл.КоличествоОстаток
	|	//ПрямыеЗатратыБУ	КОНЕЦ КАК СуммаБУ,
	|
	|	//ПрямыеЗатратыБУ 	ВЫБОР КОГДА ТаблицаСтоимостиЗатратРегл.КоличествоНУОстаток = 0
	|	//ПрямыеЗатратыБУ			ИЛИ ТаблицаСтоимостиЗатратРегл.КоличествоНУОстаток ЕСТЬ NULL ТОГДА
	|	//ПрямыеЗатратыБУ		0
	|	//ПрямыеЗатратыБУ	ИНАЧЕ
	|	//ПрямыеЗатратыБУ		- Док.Количество *
	|	//ПрямыеЗатратыБУ		ТаблицаСтоимостиЗатратРегл.СтоимостьНУОстаток /
	|	//ПрямыеЗатратыБУ		ТаблицаСтоимостиЗатратРегл.КоличествоНУОстаток
	|	//ПрямыеЗатратыБУ	КОНЕЦ КАК СуммаНУ,
	|
	|	//ФиксСтоимость		- Док.Сумма КАК СуммаУУ,
	|	//ФиксСтоимость		- Док.СуммаРегл КАК СуммаБУ,
	|	//ФиксСтоимость		- Док.СуммаНал КАК СуммаНУ,
	|
	|	//ПоНулевойУУ 		0 КАК СуммаУУ,
	|	//ПоНулевойБУ 		0 КАК СуммаБУ,
	|	//ПоНулевойБУ 		0 КАК СуммаНУ,
	|
	|	- Док.Количество КАК Количество
	|
	|ИЗ 
	|	ТаблицаДокумента КАК Док
	|
	|	//ПрямыеЗатратыУУ	ЛЕВОЕ СОЕДИНЕНИЕ 
	|	//ПрямыеЗатратыУУ		ТаблицаСтоимостиЗатрат КАК ТаблицаСтоимостиЗатратУУ
	|	//ПрямыеЗатратыУУ	ПО 
	|	//ПрямыеЗатратыУУ		Док.Номенклатура = ТаблицаСтоимостиЗатратУУ.Затрата
	|	//ПрямыеЗатратыУУ		И Док.ХарактеристикаНоменклатуры = ТаблицаСтоимостиЗатратУУ.ХарактеристикаЗатраты
	|	//ПрямыеЗатратыУУ		И Док.СерияНоменклатуры = ТаблицаСтоимостиЗатратУУ.СерияЗатраты
	|	//ПрямыеЗатратыУУ		И Док.СтатьяЗатрат = ТаблицаСтоимостиЗатратУУ.СтатьяЗатрат
	|	//ПрямыеЗатратыУУ		И Док.НоменклатурнаяГруппаНЗП = ТаблицаСтоимостиЗатратУУ.НоменклатурнаяГруппа
	|	//ПрямыеЗатратыУУ		И Док.ЗаказНЗП = ТаблицаСтоимостиЗатратУУ.Заказ
	|	//ПрямыеЗатратыУУ		И Док.ПодразделениеНЗП = ТаблицаСтоимостиЗатратУУ.Подразделение
	|
	|	//ПрямыеЗатратыБУ	ЛЕВОЕ СОЕДИНЕНИЕ 
	|	//ПрямыеЗатратыБУ		ТаблицаСтоимостиЗатратРегл КАК ТаблицаСтоимостиЗатратРегл
	|	//ПрямыеЗатратыБУ	ПО 
	|	//ПрямыеЗатратыБУ		Док.Номенклатура = ТаблицаСтоимостиЗатратРегл.Затрата
	|	//ПрямыеЗатратыБУ		И Док.ХарактеристикаНоменклатуры = ТаблицаСтоимостиЗатратРегл.ХарактеристикаЗатраты
	|	//ПрямыеЗатратыБУ		И Док.СерияНоменклатуры = ТаблицаСтоимостиЗатратРегл.СерияЗатраты
	|	//ПрямыеЗатратыБУ		И Док.СтатьяЗатрат = ТаблицаСтоимостиЗатратРегл.СтатьяЗатрат
	|	//ПрямыеЗатратыБУ		И Док.НоменклатурнаяГруппаНЗП = ТаблицаСтоимостиЗатратРегл.НоменклатурнаяГруппа
	|	//ПрямыеЗатратыБУ		И Док.ЗаказНЗПРегл = ТаблицаСтоимостиЗатратРегл.ЗаказРегл
	|	//ПрямыеЗатратыБУ		И (Док.СчетЗатрат = ТаблицаСтоимостиЗатратРегл.СчетУчета
	|	//ПрямыеЗатратыБУ			ИЛИ ТаблицаСтоимостиЗатратРегл.СчетУчета = Неопределено)
	|	//ПрямыеЗатратыБУ		И Док.ПодразделениеОрганизацииНЗП = ТаблицаСтоимостиЗатратРегл.ПодразделениеОрганизации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Док.НомерСтроки
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаПоРаспределениюВозвратныхОтходов()
		// Процедура формирует движения по табличной части "Распределение возвратных отходов".
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса
		//

		public object СформироватьЗапросПоРаспределениюВозвратныхОтходов(/*
	СтруктураШапкиДокумента
	*/)
		{
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаПоРаспределениюВозвратныхОтходов();*/
			/*ТекстЗапроса = ЗаменитьКомментарииВТекстеЗапросаПоРаспределениюМатериалов(
		СтруктураШапкиДокумента,
		"РаспределениеВозвратныхОтходов",
		ТекстЗапросаСКомментариями
	);*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*УстановитьПараметрыЗапроса(
		СтруктураШапкиДокумента,
		Запрос
	);*/
			return null;
		}
		// СформироватьЗапросПоРаспределениюВозвратныхОтходов()
		// Процедура формирует движения по табличной части "Распределение возвратных отходов".
		//
		// Параметры:
		//	СтруктураШапкиДокумента – Структура - Реквизиты документа
		//  ТекстЗапросаДокумент – Строка – Текст запроса по документу
		//	УчетнаяПолитика - Структура - Учетная политика по управленческому учету
		//	УчетнаяПолитикаБух - Структура - Учетная политика по регламентированному учету
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void СформироватьДвиженияПоРаспределениюВозвратныхОтходов(/*
	СтруктураШапкиДокумента, 
	ТекстЗапросаДокумент,
	УчетнаяПолитика,
	УчетнаяПолитикаБух,
	СтруктураНаборыЗаписей
	*/)
		{
			if(true/*ПустаяСтрока(ТекстЗапросаДокумент)*/)
			{
			}
			/*МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;*/
			/*СформироватьВременнуюТаблицуДокумента(
		СтруктураШапкиДокумента,
		ТекстЗапросаДокумент,
		МенеджерВременныхТаблиц
	);*/
			if(true/*СтруктураШапкиДокумента.ИспользоватьРасширеннуюАналитику*/)
			{
				/*СформироватьТаблицуАналитики(
			СтруктураШапкиДокумента,
			МенеджерВременныхТаблиц
		);*/
			}
			/*Запрос = СформироватьЗапросПоРаспределениюВозвратныхОтходов(СтруктураШапкиДокумента);*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*РезультатЗапроса = Запрос.Выполнить();*/
			if(true/*СтруктураШапкиДокумента.РасчетПоПрямымЗатратамУпр*/)
			{
				/*РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
			СтруктураШапкиДокумента,
			МенеджерВременныхТаблиц,
			"ТаблицаСтоимостиЗатрат"
		);*/
			}
			if(true/*СтруктураШапкиДокумента.РасчетПоПрямымЗатратамРегл*/)
			{
				/*РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
			СтруктураШапкиДокумента,
			МенеджерВременныхТаблиц,
			"ТаблицаСтоимостиЗатратРегл"
		);*/
			}
			if(true/*РезультатЗапроса.Пустой()*/)
			{
			}
			/*СтруктураКлючиАналитики = Новый Структура;*/
			/*Выборка = РезультатЗапроса.Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				if(true/*СтруктураШапкиДокумента.ИспользоватьРасширеннуюАналитику*/)
				{
					/*ДвиженияПоРегистрамРаспределениеЗатрат(
				СтруктураШапкиДокумента,
				Выборка,
				СтруктураКлючиАналитики,
				СтруктураНаборыЗаписей
			);*/
				}
			}
			/*;;*/
		}
		// СформироватьДвиженияПоРаспределениюВозвратныхОтходов()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО РАСПРЕДЕЛЕНИЮ ПРОЧИХ ЗАТРАТ
		// Функция формирует текст запроса по табличной части "Распределение прочих затрат".
		//
		// Возвращаемое значение:
		//	Строка - Текст запроса
		//

		public object СформироватьТекстЗапросаПоРаспределениюПрочихЗатрат(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Док.*,
	|	Док.СтатьяЗатрат.ВидЗатрат КАК ВидЗатрат,
	|	Док.СтатьяЗатрат.СтатусМатериальныхЗатрат КАК СтатусМатериальныхЗатрат,
	|	Док.СпособРаспределенияЗатратНаВыпуск КАК СпособРаспределенияЗатрат,
	|	ВЫБОР КОГДА Док.СпособРаспределенияЗатратНаВыпуск <> &ПустойСпособРаспределения ТОГДА
	|		Док.СпособРаспределенияЗатратНаВыпуск
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК Затрата,
	|	&ПрямыеЗатраты КАК КодОперации,
	|
	|	ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя
	|		И Док.Заказ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.Переработка)
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыВыпускаПродукции.ПродукцияИзДавальческогоСырья)
	|	ИНАЧЕ
	|      	Неопределено
	|	КОНЕЦ КАК ВариантВыпускаПродукции,
	|
	|	&Ссылка КАК ДокументВыпуска,
	|
	|	Док.Сумма КАК СуммаУУ,
	|	Док.СуммаРегл КАК СуммаБУ,
	|	Док.СуммаНал КАК СуммаНУ,
	|	0 КАК Количество
	|
	|ИЗ 
	|	ТаблицаДокумента КАК Док
	|
	|УПОРЯДОЧИТЬ ПО
	|	Док.НомерСтроки
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаПоРаспределениюПрочихЗатрат()
		// Процедура формирует движения по табличной части "Распределение прочих затрат".
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//  ТекстЗапросаДокумент – Строка – Текст запроса по документу
		//	УчетнаяПолитика - Структура - Учетная политика по управленческому учету
		//	УчетнаяПолитикаБух - Структура - Учетная политика по регламентированному учету
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса
		//

		public object СформироватьЗапросПоРаспределениюПрочихЗатрат(/*
	СтруктураШапкиДокумента, 
	ТекстЗапросаДокумент,
	УчетнаяПолитика,
	УчетнаяПолитикаБух
	*/)
		{
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаПоРаспределениюПрочихЗатрат();*/
			/*ТекстЗапроса = ЗаменитьКомментарииВТекстеЗапросаПоРаспределениюМатериалов(
		СтруктураШапкиДокумента,
		"",
		ТекстЗапросаСКомментариями
	);*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*УстановитьПараметрыЗапроса(
		СтруктураШапкиДокумента,
		Запрос
	);*/
			return null;
		}
		// СформироватьЗапросПоРаспределениюПрочихЗатрат()
		// Процедура формирует движения по табличной части "Распределение прочих затрат".
		//
		// Параметры:
		//	СтруктураШапкиДокумента – Структура - Реквизиты документа
		//  ТекстЗапросаДокумент – Строка – Текст запроса по документу
		//	УчетнаяПолитика - Структура - Учетная политика по управленческому учету
		//	УчетнаяПолитикаБух - Структура - Учетная политика по регламентированному учету
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void СформироватьДвиженияПоРаспределениюПрочихЗатрат(/*
	СтруктураШапкиДокумента, 
	ТекстЗапросаДокумент,
	УчетнаяПолитика,
	УчетнаяПолитикаБух,
	СтруктураНаборыЗаписей
	*/)
		{
			if(true/*ПустаяСтрока(ТекстЗапросаДокумент)*/)
			{
			}
			/*МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;*/
			/*СформироватьВременнуюТаблицуДокумента(
		СтруктураШапкиДокумента,
		ТекстЗапросаДокумент,
		МенеджерВременныхТаблиц
	);*/
			/*Запрос = СформироватьЗапросПоРаспределениюПрочихЗатрат(
		СтруктураШапкиДокумента, 
		ТекстЗапросаДокумент,
		УчетнаяПолитика,
		УчетнаяПолитикаБух
	);*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*РезультатЗапроса = Запрос.Выполнить();*/
			if(true/*РезультатЗапроса.Пустой()*/)
			{
			}
			/*СтруктураКлючиАналитики = Новый Структура;*/
			/*Выборка = РезультатЗапроса.Выбрать();*/
			while(true/*Выборка.Следующий()*/)
			{
				if(true/*СтруктураШапкиДокумента.ИспользоватьРасширеннуюАналитику*/)
				{
					/*ДвиженияПоРегистрамРаспределениеЗатрат(
				СтруктураШапкиДокумента,
				Выборка,
				СтруктураКлючиАналитики,
				СтруктураНаборыЗаписей
			);*/
				}
			}
			/*;;*/
		}
		// СформироватьДвиженияПоРаспределениюПрочихЗатрат()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ТЕКСТА ЗАПРОСА ДЛЯ ОПРЕДЕЛЕНИЯ СТОИМОСТИ ЗАТРАТ
		// Процедура формирования временной таблицы "ТаблицаАналитики".
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
		//

		public void СформироватьТаблицуАналитики(/*
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	*/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РегистрАналитикаВидаУчета.Ссылка КАК АналитикаВидаУчета,
	|	РегистрАналитикаВидаУчетаРегл.Ссылка КАК АналитикаВидаУчетаРегл,
	|	РегистрАналитикаУчетаЗатрат.Ссылка КАК АналитикаУчетаЗатрат,
	|	РегистрАналитикаРаспределенияЗатрат.Ссылка КАК АналитикаРаспределенияЗатрат,
	|	РегистрАналитикаУчетаПартий.Ссылка КАК АналитикаУчетаПартий,
	|	
	|	РегистрАналитикаВидаУчета.Подразделение,
	|	РегистрАналитикаВидаУчетаРегл.ПодразделениеОрганизации,
	|	
	|	РегистрАналитикаУчетаЗатрат.Затрата,
	|	РегистрАналитикаУчетаЗатрат.ХарактеристикаЗатраты,
	|	РегистрАналитикаУчетаЗатрат.СерияЗатраты,
	|	РегистрАналитикаУчетаЗатрат.СтатьяЗатрат,
	|	
	|	РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа,
	|	РегистрАналитикаУчетаПартий.Заказ,
	|
	|	РегистрАналитикаВидаУчетаРегл.СчетУчета,
	|	ВЫБОР КОГДА ТаблицаДокумента.СчетУчетаНУ = РегистрАналитикаВидаУчетаРегл.СчетУчетаНУ ТОГДА
	|		РегистрАналитикаВидаУчетаРегл.СчетУчетаНУ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК СчетУчетаНУ
	|	
	|ПОМЕСТИТЬ ТаблицаАналитики
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|	ПО
	|		РегистрАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Затраты)
	|		И РегистрАналитикаВидаУчета.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		И ТаблицаДокумента.ПодразделениеНЗП = РегистрАналитикаВидаУчета.Подразделение
	|		И РегистрАналитикаВидаУчета.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|		И РегистрАналитикаВидаУчета.СчетУчетаНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|		И РегистрАналитикаВидаУчета.Проект = Неопределено
	|		И РегистрАналитикаВидаУчета.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчетаРегл
	|	ПО
	|		РегистрАналитикаВидаУчетаРегл.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Затраты)
	|		И ТаблицаДокумента.Организация = РегистрАналитикаВидаУчетаРегл.Организация
	|		И ТаблицаДокумента.ПодразделениеОрганизацииНЗП = РегистрАналитикаВидаУчетаРегл.ПодразделениеОрганизации
	|		И ТаблицаДокумента.СчетУчета = РегистрАналитикаВидаУчетаРегл.СчетУчета
	|		И РегистрАналитикаВидаУчетаРегл.Проект = Неопределено
	|		И РегистрАналитикаВидаУчетаРегл.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаЗатрат КАК РегистрАналитикаУчетаЗатрат
	|	ПО
	|		ТаблицаДокумента.СтатьяЗатрат = РегистрАналитикаУчетаЗатрат.СтатьяЗатрат
	|		И ТаблицаДокумента.Номенклатура = РегистрАналитикаУчетаЗатрат.Затрата
	|		И ТаблицаДокумента.ХарактеристикаНоменклатуры = РегистрАналитикаУчетаЗатрат.ХарактеристикаЗатраты
	|		И ТаблицаДокумента.СерияНоменклатуры = РегистрАналитикаУчетаЗатрат.СерияЗатраты
	|		И РегистрАналитикаУчетаЗатрат.ХарактерЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерЗатрат.ПроизводственныеРасходы)
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрАналитикаРаспределенияЗатрат
	|	ПО
	|		ТаблицаДокумента.НоменклатурнаяГруппаНЗП = РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа
	|		И РегистрАналитикаРаспределенияЗатрат.Продукция = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		И РегистрАналитикаРаспределенияЗатрат.ХарактеристикаПродукции = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		И РегистрАналитикаРаспределенияЗатрат.СерияПродукции = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		И РегистрАналитикаРаспределенияЗатрат.Спецификация = ЗНАЧЕНИЕ(Справочник.СпецификацииНоменклатуры.ПустаяСсылка)
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПартий КАК РегистрАналитикаУчетаПартий
	|	ПО
	|		(ТаблицаДокумента.Заказ = РегистрАналитикаУчетаПартий.Заказ
	|		ИЛИ ТаблицаДокумента.ЗаказНЗП = РегистрАналитикаУчетаПартий.Заказ)
	|		И РегистрАналитикаУчетаПартий.ДоговорКомитента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|		И РегистрАналитикаУчетаПартий.ДоговорКомиссионера = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|		И РегистрАналитикаУчетаПартий.ДокументПередачи = ЗНАЧЕНИЕ(Документ.ПередачаМатериаловВЭксплуатацию.ПустаяСсылка)
	|		И РегистрАналитикаУчетаПартий.ФизЛицо = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|		И РегистрАналитикаУчетаПартий.НазначениеИспользования = ЗНАЧЕНИЕ(Справочник.НазначенияИспользования.ПустаяСсылка)
	|		И РегистрАналитикаУчетаПартий.СтатусПартии = ЗНАЧЕНИЕ(Перечисление.СтатусыПартийТоваров.ПустаяСсылка)
	|		
	|";*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;*/
			/*Запрос.Выполнить();*/
			/*РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		"ТаблицаАналитики"
	);*/
		}
		// СформироватьТаблицуАналитики()
		// Формирует текст запроса для определения стоимости материалов или стоимости возвратных отходов.
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//	ИмяТабличнойЧасти - Строка - Имя табличной части документа
		//
		// Возвращаемое значение:
		//	Строка - Текст запроса
		//

		public object СформироватьТекстЗапросаТаблицыСтоимостиЗатрат(/*
	СтруктураШапкиДокумента,
	ИмяТабличнойЧасти
	*/)
		{
			/*ИмяДокумента = СтруктураШапкиДокумента.ИмяДокумента;*/
			if(true/*(ИмяДокумента = "ПоступлениеТоваровИзПереработки" ИЛИ ИмяДокумента = "ОтчетПроизводстваЗаСмену")
	   И ИмяТабличнойЧасти = "РаспределениеВозвратныхОтходов"*/)
			{
				/*ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Док.Ссылка.Подразделение,
		|	Док.Ссылка.ПодразделениеОрганизации,
		|	Док.Номенклатура КАК Затрата,
		|	Док.ХарактеристикаНоменклатуры КАК ХарактеристикаЗатраты,
		|	Док.СерияНоменклатуры КАК СерияЗатраты,
		|	Док.СтатьяЗатрат,
		|	Док.НоменклатурнаяГруппа,
		|
		|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьЗаказы 
		|	  И Док.Заказ ССЫЛКА Документ.ЗаказПокупателя 
		|	  И Док.Заказ <> &ПустойЗаказПокупателя 
		|	ТОГДА
		|		Док.Заказ
		|	КОГДА Док.Ссылка.ИспользоватьЗаказы 
		|		И Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
		|		И Док.Заказ <> ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
		|		И &УчетЗатратПоЗаказамНаПроизводство
		|	ТОГДА
		|		Док.Заказ
		|	ИНАЧЕ
		|		Неопределено
		|	КОНЕЦ КАК Заказ,
		|
		|	ВЫБОР КОГДА Док.Ссылка.ИспользоватьЗаказы 
		|	  И Док.Заказ ССЫЛКА Документ.ЗаказПокупателя 
		|	  И Док.Заказ <> &ПустойЗаказПокупателя 
		|	ТОГДА
		|		Док.Заказ
		|	КОГДА Док.Ссылка.ИспользоватьЗаказы 
		|		И Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
		|		И Док.Заказ <> ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
		|		И &УчетЗатратПоЗаказамНаПроизводствоРегл 
		|	ТОГДА
		|		Док.Заказ
		|	ИНАЧЕ
		|		Неопределено
		|	КОНЕЦ КАК ЗаказРегл,
		|
		|	Док.СчетЗатрат КАК СчетУчета,
		|	Док.СчетЗатратНУ КАК СчетУчетаНУ,
		|
		|	//ДляРеглУчета СУММА(Док.СуммаРегл) КАК СтоимостьНУОстаток,
		|	//ДляРеглУчета СУММА(Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК КоличествоНУОстаток,
		|
		|	//ДляУпрУчета СУММА(Док.Сумма) КАК СтоимостьОстаток,
		|	//ДляРеглУчета СУММА(Док.СуммаРегл) КАК СтоимостьОстаток,
		|	СУММА(Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК КоличествоОстаток
		|
		|ПОМЕСТИТЬ ТаблицаСтоимостиЗатрат%СуффиксРегл%
		|ИЗ
		|	Документ.%ИмяДокумента%.ВозвратныеОтходы КАК Док
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	Док.Ссылка,
		|	Док.СчетЗатрат,
		|	Док.СчетЗатратНУ,
		|	Док.Номенклатура,
		|	Док.ХарактеристикаНоменклатуры,
		|	Док.СерияНоменклатуры,
		|	Док.СтатьяЗатрат,
		|	Док.НоменклатурнаяГруппа,
		|	Док.Заказ
		|;
		|////////////////////////////////////////////////////////////////////////////
		|
		|";*/
			}
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИмяДокумента%", ИмяДокумента);*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИмяТабличнойЧасти%", ИмяДокумента + ?(ИмяТабличнойЧасти = "", "", ".") + ИмяТабличнойЧасти);*/
			return null;
		}
		// СформироватьТекстЗапросаТаблицыСтоимостиЗатрат()
		///////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО РЕГИСТРУ НАКОПЛЕНИЯ "ЗАТРАТЫ НА ВЫПУСК ПРОДУКЦИИ"
		// Процедура дополняет структуру шапки документа.
		//
		// Параметры:
		//	УчетнаяПолитика - Структура - Параметры учетной политики по упр. учету
		//	УчетнаяПолитикаРегл - Структура - Параметры учетной политики по регл. учету
		//
		// Выходные параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//

		public void ДополнитьСтруктуруШапкиДокументаНастройкиУчетаЗатратНаВыпуск(/*
	УчетнаяПолитика, 
	УчетнаяПолитикаРегл,
	СтруктураШапкиДокумента
	*/)
		{
			if(true/*Не СтруктураШапкиДокумента.Свойство("ИспользоватьРасширеннуюАналитику")*/)
			{
				/*ИспользоватьРасширеннуюАналитику = глЗначениеПеременной("ИспользоватьРасширеннуюАналитикуУчетаНоменклатурыИЗатрат") 
			И (глЗначениеПеременной("ДатаНачалаИспользованияРасширеннойАналитикиУчетаНоменклатурыИЗатрат") <= СтруктураШапкиДокумента.Дата);*/
				/*СтруктураШапкиДокумента.Вставить("ИспользоватьРасширеннуюАналитику", ИспользоватьРасширеннуюАналитику);*/
			}
			if(true/*СтруктураШапкиДокумента.ИспользоватьРасширеннуюАналитику
	   И Не СтруктураШапкиДокумента.Свойство("ОтражатьЗатратыВУпрУчете")*/)
			{
				/*РежимИспользованияРасширеннойАналитики = глЗначениеПеременной("РежимИспользованияРасширеннойАналитикиУчетаНоменклатурыИЗатрат");*/
				/*СтруктураШапкиДокумента.Вставить("ОтражатьЗатратыВУпрУчете", (РежимИспользованияРасширеннойАналитики = Перечисления.РежимыИспользованияРасширеннойАналитики.УправленческийИРегламентированныйУчет));*/
			}
			if(true/*Не СтруктураШапкиДокумента.Свойство("УчетЗатратПоЗаказамНаПроизводство")*/)
			{
				if(true/*ЗначениеЗаполнено(УчетнаяПолитика)*/)
				{
					/*СтруктураШапкиДокумента.Вставить("УчетЗатратПоЗаказамНаПроизводство", УчетнаяПолитика.УчетЗатратПоЗаказамНаПроизводство);*/
				}
			}
			if(true/*Не СтруктураШапкиДокумента.Свойство("УчетЗатратПоЗаказамНаПроизводствоРегл")*/)
			{
				if(true/*ЗначениеЗаполнено(УчетнаяПолитикаРегл)*/)
				{
					/*СтруктураШапкиДокумента.Вставить("УчетЗатратПоЗаказамНаПроизводствоРегл", УчетнаяПолитикаРегл.УчетЗатратПоЗаказамНаПроизводство);*/
				}
			}
			/*РасчетПоПрямымЗатратамУпр = Ложь;*/
			/*РасчетПоПрямымЗатратамРегл = Ложь;*/
			if(true/*ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.КорректировкаНЗП")
	 ИЛИ ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.ОприходованиеНЗП")
	 ИЛИ ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.СписаниеНЗП")
	 ИЛИ ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.ОприходованиеМатериаловИзПроизводства")*/)
			{
				/*РасчетПоПрямымЗатратамУпр = Истина;*/
				/*РасчетПоПрямымЗатратамРегл = Истина;*/
			}
			/*СтруктураШапкиДокумента.Вставить("РасчетПоПрямымЗатратамУпр", РасчетПоПрямымЗатратамУпр);*/
			/*СтруктураШапкиДокумента.Вставить("РасчетПоПрямымЗатратамРегл", РасчетПоПрямымЗатратамРегл);*/
		}
		// ДополнитьСтруктуруШапкиДокументаНастройкиУчетаЗатратНаВыпуск()
		// Процедура формирует движения по регистру накопления "Затраты на выпуск продукции" по всем видам учета.
		//

		public void СформироватьДвиженияПоРегиструЗатратыНаВыпускПродукции(/*
	СтруктураШапкиДокумента, 
	ИмяДокумента = "", 
	УчетнаяПолитика, 
	УчетнаяПолитикаБух
	*/)
		{
			if(true/*Не СтруктураШапкиДокумента.Свойство("ИмяДокумента")*/)
			{
				/*СтруктураШапкиДокумента.Вставить("ИмяДокумента", ИмяДокумента);*/
			}
			/*ДополнитьСтруктуруШапкиДокументаНастройкиУчетаЗатратНаВыпуск(
		УчетнаяПолитика, 
		УчетнаяПолитикаБух,
		СтруктураШапкиДокумента
	);*/
			/*ТекстЗапросаРаспределениеМатериалов = "";*/
			/*ТекстЗапросаРаспределениеВозвратныхОтходов = "";*/
			/*ТекстЗапросаРаспределениеПрочихЗатрат = "";*/
			/*ТекстЗапросаРаспределениеТехОпераций = "";*/
			/*ТипДокумента = ТипЗнч(СтруктураШапкиДокумента.Ссылка);*/
			if(true/*ТипДокумента = Тип("ДокументСсылка.РаспределениеМатериаловНаВыпуск")*/)
			{
				/*ТекстЗапросаРаспределениеМатериалов = СформироватьТекстЗапросаДляДокументаРаспределениеМатериаловНаВыпуск("РаспределениеМатериалов");*/
				/*ТекстЗапросаРаспределениеВозвратныхОтходов = СформироватьТекстЗапросаДляДокументаРаспределениеМатериаловНаВыпуск("РаспределениеВозвратныхОтходов");*/
			}
			/*СтруктураНаборыЗаписей = Новый Структура;*/
			/*// Формирование движений по табличной части "Распределение материалов".
*/
			/*СформироватьДвиженияПоРаспределениюМатериалов(
		СтруктураШапкиДокумента, 
		ТекстЗапросаРаспределениеМатериалов,
		УчетнаяПолитика,
		УчетнаяПолитикаБух,
		СтруктураНаборыЗаписей
	);*/
			/*// Формирование движений по табличной части "Распределение возвратных отходов".
*/
			if(true/*Не ПустаяСтрока(ТекстЗапросаРаспределениеВозвратныхОтходов)*/)
			{
				/*СформироватьДвиженияПоРаспределениюВозвратныхОтходов(
			СтруктураШапкиДокумента, 
			ТекстЗапросаРаспределениеВозвратныхОтходов,
			УчетнаяПолитика,
			УчетнаяПолитикаБух,
			СтруктураНаборыЗаписей
		);*/
			}
			/*// Формирование движений по табличной части "Распределение прочих затрат".
*/
			if(true/*Не ПустаяСтрока(ТекстЗапросаРаспределениеПрочихЗатрат)*/)
			{
				/*СформироватьДвиженияПоРаспределениюПрочихЗатрат(
			СтруктураШапкиДокумента, 
			ТекстЗапросаРаспределениеПрочихЗатрат,
			УчетнаяПолитика,
			УчетнаяПолитикаБух,
			СтруктураНаборыЗаписей
		);*/
			}
			/*// Формирование движений по табличной части "Распределение тех. операций".
*/
			if(true/*Не ПустаяСтрока(ТекстЗапросаРаспределениеТехОпераций)*/)
			{
				/*СформироватьДвиженияПоРаспределениюПрочихЗатрат(
			СтруктураШапкиДокумента, 
			ТекстЗапросаРаспределениеТехОпераций,
			УчетнаяПолитика,
			УчетнаяПолитикаБух,
			СтруктураНаборыЗаписей
		);*/
			}
			if(true/*СтруктураНаборыЗаписей.Количество() > 0*/)
			{
				/*УправлениеЗатратамиДвиженияПоРегистрам.ЗаписатьНаборыЗаписейРегистров(
			СтруктураНаборыЗаписей
			);*/
			}
		}
		// СформироватьДвиженияПоРегиструЗатратыНаВыпускПродукции()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО ВЫПУСКУ ПРОДУКЦИИ И НАПРАВЛЕНИЯМ ВЫПУСКА
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО РЕГИСТРУ НАКОПЛЕНИЯ "ВЫПУСК ПРОДУКЦИИ"
		// Функция заменяет комментарии в тексте запроса в зависимости от отражения в учете.
		//
		// Параметры
		//  ИсходныхТекстЗапроса – Строка – Текст запроса.
		//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отражения в учете
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса, в котором заменены комментарии.
		//

		public object ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(/*
	ИсходныйТекстЗапроса,
	ВидОтраженияВУчете
	*/)
		{
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете*/)
			{
				/*ТекстЗапроса = СтрЗаменить(ИсходныйТекстЗапроса, "%СуффиксУчета%", "");*/
				/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%СуффиксОрганизаций%", "");*/
				/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%СуффиксРегл%", "");*/
				/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДляУпрУчета", "");*/
				/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СтоимостьПродукции", "СтоимостьПродукцииУУ");*/
			}
			return null;
		}
		// ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска()
		// Формирует текст запроса для реквизита "Заказ".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаДляРеквизитаЗаказ(/**/)
		{
			/*ТекстЗапроса = "
	|		ВЫБОР КОГДА ТабличнаяЧасть.Ссылка.ИспользоватьЗаказы 
	|				И ТабличнаяЧасть.Заказ ССЫЛКА Документ.ЗаказПокупателя 
	|				И ТабличнаяЧасть.Заказ <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) ТОГДА
	|			ТабличнаяЧасть.Заказ
	|		КОГДА ТабличнаяЧасть.Ссылка.ИспользоватьЗаказы 
	|				И ТабличнаяЧасть.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
	|				И ТабличнаяЧасть.Заказ <> ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|				//ДляУпрУчета И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|				//ДляРеглУчета И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|			ТабличнаяЧасть.Заказ
	|		ИНАЧЕ
	|			Неопределено
	|		КОНЕЦ";*/
			return null;
		}
		// СформироватьТекстЗапросаДляРеквизитаЗаказ()
		// Формирует текст запроса для реквизита "ЗаказПолучатель".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаДляРеквизитаЗаказПолучатель(/**/)
		{
			/*ТекстЗапроса = "
	|		ВЫБОР КОГДА ТабличнаяЧасть.Ссылка.ИспользоватьЗаказы 
	|				И ТабличнаяЧасть.ЗаказПолучатель ССЫЛКА Документ.ЗаказПокупателя 
	|				И ТабличнаяЧасть.ЗаказПолучатель <> &ПустойЗаказПокупателя ТОГДА
	|			ТабличнаяЧасть.ЗаказПолучатель
	|		КОГДА ТабличнаяЧасть.Ссылка.ИспользоватьЗаказы 
	|				И ТабличнаяЧасть.ЗаказПолучатель ССЫЛКА Документ.ЗаказНаПроизводство 
	|				И ТабличнаяЧасть.ЗаказПолучатель <> &ПустойЗаказНаПроизводство
	|				//ДляУпрУчета И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|				//ДляРеглУчета И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|			ТабличнаяЧасть.ЗаказПолучатель
	|		ИНАЧЕ
	|			Неопределено
	|		КОНЕЦ";*/
			return null;
		}
		// СформироватьТекстЗапросаДляРеквизитаЗаказПолучатель()
		// Формирует текст запроса для реквизита "Заказ" документа "Корректировка НЗП.
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаДляРеквизитаЗаказКорректировкаНЗП(/**/)
		{
			/*ТекстЗапроса = "
	|		ВЫБОР КОГДА ТабличнаяЧасть.Заказ ССЫЛКА Документ.ЗаказПокупателя 
	|				И ТабличнаяЧасть.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|			ТабличнаяЧасть.Заказ
	|		КОГДА ТабличнаяЧасть.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
	|				И ТабличнаяЧасть.Заказ <> &ПустойЗаказНаПроизводство
	|				//ДляУпрУчета И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|				//ДляРеглУчета И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|			ТабличнаяЧасть.Заказ
	|		ИНАЧЕ
	|			Неопределено
	|		КОНЕЦ";*/
			return null;
		}
		// СформироватьТекстЗапросаДляРеквизитаЗаказКорректировкаНЗП()
		// Формирует текст запроса для реквизита "ЗаказПолучатель" документа "Корректировка НЗП".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаДляРеквизитаЗаказПолучательКорректировкаНЗП(/**/)
		{
			/*ТекстЗапроса = "
	|		ВЫБОР КОГДА ТабличнаяЧасть.ЗаказПолучатель ССЫЛКА Документ.ЗаказПокупателя 
	|				И ТабличнаяЧасть.ЗаказПолучатель <> &ПустойЗаказПокупателя ТОГДА
	|			ТабличнаяЧасть.ЗаказПолучатель
	|		КОГДА ТабличнаяЧасть.ЗаказПолучатель ССЫЛКА Документ.ЗаказНаПроизводство 
	|				И ТабличнаяЧасть.ЗаказПолучатель <> &ПустойЗаказНаПроизводство
	|				//ДляУпрУчета И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|				//ДляРеглУчета И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|			ТабличнаяЧасть.ЗаказПолучатель
	|		ИНАЧЕ
	|			Неопределено
	|		КОНЕЦ";*/
			return null;
		}
		// СформироватьТекстЗапросаДляРеквизитаЗаказПолучательКорректировкаНЗП()
		// Процедура устанавливает параметры запросов по выпуску продукции.
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	УчетнаяПолитика - Структура - Учетная политика по управленческому учету
		//	УчетнаяПолитикаБух - Структура - Учетная политика по бухгалтерскому учету
		//	Запрос - Запрос - Запрос по выпуску продукции.
		//

		public void УстановитьПараметрыЗапросаПоВыпускуПродукции(/*
	СтруктураШапкиДокумента,
	УчетнаяПолитика,
	УчетнаяПолитикаБух,
	Запрос
	*/)
		{
			/*Запрос.УстановитьПараметр("Ссылка", СтруктураШапкиДокумента.Ссылка);*/
			/*Запрос.УстановитьПараметр("КонДата", СтруктураШапкиДокумента.Дата);*/
			/*Запрос.УстановитьПараметр("ВидВыпускаВыпуск", Перечисления.ВидыВыпуска.Выпуск);*/
			/*Запрос.УстановитьПараметр("ВидВыпускаНаработка", Перечисления.ВидыВыпуска.Наработка);*/
			/*Запрос.УстановитьПараметр("СтатусМатериальныхЗатратПринятые", Перечисления.СтатусыМатериальныхЗатратНаПроизводство.ПринятыеВПереработку);*/
			/*Запрос.УстановитьПараметр("ПустойЗаказНаПроизводство", Документы.ЗаказНаПроизводство.ПустаяСсылка());*/
			/*Запрос.УстановитьПараметр("ПустойЗаказПокупателя", Документы.ЗаказПокупателя.ПустаяСсылка());*/
			/*Запрос.УстановитьПараметр("ПустойПроект", Справочники.Проекты.ПустаяСсылка());*/
			/*Запрос.УстановитьПараметр("ПустаяСпецификация", Справочники.СпецификацииНоменклатуры.ПустаяСсылка());*/
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете*/)
			{
				/*Запрос.УстановитьПараметр("УчетЗатратПоЗаказамНаПроизводство", УчетнаяПолитика.УчетЗатратПоЗаказамНаПроизводство);*/
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете*/)
			{
				/*Запрос.УстановитьПараметр("УчетЗатратПоЗаказамНаПроизводствоРегл", УчетнаяПолитикаБух.УчетЗатратПоЗаказамНаПроизводство);*/
			}
			/*Запрос.УстановитьПараметр("ПустаяХарактеристикаНоменклатуры", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());*/
			/*Запрос.УстановитьПараметр("ПустаяСерияНоменклатуры", Справочники.СерииНоменклатуры.ПустаяСсылка());*/
			/*Запрос.УстановитьПараметр("НаправлениеВыпускаНаСклад", Перечисления.НаправленияВыпуска.НаСклад);*/
			/*Запрос.УстановитьПараметр("НаправлениеВыпускаНаЗатраты", Перечисления.НаправленияВыпуска.НаЗатраты);*/
			/*Запрос.УстановитьПараметр("НаправлениеВыпускаНаЗатратыСписок", Перечисления.НаправленияВыпуска.НаЗатратыСписок);*/
			/*Запрос.УстановитьПараметр("ВидПоступленияНаСклад", Перечисления.ВидыПоступленияТоваров.НаСклад);*/
			/*Запрос.УстановитьПараметр("ВидПоступленияПоОрдеру", Перечисления.ВидыПоступленияТоваров.ПоОрдеру);*/
			/*Запрос.УстановитьПараметр("СтатусПартииПродукция", Перечисления.СтатусыПартийТоваров.Продукция);*/
			/*Запрос.УстановитьПараметр("КачествоНовый", Справочники.Качество.Новый);*/
			/*Запрос.УстановитьПараметр("КодОперацииВыпускПродукцииНаСклад", Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииФиксНаСклад);*/
			/*Запрос.УстановитьПараметр("ВидОперацииПереработка", Перечисления.ВидыОперацийЗаказПокупателя.Переработка);*/
			/*Запрос.УстановитьПараметр("ПродукцияИзДавальческогоСырья", Перечисления.ВариантыВыпускаПродукции.ПродукцияИзДавальческогоСырья);*/
			/*Запрос.УстановитьПараметр("СобственнаяПродукция", Перечисления.ВариантыВыпускаПродукции.СобственнаяПродукция);*/
			/*Запрос.УстановитьПараметр("ПродукцияСтороннегоПереработчика", Перечисления.ВариантыВыпускаПродукции.ПродукцияСтороннегоПереработчика);*/
		}
		// УстановитьПараметрыЗапросаПоВыпускуПродукции()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ТЕКСТОВ ЗАПРОСОВ ДЛЯ ДОКУМЕНТОВ ВЫПУСКА
		// Формирует текст запроса по табличной части "Продукция" документа "Отчет производства за смену".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоПродукцииОтчетПроизводстваЗаСмену(/**/)
		{
			/*ТекстЗапроса = "
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.НоменклатурнаяГруппа,
	|		ТабличнаяЧасть.Номенклатура,
	|		ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|		ТабличнаяЧасть.СерияНоменклатуры,
	|		ТабличнаяЧасть.Спецификация,
	|		
	|		//ТекстЗапросаЗаказУпр
	|		//ТекстЗапросаЗаказРегл
	|		
	|		СУММА(
	|			Количество * 
	|			ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|						И Коэффициент <> 0 ТОГДА 
	|				Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|			ИНАЧЕ
	|				1
	|			КОНЕЦ
	|		) КАК Количество
	|	ИЗ	
	|		Документ.ОтчетПроизводстваЗаСмену.Продукция КАК ТабличнаяЧасть
	|		
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &Ссылка
	|		И (ТабличнаяЧасть.ВидВыпуска = &ВидВыпускаВыпуск
	|			И ТабличнаяЧасть.Ссылка.ИспользоватьНаработку
	|			ИЛИ
	|			Не ТабличнаяЧасть.Ссылка.ИспользоватьНаработку)
	|		
	|	СГРУППИРОВАТЬ ПО
	|		ТабличнаяЧасть.НоменклатурнаяГруппа,
	|		ТабличнаяЧасть.Номенклатура,
	|		ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|		ТабличнаяЧасть.СерияНоменклатуры,
	|		ТабличнаяЧасть.Спецификация,
	|		
	|		//СгруппироватьТекстЗапросаЗаказУпр
	|		//СгруппироватьТекстЗапросаЗаказРегл
	|";*/
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаДляРеквизитаЗаказ();*/
			/*ТекстЗапросаДляРеквизитаЗаказ = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	);*/
			/*ТекстЗапросаДляРеквизитаЗаказРегл = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
	);*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + " КАК Заказ,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказРегл", ТекстЗапросаДляРеквизитаЗаказРегл + " КАК ЗаказРегл,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//СгруппироватьТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + ",");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//СгруппироватьТекстЗапросаЗаказРегл", ТекстЗапросаДляРеквизитаЗаказРегл);*/
			return null;
		}
		// СформироватьТекстЗапросаПоПродукцииОтчетПроизводстваЗаСмену()
		// Формирует текст запроса по табличной части "Продукция" документа "Поступление товаров из переработки".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоПродукцииПоступлениеТоваровИзПереработки(/**/)
		{
			/*ТекстЗапроса = "
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.НоменклатурнаяГруппа,
	|		ТабличнаяЧасть.Номенклатура,
	|		ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|		ТабличнаяЧасть.СерияНоменклатуры,
	|		ТабличнаяЧасть.Спецификация,
	|		
	|		//ТекстЗапросаЗаказУпр
	|		//ТекстЗапросаЗаказРегл
	|		
	|		СУММА(
	|			Количество * 
	|			ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|						И Коэффициент <> 0 ТОГДА 
	|				Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|			ИНАЧЕ
	|				1
	|			КОНЕЦ
	|		) КАК Количество
	|	ИЗ	
	|		Документ.ПоступлениеТоваровИзПереработки.Продукция КАК ТабличнаяЧасть
	|		
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &Ссылка
	|		
	|	СГРУППИРОВАТЬ ПО
	|		ТабличнаяЧасть.НоменклатурнаяГруппа,
	|		ТабличнаяЧасть.Номенклатура,
	|		ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|		ТабличнаяЧасть.СерияНоменклатуры,
	|		ТабличнаяЧасть.Спецификация,
	|		
	|		//СгруппироватьТекстЗапросаЗаказУпр
	|		//СгруппироватьТекстЗапросаЗаказРегл
	|";*/
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаДляРеквизитаЗаказ();*/
			/*ТекстЗапросаДляРеквизитаЗаказ = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	);*/
			/*ТекстЗапросаДляРеквизитаЗаказРегл = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
	);*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + " КАК Заказ,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказРегл", ТекстЗапросаДляРеквизитаЗаказРегл + " КАК ЗаказРегл,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//СгруппироватьТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + ",");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//СгруппироватьТекстЗапросаЗаказРегл", ТекстЗапросаДляРеквизитаЗаказРегл);*/
			return null;
		}
		// СформироватьТекстЗапросаПоПродукцииПоступлениеТоваровИзПереработки()
		// Формирует текст запроса для документа "Комплектация номенклатуры (сборка)".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоПродукцииКомплектацияНоменклатурыСборка(/**/)
		{
			/*ТекстЗапроса = "
	|	ВЫБРАТЬ
	|		Док.НоменклатурнаяГруппа,
	|		Док.Номенклатура,
	|		Док.ХарактеристикаНоменклатуры,
	|		Док.СерияНоменклатуры,
	|		Док.Спецификация,
	|		
	|		ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя 
	|				И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|			Док.Заказ
	|		КОГДА Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
	|				И Док.Заказ <> &ПустойЗаказНаПроизводство
	|				И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|			Док.Заказ
	|		ИНАЧЕ
	|			Неопределено
	|		КОНЕЦ КАК Заказ,
	|		
	|		ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя 
	|				И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|			Док.Заказ
	|		КОГДА Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
	|				И Док.Заказ <> &ПустойЗаказНаПроизводство
	|				И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|			Док.Заказ
	|		ИНАЧЕ
	|			Неопределено
	|		КОНЕЦ КАК ЗаказРегл,
	|		
	|		СУММА(
	|			Количество * 
	|			ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|						И Коэффициент <> 0 ТОГДА 
	|				Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|			ИНАЧЕ
	|				1
	|			КОНЕЦ
	|		) КАК Количество
	|	ИЗ	
	|		Документ.КомплектацияНоменклатуры КАК Док
	|		
	|	ГДЕ
	|		Док.Ссылка = &Ссылка
	|		
	|	СГРУППИРОВАТЬ ПО
	|		Док.НоменклатурнаяГруппа,
	|		Док.Номенклатура,
	|		Док.ХарактеристикаНоменклатуры,
	|		Док.СерияНоменклатуры,
	|		Док.Спецификация,
	|		
	|		ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя 
	|				И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|			Док.Заказ
	|		КОГДА Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
	|				И Док.Заказ <> &ПустойЗаказНаПроизводство
	|				И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|			Док.Заказ
	|		ИНАЧЕ
	|			Неопределено
	|		КОНЕЦ,
	|		
	|		ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя 
	|				И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|			Док.Заказ
	|		КОГДА Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
	|				И Док.Заказ <> &ПустойЗаказНаПроизводство
	|				И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|			Док.Заказ
	|		ИНАЧЕ
	|			Неопределено
	|		КОНЕЦ
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаПоПродукцииКомплектацияНоменклатурыСборка()
		// Формирует текст запроса для документа "Комплектация номенклатуры (разборка)".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоПродукцииКомплектацияНоменклатурыРазборка(/**/)
		{
			/*ТекстЗапроса = "
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.Ссылка.НоменклатурнаяГруппа,
	|		ТабличнаяЧасть.Номенклатура,
	|		ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|		ТабличнаяЧасть.СерияНоменклатуры,
	|		ТабличнаяЧасть.Ссылка.Спецификация,
	|		
	|		ВЫБОР КОГДА ТабличнаяЧасть.Ссылка.Заказ ССЫЛКА Документ.ЗаказПокупателя 
	|				И ТабличнаяЧасть.Ссылка.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|			ТабличнаяЧасть.Ссылка.Заказ
	|		КОГДА ТабличнаяЧасть.Ссылка.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
	|				И ТабличнаяЧасть.Ссылка.Заказ <> &ПустойЗаказНаПроизводство
	|				И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|			ТабличнаяЧасть.Ссылка.Заказ
	|		ИНАЧЕ
	|			Неопределено
	|		КОНЕЦ КАК Заказ,
	|		
	|		ВЫБОР КОГДА ТабличнаяЧасть.Ссылка.Заказ ССЫЛКА Документ.ЗаказПокупателя 
	|				И ТабличнаяЧасть.Ссылка.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|			ТабличнаяЧасть.Ссылка.Заказ
	|		КОГДА ТабличнаяЧасть.Ссылка.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
	|				И ТабличнаяЧасть.Ссылка.Заказ <> &ПустойЗаказНаПроизводство
	|				И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|			ТабличнаяЧасть.Ссылка.Заказ
	|		ИНАЧЕ
	|			Неопределено
	|		КОНЕЦ КАК ЗаказРегл,
	|		
	|		СУММА(
	|			Количество * 
	|			ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|						И Коэффициент <> 0 ТОГДА 
	|				Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|			ИНАЧЕ
	|				1
	|			КОНЕЦ
	|		) КАК Количество
	|	ИЗ	
	|		Документ.КомплектацияНоменклатуры.Комплектующие КАК ТабличнаяЧасть
	|		
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &Ссылка
	|		
	|	СГРУППИРОВАТЬ ПО
	|		ТабличнаяЧасть.Ссылка.НоменклатурнаяГруппа,
	|		ТабличнаяЧасть.Номенклатура,
	|		ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|		ТабличнаяЧасть.СерияНоменклатуры,
	|		ТабличнаяЧасть.Ссылка.Спецификация,
	|		
	|		
	|		ВЫБОР КОГДА ТабличнаяЧасть.Ссылка.Заказ ССЫЛКА Документ.ЗаказПокупателя 
	|				И ТабличнаяЧасть.Ссылка.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|			ТабличнаяЧасть.Ссылка.Заказ
	|		КОГДА ТабличнаяЧасть.Ссылка.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
	|				И ТабличнаяЧасть.Ссылка.Заказ <> &ПустойЗаказНаПроизводство
	|				И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|			ТабличнаяЧасть.Ссылка.Заказ
	|		ИНАЧЕ
	|			Неопределено
	|		КОНЕЦ,
	|		
	|		ВЫБОР КОГДА ТабличнаяЧасть.Ссылка.Заказ ССЫЛКА Документ.ЗаказПокупателя 
	|				И ТабличнаяЧасть.Ссылка.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|			ТабличнаяЧасть.Ссылка.Заказ
	|		КОГДА ТабличнаяЧасть.Ссылка.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
	|				И ТабличнаяЧасть.Ссылка.Заказ <> &ПустойЗаказНаПроизводство
	|				И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|			ТабличнаяЧасть.Ссылка.Заказ
	|		ИНАЧЕ
	|			Неопределено
	|		КОНЕЦ
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаПоПродукцииКомплектацияНоменклатурыРазборка()
		// Формирует текст запроса по табличной части "Услуги" документа "Акт об оказании производственных услуг".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоПродукцииАктОбОказанииПроизводственныхУслуг(/**/)
		{
			/*ТекстЗапроса = "
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.НоменклатурнаяГруппа,
	|		ТабличнаяЧасть.Номенклатура,
	|		&ПустаяХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		&ПустаяСерияНоменклатуры КАК СерияНоменклатуры,
	|		ТабличнаяЧасть.Спецификация,
	|		
	|		ВЫБОР КОГДА ТабличнаяЧасть.Ссылка.ИспользоватьЗаказы 
	|				И ТабличнаяЧасть.Ссылка.Сделка ССЫЛКА Документ.ЗаказПокупателя 
	|				И ТабличнаяЧасть.Ссылка.Сделка <> &ПустойЗаказПокупателя ТОГДА
	|			ТабличнаяЧасть.Ссылка.Сделка
	|		КОГДА ТабличнаяЧасть.Ссылка.ИспользоватьЗаказы 
	|				И ТабличнаяЧасть.ЗаказВыпуска ССЫЛКА Документ.ЗаказНаПроизводство 
	|				И ТабличнаяЧасть.ЗаказВыпуска <> &ПустойЗаказНаПроизводство
	|				И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|			ТабличнаяЧасть.ЗаказВыпуска
	|		ИНАЧЕ
	|			Неопределено
	|		КОНЕЦ КАК Заказ,
	|		
	|		ВЫБОР КОГДА ТабличнаяЧасть.Ссылка.ИспользоватьЗаказы 
	|				И ТабличнаяЧасть.Ссылка.Сделка ССЫЛКА Документ.ЗаказПокупателя 
	|				И ТабличнаяЧасть.Ссылка.Сделка <> &ПустойЗаказПокупателя ТОГДА
	|			ТабличнаяЧасть.Ссылка.Сделка
	|		КОГДА ТабличнаяЧасть.Ссылка.ИспользоватьЗаказы 
	|				И ТабличнаяЧасть.ЗаказВыпуска ССЫЛКА Документ.ЗаказНаПроизводство 
	|				И ТабличнаяЧасть.ЗаказВыпуска <> &ПустойЗаказНаПроизводство
	|				И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|			ТабличнаяЧасть.ЗаказВыпуска
	|		ИНАЧЕ
	|			Неопределено
	|		КОНЕЦ КАК ЗаказРегл,
	|		
	|		СУММА(
	|			Количество * 
	|			ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|						И Коэффициент <> 0 ТОГДА 
	|				Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|			ИНАЧЕ
	|				1
	|			КОНЕЦ
	|		) КАК Количество
	|	ИЗ	
	|		Документ.АктОбОказанииПроизводственныхУслуг.Услуги КАК ТабличнаяЧасть
	|		
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &Ссылка
	|		
	|	СГРУППИРОВАТЬ ПО
	|		ТабличнаяЧасть.НоменклатурнаяГруппа,
	|		ТабличнаяЧасть.Номенклатура,
	|		ТабличнаяЧасть.Спецификация,
	|		
	|		ВЫБОР КОГДА ТабличнаяЧасть.Ссылка.ИспользоватьЗаказы 
	|				И ТабличнаяЧасть.Ссылка.Сделка ССЫЛКА Документ.ЗаказПокупателя 
	|				И ТабличнаяЧасть.Ссылка.Сделка <> &ПустойЗаказПокупателя ТОГДА
	|			ТабличнаяЧасть.Ссылка.Сделка
	|		КОГДА ТабличнаяЧасть.Ссылка.ИспользоватьЗаказы 
	|				И ТабличнаяЧасть.ЗаказВыпуска ССЫЛКА Документ.ЗаказНаПроизводство 
	|				И ТабличнаяЧасть.ЗаказВыпуска <> &ПустойЗаказНаПроизводство
	|				И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|			ТабличнаяЧасть.ЗаказВыпуска
	|		ИНАЧЕ
	|			Неопределено
	|		КОНЕЦ,
	|		
	|		ВЫБОР КОГДА ТабличнаяЧасть.Ссылка.ИспользоватьЗаказы 
	|				И ТабличнаяЧасть.Ссылка.Сделка ССЫЛКА Документ.ЗаказПокупателя 
	|				И ТабличнаяЧасть.Ссылка.Сделка <> &ПустойЗаказПокупателя ТОГДА
	|			ТабличнаяЧасть.Ссылка.Сделка
	|		КОГДА ТабличнаяЧасть.Ссылка.ИспользоватьЗаказы 
	|				И ТабличнаяЧасть.ЗаказВыпуска ССЫЛКА Документ.ЗаказНаПроизводство 
	|				И ТабличнаяЧасть.ЗаказВыпуска <> &ПустойЗаказНаПроизводство
	|				И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|			ТабличнаяЧасть.ЗаказВыпуска
	|		ИНАЧЕ
	|			Неопределено
	|		КОНЕЦ
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаПоПродукцииАктОбОказанииПроизводственныхУслуг()
		// Формирует текст запроса по табличной части "Материалы" документа "Корректировка незавершенного производства".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоПродукцииКорректировкаНЗП(/**/)
		{
			/*ТекстЗапроса = "
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.НоменклатурнаяГруппа,
	|		ТабличнаяЧасть.Номенклатура,
	|		ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|		ТабличнаяЧасть.СерияНоменклатуры,
	|		&ПустаяСпецификация КАК Спецификация,
	|		
	|		//ТекстЗапросаЗаказУпр
	|		//ТекстЗапросаЗаказРегл
	|		
	|		СУММА(
	|			Количество * 
	|			ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|						И Коэффициент <> 0 ТОГДА 
	|				Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|			ИНАЧЕ
	|				1
	|			КОНЕЦ
	|		) КАК Количество
	|	ИЗ	
	|		Документ.КорректировкаНЗП.Материалы КАК ТабличнаяЧасть
	|		
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &Ссылка
	|		
	|	СГРУППИРОВАТЬ ПО
	|		ТабличнаяЧасть.НоменклатурнаяГруппа,
	|		ТабличнаяЧасть.Номенклатура,
	|		ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|		ТабличнаяЧасть.СерияНоменклатуры,
	|		
	|		//СгруппироватьТекстЗапросаЗаказУпр
	|		//СгруппироватьТекстЗапросаЗаказРегл
	|";*/
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаДляРеквизитаЗаказКорректировкаНЗП();*/
			/*ТекстЗапросаДляРеквизитаЗаказ = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями, 
		Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	);*/
			/*ТекстЗапросаДляРеквизитаЗаказРегл = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями, 
		Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
	);*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + " КАК Заказ,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказРегл", ТекстЗапросаДляРеквизитаЗаказРегл + " КАК ЗаказРегл,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//СгруппироватьТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + ",");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//СгруппироватьТекстЗапросаЗаказРегл", ТекстЗапросаДляРеквизитаЗаказРегл);*/
			return null;
		}
		// СформироватьТекстЗапросаПоПродукцииКорректировкаНЗП()
		// Формирует текст запроса по табличной части "Материалы" документа "Оприходование незавершенного производства".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоПродукцииОприходованиеНЗП(/**/)
		{
			/*ТекстЗапроса = "
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.НоменклатурнаяГруппа,
	|		ТабличнаяЧасть.Номенклатура,
	|		ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|		ТабличнаяЧасть.СерияНоменклатуры,
	|		&ПустаяСпецификация КАК Спецификация,
	|		
	|		//ТекстЗапросаЗаказУпр
	|		//ТекстЗапросаЗаказРегл
	|		
	|		СУММА(
	|			Количество * 
	|			ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|						И Коэффициент <> 0 ТОГДА 
	|				Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|			ИНАЧЕ
	|				1
	|			КОНЕЦ
	|		) КАК Количество
	|	ИЗ	
	|		Документ.ОприходованиеНЗП.Материалы КАК ТабличнаяЧасть
	|		
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &Ссылка
	|		
	|	СГРУППИРОВАТЬ ПО
	|		ТабличнаяЧасть.НоменклатурнаяГруппа,
	|		ТабличнаяЧасть.Номенклатура,
	|		ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|		ТабличнаяЧасть.СерияНоменклатуры,
	|		
	|		//СгруппироватьТекстЗапросаЗаказУпр
	|		//СгруппироватьТекстЗапросаЗаказРегл
	|";*/
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаДляРеквизитаЗаказКорректировкаНЗП();*/
			/*ТекстЗапросаДляРеквизитаЗаказ = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	);*/
			/*ТекстЗапросаДляРеквизитаЗаказРегл = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
	);*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + " КАК Заказ,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказРегл", ТекстЗапросаДляРеквизитаЗаказРегл + " КАК ЗаказРегл,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//СгруппироватьТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + ",");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//СгруппироватьТекстЗапросаЗаказРегл", ТекстЗапросаДляРеквизитаЗаказРегл);*/
			return null;
		}
		// СформироватьТекстЗапросаПоПродукцииОприходованиеНЗП()
		// Формирует текст запроса по табличной части "Материалы" документа "Списание незавершенного производства".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоПродукцииСписаниеНЗП(/**/)
		{
			/*ТекстЗапроса = "
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.НоменклатурнаяГруппа,
	|		ТабличнаяЧасть.Номенклатура,
	|		ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|		ТабличнаяЧасть.СерияНоменклатуры,
	|		&ПустаяСпецификация КАК Спецификация,
	|		
	|		//ТекстЗапросаЗаказУпр
	|		//ТекстЗапросаЗаказРегл
	|		
	|		СУММА(
	|			Количество * 
	|			ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|						И Коэффициент <> 0 ТОГДА 
	|				Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|			ИНАЧЕ
	|				1
	|			КОНЕЦ
	|		) КАК Количество
	|	ИЗ	
	|		Документ.СписаниеНЗП.Материалы КАК ТабличнаяЧасть
	|		
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &Ссылка
	|		
	|	СГРУППИРОВАТЬ ПО
	|		ТабличнаяЧасть.НоменклатурнаяГруппа,
	|		ТабличнаяЧасть.Номенклатура,
	|		ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|		ТабличнаяЧасть.СерияНоменклатуры,
	|		
	|		//СгруппироватьТекстЗапросаЗаказУпр
	|		//СгруппироватьТекстЗапросаЗаказРегл
	|";*/
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаДляРеквизитаЗаказКорректировкаНЗП();*/
			/*ТекстЗапросаДляРеквизитаЗаказ = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	);*/
			/*ТекстЗапросаДляРеквизитаЗаказРегл = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
	);*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + " КАК Заказ,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказРегл", ТекстЗапросаДляРеквизитаЗаказРегл + " КАК ЗаказРегл,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//СгруппироватьТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + ",");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//СгруппироватьТекстЗапросаЗаказРегл", ТекстЗапросаДляРеквизитаЗаказРегл);*/
			return null;
		}
		// СформироватьТекстЗапросаПоПродукцииСписаниеНЗП()
		// Формирует текст запроса по табличной части "Материалы" документа "Оприходование материалов из производства".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоПродукцииОприходованиеМатериалов(/**/)
		{
			/*ТекстЗапроса = "
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.НоменклатурнаяГруппа,
	|		ТабличнаяЧасть.Номенклатура,
	|		ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|		ТабличнаяЧасть.СерияНоменклатуры,
	|		&ПустаяСпецификация КАК Спецификация,
	|		
	|		//ТекстЗапросаЗаказУпр
	|		//ТекстЗапросаЗаказРегл
	|		
	|		СУММА(
	|			Количество * 
	|			ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|						И Коэффициент <> 0 ТОГДА 
	|				Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|			ИНАЧЕ
	|				1
	|			КОНЕЦ
	|		) КАК Количество
	|	ИЗ	
	|		Документ.ОприходованиеМатериаловИзПроизводства.Материалы КАК ТабличнаяЧасть
	|		
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &Ссылка
	|		И ТабличнаяЧасть.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОприходованиеМатериаловИзПроизводства.Материалы)
	|		
	|	СГРУППИРОВАТЬ ПО
	|		ТабличнаяЧасть.НоменклатурнаяГруппа,
	|		ТабличнаяЧасть.Номенклатура,
	|		ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|		ТабличнаяЧасть.СерияНоменклатуры,
	|		
	|		//СгруппироватьТекстЗапросаЗаказУпр
	|		//СгруппироватьТекстЗапросаЗаказРегл
	|";*/
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаДляРеквизитаЗаказКорректировкаНЗП();*/
			/*ТекстЗапросаДляРеквизитаЗаказ = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	);*/
			/*ТекстЗапросаДляРеквизитаЗаказРегл = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
	);*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + " КАК Заказ,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказРегл", ТекстЗапросаДляРеквизитаЗаказРегл + " КАК ЗаказРегл,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//СгруппироватьТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + ",");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//СгруппироватьТекстЗапросаЗаказРегл", ТекстЗапросаДляРеквизитаЗаказРегл);*/
			return null;
		}
		// СформироватьТекстЗапросаПоПродукцииОприходованиеМатериалов()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ЗАПРОСОВ ПО ВЫПУЩЕННОЙ ПРОДУКЦИИ И УЧЕТНОЙ СТОИМОСТИ
		// Формирует текст запроса по регистру "Затраты на выпуск продукции".
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса по регистру "Затраты на выпуск продукции"
		//

		public object СформироватьТекстЗапросаПоЗатратамНаВыпускДокумента(/*
	СтруктураШапкиДокумента
	*/)
		{
			if(true/*СтруктураШапкиДокумента.ИспользоватьРасширеннуюАналитику*/)
			{
				/*ТекстЗапроса = "
		|	ЛЕВОЕ СОЕДИНЕНИЕ (
		|		ВЫБРАТЬ
		|			РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа,
		|			РегистрАналитикаРаспределенияЗатрат.Продукция,
		|			РегистрАналитикаРаспределенияЗатрат.ХарактеристикаПродукции,
		|			РегистрАналитикаРаспределенияЗатрат.СерияПродукции,
		|			РегистрАналитикаРаспределенияЗатрат.Спецификация,
		|			РегистрАналитикаУчетаПартий.Заказ,
		|			
		|			//ДляУпрУчета НастройкиАналитикиУчетаХарактеристика.УправленческийУчет КАК УчетХарактеристик,
		|			//ДляРеглУчета НастройкиАналитикиУчетаХарактеристика.РегламентированныйУчет КАК УчетХарактеристик,
		|			//ДляУпрУчета НастройкиАналитикиУчетаСерия.УправленческийУчет КАК УчетСерий,
		|			//ДляРеглУчета НастройкиАналитикиУчетаСерия.РегламентированныйУчет КАК УчетСерий,
		|
		|			//ДляНалУчета УчетЗатрат.ПостояннаяРазницаПриход КАК ПостояннаяРазница,
		|			//ДляНалУчета 0 КАК ВременнаяРазница,
		|			//ДляНалУчета УчетЗатрат.СтоимостьНУПриход КАК Сумма
		|
		|			//ДляБухУчета УчетЗатрат.СтоимостьПриход КАК Сумма
		|			//ДляУпрУчета УчетЗатрат.СтоимостьПриход КАК Сумма
		|		ИЗ
		|			РегистрНакопления.УчетЗатрат%СуффиксРегл%.Обороты(&КонДата, &КонДата, Регистратор,  
		|				АналитикаВидаУчета В (
		|					ВЫБРАТЬ
		|						Ссылка
		|					ИЗ
		|                   	РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
		|					ГДЕ
		|						РегистрАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.ЗатратыНаВыпуск)
		|						ИЛИ РегистрАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.ЗатратыПоНаработке)
		|					)
		|				И АналитикаУчетаЗатрат Не В (
		|					ВЫБРАТЬ
		|						Ссылка
		|					ИЗ
		|                   	РегистрСведений.АналитикаУчетаЗатрат КАК РегистрАналитикаВидаУчета
		|					ГДЕ
		|						РегистрАналитикаВидаУчета.СтатьяЗатрат.СтатусМатериальныхЗатрат 
		|							= ЗНАЧЕНИЕ(Перечисление.СтатусыМатериальныхЗатратНаПроизводство.ПринятыеВПереработку)
		|					)
		|				) КАК УчетЗатрат
		|		
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|				РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрАналитикаРаспределенияЗатрат
		|			ПО
		|				УчетЗатрат.АналитикаРаспределенияЗатрат = РегистрАналитикаРаспределенияЗатрат.Ссылка
		|		
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|				РегистрСведений.АналитикаУчетаПартий КАК РегистрАналитикаУчетаПартий
		|			ПО
		|				УчетЗатрат.АналитикаУчетаПартий = РегистрАналитикаУчетаПартий.Ссылка
		|				
		|			ЛЕВОЕ СОЕДИНЕНИЕ
		|				Справочник.НастройкиАналитикиУчета КАК НастройкиАналитикиУчетаХарактеристика
		|			ПО
		|				НастройкиАналитикиУчетаХарактеристика.Ссылка = ЗНАЧЕНИЕ(Справочник.НастройкиАналитикиУчета.ХарактеристикаПродукции)
		|				
		|			ЛЕВОЕ СОЕДИНЕНИЕ
		|				Справочник.НастройкиАналитикиУчета КАК НастройкиАналитикиУчетаСерия
		|			ПО
		|				НастройкиАналитикиУчетаСерия.Ссылка = ЗНАЧЕНИЕ(Справочник.НастройкиАналитикиУчета.СерияПродукции)
		|
		|		ГДЕ
		|			УчетЗатрат.Регистратор = &Ссылка
		|
		|		) КАК СтоимостьПродукции
		|	ПО 
		|	 	ТабличнаяЧасть.НоменклатурнаяГруппа = СтоимостьПродукции.НоменклатурнаяГруппа
		|		И ТабличнаяЧасть.Номенклатура = СтоимостьПродукции.Продукция
		|		И (Не СтоимостьПродукции.УчетХарактеристик
		|			ИЛИ 
		|			(СтоимостьПродукции.УчетХарактеристик
		|			И ТабличнаяЧасть.ХарактеристикаНоменклатуры = СтоимостьПродукции.ХарактеристикаПродукции))
		|		И (Не СтоимостьПродукции.УчетСерий
		|			ИЛИ 
		|			(СтоимостьПродукции.УчетСерий
		|			И ТабличнаяЧасть.СерияНоменклатуры = СтоимостьПродукции.СерияПродукции))
		|		И ТабличнаяЧасть.Спецификация = СтоимостьПродукции.Спецификация
		|		//ДляУпрУчета И ТабличнаяЧасть.Заказ = СтоимостьПродукции.Заказ
		|		//ДляРеглУчета И ТабличнаяЧасть.ЗаказРегл = СтоимостьПродукции.Заказ
		|";*/
			}
			return null;
		}
		// СформироватьТекстЗапросаПоЗатратамНаВыпускДокумента()
		// Формирует текст запроса по продукции из документа выпуска.
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	ИмяДокумента - Строка - Имя документа
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса
		//

		public object СформироватьТекстЗапросаПоПродукцииДокумента(/*
	СтруктураШапкиДокумента,
	ИмяДокумента
	*/)
		{
			/*ТекстЗапроса = "
	|	И Номенклатура В (
	|		ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			Номенклатура
	|		ИЗ
	|			ИмяТаблицы КАК Документ
	|		ГДЕ
	|			Документ.Ссылка = &Ссылка
	|		)
	|";*/
			if(true/*ИмяДокумента = "ОтчетПроизводстваЗаСмену"*/)
			{
				/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
			"ИмяТаблицы", 
			"Документ.ОтчетПроизводстваЗаСмену.Продукция");*/
			}
			return null;
		}
		// СформироватьТекстЗапросаПоПродукцииДокумента()
		// Формирует текст запроса по регистру сведений "Цены номенклатуры".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	ИмяДокумента - Строка - Имя документа
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса по регистру "Цены номенклатура"
		//

		public object СформироватьТекстЗапросаПоЦенамНоменклатуры(/*
	СтруктураШапкиДокумента,
	ИмяДокумента
	*/)
		{
			/*ТекстЗапроса = "
	|	ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			ЦеныНоменклатуры.Номенклатура,
	|			ЦеныНоменклатуры.ХарактеристикаНоменклатуры,
	|			(ЦеныНоменклатуры.Цена 
	|			* ЕСТЬNULL(КурсыВалют.Курс, 0)
	|			* (ВЫБОР КОГДА ЦеныНоменклатуры.ЕдиницаИзмерения.Коэффициент ЕСТЬ NULL 
	|					ИЛИ ЦеныНоменклатуры.ЕдиницаИзмерения.Коэффициент = 0 ТОГДА
	|				1
	|			ИНАЧЕ
	|				ЦеныНоменклатуры.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / 
	|				ЦеныНоменклатуры.ЕдиницаИзмерения.Коэффициент
	|			КОНЕЦ)
	|			* ЕСТЬNULL(КурсВалютыУчета.Кратность, 1)
	|			/ ( ЕСТЬNULL(КурсВалютыУчета.Курс, 1)
	|				* (ВЫБОР КОГДА КурсыВалют.Кратность ЕСТЬ NULL ИЛИ КурсыВалют.Кратность = 0 Тогда
	|					1
	|				ИНАЧЕ 
	|					КурсыВалют.Кратность
	|				КОНЕЦ) 
	|				)
	|			) КАК Цена
	|		ИЗ
	|			РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&КонДата,
	|				ТипЦен В (
	|					ВЫБРАТЬ
	|						Константы.ТипЦенПлановойСебестоимостиНоменклатуры
	|					ИЗ
	|						Константы КАК Константы
	|					)
	|				//ТекстЗапросаПоПродукцииДокумента
	|
	|				) КАК ЦеныНоменклатуры
	|				
	|			ЛЕВОЕ СОЕДИНЕНИЕ
	|				РегистрСведений.КурсыВалют.СрезПоследних(&КонДата) КАК КурсыВалют
	|			ПО 
	|				КурсыВалют.Валюта = ЦеныНоменклатуры.Валюта
	|				
	|			ЛЕВОЕ СОЕДИНЕНИЕ
	|				РегистрСведений.КурсыВалют.СрезПоследних(&КонДата, 
	|					ВАЛЮТА В (
	|						ВЫБРАТЬ
	|							//ДляУпрУчета Константы.ВалютаУправленческогоУчета 
	|							//ДляРеглУчета Константы.ВалютаРегламентированногоУчета
	|						ИЗ
	|							Константы КАК Константы
	|						)
	|					) КАК КурсВалютыУчета
	|			ПО ИСТИНА
	|		) КАК СтоимостьПродукции
	|	ПО 
	|		ТабличнаяЧасть.Номенклатура = СтоимостьПродукции.Номенклатура
	|		И ТабличнаяЧасть.ХарактеристикаНоменклатуры = СтоимостьПродукции.ХарактеристикаНоменклатуры
	|";*/
			/*ТекстЗапросаПоПродукцииДокумента = СформироватьТекстЗапросаПоПродукцииДокумента(
		СтруктураШапкиДокумента,
		ИмяДокумента
		);*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаПоПродукцииДокумента", ТекстЗапросаПоПродукцииДокумента);*/
			return null;
		}
		// СформироватьТекстЗапросаПоЦенамНоменклатуры()
		// Функция формирует полный текст запроса по выпущенной продукции и учетной стоимости продукции.
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	ИмяДокумента - Строка - Имя документа
		//	ТекстЗапросаПоТабличнойЧастиПродукция - Строка - Текст запроса по табличной части документа
		//	УчетнаяПолитика - Структура - Учетная политика по управленческому учету
		//	УчетнаяПолитикаБух - Структура - Учетная политика по бухгалтерскому учету.
		//
		// Возвращаемое значение:
		//   Запрос – Запрос по выпущенной продукции и учетной стоимости продукции.
		//

		public object СформироватьТекстЗапросаПоВыпущеннойПродукцииИУчетнойСтоимости(/*
	СтруктураШапкиДокумента,
	ИмяДокумента,
	ТекстЗапросаПоТабличнойЧастиПродукция,
	УчетнаяПолитика,
	УчетнаяПолитикаБух
	*/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.НоменклатурнаяГруппа,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|	ТабличнаяЧасть.СерияНоменклатуры,
	|	ТабличнаяЧасть.Спецификация,
	|	ТабличнаяЧасть.Заказ,
	|	ТабличнаяЧасть.ЗаказРегл,
	| 	
	|	//УчетнаяСтоимостьУУ СУММА( ЕСТЬNULL(СтоимостьПродукцииУУ.Сумма, 0) ) КАК СтоимостьУУ,
	|	//УчетнаяСтоимостьБУ СУММА( ЕСТЬNULL(СтоимостьПродукцииБУ.Сумма, 0) ) КАК СтоимостьБУ,
	|	//УчетнаяСтоимостьНУ СУММА( ЕСТЬNULL(СтоимостьПродукцииНУ.Сумма, 0) ) КАК СтоимостьНУ,
	| 	
	|	//ПлановаяСтоимостьУУ СУММА( ЕСТЬNULL(СтоимостьПродукцииУУ.Цена, 0) * ТабличнаяЧасть.Количество) КАК СтоимостьУУ,
	|	//ПлановаяСтоимостьБУ СУММА( ЕСТЬNULL(СтоимостьПродукцииБУ.Цена, 0) * ТабличнаяЧасть.Количество) КАК СтоимостьБУ,
	|	//ПлановаяСтоимостьНУ СУММА( ЕСТЬNULL(СтоимостьПродукцииНУ.Цена, 0) * ТабличнаяЧасть.Количество) КАК СтоимостьНУ,
	|
	|	//НулеваяСтоимостьУУ 0 КАК СтоимостьУУ,
	|	//НулеваяСтоимостьБУ 0 КАК СтоимостьБУ,
	|	//НулеваяСтоимостьНУ 0 КАК СтоимостьНУ,
	|
	|	СУММА(ТабличнаяЧасть.Количество) КАК Количество
	|	
	|ИЗ (
	|
	|//ТекстЗапросаПоТабличнойЧастиПродукция
	|
	|	) КАК ТабличнаяЧасть
	|
	|//СоединениеТекстЗапросаПоСтоимостиПродукцииУУ
	|
	|//СоединениеТекстЗапросаПоСтоимостиПродукцииБУ
	|
	|//СоединениеТекстЗапросаПоСтоимостиПродукцииНУ
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.НоменклатурнаяГруппа,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|	ТабличнаяЧасть.СерияНоменклатуры,
	|	ТабличнаяЧасть.Спецификация,
	|	ТабличнаяЧасть.Заказ,
	|	ТабличнаяЧасть.ЗаказРегл
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТабличнаяЧасть.НоменклатурнаяГруппа,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|	ТабличнаяЧасть.СерияНоменклатуры,
	|	ТабличнаяЧасть.Спецификация,
	|	ТабличнаяЧасть.Заказ,
	|	ТабличнаяЧасть.ЗаказРегл
	|";*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаПоТабличнойЧастиПродукция", ТекстЗапросаПоТабличнойЧастиПродукция);*/
			/*ТекстЗапросаПоСтоимостиПродукцииСКомментариями = СформироватьТекстЗапросаПоЗатратамНаВыпускДокумента(СтруктураШапкиДокумента);*/
			/*ТекстЗапросаПоЦенамНоменклатурыСКомментариями = СформироватьТекстЗапросаПоЦенамНоменклатуры(
		СтруктураШапкиДокумента,
		ИмяДокумента
		);*/
			/*РасчетПоПрямымЗатратамУУ = Ложь;*/
			/*РасчетПоПрямымЗатратамБУ = Ложь;*/
			if(true/*ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.КорректировкаНЗП")
	 ИЛИ ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.ОприходованиеНЗП")
	 ИЛИ ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.СписаниеНЗП")
	 ИЛИ ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.ОприходованиеМатериаловИзПроизводства")*/)
			{
				/*РасчетПоПрямымЗатратамУУ = Истина;*/
				/*РасчетПоПрямымЗатратамБУ = Истина;*/
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете*/)
			{
				if(true/*РасчетПоПрямымЗатратамУУ*/)
				{
					/*ТекстЗапросаПоСтоимостиПродукцииУУ = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
				ТекстЗапросаПоСтоимостиПродукцииСКомментариями,
				Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
			);*/
					/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//СоединениеТекстЗапросаПоСтоимостиПродукцииУУ", ТекстЗапросаПоСтоимостиПродукцииУУ);*/
					/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УчетнаяСтоимостьУУ", "");*/
				}
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете*/)
			{
				if(true/*РасчетПоПрямымЗатратамБУ*/)
				{
					/*ТекстЗапросаПоСтоимостиПродукцииБУ = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
				ТекстЗапросаПоСтоимостиПродукцииСКомментариями,
				Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
			);*/
					/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//СоединениеТекстЗапросаПоСтоимостиПродукцииБУ", ТекстЗапросаПоСтоимостиПродукцииБУ);*/
					/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УчетнаяСтоимостьБУ", "");*/
				}
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВНалоговомУчете*/)
			{
				if(true/*РасчетПоПрямымЗатратамБУ*/)
				{
					/*ТекстЗапросаПоСтоимостиПродукцииНУ = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
				ТекстЗапросаПоСтоимостиПродукцииСКомментариями,
				Перечисления.ВидыОтраженияВУчете.ОтражатьВНалоговомУчете
			);*/
					/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//СоединениеТекстЗапросаПоСтоимостиПродукцииНУ", ТекстЗапросаПоСтоимостиПродукцииНУ);*/
					/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УчетнаяСтоимостьНУ", "");*/
				}
			}
			return null;
		}
		// СформироватьТекстЗапросаПоВыпущеннойПродукцииИУчетнойСтоимости()
		// Функция формирует запрос по выпущенной продукции и учетной стоимости продукции.
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	ИмяДокумента - Строка - Имя документа
		//	ТекстЗапросаПоТабличнойЧастиПродукция - Строка - Текст запроса по табличной части документа
		//	УчетнаяПолитика - Структура - Учетная политика по управленческому учету
		//	УчетнаяПолитикаБух - Структура - Учетная политика по бухгалтерскому учету.
		//
		// Возвращаемое значение:
		//   Запрос – Запрос по выпущенной продукции и учетной стоимости продукции.
		//

		public object СформироватьЗапросПоВыпущеннойПродукцииИУчетнойСтоимости(/*
	СтруктураШапкиДокумента,
	ИмяДокумента,
	ТекстЗапросаПоТабличнойЧастиПродукция,
	УчетнаяПолитика,
	УчетнаяПолитикаБух
	*/)
		{
			/*Запрос = Новый Запрос;*/
			if(true/*Не ПустаяСтрока(ТекстЗапросаПоТабличнойЧастиПродукция)*/)
			{
				/*ТекстЗапроса = СформироватьТекстЗапросаПоВыпущеннойПродукцииИУчетнойСтоимости(
			СтруктураШапкиДокумента,
			ИмяДокумента,
			ТекстЗапросаПоТабличнойЧастиПродукция,
			УчетнаяПолитика,
			УчетнаяПолитикаБух
			);*/
				/*Запрос.Текст = ТекстЗапроса;*/
				/*УстановитьПараметрыЗапросаПоВыпускуПродукции(
			СтруктураШапкиДокумента,
			УчетнаяПолитика,
			УчетнаяПолитикаБух,
			Запрос
			);*/
			}
			return null;
		}
		// СформироватьЗапросПоВыпущеннойПродукцииИУчетнойСтоимости()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ЗАПРОСОВ ПО НАПРАВЛЕНИЯМ ВЫПУСКА ПРОДУКЦИИ
		// Формирует текст запроса по табличной части "Продукция" документа "Отчет производства за смену".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоВыпускуПродукцииНаработкаОтчетПроизводстваЗаСмену(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка.Организация КАК Организация,
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ТабличнаяЧасть.ВидВыпуска,
	|	ТабличнаяЧасть.НоменклатурнаяГруппа,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|	ТабличнаяЧасть.СерияНоменклатуры,
	|	ТабличнаяЧасть.Спецификация,
	|	ТабличнаяЧасть.СчетЗатрат,
	|	ТабличнаяЧасть.СчетЗатратНУ,
	|		
	|	//ТекстЗапросаЗаказУпр
	|	//ТекстЗапросаЗаказРегл
	|
	|	ТабличнаяЧасть.Номенклатура КАК Продукция,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаПродукции,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК СерияПродукции,
	|
	|	Неопределено КАК Проект,
	|	&КодОперацииВыпускПродукцииНаСклад КАК КодОперации,
	|
	|	ВЫБОР КОГДА ТабличнаяЧасть.Заказ ССЫЛКА Документ.ЗаказПокупателя
	|				И ТабличнаяЧасть.Заказ.ВидОперации = &ВидОперацииПереработка ТОГДА
	|		&ПродукцияИзДавальческогоСырья
	|	ИНАЧЕ
	|      	&СобственнаяПродукция
	|	КОНЕЦ КАК ВариантВыпускаПродукции,
	|		
	|	(Количество * 
	|	ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|				И Коэффициент <> 0 ТОГДА 
	|		Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ
	|	) КАК Количество,
	|		
	|	(КоличествоДоделка * 
	|	ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|				И Коэффициент <> 0 ТОГДА 
	|		Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ
	|	) КАК КоличествоДоделка
	|ИЗ	
	|	Документ.ОтчетПроизводстваЗаСмену.Продукция КАК ТабличнаяЧасть
	|	
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.ВидВыпуска = &ВидВыпускаНаработка
	|	И ТабличнаяЧасть.Ссылка.ИспользоватьНаработку
	|		
	|УПОРЯДОЧИТЬ ПО
	|	ТабличнаяЧасть.НомерСтроки
	|";*/
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаДляРеквизитаЗаказ();*/
			/*ТекстЗапросаДляРеквизитаЗаказ = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	);*/
			/*ТекстЗапросаДляРеквизитаЗаказРегл = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
	);*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + " КАК Заказ,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказРегл", ТекстЗапросаДляРеквизитаЗаказРегл + " КАК ЗаказРегл,");*/
			return null;
		}
		// СформироватьТекстЗапросаПоВыпускуПродукцииНаработкаОтчетПроизводстваЗаСмену()
		// Формирует текст запроса по табличной части "Продукция" документа "Отчет производства за смену".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоВыпускуПродукцииНаСкладОтчетПроизводстваЗаСмену(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка.Организация КАК Организация,
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ТабличнаяЧасть.НомерСтроки,
	|	ТабличнаяЧасть.НоменклатурнаяГруппа,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Номенклатура.ВестиПартионныйУчетПоСериям КАК ВестиПартионныйУчетПоСериям,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|	ТабличнаяЧасть.СерияНоменклатуры,
	|	ТабличнаяЧасть.Спецификация,
	|	ТабличнаяЧасть.СчетЗатрат,
	|	ТабличнаяЧасть.СчетЗатратНУ,
	|		
	|	//ТекстЗапросаЗаказУпр
	|	//ТекстЗапросаЗаказРегл
	|
	|	ТабличнаяЧасть.Номенклатура КАК Продукция,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаПродукции,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК СерияПродукции,
	|
	|	ТабличнаяЧасть.Ссылка КАК ДокументВыпуска,
	|	Неопределено КАК СтатусМатериальныхЗатрат,
	|	&ВидПоступленияНаСклад КАК ВидПоступления,
	|	ТабличнаяЧасть.Ссылка.Склад КАК СкладПолучатель,
	|	Неопределено КАК ПриходныйОрдер,
	|	Ложь КАК БезПраваПродажи,
	|	ТабличнаяЧасть.ЗаказРезерв,
	|	ЕСТЬNULL(ТабличнаяЧасть.ЗаказРезерв.ВидЗаказа, Неопределено) КАК ВнутреннийЗаказВидЗаказа,
	|	ЕСТЬNULL(ТабличнаяЧасть.ЗаказРезерв.Заказчик, Неопределено) КАК ВнутреннийЗаказЗаказчик,
	|	ТабличнаяЧасть.ЗаказРезерв КАК ЗаказПолучатель,
	|	ТабличнаяЧасть.ЗаказРезерв КАК ЗаказПолучательРегл,
	|
	|	ТабличнаяЧасть.ЗаказРезерв.ВидОперации КАК ВидОперации,
	|	ЕСТЬNULL(
	|		ТабличнаяЧасть.ЗаказРезерв.ДоговорКонтрагента.ОбособленныйУчетТоваровПоЗаказамПокупателей,
	|		Ложь
	|	) КАК ОбособленныйУчетТоваровПоЗаказамПокупателей,
	|
	|	ТабличнаяЧасть.Качество,
	|	ТабличнаяЧасть.СтатусПартии,
	|
	|	ТабличнаяЧасть.Счет КАК СчетДт,
	|	ТабличнаяЧасть.СчетНУ КАК СчетДтНУ,
	|	ТабличнаяЧасть.Счет.Количественный КАК СчетДтКоличественный,
	|	ТабличнаяЧасть.СчетНУ.Количественный КАК СчетДтКоличественныйНУ,
	|
	|	Неопределено КАК ПодразделениеПолучатель,
	|	Неопределено КАК ПодразделениеОрганизацииПолучатель,
	|	
	|	Неопределено КАК Проект,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Ссылка.ИспользоватьНаработку ТОГДА
	|		ТабличнаяЧасть.ВидВыпуска
	|	ИНАЧЕ
	|		&ВидВыпускаВыпуск
	|	КОНЕЦ КАК ВидВыпуска,
	|
	|	ВЫБОР КОГДА ТабличнаяЧасть.Заказ ССЫЛКА Документ.ЗаказПокупателя
	|				И ТабличнаяЧасть.Заказ.ВидОперации = &ВидОперацииПереработка ТОГДА
	|		&ПродукцияИзДавальческогоСырья
	|	ИНАЧЕ
	|      	&СобственнаяПродукция
	|	КОНЕЦ КАК ВариантВыпускаПродукции,
	|		
	|	(Количество * 
	|	ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|				И Коэффициент <> 0 ТОГДА 
	|		Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ
	|	) КАК Количество,
	|		
	|	(КоличествоДоделка * 
	|	ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|				И Коэффициент <> 0 ТОГДА 
	|		Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ
	|	) КАК КоличествоДоделка
	|ИЗ	
	|	Документ.ОтчетПроизводстваЗаСмену.Продукция КАК ТабличнаяЧасть
	|		
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И Не ТабличнаяЧасть.Номенклатура.Услуга
	|	И (ТабличнаяЧасть.НаправлениеВыпуска = &НаправлениеВыпускаНаСклад
	|		И ТабличнаяЧасть.Ссылка.ИспользоватьНаправленияВыпуска
	|		ИЛИ
	|		Не ТабличнаяЧасть.Ссылка.ИспользоватьНаправленияВыпуска)
	|	И (ТабличнаяЧасть.ВидВыпуска = &ВидВыпускаВыпуск
	|		И ТабличнаяЧасть.Ссылка.ИспользоватьНаработку
	|		ИЛИ
	|		Не ТабличнаяЧасть.Ссылка.ИспользоватьНаработку)
	|		
	|УПОРЯДОЧИТЬ ПО
	|	ТабличнаяЧасть.НомерСтроки
	|";*/
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаДляРеквизитаЗаказ();*/
			/*ТекстЗапросаДляРеквизитаЗаказ = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	);*/
			/*ТекстЗапросаДляРеквизитаЗаказРегл = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
	);*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + " КАК Заказ,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказРегл", ТекстЗапросаДляРеквизитаЗаказРегл + " КАК ЗаказРегл,");*/
			return null;
		}
		// СформироватьТекстЗапросаПоВыпускуПродукцииНаСкладОтчетПроизводстваЗаСмену()
		// Формирует текст запроса по табличной части "Продукция" документа "Отчет производства за смену".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоВыпускуПродукцииНаЗатратыОтчетПроизводстваЗаСмену(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка.Организация КАК Организация,
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ТабличнаяЧасть.НомерСтроки,
	|	ТабличнаяЧасть.НоменклатурнаяГруппа,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Номенклатура.Услуга КАК Услуга,
	|	ТабличнаяЧасть.Номенклатура.ВестиУчетПоСериямВНЗП КАК ВестиУчетПоСериямВНЗП,
	|	ТабличнаяЧасть.Номенклатура.ВестиОперативныйУчетОстатковНЗП КАК ВестиОперативныйУчетОстатковНЗП,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|	ТабличнаяЧасть.СерияНоменклатуры,
	|	ТабличнаяЧасть.Спецификация,
	|	ТабличнаяЧасть.СчетЗатрат,
	|	ТабличнаяЧасть.СчетЗатратНУ,
	|
	|	ТабличнаяЧасть.Номенклатура КАК Затрата,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаЗатраты,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК СерияЗатраты,
	|	Неопределено КАК СпособРаспределенияЗатрат,
	|		
	|	//ТекстЗапросаЗаказУпр
	|	//ТекстЗапросаЗаказРегл
	|
	|	ТабличнаяЧасть.Номенклатура КАК Продукция,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаПродукции,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК СерияПродукции,
	|
	|	ТабличнаяЧасть.СтатьяЗатратПолучатель КАК СтатьяЗатрат,
	|	ТабличнаяЧасть.СтатьяЗатратПолучатель.ХарактерЗатрат КАК ХарактерЗатрат,
	|	ТабличнаяЧасть.Ссылка КАК ДокументВыпуска,
	|	ТабличнаяЧасть.ПодразделениеПолучатель,
	|	ТабличнаяЧасть.ПодразделениеОрганизацииПолучатель,
	|	ТабличнаяЧасть.НоменклатурнаяГруппаПолучатель,
	|	ТабличнаяЧасть.СтатьяЗатратПолучатель,
	|	ТабличнаяЧасть.СтатьяЗатратПолучатель.ВидЗатрат КАК ВидЗатрат,
	|	ТабличнаяЧасть.СтатьяЗатратПолучатель.ХарактерЗатрат КАК ХарактерЗатратПолучатель,
	|	ТабличнаяЧасть.СтатьяЗатратПолучатель.СтатусМатериальныхЗатрат КАК СтатусМатериальныхЗатрат,
	|	ТабличнаяЧасть.СтатьяЗатратПолучатель.ВидРасходовНУ КАК ВидРасходовНУ,
	|	ТабличнаяЧасть.КонечнаяПродукция,
	|	ТабличнаяЧасть.ЗаказВыпуска,
	|		
	|	//ТекстЗапросаЗаказПолучательУпр
	|	//ТекстЗапросаЗаказПолучательРегл
	|		
	|	ТабличнаяЧасть.Продукция КАК ПродукцияПолучатель,
	|	ТабличнаяЧасть.ХарактеристикаПродукции КАК ХарактеристикаПродукцииПолучатель,
	|	ТабличнаяЧасть.СерияПродукции КАК СерияПродукцииПолучатель,
	|		
	|	ТабличнаяЧасть.СчетЗатратПолучатель КАК СчетДт,
	|	ТабличнаяЧасть.СчетЗатратПолучательНУ КАК СчетДтНУ,
	|	ТабличнаяЧасть.СчетЗатратПолучатель.Количественный КАК СчетДтКоличественный,
	|	ТабличнаяЧасть.СчетЗатратПолучательНУ.Количественный КАК СчетДтКоличественныйНУ,
	|
	|	ТабличнаяЧасть.Субконто1,
	|	ТабличнаяЧасть.Субконто2,
	|	ТабличнаяЧасть.Субконто3,
	|	ТабличнаяЧасть.СубконтоНУ1,
	|	ТабличнаяЧасть.СубконтоНУ2,
	|	ТабличнаяЧасть.СубконтоНУ3,
	|
	|	ТабличнаяЧасть.Субконто1 КАК СубконтоДт1,
	|	ТабличнаяЧасть.Субконто2 КАК СубконтоДт2,
	|	ТабличнаяЧасть.Субконто3 КАК СубконтоДт3,
	|	ТабличнаяЧасть.СубконтоНУ1 КАК СубконтоДтНУ1,
	|	ТабличнаяЧасть.СубконтоНУ2 КАК СубконтоДтНУ2,
	|	ТабличнаяЧасть.СубконтоНУ3 КАК СубконтоДтНУ3,
	|
	|	ТабличнаяЧасть.ОбъектСтроительства,
	|	ТабличнаяЧасть.СпособСтроительства,
	|	ТабличнаяЧасть.Проект,
	|
	|	ВЫБОР КОГДА ТабличнаяЧасть.Ссылка.ИспользоватьНаработку ТОГДА
	|		ТабличнаяЧасть.ВидВыпуска
	|	ИНАЧЕ
	|		&ВидВыпускаВыпуск
	|	КОНЕЦ КАК ВидВыпуска,
	|
	|	ВЫБОР КОГДА ТабличнаяЧасть.Заказ ССЫЛКА Документ.ЗаказПокупателя
	|				И ТабличнаяЧасть.Заказ.ВидОперации = &ВидОперацииПереработка ТОГДА
	|		&ПродукцияИзДавальческогоСырья
	|	ИНАЧЕ
	|      	&СобственнаяПродукция
	|	КОНЕЦ КАК ВариантВыпускаПродукции,
	|		
	|	(Количество * 
	|	ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|				И Коэффициент <> 0 ТОГДА 
	|		Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ
	|	) КАК Количество,
	|		
	|	(КоличествоДоделка * 
	|	ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|				И Коэффициент <> 0 ТОГДА 
	|		Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ
	|	) КАК КоличествоДоделка
	|ИЗ	
	|	Документ.ОтчетПроизводстваЗаСмену.Продукция КАК ТабличнаяЧасть
	|	
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.НаправлениеВыпуска = &НаправлениеВыпускаНаЗатраты
	|	И ТабличнаяЧасть.Ссылка.ИспользоватьНаправленияВыпуска
	|	И (ТабличнаяЧасть.ВидВыпуска = &ВидВыпускаВыпуск
	|		И ТабличнаяЧасть.Ссылка.ИспользоватьНаработку
	|		ИЛИ
	|		Не ТабличнаяЧасть.Ссылка.ИспользоватьНаработку)
	|		
	|УПОРЯДОЧИТЬ ПО
	|	ТабличнаяЧасть.НомерСтроки
	|";*/
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаДляРеквизитаЗаказ();*/
			/*ТекстЗапросаДляРеквизитаЗаказ = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	);*/
			/*ТекстЗапросаДляРеквизитаЗаказРегл = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
	);*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + " КАК Заказ,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказРегл", ТекстЗапросаДляРеквизитаЗаказРегл + " КАК ЗаказРегл,");*/
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаДляРеквизитаЗаказПолучатель();*/
			/*ТекстЗапросаДляРеквизитаЗаказПолучатель = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	);*/
			/*ТекстЗапросаДляРеквизитаЗаказПолучательРегл = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
	);*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказПолучательУпр", ТекстЗапросаДляРеквизитаЗаказПолучатель + " КАК ЗаказПолучатель,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказПолучательРегл", ТекстЗапросаДляРеквизитаЗаказПолучательРегл + " КАК ЗаказПолучательРегл,");*/
			return null;
		}
		// СформироватьТекстЗапросаПоВыпускуПродукцииНаЗатратыОтчетПроизводстваЗаСмену()
		// Формирует текст запроса по табличной части "Направления списания" документа "Отчет производства за смену".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоВыпускуПродукцииНаЗатратыСписокОтчетПроизводстваЗаСмену(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка.Организация КАК Организация,
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ТабличнаяЧастьПродукция.НомерСтроки,
	|	ТабличнаяЧастьПродукция.НоменклатурнаяГруппа,
	|	ТабличнаяЧастьПродукция.Номенклатура,
	|	ТабличнаяЧастьПродукция.Номенклатура.Услуга КАК Услуга,
	|	ТабличнаяЧастьПродукция.Номенклатура.ВестиУчетПоСериямВНЗП КАК ВестиУчетПоСериямВНЗП,
	|	ТабличнаяЧастьПродукция.Номенклатура.ВестиОперативныйУчетОстатковНЗП КАК ВестиОперативныйУчетОстатковНЗП,
	|	ТабличнаяЧастьПродукция.ХарактеристикаНоменклатуры,
	|	ТабличнаяЧастьПродукция.СерияНоменклатуры,
	|	ТабличнаяЧастьПродукция.Спецификация,
	|	ТабличнаяЧастьПродукция.СчетЗатрат,
	|	ТабличнаяЧастьПродукция.СчетЗатратНУ,
	|	
	|	ТабличнаяЧастьПродукция.Номенклатура КАК Затрата,
	|	ТабличнаяЧастьПродукция.ХарактеристикаНоменклатуры КАК ХарактеристикаЗатраты,
	|	ТабличнаяЧастьПродукция.СерияНоменклатуры КАК СерияЗатраты,
	|	Неопределено КАК СпособРаспределенияЗатрат,
	|
	|	ТабличнаяЧастьПродукция.КонечнаяПродукция,
	|	ТабличнаяЧастьПродукция.ЗаказВыпуска,	
	|	
	|	//ТекстЗапросаЗаказУпр
	|	//ТекстЗапросаЗаказРегл
	|
	|	ТабличнаяЧастьПродукция.Номенклатура КАК Продукция,
	|	ТабличнаяЧастьПродукция.ХарактеристикаНоменклатуры КАК ХарактеристикаПродукции,
	|	ТабличнаяЧастьПродукция.СерияНоменклатуры КАК СерияПродукции,
	|
	|	ТабличнаяЧасть.СтатьяЗатрат КАК СтатьяЗатрат,
	|	ТабличнаяЧасть.СтатьяЗатрат.ХарактерЗатрат КАК ХарактерЗатрат,
	|	ТабличнаяЧасть.Ссылка КАК ДокументВыпуска,
	|	ТабличнаяЧасть.Подразделение КАК ПодразделениеПолучатель,
	|	ТабличнаяЧасть.ПодразделениеОрганизации КАК ПодразделениеОрганизацииПолучатель,
	|	ТабличнаяЧасть.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаПолучатель,
	|	ТабличнаяЧасть.СтатьяЗатрат КАК СтатьяЗатратПолучатель,
	|	ТабличнаяЧасть.СтатьяЗатрат.ВидЗатрат КАК ВидЗатрат,
	|	ТабличнаяЧасть.СтатьяЗатрат.ХарактерЗатрат КАК ХарактерЗатратПолучатель,
	|	ТабличнаяЧасть.СтатьяЗатрат.СтатусМатериальныхЗатрат КАК СтатусМатериальныхЗатрат,
	|	ТабличнаяЧасть.СтатьяЗатрат.ВидРасходовНУ КАК ВидРасходовНУ,
	|	
	|	//ТекстЗапросаЗаказПолучательУпр
	|	//ТекстЗапросаЗаказПолучательРегл
	|		
	|	ТабличнаяЧасть.Продукция КАК ПродукцияПолучатель,
	|	ТабличнаяЧасть.ХарактеристикаПродукции КАК ХарактеристикаПродукцииПолучатель,
	|	ТабличнаяЧасть.СерияПродукции КАК СерияПродукцииПолучатель,
	|		
	|	ТабличнаяЧасть.СчетЗатрат КАК СчетДт,
	|	ТабличнаяЧасть.СчетЗатратНУ КАК СчетДтНУ,
	|	ТабличнаяЧасть.СчетЗатрат.Количественный КАК СчетДтКоличественный,
	|	ТабличнаяЧасть.СчетЗатратНУ.Количественный КАК СчетДтКоличественныйНУ,
	|
	|	ТабличнаяЧасть.Субконто1,
	|	ТабличнаяЧасть.Субконто2,
	|	ТабличнаяЧасть.Субконто3,
	|	ТабличнаяЧасть.СубконтоНУ1,
	|	ТабличнаяЧасть.СубконтоНУ2,
	|	ТабличнаяЧасть.СубконтоНУ3,
	|
	|	ТабличнаяЧасть.Субконто1 КАК СубконтоДт1,
	|	ТабличнаяЧасть.Субконто2 КАК СубконтоДт2,
	|	ТабличнаяЧасть.Субконто3 КАК СубконтоДт3,
	|	ТабличнаяЧасть.СубконтоНУ1 КАК СубконтоДтНУ1,
	|	ТабличнаяЧасть.СубконтоНУ2 КАК СубконтоДтНУ2,
	|	ТабличнаяЧасть.СубконтоНУ3 КАК СубконтоДтНУ3,
	|
	|	ТабличнаяЧасть.ОбъектСтроительства,
	|	ТабличнаяЧасть.СпособСтроительства,
	|	ТабличнаяЧасть.Проект,
	|
	|	ВЫБОР КОГДА ТабличнаяЧастьПродукция.Ссылка.ИспользоватьНаработку ТОГДА
	|		ТабличнаяЧастьПродукция.ВидВыпуска
	|	ИНАЧЕ
	|		&ВидВыпускаВыпуск
	|	КОНЕЦ КАК ВидВыпуска,
	|
	|	ВЫБОР КОГДА ТабличнаяЧастьПродукция.Заказ ССЫЛКА Документ.ЗаказПокупателя
	|				И ТабличнаяЧастьПродукция.Заказ.ВидОперации = &ВидОперацииПереработка ТОГДА
	|		&ПродукцияИзДавальческогоСырья
	|	ИНАЧЕ
	|	   &СобственнаяПродукция
	|	КОНЕЦ КАК ВариантВыпускаПродукции,
	|		
	|	(ТабличнаяЧастьПродукция.Количество * 
	|	ВЫБОР КОГДА Не ТабличнаяЧастьПродукция.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|				И ТабличнаяЧастьПродукция.Коэффициент <> 0 ТОГДА 
	|		ТабличнаяЧастьПродукция.Коэффициент /ТабличнаяЧастьПродукция.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ
	|	) КАК Количество,
	|		
	|	(ТабличнаяЧастьПродукция.КоличествоДоделка * 
	|	ВЫБОР КОГДА Не ТабличнаяЧастьПродукция.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|				И ТабличнаяЧастьПродукция.Коэффициент <> 0 ТОГДА 
	|		ТабличнаяЧастьПродукция.Коэффициент /ТабличнаяЧастьПродукция.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ
	|	) КАК КоличествоДоделка,
	|	НаправленияСписанияВсего.СуммаКоэффициент,
	|	ТабличнаяЧасть.КлючСвязи,
	|	ТабличнаяЧасть.Коэффициент
	|ИЗ	
	|	Документ.ОтчетПроизводстваЗаСмену.НаправленияСписания КАК ТабличнаяЧасть
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			ТабличнаяЧасть.Ссылка КАК Ссылка,
	|			ТабличнаяЧасть.НомерСтроки,
	|			ТабличнаяЧасть.КлючСвязи,
	|			ТабличнаяЧасть.НоменклатурнаяГруппа,
	|			ТабличнаяЧасть.Заказ,
	|			ТабличнаяЧасть.Номенклатура,
	|			ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|			ТабличнаяЧасть.СерияНоменклатуры,
	|			ТабличнаяЧасть.Спецификация,
	|			ТабличнаяЧасть.СчетЗатрат,
	|			ТабличнаяЧасть.СчетЗатратНУ,
	|			ТабличнаяЧасть.ВидВыпуска,
	|			ТабличнаяЧасть.КонечнаяПродукция,
	|			ТабличнаяЧасть.ЗаказВыпуска,
	|			ТабличнаяЧасть.Коэффициент,
	|			ТабличнаяЧасть.Количество,
	|			ТабличнаяЧасть.КоличествоДоделка
	|		ИЗ
	|			Документ.ОтчетПроизводстваЗаСмену.Продукция КАК ТабличнаяЧасть
	|		ГДЕ
	|			ТабличнаяЧасть.Ссылка = &Ссылка
	|			И ТабличнаяЧасть.Ссылка.ИспользоватьНаправленияВыпуска
	|			И ТабличнаяЧасть.НаправлениеВыпуска = &НаправлениеВыпускаНаЗатратыСписок
	|			И (ТабличнаяЧасть.ВидВыпуска = &ВидВыпускаВыпуск
	|				И ТабличнаяЧасть.Ссылка.ИспользоватьНаработку
	|				ИЛИ
	|				Не ТабличнаяЧасть.Ссылка.ИспользоватьНаработку)
	|			
	|		) КАК ТабличнаяЧастьПродукция
	|	ПО
	|		ТабличнаяЧастьПродукция.КлючСвязи = ТабличнаяЧасть.КлючСвязи
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			ТабличнаяЧасть.КлючСвязи,
	|			СУММА(ТабличнаяЧасть.Коэффициент) КАК СуммаКоэффициент
	|		ИЗ
	|			Документ.ОтчетПроизводстваЗаСмену.НаправленияСписания КАК ТабличнаяЧасть
	|		ГДЕ
	|			ТабличнаяЧасть.Ссылка = &Ссылка
	|			И ТабличнаяЧасть.Коэффициент <> 0
	|			И ТабличнаяЧасть.Ссылка.ИспользоватьНаправленияВыпуска
	|		СГРУППИРОВАТЬ ПО
	|			ТабличнаяЧасть.КлючСвязи
	|			
	|		) КАК НаправленияСписанияВсего
	|	ПО
	|		НаправленияСписанияВсего.КлючСвязи = ТабличнаяЧасть.КлючСвязи
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Коэффициент <> 0
	|	И ТабличнаяЧасть.Ссылка.ИспользоватьНаправленияВыпуска
	|		
	|УПОРЯДОЧИТЬ ПО
	|	ТабличнаяЧастьПродукция.НомерСтроки
	|";*/
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаДляРеквизитаЗаказ();*/
			/*ТекстЗапросаДляРеквизитаЗаказ = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	);*/
			/*ТекстЗапросаДляРеквизитаЗаказРегл = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
	);*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказПолучательУпр", ТекстЗапросаДляРеквизитаЗаказ + " КАК ЗаказПолучатель,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказПолучательРегл", ТекстЗапросаДляРеквизитаЗаказРегл + " КАК ЗаказПолучательРегл,");*/
			/*ТекстЗапросаДляРеквизитаЗаказ = СтрЗаменить(ТекстЗапросаДляРеквизитаЗаказ, "ТабличнаяЧасть", "ТабличнаяЧастьПродукция");*/
			/*ТекстЗапросаДляРеквизитаЗаказРегл = СтрЗаменить(ТекстЗапросаДляРеквизитаЗаказРегл, "ТабличнаяЧасть", "ТабличнаяЧастьПродукция");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + " КАК Заказ,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказРегл", ТекстЗапросаДляРеквизитаЗаказРегл + " КАК ЗаказРегл,");*/
			return null;
		}
		// СформироватьТекстЗапросаПоВыпускуПродукцииНаЗатратыСписокОтчетПроизводстваЗаСмену()
		// Формирует текст запроса по табличной части "Продукция" документа "Поступление товаров из переработки".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоВыпускуПродукцииНаСкладПоступлениеТоваровИзПереработки(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка.Организация КАК Организация,
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ТабличнаяЧасть.НомерСтроки,
	|	ТабличнаяЧасть.НоменклатурнаяГруппа,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Номенклатура.ВестиПартионныйУчетПоСериям КАК ВестиПартионныйУчетПоСериям,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|	ТабличнаяЧасть.СерияНоменклатуры,
	|	ТабличнаяЧасть.Спецификация,
	|	ТабличнаяЧасть.СчетЗатрат,
	|	ТабличнаяЧасть.СчетЗатратНУ,
	|		
	|	//ТекстЗапросаЗаказУпр
	|	//ТекстЗапросаЗаказРегл
	|
	|	ТабличнаяЧасть.Номенклатура КАК Продукция,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаПродукции,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК СерияПродукции,
	|
	|	ТабличнаяЧасть.Ссылка КАК ДокументВыпуска,
	|	Неопределено КАК СтатусМатериальныхЗатрат,
	|	ТабличнаяЧасть.Ссылка.ВидПоступления КАК ВидПоступления,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Ссылка.ВидПоступления = &ВидПоступленияНаСклад Тогда
	|		ТабличнаяЧасть.Ссылка.СкладОрдер
	|	КОГДА ТабличнаяЧасть.Ссылка.ВидПоступления = &ВидПоступленияПоОрдеру Тогда
	|		ТабличнаяЧасть.Ссылка.СкладОрдер.Склад
	|	ИНАЧЕ
	|		ТабличнаяЧасть.Ссылка.СкладОрдер
	|	КОНЕЦ КАК СкладПолучатель,
	|	ТабличнаяЧасть.Ссылка.СкладОрдер КАК ПриходныйОрдер,
	|	ЕСТЬNULL(ТабличнаяЧасть.Ссылка.СкладОрдер.БезПраваПродажи, Ложь) КАК БезПраваПродажи,
	|
	|	ТабличнаяЧасть.ЗаказРезерв,
	|	ЕСТЬNULL(ТабличнаяЧасть.ЗаказРезерв.ВидЗаказа, Неопределено) КАК ВнутреннийЗаказВидЗаказа,
	|	ЕСТЬNULL(ТабличнаяЧасть.ЗаказРезерв.Заказчик, Неопределено) КАК ВнутреннийЗаказЗаказчик,
	|	ТабличнаяЧасть.ЗаказРезерв КАК ЗаказПолучатель,
	|	ТабличнаяЧасть.ЗаказРезерв КАК ЗаказПолучательРегл,
	|
	|	ТабличнаяЧасть.ЗаказРезерв.ВидОперации КАК ВидОперации,
	|	ЕСТЬNULL(
	|		ТабличнаяЧасть.ЗаказРезерв.ДоговорКонтрагента.ОбособленныйУчетТоваровПоЗаказамПокупателей,
	|		Ложь
	|	) КАК ОбособленныйУчетТоваровПоЗаказамПокупателей,
	|
	|	ТабличнаяЧасть.Качество,
	|	&СтатусПартииПродукция КАК СтатусПартии,
	|
	|	ТабличнаяЧасть.Счет КАК СчетДт,
	|	ТабличнаяЧасть.СчетНУ КАК СчетДтНУ,
	|	ТабличнаяЧасть.Счет.Количественный КАК СчетДтКоличественный,
	|	ТабличнаяЧасть.СчетНУ.Количественный КАК СчетДтКоличественныйНУ,
	|
	|	Неопределено КАК ПодразделениеПолучатель,
	|	Неопределено КАК ПодразделениеОрганизацииПолучатель,
	|	
	|	Неопределено КАК Проект,
	|	&ВидВыпускаВыпуск КАК ВидВыпуска,
	|	&ПродукцияСтороннегоПереработчика КАК ВариантВыпускаПродукции,
	|		
	|	(Количество * 
	|	ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|				И Коэффициент <> 0 ТОГДА 
	|		Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ
	|	) КАК Количество,
	|		
	|	0 КАК КоличествоДоделка
	|ИЗ	
	|	Документ.ПоступлениеТоваровИзПереработки.Продукция КАК ТабличнаяЧасть
	|		
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И Не ТабличнаяЧасть.Номенклатура.Услуга
	|		
	|УПОРЯДОЧИТЬ ПО
	|	ТабличнаяЧасть.НомерСтроки
	|";*/
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаДляРеквизитаЗаказ();*/
			/*ТекстЗапросаДляРеквизитаЗаказ = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	);*/
			/*ТекстЗапросаДляРеквизитаЗаказРегл = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
	);*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + " КАК Заказ,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказРегл", ТекстЗапросаДляРеквизитаЗаказРегл + " КАК ЗаказРегл,");*/
			return null;
		}
		// СформироватьТекстЗапросаПоВыпускуПродукцииНаСкладПоступлениеТоваровИзПереработки()
		// Формирует текст запроса для документа "Комплектация номенклатуры (сборка)".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоВыпускуПродукцииНаСкладКомплектацияНоменклатурыСборка(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Док.Организация КАК Организация,
	|	Док.Подразделение КАК Подразделение,
	|	Док.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	0 КАК НомерСтроки,
	|	Док.НоменклатурнаяГруппа,
	|	Док.Номенклатура,
	|	Док.Номенклатура.ВестиПартионныйУчетПоСериям КАК ВестиПартионныйУчетПоСериям,
	|	Док.ХарактеристикаНоменклатуры,
	|	Док.СерияНоменклатуры,
	|	Док.Спецификация,
	|	Док.СчетЗатрат,
	|	Док.СчетЗатратНУ,
	|		
	|	ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя 
	|			И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
	|			И Док.Заказ <> &ПустойЗаказНаПроизводство
	|			И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК Заказ,
	|		
	|	ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя 
	|			И Док.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		Док.Заказ
	|	КОГДА Док.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
	|			И Док.Заказ <> &ПустойЗаказНаПроизводство
	|			И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		Док.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказРегл,
	|
	|	Док.Номенклатура КАК Продукция,
	|	Док.ХарактеристикаНоменклатуры КАК ХарактеристикаПродукции,
	|	Док.СерияНоменклатуры КАК СерияПродукции,
	|
	|	Док.Ссылка КАК ДокументВыпуска,
	|	Неопределено КАК СтатусМатериальныхЗатрат,
	|	&ВидПоступленияНаСклад КАК ВидПоступления,
	|	Док.Склад КАК СкладПолучатель,
	|	Неопределено КАК ПриходныйОрдер,
	|	Ложь КАК БезПраваПродажи,
	|	Док.ЗаказРезерв,
	|	ЕСТЬNULL(Док.ЗаказРезерв.ВидЗаказа, Неопределено) КАК ВнутреннийЗаказВидЗаказа,
	|	ЕСТЬNULL(Док.ЗаказРезерв.Заказчик, Неопределено) КАК ВнутреннийЗаказЗаказчик,
	|	Док.ЗаказРезерв КАК ЗаказПолучатель,
	|	Док.ЗаказРезерв КАК ЗаказПолучательРегл,
	|
	|	Док.ЗаказРезерв.ВидОперации КАК ВидОперации,
	|	ЕСТЬNULL(
	|		Док.ЗаказРезерв.ДоговорКонтрагента.ОбособленныйУчетТоваровПоЗаказамПокупателей,
	|		Ложь
	|	) КАК ОбособленныйУчетТоваровПоЗаказамПокупателей,
	|
	|	&КачествоНовый КАК Качество,
	|	Док.СтатусПартии,
	|
	|	Док.СчетУчетаБУ КАК СчетДт,
	|	Док.СчетУчетаНУ КАК СчетДтНУ,
	|	Док.СчетУчетаБУ.Количественный КАК СчетДтКоличественный,
	|	Док.СчетУчетаНУ.Количественный КАК СчетДтКоличественныйНУ,
	|
	|	Неопределено КАК ПодразделениеПолучатель,
	|	Неопределено КАК ПодразделениеОрганизацииПолучатель,
	|	
	|	Неопределено КАК Проект,
	|	&ВидВыпускаВыпуск КАК ВидВыпуска,
	|
	|	ВЫБОР КОГДА Док.Заказ ССЫЛКА Документ.ЗаказПокупателя
	|				И Док.Заказ.ВидОперации = &ВидОперацииПереработка ТОГДА
	|		&ПродукцияИзДавальческогоСырья
	|	КОГДА Док.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.ПоступлениеОтПереработчика) ТОГДА
	|		&ПродукцияСтороннегоПереработчика
	|	ИНАЧЕ
	|      	&СобственнаяПродукция
	|	КОНЕЦ КАК ВариантВыпускаПродукции,
	|		
	|	(Количество * 
	|	ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|				И Коэффициент <> 0 ТОГДА 
	|		Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ
	|	) КАК Количество,
	|		
	|	0 КАК КоличествоДоделка
	|ИЗ	
	|	Документ.КомплектацияНоменклатуры КАК Док
	|		
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|	И Не Док.Номенклатура.Услуга
	|		
	|";*/
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаДляРеквизитаЗаказ();*/
			/*ТекстЗапросаДляРеквизитаЗаказ = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	);*/
			/*ТекстЗапросаДляРеквизитаЗаказРегл = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
	);*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + " КАК Заказ,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказРегл", ТекстЗапросаДляРеквизитаЗаказРегл + " КАК ЗаказРегл,");*/
			return null;
		}
		// СформироватьТекстЗапросаПоВыпускуПродукцииНаСкладКомплектацияНоменклатурыСборка()
		// Формирует текст запроса для документа "Комплектация номенклатуры (разборка)".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоВыпускуПродукцииНаСкладКомплектацияНоменклатурыРазборка(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка.Организация КАК Организация,
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ТабличнаяЧасть.НомерСтроки,
	|	ТабличнаяЧасть.Ссылка.НоменклатурнаяГруппа,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Номенклатура.ВестиПартионныйУчетПоСериям КАК ВестиПартионныйУчетПоСериям,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|	ТабличнаяЧасть.СерияНоменклатуры,
	|	ТабличнаяЧасть.Ссылка.Спецификация,
	|	ТабличнаяЧасть.Ссылка.СчетЗатрат,
	|	ТабличнаяЧасть.Ссылка.СчетЗатратНУ,
	|		
	|	ВЫБОР КОГДА ТабличнаяЧасть.Ссылка.Заказ ССЫЛКА Документ.ЗаказПокупателя 
	|			И ТабличнаяЧасть.Ссылка.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		ТабличнаяЧасть.Ссылка.Заказ
	|	КОГДА ТабличнаяЧасть.Ссылка.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
	|			И ТабличнаяЧасть.Ссылка.Заказ <> &ПустойЗаказНаПроизводство
	|			И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		ТабличнаяЧасть.Ссылка.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК Заказ,
	|		
	|	ВЫБОР КОГДА ТабличнаяЧасть.Ссылка.Заказ ССЫЛКА Документ.ЗаказПокупателя 
	|			И ТабличнаяЧасть.Ссылка.Заказ <> &ПустойЗаказПокупателя ТОГДА
	|		ТабличнаяЧасть.Ссылка.Заказ
	|	КОГДА ТабличнаяЧасть.Ссылка.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
	|			И ТабличнаяЧасть.Ссылка.Заказ <> &ПустойЗаказНаПроизводство
	|			И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		ТабличнаяЧасть.Ссылка.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказРегл,
	|
	|	ТабличнаяЧасть.Номенклатура КАК Продукция,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаПродукции,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК СерияПродукции,
	|
	|	ТабличнаяЧасть.Ссылка КАК ДокументВыпуска,
	|	Неопределено КАК СтатусМатериальныхЗатрат,
	|	&ВидПоступленияНаСклад КАК ВидПоступления,
	|	ТабличнаяЧасть.Ссылка.Склад КАК СкладПолучатель,
	|	Неопределено КАК ПриходныйОрдер,
	|	Ложь КАК БезПраваПродажи,
	|	ТабличнаяЧасть.Ссылка.ЗаказРезерв,
	|	ЕСТЬNULL(ТабличнаяЧасть.Ссылка.ЗаказРезерв.ВидЗаказа, Неопределено) КАК ВнутреннийЗаказВидЗаказа,
	|	ЕСТЬNULL(ТабличнаяЧасть.Ссылка.ЗаказРезерв.Заказчик, Неопределено) КАК ВнутреннийЗаказЗаказчик,
	|	ТабличнаяЧасть.Ссылка.ЗаказРезерв КАК ЗаказПолучатель,
	|	ТабличнаяЧасть.Ссылка.ЗаказРезерв КАК ЗаказПолучательРегл,
	|
	|	ТабличнаяЧасть.Ссылка.ЗаказРезерв.ВидОперации КАК ВидОперации,
	|	ЕСТЬNULL(
	|		ТабличнаяЧасть.Ссылка.ЗаказРезерв.ДоговорКонтрагента.ОбособленныйУчетТоваровПоЗаказамПокупателей,
	|		Ложь
	|	) КАК ОбособленныйУчетТоваровПоЗаказамПокупателей,
	|
	|	&КачествоНовый КАК Качество,
	|	ТабличнаяЧасть.СтатусПартии,
	|
	|	ТабличнаяЧасть.СчетУчетаБУ КАК СчетДт,
	|	ТабличнаяЧасть.СчетУчетаНУ КАК СчетДтНУ,
	|	ТабличнаяЧасть.СчетУчетаБУ.Количественный КАК СчетДтКоличественный,
	|	ТабличнаяЧасть.СчетУчетаНУ.Количественный КАК СчетДтКоличественныйНУ,
	|
	|	Неопределено КАК ПодразделениеПолучатель,
	|	Неопределено КАК ПодразделениеОрганизацииПолучатель,
	|	
	|	Неопределено КАК Проект,
	|	&ВидВыпускаВыпуск КАК ВидВыпуска,
	|
	|	ВЫБОР КОГДА ТабличнаяЧасть.Ссылка.Заказ ССЫЛКА Документ.ЗаказПокупателя
	|				И ТабличнаяЧасть.Ссылка.Заказ.ВидОперации = &ВидОперацииПереработка ТОГДА
	|		&ПродукцияИзДавальческогоСырья
	|	КОГДА ТабличнаяЧасть.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.ПоступлениеОтПереработчика) ТОГДА
	|		&ПродукцияСтороннегоПереработчика
	|	ИНАЧЕ
	|      	&СобственнаяПродукция
	|	КОНЕЦ КАК ВариантВыпускаПродукции,
	|		
	|	(Количество * 
	|	ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|				И Коэффициент <> 0 ТОГДА 
	|		Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ
	|	) КАК Количество,
	|		
	|	0 КАК КоличествоДоделка
	|ИЗ	
	|	Документ.КомплектацияНоменклатуры.Комплектующие КАК ТабличнаяЧасть
	|		
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И Не ТабличнаяЧасть.Номенклатура.Услуга
	|		
	|УПОРЯДОЧИТЬ ПО
	|	ТабличнаяЧасть.НомерСтроки
	|";*/
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаДляРеквизитаЗаказ();*/
			/*ТекстЗапросаДляРеквизитаЗаказ = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	);*/
			/*ТекстЗапросаДляРеквизитаЗаказРегл = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
	);*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + " КАК Заказ,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказРегл", ТекстЗапросаДляРеквизитаЗаказРегл + " КАК ЗаказРегл,");*/
			return null;
		}
		// СформироватьТекстЗапросаПоВыпускуПродукцииНаСкладКомплектацияНоменклатурыРазборка()
		// Формирует текст запроса по табличной части "Услуги" документа "Акт об оказании производственных услуг".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоВыпускуВнешниеУслугиАктОбОказанииПроизводственныхУслуг(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка.Организация КАК Организация,
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ТабличнаяЧасть.НомерСтроки,
	|	ТабличнаяЧасть.НоменклатурнаяГруппа,
	|	ТабличнаяЧасть.Номенклатура,
	|	&ПустаяХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	&ПустаяСерияНоменклатуры КАК СерияНоменклатуры,
	|	ТабличнаяЧасть.Спецификация,
	|	ТабличнаяЧасть.СчетЗатрат,
	|	ТабличнаяЧасть.СчетЗатратНУ,
	|		
	|	ВЫБОР КОГДА ТабличнаяЧасть.Ссылка.ИспользоватьЗаказы 
	|			И ТабличнаяЧасть.Ссылка.Сделка ССЫЛКА Документ.ЗаказПокупателя 
	|			И ТабличнаяЧасть.Ссылка.Сделка <> &ПустойЗаказПокупателя ТОГДА
	|		ТабличнаяЧасть.Ссылка.Сделка
	|	КОГДА ТабличнаяЧасть.Ссылка.ИспользоватьЗаказы 
	|			И ТабличнаяЧасть.ЗаказВыпуска ССЫЛКА Документ.ЗаказНаПроизводство 
	|			И ТабличнаяЧасть.ЗаказВыпуска <> &ПустойЗаказНаПроизводство
	|			И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		ТабличнаяЧасть.ЗаказВыпуска
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК Заказ,
	|		
	|	ВЫБОР КОГДА ТабличнаяЧасть.Ссылка.ИспользоватьЗаказы 
	|			И ТабличнаяЧасть.Ссылка.Сделка ССЫЛКА Документ.ЗаказПокупателя 
	|			И ТабличнаяЧасть.Ссылка.Сделка <> &ПустойЗаказПокупателя ТОГДА
	|		ТабличнаяЧасть.Ссылка.Сделка
	|	КОГДА ТабличнаяЧасть.Ссылка.ИспользоватьЗаказы 
	|			И ТабличнаяЧасть.ЗаказВыпуска ССЫЛКА Документ.ЗаказНаПроизводство 
	|			И ТабличнаяЧасть.ЗаказВыпуска <> &ПустойЗаказНаПроизводство
	|			И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		ТабличнаяЧасть.ЗаказВыпуска
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказРегл,
	|
	|	ТабличнаяЧасть.Номенклатура КАК Продукция,
	|	Неопределено КАК ХарактеристикаПродукции,
	|	Неопределено КАК СерияПродукции,
	|
	|	ТабличнаяЧасть.Ссылка КАК ДокументВыпуска,
	|	Неопределено КАК СтатусМатериальныхЗатрат,
	|	Неопределено КАК ЗаказПолучатель,
	|	Неопределено КАК ЗаказПолучательРегл,
	|		
	|	ТабличнаяЧасть.СчетРасходовБУ КАК СчетДт,
	|	ТабличнаяЧасть.СчетРасходовНУ КАК СчетДтНУ,
	|	ТабличнаяЧасть.СчетРасходовБУ.Количественный КАК СчетДтКоличественный,
	|	ТабличнаяЧасть.СчетРасходовНУ.Количественный КАК СчетДтКоличественныйНУ,
	|
	|	ТабличнаяЧасть.СубконтоБУ КАК СубконтоДт1,
	|	Неопределено КАК СубконтоДт2,
	|	Неопределено КАК СубконтоДт3,
	|	ТабличнаяЧасть.СубконтоНУ КАК СубконтоДтНУ1,
	|	Неопределено КАК СубконтоДтНУ2,
	|	Неопределено КАК СубконтоДтНУ3,
	|
	|	Неопределено КАК ПодразделениеПолучатель,
	|	Неопределено КАК ПодразделениеОрганизацииПолучатель,
	|
	|	&ВидВыпускаВыпуск КАК ВидВыпуска,
	|	&СобственнаяПродукция КАК ВариантВыпускаПродукции,
	|
	|	Неопределено КАК ОбъектСтроительства,
	|	ЕСТЬNULL(ПроектыНоменклатуры.Проект, &ПустойПроект) КАК Проект,
	|		
	|	(Количество * 
	|	ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|				И Коэффициент <> 0 ТОГДА 
	|		Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ
	|	) КАК Количество,
	|		
	|	(КоличествоДоделка * 
	|	ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|				И Коэффициент <> 0 ТОГДА 
	|		Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ
	|	) КАК КоличествоДоделка
	|ИЗ	
	|	Документ.АктОбОказанииПроизводственныхУслуг.Услуги КАК ТабличнаяЧасть
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.УстановкаПроектовДляНоменклатуры.СрезПоследних(&КонДата, 
	|			НоменклатураПроекта В (
	|				ВЫБРАТЬ 
	|					Номенклатура 
	|				ИЗ 
	|					Документ.АктОбОказанииПроизводственныхУслуг.Услуги 
	|				ГДЕ 
	|					Ссылка = &Ссылка
	|				)
	|		) КАК ПроектыНоменклатуры
	|	ПО 
	|		ТабличнаяЧасть.Номенклатура = ПроектыНоменклатуры.НоменклатураПроекта
	|	
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|		
	|УПОРЯДОЧИТЬ ПО
	|	ТабличнаяЧасть.НомерСтроки
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаПоВыпускуВнешниеУслугиАктОбОказанииПроизводственныхУслуг()
		// Формирует текст запроса по табличной части "Материалы" документа "Корректировка незавершенного производства".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоВыпускуПродукцииКорректировкаНЗП(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка.Организация КАК Организация,
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ТабличнаяЧасть.НомерСтроки,
	|	ТабличнаяЧасть.НоменклатурнаяГруппа,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Номенклатура.Услуга КАК Услуга,
	|	ТабличнаяЧасть.Номенклатура.ВестиУчетПоСериямВНЗП КАК ВестиУчетПоСериямВНЗП,
	|	ТабличнаяЧасть.Номенклатура.ВестиОперативныйУчетОстатковНЗП КАК ВестиОперативныйУчетОстатковНЗП,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|	ТабличнаяЧасть.СерияНоменклатуры,
	|	&ПустаяСпецификация КАК Спецификация,
	|	ТабличнаяЧасть.СчетЗатрат,
	|	ТабличнаяЧасть.СчетЗатратНУ,
	|
	|	ТабличнаяЧасть.Номенклатура КАК Затрата,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаЗатраты,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК СерияЗатраты,
	|	Неопределено КАК СпособРаспределенияЗатрат,
	|		
	|	//ТекстЗапросаЗаказУпр
	|	//ТекстЗапросаЗаказРегл
	|
	|	ТабличнаяЧасть.Номенклатура КАК Продукция,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаПродукции,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК СерияПродукции,
	|
	|	ТабличнаяЧасть.СтатьяЗатрат,
	|	ТабличнаяЧасть.СтатьяЗатрат.ХарактерЗатрат КАК ХарактерЗатрат,
	|	ТабличнаяЧасть.Ссылка КАК ДокументВыпуска,
	|	ТабличнаяЧасть.ПодразделениеПолучатель,
	|	ТабличнаяЧасть.ПодразделениеОрганизацииПолучатель,
	|	ТабличнаяЧасть.НоменклатурнаяГруппаПолучатель,
	|	ТабличнаяЧасть.СтатьяЗатратПолучатель,
	|	ТабличнаяЧасть.СтатьяЗатратПолучатель.ВидЗатрат КАК ВидЗатрат,
	|	ТабличнаяЧасть.СтатьяЗатратПолучатель.ХарактерЗатрат КАК ХарактерЗатратПолучатель,
	|	ТабличнаяЧасть.СтатьяЗатратПолучатель.СтатусМатериальныхЗатрат КАК СтатусМатериальныхЗатрат,
	|	ТабличнаяЧасть.СтатьяЗатратПолучатель.ВидРасходовНУ КАК ВидРасходовНУ,
	|	Неопределено КАК КонечнаяПродукция,
	|	Неопределено КАК ЗаказВыпуска,
	|		
	|	//ТекстЗапросаЗаказПолучательУпр
	|	//ТекстЗапросаЗаказПолучательРегл
	|		
	|	Неопределено КАК ПродукцияПолучатель,
	|	Неопределено КАК ХарактеристикаПродукцииПолучатель,
	|	Неопределено КАК СерияПродукцииПолучатель,
	|		
	|	ТабличнаяЧасть.СчетЗатратПолучатель КАК СчетДт,
	|	ТабличнаяЧасть.СчетЗатратПолучательНУ КАК СчетДтНУ,
	|	ТабличнаяЧасть.СчетЗатратПолучатель.Количественный КАК СчетДтКоличественный,
	|	ТабличнаяЧасть.СчетЗатратПолучательНУ.Количественный КАК СчетДтКоличественныйНУ,
	|
	|	Неопределено КАК Субконто1,
	|	Неопределено КАК Субконто2,
	|	Неопределено КАК Субконто3,
	|	Неопределено КАК СубконтоНУ1,
	|	Неопределено КАК СубконтоНУ2,
	|	Неопределено КАК СубконтоНУ3,
	|
	|	Неопределено КАК СубконтоДт1,
	|	Неопределено КАК СубконтоДт2,
	|	Неопределено КАК СубконтоДт3,
	|	Неопределено КАК СубконтоДтНУ1,
	|	Неопределено КАК СубконтоДтНУ2,
	|	Неопределено КАК СубконтоДтНУ3,
	|
	|	Неопределено КАК ОбъектСтроительства,
	|	Неопределено КАК СпособСтроительства,
	|	Неопределено КАК Проект,
	|
	|	&ВидВыпускаВыпуск КАК ВидВыпуска,
	|	&СобственнаяПродукция КАК ВариантВыпускаПродукции,
	|
	|	(Количество * 
	|	ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|				И Коэффициент <> 0 ТОГДА 
	|		Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ
	|	) КАК Количество,
	|	0 КАК КоличествоДоделка,
	|	Сумма КАК СтоимостьУУ,
	|	СуммаРегл КАК СтоимостьБУ,
	|	СуммаНал КАК СтоимостьНУ
	|
	|ИЗ	
	|	Документ.КорректировкаНЗП.Материалы КАК ТабличнаяЧасть
	|	
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|		
	|УПОРЯДОЧИТЬ ПО
	|	ТабличнаяЧасть.НомерСтроки
	|";*/
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаДляРеквизитаЗаказКорректировкаНЗП();*/
			/*ТекстЗапросаДляРеквизитаЗаказ = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	);*/
			/*ТекстЗапросаДляРеквизитаЗаказРегл = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
	);*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + " КАК Заказ,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказРегл", ТекстЗапросаДляРеквизитаЗаказРегл + " КАК ЗаказРегл,");*/
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаДляРеквизитаЗаказПолучательКорректировкаНЗП();*/
			/*ТекстЗапросаДляРеквизитаЗаказПолучатель = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	);*/
			/*ТекстЗапросаДляРеквизитаЗаказПолучательРегл = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
	);*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказПолучательУпр", ТекстЗапросаДляРеквизитаЗаказПолучатель + " КАК ЗаказПолучатель,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказПолучательРегл", ТекстЗапросаДляРеквизитаЗаказПолучательРегл + " КАК ЗаказПолучательРегл,");*/
			return null;
		}
		// СформироватьТекстЗапросаПоВыпускуПродукцииКорректировкаНЗП()
		// Формирует текст запроса по табличной части "Материалы" документа "Оприходование незавершенного производства".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоВыпускуПродукцииОприходованиеНЗП(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка.Организация КАК Организация,
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ТабличнаяЧасть.НомерСтроки,
	|	ТабличнаяЧасть.НоменклатурнаяГруппа,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Номенклатура.Услуга КАК Услуга,
	|	ТабличнаяЧасть.Номенклатура.ВестиУчетПоСериямВНЗП КАК ВестиУчетПоСериямВНЗП,
	|	ТабличнаяЧасть.Номенклатура.ВестиОперативныйУчетОстатковНЗП КАК ВестиОперативныйУчетОстатковНЗП,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|	ТабличнаяЧасть.СерияНоменклатуры,
	|	&ПустаяСпецификация КАК Спецификация,
	|	ТабличнаяЧасть.СчетЗатрат,
	|	ТабличнаяЧасть.СчетЗатратНУ,
	|
	|	ТабличнаяЧасть.Номенклатура КАК Затрата,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаЗатраты,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК СерияЗатраты,
	|	Неопределено КАК СпособРаспределенияЗатрат,
	|		
	|	//ТекстЗапросаЗаказУпр
	|	//ТекстЗапросаЗаказРегл
	|
	|	ТабличнаяЧасть.Номенклатура КАК Продукция,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаПродукции,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК СерияПродукции,
	|
	|	ТабличнаяЧасть.СтатьяЗатрат,
	|	ТабличнаяЧасть.СтатьяЗатрат.ХарактерЗатрат КАК ХарактерЗатрат,
	|	ТабличнаяЧасть.Ссылка КАК ДокументВыпуска,
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК ПодразделениеПолучатель,
	|	ТабличнаяЧасть.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизацииПолучатель,
	|	ТабличнаяЧасть.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаПолучатель,
	|	ТабличнаяЧасть.СтатьяЗатрат КАК СтатьяЗатратПолучатель,
	|	ТабличнаяЧасть.СтатьяЗатрат.ВидЗатрат КАК ВидЗатрат,
	|	ТабличнаяЧасть.СтатьяЗатрат.ХарактерЗатрат КАК ХарактерЗатратПолучатель,
	|	ТабличнаяЧасть.СтатьяЗатрат.СтатусМатериальныхЗатрат КАК СтатусМатериальныхЗатрат,
	|	ТабличнаяЧасть.СтатьяЗатрат.ВидРасходовНУ КАК ВидРасходовНУ,
	|	Неопределено КАК КонечнаяПродукция,
	|	Неопределено КАК ЗаказВыпуска,
	|		
	|	//ТекстЗапросаЗаказПолучательУпр
	|	//ТекстЗапросаЗаказПолучательРегл
	|		
	|	Неопределено КАК ПродукцияПолучатель,
	|	Неопределено КАК ХарактеристикаПродукцииПолучатель,
	|	Неопределено КАК СерияПродукцииПолучатель,
	|		
	|	ТабличнаяЧасть.СчетЗатрат КАК СчетДт,
	|	ТабличнаяЧасть.СчетЗатратНУ КАК СчетДтНУ,
	|	ТабличнаяЧасть.СчетЗатрат.Количественный КАК СчетДтКоличественный,
	|	ТабличнаяЧасть.СчетЗатратНУ.Количественный КАК СчетДтКоличественныйНУ,
	|
	|	ТабличнаяЧасть.Ссылка.СчетКт КАК СчетКт,
	|	ТабличнаяЧасть.Ссылка.СчетКтНУ КАК СчетКтНУ,
	|
	|	ТабличнаяЧасть.Ссылка.СубконтоКт1 КАК Субконто1,
	|	ТабличнаяЧасть.Ссылка.СубконтоКт2 КАК Субконто2,
	|	ТабличнаяЧасть.Ссылка.СубконтоКт3 КАК Субконто3,
	|	ТабличнаяЧасть.Ссылка.СубконтоКтНУ1 КАК СубконтоНУ1,
	|	ТабличнаяЧасть.Ссылка.СубконтоКтНУ1 КАК СубконтоНУ2,
	|	ТабличнаяЧасть.Ссылка.СубконтоКтНУ1 КАК СубконтоНУ3,
	|
	|	ТабличнаяЧасть.Ссылка.СубконтоКт1 КАК СубконтоДт1,
	|	ТабличнаяЧасть.Ссылка.СубконтоКт2 КАК СубконтоДт2,
	|	ТабличнаяЧасть.Ссылка.СубконтоКт3 КАК СубконтоДт3,
	|	ТабличнаяЧасть.Ссылка.СубконтоКтНУ1 КАК СубконтоДтНУ1,
	|	ТабличнаяЧасть.Ссылка.СубконтоКтНУ1 КАК СубконтоДтНУ2,
	|	ТабличнаяЧасть.Ссылка.СубконтоКтНУ1 КАК СубконтоДтНУ3,
	|
	|	Неопределено КАК ОбъектСтроительства,
	|	Неопределено КАК СпособСтроительства,
	|	Неопределено КАК Проект,
	|
	|	&ВидВыпускаВыпуск КАК ВидВыпуска,
	|	&СобственнаяПродукция КАК ВариантВыпускаПродукции,
	|
	|	(Количество * 
	|	ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|				И Коэффициент <> 0 ТОГДА 
	|		Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ
	|	) КАК Количество,
	|	0 КАК КоличествоДоделка,
	|	Сумма КАК СтоимостьУУ,
	|	СуммаРегл КАК СтоимостьБУ,
	|	СуммаРегл КАК СтоимостьНУ
	|ИЗ	
	|	Документ.ОприходованиеНЗП.Материалы КАК ТабличнаяЧасть
	|	
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|		
	|УПОРЯДОЧИТЬ ПО
	|	ТабличнаяЧасть.НомерСтроки
	|";*/
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаДляРеквизитаЗаказКорректировкаНЗП();*/
			/*ТекстЗапросаДляРеквизитаЗаказ = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	);*/
			/*ТекстЗапросаДляРеквизитаЗаказРегл = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
	);*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + " КАК Заказ,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказРегл", ТекстЗапросаДляРеквизитаЗаказРегл + " КАК ЗаказРегл,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказПолучательУпр", ТекстЗапросаДляРеквизитаЗаказ + " КАК ЗаказПолучатель,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказПолучательРегл", ТекстЗапросаДляРеквизитаЗаказРегл + " КАК ЗаказПолучательРегл,");*/
			return null;
		}
		// СформироватьТекстЗапросаПоВыпускуПродукцииОприходованиеНЗП()
		// Формирует текст запроса по табличной части "Материалы" документа "Списание незавершенного производства".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоВыпускуПродукцииСписаниеНЗП(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка.Организация КАК Организация,
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ТабличнаяЧасть.НомерСтроки,
	|	ТабличнаяЧасть.НоменклатурнаяГруппа,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Номенклатура.Услуга КАК Услуга,
	|	ТабличнаяЧасть.Номенклатура.ВестиУчетПоСериямВНЗП КАК ВестиУчетПоСериямВНЗП,
	|	ТабличнаяЧасть.Номенклатура.ВестиОперативныйУчетОстатковНЗП КАК ВестиОперативныйУчетОстатковНЗП,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|	ТабличнаяЧасть.СерияНоменклатуры,
	|	&ПустаяСпецификация КАК Спецификация,
	|	ТабличнаяЧасть.СчетЗатрат,
	|	ТабличнаяЧасть.СчетЗатратНУ,
	|
	|	ТабличнаяЧасть.Номенклатура КАК Затрата,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаЗатраты,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК СерияЗатраты,
	|	Неопределено КАК СпособРаспределенияЗатрат,
	|		
	|	//ТекстЗапросаЗаказУпр
	|	//ТекстЗапросаЗаказРегл
	|
	|	ТабличнаяЧасть.Номенклатура КАК Продукция,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаПродукции,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК СерияПродукции,
	|
	|	ТабличнаяЧасть.СтатьяЗатрат,
	|	ТабличнаяЧасть.СтатьяЗатрат.ХарактерЗатрат КАК ХарактерЗатрат,
	|	ТабличнаяЧасть.Ссылка КАК ДокументВыпуска,
	|	Неопределено КАК ПодразделениеПолучатель,
	|	Неопределено КАК ПодразделениеОрганизацииПолучатель,
	|	Неопределено КАК НоменклатурнаяГруппаПолучатель,
	|	Неопределено КАК СтатьяЗатратПолучатель,
	|
	|	ТабличнаяЧасть.СтатьяЗатрат.ВидЗатрат КАК ВидЗатрат,
	|	Неопределено КАК ХарактерЗатратПолучатель,
	|	ТабличнаяЧасть.СтатьяЗатрат.СтатусМатериальныхЗатрат КАК СтатусМатериальныхЗатрат,
	|	Неопределено КАК ВидРасходовНУ,
	|	Неопределено КАК КонечнаяПродукция,
	|	Неопределено КАК ЗаказВыпуска,
	|		
	|	Неопределено КАК ЗаказПолучатель,
	|	Неопределено КАК ЗаказПолучательРегл,
	|		
	|	Неопределено КАК ПродукцияПолучатель,
	|	Неопределено КАК ХарактеристикаПродукцииПолучатель,
	|	Неопределено КАК СерияПродукцииПолучатель,
	|		
	|	ТабличнаяЧасть.Ссылка.СчетДт КАК СчетДт,
	|	ТабличнаяЧасть.Ссылка.СчетДтНУ КАК СчетДтНУ,
	|	ТабличнаяЧасть.Ссылка.СчетДт.Количественный КАК СчетДтКоличественный,
	|	ТабличнаяЧасть.Ссылка.СчетДтНУ.Количественный КАК СчетДтКоличественныйНУ,
	|
	|	ТабличнаяЧасть.СчетЗатрат КАК СчетКт,
	|	ТабличнаяЧасть.СчетЗатратНУ КАК СчетКтНУ,
	|
	|	ТабличнаяЧасть.Ссылка.СубконтоДт1 КАК Субконто1,
	|	ТабличнаяЧасть.Ссылка.СубконтоДт2 КАК Субконто2,
	|	ТабличнаяЧасть.Ссылка.СубконтоДт3 КАК Субконто3,
	|	ТабличнаяЧасть.Ссылка.СубконтоДтНУ1 КАК СубконтоНУ1,
	|	ТабличнаяЧасть.Ссылка.СубконтоДтНУ2 КАК СубконтоНУ2,
	|	ТабличнаяЧасть.Ссылка.СубконтоДтНУ3 КАК СубконтоНУ3,
	|
	|	ТабличнаяЧасть.Ссылка.СубконтоДт1 КАК СубконтоДт1,
	|	ТабличнаяЧасть.Ссылка.СубконтоДт2 КАК СубконтоДт2,
	|	ТабличнаяЧасть.Ссылка.СубконтоДт3 КАК СубконтоДт3,
	|	ТабличнаяЧасть.Ссылка.СубконтоДтНУ1 КАК СубконтоДтНУ1,
	|	ТабличнаяЧасть.Ссылка.СубконтоДтНУ2 КАК СубконтоДтНУ2,
	|	ТабличнаяЧасть.Ссылка.СубконтоДтНУ3 КАК СубконтоДтНУ3,
	|
	|	Неопределено КАК ОбъектСтроительства,
	|	Неопределено КАК СпособСтроительства,
	|	Неопределено КАК Проект,
	|
	|	&ВидВыпускаВыпуск КАК ВидВыпуска,
	|	&СобственнаяПродукция КАК ВариантВыпускаПродукции,
	|
	|	(Количество * 
	|	ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|				И Коэффициент <> 0 ТОГДА 
	|		Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ
	|	) КАК Количество,
	|	0 КАК КоличествоДоделка,
	|	Сумма КАК СтоимостьУУ,
	|	СуммаРегл КАК СтоимостьБУ,
	|	СуммаРегл КАК СтоимостьНУ
	|ИЗ	
	|	Документ.СписаниеНЗП.Материалы КАК ТабличнаяЧасть
	|	
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|		
	|УПОРЯДОЧИТЬ ПО
	|	ТабличнаяЧасть.НомерСтроки
	|";*/
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаДляРеквизитаЗаказКорректировкаНЗП();*/
			/*ТекстЗапросаДляРеквизитаЗаказ = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	);*/
			/*ТекстЗапросаДляРеквизитаЗаказРегл = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
	);*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + " КАК Заказ,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказРегл", ТекстЗапросаДляРеквизитаЗаказРегл + " КАК ЗаказРегл,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказПолучательУпр", ТекстЗапросаДляРеквизитаЗаказ + " КАК ЗаказПолучатель,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказПолучательРегл", ТекстЗапросаДляРеквизитаЗаказРегл + " КАК ЗаказПолучательРегл,");*/
			return null;
		}
		// СформироватьТекстЗапросаПоВыпускуПродукцииСписаниеНЗП()
		// Формирует текст запроса по табличной части "Материалы" документа "Оприходование материалов из производства".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоВыпускуПродукцииОприходованиеМатериалов(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка.Организация КАК Организация,
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ТабличнаяЧасть.НомерСтроки,
	|	ТабличнаяЧасть.НоменклатурнаяГруппа,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Номенклатура.ВестиПартионныйУчетПоСериям КАК ВестиПартионныйУчетПоСериям,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|	ТабличнаяЧасть.СерияНоменклатуры,
	|	ЗНАЧЕНИЕ(Справочник.СпецификацииНоменклатуры.ПустаяСсылка) КАК Спецификация,
	|	ТабличнаяЧасть.СчетЗатрат,
	|	ТабличнаяЧасть.СчетЗатратНУ,
	|		
	|	//ТекстЗапросаЗаказУпр
	|	//ТекстЗапросаЗаказРегл
	|
	|	ТабличнаяЧасть.Номенклатура КАК Продукция,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаПродукции,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК СерияПродукции,
	|
	|	ТабличнаяЧасть.СтатьяЗатрат,
	|	ТабличнаяЧасть.СтатьяЗатрат.ХарактерЗатрат КАК ХарактерЗатрат,
	|	ТабличнаяЧасть.СтатьяЗатрат.ВидЗатрат КАК ВидЗатрат,
	|	ТабличнаяЧасть.Ссылка КАК ДокументВыпуска,
	|
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК ПодразделениеПолучатель,
	|	ТабличнаяЧасть.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизацииПолучатель,
	|	ТабличнаяЧасть.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаПолучатель,
	|	ТабличнаяЧасть.СтатьяЗатрат КАК СтатьяЗатратПолучатель,
	|	ТабличнаяЧасть.СтатьяЗатрат.ХарактерЗатрат КАК ХарактерЗатратПолучатель,
	|	ТабличнаяЧасть.СтатьяЗатрат.СтатусМатериальныхЗатрат КАК СтатусМатериальныхЗатрат,
	|	Неопределено КАК СпособРаспределенияЗатрат,
	|		
	|	&ВидПоступленияНаСклад КАК ВидПоступления,
	|	ТабличнаяЧасть.Ссылка.Склад КАК СкладПолучатель,
	|	Неопределено КАК ПриходныйОрдер,
	|	Ложь КАК БезПраваПродажи,
	|	ТабличнаяЧасть.ЗаказРезерв,
	|	ЕСТЬNULL(ТабличнаяЧасть.ЗаказРезерв.ВидЗаказа, Неопределено) КАК ВнутреннийЗаказВидЗаказа,
	|	ЕСТЬNULL(ТабличнаяЧасть.ЗаказРезерв.Заказчик, Неопределено) КАК ВнутреннийЗаказЗаказчик,
	|	ТабличнаяЧасть.ЗаказРезерв КАК ЗаказПолучатель,
	|	ТабличнаяЧасть.ЗаказРезерв КАК ЗаказПолучательРегл,
	|	ЕСТЬNULL(ТабличнаяЧасть.ЗаказРезерв.Контрагент, Неопределено) КАК Контрагент,
	|
	|	ТабличнаяЧасть.ЗаказРезерв.ВидОперации КАК ВидОперации,
	|	ЕСТЬNULL(
	|		ТабличнаяЧасть.ЗаказРезерв.ДоговорКонтрагента.ОбособленныйУчетТоваровПоЗаказамПокупателей,
	|		Ложь
	|	) КАК ОбособленныйУчетТоваровПоЗаказамПокупателей,
	|
	|	ТабличнаяЧасть.Качество,
	|	ТабличнаяЧасть.СтатусВозврата КАК СтатусПартии,
	|
	|	ТабличнаяЧасть.Счет КАК СчетДт,
	|	ТабличнаяЧасть.СчетНУ КАК СчетДтНУ,
	|	ТабличнаяЧасть.Счет.Количественный КАК СчетДтКоличественный,
	|	ТабличнаяЧасть.СчетНУ.Количественный КАК СчетДтКоличественныйНУ,
	|
	|	Неопределено КАК Проект,
	|	&ВидВыпускаВыпуск КАК ВидВыпуска,
	|	Неопределено КАК ВариантВыпускаПродукции,
	|	ТабличнаяЧасть.ТипСтоимости,
	|		
	|	(Количество * 
	|	ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|				И Коэффициент <> 0 ТОГДА 
	|		Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ
	|	) КАК Количество,
	|	0 КАК КоличествоДоделка,
	|	Сумма КАК СтоимостьУУ,
	|	СуммаРегл КАК СтоимостьБУ,
	|	СуммаРегл КАК СтоимостьНУ
	|ИЗ	
	|	Документ.ОприходованиеМатериаловИзПроизводства.Материалы КАК ТабличнаяЧасть
	|		
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И Не ТабличнаяЧасть.Номенклатура.Услуга
	|	И ТабличнаяЧасть.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОприходованиеМатериаловИзПроизводства.Материалы)
	|		
	|УПОРЯДОЧИТЬ ПО
	|	ТабличнаяЧасть.НомерСтроки
	|";*/
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаДляРеквизитаЗаказКорректировкаНЗП();*/
			/*ТекстЗапросаДляРеквизитаЗаказ = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	);*/
			/*ТекстЗапросаДляРеквизитаЗаказРегл = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
	);*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + " КАК Заказ,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказРегл", ТекстЗапросаДляРеквизитаЗаказРегл + " КАК ЗаказРегл,");*/
			return null;
		}
		// СформироватьТекстЗапросаПоВыпускуПродукцииОприходованиеМатериалов()
		// Формирует текст запроса по табличной части "Материалы" документа "Оприходование материалов из производства".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоВыпускуПродукцииОприходованиеМатериаловЗатраты(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка.Организация КАК Организация,
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ТабличнаяЧасть.НомерСтроки,
	|	ТабличнаяЧасть.НоменклатурнаяГруппа,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Номенклатура.Услуга КАК Услуга,
	|	ТабличнаяЧасть.Номенклатура.ВестиУчетПоСериямВНЗП КАК ВестиУчетПоСериямВНЗП,
	|	ТабличнаяЧасть.Номенклатура.ВестиОперативныйУчетОстатковНЗП КАК ВестиОперативныйУчетОстатковНЗП,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|	ТабличнаяЧасть.СерияНоменклатуры,
	|	ЗНАЧЕНИЕ(Справочник.СпецификацииНоменклатуры.ПустаяСсылка) КАК Спецификация,
	|	ТабличнаяЧасть.СчетЗатрат,
	|	ТабличнаяЧасть.СчетЗатратНУ,
	|		
	|	//ТекстЗапросаЗаказУпр
	|	//ТекстЗапросаЗаказРегл
	|
	|	ТабличнаяЧасть.Номенклатура КАК Продукция,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаПродукции,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК СерияПродукции,
	|
	|	ТабличнаяЧасть.СтатьяЗатрат,
	|	ТабличнаяЧасть.СтатьяЗатрат.ХарактерЗатрат КАК ХарактерЗатрат,
	|	ТабличнаяЧасть.СтатьяЗатрат.ВидЗатрат КАК ВидЗатрат,
	|	ТабличнаяЧасть.Ссылка КАК ДокументВыпуска,
	|
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК ПодразделениеПолучатель,
	|	ТабличнаяЧасть.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизацииПолучатель,
	|	ТабличнаяЧасть.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаПолучатель,
	|	ТабличнаяЧасть.СтатьяЗатрат КАК СтатьяЗатратПолучатель,
	|	ТабличнаяЧасть.СтатьяЗатрат.ХарактерЗатрат КАК ХарактерЗатратПолучатель,
	|	ТабличнаяЧасть.СтатьяЗатрат.СтатусМатериальныхЗатрат КАК СтатусМатериальныхЗатрат,
	|	ТабличнаяЧасть.СтатьяЗатрат.ВидРасходовНУ КАК ВидРасходовНУ,
	|	Неопределено КАК СпособРаспределенияЗатрат,
	|		
	|	ТабличнаяЧасть.Продукция КАК ПродукцияПолучатель,
	|	ТабличнаяЧасть.ХарактеристикаПродукции КАК ХарактеристикаПродукцииПолучатель,
	|	ТабличнаяЧасть.СерияПродукции КАК СерияПродукцииПолучатель,
	|	Неопределено КАК КонечнаяПродукция,
	|	Неопределено КАК ЗаказВыпуска,
	|		
	|	//ТекстЗапросаЗаказПолучательУпр
	|	//ТекстЗапросаЗаказПолучательРегл
	|
	|	ЕСТЬNULL(ТабличнаяЧасть.ЗаказРезерв.ВидЗаказа, Неопределено) КАК ВнутреннийЗаказВидЗаказа,
	|	ЕСТЬNULL(ТабличнаяЧасть.ЗаказРезерв.Заказчик, Неопределено) КАК ВнутреннийЗаказЗаказчик,
	|
	|	ТабличнаяЧасть.СчетЗатрат КАК СчетДт,
	|	ТабличнаяЧасть.СчетЗатратНУ КАК СчетДтНУ,
	|	ТабличнаяЧасть.СчетЗатрат.Количественный КАК СчетДтКоличественный,
	|	ТабличнаяЧасть.СчетЗатратНУ.Количественный КАК СчетДтКоличественныйНУ,
	|
	|	Неопределено КАК Субконто1,
	|	Неопределено КАК Субконто2,
	|	Неопределено КАК Субконто3,
	|	Неопределено КАК СубконтоНУ1,
	|	Неопределено КАК СубконтоНУ2,
	|	Неопределено КАК СубконтоНУ3,
	|
	|	Неопределено КАК СубконтоДт1,
	|	Неопределено КАК СубконтоДт2,
	|	Неопределено КАК СубконтоДт3,
	|	Неопределено КАК СубконтоДтНУ1,
	|	Неопределено КАК СубконтоДтНУ2,
	|	Неопределено КАК СубконтоДтНУ3,
	|
	|	ТабличнаяЧасть.ОбъектСтроительства,
	|	ТабличнаяЧасть.СпособСтроительства,
	|	ТабличнаяЧасть.Проект,
	|
	|	&ВидВыпускаВыпуск КАК ВидВыпуска,
	|	Неопределено КАК ВариантВыпускаПродукции,
	|	ТабличнаяЧасть.ТипСтоимости,
	|		
	|	(Количество * 
	|	ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|				И Коэффициент <> 0 ТОГДА 
	|		Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ
	|	) КАК Количество,
	|	0 КАК КоличествоДоделка,
	|	Сумма КАК СтоимостьУУ,
	|	СуммаРегл КАК СтоимостьБУ,
	|	СуммаРегл КАК СтоимостьНУ
	|ИЗ	
	|	Документ.ОприходованиеМатериаловИзПроизводства.Материалы КАК ТабличнаяЧасть
	|		
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И Не ТабличнаяЧасть.Номенклатура.Услуга
	|	И ТабличнаяЧасть.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОприходованиеМатериаловИзПроизводства.Материалы)
	|	И ТабличнаяЧасть.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ВидыНормативнойСтоимостиПроизводства.Фиксированная)
	|		
	|УПОРЯДОЧИТЬ ПО
	|	ТабличнаяЧасть.НомерСтроки
	|";*/
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаДляРеквизитаЗаказКорректировкаНЗП();*/
			/*ТекстЗапросаДляРеквизитаЗаказ = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	);*/
			/*ТекстЗапросаДляРеквизитаЗаказРегл = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
	);*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + " КАК Заказ,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказРегл", ТекстЗапросаДляРеквизитаЗаказРегл + " КАК ЗаказРегл,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказПолучательУпр", ТекстЗапросаДляРеквизитаЗаказ + " КАК ЗаказПолучатель,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказПолучательРегл", ТекстЗапросаДляРеквизитаЗаказРегл + " КАК ЗаказПолучательРегл,");*/
			return null;
		}
		// СформироватьТекстЗапросаПоВыпускуПродукцииОприходованиеМатериаловЗатраты()
		// Функция формирует запрос по выпуску продукции.
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	ТекстЗапросаПоВыпускуПродукции - Строка - Текст запроса по табличной части документа
		//	УчетнаяПолитика - Структура - Учетная политика по управленческому учету
		//	УчетнаяПолитикаБух - Структура - Учетная политика по бухгалтерскому учету
		//
		// Возвращаемое значение:
		//	Запрос - Запрос по выпуску продукции.
		//

		public object СформироватьЗапросПоВыпускуПродукции(/*
	СтруктураШапкиДокумента,
	ТекстЗапросаПоВыпускуПродукции,
	УчетнаяПолитика,
	УчетнаяПолитикаБух
	*/)
		{
			/*Запрос = Новый Запрос;*/
			if(true/*Не ПустаяСтрока(ТекстЗапросаПоВыпускуПродукции)*/)
			{
				/*Запрос.Текст = ТекстЗапросаПоВыпускуПродукции;*/
				/*УстановитьПараметрыЗапросаПоВыпускуПродукции(
			СтруктураШапкиДокумента,
			УчетнаяПолитика,
			УчетнаяПолитикаБух,
			Запрос
			);*/
			}
			return null;
		}
		// СформироватьЗапросПоВыпускуПродукции()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ЗАПРОСОВ ПО ВОЗВРАТНЫМ ОТХОДАМ
		// Формирует текст запроса по табличной части "Возвратные отходы" документа "Отчет производства за смену".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоТабличнойЧастиВозвратныеОтходыОтчетПроизводстваЗаСмену(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	0 КАК НомерСтроки,
	|	ТабличнаяЧасть.Ссылка.Организация КАК Организация,
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|
	|	ТабличнаяЧасть.НоменклатурнаяГруппа,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Номенклатура.Услуга КАК Услуга,
	|	ТабличнаяЧасть.Номенклатура.ВестиУчетПоСериямВНЗП КАК ВестиУчетПоСериямВНЗП,
	|	ТабличнаяЧасть.Номенклатура.ВестиПартионныйУчетПоСериям КАК ВестиПартионныйУчетПоСериям,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|	ТабличнаяЧасть.СерияНоменклатуры,
	|	ТабличнаяЧасть.Спецификация,
	|	ТабличнаяЧасть.СчетЗатрат,
	|	ТабличнаяЧасть.СчетЗатратНУ,
	|
	|	ТабличнаяЧасть.Номенклатура КАК Затрата,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаЗатраты,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК СерияЗатраты,
	|	Неопределено КАК СпособРаспределенияЗатрат,
	|		
	|	//ТекстЗапросаЗаказУпр
	|	//ТекстЗапросаЗаказРегл
	|		
	|	ТабличнаяЧасть.Номенклатура КАК Продукция,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаПродукции,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК СерияПродукции,
	|
	|	ТабличнаяЧасть.Ссылка КАК ДокументВыпуска,
	|	&ВидПоступленияНаСклад КАК ВидПоступления,
	|	ТабличнаяЧасть.Ссылка.СкладОтходов КАК СкладПолучатель,
	|	Неопределено КАК ПриходныйОрдер,
	|	Ложь КАК БезПраваПродажи,
	|	ТабличнаяЧасть.ЗаказРезерв,
	|	ЕСТЬNULL(ТабличнаяЧасть.ЗаказРезерв.ВидЗаказа, Неопределено) КАК ВнутреннийЗаказВидЗаказа,
	|	ЕСТЬNULL(ТабличнаяЧасть.ЗаказРезерв.Заказчик, Неопределено) КАК ВнутреннийЗаказЗаказчик,
	|	ТабличнаяЧасть.Заказ КАК ЗаказПолучатель,
	|	ТабличнаяЧасть.Заказ КАК ЗаказПолучательРегл,
	|	ЕСТЬNULL(ТабличнаяЧасть.ЗаказРезерв.Контрагент, Неопределено) КАК Контрагент,
	|
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК ПодразделениеПолучатель,
	|	ТабличнаяЧасть.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизацииПолучатель,
	|
	|	ТабличнаяЧасть.ЗаказРезерв.ВидОперации КАК ВидОперации,
	|	ЕСТЬNULL(
	|		ТабличнаяЧасть.ЗаказРезерв.ДоговорКонтрагента.ОбособленныйУчетТоваровПоЗаказамПокупателей,
	|		Ложь
	|	) КАК ОбособленныйУчетТоваровПоЗаказамПокупателей,
	|
	|	&КачествоНовый КАК Качество,
	|	ТабличнаяЧасть.СтатусПартии,
	|
	|	ТабличнаяЧасть.Счет КАК СчетДт,
	|	ТабличнаяЧасть.СчетНУ КАК СчетДтНУ,
	|	ТабличнаяЧасть.Счет.Количественный КАК СчетДтКоличественный,
	|	ТабличнаяЧасть.СчетНУ.Количественный КАК СчетДтКоличественныйНУ,
	|
	|	ТабличнаяЧасть.СтатьяЗатрат КАК СтатьяЗатратПолучатель,
	|	ТабличнаяЧасть.СтатьяЗатрат.ВидЗатрат КАК ВидЗатрат,
	|	ТабличнаяЧасть.СтатьяЗатрат.ХарактерЗатрат КАК ХарактерЗатрат,
	|	ТабличнаяЧасть.СтатьяЗатрат.СтатусМатериальныхЗатрат КАК СтатусМатериальныхЗатрат,
	|	ТабличнаяЧасть.СтатьяЗатрат.ВидРасходовНУ КАК ВидРасходовНУ,
	|	ТабличнаяЧасть.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаПолучатель,
	|	&ВидВыпускаВыпуск КАК ВидВыпуска,
	|
	|	Неопределено КАК ПродукцияПолучатель,
	|	Неопределено КАК ХарактеристикаПродукцииПолучатель,
	|	Неопределено КАК СерияПродукцииПолучатель,
	|	Неопределено КАК Проект,
	|
	|	ВЫБОР КОГДА ТабличнаяЧасть.Заказ ССЫЛКА Документ.ЗаказПокупателя
	|				И ТабличнаяЧасть.Заказ.ВидОперации = &ВидОперацииПереработка ТОГДА
	|		&ПродукцияИзДавальческогоСырья
	|	ИНАЧЕ
	|      	&СобственнаяПродукция
	|	КОНЕЦ КАК ВариантВыпускаПродукции,
	|		
	|	(Количество * 
	|	ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|				И Коэффициент <> 0 ТОГДА 
	|		Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ
	|	) КАК Количество,
	|	0 КАК КоличествоДоделка,
	|	ТабличнаяЧасть.Сумма КАК СтоимостьУУ,
	|	ТабличнаяЧасть.СуммаРегл КАК СтоимостьБУ,
	|	ТабличнаяЧасть.СуммаРегл КАК СтоимостьНУ
	|		
	|ИЗ	
	|	Документ.ОтчетПроизводстваЗаСмену.ВозвратныеОтходы КАК ТабличнаяЧасть
	|		
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Ссылка.ИспользоватьВозвратныеОтходы
	|		
	|УПОРЯДОЧИТЬ ПО
	|	ТабличнаяЧасть.НомерСтроки
	|";*/
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаДляРеквизитаЗаказ();*/
			/*ТекстЗапросаДляРеквизитаЗаказ = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	);*/
			/*ТекстЗапросаДляРеквизитаЗаказРегл = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
	);*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + " КАК Заказ,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказРегл", ТекстЗапросаДляРеквизитаЗаказРегл + " КАК ЗаказРегл,");*/
			return null;
		}
		// СформироватьТекстЗапросаПоТабличнойЧастиВозвратныеОтходыОтчетПроизводстваЗаСмену()
		// Формирует текст запроса по табличной части "Возвратные отходы" документа "Поступление товаров из переработки".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоТабличнойЧастиВозвратныеОтходыПоступлениеТоваровИзПереработки(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	0 КАК НомерСтроки,
	|	ТабличнаяЧасть.Ссылка.Организация КАК Организация,
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|
	|	ТабличнаяЧасть.НоменклатурнаяГруппа,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Номенклатура.Услуга КАК Услуга,
	|	ТабличнаяЧасть.Номенклатура.ВестиУчетПоСериямВНЗП КАК ВестиУчетПоСериямВНЗП,
	|	ТабличнаяЧасть.Номенклатура.ВестиПартионныйУчетПоСериям КАК ВестиПартионныйУчетПоСериям,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|	ТабличнаяЧасть.СерияНоменклатуры,
	|	ТабличнаяЧасть.Спецификация,
	|	ТабличнаяЧасть.СчетЗатрат,
	|	ТабличнаяЧасть.СчетЗатратНУ,
	|
	|	ТабличнаяЧасть.Номенклатура КАК Затрата,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаЗатраты,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК СерияЗатраты,
	|	Неопределено КАК СпособРаспределенияЗатрат,
	|		
	|	//ТекстЗапросаЗаказУпр
	|	//ТекстЗапросаЗаказРегл
	|
	|	ТабличнаяЧасть.Номенклатура КАК Продукция,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаПродукции,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК СерияПродукции,
	|		
	|	ТабличнаяЧасть.Ссылка КАК ДокументВыпуска,
	|	ТабличнаяЧасть.Ссылка.ВидПоступления КАК ВидПоступления,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Ссылка.ВидПоступления = &ВидПоступленияНаСклад Тогда
	|		ТабличнаяЧасть.Ссылка.СкладОтходов
	|	КОГДА ТабличнаяЧасть.Ссылка.ВидПоступления = &ВидПоступленияПоОрдеру Тогда
	|		ТабличнаяЧасть.Ссылка.СкладОрдер.Склад
	|	ИНАЧЕ
	|		ТабличнаяЧасть.Ссылка.СкладОтходов
	|	КОНЕЦ КАК СкладПолучатель,
	|	ТабличнаяЧасть.Ссылка.СкладОрдер КАК ПриходныйОрдер,
	|	ЕСТЬNULL(ТабличнаяЧасть.Ссылка.СкладОрдер.БезПраваПродажи, Ложь) КАК БезПраваПродажи,
	|	ТабличнаяЧасть.ЗаказРезерв,
	|	ЕСТЬNULL(ТабличнаяЧасть.ЗаказРезерв.ВидЗаказа, Неопределено) КАК ВнутреннийЗаказВидЗаказа,
	|	ЕСТЬNULL(ТабличнаяЧасть.ЗаказРезерв.Заказчик, Неопределено) КАК ВнутреннийЗаказЗаказчик,
	|	ТабличнаяЧасть.Заказ КАК ЗаказПолучатель,
	|	ТабличнаяЧасть.Заказ КАК ЗаказПолучательРегл,
	|	ЕСТЬNULL(ТабличнаяЧасть.ЗаказРезерв.Контрагент, Неопределено) КАК Контрагент,
	|
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК ПодразделениеПолучатель,
	|	ТабличнаяЧасть.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизацииПолучатель,
	|
	|	ТабличнаяЧасть.ЗаказРезерв.ВидОперации КАК ВидОперации,
	|	ЕСТЬNULL(
	|		ТабличнаяЧасть.ЗаказРезерв.ДоговорКонтрагента.ОбособленныйУчетТоваровПоЗаказамПокупателей,
	|		Ложь
	|	) КАК ОбособленныйУчетТоваровПоЗаказамПокупателей,
	|
	|	&КачествоНовый КАК Качество,
	|	ТабличнаяЧасть.СтатусПартии,
	|
	|	ТабличнаяЧасть.Счет КАК СчетДт,
	|	ТабличнаяЧасть.СчетНУ КАК СчетДтНУ,
	|	ТабличнаяЧасть.Счет.Количественный КАК СчетДтКоличественный,
	|	ТабличнаяЧасть.СчетНУ.Количественный КАК СчетДтКоличественныйНУ,
	|
	|	ТабличнаяЧасть.СтатьяЗатрат КАК СтатьяЗатратПолучатель,
	|	ТабличнаяЧасть.СтатьяЗатрат.ВидЗатрат КАК ВидЗатрат,
	|	ТабличнаяЧасть.СтатьяЗатрат.ХарактерЗатрат КАК ХарактерЗатрат,
	|	ТабличнаяЧасть.СтатьяЗатрат.СтатусМатериальныхЗатрат КАК СтатусМатериальныхЗатрат,
	|	ТабличнаяЧасть.СтатьяЗатрат.ВидРасходовНУ КАК ВидРасходовНУ,
	|	ТабличнаяЧасть.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаПолучатель,
	|	&ВидВыпускаВыпуск КАК ВидВыпуска,
	|
	|	Неопределено КАК ПродукцияПолучатель,
	|	Неопределено КАК ХарактеристикаПродукцииПолучатель,
	|	Неопределено КАК СерияПродукцииПолучатель,
	|	Неопределено КАК Проект,
	|
	|	ВЫБОР КОГДА ТабличнаяЧасть.Заказ ССЫЛКА Документ.ЗаказПокупателя
	|				И ТабличнаяЧасть.Заказ.ВидОперации = &ВидОперацииПереработка ТОГДА
	|		&ПродукцияИзДавальческогоСырья
	|	ИНАЧЕ
	|      	&СобственнаяПродукция
	|	КОНЕЦ КАК ВариантВыпускаПродукции,
	|		
	|	(Количество * 
	|	ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|				И Коэффициент <> 0 ТОГДА 
	|		Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ
	|	) КАК Количество,
	|	0 КАК КоличествоДоделка,
	|	ТабличнаяЧасть.Сумма КАК СтоимостьУУ,
	|	ТабличнаяЧасть.СуммаРегл КАК СтоимостьБУ,
	|	ТабличнаяЧасть.СуммаРегл КАК СтоимостьНУ
	|		
	|ИЗ	
	|	Документ.ПоступлениеТоваровИзПереработки.ВозвратныеОтходы КАК ТабличнаяЧасть
	|		
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Ссылка.ИспользоватьВозвратныеОтходы
	|		
	|УПОРЯДОЧИТЬ ПО
	|	ТабличнаяЧасть.НомерСтроки
	|";*/
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаДляРеквизитаЗаказ();*/
			/*ТекстЗапросаДляРеквизитаЗаказ = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	);*/
			/*ТекстЗапросаДляРеквизитаЗаказРегл = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
	);*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + " КАК Заказ,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказРегл", ТекстЗапросаДляРеквизитаЗаказРегл + " КАК ЗаказРегл,");*/
			return null;
		}
		// СформироватьТекстЗапросаПоТабличнойЧастиВозвратныеОтходыПоступлениеТоваровИзПереработки()
		// Формирует текст запроса по табличной части "Материалы" документа "Оприходование материалов из производства".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоВозвратнымОтходамОприходованиеМатериалов(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	0 КАК НомерСтроки,
	|	ТабличнаяЧасть.Ссылка.Организация КАК Организация,
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|
	|	ТабличнаяЧасть.НоменклатурнаяГруппа,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Номенклатура.Услуга КАК Услуга,
	|	ТабличнаяЧасть.Номенклатура.ВестиУчетПоСериямВНЗП КАК ВестиУчетПоСериямВНЗП,
	|	ТабличнаяЧасть.Номенклатура.ВестиПартионныйУчетПоСериям КАК ВестиПартионныйУчетПоСериям,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|	ТабличнаяЧасть.СерияНоменклатуры,
	|	ЗНАЧЕНИЕ(Справочник.СпецификацииНоменклатуры.ПустаяСсылка) КАК Спецификация,
	|	ТабличнаяЧасть.СчетЗатрат,
	|	ТабличнаяЧасть.СчетЗатратНУ,
	|
	|	ТабличнаяЧасть.Номенклатура КАК Затрата,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаЗатраты,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК СерияЗатраты,
	|	Неопределено КАК СпособРаспределенияЗатрат,
	|		
	|	//ТекстЗапросаЗаказУпр
	|	//ТекстЗапросаЗаказРегл
	|
	|	ТабличнаяЧасть.Номенклатура КАК Продукция,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаПродукции,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК СерияПродукции,
	|		
	|	ТабличнаяЧасть.Ссылка КАК ДокументВыпуска,
	|	&ВидПоступленияНаСклад КАК ВидПоступления,
	|	ТабличнаяЧасть.Ссылка.Склад КАК СкладПолучатель,
	|	Неопределено КАК ПриходныйОрдер,
	|	Ложь КАК БезПраваПродажи,
	|	ТабличнаяЧасть.ЗаказРезерв,
	|	ЕСТЬNULL(ТабличнаяЧасть.ЗаказРезерв.ВидЗаказа, Неопределено) КАК ВнутреннийЗаказВидЗаказа,
	|	ЕСТЬNULL(ТабличнаяЧасть.ЗаказРезерв.Заказчик, Неопределено) КАК ВнутреннийЗаказЗаказчик,
	
	|	ТабличнаяЧасть.Заказ КАК ЗаказПолучатель,
	|	ТабличнаяЧасть.Заказ КАК ЗаказПолучательРегл,
	|	ЕСТЬNULL(ТабличнаяЧасть.ЗаказРезерв.Контрагент, Неопределено) КАК Контрагент,
	|
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК ПодразделениеПолучатель,
	|	ТабличнаяЧасть.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизацииПолучатель,
	|
	|	ТабличнаяЧасть.ЗаказРезерв.ВидОперации КАК ВидОперации,
	|	ЕСТЬNULL(
	|		ТабличнаяЧасть.ЗаказРезерв.ДоговорКонтрагента.ОбособленныйУчетТоваровПоЗаказамПокупателей,
	|		Ложь
	|	) КАК ОбособленныйУчетТоваровПоЗаказамПокупателей,
	|
	|	ТабличнаяЧасть.Качество,
	|	ТабличнаяЧасть.СтатусВозврата КАК СтатусПартии,
	|
	|	ТабличнаяЧасть.Счет КАК СчетДт,
	|	ТабличнаяЧасть.СчетНУ КАК СчетДтНУ,
	|	ТабличнаяЧасть.Счет.Количественный КАК СчетДтКоличественный,
	|	ТабличнаяЧасть.СчетНУ.Количественный КАК СчетДтКоличественныйНУ,
	|
	|	ТабличнаяЧасть.СтатьяЗатрат КАК СтатьяЗатратПолучатель,
	|	ТабличнаяЧасть.СтатьяЗатрат.ВидЗатрат КАК ВидЗатрат,
	|	ТабличнаяЧасть.СтатьяЗатрат.ХарактерЗатрат КАК ХарактерЗатрат,
	|	ТабличнаяЧасть.СтатьяЗатрат.СтатусМатериальныхЗатрат КАК СтатусМатериальныхЗатрат,
	|	ТабличнаяЧасть.СтатьяЗатрат.ВидРасходовНУ КАК ВидРасходовНУ,
	|	ТабличнаяЧасть.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаПолучатель,
	|	&ВидВыпускаВыпуск КАК ВидВыпуска,
	|
	|	Неопределено КАК ПродукцияПолучатель,
	|	Неопределено КАК ХарактеристикаПродукцииПолучатель,
	|	Неопределено КАК СерияПродукцииПолучатель,
	|	Неопределено КАК Проект,
	|
	|	ВЫБОР КОГДА ТабличнаяЧасть.Заказ ССЫЛКА Документ.ЗаказПокупателя
	|				И ТабличнаяЧасть.Заказ.ВидОперации = &ВидОперацииПереработка ТОГДА
	|		&ПродукцияИзДавальческогоСырья
	|	ИНАЧЕ
	|      	&СобственнаяПродукция
	|	КОНЕЦ КАК ВариантВыпускаПродукции,
	|	ТабличнаяЧасть.ТипСтоимости,
	|		
	|	(Количество * 
	|	ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|				И Коэффициент <> 0 ТОГДА 
	|		Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ
	|	) КАК Количество,
	|	0 КАК КоличествоДоделка,
	|	ТабличнаяЧасть.Сумма КАК СтоимостьУУ,
	|	ТабличнаяЧасть.СуммаРегл КАК СтоимостьБУ,
	|	ТабличнаяЧасть.СуммаРегл КАК СтоимостьНУ
	|		
	|ИЗ	
	|	Документ.ОприходованиеМатериаловИзПроизводства.Материалы КАК ТабличнаяЧасть
	|		
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОприходованиеМатериаловИзПроизводства.ВозвратныеОтходы)
	|		
	|УПОРЯДОЧИТЬ ПО
	|	ТабличнаяЧасть.НомерСтроки
	|";*/
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаДляРеквизитаЗаказКорректировкаНЗП();*/
			/*ТекстЗапросаДляРеквизитаЗаказ = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	);*/
			/*ТекстЗапросаДляРеквизитаЗаказРегл = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
	);*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + " КАК Заказ,");*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказРегл", ТекстЗапросаДляРеквизитаЗаказРегл + " КАК ЗаказРегл,");*/
			return null;
		}
		// СформироватьТекстЗапросаПоВозвратнымОтходамОприходованиеМатериалов()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ЗАПРОСА КОЭФФИЦИЕНТОВ РАСПРЕДЕЛЕНИЮ ПО ПРОЕКТАМ
		// Функция формирует запрос по коэффициентам распределения по проектам.
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	ВыборкаПоВыпускуПродукции - ВыборкаИзРезультатаЗапроса - Выборка из результата запроса по выпуску продукции
		//
		// Возвращаемое значение:
		//	Запрос - Запрос по коэффициентам распределения по проектам.
		//

		public object СформироватьЗапросПоКоэффициентамРаспределенияПоПроектам(/*
	СтруктураШапкиДокумента,
	ВыборкаПоВыпускуПродукции
	*/)
		{
			/*Запрос = Новый Запрос;*/
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете
	   И СтруктураШапкиДокумента.ВедениеУчетаПоПроектам*/)
			{
				/*ТекстЗапроса = "
		|ВЫБРАТЬ
		|	РаспределениеПоПроектам.ВидРаспределения,
		|	РаспределениеПоПроектам.Проект,
		|	РаспределениеПоПроектам.ДоляРаспределения
		|ИЗ
		|	РегистрСведений.РаспределениеПоПроектам.СрезПоследних(&КонМесяца, 
		|		ВидРаспределения В (&МассивВидовРаспределения)
		|	) КАК РаспределениеПоПроектам
		|ГДЕ
		|	РаспределениеПоПроектам.ВидРаспределения.МетодРаспределения = ЗНАЧЕНИЕ(Перечисление.МетодыРаспределенияПоПроектам.ПриПроведенииДокументов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	РаспределениеПоПроектам.ВидРаспределения,
		|	РаспределениеПоПроектам.Проект
		|";*/
				/*МассивВидовРаспределения = Новый Массив;*/
				/*МассивВидовРаспределения.Добавить(СтруктураШапкиДокумента.Проект);*/
				/*ВыборкаПоВыпускуПродукции.Сбросить();*/
				while(true/*ВыборкаПоВыпускуПродукции.Следующий()*/)
				{
					if(true/*ЗначениеЗаполнено(ВыборкаПоВыпускуПродукции.Проект)
			   И ТипЗнч(ВыборкаПоВыпускуПродукции.Проект) = Тип("СправочникСсылка.ВидыРаспределенияПоПроектам")*/)
					{
						/*МассивВидовРаспределения.Добавить(ВыборкаПоВыпускуПродукции.Проект);*/
					}
				}
				/*;
		
		Запрос.УстановитьПараметр("МассивВидовРаспределения", МассивВидовРаспределения);*/
				/*Запрос.УстановитьПараметр("КонМесяца", КонецМесяца(СтруктураШапкиДокумента.Дата));*/
			}
			/*Запрос.Текст = ТекстЗапроса;*/
			return null;
		}
		// СформироватьЗапросПоКоэффициентамРаспределенияПоПроектам()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО РЕГИСТРУ "ВЫПУСК ПРОДУКЦИИ"
		// Функция проверяет субконто БУ и НУ.
		//
		// Параметры:
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//
		// Возвращаемое значение:
		//	Булево - Истина - субконто БУ и НУ одинаковые
		//			 Ложь - субконто БУ и НУ разные
		//

		public object ОдинаковаяАналитикаБУиНУ(/*СтрокаВыборки*/)
		{
			/*ОдинаковаяАналитика = Истина;*/
			if(true/*ТипЗнч(СтрокаВыборки.СубконтоДт1) <> ТипЗнч(СтрокаВыборки.СубконтоДтНУ1)
	 ИЛИ ТипЗнч(СтрокаВыборки.СубконтоДт2) <> ТипЗнч(СтрокаВыборки.СубконтоДтНУ2)
	 ИЛИ ТипЗнч(СтрокаВыборки.СубконтоДт3) <> ТипЗнч(СтрокаВыборки.СубконтоДтНУ3)*/)
			{
				/*ОдинаковаяАналитика = Ложь;*/
			}
			return null;
		}
		// ОдинаковаяАналитикаБУиНУ()
		// Процедура формирует движения по регистру "Выпуск продукции".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	ХарактерЗатрат - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат
		//	КодОперацииВыпускПродукции - ПеречислениеСсылка.КодыОперацийВыпускПродукции - Код операции
		//	Количество - Число - Количество выпуска
		//	КоличествоДоделка - Число - Количество выпуска (доделка)
		//	Стоимость - Число - Учетная стоимость выпуска
		//	ВременнаяРазница - Число - Учетная стоимость выпуска в части временной разницы
		//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отражения в учете
		//	НаборЗаписейВыпускПродукции - РегистрНакопленияНаборЗаписей - Набор записей регистра накопления "Выпуск продукции".
		//

		public void СформироватьСтрокуДвиженияПоРегиструВыпускПродукции(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	ХарактерЗатрат,
	КодОперацииВыпускПродукции,
	Количество,
	КоличествоДоделка,
	Стоимость,
	ВременнаяРазница,
	ВидОтраженияВУчете,
	НаборЗаписейВыпускПродукции
	*/)
		{
			/*// Давальческое сырье не отражается в движениях регистра по налоговому учету.
*/
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВНалоговомУчете
	   И СтрокаВыборки.СтатусМатериальныхЗатрат = Перечисления.СтатусыМатериальныхЗатратНаПроизводство.ПринятыеВПереработку*/)
			{
			}
			/*// Сформируем движение по регистру "Выпуск продукции".
*/
			/*НоваяСтрока = НаборЗаписейВыпускПродукции.Добавить();*/
			/*НоваяСтрока.Активность = Истина;*/
			/*НоваяСтрока.Период = СтруктураШапкиДокумента.Дата;*/
			/*ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВыборки);*/
			/*// Заполнение заказа зависит от вида отражения в учете.
*/
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете*/)
			{
				/*НоваяСтрока.Подразделение = СтруктураШапкиДокумента.Подразделение;*/
				/*НоваяСтрока.Заказ = СтрокаВыборки.Заказ;*/
				/*ЗаказПолучатель = СтрокаВыборки.ЗаказПолучатель;*/
				/*ПодразделениеПолучатель = СтрокаВыборки.ПодразделениеПолучатель;*/
			}
			/*// Для возвратных отходов не заполняем реквизиты аналитики - получателя.
*/
			if(true/*КодОперацииВыпускПродукции = Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииПоФиксированнойСтоимости*/)
			{
				/*НоваяСтрока.ПодразделениеПолучатель = Неопределено;*/
				/*НоваяСтрока.ЗаказПолучатель = СтрокаВыборки.ЗаказРезерв;*/
				/*НоваяСтрока.СтатьяЗатратПолучатель = Неопределено;*/
			}
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете*/)
			{
				if(true/*КодОперацииВыпускПродукции = Перечисления.КодыОперацийВыпускПродукции.ОприходованиеНЗП*/)
				{
					/*НоваяСтрока.СчетДт = СтрокаВыборки.СчетКт;*/
				}
				/*НоваяСтрока.СчетУчетаНЗП = СтрокаВыборки.СчетЗатрат;*/
				if(true/*ХарактерЗатрат = Перечисления.ХарактерЗатрат.Прочие
		   И НоваяСтрока.СчетДт.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.ОбслуживающиеПроизводства)*/)
				{
					/*НоваяСтрока.СубконтоДт1 = СтрокаВыборки.ПодразделениеОрганизацииПолучатель;*/
					/*НоваяСтрока.СубконтоДт2 = СтрокаВыборки.НоменклатурнаяГруппаПолучатель;*/
					/*НоваяСтрока.СубконтоДт3 = СтрокаВыборки.СтатьяЗатратПолучатель;*/
				}
			}
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	 ИЛИ ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете*/)
			{
				/*НоваяСтрока.НомерСтрокиДокумента = СтрокаВыборки.НомерСтроки;*/
			}
			/*НоваяСтрока.КодОперации = КодОперацииВыпускПродукции;*/
			/*НоваяСтрока.Количество = Количество;*/
			/*НоваяСтрока.КоличествоДоделка = КоличествоДоделка;*/
			/*НоваяСтрока.Стоимость = Стоимость;*/
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВНалоговомУчете*/)
			{
				/*НоваяСтрока.ПостояннаяРазница = 0;*/
				/*НоваяСтрока.ВременнаяРазница = ВременнаяРазница;*/
			}
		}
		// СформироватьСтрокуДвиженияПоРегиструВыпускПродукции()
		// Процедура формирует движения по регистру "Выпуск продукции".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	ХарактерЗатратУУ - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат по управленческому учету
		//	ХарактерЗатратБУ - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат по бухгалтерскому учету
		//	ХарактерЗатратНУ - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат по налоговому учету
		//	КодОперацииВыпускПродукцииУУ - ПеречислениеСсылка.КодыОперацийВыпускПродукции - Код операции по управленческому учету
		//	КодОперацииВыпускПродукцииБУ - ПеречислениеСсылка.КодыОперацийВыпускПродукции - Код операции по бухгалтерскому учету
		//	КодОперацииВыпускПродукцииНУ - ПеречислениеСсылка.КодыОперацийВыпускПродукции - Код операции по налоговому учету
		//	Количество - Число - Количество выпуска
		//	КоличествоДоделка - Число - Количество выпуска (доделка)
		//	СтоимостьУУ - Число - Учетная стоимость по управленческому учету
		//	СтоимостьБУ - Число - Учетная стоимость по бухгалтерскому учету
		//	СтоимостьНУ - Число - Учетная стоимость по налоговому учету
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void СформироватьДвиженияПоРегистрамВыпускПродукции(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	ХарактерЗатратУУ,
	ХарактерЗатратБУ,
	ХарактерЗатратНУ,
	КодОперацииВыпускПродукцииУУ,
	КодОперацииВыпускПродукцииБУ,
	КодОперацииВыпускПродукцииНУ,
	Количество,
	КоличествоДоделка,
	СтоимостьУУ,
	СтоимостьБУ,
	СтоимостьНУ,
	СтруктураНаборыЗаписей
	*/)
		{
			/*// Для оприходования НЗП по фиксированной стоимости движения не формируем.
*/
			if(true/*ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.ОприходованиеНЗП")
	   И СтруктураШапкиДокумента.ТипСтоимости = Перечисления.ВидыНормативнойСтоимостиПроизводства.Фиксированная*/)
			{
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете*/)
			{
				/*ИмяРегистра = "ВыпускПродукции";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*СформироватьСтрокуДвиженияПоРегиструВыпускПродукции(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			ХарактерЗатратУУ,
			КодОперацииВыпускПродукцииУУ,
			Количество,
			КоличествоДоделка,
			СтоимостьУУ,
			0,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете,
			СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете*/)
			{
				/*ИмяРегистра = "ВыпускПродукцииБухгалтерскийУчет";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*СформироватьСтрокуДвиженияПоРегиструВыпускПродукции(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			ХарактерЗатратБУ,
			КодОперацииВыпускПродукцииБУ,
			Количество,
			КоличествоДоделка,
			СтоимостьБУ,
			0,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете,
			СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВНалоговомУчете*/)
			{
				/*ИмяРегистра = "ВыпускПродукцииНалоговыйУчет";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				if(true/*СтруктураШапкиДокумента.ПоддержкаПБУ18*/)
				{
					/*ВременнаяРазница = СтоимостьБУ - СтоимостьНУ;*/
				}
				/*СформироватьСтрокуДвиженияПоРегиструВыпускПродукции(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			ХарактерЗатратНУ,
			КодОперацииВыпускПродукцииНУ,
			Количество,
			КоличествоДоделка,
			СтоимостьНУ,
			ВременнаяРазница,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВНалоговомУчете,
			СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
		}
		// СформироватьДвиженияПоРегистрамВыпускПродукции()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО РЕГИСТРУ "ВЫПУСК ПРОДУКЦИИ (НАРАБОТКА)"
		// Процедура формирует движения по регистру "Выпуск продукции (наработка)".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	Количество - Число - Количество выпуска
		//	КоличествоДоделка - Число - Количество выпуска (доделка)
		//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отражения в учете
		//	НаборЗаписейВыпускПродукцииНаработка - РегистрНакопленияНаборЗаписей - Набор записей регистра накопления "Выпуск продукции (наработка)".
		//

		public void СформироватьСтрокуДвиженияПоРегиструВыпускПродукцииНаработка(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	Количество,
	КоличествоДоделка,
	ВидОтраженияВУчете,
	НаборЗаписейВыпускПродукцииНаработка
	*/)
		{
			/*// Для вида выпуска "Наработка" движения формируем только, если количество выпуска
*/
			/*// больше количества доделки.
*/
			if(true/*СтрокаВыборки.ВидВыпуска = Перечисления.ВидыВыпуска.Наработка
	   И Количество <= КоличествоДоделка*/)
			{
			}
			/*// Сформируем движение по регистру "Выпуск продукции (наработка)".
*/
			/*НоваяСтрока = НаборЗаписейВыпускПродукцииНаработка.Добавить();*/
			/*НоваяСтрока.Активность = Истина;*/
			/*НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Приход;*/
			/*НоваяСтрока.Период = СтруктураШапкиДокумента.Дата;*/
			/*ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВыборки);*/
			if(true/*СтрокаВыборки.ВидВыпуска = Перечисления.ВидыВыпуска.Наработка*/)
			{
				/*НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Приход;*/
				/*НоваяСтрока.Количество = Количество - КоличествоДоделка;*/
			}
			/*// Заполнение заказа зависит от вида отражения в учете.
*/
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете*/)
			{
				/*НоваяСтрока.Подразделение = СтруктураШапкиДокумента.Подразделение;*/
				/*НоваяСтрока.Заказ = СтрокаВыборки.Заказ;*/
			}
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете*/)
			{
				/*НоваяСтрока.СчетУчетаНЗП = СтрокаВыборки.СчетЗатрат;*/
			}
		}
		// СформироватьСтрокуДвиженияПоРегиструВыпускПродукцииНаработка()
		// Процедура формирует движения по регистру "Выпуск продукции (наработка)".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	Количество - Число - Количество выпуска
		//	КоличествоДоделка - Число - Количество выпуска (доделка)
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void СформироватьДвиженияПоРегистрамВыпускПродукцииНаработка(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	Количество,
	КоличествоДоделка,
	СтруктураНаборыЗаписей
	*/)
		{
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете*/)
			{
				/*ИмяРегистра = "ВыпускПродукцииНаработка";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*СформироватьСтрокуДвиженияПоРегиструВыпускПродукцииНаработка(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			Количество,
			КоличествоДоделка,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете,
			СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете*/)
			{
				/*ИмяРегистра = "ВыпускПродукцииНаработкаБухгалтерскийУчет";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*СформироватьСтрокуДвиженияПоРегиструВыпускПродукцииНаработка(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			Количество,
			КоличествоДоделка,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете,
			СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВНалоговомУчете*/)
			{
				/*ИмяРегистра = "ВыпускПродукцииНаработкаНалоговыйУчет";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*СформироватьСтрокуДвиженияПоРегиструВыпускПродукцииНаработка(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			Количество,
			КоличествоДоделка,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВНалоговомУчете,
			СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
		}
		// СформироватьДвиженияПоРегистрамВыпускПродукцииНаработка()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРА ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО РЕГИСТРАМ УЧЕТА ТОВАРОВ НА СКЛАДАХ
		// Процедура формирует движения по регистру "Товары на складах".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	ХарактерЗатратУУ - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат для целей управленческого учета
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void СформироватьДвиженияПоРегиструТоварыНаСкладах(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	СтруктураНаборыЗаписей
	*/)
		{
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете
	   И СтрокаВыборки.ВидПоступления = Перечисления.ВидыПоступленияТоваров.НаСклад*/)
			{
				/*ИмяРегистра = "ТоварыНаСкладах";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*// Сформируем движение по регистру "Товары на складах".
*/
				/*НоваяСтрока = СтруктураНаборыЗаписей.ТоварыНаСкладах.Добавить();*/
				/*НоваяСтрока.Активность = Истина;*/
				/*НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Приход;*/
				/*НоваяСтрока.Период = СтруктураШапкиДокумента.Дата;*/
				/*ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВыборки);*/
				/*НоваяСтрока.Склад = СтрокаВыборки.СкладПолучатель;*/
				/*НоваяСтрока.КодОперации = Перечисления.КодыОперацийТоварыНаСкладах.ВыпускПродукцииФиксНаСклад;*/
			}
		}
		// СформироватьДвиженияПоРегиструТоварыНаСкладах()
		// Процедура формирует движения по регистру "Товары организаций".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	ХарактерЗатратУУ - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат для целей управленческого учета
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void СформироватьДвиженияПоРегиструТоварыОрганизаций(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	СтруктураНаборыЗаписей
	*/)
		{
			if(true/*СтруктураШапкиДокумента.Свойство("ОтражатьВРегламентированномУчете")*/)
			{
				/*ОтражатьВРегламентированномУчете = СтруктураШапкиДокумента.ОтражатьВРегламентированномУчете;*/
			}
			if(true/*ОтражатьВРегламентированномУчете
	   И СтрокаВыборки.ВидПоступления = Перечисления.ВидыПоступленияТоваров.НаСклад*/)
			{
				/*ИмяРегистра = "ТоварыОрганизаций";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*// Сформируем движение по регистру "Товары организаций".
*/
				/*НоваяСтрока = СтруктураНаборыЗаписей.ТоварыОрганизаций.Добавить();*/
				/*НоваяСтрока.Активность = Истина;*/
				/*НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Приход;*/
				/*НоваяСтрока.Период = СтруктураШапкиДокумента.Дата;*/
				/*ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВыборки);*/
				/*НоваяСтрока.Организация = СтруктураШапкиДокумента.Организация;*/
				if(true/*Не СтруктураШапкиДокумента.ВестиУчетТоваровОрганизацийВРазрезеСкладов*/)
				{
					/*НоваяСтрока.Склад = Неопределено;*/
				}
			}
		}
		// СформироватьДвиженияПоРегиструТоварыОрганизаций()
		// Процедура формирует движения по регистру "Товары в резерве на складах".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	ХарактерЗатратУУ - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат для целей управленческого учета
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void СформироватьДвиженияПоРегиструТоварыВРезервеНаСкладах(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	СтруктураНаборыЗаписей
	*/)
		{
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете 
	   И ЗначениеЗаполнено(СтрокаВыборки.ЗаказРезерв)*/)
			{
				/*// Если указан внутренний заказ, то резервирование под заказ выполяется только, если
*/
				/*// склад документа не равен складу внутреннего заказ.
*/
				if(true/*СтрокаВыборки.ВнутреннийЗаказВидЗаказа = Перечисления.ВидыВнутреннегоЗаказа.НаСклад
		   И СтрокаВыборки.ВнутреннийЗаказЗаказчик = СтрокаВыборки.СкладПолучатель*/)
				{
				}
				/*ИмяРегистра = "ТоварыВРезервеНаСкладах";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*// Сформируем движение по регистру "Товары в резерве на складах".
*/
				/*НоваяСтрока = СтруктураНаборыЗаписей.ТоварыВРезервеНаСкладах.Добавить();*/
				/*НоваяСтрока.Активность = Истина;*/
				/*НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Приход;*/
				/*НоваяСтрока.Период = СтруктураШапкиДокумента.Дата;*/
				/*ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВыборки);*/
				/*НоваяСтрока.Склад = СтрокаВыборки.СкладПолучатель;*/
				/*НоваяСтрока.ДокументРезерва = СтрокаВыборки.ЗаказРезерв;*/
			}
		}
		// СформироватьДвиженияПоРегиструТоварыВРезервеНаСкладах()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРА ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО РЕГИСТРУ ПРОДАЖИ СЕБЕСТОИМОСТЬ
		// Процедура формирует движения по регистру "Продажи себестоимость".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	Проект - СправочникСсылка.Проекты - Проект
		//	Количество - Число - Количество продукции
		//	Сумма - Число - Учетная стоимость продукции
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void СформироватьСтрокуДвиженияПоРегиструПродажиСебестоимость(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	Проект,
	Количество,
	Сумма,
	СтруктураНаборыЗаписей
	*/)
		{
			if(true/*Количество = 0
	   И Сумма = 0*/)
			{
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете*/)
			{
				/*ИмяРегистра = "ПродажиСебестоимость";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*// В движениях по регистру "Продажи себестоимость" должны быть заполнены измерения:
*/
				/*//	- Номенклатура
*/
				/*//	- ХарактеристикаНоменклатуры
*/
				/*//	- ЗаказПокупателя
*/
				/*//	- ДокументОприходования
*/
				/*//	- Подразделение
*/
				/*//	- Проект
*/
				/*//
*/
				/*// Ресурсы:
*/
				/*//	- Количество
*/
				/*//	- Стоимость
*/
				/*// Сформируем движение по регистру "Продажи себестоимость".
*/
				/*НоваяСтрока = СтруктураНаборыЗаписей.ПродажиСебестоимость.Добавить();*/
				/*НоваяСтрока.Активность = Истина;*/
				/*НоваяСтрока.Период = СтруктураШапкиДокумента.Дата;*/
				/*НоваяСтрока.Номенклатура = СтрокаВыборки.Номенклатура;*/
				/*НоваяСтрока.ХарактеристикаНоменклатуры = СтрокаВыборки.ХарактеристикаНоменклатуры;*/
				/*НоваяСтрока.ЗаказПокупателя = СтрокаВыборки.Заказ;*/
				/*НоваяСтрока.ДокументОприходования = СтруктураШапкиДокумента.Ссылка;*/
				/*НоваяСтрока.Подразделение = СтруктураШапкиДокумента.Подразделение;*/
				/*НоваяСтрока.Проект = Проект;*/
				/*НоваяСтрока.Количество = Количество;*/
				/*НоваяСтрока.Стоимость = Сумма;*/
			}
		}
		// СформироватьСтрокуДвиженияПоРегиструПродажиСебестоимость()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО РЕГИСТРУ "ЗАКАЗЫ НА ОБСЛУЖИВАНИЕ ОС"
		// Процедура формирует движения по регистру "Заказы на обслуживание ОС".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	ХарактерЗатратУУ - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат для целей управленческого учета
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void СформироватьДвиженияПоРегиструЗаказыНаОбслуживаниеОС(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	СтруктураНаборыЗаписей
	*/)
		{
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете 
	   И ЗначениеЗаполнено(СтрокаВыборки.ЗаказВыпуска)
	   И ТипЗнч(СтрокаВыборки.ЗаказВыпуска) = Тип("ДокументСсылка.ЗаказНаОбслуживаниеОС")
	   И ТипЗнч(СтрокаВыборки.КонечнаяПродукция) = Тип("СправочникСсылка.ОсновныеСредства")*/)
			{
				/*ИмяРегистра = "ЗаказыНаОбслуживаниеОС";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*// В движениях по регистру "Заказы на обслуживание ОС" должны быть заполнены измерения:
*/
				/*//	- Заказ - Заказ на обслуживание ОС
*/
				/*//	- ОсновноеСредство
*/
				/*//	- Номенклатура - услуга по обслуживанию ОС.
*/
				/*// Сформируем движение по регистру "Заказы на обслуживание ОС".
*/
				/*НоваяСтрока = СтруктураНаборыЗаписей.ЗаказыНаОбслуживаниеОС.Добавить();*/
				/*НоваяСтрока.Активность = Истина;*/
				/*НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Расход;*/
				/*НоваяСтрока.Период = СтруктураШапкиДокумента.Дата;*/
				/*НоваяСтрока.Заказ = СтрокаВыборки.ЗаказВыпуска;*/
				/*НоваяСтрока.ОсновноеСредство = СтрокаВыборки.КонечнаяПродукция;*/
				/*НоваяСтрока.Номенклатура = СтрокаВыборки.Номенклатура;*/
				/*НоваяСтрока.Количество = СтрокаВыборки.Количество;*/
			}
		}
		// СформироватьДвиженияПоРегиструЗаказыНаОбслуживаниеОС()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО РЕГИСТРУ "ПАРТИИ ТОВАРОВ НА СКЛАДАХ"
		// Процедура формирует движения по регистру "Партии товаров на складах".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	КодОперацииПартииТоваров - ПеречислениеСсылка.КодыОперацийПартииТоваров - Код операции
		//	СтоимостьУУ - Число - Учетная стоимость по управленческому учету
		//	СтоимостьБУ - Число - Учетная стоимость по бухгалтерскому учету
		//	СтоимостьНУ - Число - Учетная стоимость по налоговому учету
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void СформироватьДвиженияПоРегистрамПартииТоваровНаСкладах(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	КодОперацииПартииТоваров,
	СтоимостьУУ,
	СтоимостьБУ,
	СтоимостьНУ,
	СтруктураНаборыЗаписей
	*/)
		{
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете
	   И Не СтруктураШапкиДокумента.СпособВеденияПартионногоУчетаПоОрганизации = Перечисления.СпособыВеденияПартионногоУчетаПоОрганизациям.НеВедется*/)
			{
				/*ИмяРегистра = "ПартииТоваровНаСкладах";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*// ПостояннаяРазница
*/
				/*// ВременнаяРазница
*/
				/*Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете,
			СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
				/*// При поступлении по ордеру с правом продажи сторнируем сформированные ордерные партии.
*/
				if(true/*СтрокаВыборки.ВидПоступления = Перечисления.ВидыПоступленияТоваров.ПоОрдеру
		   И Не СтрокаВыборки.БезПраваПродажи*/)
				{
					/*// СтоимостьУУ,
*/
					/*// ПостояннаяРазница
*/
					/*// ВременнаяРазница
*/
					/*Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете,
				СтруктураНаборыЗаписей[ИмяРегистра]
			);*/
				}
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете*/)
			{
				/*ИмяРегистра = "ПартииТоваровНаСкладахБухгалтерскийУчет";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*// ПостояннаяРазница
*/
				/*// ВременнаяРазница
*/
				/*Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете,
			СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВНалоговомУчете
	 ИЛИ СтруктураШапкиДокумента.ОтражатьВНалоговомУчетеУСН*/)
			{
				/*ИмяРегистра = "ПартииТоваровНаСкладахНалоговыйУчет";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				if(true/*СтруктураШапкиДокумента.ПоддержкаПБУ18*/)
				{
					/*ВременнаяРазница = СтоимостьБУ - СтоимостьНУ;*/
				}
				/*// ПостояннаяРазница
*/
				/*ВременнаяРазница,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВНалоговомУчете,
			СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
		}
		// СформироватьДвиженияПоРегистрамПартииТоваровНаСкладах()

		public void ПровестиДокументПоПроизводственнымРегистрам(/*ДокументСсылка, Упр, Бух, Нал, ПроведениеОстановлено = Ложь*/)
		{
			if(true/*((ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену"))
	  ИЛИ (ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.АктОбОказанииПроизводственныхУслуг"))
	  ИЛИ (ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПоступлениеТоваровИзПереработки"))
	  ИЛИ ((ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.КомплектацияНоменклатуры"))
		И ((ДокументСсылка.ВидОперации = Перечисления.ВидыОперацийКомплектацияНоменклатуры.ВыпускПродукции)
		  ИЛИ (ДокументСсылка.ВидОперации = Перечисления.ВидыОперацийКомплектацияНоменклатуры.ПоступлениеОтПереработчика)))) 
	  И (Бух ИЛИ Упр)*/)
			{
				/*//Очистим движения по партионным регистрам
*/
				if(true/*(ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену"))
		  ИЛИ (ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.АктОбОказанииПроизводственныхУслуг"))
		  ИЛИ ((ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПоступлениеТоваровИзПереработки"))
			И (ДокументСсылка.ВидПоступления = Перечисления.ВидыПоступленияТоваров.НаСклад))*/)
				{
					/*СтруктураПараметров = Новый Структура();*/
					/*ТаблицаСписания = Новый ТаблицаЗначений();*/
					/*СтруктураПараметров.Вставить("ЕстьСтрокиОтражатьВУправленческомУчете",Упр);*/
					/*СтруктураПараметров.Вставить("ЕстьСтрокиОтражатьВБухгалтерскомУчете",Бух);*/
					/*СтруктураПараметров.Вставить("ЕстьСтрокиОтражатьВНалоговомУчете",Нал);*/
					/*СтруктураПараметров.Вставить("ЕстьСтрокиОтражатьВМеждународномУчете",Ложь);*/
					/*УправлениеЗапасамиПартионныйУчет.СоздатьНаборыЗаписей(СтруктураПараметров);*/
					/*УправлениеЗапасамиПартионныйУчет.ПодготовитьНаборыЗаписей(СтруктураПараметров, ТаблицаСписания, ДокументСсылка.Дата, ДокументСсылка);*/
					if(true/*Бух И (НЕ ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.АктОбОказанииПроизводственныхУслуг"))*/)
					{
						/*СтруктураПараметров.ИзмененыДвиженияНДСПартииТоваров = Истина;*/
					}
					/*УправлениеЗапасамиПартионныйУчет.ЗаписатьДвиженияДокумента(СтруктураПараметров, ТаблицаСписания);*/
				}
				/*ДокументОбъект = ДокументСсылка.ПолучитьОбъект();*/
				/*Заголовок = "";*/
				/*СтруктураШапкиДокумента = Неопределено;*/
				/*ДокументОбъект.ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента);*/
				/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете = СтруктураШапкиДокумента.ОтражатьВУправленческомУчете И Упр;*/
				/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете = СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете И Бух;*/
				/*СтруктураШапкиДокумента.ОтражатьВНалоговомУчете = СтруктураШапкиДокумента.ОтражатьВНалоговомУчете И Нал;*/
				/*УчетнаяПолитикаПолученаУспешно = Истина;*/
				/*УчетнаяПолитика = Неопределено;*/
				/*УчетнаяПолитикаРегл = Неопределено;*/
				if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете*/)
				{
					/*УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиУпр(СтруктураШапкиДокумента.Дата);*/
					if(true/*УчетнаяПолитика = Неопределено*/)
					{
						/*УчетнаяПолитикаПолученаУспешно = Ложь;*/
					}
				}
				if(true/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете ИЛИ СтруктураШапкиДокумента.ОтражатьВНалоговомУчете*/)
				{
					/*УчетнаяПолитикаРегл = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.Организация);*/
					if(true/*УчетнаяПолитикаРегл = Неопределено*/)
					{
						/*УчетнаяПолитикаПолученаУспешно = Ложь;*/
					}
				}
				if(true/*УчетнаяПолитикаПолученаУспешно*/)
				{
					/*СформироватьДвиженияПоРегиструЗатратыНаВыпускПродукции(СтруктураШапкиДокумента, СтруктураШапкиДокумента.ВидДокумента, УчетнаяПолитика, УчетнаяПолитикаРегл);*/
					/*СформироватьДвиженияПоВыпускуПродукцииИНаправлениямВыпуска(СтруктураШапкиДокумента, СтруктураШапкиДокумента.ВидДокумента, УчетнаяПолитика, УчетнаяПолитикаРегл, УчетнаяПолитикаРегл, Истина);*/
				}
			}
		}
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО РЕГИСТРУ "НДС ПО ПАРТИЯМ ЗАПАСОВ"
		// Процедура формирует движения по регистру "НДС по партиям запасов".
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void СформироватьДвиженияПоРегиструНДСПартииТоваров(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	СтруктураНаборыЗаписей
	*/)
		{
			if(true/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете
	   И Не СтруктураШапкиДокумента.ОрганизацияПрименяетУСН
	   И СтруктураШапкиДокумента.СложныйУчетНДС
	   И СтрокаВыборки.СтатусПартии <> Перечисления.СтатусыПартийТоваров.ВПереработку*/)
			{
				/*ИмяРегистра = "НДСПартииТоваров";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*// В движениях по регистру "НДС по партиям запасов" должны быть заполнены измерения:
*/
				/*//	- Организация
*/
				/*//	- СчетУчета
*/
				/*//	- Номенклатура
*/
				/*//	- ХарактеристикаНоменклатуры
*/
				/*//	- СерияНоменклатуры
*/
				/*//	- Партия
*/
				/*//	- Заказ
*/
				/*//	- Склад
*/
				/*//
*/
				/*// Ресурсы:
*/
				/*//	- Количество
*/
				/*// Сформируем движение по регистру "НДС по партиям запасов".
*/
				/*НоваяСтрока = СтруктураНаборыЗаписей.НДСПартииТоваров.Добавить();*/
				/*НоваяСтрока.Активность = Истина;*/
				/*НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Приход;*/
				/*НоваяСтрока.Период = СтруктураШапкиДокумента.Дата;*/
				/*НоваяСтрока.Организация = СтруктураШапкиДокумента.Организация;*/
				/*НоваяСтрока.СчетУчета = СтрокаВыборки.СчетДт;*/
				/*НоваяСтрока.Номенклатура = СтрокаВыборки.Номенклатура;*/
				/*НоваяСтрока.ХарактеристикаНоменклатуры = СтрокаВыборки.ХарактеристикаНоменклатуры;*/
				if(true/*СтруктураШапкиДокумента.ПартионныйУчетНДСвРазрезеСерийИХарактеристик
		   И СтрокаВыборки.ВестиПартионныйУчетПоСериям*/)
				{
					/*НоваяСтрока.СерияНоменклатуры = СтрокаВыборки.СерияПродукции;*/
				}
				/*НоваяСтрока.Партия = СтрокаВыборки.ДокументВыпуска;*/
				if(true/*СтрокаВыборки.ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.Переработка
		 ИЛИ СтрокаВыборки.ОбособленныйУчетТоваровПоЗаказамПокупателей*/)
				{
					/*НоваяСтрока.Заказ = СтрокаВыборки.ЗаказПолучательРегл;*/
				}
				if(true/*глЗначениеПеременной("ПараметрыПартионногоУчета").ВестиПартионныйУчетПоСкладамРегл
			И УправлениеЗапасамиПартионныйУчет.ВедетсяСуммовойУчетПоСкладам(СтрокаВыборки.СчетДт)
			И Не СтрокаВыборки.ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.Переработка*/)
				{
					/*НоваяСтрока.Склад = СтрокаВыборки.СкладПолучатель;*/
				}
				/*НоваяСтрока.Количество = СтрокаВыборки.Количество;*/
				/*НоваяСтрока.Стоимость = 0;*/
				/*НоваяСтрока.СписаниеПартий = Истина;*/
			}
		}
		// СформироватьДвиженияПоРегиструНДСПартииТоваров()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО РЕГИСТРУ "НЕЗАВЕРШЕННОЕ ПРОИЗВОДСТВО"
		// Процедура заполняет значения ресурсов регистров учета затрат.
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	Стоимость - Число - Учетная стоимость выпуска
		//	ПостояннаяРазница - Число - Учетная стоимость выпуска в части постоянной разницы
		//	ВременнаяРазница - Число - Учетная стоимость выпуска в части временной разницы
		//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отражения в учете
		//	ИмяРесурсаСтоимость - Строка - Имя для ресурса стоимости
		//	СтрокаДвижения - СтрокаТаблицыЗначений - Текущая строка движения по регистру.
		//

		public void ЗаполнитьЗначенияРесурсовРегистра(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	Стоимость,
	ПостояннаяРазница,
	ВременнаяРазница,
	ВидОтраженияВУчете,
	ИмяРесурсаСтоимость,
	СтрокаДвижения*/)
		{
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете*/)
			{
				/*СтрокаДвижения[ИмяРесурсаСтоимость] = Стоимость;*/
			}
		}
		// ЗаполнитьЗначенияРесурсовРегистра()
		// Процедура формирует движения по регистру "Незавершенное производство".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	КодОперацииНезавершенноеПроизводство - ПеречислениеСсылка.КодыОперацийНезавершенноеПроизводство - Код операции
		//	Количество - Число - Количество выпуска
		//	Стоимость - Число - Учетная стоимость выпуска
		//	ПостояннаяРазница - Число - Учетная стоимость выпуска в части постоянной разницы
		//	ВременнаяРазница - Число - Учетная стоимость выпуска в части временной разницы
		//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отражения в учете
		//	ВидДвижения - ВидДвиженияНакопления - Вид движения
		//	НаборЗаписейНезавершенноеПроизводство - РегистрНакопленияНаборЗаписей - Набор записей регистра накопления "Незавершенное производство".
		//

		public void СформироватьСтрокуДвиженияПоРегиструНезавершенноеПроизводство(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	КодОперацииНезавершенноеПроизводство,
	Количество,
	Стоимость,
	ПостояннаяРазница,
	ВременнаяРазница,
	ВидОтраженияВУчете,
	ВидДвижения,
	НаборЗаписейНезавершенноеПроизводство
	*/)
		{
			if(true/*Количество = 0
	   И Стоимость = 0
	   И ПостояннаяРазница = 0
	   И ВременнаяРазница = 0*/)
			{
			}
			/*// В движениях по регистру "Незавершенное производство" должны быть заполнены измерения:
*/
			/*//	- Организация - заполняется только при отражении документа в бухгалтерском, налоговом или международном учете,
*/
			/*//	- Подразделение,
*/
			/*//	- СчетУчета - заполняется только при отражении документа в бухгалтерском, налоговом или международном учете,
*/
			/*//	- СтатьяЗатрат,
*/
			/*//	- НоменклатурнаяГруппа,
*/
			/*//	- Заказ,
*/
			/*//	- Затрата - всегда заполняется в случае указания статей затрат с видом затрат "Материальные",
*/
			/*//		для нематериальных статей затрат должен заполнятся способ распределения затрат.
*/
			/*//	- ХарактеристикаЗатраты,
*/
			/*//	- СерияЗатраты - заполняется, если ведется учет по сериям в НЗП.
*/
			/*// Сформируем движение по регистру "Незавершенное производство".
*/
			/*НоваяСтрока = НаборЗаписейНезавершенноеПроизводство.Добавить();*/
			/*НоваяСтрока.Активность = Истина;*/
			/*НоваяСтрока.ВидДвижения = ВидДвижения;*/
			/*НоваяСтрока.Период = СтруктураШапкиДокумента.Дата;*/
			/*// Заполнение подразделения и заказа зависит от вида отражения в учете.
*/
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете*/)
			{
				/*НоваяСтрока.Подразделение = СтрокаВыборки.ПодразделениеПолучатель;*/
				/*Заказ = СтрокаВыборки.ЗаказПолучатель;*/
			}
			/*НоваяСтрока.Заказ = ?(ЗначениеЗаполнено(Заказ), Заказ, Неопределено);*/
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете*/)
			{
				if(true/*КодОперацииНезавершенноеПроизводство = Перечисления.КодыОперацийНезавершенноеПроизводство.ОтрицательныеЗатраты*/)
				{
					/*НоваяСтрока.СчетУчета = СтрокаВыборки.СчетЗатрат;*/
				}
			}
			/*НоваяСтрока.СтатьяЗатрат = СтрокаВыборки.СтатьяЗатратПолучатель;*/
			/*НоваяСтрока.НоменклатурнаяГруппа = СтрокаВыборки.НоменклатурнаяГруппаПолучатель;*/
			if(true/*СтрокаВыборки.ВидЗатрат = Перечисления.ВидыЗатрат.Материальные*/)
			{
				if(true/*КодОперацииНезавершенноеПроизводство = Перечисления.КодыОперацийНезавершенноеПроизводство.ОтрицательныеЗатраты*/)
				{
					/*НоваяСтрока.Количество = - Количество;*/
				}
				/*НоваяСтрока.Затрата = СтрокаВыборки.Номенклатура;*/
				if(true/*Не СтрокаВыборки.Услуга*/)
				{
					/*НоваяСтрока.ХарактеристикаЗатраты = СтрокаВыборки.ХарактеристикаНоменклатуры;*/
					if(true/*СтрокаВыборки.ВестиУчетПоСериямВНЗП*/)
					{
						/*НоваяСтрока.СерияЗатраты = СтрокаВыборки.СерияНоменклатуры;*/
					}
				}
			}
			if(true/*СтруктураШапкиДокумента.Свойство("КодОперацииНЗП")*/)
			{
				/*НоваяСтрока.КодОперации = СтруктураШапкиДокумента.КодОперацииНЗП;*/
			}
			if(true/*СтруктураШапкиДокумента.Свойство("СписаниеПартий")*/)
			{
				/*НоваяСтрока.СписаниеПартий = СтруктураШапкиДокумента.СписаниеПартий;*/
			}
			if(true/*КодОперацииНезавершенноеПроизводство = Перечисления.КодыОперацийНезавершенноеПроизводство.ОтрицательныеЗатраты*/)
			{
				/*ЗаполнитьЗначенияРесурсовРегистра(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			- Стоимость,
			- ПостояннаяРазница,
			- ВременнаяРазница,
			ВидОтраженияВУчете,
			"Стоимость",
			НоваяСтрока
			);*/
			}
		}
		// СформироватьСтрокуДвиженияПоРегиструНезавершенноеПроизводство()
		// Процедура формирует движения по регистру "Незавершенное производство".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	ХарактерЗатратУУ - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат для целей управленческого учета
		//	ХарактерЗатратБУ - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат для целей бухгалтерского учета
		//	ХарактерЗатратНУ - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат для целей налогового учета
		//	КодОперацииНезавершенноеПроизводство - ПеречислениеСсылка.КодыОперацийНезавершенноеПроизводство - Код операции
		//	Количество - Число - Количество выпуска
		//	СтоимостьУУ - Число - Учетная стоимость по управленческому учету
		//	СтоимостьБУ - Число - Учетная стоимость по бухгалтерскому учету
		//	СтоимостьНУ - Число - Учетная стоимость по налоговому учету
		//	ПостояннаяРазница - Число - Учетная стоимость в части постоянной разницы
		//	ВременнаяРазница - Число - Учетная стоимость в части временной разницы
		//	ВидДвижения - ВидДвиженияНакопления - Вид движения
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void СформироватьДвиженияПоРегистрамНезавершенноеПроизводство(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	ХарактерЗатратУУ,
	ХарактерЗатратБУ,
	ХарактерЗатратНУ,
	КодОперацииНезавершенноеПроизводство,
	Количество,
	СтоимостьУУ,
	СтоимостьБУ,
	СтоимостьНУ,
	ПостояннаяРазница,
	ВременнаяРазница,
	ВидДвижения,
	СтруктураНаборыЗаписей
	*/)
		{
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете
	   И ХарактерЗатратУУ = Перечисления.ХарактерЗатрат.ПроизводственныеРасходы*/)
			{
				/*ИмяРегистра = "НезавершенноеПроизводство";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*// ПостояннаяРазница,
*/
				/*// ВременнаяРазница,
*/
				/*Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете,
			ВидДвижения,
			СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете
	   И ХарактерЗатратБУ = Перечисления.ХарактерЗатрат.ПроизводственныеРасходы*/)
			{
				/*ИмяРегистра = "НезавершенноеПроизводствоБухгалтерскийУчет";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*// ПостояннаяРазница,
*/
				/*// ВременнаяРазница,
*/
				/*Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете,
			ВидДвижения,
			СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВНалоговомУчете
	   И ХарактерЗатратНУ = Перечисления.ХарактерЗатрат.ПроизводственныеРасходы*/)
			{
				/*ИмяРегистра = "НезавершенноеПроизводствоНалоговыйУчет";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				if(true/*СтрокаВыборки.ВидРасходовНУ = Перечисления.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения
		   И Не СтруктураШапкиДокумента.ПоддержкаПБУ18*/)
				{
				}
				/*СформироватьСтрокуДвиженияПоРегиструНезавершенноеПроизводство(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			КодОперацииНезавершенноеПроизводство,
			Количество,
			СтоимостьНУ,
			ПостояннаяРазница,
			ВременнаяРазница,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВНалоговомУчете,
			ВидДвижения,
			СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
		}
		// СформироватьДвиженияПоРегистрамНезавершенноеПроизводство()
		// Процедура формирует движение расход по регистру "Незавершенное производство".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	КодОперацииНезавершенноеПроизводство - ПеречислениеСсылка.КодыОперацийНезавершенноеПроизводство - Код операции
		//	Количество - Число - Количество выпуска
		//	Стоимость - Число - Учетная стоимость выпуска
		//	ВременнаяРазница - Число - Учетная стоимость выпуска в части временной разницы
		//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отражения в учете
		//	НаборЗаписейНезавершенноеПроизводство - РегистрНакопленияНаборЗаписей - Набор записей регистра накопления "Незавершенное производство".
		//

		public void СформироватьСтрокуРасходПоРегиструНезавершенноеПроизводство(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	КодОперацииНезавершенноеПроизводство,
	Количество,
	Стоимость,
	ВременнаяРазница,
	ВидОтраженияВУчете,
	НаборЗаписейНезавершенноеПроизводство
	*/)
		{
			/*// В движениях по регистру "Незавершенное производство" должны быть заполнены измерения:
*/
			/*//	- Организация - заполняется только при отражении документа в бухгалтерском, налоговом или международном учете,
*/
			/*//	- Подразделение,
*/
			/*//	- СчетУчета - заполняется только при отражении документа в бухгалтерском, налоговом или международном учете,
*/
			/*//	- СтатьяЗатрат,
*/
			/*//	- НоменклатурнаяГруппа,
*/
			/*//	- Заказ,
*/
			/*//	- Затрата - всегда заполняется в случае указания статей затрат с видом затрат "Материальные",
*/
			/*//		для нематериальных статей затрат должен заполнятся способ распределения затрат.
*/
			/*//	- ХарактеристикаЗатраты,
*/
			/*//	- СерияЗатраты - заполняется, если ведется учет по сериям в НЗП.
*/
			/*// Сформируем движение по регистру "Незавершенное производство".
*/
			/*НоваяСтрока = НаборЗаписейНезавершенноеПроизводство.Добавить();*/
			/*НоваяСтрока.Активность = Истина;*/
			/*НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Расход;*/
			/*НоваяСтрока.Период = СтруктураШапкиДокумента.Дата;*/
			/*// Заполнение подразделения и заказа зависит от вида отражения в учете.
*/
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете*/)
			{
				/*НоваяСтрока.Подразделение = СтруктураШапкиДокумента.Подразделение;*/
				/*Заказ = СтрокаВыборки.Заказ;*/
			}
			/*НоваяСтрока.Заказ = ?(ЗначениеЗаполнено(Заказ), Заказ, Неопределено);*/
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете*/)
			{
				/*НоваяСтрока.СчетУчета = СтрокаВыборки.СчетЗатрат;*/
			}
			/*НоваяСтрока.СтатьяЗатрат = СтрокаВыборки.СтатьяЗатрат;*/
			/*НоваяСтрока.НоменклатурнаяГруппа = СтрокаВыборки.НоменклатурнаяГруппа;*/
			if(true/*СтрокаВыборки.ВидЗатрат = Перечисления.ВидыЗатрат.Материальные*/)
			{
				/*НоваяСтрока.Количество = Количество;*/
				/*НоваяСтрока.Затрата = СтрокаВыборки.Номенклатура;*/
				if(true/*Не СтрокаВыборки.Услуга*/)
				{
					/*НоваяСтрока.ХарактеристикаЗатраты = СтрокаВыборки.ХарактеристикаНоменклатуры;*/
					if(true/*СтрокаВыборки.ВестиУчетПоСериямВНЗП*/)
					{
						/*НоваяСтрока.СерияЗатраты = СтрокаВыборки.СерияНоменклатуры;*/
					}
				}
			}
			/*НоваяСтрока.КодОперации = КодОперацииНезавершенноеПроизводство;*/
			/*НоваяСтрока.СписаниеПартий = Истина;*/
			/*// ПостояннаяРазница,
*/
			/*ВременнаяРазница,
		ВидОтраженияВУчете,
		"Стоимость",
		НоваяСтрока
		);*/
		}
		// СформироватьСтрокуРасходПоРегиструНезавершенноеПроизводство()
		// Процедура формирует движения расход по регистру "Незавершенное производство".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	ХарактерЗатратУУ - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат для целей управленческого учета
		//	ХарактерЗатратБУ - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат для целей бухгалтерского учета
		//	ХарактерЗатратНУ - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат для целей налогового учета
		//	КодОперацииНезавершенноеПроизводство - ПеречислениеСсылка.КодыОперацийНезавершенноеПроизводство - Код операции
		//	Количество - Число - Количество выпуска
		//	СтоимостьУУ - Число - Учетная стоимость по управленческому учету
		//	СтоимостьБУ - Число - Учетная стоимость по бухгалтерскому учету
		//	СтоимостьНУ - Число - Учетная стоимость по налоговому учету
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void СформироватьДвиженияРасходПоРегиструНезавершенноеПроизводство(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	ХарактерЗатратУУ,
	ХарактерЗатратБУ,
	ХарактерЗатратНУ,
	КодОперацииНезавершенноеПроизводство,
	Количество,
	СтоимостьУУ,
	СтоимостьБУ,
	СтоимостьНУ,
	СтруктураНаборыЗаписей
	*/)
		{
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете
	   И ХарактерЗатратУУ = Перечисления.ХарактерЗатрат.ПроизводственныеРасходы*/)
			{
				/*ИмяРегистра = "НезавершенноеПроизводство";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*СформироватьСтрокуРасходПоРегиструНезавершенноеПроизводство(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			КодОперацииНезавершенноеПроизводство,
			Количество,
			СтоимостьУУ,
			0,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете,
			СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете
	   И ХарактерЗатратБУ = Перечисления.ХарактерЗатрат.ПроизводственныеРасходы*/)
			{
				/*ИмяРегистра = "НезавершенноеПроизводствоБухгалтерскийУчет";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*СформироватьСтрокуРасходПоРегиструНезавершенноеПроизводство(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			КодОперацииНезавершенноеПроизводство,
			Количество,
			СтоимостьБУ,
			0,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете,
			СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВНалоговомУчете
	   И ХарактерЗатратНУ = Перечисления.ХарактерЗатрат.ПроизводственныеРасходы*/)
			{
				/*ИмяРегистра = "НезавершенноеПроизводствоНалоговыйУчет";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*СформироватьСтрокуРасходПоРегиструНезавершенноеПроизводство(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			КодОперацииНезавершенноеПроизводство,
			Количество,
			СтоимостьНУ,
			СтоимостьБУ - СтоимостьНУ,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВНалоговомУчете,
			СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
		}
		// СформироватьДвиженияРасходПоРегиструНезавершенноеПроизводство()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО РЕГИСТРУ "ЗАТРАТЫ"
		// Процедура формирует движения по регистру "Затраты".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	Проект - СправочникСсылка.Проекты или СправочникСсылка.ВидыРаспределенияПоПроектам - Проект для учета затрат
		//	Стоимость - Число - Учетная стоимость выпуска
		//	ПостояннаяРазница - Число - Учетная стоимость выпуска в части постоянной разницы
		//	ВременнаяРазница - Число - Учетная стоимость выпуска в части временной разницы
		//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отражения в учете
		//	ВидДвижения - ВидДвиженияНакопления - Вид движения
		//	НаборЗаписейЗатраты - РегистрНакопленияНаборЗаписей - Набор записей регистра накопления "Затраты".
		//

		public void СформироватьСтрокуДвиженияПоРегиструЗатраты(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	Проект,
	Сумма,
	ПостояннаяРазница,
	ВременнаяРазница,
	ВидОтраженияВУчете,
	ВидДвижения,
	НаборЗаписейЗатраты
	*/)
		{
			if(true/*Сумма = 0
	   И ПостояннаяРазница = 0
	   И ВременнаяРазница = 0*/)
			{
			}
			/*// В движениях по регистру "Затраты" должны быть заполнены измерения:
*/
			/*//	- Организация - заполняется только при отражении документа в бухгалтерском, налоговом или международном учете,
*/
			/*//	- Подразделение,
*/
			/*//	- СчетУчета - заполняется только при отражении документа в бухгалтерском или налоговом или международном учете,
*/
			/*//	- СтатьяЗатрат,
*/
			/*//	- НоменклатурнаяГруппа,
*/
			/*//	- Заказ
*/
			/*//	- Проект
*/
			/*// Сформируем движение по регистру "Затраты".
*/
			/*НоваяСтрока = НаборЗаписейЗатраты.Добавить();*/
			/*НоваяСтрока.Активность = Истина;*/
			/*НоваяСтрока.ВидДвижения = ВидДвижения;*/
			/*//Для некоторых видов документов движения по регистру могут формироваться датой оплаты а не датой документа
*/
			if(true/*ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.ПлатежноеПоручениеВходящее")
		ИЛИ ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.ПлатежныйОрдерПоступлениеДенежныхСредств")*/)
			{
				/*НоваяСтрока.Период = УправлениеДенежнымиСредствами.ПолучитьДатуДвижений(СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.ДатаОплаты);*/
			}
			/*// Заполнение подразделения и заказа зависит от вида отражения в учете.
*/
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете*/)
			{
				/*НоваяСтрока.Подразделение = СтрокаВыборки.ПодразделениеПолучатель;*/
				/*НоваяСтрока.Проект = ?(ЗначениеЗаполнено(Проект), Проект, Неопределено);*/
				/*Заказ = СтрокаВыборки.ЗаказПолучатель;*/
			}
			/*НоваяСтрока.Заказ = ?(ЗначениеЗаполнено(Заказ), Заказ, Неопределено);*/
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете*/)
			{
				/*НоваяСтрока.СчетУчета = СтрокаВыборки.СчетДт;*/
			}
			/*НоваяСтрока.СтатьяЗатрат = СтрокаВыборки.СтатьяЗатратПолучатель;*/
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	   И СтрокаВыборки.ХарактерЗатрат = Перечисления.ХарактерЗатрат.Прочие*/)
			{
				/*НоваяСтрока.НоменклатурнаяГруппа = Неопределено;*/
			}
			if(true/*СтруктураШапкиДокумента.Свойство("КодОперации")*/)
			{
				/*НоваяСтрока.КодОперации = СтруктураШапкиДокумента.КодОперации;*/
			}
			if(true/*СтруктураШапкиДокумента.Свойство("СписаниеПартий")*/)
			{
				/*НоваяСтрока.СписаниеПартий = СтруктураШапкиДокумента.СписаниеПартий;*/
			}
			/*ЗаполнитьЗначенияРесурсовРегистра(
		СтруктураШапкиДокумента,
		СтрокаВыборки,
		Сумма,
		ПостояннаяРазница,
		ВременнаяРазница,
		ВидОтраженияВУчете,
		"Сумма",
		НоваяСтрока
		);*/
		}
		// СформироватьСтрокуДвиженияПоРегиструЗатраты()
		// Функция проверяет характер затрат на необходимость отражения в регистре "Затраты".
		//
		// Параметры
		//	ХарактерЗатрат – ПеречислениеСсылка.ХарактерЗатрат – Проверяемый характер затрат
		//
		// Возвращаемое значение:
		//	Булево – Истина - расходы отражаются в регистре "Затраты",
		//			 Ложь - расходы не отражаются в регистре "Затраты".
		//

		public object ПроверитьХарактерЗатратДляРегистраЗатраты(/*ХарактерЗатрат, ОтражатьВУправленческомУчете = Ложь*/)
		{
			if(true/*ХарактерЗатрат = Перечисления.ХарактерЗатрат.ОбщепроизводственныеРасходы
	 ИЛИ ХарактерЗатрат = Перечисления.ХарактерЗатрат.ОбщехозяйственныеРасходы
	 ИЛИ ХарактерЗатрат = Перечисления.ХарактерЗатрат.ИздержкиОбращения
	 ИЛИ ХарактерЗатрат = Перечисления.ХарактерЗатрат.КоммерческиеРасходы*/)
			{
				/*ОтражатьВРегистреЗатраты = Истина;*/
			}
			return null;
		}
		// ПроверитьХарактерЗатратДляРегистраЗатраты()
		// Процедура формирует движения по регистру "Затраты".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	КодОперацииВыпускПродукцииУУ - ПеречислениеСсылка.КодыОперацийВыпускПродукции - Код операции по управленческому учету
		//	КодОперацииВыпускПродукцииБУ - ПеречислениеСсылка.КодыОперацийВыпускПродукции - Код операции по бухгалтерскому учету
		//	КодОперацииВыпускПродукцииНУ - ПеречислениеСсылка.КодыОперацийВыпускПродукции - Код операции по налоговому учету
		//	СтоимостьУУ - Число - Учетная стоимость по управленческому учету
		//	СтоимостьБУ - Число - Учетная стоимость по бухгалтерскому учету
		//	СтоимостьНУ - Число - Учетная стоимость по налоговому учету
		//	ПостояннаяРазница - Число - Учетная стоимость в части постоянной разницы
		//	ВременнаяРазница - Число - Учетная стоимость в части временной разницы
		//	ВидДвижения - ВидДвиженияНакопления - Вид движения
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void СформироватьДвиженияПоРегистрамЗатраты(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	ХарактерЗатратУУ,
	ХарактерЗатратБУ,
	ХарактерЗатратНУ,
	СтоимостьУУ,
	СтоимостьБУ,
	СтоимостьНУ,
	ПостояннаяРазница,
	ВременнаяРазница,
	ВидДвижения,
	СтруктураНаборыЗаписей
	*/)
		{
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете
	   И ПроверитьХарактерЗатратДляРегистраЗатраты(ХарактерЗатратУУ, Истина)*/)
			{
				/*ИмяРегистра = "Затраты";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*РаспределитьСуммуЗатратПоПроектам(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			СтоимостьУУ,
			ВидДвижения,
			СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете
	   И ПроверитьХарактерЗатратДляРегистраЗатраты(ХарактерЗатратБУ)*/)
			{
				/*ИмяРегистра = "ЗатратыБухгалтерскийУчет";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*// Проект
*/
				/*// ПостояннаяРазница
*/
				/*// ВременнаяРазница
*/
				/*Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете,
			ВидДвижения,
			СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВНалоговомУчете
	   И ПроверитьХарактерЗатратДляРегистраЗатраты(ХарактерЗатратНУ)*/)
			{
				/*ИмяРегистра = "ЗатратыНалоговыйУчет";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				if(true/*СтрокаВыборки.ВидРасходовНУ = Перечисления.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения
		   И Не СтруктураШапкиДокумента.ПоддержкаПБУ18*/)
				{
				}
				/*// Проект
*/
				/*СтоимостьНУ,
			ПостояннаяРазница,
			ВременнаяРазница,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВНалоговомУчете,
			ВидДвижения,
			СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
		}
		// СформироватьДвиженияПоРегистрамЗатраты()
		// Процедура выполняет распределение затрат по проектам.
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	Стоимость - Число - Стоимость затрат
		//	ВидДвижения - ВидДвиженияНакопления - Вид движения
		//	НаборЗаписейЗатраты - РегистрНакопленияНаборЗаписей - Набор записей регистра накопления "Затраты".
		//

		public void РаспределитьСуммуЗатратПоПроектам(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	Стоимость,
	ВидДвижения,
	НаборЗаписейЗатраты
	*/)
		{
			if(true/*Не СтруктураШапкиДокумента.ВедениеУчетаЗатратПоПроектам*/)
			{
				/*Проект = Справочники.Проекты.ПустаяСсылка();*/
			}
			/*ВсегоБазаРаспределения = 0;*/
			if(true/*ЗначениеЗаполнено(Проект)
	   И ТипЗнч(Проект) = Тип("СправочникСсылка.ВидыРаспределенияПоПроектам")*/)
			{
				/*МассивСтрок = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьМассивРаспределенияПоПроектам(
			СтруктураШапкиДокумента,
			Проект
		);*/
				/*МассивКоэф = Новый Массив;*/
				if(true/*ВсегоБазаРаспределения = 0*/)
				{
					/*ОбщегоНазначения.Сообщение("Не удалось выполнить распределение затрат по виду распределения """ + Проект + """", СтатусСообщения.Внимание);*/
					/*Проект = Справочники.Проекты.ПустаяСсылка();*/
				}
			}
			if(true/*ВсегоБазаРаспределения <> 0*/)
			{
				/*МассивСтоимость = ОбщегоНазначения.РаспределитьПропорционально(Стоимость, МассивКоэф, 2);*/
				/*Индекс = 0;*/
			}
		}
		// РаспределитьСуммуЗатратПоПроектам()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО РЕГИСТРУ "МАТЕРИАЛЫ В ПРОИЗВОДСТВЕ"
		// Процедура формирует движения по регистру "Материалы в производстве".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	ХарактерЗатратУУ - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат для целей управленческого учета
		//	Количество - Число - Количество выпуска
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void СформироватьДвиженияПоРегиструМатериалыВПроизводстве(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	ХарактерЗатратУУ,
	Количество,
	СтруктураНаборыЗаписей
	*/)
		{
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете
	   И ХарактерЗатратУУ = Перечисления.ХарактерЗатрат.ПроизводственныеРасходы
	   И СтрокаВыборки.ВестиОперативныйУчетОстатковНЗП*/)
			{
				/*ИмяРегистра = "МатериалыВПроизводстве";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*// Сформируем движение по регистру "Материалы в производстве".
*/
				/*НоваяСтрока = СтруктураНаборыЗаписей.МатериалыВПроизводстве.Добавить();*/
				/*НоваяСтрока.Активность = Истина;*/
				/*НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Приход;*/
				/*НоваяСтрока.Период = СтруктураШапкиДокумента.Дата;*/
				/*НоваяСтрока.Подразделение = СтрокаВыборки.ПодразделениеПолучатель;*/
				/*НоваяСтрока.Заказ = СтрокаВыборки.ЗаказПолучатель;*/
				/*НоваяСтрока.Затрата = СтрокаВыборки.Номенклатура;*/
				/*НоваяСтрока.ХарактеристикаЗатраты = СтрокаВыборки.ХарактеристикаНоменклатуры;*/
				if(true/*СтрокаВыборки.ВестиУчетПоСериямВНЗП*/)
				{
					/*НоваяСтрока.СерияЗатраты = СтрокаВыборки.СерияНоменклатуры;*/
				}
				/*НоваяСтрока.Количество = Количество;*/
				/*НоваяСтрока.КодОперации = Перечисления.КодыОперацийМатериалыВПроизводстве.СписаниеПартийВПроизводствоОперативно;*/
			}
		}
		// СформироватьДвиженияПоРегиструМатериалыВПроизводстве()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО РЕГИСТРУ "БРАК В ПРОИЗВОДСТВЕ"
		// Процедура формирует движения по регистру "Брак в производстве".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	Стоимость - Число - Учетная стоимость выпуска
		//	ПостояннаяРазница - Число - Учетная стоимость выпуска в части постоянной разницы
		//	ВременнаяРазница - Число - Учетная стоимость выпуска в части временной разницы
		//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отражения в учете
		//	ВидДвижения - ВидДвиженияНакопления - Вид движения
		//	НаборЗаписейБракВПроизводстве - РегистрНакопленияНаборЗаписей - Набор записей регистра накопления "Брак в производстве".
		//

		public void СформироватьСтрокуДвиженияПоРегиструБракВПроизводстве(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	Сумма,
	ПостояннаяРазница,
	ВременнаяРазница,
	ВидОтраженияВУчете,
	ВидДвижения,
	НаборЗаписейБракВПроизводстве
	*/)
		{
			if(true/*Сумма = 0
	   И ПостояннаяРазница = 0
	   И ВременнаяРазница = 0*/)
			{
			}
			/*// Сформируем движение по регистру "Брак в производстве".
*/
			/*НоваяСтрока = НаборЗаписейБракВПроизводстве.Добавить();*/
			/*НоваяСтрока.Активность = Истина;*/
			/*НоваяСтрока.ВидДвижения = ВидДвижения;*/
			/*НоваяСтрока.Период = СтруктураШапкиДокумента.Дата;*/
			/*// Заполнение подразделения и заказа зависит от вида отражения в учете.
*/
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете*/)
			{
				/*НоваяСтрока.Подразделение = СтрокаВыборки.ПодразделениеПолучатель;*/
				/*Заказ = СтрокаВыборки.ЗаказПолучатель;*/
			}
			/*НоваяСтрока.Заказ = ?(ЗначениеЗаполнено(Заказ), Заказ, Неопределено);*/
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете*/)
			{
				/*НоваяСтрока.СчетУчета = СтрокаВыборки.СчетДт;*/
			}
			/*НоваяСтрока.СтатьяЗатрат = СтрокаВыборки.СтатьяЗатратПолучатель;*/
			/*НоваяСтрока.НоменклатурнаяГруппа = СтрокаВыборки.НоменклатурнаяГруппаПолучатель;*/
			/*НоваяСтрока.Продукция = СтрокаВыборки.ПродукцияПолучатель;*/
			/*НоваяСтрока.ХарактеристикаПродукции = СтрокаВыборки.ХарактеристикаПродукцииПолучатель;*/
			/*НоваяСтрока.СерияПродукции = СтрокаВыборки.СерияПродукцииПолучатель;*/
			/*НоваяСтрока.КодОперации = Перечисления.КодыОперацийБракВПроизводстве.ВнутренниеУслугиНаПостоянныеЗатраты;*/
			if(true/*СтруктураШапкиДокумента.Свойство("СписаниеПартий")*/)
			{
				/*НоваяСтрока.СписаниеПартий = СтруктураШапкиДокумента.СписаниеПартий;*/
			}
			/*ЗаполнитьЗначенияРесурсовРегистра(
		СтруктураШапкиДокумента,
		СтрокаВыборки,
		Сумма,
		ПостояннаяРазница,
		ВременнаяРазница,
		ВидОтраженияВУчете,
		"Сумма",
		НоваяСтрока
		);*/
		}
		// СформироватьСтрокуДвиженияПоРегиструБракВПроизводстве()
		// Процедура формирует движения по регистру "Брак в производстве".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	КодОперацииВыпускПродукцииУУ - ПеречислениеСсылка.КодыОперацийВыпускПродукции - Код операции по управленческому учету
		//	КодОперацииВыпускПродукцииБУ - ПеречислениеСсылка.КодыОперацийВыпускПродукции - Код операции по бухгалтерскому учету
		//	КодОперацииВыпускПродукцииНУ - ПеречислениеСсылка.КодыОперацийВыпускПродукции - Код операции по налоговому учету
		//	СтоимостьУУ - Число - Учетная стоимость по управленческому учету
		//	СтоимостьБУ - Число - Учетная стоимость по бухгалтерскому учету
		//	СтоимостьНУ - Число - Учетная стоимость по налоговому учету
		//	ПостояннаяРазница - Число - Учетная стоимость в части постоянной разницы
		//	ВременнаяРазница - Число - Учетная стоимость в части временной разницы
		//	ВидДвижения - ВидДвиженияНакопления - Вид движения
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void СформироватьДвиженияПоРегистрамБракВПроизводстве(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	ХарактерЗатратУУ,
	ХарактерЗатратБУ,
	ХарактерЗатратНУ,
	СтоимостьУУ,
	СтоимостьБУ,
	СтоимостьНУ,
	ПостояннаяРазница,
	ВременнаяРазница,
	ВидДвижения,
	СтруктураНаборыЗаписей
	*/)
		{
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете
	   И ХарактерЗатратУУ = Перечисления.ХарактерЗатрат.БракВПроизводстве*/)
			{
				/*ИмяРегистра = "БракВПроизводстве";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*// ПостояннаяРазница
*/
				/*// ВременнаяРазница
*/
				/*Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете,
			ВидДвижения,
			СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете
	   И ХарактерЗатратБУ = Перечисления.ХарактерЗатрат.БракВПроизводстве*/)
			{
				/*ИмяРегистра = "БракВПроизводствеБухгалтерскийУчет";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*// ПостояннаяРазница
*/
				/*// ВременнаяРазница
*/
				/*Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете,
			ВидДвижения,
			СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВНалоговомУчете
	   И ХарактерЗатратНУ = Перечисления.ХарактерЗатрат.БракВПроизводстве*/)
			{
				/*ИмяРегистра = "БракВПроизводствеНалоговыйУчет";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				if(true/*СтрокаВыборки.ВидРасходовНУ = Перечисления.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения
		   И Не СтруктураШапкиДокумента.ПоддержкаПБУ18*/)
				{
				}
				/*СформироватьСтрокуДвиженияПоРегиструБракВПроизводстве(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			СтоимостьНУ,
			ПостояннаяРазница,
			ВременнаяРазница,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВНалоговомУчете,
			ВидДвижения,
			СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
		}
		// СформироватьДвиженияПоРегистрамБракВПроизводстве()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО РЕГИСТРАМ БУХГАЛТЕРИИ
		// Функция проверяет заполнение счета затрат и счета дебета выпуска продукции.
		//
		// Параметры
		//  СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки из результата запроса
		//	СчетЗатрат - ПланыСчетов.Хозрасчетный или ПланыСчетов.Налоговый - Текущий счет затрат
		//	СчетДт - ПланыСчетов.Хозрасчетный или ПланыСчетов.Налоговый - Текущий счет выпуска
		//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отражения в учете
		//
		// Возвращаемое значение:
		//   Булево – 	Истина - проверка прошла успешно,
		//				Ложь - обнаружены ошибки заполнения счетов.
		//

		public object ПроверитьСчетЗатратИСчетДебетаПоВидуОтраженияВУчете(/*
	СтрокаВыборки,
	СчетЗатрат, 
	СчетДт,
	ВидОтраженияВУчете
	*/)
		{
			/*ПроверкаПройдена = Истина;*/
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете*/)
			{
				/*ТекстОтраженияВУчете = "по бухгалтерскому учету";*/
			}
			if(true/*Не ЗначениеЗаполнено(СчетДт)*/)
			{
				/*ОбщегоНазначения.Сообщение("Не указан счет дебета выпуска продукции (услуг) " + ТекстОтраженияВУчете + ":
		|Номенклатурная группа: " + СтрокаВыборки.НоменклатурнаяГруппа + "
		|Продукция: " + СтрокаВыборки.Продукция + ", " + 
			СтрокаВыборки.ХарактеристикаПродукции + ", " + 
			СтрокаВыборки.СерияПродукции + "
		|Заказ: " + СтрокаВыборки.Заказ + "
		|Спецификация: " + СтрокаВыборки.Спецификация + "
		|Проводка по выпуску продукции (услуг) не сформирована!
		|", СтатусСообщения.Важное);*/
				/*ПроверкаПройдена = Ложь;*/
			}
			if(true/*Не ЗначениеЗаполнено(СчетЗатрат)*/)
			{
				/*ОбщегоНазначения.Сообщение("Не указан счет затрат выпуска продукции (услуг) " + ТекстОтраженияВУчете + ":
		|Номенклатурная группа: " + СтрокаВыборки.НоменклатурнаяГруппа + "
		|Продукция: " + СтрокаВыборки.Продукция + ", " + 
			СтрокаВыборки.ХарактеристикаПродукции + ", " + 
			СтрокаВыборки.СерияПродукции + "
		|Заказ: " + СтрокаВыборки.Заказ + "
		|Спецификация: " + СтрокаВыборки.Спецификация + "
		|Проводка по выпуску продукции (услуг) не сформирована!
		|", СтатусСообщения.Важное);*/
				/*ПроверкаПройдена = Ложь;*/
			}
			return null;
		}
		// ПроверитьСчетЗатратИСчетДебетаПоВидуОтраженияВУчете()
		// Процедура формирует проводку по выпуску продукции.
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура – Реквизиты документа
		//  Сумма - Число - Сумма проводки
		//  ХарактерЗатрат - ПеречислениеСсылка.ХарактерЗатрат - характер затрат, по которому отражается списание продукции на расходы
		//	КодОперации - ПеречислениеСсылка.КодыОперацийВыпускПродукции - код операции выпуска продукции
		//  ВидУчетаПоПБУ18 - ПеречислениеСсылка.ВидыУчетаПоПБУ18 - Вид учета по ПБУ18/02, для которого формируется проводка
		//  СтрокаОбхода - ОбходРезультатаЗапроса - Текущая строка обхода результата запроса
		//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отражения в учете
		//	УчетнаяПолитикаБух - Структура - Учетная политика по бухгалтерскому учету
		//	СоответствиеКодОперацииСодержание - Соответствие - Соответствие кода операции выпуска и содержания проводки
		//  РегистрБухгалтерииНаборЗаписей - РегистрБухгалтерииНаборЗаписей - Набор записей регистра бухгалтерии.
		//

		public void СформироватьПроводкуПоРегиструБухгалтерии(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	ХарактерЗатрат,
	КодОперации,
	ВидУчетаПоПБУ18,
	ВидОтраженияВУчете,
	Сумма,
	УчетнаяПолитикаБух,
	СоответствиеКодОперацииСодержание,
	РегистрБухгалтерииНаборЗаписей
	*/)
		{
			/*// Давальческое сырье не отражается в движениях регистра по налоговому учету.
*/
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВНалоговомУчете
	   И СтрокаВыборки.СтатусМатериальныхЗатрат = Перечисления.СтатусыМатериальныхЗатратНаПроизводство.ПринятыеВПереработку*/)
			{
			}
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете*/)
			{
				/*СчетДт = СтрокаВыборки.СчетДт;*/
				/*СчетЗатрат = СтрокаВыборки.СчетЗатрат;*/
			}
			if(true/*Не ПроверитьСчетЗатратИСчетДебетаПоВидуОтраженияВУчете(СтрокаВыборки, СчетЗатрат, СчетДт, ВидОтраженияВУчете)*/)
			{
			}
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете*/)
			{
				/*КоличествоДт = ?(СтрокаВыборки.СчетДтКоличественный, СтрокаВыборки.Количество, 0);*/
			}
			if(true/*Сумма = 0 И КоличествоДт = 0*/)
			{
			}
			if(true/*КодОперации = Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииФиксНаСклад
	 ИЛИ КодОперации = Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииФиксВнешниеУслуги
	 ИЛИ КодОперации = Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииФиксВнутрУслугиНаПостЗатраты
	 ИЛИ КодОперации = Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииФиксВнутрУслугиНаПроизводство
	 ИЛИ КодОперации = Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииФиксВнутрУслугиНаСчет*/)
			{
				/*НоваяПроводка = РегистрБухгалтерииНаборЗаписей.Добавить();*/
				/*НоваяПроводка.Организация = СтруктураШапкиДокумента.Организация;*/
				/*НоваяПроводка.Активность = Истина;*/
				/*НоваяПроводка.Период = СтруктураШапкиДокумента.Дата;*/
				/*НоваяПроводка.Содержание = ПроцедурыРасчетаСебестоимостиВыпуска.ПолучитьСодержаниеПроводкиПоКодуОперации(КодОперации, СоответствиеКодОперацииСодержание);*/
				/*НоваяПроводка.СписаниеПартий = Истина;*/
				/*НоваяПроводка.Сумма = Сумма;*/
				/*НоваяПроводка.СчетДт = СчетДт;*/
				/*НоваяПроводка.КоличествоДт = КоличествоДт;*/
				if(true/*КодОперации = Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииФиксНаСклад*/)
				{
					/*БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "Номенклатура", СтрокаВыборки.Продукция);*/
					/*БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "Склады", СтрокаВыборки.СкладПолучатель);*/
				}
				if(true/*УчетнаяПолитикаБух.ВариантУчетаВыпускаГотовойПродукции = Перечисления.ВариантыУчетаВыпускаГотовойПродукции.СИспользованиемСчета40*/)
				{
					if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете*/)
					{
						/*СчетКт = ПланыСчетов.Хозрасчетный.ВыпускПродукции;*/
					}
				}
				/*НоваяПроводка.СчетКт = СчетКт;*/
				/*БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "Подразделения", СтруктураШапкиДокумента.ПодразделениеОрганизации);*/
				/*БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "НоменклатурныеГруппы", СтрокаВыборки.НоменклатурнаяГруппа);*/
				if(true/*УчетнаяПолитикаБух.ВариантУчетаВыпускаГотовойПродукции = Перечисления.ВариантыУчетаВыпускаГотовойПродукции.СИспользованиемСчета40*/)
				{
					/*БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "ВидыСтоимости", Перечисления.ВидыСтоимости.Плановая);*/
				}
				if(true/*ВидУчетаПоПБУ18 = Перечисления.ВидыУчетаПоПБУ18.ВР
		 ИЛИ ВидУчетаПоПБУ18 = Перечисления.ВидыУчетаПоПБУ18.ПР*/)
				{
					/*НоваяПроводка.ВидУчетаДт = ВидУчетаПоПБУ18;*/
					/*НоваяПроводка.ВидУчетаКт = ВидУчетаПоПБУ18;*/
				}
			}
		}
		// СформироватьПроводкуПоРегиструБухгалтерии()
		// Процедура формирует движения по регистрам бухгалтерии "Хозрасчетный" и "Налоговый".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	СтоимостьБУ - Число - Учетная стоимость по бухгалтерскому учету
		//	СтоимостьНУ - Число - Учетная стоимость по налоговому учету
		//	ХарактерЗатратБУ - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат для целей бухгалтерского учета
		//	ХарактерЗатратНУ - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат для целей налогового учета
		//	КодОперацииВыпускПродукцииБУ - ПеречислениеСсылка.КодыОперацийВыпускПродукции - Код операции по бухгалтерскому учету
		//	КодОперацииВыпускПродукцииНУ - ПеречислениеСсылка.КодыОперацийВыпускПродукции - Код операции по налоговому учету
		//	УчетнаяПолитикаБух - Структура - Учетная политика по бухгалтерскому учету
		//	СоответствиеКодОперацииСодержание - Соответствие - Соответствие кода операции выпуска и содержания проводки
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void СформироватьДвиженияПоРегиструБухгалтерии(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	ХарактерЗатратБУ,
	ХарактерЗатратНУ,
	КодОперацииВыпускПродукцииБУ,
	КодОперацииВыпускПродукцииНУ,
	СтоимостьБУ,
	СтоимостьНУ,
	УчетнаяПолитикаБух,
	СоответствиеКодОперацииСодержание,
	СтруктураНаборыЗаписей
	*/)
		{
			if(true/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете*/)
			{
				/*ИмяРегистра = "Хозрасчетный";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*СформироватьПроводкуПоРегиструБухгалтерии(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			ХарактерЗатратБУ,
			КодОперацииВыпускПродукцииБУ,
			Неопределено,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете,
			СтоимостьБУ,
			УчетнаяПолитикаБух,
			СоответствиеКодОперацииСодержание,
			СтруктураНаборыЗаписей[ИмяРегистра]
			);*/
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВНалоговомУчете*/)
			{
				/*ИмяРегистра = "Налоговый";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*СформироватьПроводкуПоРегиструБухгалтерии(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			ХарактерЗатратНУ,
			КодОперацииВыпускПродукцииНУ,
			Перечисления.ВидыУчетаПоПБУ18.НУ,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВНалоговомУчете,
			СтоимостьНУ,
			УчетнаяПолитикаБух,
			СоответствиеКодОперацииСодержание,
			СтруктураНаборыЗаписей[ИмяРегистра]
			);*/
				if(true/*СтруктураШапкиДокумента.ПоддержкаПБУ18
		   И (СтоимостьБУ - СтоимостьНУ) <> 0*/)
				{
					/*СформироватьПроводкуПоРегиструБухгалтерии(
				СтруктураШапкиДокумента,
				СтрокаВыборки,
				ХарактерЗатратНУ,
				КодОперацииВыпускПродукцииНУ,
				Перечисления.ВидыУчетаПоПБУ18.ВР,
				Перечисления.ВидыОтраженияВУчете.ОтражатьВНалоговомУчете,
				(СтоимостьБУ - СтоимостьНУ),
				УчетнаяПолитикаБух,
				СоответствиеКодОперацииСодержание,
				СтруктураНаборыЗаписей[ИмяРегистра]
				);*/
				}
			}
		}
		// СформироватьДвиженияПоРегиструБухгалтерии()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО ВЫПУСКУ ПРОДУКЦИИ
		// Процедура формирует движений по выпуску продукции (наработка).
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	РезультатЗапросаПоВыпуску - РезультатЗапроса - Результат запроса по выпуску продукции
		//	СтруктураКлючиАналитики - Структура - Структура с таблицами ключей аналитики для кэширования данных
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void СформироватьДвиженияВыпускПродукцииНаработка(/*
	СтруктураШапкиДокумента,
	РезультатЗапросаПоВыпуску,
	СтруктураКлючиАналитики,
	СтруктураНаборыЗаписей
	*/)
		{
			/*ВыборкаПоВыпускуПродукции = РезультатЗапросаПоВыпуску.Выбрать();*/
			while(true/*ВыборкаПоВыпускуПродукции.Следующий()*/)
			{
				if(true/*СтруктураШапкиДокумента.ИспользоватьРасширеннуюАналитику*/)
				{
					/*// СтоимостьУУ,
*/
					/*// СтоимостьБУ,
*/
					/*// СтоимостьНУ,
*/
					/*СтруктураКлючиАналитики,
				СтруктураНаборыЗаписей
			);*/
				}
			}
			/*;;*/
		}
		// СформироватьДвиженияВыпускПродукцииНаработка()
		// Функция получает массив строк распредедения по проектам для строки выпуска продукции.
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//
		// Возвращаемое значение:
		//	Массив - Массив строк базы распределения
		//

		public object ПолучитьМассивРаспределенияВыпускаПродукцииПоПроектам(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки
	*/)
		{
			if(true/*Не СтруктураШапкиДокумента.ОтражатьВУправленческомУчете
	 ИЛИ Не СтруктураШапкиДокумента.ВедениеУчетаЗатратПоПроектам*/)
			{
				/*Проект = Справочники.Проекты.ПустаяСсылка();*/
			}
			if(true/*ЗначениеЗаполнено(Проект)
	   И ТипЗнч(Проект) = Тип("СправочникСсылка.ВидыРаспределенияПоПроектам")*/)
			{
				/*МассивСтрок = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьМассивРаспределенияПоПроектам(
			СтруктураШапкиДокумента,
			Проект
		);*/
			}
			return null;
		}
		// ПолучитьМассивРаспределенияВыпускаПродукцииПоПроектам()
		// Процедура формирует движения по выпуску продукции.
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	ВыборкаПоВыпускуПродукции - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	ХарактерЗатратУУ - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат по управленческому учету
		//	ХарактерЗатратБУ - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат по бухгалтерскому учету
		//	ХарактерЗатратНУ - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат по налоговому учету
		//	КодОперацииВыпускПродукцииУУ - ПеречислениеСсылка.КодыОперацийВыпускПродукции - Код операции по управленческому учету
		//	КодОперацииВыпускПродукцииБУ - ПеречислениеСсылка.КодыОперацийВыпускПродукции - Код операции по бухгалтерскому учету
		//	КодОперацииВыпускПродукцииНУ - ПеречислениеСсылка.КодыОперацийВыпускПродукции - Код операции по налоговому учету
		//	Количество - Число - Количество выпуска
		//	КоличествоДоделка - Число - Количество выпуска (доделка)
		//	СтоимостьУУ - Число - Учетная стоимость по управленческому учету
		//	СтоимостьБУ - Число - Учетная стоимость по бухгалтерскому учету
		//	СтоимостьНУ - Число - Учетная стоимость по налоговому учету
		//	УчетнаяПолитикаБух - Структура - Учетная политика по бухгалтерскому учету
		//	СоответствиеКодОперацииСодержание - Соответствие - Соответствие кода операции выпуска и содержания проводки
		//	СтруктураКлючиАналитики - Структура - Структура с таблицами ключей аналитики для кэширования данных
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void СформироватьДвиженияПоВыпускуПродукции(/*
	СтруктураШапкиДокумента,
	ВыборкаПоВыпускуПродукции,
	ХарактерЗатратУУ,
	ХарактерЗатратБУ,
	ХарактерЗатратНУ,
	КодОперацииВыпускПродукцииУУ,
	КодОперацииВыпускПродукцииБУ,
	КодОперацииВыпускПродукцииНУ,
	Количество,
	КоличествоДоделка,
	СтоимостьУУ,
	СтоимостьБУ,
	СтоимостьНУ,
	УчетнаяПолитикаБух,
	СоответствиеКодОперацииСодержание,
	СтруктураКлючиАналитики,
	СтруктураНаборыЗаписей
	*/)
		{
			if(true/*СтруктураШапкиДокумента.ИспользоватьРасширеннуюАналитику*/)
			{
				if(true/*КоличествоДоделка > 0
		   И Количество <> 0*/)
				{
					/*КоличествоВыпуск = Макс(Количество - КоличествоДоделка, 0);*/
					/*СтоимостьВыпускУУ = КоличествоВыпуск * СтоимостьУУ / Количество;*/
					/*СтоимостьВыпускБУ = КоличествоВыпуск * СтоимостьБУ / Количество;*/
					/*СтоимостьВыпускНУ = КоличествоВыпуск * СтоимостьНУ / Количество;*/
					/*СтоимостьДоделкаУУ = СтоимостьУУ - СтоимостьВыпускУУ;*/
					/*СтоимостьДоделкаБУ = СтоимостьБУ - СтоимостьВыпускБУ;*/
					/*СтоимостьДоделкаНУ = СтоимостьНУ - СтоимостьВыпускНУ;*/
				}
				/*// Получим массив строк для распределения выпуска продукции по проектам.
*/
				/*МассивСтрокБазыРаспределения = ПолучитьМассивРаспределенияВыпускаПродукцииПоПроектам(
			СтруктураШапкиДокумента,
			ВыборкаПоВыпускуПродукции
		);*/
				if(true/*КоличествоВыпуск > 0*/)
				{
					/*ДвиженияПоРегистрамВыпускПродукцииИУслуг(
				СтруктураШапкиДокумента,
				ВыборкаПоВыпускуПродукции,
				Перечисления.ВидыВыпуска.Выпуск,
				МассивСтрокБазыРаспределения,
				КодОперацииВыпускПродукцииУУ,
				КодОперацииВыпускПродукцииБУ,
				КоличествоВыпуск,
				СтоимостьВыпускУУ,
				СтоимостьВыпускБУ,
				СтоимостьВыпускНУ,
				СтруктураКлючиАналитики,
				СтруктураНаборыЗаписей
			);*/
				}
				if(true/*КоличествоДоделка > 0*/)
				{
					/*ДвиженияПоРегистрамВыпускПродукцииИУслуг(
				СтруктураШапкиДокумента,
				ВыборкаПоВыпускуПродукции,
				Перечисления.ВидыВыпуска.Наработка,
				МассивСтрокБазыРаспределения,
				КодОперацииВыпускПродукцииУУ,
				КодОперацииВыпускПродукцииБУ,
				КоличествоДоделка,
				СтоимостьДоделкаУУ,
				СтоимостьДоделкаБУ,
				СтоимостьДоделкаНУ,
				СтруктураКлючиАналитики,
				СтруктураНаборыЗаписей
			);*/
				}
			}
			/*СформироватьДвиженияПоРегиструБухгалтерии(
		СтруктураШапкиДокумента,
		ВыборкаПоВыпускуПродукции,
		ХарактерЗатратБУ,
		ХарактерЗатратНУ,
		КодОперацииВыпускПродукцииБУ,
		КодОперацииВыпускПродукцииНУ,
		СтоимостьБУ,
		СтоимостьНУ,
		УчетнаяПолитикаБух,
		СоответствиеКодОперацииСодержание,
		СтруктураНаборыЗаписей
		);*/
		}
		// СформироватьДвиженияПоВыпускуПродукции(
		// Процедура формирует движения по выпуску продукции на склад.
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	ВыборкаПоВыпускуПродукции - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	КодОперацииВыпускПродукции - ПеречислениеСсылка.КодыОперацийВыпускПродукции - Код операции
		//	КодОперацииПартииТоваров - ПеречислениеСсылка.КодыОперацийПартииТоваров - Код операции
		//	СтоимостьУУ - Число - Учетная стоимость по управленческому учету
		//	СтоимостьБУ - Число - Учетная стоимость по бухгалтерскому учету
		//	СтоимостьНУ - Число - Учетная стоимость по налоговому учету
		//	ПроведениеПоПартиям - Булево - Признак вызова процедуры при восстановлении последовательности партионного учета
		//	СтруктураКлючиАналитики - Структура - Структура с таблицами ключей аналитики для кэширования данных
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void СформироватьДвиженияПоВыпускуПродукцииНаСклад(/*
	СтруктураШапкиДокумента,
	ВыборкаПоВыпускуПродукции,
	КодОперацииВыпускПродукции,
	КодОперацииПартииТоваров,
	СтоимостьУУ,
	СтоимостьБУ,
	СтоимостьНУ,
	ПроведениеПоПартиям,
	СтруктураКлючиАналитики,
	СтруктураНаборыЗаписей
	*/)
		{
			if(true/*СтруктураШапкиДокумента.ИспользоватьРасширеннуюАналитику*/)
			{
				/*Количество = ВыборкаПоВыпускуПродукции.Количество;*/
				/*КоличествоДоделка = ВыборкаПоВыпускуПродукции.КоличествоДоделка;*/
				if(true/*КоличествоДоделка > 0
		   И Количество <> 0*/)
				{
					/*КоличествоВыпуск = Макс(Количество - КоличествоДоделка, 0);*/
					/*СтоимостьВыпускУУ = КоличествоВыпуск * СтоимостьУУ / Количество;*/
					/*СтоимостьВыпускБУ = КоличествоВыпуск * СтоимостьБУ / Количество;*/
					/*СтоимостьВыпускНУ = КоличествоВыпуск * СтоимостьНУ / Количество;*/
					/*СтоимостьДоделкаУУ = СтоимостьУУ - СтоимостьВыпускУУ;*/
					/*СтоимостьДоделкаБУ = СтоимостьБУ - СтоимостьВыпускБУ;*/
					/*СтоимостьДоделкаНУ = СтоимостьНУ - СтоимостьВыпускНУ;*/
				}
				if(true/*КоличествоВыпуск > 0*/)
				{
					/*ДвиженияПоРегистрамУчетЗатратВыпускПродукции(
				СтруктураШапкиДокумента,
				ВыборкаПоВыпускуПродукции,
				Перечисления.ВидыВыпуска.Выпуск,
				Новый Массив,
				КодОперацииВыпускПродукции,
				КодОперацииВыпускПродукции,
				КоличествоВыпуск,
				СтоимостьВыпускУУ,
				СтоимостьВыпускБУ,
				СтоимостьВыпускНУ,
				СтруктураКлючиАналитики,
				СтруктураНаборыЗаписей
			);*/
				}
				if(true/*КоличествоДоделка > 0*/)
				{
					/*ДвиженияПоРегистрамУчетЗатратВыпускПродукции(
				СтруктураШапкиДокумента,
				ВыборкаПоВыпускуПродукции,
				Перечисления.ВидыВыпуска.Наработка,
				Новый Массив,
				КодОперацииВыпускПродукции,
				КодОперацииВыпускПродукции,
				КоличествоДоделка,
				СтоимостьДоделкаУУ,
				СтоимостьДоделкаБУ,
				СтоимостьДоделкаНУ,
				СтруктураКлючиАналитики,
				СтруктураНаборыЗаписей
			);*/
				}
			}
			/*СформироватьДвиженияПоРегиструНДСПартииТоваров(
		СтруктураШапкиДокумента,
		ВыборкаПоВыпускуПродукции,
		СтруктураНаборыЗаписей
	);*/
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете 
	   И Не ПроведениеПоПартиям*/)
			{
				/*СформироватьДвиженияПоРегиструТоварыНаСкладах(
			СтруктураШапкиДокумента,
			ВыборкаПоВыпускуПродукции,
			СтруктураНаборыЗаписей
			);*/
				/*СформироватьДвиженияПоРегиструТоварыВРезервеНаСкладах(
			СтруктураШапкиДокумента,
			ВыборкаПоВыпускуПродукции,
			СтруктураНаборыЗаписей
			);*/
			}
			if(true/*Не ПроведениеПоПартиям*/)
			{
				/*СформироватьДвиженияПоРегиструТоварыОрганизаций(
			СтруктураШапкиДокумента,
			ВыборкаПоВыпускуПродукции,
			СтруктураНаборыЗаписей
			);*/
			}
		}
		// СформироватьДвиженияПоВыпускуПродукцииНаСклад()
		// Процедура формирует движения по регистрам учета затрат.
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	ВыборкаПоВыпускуПродукции - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	ХарактерЗатратУУ - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат для целей управленческого учета
		//	ХарактерЗатратБУ - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат для целей бухгалтерского учета
		//	ХарактерЗатратНУ - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат для целей налогового учета
		//	КодОперацииВыпускПродукцииУУ - ПеречислениеСсылка.КодыОперацийВыпускПродукции - Код операции по управленческому учету
		//	КодОперацииВыпускПродукцииБУ - ПеречислениеСсылка.КодыОперацийВыпускПродукции - Код операции по бухгалтерскому учету
		//	Количество - Число - Количество выпуска
		//	КоличествоДоделка - Число - Количество выпуска (доделка)
		//	СтоимостьУУ - Число - Учетная стоимость по управленческому учету
		//	СтоимостьБУ - Число - Учетная стоимость по бухгалтерскому учету
		//	СтоимостьНУ - Число - Учетная стоимость по налоговому учету
		//	УчетнаяПолитикаБух - Структура - Учетная политика по бухгалтерскому учету
		//	ПроведениеПоПартиям - Булево - Признак вызова процедуры при восстановлении последовательности партионного учета
		//	СтруктураКлючиАналитики - Структура - Структура с таблицами ключей аналитики для кэширования данных
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void СформироватьДвиженияПоВыпускуПродукцииНаЗатраты(/*
	СтруктураШапкиДокумента,
	ВыборкаПоВыпускуПродукции,
	ХарактерЗатратУУ,
	ХарактерЗатратБУ,
	ХарактерЗатратНУ,
	КодОперацииВыпускПродукцииУУ,
	КодОперацииВыпускПродукцииБУ,
	Количество,
	КоличествоДоделка,
	СтоимостьУУ,
	СтоимостьБУ,
	СтоимостьНУ,
	УчетнаяПолитикаБух,
	ПроведениеПоПартиям,
	СтруктураКлючиАналитики,
	СтруктураНаборыЗаписей
	*/)
		{
			/*// Документ "Оприходование материалов из производства" при использовании расширенной аналитики в данной процедуре
*/
			/*// обрабатывать не нужно, все движения сформированы ранее.
*/
			if(true/*СтруктураШапкиДокумента.ИспользоватьРасширеннуюАналитику
	   И ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.ОприходованиеМатериаловИзПроизводства")*/)
			{
			}
			if(true/*СтруктураШапкиДокумента.ИспользоватьРасширеннуюАналитику*/)
			{
				if(true/*КоличествоДоделка > 0
		   И Количество <> 0*/)
				{
					/*КоличествоВыпуск = Макс(Количество - КоличествоДоделка, 0);*/
					/*СтоимостьВыпускУУ = КоличествоВыпуск * СтоимостьУУ / Количество;*/
					/*СтоимостьВыпускБУ = КоличествоВыпуск * СтоимостьБУ / Количество;*/
					/*СтоимостьВыпускНУ = КоличествоВыпуск * СтоимостьНУ / Количество;*/
					/*СтоимостьДоделкаУУ = СтоимостьУУ - СтоимостьВыпускУУ;*/
					/*СтоимостьДоделкаБУ = СтоимостьБУ - СтоимостьВыпускБУ;*/
					/*СтоимостьДоделкаНУ = СтоимостьНУ - СтоимостьВыпускНУ;*/
				}
				/*// Получим массив строк для распределения выпуска продукции по проектам.
*/
				/*МассивСтрокБазыРаспределения = ПолучитьМассивРаспределенияВыпускаПродукцииПоПроектам(
			СтруктураШапкиДокумента,
			ВыборкаПоВыпускуПродукции
		);*/
				if(true/*КоличествоВыпуск > 0*/)
				{
					/*ДвиженияПоРегистрамУчетЗатратВыпускПродукции(
				СтруктураШапкиДокумента,
				ВыборкаПоВыпускуПродукции,
				Перечисления.ВидыВыпуска.Выпуск,
				МассивСтрокБазыРаспределения,
				КодОперацииВыпускПродукцииУУ,
				КодОперацииВыпускПродукцииБУ,
				КоличествоВыпуск,
				СтоимостьВыпускУУ,
				СтоимостьВыпускБУ,
				СтоимостьВыпускНУ,
				СтруктураКлючиАналитики,
				СтруктураНаборыЗаписей
			);*/
				}
				if(true/*КоличествоДоделка > 0*/)
				{
					/*ДвиженияПоРегистрамУчетЗатратВыпускПродукции(
				СтруктураШапкиДокумента,
				ВыборкаПоВыпускуПродукции,
				Перечисления.ВидыВыпуска.Наработка,
				МассивСтрокБазыРаспределения,
				КодОперацииВыпускПродукцииУУ,
				КодОперацииВыпускПродукцииБУ,
				КоличествоДоделка,
				СтоимостьДоделкаУУ,
				СтоимостьДоделкаБУ,
				СтоимостьДоделкаНУ,
				СтруктураКлючиАналитики,
				СтруктураНаборыЗаписей
			);*/
				}
			}
			if(true/*Не ПроведениеПоПартиям
	   И ТипЗнч(СтруктураШапкиДокумента.Ссылка) <> Тип("ДокументСсылка.ОприходованиеМатериаловИзПроизводства")*/)
			{
				/*СформироватьДвиженияПоРегиструМатериалыВПроизводстве(
			СтруктураШапкиДокумента,
			ВыборкаПоВыпускуПродукции,
			ХарактерЗатратУУ,
			Количество,
			СтруктураНаборыЗаписей
		);*/
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете*/)
			{
				/*СформироватьДвиженияПоРегиструЗаказыНаОбслуживаниеОС(
			СтруктураШапкиДокумента,
			ВыборкаПоВыпускуПродукции,
			СтруктураНаборыЗаписей
		);*/
				/*УправлениеЗатратамиДвиженияПоРегистрам.СформироватьДвиженияПоРегистрамУчетаЗатратНаСтроительствоОС(
			СтруктураШапкиДокумента,
			ВыборкаПоВыпускуПродукции,
			ХарактерЗатратУУ,
			СтоимостьУУ,
			ВидДвиженияНакопления.Приход,
			СтруктураНаборыЗаписей
		);*/
			}
		}
		// СформироватьДвиженияПоВыпускуПродукцииНаЗатраты()
		// Процедура формирует движений по отражению возвратных отходов.
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	РезультатЗапросаПоВыпуску - РезультатЗапроса - Результат запроса по выпуску продукции
		//	УчетнаяПолитика - Структура - Учетная политика по управленческому учету
		//	УчетнаяПолитикаБух - Структура - Учетная политика по бухгалтерскому учету
		//	ПроведениеПоПартиям - Булево - Признак вызова процедуры при восстановлении последовательности партионного учета
		//	СтруктураКлючиАналитики - Структура - Структура с таблицами ключей аналитики для кэширования данных
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void СформироватьДвиженияПоВозвратнымОтходам(/*
	СтруктураШапкиДокумента,
	РезультатЗапросаПоВыпуску,
	УчетнаяПолитика,
	УчетнаяПолитикаБух,
	ПроведениеПоПартиям,
	СтруктураКлючиАналитики,
	СтруктураНаборыЗаписей
	*/)
		{
			/*ВыборкаПоВыпускуПродукции = РезультатЗапросаПоВыпуску.Выбрать();*/
			while(true/*ВыборкаПоВыпускуПродукции.Следующий()*/)
			{
				/*Количество = ВыборкаПоВыпускуПродукции.Количество;*/
				/*СтоимостьУУ = ВыборкаПоВыпускуПродукции.СтоимостьУУ;*/
				/*СтоимостьБУ = ВыборкаПоВыпускуПродукции.СтоимостьБУ;*/
				/*СтоимостьНУ = ВыборкаПоВыпускуПродукции.СтоимостьНУ;*/
				/*КодОперацииВыпускПродукции = Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииПоФиксированнойСтоимости;*/
				/*// ХарактерЗатратУУ,
*/
				/*// ХарактерЗатратБУ,
*/
				/*// ХарактерЗатратНУ,
*/
				/*КодОперацииВыпускПродукции,
			КодОперацииВыпускПродукции,
			КодОперацииВыпускПродукции,
			Количество,
			0,
			СтоимостьУУ,
			СтоимостьБУ,
			СтоимостьНУ,
			УчетнаяПолитикаБух,
			СоответствиеКодОперацииСодержание,
			СтруктураКлючиАналитики,
			СтруктураНаборыЗаписей
		);*/
				/*КодОперацииПартииТоваров = Перечисления.КодыОперацийПартииТоваров.ВыпускПродукцииФиксНаСклад;*/
				/*СформироватьДвиженияПоВыпускуПродукцииНаСклад(
			СтруктураШапкиДокумента,
			ВыборкаПоВыпускуПродукции,
			КодОперацииВыпускПродукции,
			КодОперацииПартииТоваров,
			СтоимостьУУ,
			СтоимостьБУ,
			СтоимостьНУ,
			ПроведениеПоПартиям,
			СтруктураКлючиАналитики,
			СтруктураНаборыЗаписей
		);*/
				if(true/*СтруктураШапкиДокумента.ИспользоватьРасширеннуюАналитику*/)
				{
					/*КодОперации = Перечисления.КодыОперацийЗатратыНаВыпускПродукции.ОтрицательныеЗатраты;*/
					/*ДвиженияПоРегистрамУчетЗатратВыпускПродукции(
				СтруктураШапкиДокумента,
				ВыборкаПоВыпускуПродукции,
				Перечисления.ВидыВыпуска.Выпуск,
				Новый Массив,
				КодОперации,
				КодОперации,
				- Количество,
				- СтоимостьУУ,
				- СтоимостьБУ,
				- СтоимостьНУ,
				СтруктураКлючиАналитики,
				СтруктураНаборыЗаписей
			);*/
				}
			}
			/*;;*/
		}
		// СформироватьДвиженияПоВозвратнымОтходам()
		// Процедура выполняет распределение учетной стоимости продукции по выпуску на склад.
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	ВыборкаПоВыпускуПродукцииНаСклад - ВыборкаИзРезультатаЗапроса - Выборка из результата запроса по выпуску продукции на склад
		//	СтруктураПоиска - Структура - Структура отбора выборки результата запроса
		//	ВсегоКоличество - Число - Общее количество выпущенной продукции
		//	ВсегоСтоимостьУУ - Число - Общая стоимость выпущенной продукции по управленческому учету
		//	ВсегоСтоимостьБУ - Число - Общая стоимость выпущенной продукции по бухгалтерскому учету
		//	ВсегоСтоимостьНУ - Число - Общая стоимость выпущенной продукции по налоговому учету
		//	УчетнаяПолитика - Структура - Учетная политика по управленческому учету
		//	УчетнаяПолитикаБух - Структура - Учетная политика по бухгалтерскому учету
		//	ПроведениеПоПартиям - Булево - Признак вызова процедуры при восстановлении последовательности партионного учета
		//	СоответствиеКодОперацииСодержание - Соответствие - Соответствие кода операции выпуска и содержания проводки
		//	СтруктураКлючиАналитики - Структура - Структура с таблицами ключей аналитики для кэширования данных
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void РаспределитьУчетнуюСтоимостьВыпускПродукцииНаСклад(/*
	СтруктураШапкиДокумента,
	ВыборкаПоВыпускуПродукции,
	СтруктураПоиска,
	ВсегоКоличество,
	ВсегоСтоимостьУУ,
	ВсегоСтоимостьБУ,
	ВсегоСтоимостьНУ,
	УчетнаяПолитика,
	УчетнаяПолитикаБух,
	ПроведениеПоПартиям,
	СоответствиеКодОперацииСодержание,
	СтруктураКлючиАналитики,
	СтруктураНаборыЗаписей
	*/)
		{
			/*ВыборкаПоВыпускуПродукции.Сбросить();*/
			while(true/*ВыборкаПоВыпускуПродукции.НайтиСледующий(СтруктураПоиска)*/)
			{
				/*Количество = ВыборкаПоВыпускуПродукции.Количество;*/
				if(true/*ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.ОприходованиеМатериаловИзПроизводства")
		   И ВыборкаПоВыпускуПродукции.ТипСтоимости = Перечисления.ВидыНормативнойСтоимостиПроизводства.Фиксированная*/)
				{
					/*СтоимостьУУ = ВыборкаПоВыпускуПродукции.СтоимостьУУ;*/
					/*СтоимостьБУ = ВыборкаПоВыпускуПродукции.СтоимостьБУ;*/
					/*СтоимостьНУ = ВыборкаПоВыпускуПродукции.СтоимостьНУ;*/
				}
				if(true/*ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.ОприходованиеМатериаловИзПроизводства")*/)
				{
					/*КодОперацииВыпускПродукции = ПолучитьКодОперацииПоРеквизитамДокумента(
				СтруктураШапкиДокумента,
				ВыборкаПоВыпускуПродукции
			);*/
				}
				/*// ХарактерЗатратУУ,
*/
				/*// ХарактерЗатратБУ,
*/
				/*// ХарактерЗатратНУ,
*/
				/*КодОперацииВыпускПродукции,
			КодОперацииВыпускПродукции,
			КодОперацииВыпускПродукции,
			Количество,
			ВыборкаПоВыпускуПродукции.КоличествоДоделка,
			СтоимостьУУ,
			СтоимостьБУ,
			СтоимостьНУ,
			УчетнаяПолитикаБух,
			СоответствиеКодОперацииСодержание,
			СтруктураКлючиАналитики,
			СтруктураНаборыЗаписей
		);*/
				/*КодОперацииПартииТоваров = ПолучитьКодОперацииПартииТоваров(
			СтруктураШапкиДокумента,
			ВыборкаПоВыпускуПродукции
		);*/
				/*СформироватьДвиженияПоВыпускуПродукцииНаСклад(
			СтруктураШапкиДокумента,
			ВыборкаПоВыпускуПродукции,
			КодОперацииВыпускПродукции,
			КодОперацииПартииТоваров,
			СтоимостьУУ,
			СтоимостьБУ,
			СтоимостьНУ,
			ПроведениеПоПартиям,
			СтруктураКлючиАналитики,
			СтруктураНаборыЗаписей
		);*/
			}
			/*;;*/
		}
		// РаспределитьУчетнуюСтоимостьВыпускПродукцииНаСклад()
		// Функция определяет код операции выпуска продукции по характеру затрат.
		//
		// Параметры
		//  ХарактерЗатрат – ПеречислениеСсылка.ХарактерЗатрат – Характер затрат
		//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отражения в учете
		//
		// Возвращаемое значение:
		//  ПеречислениеСсылка.КодыОперацийВыпускПродукции – код операции выпуска продукции
		//

		public object ПолучитьКодОперацииПоХарактеруЗатрат(/*
	ХарактерЗатрат,
	ВидОтраженияВУчете
	*/)
		{
			if(true/*ХарактерЗатрат = Перечисления.ХарактерЗатрат.ПроизводственныеРасходы*/)
			{
				/*КодОперации = Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииФиксВнутрУслугиНаПроизводство;*/
			}
			return null;
		}
		// ПолучитьКодОперацииПоХарактеруЗатрат()
		// Функция определяет код операции выпуска продукции по реквизитам документа.
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Строка выборки
		//
		// Возвращаемое значение:
		//  ПеречислениеСсылка.КодыОперацийВыпускПродукции – код операции выпуска продукции
		//

		public object ПолучитьКодОперацииПоРеквизитамДокумента(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки = Неопределено
	*/)
		{
			if(true/*ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.КорректировкаНЗП")*/)
			{
				if(true/*СтруктураШапкиДокумента.ТипСтоимости = Перечисления.ВидыНормативнойСтоимостиПроизводства.Рассчитывается*/)
				{
					/*КодОперации = Перечисления.КодыОперацийВыпускПродукции.КорректировкаНЗПРасч;*/
				}
			}
			return null;
		}
		// ПолучитьКодОперацииПоРеквизитамДокумента()
		// Функция определяет код операции для регистра "Незавершенное производство".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//
		// Возвращаемое значение:
		//  ПеречислениеСсылка.КодыОперацийВыпускПродукции – код операции выпуска продукции
		//

		public object ПолучитьКодОперацииНезавершенноеПроизводство(/*
	СтруктураШапкиДокумента
	*/)
		{
			if(true/*ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.КорректировкаНЗП")*/)
			{
				/*КодОперации = Перечисления.КодыОперацийНезавершенноеПроизводство.КорректировкаНЗПФикс;*/
			}
			return null;
		}
		// ПолучитьКодОперацииНезавершенноеПроизводство()
		// Функция определяет код операции партий товаров по реквизитам документа.
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Строка выборки
		//
		// Возвращаемое значение:
		//  ПеречислениеСсылка.КодыОперацийПартииТоваров – код операции выпуска продукции
		//

		public object ПолучитьКодОперацииПартииТоваров(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки
	*/)
		{
			if(true/*ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.ОприходованиеМатериаловИзПроизводства")*/)
			{
				if(true/*СтрокаВыборки.ТипСтоимости = Перечисления.ВидыНормативнойСтоимостиПроизводства.Рассчитывается*/)
				{
					/*КодОперации = Перечисления.КодыОперацийПартииТоваров.ВозвратМатериаловИзПроизводстваРасч;*/
				}
			}
			return null;
		}
		// ПолучитьКодОперацииПартииТоваров()
		// Процедура выполняет распределение учетной стоимости продукции по выпуску на затраты.
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	ВыборкаПоВыпускуПродукцииНаСклад - ВыборкаИзРезультатаЗапроса - Выборка из результата запроса по выпуску продукции на склад
		//	СтруктураПоиска - Структура - Структура отбора выборки результата запроса
		//	ВсегоКоличество - Число - Общее количество выпущенной продукции
		//	ВсегоСтоимостьУУ - Число - Общая стоимость выпущенной продукции по управленческому учету
		//	ВсегоСтоимостьБУ - Число - Общая стоимость выпущенной продукции по бухгалтерскому учету
		//	ВсегоСтоимостьНУ - Число - Общая стоимость выпущенной продукции по налоговому учету
		//	УчетнаяПолитика - Структура - Учетная политика по управленческому учету
		//	УчетнаяПолитикаБух - Структура - Учетная политика по бухгалтерскому учету
		//	ПроведениеПоПартиям - Булево - Признак вызова процедуры при восстановлении последовательности партионного учета
		//	СоответствиеКодОперацииСодержание - Соответствие - Соответствие кода операции выпуска и содержания проводки
		//	СтруктураКлючиАналитики - Структура - Структура с таблицами ключей аналитики для кэширования данных
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void РаспределитьУчетнуюСтоимостьВыпускПродукцииНаЗатраты(/*
	СтруктураШапкиДокумента,
	ВыборкаПоВыпускуПродукции,
	СтруктураПоиска,
	ВсегоКоличество,
	ВсегоСтоимостьУУ,
	ВсегоСтоимостьБУ,
	ВсегоСтоимостьНУ,
	УчетнаяПолитика,
	УчетнаяПолитикаБух,
	ПроведениеПоПартиям,
	СоответствиеКодОперацииСодержание,
	СтруктураКлючиАналитики,
	СтруктураНаборыЗаписей
	*/)
		{
			/*ВыборкаПоВыпускуПродукции.Сбросить();*/
			while(true/*ВыборкаПоВыпускуПродукции.НайтиСледующий(СтруктураПоиска)*/)
			{
				/*Количество = ВыборкаПоВыпускуПродукции.Количество;*/
				if(true/*(ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.ОприходованиеНЗП")
			 ИЛИ ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.КорректировкаНЗП")
			 ИЛИ ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.СписаниеНЗП"))
		   И СтруктураШапкиДокумента.ТипСтоимости = Перечисления.ВидыНормативнойСтоимостиПроизводства.Фиксированная*/)
				{
					/*СтоимостьУУ = ВыборкаПоВыпускуПродукции.СтоимостьУУ;*/
					/*СтоимостьБУ = ВыборкаПоВыпускуПродукции.СтоимостьБУ;*/
					/*СтоимостьНУ = ВыборкаПоВыпускуПродукции.СтоимостьНУ;*/
				}
				/*ХарактерЗатратУУ = ВыборкаПоВыпускуПродукции.ХарактерЗатратПолучатель;*/
				/*ХарактерЗатратБУ = УправлениеЗатратами.ПолучитьХарактерЗатратПоСчетуЗатрат(ВыборкаПоВыпускуПродукции.СчетДт, ВыборкаПоВыпускуПродукции.СтатьяЗатратПолучатель);*/
				/*ХарактерЗатратНУ = УправлениеЗатратами.ПолучитьХарактерЗатратПоСчетуЗатрат(ВыборкаПоВыпускуПродукции.СчетДтНУ, ВыборкаПоВыпускуПродукции.СтатьяЗатратПолучатель, "Налоговый");*/
				if(true/*ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.КорректировкаНЗП")
		 ИЛИ ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.ОприходованиеНЗП")
		 ИЛИ ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.СписаниеНЗП")
		 ИЛИ ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.ОприходованиеМатериаловИзПроизводства")*/)
				{
					/*КодОперацииВыпускПродукции = ПолучитьКодОперацииПоРеквизитамДокумента(
				СтруктураШапкиДокумента,
				ВыборкаПоВыпускуПродукции
			);*/
					/*КодОперацииВыпускПродукцииУУ = КодОперацииВыпускПродукции;*/
					/*КодОперацииВыпускПродукцииБУ = КодОперацииВыпускПродукции;*/
					/*КодОперацииВыпускПродукцииНУ = КодОперацииВыпускПродукции;*/
				}
				if(true/*ТипЗнч(СтруктураШапкиДокумента.Ссылка) <> Тип("ДокументСсылка.ОприходованиеМатериаловИзПроизводства")*/)
				{
					/*СформироватьДвиженияПоВыпускуПродукции(
				СтруктураШапкиДокумента,
				ВыборкаПоВыпускуПродукции,
				ХарактерЗатратУУ,
				ХарактерЗатратБУ,
				ХарактерЗатратНУ,
				КодОперацииВыпускПродукцииУУ,
				КодОперацииВыпускПродукцииБУ,
				КодОперацииВыпускПродукцииНУ,
				ВыборкаПоВыпускуПродукции.Количество,
				ВыборкаПоВыпускуПродукции.КоличествоДоделка,
				СтоимостьУУ,
				СтоимостьБУ,
				СтоимостьНУ,
				УчетнаяПолитикаБух,
				СоответствиеКодОперацииСодержание,
				СтруктураКлючиАналитики,
				СтруктураНаборыЗаписей
			);*/
				}
				/*СформироватьДвиженияПоВыпускуПродукцииНаЗатраты(
			СтруктураШапкиДокумента,
			ВыборкаПоВыпускуПродукции,
			ХарактерЗатратУУ,
			ХарактерЗатратБУ,
			ХарактерЗатратНУ,
			КодОперацииВыпускПродукцииУУ,
			КодОперацииВыпускПродукцииБУ,
			Количество,
			ВыборкаПоВыпускуПродукции.КоличествоДоделка,
			СтоимостьУУ,
			СтоимостьБУ,
			СтоимостьНУ,
			УчетнаяПолитикаБух,
			ПроведениеПоПартиям,
			СтруктураКлючиАналитики,
			СтруктураНаборыЗаписей
		);*/
			}
			/*;;*/
		}
		// РаспределитьУчетнуюСтоимостьВыпускПродукцииНаЗатраты()
		// Процедура выполняет распределение учетной стоимости продукции по выпуску на затраты (списком).
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	ВыборкаПоВыпускуПродукцииНаСклад - ВыборкаИзРезультатаЗапроса - Выборка из результата запроса по выпуску продукции на склад
		//	СтруктураПоиска - Структура - Структура отбора выборки результата запроса
		//	ВсегоКоличество - Число - Общее количество выпущенной продукции
		//	ВсегоСтоимостьУУ - Число - Общая стоимость выпущенной продукции по управленческому учету
		//	ВсегоСтоимостьБУ - Число - Общая стоимость выпущенной продукции по бухгалтерскому учету
		//	ВсегоСтоимостьНУ - Число - Общая стоимость выпущенной продукции по налоговому учету
		//	УчетнаяПолитика - Структура - Учетная политика по управленческому учету
		//	УчетнаяПолитикаБух - Структура - Учетная политика по бухгалтерскому учету
		//	ПроведениеПоПартиям - Булево - Признак вызова процедуры при восстановлении последовательности партионного учета
		//	СоответствиеКодОперацииСодержание - Соответствие - Соответствие кода операции выпуска и содержания проводки
		//	СтруктураКлючиАналитики - Структура - Структура с таблицами ключей аналитики для кэширования данных
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void РаспределитьУчетнуюСтоимостьВыпускПродукцииНаЗатратыСписок(/*
	СтруктураШапкиДокумента,
	ВыборкаПоВыпускуПродукции,
	СтруктураПоиска,
	ВсегоКоличество,
	ВсегоСтоимостьУУ,
	ВсегоСтоимостьБУ,
	ВсегоСтоимостьНУ,
	УчетнаяПолитика,
	УчетнаяПолитикаБух,
	ПроведениеПоПартиям,
	СоответствиеКодОперацииСодержание,
	СтруктураКлючиАналитики,
	СтруктураНаборыЗаписей
	*/)
		{
			/*ТекущийКлючСвязи = 0;*/
			/*ВыборкаПоВыпускуПродукции.Сбросить();*/
			while(true/*ВыборкаПоВыпускуПродукции.НайтиСледующий(СтруктураПоиска)*/)
			{
				if(true/*ВыборкаПоВыпускуПродукции.Коэффициент = 0*/)
				{
					/*Продолжить;*/
				}
				if(true/*ТекущийКлючСвязи <> ВыборкаПоВыпускуПродукции.КлючСвязи*/)
				{
					/*СуммаКоэффициент = ?(ВыборкаПоВыпускуПродукции.СуммаКоэффициент <> 0, ВыборкаПоВыпускуПродукции.СуммаКоэффициент, 1);*/
					/*КоличествоВыпуска = ВыборкаПоВыпускуПродукции.Количество;*/
					/*КоличествоВыпускаДоделка = ВыборкаПоВыпускуПродукции.КоличествоДоделка;*/
					/*ТекущийКлючСвязи = ВыборкаПоВыпускуПродукции.КлючСвязи;*/
				}
				if(true/*СуммаКоэффициент = 0*/)
				{
					/*Продолжить;*/
				}
				/*Количество = Окр(КоличествоВыпуска * ВыборкаПоВыпускуПродукции.Коэффициент / СуммаКоэффициент, 3, 1);*/
				/*КоличествоДоделка = Окр(КоличествоВыпускаДоделка * ВыборкаПоВыпускуПродукции.Коэффициент / СуммаКоэффициент, 3, 1);*/
				/*КоличествоВыпуска = КоличествоВыпуска - Количество;*/
				/*КоличествоВыпускаДоделка = КоличествоВыпускаДоделка - КоличествоДоделка;*/
				/*СуммаКоэффициент = СуммаКоэффициент - ВыборкаПоВыпускуПродукции.Коэффициент;*/
				if(true/*ВсегоКоличество <> 0*/)
				{
					/*СтоимостьУУ = Окр(Количество * ВсегоСтоимостьУУ / ВсегоКоличество, 2, 1);*/
					/*СтоимостьБУ = Окр(Количество * ВсегоСтоимостьБУ / ВсегоКоличество, 2, 1);*/
					/*СтоимостьНУ = Окр(Количество * ВсегоСтоимостьНУ / ВсегоКоличество, 2, 1);*/
					/*ВсегоКоличество = ВсегоКоличество - Количество;*/
					/*ВсегоСтоимостьУУ = ВсегоСтоимостьУУ - СтоимостьУУ;*/
					/*ВсегоСтоимостьБУ = ВсегоСтоимостьБУ - СтоимостьБУ;*/
					/*ВсегоСтоимостьНУ = ВсегоСтоимостьНУ - СтоимостьНУ;*/
				}
				/*ХарактерЗатратУУ = ВыборкаПоВыпускуПродукции.ХарактерЗатратПолучатель;*/
				/*ХарактерЗатратБУ = УправлениеЗатратами.ПолучитьХарактерЗатратПоСчетуЗатрат(ВыборкаПоВыпускуПродукции.СчетДт, ВыборкаПоВыпускуПродукции.СтатьяЗатратПолучатель);*/
				/*ХарактерЗатратНУ = УправлениеЗатратами.ПолучитьХарактерЗатратПоСчетуЗатрат(ВыборкаПоВыпускуПродукции.СчетДтНУ, ВыборкаПоВыпускуПродукции.СтатьяЗатратПолучатель, "Налоговый");*/
				/*КодОперацииВыпускПродукцииУУ = ПолучитьКодОперацииПоХарактеруЗатрат(
			ХарактерЗатратУУ,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
		);*/
				/*КодОперацииВыпускПродукцииБУ = ПолучитьКодОперацииПоХарактеруЗатрат(
			ХарактерЗатратБУ,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВРегламентированномУчете
		);*/
				/*КодОперацииВыпускПродукцииНУ = ПолучитьКодОперацииПоХарактеруЗатрат(
			ХарактерЗатратНУ,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВРегламентированномУчете
		);*/
				/*СформироватьДвиженияПоВыпускуПродукции(
			СтруктураШапкиДокумента,
			ВыборкаПоВыпускуПродукции,
			ХарактерЗатратУУ,
			ХарактерЗатратБУ,
			ХарактерЗатратНУ,
			КодОперацииВыпускПродукцииУУ,
			КодОперацииВыпускПродукцииБУ,
			КодОперацииВыпускПродукцииНУ,
			Количество,
			КоличествоДоделка,
			СтоимостьУУ,
			СтоимостьБУ,
			СтоимостьНУ,
			УчетнаяПолитикаБух,
			СоответствиеКодОперацииСодержание,
			СтруктураКлючиАналитики,
			СтруктураНаборыЗаписей
		);*/
				/*СформироватьДвиженияПоВыпускуПродукцииНаЗатраты(
			СтруктураШапкиДокумента,
			ВыборкаПоВыпускуПродукции,
			ХарактерЗатратУУ,
			ХарактерЗатратБУ,
			ХарактерЗатратНУ,
			КодОперацииВыпускПродукцииУУ,
			КодОперацииВыпускПродукцииБУ,
			Количество,
			КоличествоДоделка,
			СтоимостьУУ,
			СтоимостьБУ,
			СтоимостьНУ,
			УчетнаяПолитикаБух,
			ПроведениеПоПартиям,
			СтруктураКлючиАналитики,
			СтруктураНаборыЗаписей
		);*/
			}
			/*;;*/
		}
		// РаспределитьУчетнуюСтоимостьВыпускПродукцииНаЗатратыСписок()
		// Процедура выполняет распределение себестоимости по проектам.
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки из результата запроса по выпуску продукции
		//	ВыборкаРаспределениеПоПроектам - ВыборкаИзРезультатаЗапроса - Выборка из результата запроса распределения по проектам
		//	Стоимость - Число - Стоимость выпущенной продукции по управленческому учету
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void РаспределитьУчетнуюСтоимостьПоПроектам(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	ВыборкаРаспределениеПоПроектам,
	Стоимость,
	СтруктураНаборыЗаписей
	*/)
		{
			if(true/*Не СтруктураШапкиДокумента.ВедениеУчетаПоПроектам*/)
			{
				/*Проект = Справочники.Проекты.ПустаяСсылка();*/
			}
			/*ВсегоБазаРаспределения = 0;*/
			if(true/*ТипЗнч(Проект) = Тип("СправочникСсылка.ВидыРаспределенияПоПроектам")*/)
			{
				/*СтруктураПоиска = Новый Структура("ВидРаспределения", Проект);*/
				/*МассивКоэф = Новый Массив;*/
				/*ВыборкаРаспределениеПоПроектам.Сбросить();*/
				while(true/*ВыборкаРаспределениеПоПроектам.НайтиСледующий(СтруктураПоиска)*/)
				{
					/*МассивКоэф.Добавить(ВыборкаРаспределениеПоПроектам.ДоляРаспределения);*/
					/*ВсегоБазаРаспределения = ВсегоБазаРаспределения + ВыборкаРаспределениеПоПроектам.ДоляРаспределения;*/
				}
				if(true/*ВсегоБазаРаспределения = 0*/)
				{
					/*ОбщегоНазначения.Сообщение("Не удалось выполнить распределение себестоимости продаж по виду распределения """ + Проект + """", СтатусСообщения.Внимание);*/
					/*Проект = Справочники.Проекты.ПустаяСсылка();*/
				}
			}
			if(true/*ВсегоБазаРаспределения <> 0*/)
			{
				/*МассивКоличество = ОбщегоНазначения.РаспределитьПропорционально(СтрокаВыборки.Количество, МассивКоэф, 3);*/
				/*МассивСтоимость = ОбщегоНазначения.РаспределитьПропорционально(Стоимость, МассивКоэф, 2);*/
				/*Индекс = 0;*/
				/*ВыборкаРаспределениеПоПроектам.Сбросить();*/
				while(true/*ВыборкаРаспределениеПоПроектам.НайтиСледующий(СтруктураПоиска)*/)
				{
					/*Количество = ?(МассивКоличество = Неопределено, 0, МассивКоличество[Индекс]);*/
					/*Сумма      = ?(МассивСтоимость = Неопределено, 0, МассивСтоимость[Индекс]);*/
					/*СформироватьСтрокуДвиженияПоРегиструПродажиСебестоимость(
				СтруктураШапкиДокумента,
				СтрокаВыборки,
				ВыборкаРаспределениеПоПроектам.Проект,
				Количество,
				Сумма,
				СтруктураНаборыЗаписей
			);*/
					/*Индекс = Индекс + 1;*/
				}
				/*;;*/
			}
		}
		// РаспределитьУчетнуюСтоимостьПоПроектам()
		// Процедура выполняет распределение учетной стоимости продукции по выпуску на внешние услуги.
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	ВыборкаПоВыпускуПродукцииНаСклад - ВыборкаИзРезультатаЗапроса - Выборка из результата запроса по выпуску продукции на склад
		//	ВыборкаРаспределениеПоПроектам - ВыборкаИзРезультатаЗапроса - Выборка из результата запроса по коэффициентам распределения по проектам
		//	СтруктураПоиска - Структура - Структура отбора выборки результата запроса
		//	ВсегоКоличество - Число - Общее количество выпущенной продукции
		//	ВсегоСтоимостьУУ - Число - Общая стоимость выпущенной продукции по управленческому учету
		//	ВсегоСтоимостьБУ - Число - Общая стоимость выпущенной продукции по бухгалтерскому учету
		//	ВсегоСтоимостьНУ - Число - Общая стоимость выпущенной продукции по налоговому учету
		//	УчетнаяПолитика - Структура - Учетная политика по управленческому учету
		//	УчетнаяПолитикаБух - Структура - Учетная политика по бухгалтерскому учету
		//	СоответствиеКодОперацииСодержание - Соответствие - Соответствие кода операции выпуска и содержания проводки
		//	СтруктураКлючиАналитики - Структура - Структура с таблицами ключей аналитики для кэширования данных
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void РаспределитьУчетнуюСтоимостьВыпускНаВнешниеУслуги(/*
	СтруктураШапкиДокумента,
	ВыборкаПоВыпускуПродукции,
	ВыборкаРаспределениеПоПроектам,
	СтруктураПоиска,
	ВсегоКоличество,
	ВсегоСтоимостьУУ,
	ВсегоСтоимостьБУ,
	ВсегоСтоимостьНУ,
	УчетнаяПолитика,
	УчетнаяПолитикаБух,
	СоответствиеКодОперацииСодержание,
	СтруктураКлючиАналитики,
	СтруктураНаборыЗаписей
	*/)
		{
			/*ВыборкаПоВыпускуПродукции.Сбросить();*/
			while(true/*ВыборкаПоВыпускуПродукции.НайтиСледующий(СтруктураПоиска)*/)
			{
				/*Количество = ВыборкаПоВыпускуПродукции.Количество;*/
				if(true/*ВсегоКоличество <> 0*/)
				{
					/*СтоимостьУУ = Окр(Количество * ВсегоСтоимостьУУ / ВсегоКоличество, 2, 1);*/
					/*СтоимостьБУ = Окр(Количество * ВсегоСтоимостьБУ / ВсегоКоличество, 2, 1);*/
					/*СтоимостьНУ = Окр(Количество * ВсегоСтоимостьНУ / ВсегоКоличество, 2, 1);*/
					/*ВсегоКоличество = ВсегоКоличество - Количество;*/
					/*ВсегоСтоимостьУУ = ВсегоСтоимостьУУ - СтоимостьУУ;*/
					/*ВсегоСтоимостьБУ = ВсегоСтоимостьБУ - СтоимостьБУ;*/
					/*ВсегоСтоимостьНУ = ВсегоСтоимостьНУ - СтоимостьНУ;*/
				}
				/*КодОперацииВыпускПродукции = Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииФиксВнешниеУслуги;*/
				/*// ХарактерЗатратУУ,
*/
				/*// ХарактерЗатратБУ,
*/
				/*// ХарактерЗатратНУ,
*/
				/*КодОперацииВыпускПродукции,
			КодОперацииВыпускПродукции,
			КодОперацииВыпускПродукции,
			ВыборкаПоВыпускуПродукции.Количество,
			ВыборкаПоВыпускуПродукции.КоличествоДоделка,
			СтоимостьУУ,
			СтоимостьБУ,
			СтоимостьНУ,
			УчетнаяПолитикаБух,
			СоответствиеКодОперацииСодержание,
			СтруктураКлючиАналитики,
			СтруктураНаборыЗаписей
		);*/
				if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете*/)
				{
					/*РаспределитьУчетнуюСтоимостьПоПроектам(
				СтруктураШапкиДокумента,
				ВыборкаПоВыпускуПродукции,
				ВыборкаРаспределениеПоПроектам,
				СтоимостьУУ,
				СтруктураНаборыЗаписей
			);*/
				}
			}
			/*;;*/
		}
		// РаспределитьУчетнуюСтоимостьВыпускНаВнешниеУслуги()
		// Процедура выполняет распределение учетной стоимости продукции по направлением выпуска.
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	РезультатЗапросаПоУчетнойСтоимости - РезультатЗапроса - Результ запроса по учетной стоимости продукции
		//	ТекстЗапросаПоВыпускуПродукцииНаСклад - Строка - Текст запроса по выпуску продукции на склад
		//	ТекстЗапросаПоВыпускуПродукцииНаЗатраты - Строка - Текст запроса по выпуску продукции со списанием на затраты
		//	ТекстЗапросаПоВыпускуПродукцииНаЗатратыСписок - Строка - Текст запроса по выпуску продукции со списанием на затраты (списком)
		//	ТекстЗапросаПоВыпускуВнешниеУслуги - Строка - Текст запроса по выпуску на внешние услуги
		//	УчетнаяПолитика - Структура - Учетная политика по управленческому учету
		//	УчетнаяПолитикаБух - Структура - Учетная политика по бухгалтерскому учету
		//	ПроведениеПоПартиям - Булево - Признак вызова процедуры при восстановлении последовательности партионного учета
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void РаспределитьУчетнуюСтоимостьПоНаправлениямВыпуска(/*
	СтруктураШапкиДокумента,
	РезультатЗапросаПоУчетнойСтоимости,
	ТекстЗапросаПоВыпускуПродукцииНаСклад,
	ТекстЗапросаПоВыпускуПродукцииНаЗатраты,
	ТекстЗапросаПоВыпускуПродукцииНаЗатратыСписок,
	ТекстЗапросаПоВыпускуВнешниеУслуги,
	УчетнаяПолитика,
	УчетнаяПолитикаБух,
	ПроведениеПоПартиям,
	СтруктураКлючиАналитики,
	СтруктураНаборыЗаписей
	*/)
		{
			/*ЕстьВыпускНаСклад = Не ПустаяСтрока(ТекстЗапросаПоВыпускуПродукцииНаСклад);*/
			/*ЕстьВыпускНаЗатраты = Не ПустаяСтрока(ТекстЗапросаПоВыпускуПродукцииНаЗатраты);*/
			/*ЕстьВыпускНаЗатратыСписок = Не ПустаяСтрока(ТекстЗапросаПоВыпускуПродукцииНаЗатратыСписок);*/
			/*ЕстьВыпускНаВнешниеУслуги = Не ПустаяСтрока(ТекстЗапросаПоВыпускуВнешниеУслуги);*/
			/*// Формирование запроса по выпуску продукции на склад.
*/
			if(true/*ЕстьВыпускНаСклад*/)
			{
				/*ЗапросПоВыпускуНаСклад = СформироватьЗапросПоВыпускуПродукции(
			СтруктураШапкиДокумента,
			ТекстЗапросаПоВыпускуПродукцииНаСклад,
			УчетнаяПолитика,
			УчетнаяПолитикаБух
			);*/
				/*РезультатЗапросаПоВыпускуПродукцииНаСклад = ЗапросПоВыпускуНаСклад.Выполнить();*/
				if(true/*Не РезультатЗапросаПоВыпускуПродукцииНаСклад.Пустой()*/)
				{
					/*ВыборкаПоВыпускуПродукцииНаСклад = РезультатЗапросаПоВыпускуПродукцииНаСклад.Выбрать();*/
				}
			}
			/*// Формирование запроса по выпуску продукции со списанием на затраты.
*/
			if(true/*ЕстьВыпускНаЗатраты*/)
			{
				/*ЗапросПоВыпускуНаЗатраты = СформироватьЗапросПоВыпускуПродукции(
			СтруктураШапкиДокумента,
			ТекстЗапросаПоВыпускуПродукцииНаЗатраты,
			УчетнаяПолитика,
			УчетнаяПолитикаБух
			);*/
				/*РезультатЗапросаПоВыпускуПродукцииНаЗатраты = ЗапросПоВыпускуНаЗатраты.Выполнить();*/
				if(true/*Не РезультатЗапросаПоВыпускуПродукцииНаЗатраты.Пустой()*/)
				{
					/*ВыборкаПоВыпускуПродукцииНаЗатраты = РезультатЗапросаПоВыпускуПродукцииНаЗатраты.Выбрать();*/
				}
			}
			/*// Формирование запроса по выпуску продукции со списанием на затраты (списком).
*/
			if(true/*ЕстьВыпускНаЗатратыСписок*/)
			{
				/*ЗапросПоВыпускуНаЗатратыСписок = СформироватьЗапросПоВыпускуПродукции(
			СтруктураШапкиДокумента,
			ТекстЗапросаПоВыпускуПродукцииНаЗатратыСписок,
			УчетнаяПолитика,
			УчетнаяПолитикаБух
			);*/
				/*РезультатЗапросаПоВыпускуПродукцииНаЗатратыСписок = ЗапросПоВыпускуНаЗатратыСписок.Выполнить();*/
				if(true/*Не РезультатЗапросаПоВыпускуПродукцииНаЗатратыСписок.Пустой()*/)
				{
					/*ВыборкаПоВыпускуПродукцииНаЗатратыСписок = РезультатЗапросаПоВыпускуПродукцииНаЗатратыСписок.Выбрать();*/
				}
			}
			/*// Формирование запроса по выпуску на внешние услуги.
*/
			if(true/*ЕстьВыпускНаВнешниеУслуги*/)
			{
				/*ЗапросПоВыпускуНаВнешниеУслуги = СформироватьЗапросПоВыпускуПродукции(
			СтруктураШапкиДокумента,
			ТекстЗапросаПоВыпускуВнешниеУслуги,
			УчетнаяПолитика,
			УчетнаяПолитикаБух
			);*/
				/*РезультатЗапросаПоВыпускуНаВнешниеУслуги = ЗапросПоВыпускуНаВнешниеУслуги.Выполнить();*/
				if(true/*Не РезультатЗапросаПоВыпускуНаВнешниеУслуги.Пустой()*/)
				{
					/*ВыборкаПоВыпускуНаВнешниеУслуги = РезультатЗапросаПоВыпускуНаВнешниеУслуги.Выбрать();*/
					/*ЗапросРаспределениеПоПроектам = СформироватьЗапросПоКоэффициентамРаспределенияПоПроектам(
				СтруктураШапкиДокумента,
				ВыборкаПоВыпускуНаВнешниеУслуги
			);*/
					/*РезультатЗапросаРаспределениеПоПроектам = ЗапросРаспределениеПоПроектам.Выполнить();*/
					/*ВыборкаРаспределениеПоПроектам = РезультатЗапросаРаспределениеПоПроектам.Выбрать();*/
				}
			}
			/*ВыборкаПоУчетнойСтоимости = РезультатЗапросаПоУчетнойСтоимости.Выбрать();*/
			while(true/*ВыборкаПоУчетнойСтоимости.Следующий()*/)
			{
				/*СтруктураПоиска = Новый Структура;*/
				/*СтруктураПоиска.Вставить("НоменклатурнаяГруппа", ВыборкаПоУчетнойСтоимости.НоменклатурнаяГруппа);*/
				/*СтруктураПоиска.Вставить("Номенклатура", ВыборкаПоУчетнойСтоимости.Номенклатура);*/
				/*СтруктураПоиска.Вставить("ХарактеристикаНоменклатуры", ВыборкаПоУчетнойСтоимости.ХарактеристикаНоменклатуры);*/
				/*СтруктураПоиска.Вставить("СерияНоменклатуры", ВыборкаПоУчетнойСтоимости.СерияНоменклатуры);*/
				/*СтруктураПоиска.Вставить("Спецификация", ВыборкаПоУчетнойСтоимости.Спецификация);*/
				/*СтруктураПоиска.Вставить("Заказ", ВыборкаПоУчетнойСтоимости.Заказ);*/
				/*СтруктураПоиска.Вставить("ЗаказРегл", ВыборкаПоУчетнойСтоимости.ЗаказРегл);*/
				/*ВсегоКоличество = ВыборкаПоУчетнойСтоимости.Количество;*/
				if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете*/)
				{
					/*ВсегоСтоимостьУУ = ВыборкаПоУчетнойСтоимости.СтоимостьУУ;*/
				}
				if(true/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете*/)
				{
					/*ВсегоСтоимостьБУ = ВыборкаПоУчетнойСтоимости.СтоимостьБУ;*/
				}
				if(true/*СтруктураШапкиДокумента.ОтражатьВНалоговомУчете*/)
				{
					/*ВсегоСтоимостьНУ = ВыборкаПоУчетнойСтоимости.СтоимостьНУ;*/
				}
				/*// Распределим учетную стоимость по выпуску продукции на склад.
*/
				if(true/*ЕстьВыпускНаСклад И Не РезультатЗапросаПоВыпускуПродукцииНаСклад.Пустой()*/)
				{
					/*РаспределитьУчетнуюСтоимостьВыпускПродукцииНаСклад(
				СтруктураШапкиДокумента,
				ВыборкаПоВыпускуПродукцииНаСклад,
				СтруктураПоиска,
				ВсегоКоличество,
				ВсегоСтоимостьУУ,
				ВсегоСтоимостьБУ,
				ВсегоСтоимостьНУ,
				УчетнаяПолитика,
				УчетнаяПолитикаБух,
				ПроведениеПоПартиям,
				СоответствиеКодОперацииСодержание,
				СтруктураКлючиАналитики,
				СтруктураНаборыЗаписей
				);*/
				}
				/*// Распределим учетную стоимость по выпуску продукции на затраты.
*/
				if(true/*ЕстьВыпускНаЗатраты И Не РезультатЗапросаПоВыпускуПродукцииНаЗатраты.Пустой()*/)
				{
					/*РаспределитьУчетнуюСтоимостьВыпускПродукцииНаЗатраты(
				СтруктураШапкиДокумента,
				ВыборкаПоВыпускуПродукцииНаЗатраты,
				СтруктураПоиска,
				ВсегоКоличество,
				ВсегоСтоимостьУУ,
				ВсегоСтоимостьБУ,
				ВсегоСтоимостьНУ,
				УчетнаяПолитика,
				УчетнаяПолитикаБух,
				ПроведениеПоПартиям,
				СоответствиеКодОперацииСодержание,
				СтруктураКлючиАналитики,
				СтруктураНаборыЗаписей
				);*/
				}
				/*// Распределим учетную стоимость по выпуску продукции на затраты.
*/
				if(true/*ЕстьВыпускНаЗатратыСписок И Не РезультатЗапросаПоВыпускуПродукцииНаЗатратыСписок.Пустой()*/)
				{
					/*РаспределитьУчетнуюСтоимостьВыпускПродукцииНаЗатратыСписок(
				СтруктураШапкиДокумента,
				ВыборкаПоВыпускуПродукцииНаЗатратыСписок,
				СтруктураПоиска,
				ВсегоКоличество,
				ВсегоСтоимостьУУ,
				ВсегоСтоимостьБУ,
				ВсегоСтоимостьНУ,
				УчетнаяПолитика,
				УчетнаяПолитикаБух,
				ПроведениеПоПартиям,
				СоответствиеКодОперацииСодержание,
				СтруктураКлючиАналитики,
				СтруктураНаборыЗаписей
				);*/
				}
				/*// Распределим учетную стоимость по выпуску на внешние услуги.
*/
				if(true/*ЕстьВыпускНаВнешниеУслуги И Не РезультатЗапросаПоВыпускуНаВнешниеУслуги.Пустой()*/)
				{
					/*РаспределитьУчетнуюСтоимостьВыпускНаВнешниеУслуги(
				СтруктураШапкиДокумента,
				ВыборкаПоВыпускуНаВнешниеУслуги,
				ВыборкаРаспределениеПоПроектам,
				СтруктураПоиска,
				ВсегоКоличество,
				ВсегоСтоимостьУУ,
				ВсегоСтоимостьБУ,
				ВсегоСтоимостьНУ,
				УчетнаяПолитика,
				УчетнаяПолитикаБух,
				СоответствиеКодОперацииСодержание,
				СтруктураКлючиАналитики,
				СтруктураНаборыЗаписей
				);*/
				}
			}
			/*;;*/
		}
		// РаспределитьУчетнуюСтоимостьПоНаправлениямВыпуска()
		// Процедура дополняет структуру шапки документа новыми значениями.
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	УчетнаяПолитика - Структура - Учетная политика по управленческому учету
		//	УчетнаяПолитикаБух - Структура - Учетная политика по бухгалтерскому учету
		//

		public void ДополнитьСтруктуруШапкиДокументаНастройкиУчета(/*
	СтруктураШапкиДокумента,
	УчетнаяПолитика,
	УчетнаяПолитикаБух
	*/)
		{
			if(true/*Не СтруктураШапкиДокумента.Свойство("ВестиПартионныйУчетПоСкладам")
	   И СтруктураШапкиДокумента.ОтражатьВУправленческомУчете*/)
			{
				/*ВестиПартионныйУчетПоСкладам = глЗначениеПеременной("ПараметрыПартионногоУчета").ВестиПартионныйУчетПоСкладам;*/
				/*СтруктураШапкиДокумента.Вставить("ВестиПартионныйУчетПоСкладам", ВестиПартионныйУчетПоСкладам);*/
			}
			if(true/*Не СтруктураШапкиДокумента.Свойство("ВестиПартионныйУчетПоСкладамРегл")
	   И СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете*/)
			{
				/*ВестиПартионныйУчетПоСкладамРегл = глЗначениеПеременной("ПараметрыПартионногоУчета").ВестиПартионныйУчетПоСкладамРегл;*/
				/*СтруктураШапкиДокумента.Вставить("ВестиПартионныйУчетПоСкладамРегл", ВестиПартионныйУчетПоСкладамРегл);*/
			}
			if(true/*Не СтруктураШапкиДокумента.Свойство("ВедениеУчетаЗатратПоПроектам")
		И СтруктураШапкиДокумента.ОтражатьВУправленческомУчете*/)
			{
				/*СтруктураШапкиДокумента.Вставить("ВедениеУчетаЗатратПоПроектам", УправлениеПроектами.ВедениеУчетаЗатратПоПроектам());*/
			}
			if(true/*Не СтруктураШапкиДокумента.Свойство("СпособОценкиМПЗ")
	   И СтруктураШапкиДокумента.ОтражатьВУправленческомУчете*/)
			{
				if(true/*ЗначениеЗаполнено(УчетнаяПолитика)*/)
				{
					/*СтруктураШапкиДокумента.Вставить("СпособОценкиМПЗ", УчетнаяПолитика.СпособОценкиМПЗ);*/
				}
			}
			if(true/*Не СтруктураШапкиДокумента.Свойство("СпособОценкиМПЗБух")
	   И СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете*/)
			{
				if(true/*ЗначениеЗаполнено(УчетнаяПолитикаБух)*/)
				{
					/*СтруктураШапкиДокумента.Вставить("СпособОценкиМПЗБух", УчетнаяПолитикаБух.СпособОценкиМПЗ);*/
				}
			}
			if(true/*Не СтруктураШапкиДокумента.Свойство("СложныйУчетНДС")
	   И СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете*/)
			{
				if(true/*ЗначениеЗаполнено(УчетнаяПолитикаБух)*/)
				{
					/*СтруктураШапкиДокумента.Вставить("СложныйУчетНДС", УчетнаяПолитикаБух.СложныйУчетНДС);*/
				}
			}
			if(true/*Не СтруктураШапкиДокумента.Свойство("ПартионныйУчетНДСвРазрезеСерийИХарактеристик")
	   И СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете*/)
			{
				if(true/*ЗначениеЗаполнено(УчетнаяПолитикаБух)*/)
				{
					/*СтруктураШапкиДокумента.Вставить("ПартионныйУчетНДСвРазрезеСерийИХарактеристик", УчетнаяПолитикаБух.ПартионныйУчетНДСвРазрезеСерийИХарактеристик);*/
				}
			}
			if(true/*Не СтруктураШапкиДокумента.Свойство("ПоддержкаПБУ18")
		И СтруктураШапкиДокумента.ОтражатьВНалоговомУчете*/)
			{
				if(true/*ЗначениеЗаполнено(УчетнаяПолитикаБух)*/)
				{
					/*СтруктураШапкиДокумента.Вставить("ПоддержкаПБУ18", УчетнаяПолитикаБух.ПоддержкаПБУ18);*/
				}
			}
		}
		// ДополнитьСтруктуруШапкиДокументаНастройкиУчета()
		// Процедура формирует движения по выпуску продукции по всем видам учета.
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	ИмяДокумента - Строка - Имя документа
		//	УчетнаяПолитика - Структура - Учетная политика по управленческому учету
		//	УчетнаяПолитикаБух - Структура - Учетная политика по бухгалтерскому учету
		//	ПроведениеПоПартиям - Булево - Признак вызова процедуры при восстановлении последовательности партионного учета
		//

		public void СформироватьДвиженияПоВыпускуПродукцииИНаправлениямВыпуска(/*
	СтруктураШапкиДокумента, 
	ИмяДокумента = "", 
	УчетнаяПолитика, 
	УчетнаяПолитикаБух,
	УчетнаяПолитикаНал,
	ПроведениеПоПартиям = Ложь
	*/)
		{
			/*ТекстЗапросаПоТабличнойЧастиПродукция = "";*/
			/*ТекстЗапросаПоВыпускуПродукцииНаработка = "";*/
			/*ТекстЗапросаПоВыпускуПродукцииНаСклад = "";*/
			/*ТекстЗапросаПоВыпускуПродукцииНаЗатраты = "";*/
			/*ТекстЗапросаПоВыпускуПродукцииНаЗатратыСписок = "";*/
			/*ТекстЗапросаПоВыпускуВнешниеУслуги = "";*/
			/*ТекстЗапросаПоТабличнойЧастиВозвратныеОтходы = "";*/
			/*ТипДокумента = ТипЗнч(СтруктураШапкиДокумента.Ссылка);*/
			if(true/*ТипДокумента = Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену")*/)
			{
				/*ТекстЗапросаПоТабличнойЧастиПродукция = СформироватьТекстЗапросаПоПродукцииОтчетПроизводстваЗаСмену();*/
				/*ТекстЗапросаПоВыпускуПродукцииНаработка = СформироватьТекстЗапросаПоВыпускуПродукцииНаработкаОтчетПроизводстваЗаСмену();*/
				/*ТекстЗапросаПоВыпускуПродукцииНаСклад = СформироватьТекстЗапросаПоВыпускуПродукцииНаСкладОтчетПроизводстваЗаСмену();*/
				/*ТекстЗапросаПоВыпускуПродукцииНаЗатраты = СформироватьТекстЗапросаПоВыпускуПродукцииНаЗатратыОтчетПроизводстваЗаСмену();*/
				/*ТекстЗапросаПоВыпускуПродукцииНаЗатратыСписок = СформироватьТекстЗапросаПоВыпускуПродукцииНаЗатратыСписокОтчетПроизводстваЗаСмену();*/
				/*ТекстЗапросаПоТабличнойЧастиВозвратныеОтходы = СформироватьТекстЗапросаПоТабличнойЧастиВозвратныеОтходыОтчетПроизводстваЗаСмену();*/
			}
			/*ДополнитьСтруктуруШапкиДокументаНастройкиУчета(
		СтруктураШапкиДокумента,
		УчетнаяПолитика,
		УчетнаяПолитикаБух
	);*/
			/*СтруктураНаборыЗаписей = Новый Структура;*/
			/*СтруктураКлючиАналитики = Новый Структура;*/
			/*// Формирование запроса по выпуску продукции (наработка).
*/
			if(true/*Не ПустаяСтрока(ТекстЗапросаПоВыпускуПродукцииНаработка)*/)
			{
				/*ЗапросПоВыпускуНаработка = СформироватьЗапросПоВыпускуПродукции(
			СтруктураШапкиДокумента,
			ТекстЗапросаПоВыпускуПродукцииНаработка,
			УчетнаяПолитика,
			УчетнаяПолитикаБух
			);*/
				/*РезультатЗапросаПоВыпускуНаработка = ЗапросПоВыпускуНаработка.Выполнить();*/
				if(true/*Не РезультатЗапросаПоВыпускуНаработка.Пустой()*/)
				{
					/*СформироватьДвиженияВыпускПродукцииНаработка(
				СтруктураШапкиДокумента,
				РезультатЗапросаПоВыпускуНаработка,
				СтруктураКлючиАналитики,
				СтруктураНаборыЗаписей
				);*/
				}
			}
			/*// Формирование запроса по выпущенной продукции и учетной стоимости продукции.
*/
			if(true/*Не ПустаяСтрока(ТекстЗапросаПоТабличнойЧастиПродукция)*/)
			{
				/*ЗапросПоУчетнойСтоимости = СформироватьЗапросПоВыпущеннойПродукцииИУчетнойСтоимости(
			СтруктураШапкиДокумента,
			ИмяДокумента,
			ТекстЗапросаПоТабличнойЧастиПродукция,
			УчетнаяПолитика,
			УчетнаяПолитикаБух
		);*/
			}
			/*РезультатЗапросаПоУчетнойСтоимости = ЗапросПоУчетнойСтоимости.Выполнить();*/
			if(true/*Не РезультатЗапросаПоУчетнойСтоимости.Пустой()*/)
			{
				/*РаспределитьУчетнуюСтоимостьПоНаправлениямВыпуска(
			СтруктураШапкиДокумента,
			РезультатЗапросаПоУчетнойСтоимости,
			ТекстЗапросаПоВыпускуПродукцииНаСклад,
			ТекстЗапросаПоВыпускуПродукцииНаЗатраты,
			ТекстЗапросаПоВыпускуПродукцииНаЗатратыСписок,
			ТекстЗапросаПоВыпускуВнешниеУслуги,
			УчетнаяПолитика,
			УчетнаяПолитикаБух,
			ПроведениеПоПартиям,
			СтруктураКлючиАналитики,
			СтруктураНаборыЗаписей
			);*/
			}
			/*// Формирование запроса по возвратным отходам.
*/
			if(true/*Не ПустаяСтрока(ТекстЗапросаПоТабличнойЧастиВозвратныеОтходы)*/)
			{
				/*ЗапросПоВозвратнымОтходам = СформироватьЗапросПоВыпускуПродукции(
			СтруктураШапкиДокумента,
			ТекстЗапросаПоТабличнойЧастиВозвратныеОтходы,
			УчетнаяПолитика,
			УчетнаяПолитикаБух
			);*/
				/*РезультатЗапросаПоВозвратнымОтходам = ЗапросПоВозвратнымОтходам.Выполнить();*/
				if(true/*Не РезультатЗапросаПоВозвратнымОтходам.Пустой()*/)
				{
					/*СформироватьДвиженияПоВозвратнымОтходам(
				СтруктураШапкиДокумента,
				РезультатЗапросаПоВозвратнымОтходам,
				УчетнаяПолитика,
				УчетнаяПолитикаБух,
				ПроведениеПоПартиям,
				СтруктураКлючиАналитики,
				СтруктураНаборыЗаписей
				);*/
				}
			}
			if(true/*СтруктураНаборыЗаписей.Количество() > 0*/)
			{
				/*УправлениеЗатратамиДвиженияПоРегистрам.ЗаписатьНаборыЗаписейРегистров(
			СтруктураНаборыЗаписей
			);*/
			}
		}
		// СформироватьДвиженияПоВыпускуПродукцииИНаправлениямВыпуска()
		// ФОРМИРОВАНИЕ ДВИЖЕНИЙ ПО ВЫПУСКУ ПРИ РАСШИРЕННОЙ АНАЛИТИКЕ
		// Процедура получает ключи аналитики для направления выпуска продукции.
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Строка выборки из результата запроса
		//	ВидВыпуска - ПеречислениеСсылка.ВидыВыпуска - Вид выпуска
		//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отражения в учете для получения ключа аналитики
		//	СтруктураКлючиАналитики - Структура - Структура с таблицами ключей аналитики для кэширования данных
		//
		// Выходные параметры:
		//	АналитикаВидаУчета - СправочникСсылка.КлючиАналитикиВидаУчета - Ключ аналитики
		//	АналитикаРаспределенияЗатрат - СправочникСсылка.КлючиАналитикиРаспределенияЗатрат - Ключ аналитики
		//	АналитикаУчетаПартий - СправочникСсылка.КлючиАналитикиУчетаПартий - Ключ аналитики
		//

		public void ПолучитьАналитикуУчетаВыпуска(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	ВидВыпуска,
	ВидОтраженияВУчете,
	СтруктураКлючиАналитики,
	АналитикаВидаУчета,
	АналитикаРаспределенияЗатрат,
	АналитикаУчетаПартий
	*/)
		{
			/*АналитикаВидаУчета = Неопределено;*/
			/*АналитикаУчетаВыпуска = Неопределено;*/
			/*АналитикаУчетаЗатрат = Неопределено;*/
			/*СтруктураПараметров = Новый Структура;*/
			if(true/*ВидВыпуска = Перечисления.ВидыВыпуска.Наработка*/)
			{
				/*СтруктураПараметров.Вставить("РазделУчета", Перечисления.РазделыУчета.Наработка);*/
			}
			/*СтруктураПараметров.Вставить("Подразделение", СтрокаВыборки.Подразделение);*/
			/*СтруктураПараметров.Вставить("Организация", СтрокаВыборки.Организация);*/
			/*СтруктураПараметров.Вставить("ПодразделениеОрганизации", СтрокаВыборки.ПодразделениеОрганизации);*/
			/*СтруктураПараметров.Вставить("СчетУчета", СтрокаВыборки.СчетЗатрат);*/
			/*СтруктураПараметров.Вставить("СчетУчетаНУ", СтрокаВыборки.СчетЗатратНУ);*/
			/*АналитикаВидаУчета = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
		СтруктураШапкиДокумента,
		СтруктураПараметров,
		Перечисления.КлючиАналитики.АналитикаВидаУчета,
		ВидОтраженияВУчете,
		СтруктураКлючиАналитики
	);*/
			/*СтруктураПараметров = Новый Структура;*/
			/*СтруктураПараметров.Вставить("НоменклатурнаяГруппа", СтрокаВыборки.НоменклатурнаяГруппа);*/
			/*СтруктураПараметров.Вставить("Продукция", СтрокаВыборки.Продукция);*/
			/*СтруктураПараметров.Вставить("ХарактеристикаПродукции", СтрокаВыборки.ХарактеристикаПродукции);*/
			/*СтруктураПараметров.Вставить("СерияПродукции", СтрокаВыборки.СерияПродукции);*/
			/*СтруктураПараметров.Вставить("Спецификация", СтрокаВыборки.Спецификация);*/
			/*АналитикаРаспределенияЗатрат = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
		СтруктураШапкиДокумента,
		СтруктураПараметров,
		Перечисления.КлючиАналитики.АналитикаРаспределенияЗатрат,
		ВидОтраженияВУчете,
		СтруктураКлючиАналитики
	);*/
			/*СтруктураПараметров = Новый Структура;*/
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете*/)
			{
				/*СтруктураПараметров.Вставить("Заказ", СтрокаВыборки.Заказ);*/
			}
			/*АналитикаУчетаПартий = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
		СтруктураШапкиДокумента,
		СтруктураПараметров,
		Перечисления.КлючиАналитики.АналитикаУчетаПартий,
		ВидОтраженияВУчете,
		СтруктураКлючиАналитики
	);*/
		}
		// ПолучитьАналитикуУчетаВыпуска()
		// Процедура формирует движения по регистрам "Учет затрат" (отражение выпуска продукции).
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	ВидВыпуска - ПеречислениеСсылка.ВидыВыпуска - Вид выпуска
		//	МассивСтрокБазыРаспределения - Массив - Массив строк базы распределения по проектам
		//	КодОперацииВыпускПродукцииУУ - ПеречислениеСсылка.КодыОперацийВыпускПродукции - Код операции по управленческому учету
		//	КодОперацииВыпускПродукцииБУ - ПеречислениеСсылка.КодыОперацийВыпускПродукции - Код операции по бухгалтерскому учету
		//	Количество - Число - Количество затрат
		//	СтоимостьУУ - Число - Учетная стоимость по управленческому учету
		//	СтоимостьБУ - Число - Учетная стоимость по бухгалтерскому учету
		//	СтоимостьНУ - Число - Учетная стоимость по налоговому учету
		//	СтруктураКлючиАналитики - Структура - Структура с таблицами ключей аналитики для кэширования данных
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void ДвиженияПоРегистрамУчетЗатратВыпускПродукции(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	ВидВыпуска,
	МассивСтрокБазыРаспределения,
	КодОперацииВыпускПродукцииУУ,
	КодОперацииВыпускПродукцииБУ,
	Знач Количество,
	Знач СтоимостьУУ,
	Знач СтоимостьБУ,
	Знач СтоимостьНУ,
	СтруктураКлючиАналитики,
	СтруктураНаборыЗаписей
	*/)
		{
			/*МассивКодовКорректировки = Новый Массив;*/
			/*МассивКодовКорректировки.Добавить(Перечисления.КодыОперацийВыпускПродукции.СписаниеНЗП);*/
			/*МассивКодовКорректировки.Добавить(Перечисления.КодыОперацийВыпускПродукции.СписаниеНЗПФикс);*/
			/*МассивКодовКорректировки.Добавить(Перечисления.КодыОперацийВыпускПродукции.ВозвратМатериаловИзПроизводстваРасч);*/
			/*МассивКодовКорректировки.Добавить(Перечисления.КодыОперацийВыпускПродукции.ВозвратМатериаловИзПроизводстваФикс);*/
			/*МассивКодовКорректировки.Добавить(Перечисления.КодыОперацийВыпускПродукции.КорректировкаНЗПРасч);*/
			/*МассивКодовКорректировки.Добавить(Перечисления.КодыОперацийВыпускПродукции.КорректировкаНЗПФикс);*/
			/*КодыОперацийБезКорАналитики = Новый Массив;*/
			/*КодыОперацийБезКорАналитики.Добавить(Перечисления.КодыОперацийВыпускПродукции.ОприходованиеНЗП);*/
			/*КодыОперацийБезКорАналитики.Добавить(Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииПоФиксированнойСтоимости);*/
			/*КодыОперацийБезКорАналитики.Добавить(Перечисления.КодыОперацийНезавершенноеПроизводство.ОтрицательныеЗатраты);*/
			/*КодыОперацийБезКорАналитики.Добавить(Перечисления.КодыОперацийЗатратыНаВыпускПродукции.ОтрицательныеЗатраты);*/
			/*// По материалам принятым в переработку движения по регистрам учета затрат не формируются.
*/
			/*ВыпускМатериаловПринятыхВПереработку = ОпределитьСтатусМатериальныхЗатратВПереработку(СтрокаВыборки);*/
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете
	   И СтруктураШапкиДокумента.ОтражатьЗатратыВУпрУчете
	   И НЕ ВыпускМатериаловПринятыхВПереработку*/)
			{
				/*ИмяРегистра = "УчетЗатрат";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*АналитикаВидаУчета = Неопределено;*/
				/*АналитикаУчетаЗатрат = Неопределено;*/
				/*АналитикаУчетаПартий = Неопределено;*/
				/*АналитикаРаспределенияЗатрат = Неопределено;*/
				/*УчетЗатратПоНоменклатуре = Истина;*/
				/*УчетЗатратПоПроектам = Ложь;*/
				/*ПолучитьАналитикуНаправленияВыпуска(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете,
			КодОперацииВыпускПродукцииУУ,
			СтруктураКлючиАналитики,
			АналитикаВидаУчета,
			АналитикаУчетаЗатрат,
			АналитикаУчетаПартий,
			АналитикаРаспределенияЗатрат,
			УчетЗатратПоНоменклатуре,
			УчетЗатратПоПроектам
		);*/
				/*КорАналитикаВидаУчета = Неопределено;*/
				/*КорАналитикаУчетаЗатрат = Неопределено;*/
				/*КорАналитикаРаспределенияЗатрат = Неопределено;*/
				/*КорАналитикаУчетаПартий = Неопределено;*/
				/*КорУчетЗатратПоНоменклатуре = Истина;*/
				if(true/*МассивКодовКорректировки.Найти(КодОперацииВыпускПродукцииУУ) <> Неопределено*/)
				{
					/*ПолучитьАналитикуУчетаЗатрат(
				СтруктураШапкиДокумента,
				СтрокаВыборки,
				Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете,
				СтруктураКлючиАналитики,
				КорАналитикаВидаУчета,
				КорАналитикаУчетаЗатрат,
				КорАналитикаРаспределенияЗатрат,
				КорАналитикаУчетаПартий,
				КорУчетЗатратПоНоменклатуре
			);*/
				}
				if(true/*УчетЗатратПоПроектам
		   И МассивСтрокБазыРаспределения.Количество() > 0*/)
				{
					/*РаспределитьСуммуВыпускаПоПроектам(
				СтруктураШапкиДокумента,
				СтрокаВыборки,
				МассивСтрокБазыРаспределения,
				АналитикаВидаУчета,
				АналитикаУчетаЗатрат,
				АналитикаУчетаПартий,
				АналитикаРаспределенияЗатрат,
				КорАналитикаВидаУчета,
				КорАналитикаУчетаЗатрат,
				КорАналитикаУчетаПартий,
				КорАналитикаРаспределенияЗатрат,
				ВидДвиженияНакопления.Приход,
				КодОперацииВыпускПродукцииУУ,
				?(УчетЗатратПоНоменклатуре, Количество, 0),
				СтоимостьУУ,
				СтруктураКлючиАналитики,
				СтруктураНаборыЗаписей[ИмяРегистра]
			);*/
				}
				if(true/*МассивКодовКорректировки.Найти(КодОперацииВыпускПродукцииУУ) <> Неопределено*/)
				{
					/*// КоличествоНУ,
*/
					/*// СтоимостьНУ,
*/
					/*// ПостояннаяРазница
*/
					/*СтруктураНаборыЗаписей[ИмяРегистра]
			);*/
				}
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете
	   И НЕ ВыпускМатериаловПринятыхВПереработку*/)
			{
				/*ИмяРегистра = "УчетЗатратРегл";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*АналитикаВидаУчета = Неопределено;*/
				/*АналитикаУчетаЗатрат = Неопределено;*/
				/*АналитикаУчетаПартий = Неопределено;*/
				/*АналитикаРаспределенияЗатрат = Неопределено;*/
				/*УчетЗатратПоНоменклатуре = Истина;*/
				/*УчетЗатратПоПроектам = Ложь;*/
				/*ПолучитьАналитикуНаправленияВыпуска(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете,
			КодОперацииВыпускПродукцииУУ,
			СтруктураКлючиАналитики,
			АналитикаВидаУчета,
			АналитикаУчетаЗатрат,
			АналитикаУчетаПартий,
			АналитикаРаспределенияЗатрат,
			УчетЗатратПоНоменклатуре,
			УчетЗатратПоПроектам
		);*/
				/*КорАналитикаВидаУчета = Неопределено;*/
				/*КорАналитикаУчетаЗатрат = Неопределено;*/
				/*КорАналитикаРаспределенияЗатрат = Неопределено;*/
				/*КорАналитикаУчетаПартий = Неопределено;*/
				/*КорУчетЗатратПоНоменклатуре = Истина;*/
				if(true/*МассивКодовКорректировки.Найти(КодОперацииВыпускПродукцииБУ) <> Неопределено*/)
				{
					/*ПолучитьАналитикуУчетаЗатрат(
				СтруктураШапкиДокумента,
				СтрокаВыборки,
				Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете,
				СтруктураКлючиАналитики,
				КорАналитикаВидаУчета,
				КорАналитикаУчетаЗатрат,
				КорАналитикаРаспределенияЗатрат,
				КорАналитикаУчетаПартий,
				КорУчетЗатратПоНоменклатуре
			);*/
				}
				if(true/*СтруктураШапкиДокумента.ОтражатьВНалоговомУчете*/)
				{
					/*КоличествоНУ = Количество;*/
				}
				/*// ПостояннаяРазница
*/
				/*СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
				if(true/*МассивКодовКорректировки.Найти(КодОперацииВыпускПродукцииБУ) <> Неопределено*/)
				{
					/*// ПостояннаяРазница
*/
					/*СтруктураНаборыЗаписей[ИмяРегистра]
			);*/
				}
			}
		}
		// ДвиженияПоРегистрамУчетЗатратВыпускПродукции()
		// Процедура формирует движения по регистрам "Учет затрат" (отражение выпуска продукции по наработке).
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	Количество - Число - Количество продукции
		//	КоличествоДоделка - Число - Количество продукции (доделка)
		//	СтоимостьУУ - Число - Учетная стоимость по управленческому учету
		//	СтоимостьБУ - Число - Учетная стоимость по бухгалтерскому учету
		//	СтоимостьНУ - Число - Учетная стоимость по налоговому учету
		//	СтруктураКлючиАналитики - Структура - Структура с таблицами ключей аналитики для кэширования данных
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void ДвиженияПоРегистрамУчетЗатратВыпускПродукцииНаработка(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	Знач Количество,
	Знач КоличествоДоделка,
	Знач СтоимостьУУ,
	Знач СтоимостьБУ,
	Знач СтоимостьНУ,
	СтруктураКлючиАналитики,
	СтруктураНаборыЗаписей
	*/)
		{
			/*// Для вида выпуска "Наработка" движения формируем только, если количество выпуска
*/
			/*// больше количества доделки.
*/
			if(true/*СтрокаВыборки.ВидВыпуска = Перечисления.ВидыВыпуска.Наработка
	   И Количество <= КоличествоДоделка*/)
			{
			}
			/*Количество = Макс(Количество - КоличествоДоделка, 0);*/
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете
	   И СтруктураШапкиДокумента.ОтражатьЗатратыВУпрУчете*/)
			{
				/*ИмяРегистра = "УчетЗатрат";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*АналитикаВидаУчета = Неопределено;*/
				/*АналитикаРаспределенияЗатрат = Неопределено;*/
				/*АналитикаУчетаПартий = Неопределено;*/
				/*ПолучитьАналитикуУчетаВыпуска(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			Перечисления.ВидыВыпуска.Наработка,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете,
			СтруктураКлючиАналитики,
			АналитикаВидаУчета,
			АналитикаРаспределенияЗатрат,
			АналитикаУчетаПартий
		);*/
				/*// АналитикаУчетаЗатрат,
*/
				/*// КорАналитикаВидаУчета,
*/
				/*// КорАналитикаУчетаЗатрат,
*/
				/*// КорАналитикаУчетаПартий,
*/
				/*// КорАналитикаРаспределенияЗатрат,
*/
				/*// КодОперации
*/
				/*// КоличествоНУ,
*/
				/*// СтоимостьНУ,
*/
				/*// ПостояннаяРазница
*/
				/*СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
				/*// АналитикаУчетаЗатрат,
*/
				/*// КорАналитикаВидаУчета,
*/
				/*// КорАналитикаУчетаЗатрат,
*/
				/*// КорАналитикаУчетаПартий,
*/
				/*// КорАналитикаРаспределенияЗатрат,
*/
				/*// КодОперации
*/
				/*// СтоимостьУУ,
*/
				/*// КоличествоНУ,
*/
				/*// СтоимостьНУ,
*/
				/*// ПостояннаяРазница
*/
				/*СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете*/)
			{
				/*ИмяРегистра = "УчетЗатратРегл";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*АналитикаВидаУчета = Неопределено;*/
				/*АналитикаРаспределенияЗатрат = Неопределено;*/
				/*АналитикаУчетаПартий = Неопределено;*/
				/*ПолучитьАналитикуУчетаВыпуска(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			Перечисления.ВидыВыпуска.Наработка,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете,
			СтруктураКлючиАналитики,
			АналитикаВидаУчета,
			АналитикаРаспределенияЗатрат,
			АналитикаУчетаПартий
		);*/
				if(true/*СтруктураШапкиДокумента.ОтражатьВНалоговомУчете*/)
				{
					/*КоличествоНУ = Количество;*/
					/*КоличествоДоделкаНУ = КоличествоДоделка;*/
				}
				/*// АналитикаУчетаЗатрат,
*/
				/*// КорАналитикаВидаУчета,
*/
				/*// КорАналитикаУчетаЗатрат,
*/
				/*// КорАналитикаУчетаПартий,
*/
				/*// КорАналитикаРаспределенияЗатрат,
*/
				/*// КодОперации
*/
				/*// ПостояннаяРазница
*/
				/*СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
				/*// АналитикаУчетаЗатрат,
*/
				/*// КорАналитикаВидаУчета,
*/
				/*// КорАналитикаУчетаЗатрат,
*/
				/*// КорАналитикаУчетаПартий,
*/
				/*// КорАналитикаРаспределенияЗатрат,
*/
				/*// КодОперации
*/
				/*// СтоимостьБУ,
*/
				/*// СтоимостьНУ,
*/
				/*// ПостояннаяРазница
*/
				/*СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
		}
		// ДвиженияПоРегистрамУчетЗатратВыпускПродукцииНаработка()
		// Процедура формирует движения по регистрам "Выпуск продукции и услуг".
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	ВидВыпуска - ПеречислениеСсылка.ВидыВыпуска - Вид выпуска
		//	МассивСтрокБазыРаспределения - Массив - Массив строк базы распределения по проектам
		//	КодОперацииВыпускПродукцииУУ - ПеречислениеСсылка.КодыОперацийВыпускПродукции - Код операции по управленческому учету
		//	КодОперацииВыпускПродукцииБУ - ПеречислениеСсылка.КодыОперацийВыпускПродукции - Код операции по бухгалтерскому учету
		//	Количество - Число - Количество выпуска
		//	СтоимостьУУ - Число - Учетная стоимость по управленческому учету
		//	СтоимостьБУ - Число - Учетная стоимость по бухгалтерскому учету
		//	СтоимостьНУ - Число - Учетная стоимость по налоговому учету
		//	СтруктураКлючиАналитики - Структура - Структура с таблицами ключей аналитики для кэширования данных
		//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
		//

		public void ДвиженияПоРегистрамВыпускПродукцииИУслуг(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	ВидВыпуска,
	МассивСтрокБазыРаспределения,
	КодОперацииВыпускПродукцииУУ,
	КодОперацииВыпускПродукцииБУ,
	Знач Количество,
	Знач СтоимостьУУ,
	Знач СтоимостьБУ,
	Знач СтоимостьНУ,
	СтруктураКлючиАналитики,
	СтруктураНаборыЗаписей
	*/)
		{
			/*ИсключаемыеКодыОпераций = Новый Массив;*/
			/*ИсключаемыеКодыОпераций.Добавить(Перечисления.КодыОперацийВыпускПродукции.ОприходованиеНЗП);*/
			/*ИсключаемыеКодыОпераций.Добавить(Перечисления.КодыОперацийВыпускПродукции.ВозвратМатериаловИзПроизводстваРасч);*/
			/*ИсключаемыеКодыОпераций.Добавить(Перечисления.КодыОперацийВыпускПродукции.ВозвратМатериаловИзПроизводстваФикс);*/
			/*ИсключаемыеКодыОпераций.Добавить(Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииПоФиксированнойСтоимости);*/
			/*ИсключаемыеКодыОпераций.Добавить(Перечисления.КодыОперацийВыпускПродукции.КорректировкаНЗПРасч);*/
			/*ИсключаемыеКодыОпераций.Добавить(Перечисления.КодыОперацийВыпускПродукции.КорректировкаНЗПФикс);*/
			/*ИсключаемыеКодыОпераций.Добавить(Перечисления.КодыОперацийВыпускПродукции.СписаниеНЗП);*/
			/*ИсключаемыеКодыОпераций.Добавить(Перечисления.КодыОперацийВыпускПродукции.СписаниеНЗПФикс);*/
			if(true/*ИсключаемыеКодыОпераций.Найти(КодОперацииВыпускПродукцииУУ) <> Неопределено
	 ИЛИ ИсключаемыеКодыОпераций.Найти(КодОперацииВыпускПродукцииБУ) <> Неопределено*/)
			{
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВУправленческомУчете
	   И СтруктураШапкиДокумента.ОтражатьЗатратыВУпрУчете*/)
			{
				/*АналитикаВидаУчета = Неопределено;*/
				/*АналитикаУчетаПродукции = Неопределено;*/
				/*АналитикаУчетаПартий = Неопределено;*/
				/*ПолучитьАналитикуУчетаВыпуска(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			ВидВыпуска,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете,
			СтруктураКлючиАналитики,
			АналитикаВидаУчета,
			АналитикаУчетаПродукции,
			АналитикаУчетаПартий
		);*/
				/*КорАналитикаВидаУчета = Неопределено;*/
				/*КорАналитикаУчетаЗатрат = Неопределено;*/
				/*КорАналитикаУчетаПартий = Неопределено;*/
				/*КорАналитикаРаспределенияЗатрат = Неопределено;*/
				/*УчетЗатратПоНоменклатуре = Истина;*/
				/*УчетЗатратПоПроектам = Ложь;*/
				/*ПолучитьАналитикуНаправленияВыпуска(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете,
			КодОперацииВыпускПродукцииУУ,
			СтруктураКлючиАналитики,
			КорАналитикаВидаУчета,
			КорАналитикаУчетаЗатрат,
			КорАналитикаУчетаПартий,
			КорАналитикаРаспределенияЗатрат,
			УчетЗатратПоНоменклатуре,
			УчетЗатратПоПроектам
		);*/
				/*ИмяРегистра = "УчетЗатрат";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				/*// Движения "Приход" по аналитике выпуска.
*/
				if(true/*ВидВыпуска = Перечисления.ВидыВыпуска.Выпуск*/)
				{
					/*// АналитикаУчетаЗатрат,
*/
					/*// КорАналитикаВидаУчета,
*/
					/*// КорАналитикаУчетаЗатрат,
*/
					/*// КорАналитикаУчетаПартий,
*/
					/*// КорАналитикаРаспределенияЗатрат,
*/
					/*// КодОперации
*/
					/*// КоличествоНУ,
*/
					/*// СтоимостьНУ,
*/
					/*// ПостояннаяРазница
*/
					/*СтруктураНаборыЗаписей[ИмяРегистра]
			);*/
				}
				/*// Движения "Расход" по аналитике выпуска.
*/
				if(true/*УчетЗатратПоПроектам
		   И МассивСтрокБазыРаспределения.Количество() > 0*/)
				{
					/*// АналитикаУчетаЗатрат,
*/
					/*АналитикаУчетаПартий,
				АналитикаУчетаПродукции,
				КорАналитикаВидаУчета,
				КорАналитикаУчетаЗатрат,
				КорАналитикаУчетаПартий,
				КорАналитикаРаспределенияЗатрат,
				ВидДвиженияНакопления.Расход,
				КодОперацииВыпускПродукцииУУ,
				Количество,
				СтоимостьУУ,
				СтруктураКлючиАналитики,
				СтруктураНаборыЗаписей[ИмяРегистра]
			);*/
				}
			}
			if(true/*СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете*/)
			{
				/*АналитикаВидаУчета = Неопределено;*/
				/*АналитикаУчетаПродукции = Неопределено;*/
				/*АналитикаУчетаПартий = Неопределено;*/
				/*ПолучитьАналитикуУчетаВыпуска(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			ВидВыпуска,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете,
			СтруктураКлючиАналитики,
			АналитикаВидаУчета,
			АналитикаУчетаПродукции,
			АналитикаУчетаПартий
		);*/
				/*КорАналитикаВидаУчета = Неопределено;*/
				/*КорАналитикаУчетаЗатрат = Неопределено;*/
				/*КорАналитикаУчетаПартий = Неопределено;*/
				/*КорАналитикаРаспределенияЗатрат = Неопределено;*/
				/*УчетЗатратПоНоменклатуре = Истина;*/
				/*УчетЗатратПоПроектам = Ложь;*/
				/*ПолучитьАналитикуНаправленияВыпуска(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете,
			КодОперацииВыпускПродукцииБУ,
			СтруктураКлючиАналитики,
			КорАналитикаВидаУчета,
			КорАналитикаУчетаЗатрат,
			КорАналитикаУчетаПартий,
			КорАналитикаРаспределенияЗатрат,
			УчетЗатратПоНоменклатуре,
			УчетЗатратПоПроектам
		);*/
				/*ИмяРегистра = "УчетЗатратРегл";*/
				/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
			СтруктураШапкиДокумента, 
			ИмяРегистра,
			СтруктураНаборыЗаписей
		);*/
				if(true/*Не ПолученНаборЗаписей*/)
				{
				}
				if(true/*СтруктураШапкиДокумента.ОтражатьВНалоговомУчете*/)
				{
					/*КоличествоНУ = Количество;*/
				}
				/*// Движения "Приход" по аналитике выпуска.
*/
				if(true/*ВидВыпуска = Перечисления.ВидыВыпуска.Выпуск*/)
				{
					/*// АналитикаУчетаЗатрат,
*/
					/*// КорАналитикаВидаУчета,
*/
					/*// КорАналитикаУчетаЗатрат,
*/
					/*// КорАналитикаУчетаПартий,
*/
					/*// КорАналитикаРаспределенияЗатрат,
*/
					/*// КодОперации
*/
					/*// ПостояннаяРазница
*/
					/*СтруктураНаборыЗаписей[ИмяРегистра]
			);*/
				}
				/*// Движения "Расход" по аналитике выпуска.
*/
				/*// АналитикаУчетаЗатрат,
*/
				/*// ПостояннаяРазница
*/
				/*СтруктураНаборыЗаписей[ИмяРегистра]
		);*/
			}
		}
		// ДвиженияПоРегистрамВыпускПродукцииИУслуг()
		// Процедура получает ключи аналитики для направления выпуска продукции.
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Строка выборки из результата запроса
		//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отражения в учете для получения ключа аналитики
		//	КодОперации - ПеречислениеСсылка.КодыОперацийВыпускПродукции - Код операции
		//	СтруктураКлючиАналитики - Структура - Структура с таблицами ключей аналитики для кэширования данных
		//
		// Выходные параметры:
		//	КорАналитикаВидаУчета - СправочникСсылка.КлючиАналитикиВидаУчета - Ключ аналитики
		//	КорАналитикаУчетаЗатрат - СправочникСсылка.КлючиАналитикиУчетаЗатрат - Ключ аналитики
		//	КорАналитикаУчетаПартий - СправочникСсылка.КлючиАналитикиУчетаПартий - Ключ аналитики
		//	КорАналитикаРаспределенияЗатрат - СправочникСсылка.КлючиАналитикиРаспределенияЗатрат - Ключ аналитики
		//	УчетЗатратПоНоменклатуре - Булево - Признак учета затрат по номенклатуре
		//	УчетЗатратПоПроектам - Булево - Признак учета затрат по проектам
		//

		public void ПолучитьАналитикуНаправленияВыпуска(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	ВидОтраженияВУчете,
	КодОперации,
	СтруктураКлючиАналитики,
	КорАналитикаВидаУчета,
	КорАналитикаУчетаЗатрат,
	КорАналитикаУчетаПартий,
	КорАналитикаРаспределенияЗатрат,
	УчетЗатратПоНоменклатуре,
	УчетЗатратПоПроектам
	*/)
		{
			/*КорАналитикаВидаУчета = Неопределено;*/
			/*КорАналитикаУчетаЗатрат = Неопределено;*/
			/*КорАналитикаУчетаПартий = Неопределено;*/
			/*КорАналитикаРаспределенияЗатрат = Неопределено;*/
			/*УчетЗатратПоНоменклатуре = Истина;*/
			if(true/*КодОперации = Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииФиксВнутрУслугиНаПостЗатраты*/)
			{
				if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете*/)
				{
					/*ХарактерЗатрат = УправлениеЗатратами.ПолучитьХарактерЗатратПоСчетуЗатрат(
				СтрокаВыборки.СчетДт, 
				СтрокаВыборки.СтатьяЗатратПолучатель
			);*/
				}
			}
			if(true/*КодОперации = Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииФиксНаСклад
	 ИЛИ КодОперации = Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииПоФиксированнойСтоимости
	 ИЛИ КодОперации = Перечисления.КодыОперацийВыпускПродукции.ВозвратМатериаловИзПроизводстваРасч
	 ИЛИ КодОперации = Перечисления.КодыОперацийВыпускПродукции.ВозвратМатериаловИзПроизводстваФикс*/)
			{
				/*СтруктураПараметров = Новый Структура;*/
				/*СтруктураПараметров.Вставить("РазделУчета", Перечисления.РазделыУчета.МПЗ);*/
				/*СтруктураПараметров.Вставить("Организация", СтрокаВыборки.Организация);*/
				/*СтруктураПараметров.Вставить("СчетУчета", СтрокаВыборки.СчетДт);*/
				/*СтруктураПараметров.Вставить("СчетУчетаНУ", СтрокаВыборки.СчетДтНУ);*/
				if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете*/)
				{
					if(true/*СтруктураШапкиДокумента.ВестиПартионныйУчетПоСкладам*/)
					{
						/*СтруктураПараметров.Вставить("Склад", СтрокаВыборки.СкладПолучатель);*/
					}
				}
				/*КорАналитикаВидаУчета = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
			СтруктураШапкиДокумента,
			СтруктураПараметров,
			Перечисления.КлючиАналитики.АналитикаВидаУчета,
			ВидОтраженияВУчете,
			СтруктураКлючиАналитики
		);*/
				/*СтруктураПараметров = Новый Структура;*/
				/*СтруктураПараметров.Вставить("Затрата", СтрокаВыборки.Продукция);*/
				/*СтруктураПараметров.Вставить("ХарактеристикаЗатраты", СтрокаВыборки.ХарактеристикаПродукции);*/
				if(true/*СтрокаВыборки.ВестиПартионныйУчетПоСериям*/)
				{
					/*СтруктураПараметров.Вставить("СерияЗатраты", СтрокаВыборки.СерияПродукции);*/
				}
				/*СтруктураПараметров.Вставить("Качество", СтрокаВыборки.Качество);*/
				/*КорАналитикаУчетаЗатрат = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
			СтруктураШапкиДокумента,
			СтруктураПараметров,
			Перечисления.КлючиАналитики.АналитикаУчетаЗатрат,
			ВидОтраженияВУчете,
			СтруктураКлючиАналитики
		);*/
				/*СтруктураПараметров = Новый Структура;*/
				/*СтруктураПараметров.Вставить("Заказ", Неопределено);*/
				/*// Обособленный учет на складе по заказам не поддерживается
*/
				/*СтруктураПараметров.Вставить("СтатусПартии", Перечисления.СтатусыПартийТоваров.Купленный);*/
				/*// Статус партии пишем фиксированный.
*/
				/*КорАналитикаУчетаПартий = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
			СтруктураШапкиДокумента,
			СтруктураПараметров,
			Перечисления.КлючиАналитики.АналитикаУчетаПартий,
			ВидОтраженияВУчете,
			СтруктураКлючиАналитики
		);*/
				/*СтруктураПараметров = Новый Структура;*/
				/*КорАналитикаРаспределенияЗатрат = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
			СтруктураШапкиДокумента,
			СтруктураПараметров,
			Перечисления.КлючиАналитики.АналитикаРаспределенияЗатрат,
			ВидОтраженияВУчете,
			СтруктураКлючиАналитики
		);*/
			}
		}
		// ПолучитьАналитикуНаправленияВыпуска()
		// Процедура получает ключи аналитики для аналитики учета затрат.
		//
		// Параметры:
		//	СтруктураШапкиДокумента - Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Строка выборки из результата запроса
		//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отражения в учете для получения ключа аналитики
		//	СтруктураКлючиАналитики - Структура - Структура с таблицами ключей аналитики для кэширования данных
		//
		// Выходные параметры:
		//	АналитикаВидаУчета - СправочникСсылка.КлючиАналитикиВидаУчета - Ключ аналитики
		//	АналитикаУчетаЗатрат - СправочникСсылка.КлючиАналитикиУчетаЗатрат - Ключ аналитики
		//	АналитикаРаспределенияЗатрат - СправочникСсылка.КлючиАналитикиРаспределенияЗатрат - Ключ аналитики
		//	АналитикаУчетаПартий - СправочникСсылка.КлючиАналитикиУчетаПартий - Ключ аналитики
		//	УчетЗатратПоНоменклатуре - Булево - Признак учета затрат по номенклатуре
		//

		public void ПолучитьАналитикуУчетаЗатрат(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	ВидОтраженияВУчете,
	СтруктураКлючиАналитики,
	АналитикаВидаУчета,
	АналитикаУчетаЗатрат,
	АналитикаРаспределенияЗатрат,
	АналитикаУчетаПартий,
	УчетЗатратПоНоменклатуре
	*/)
		{
			/*АналитикаВидаУчета = Неопределено;*/
			/*АналитикаУчетаЗатрат = Неопределено;*/
			/*АналитикаРаспределенияЗатрат = Неопределено;*/
			/*АналитикаУчетаПартий = Неопределено;*/
			/*СтруктураПараметров = Новый Структура;*/
			/*СтруктураПараметров.Вставить("РазделУчета", Перечисления.РазделыУчета.Затраты);*/
			/*СтруктураПараметров.Вставить("Организация", СтрокаВыборки.Организация);*/
			/*СтруктураПараметров.Вставить("Подразделение", СтрокаВыборки.Подразделение);*/
			/*СтруктураПараметров.Вставить("ПодразделениеОрганизации", СтрокаВыборки.ПодразделениеОрганизации);*/
			/*СтруктураПараметров.Вставить("СчетУчета", СтрокаВыборки.СчетЗатрат);*/
			/*СтруктураПараметров.Вставить("СчетУчетаНУ", СтрокаВыборки.СчетЗатратНУ);*/
			/*АналитикаВидаУчета = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
		СтруктураШапкиДокумента,
		СтруктураПараметров,
		Перечисления.КлючиАналитики.АналитикаВидаУчета,
		ВидОтраженияВУчете,
		СтруктураКлючиАналитики
	);*/
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
	 ИЛИ ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВРегламентированномУчете*/)
			{
				/*ХарактерЗатрат = УправлениеЗатратами.ПолучитьХарактерЗатратПоСчетуЗатрат(
			СтрокаВыборки.СчетЗатрат, 
			СтрокаВыборки.СтатьяЗатрат
		);*/
			}
			/*УчетЗатратПоНоменклатуре = РасширеннаяАналитикаУчета.УчитыватьЗатратыПоНоменклатуре(
		ХарактерЗатрат,
		СтрокаВыборки.ВидЗатрат
	);*/
			/*СтруктураПараметров = Новый Структура;*/
			/*СтруктураПараметров.Вставить("СтатьяЗатрат", СтрокаВыборки.СтатьяЗатрат);*/
			/*СтруктураПараметров.Вставить("Затрата", СтрокаВыборки.Продукция);*/
			/*СтруктураПараметров.Вставить("ХарактеристикаЗатраты", СтрокаВыборки.ХарактеристикаПродукции);*/
			/*СтруктураПараметров.Вставить("СерияЗатраты", СтрокаВыборки.СерияПродукции);*/
			/*СтруктураПараметров.Вставить("ХарактерЗатрат", ХарактерЗатрат);*/
			/*АналитикаУчетаЗатрат = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
		СтруктураШапкиДокумента,
		СтруктураПараметров,
		Перечисления.КлючиАналитики.АналитикаУчетаЗатрат,
		ВидОтраженияВУчете,
		СтруктураКлючиАналитики
	);*/
			/*СтруктураПараметров = Новый Структура;*/
			/*СтруктураПараметров.Вставить("НоменклатурнаяГруппа", СтрокаВыборки.НоменклатурнаяГруппа);*/
			/*АналитикаРаспределенияЗатрат = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
		СтруктураШапкиДокумента,
		СтруктураПараметров,
		Перечисления.КлючиАналитики.АналитикаРаспределенияЗатрат,
		ВидОтраженияВУчете,
		СтруктураКлючиАналитики
	);*/
			/*СтруктураПараметров = Новый Структура;*/
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете*/)
			{
				/*СтруктураПараметров.Вставить("Заказ", СтрокаВыборки.Заказ);*/
			}
			/*АналитикаУчетаПартий = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
		СтруктураШапкиДокумента,
		СтруктураПараметров,
		Перечисления.КлючиАналитики.АналитикаУчетаПартий,
		ВидОтраженияВУчете,
		СтруктураКлючиАналитики
	);*/
		}
		// ПолучитьАналитикуУчетаЗатрат()
		// Процедура выполняет распределение затрат по проектам.
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//	МассивСтрок - Массив - Массив строк базы распределения по проектам
		//	АналитикаВидаУчета - СправочникСсылка.КлючиАналитикиВидаУчета - Ключ аналитики
		//	АналитикаУчетаЗатрат - СправочникСсылка.КлючиАналитикиУчетаЗатрат - Ключ аналитики
		//	АналитикаУчетаПартий - СправочникСсылка.КлючиАналитикиУчетаПартий - Ключ аналитики
		//	АналитикаУчетаПродукции - СправочникСсылка.КлючиАналитикиРаспределенияЗатрат - Ключ аналитики
		//	КорАналитикаВидаУчета - СправочникСсылка.КлючиАналитикиВидаУчета - Ключ аналитики
		//	КорАналитикаУчетаЗатрат - СправочникСсылка.КлючиАналитикиУчетаЗатрат - Ключ аналитики
		//	КорАналитикаУчетаПартий - СправочникСсылка.КлючиАналитикиУчетаПартий - Ключ аналитики
		//	КорАналитикаРаспределенияЗатрат - СправочникСсылка.КлючиАналитикиРаспределенияЗатрат - Ключ аналитики
		//	ВидДвижения - ВидДвиженияНакопления - Вид движения
		//	КодОперации - ПеречислениеСсылка.КодыОпераций - Код операции
		//	КоличествоУУ - Число - Количество выпуска
		//	СтоимостьУУ - Число - Учетная стоимость по управленческому учету
		//	СтруктураКлючиАналитики - Структура - Структура с таблицами ключей аналитики для кэширования данных
		//	НаборЗаписейУчетЗатрат - РегистрНакопленияНаборЗаписей - Набор записей регистра накопления "УчетЗатрат".
		//

		public void РаспределитьСуммуВыпускаПоПроектам(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	МассивСтрок,
	АналитикаВидаУчета,
	АналитикаУчетаЗатрат,
	АналитикаУчетаПартий,
	АналитикаУчетаПродукции,
	КорАналитикаВидаУчета,
	КорАналитикаУчетаЗатрат,
	КорАналитикаУчетаПартий,
	КорАналитикаРаспределенияЗатрат,
	ВидДвижения,
	КодОперации,
	КоличествоУУ,
	СтоимостьУУ,
	СтруктураКлючиАналитики,
	НаборЗаписейУчетЗатрат
	*/)
		{
			/*МассивКоэф = Новый Массив;*/
			/*ВсегоБазаРаспределения = 0;*/
			if(true/*ВсегоБазаРаспределения = 0*/)
			{
				/*ВидРаспределения = МассивСтрок[0].ВидРаспределения;*/
				/*ОбщегоНазначения.Сообщение("Не удалось выполнить распределение затрат по виду распределения """ + ВидРаспределения + """", СтатусСообщения.Внимание);*/
			}
			if(true/*ВсегоБазаРаспределения <> 0*/)
			{
				/*МассивКоличество = ОбщегоНазначения.РаспределитьПропорционально(КоличествоУУ, МассивКоэф, 2);*/
				/*МассивСтоимость = ОбщегоНазначения.РаспределитьПропорционально(СтоимостьУУ, МассивКоэф, 2);*/
				/*Индекс = 0;*/
			}
		}
		// РаспределитьСуммуВыпускаПоПроектам()
		// Функция проверяет субконто БУ и НУ.
		//
		// Параметры:
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//
		// Возвращаемое значение:
		//	Булево - Истина - субконто БУ и НУ одинаковые
		//			 Ложь - субконто БУ и НУ разные
		//

		public object ОдинаковаяАналитикаБУиНУвСубконто(/*СтрокаВыборки*/)
		{
			/*ОдинаковаяАналитика = Истина;*/
			if(true/*ТипЗнч(СтрокаВыборки.СубконтоДт1) <> ТипЗнч(СтрокаВыборки.СубконтоДтНУ1)
	 ИЛИ ТипЗнч(СтрокаВыборки.СубконтоДт2) <> ТипЗнч(СтрокаВыборки.СубконтоДтНУ2)
	 ИЛИ ТипЗнч(СтрокаВыборки.СубконтоДт3) <> ТипЗнч(СтрокаВыборки.СубконтоДтНУ3)*/)
			{
				/*ОдинаковаяАналитика = Ложь;*/
			}
			return null;
		}
		// ОдинаковаяАналитикаБУиНУвСубконто()
		////////////////////////////////////////////////////////////////////////////////
		// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО РЕГИСТРУ НАКОПЛЕНИЯ "МАТЕРИАЛЫ В ПРОИЗВОДСТВЕ"
		// Формирует текст запроса по табличной части "Материалы" документа "Отчет производства за смену".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоМатериаламОтчетПроизводстваЗаСмену(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА ТабличнаяЧасть.ПодразделениеНЗП = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка) 
	|		ИЛИ Не ТабличнаяЧасть.Ссылка.ИспользоватьПодразделенияНЗП
	|	ТОГДА
	|		ТабличнаяЧасть.Ссылка.Подразделение
	|	ИНАЧЕ
	|		ТабличнаяЧасть.ПодразделениеНЗП
	|	КОНЕЦ КАК Подразделение,
	|	ТабличнаяЧасть.Номенклатура.ВестиУчетПоСериямВНЗП КАК ВестиУчетПоСериямВНЗП,
	|	ТабличнаяЧасть.Номенклатура КАК Затрата,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаЗатраты,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК СерияЗатраты,
	|		
	|	//ТекстЗапросаЗаказУпр
	|
	|	(Количество * 
	|	ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|				И Коэффициент <> 0 ТОГДА 
	|		Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ
	|	) КАК Количество
	|		
	|//Поместить ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ	
	|	Документ.ОтчетПроизводстваЗаСмену.Материалы КАК ТабличнаяЧасть
	|	
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Ссылка.ИспользоватьМатериалы
	|	И ТабличнаяЧасть.Номенклатура.ВестиОперативныйУчетОстатковНЗП
	|		
	|";*/
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаДляРеквизитаЗаказ();*/
			/*ТекстЗапросаДляРеквизитаЗаказ = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями, 
		Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	);*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + " КАК Заказ,");*/
			return null;
		}
		// СформироватьТекстЗапросаПоМатериаламОтчетПроизводстваЗаСмену()
		// Формирует текст запроса по табличной части "Материалы" документа "Поступление товаров из переработки".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоМатериаламПоступлениеТоваровИзПереработки(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.Номенклатура.ВестиУчетПоСериямВНЗП КАК ВестиУчетПоСериямВНЗП,
	|	ТабличнаяЧасть.Номенклатура КАК Затрата,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаЗатраты,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК СерияЗатраты,
	|		
	|	//ТекстЗапросаЗаказУпр
	|
	|	(Количество * 
	|	ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|				И Коэффициент <> 0 ТОГДА 
	|		Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ
	|	) КАК Количество
	|		
	|//Поместить ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ	
	|	Документ.ПоступлениеТоваровИзПереработки.Материалы КАК ТабличнаяЧасть
	|	
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Ссылка.ИспользоватьМатериалы
	|	И ТабличнаяЧасть.Номенклатура.ВестиОперативныйУчетОстатковНЗП
	|		
	|";*/
			/*ТекстЗапросаСКомментариями = СформироватьТекстЗапросаДляРеквизитаЗаказ();*/
			/*ТекстЗапросаДляРеквизитаЗаказ = ЗаменитьКомментарииВТекстеЗапросаПоОтражениюВыпуска(
		ТекстЗапросаСКомментариями, 
		Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
		);*/
			/*ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаЗаказУпр", ТекстЗапросаДляРеквизитаЗаказ + " КАК Заказ,");*/
			return null;
		}
		// СформироватьТекстЗапросаПоМатериаламПоступлениеТоваровИзПереработки()
		// Формирует текст запроса по табличной части "Материалы" документа "Акт об оказании производственных услуг".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоМатериаламАктОбОказанииПроизводственныхУслуг(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.Номенклатура.ВестиУчетПоСериямВНЗП КАК ВестиУчетПоСериямВНЗП,
	|	ТабличнаяЧасть.Номенклатура КАК Затрата,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаЗатраты,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК СерияЗатраты,
	|		
	|	ВЫБОР КОГДА ТабличнаяЧасть.Ссылка.ИспользоватьЗаказы 
	|			И ТабличнаяЧасть.Ссылка.Сделка ССЫЛКА Документ.ЗаказПокупателя 
	|			И ТабличнаяЧасть.Ссылка.Сделка <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) ТОГДА
	|		ТабличнаяЧасть.Ссылка.Сделка
	|	КОГДА ТабличнаяЧасть.Ссылка.ИспользоватьЗаказы 
	|			И ТабличнаяЧасть.ЗаказВыпуска ССЫЛКА Документ.ЗаказНаПроизводство 
	|			И ТабличнаяЧасть.ЗаказВыпуска <> ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|			И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		ТабличнаяЧасть.ЗаказВыпуска
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК Заказ,
	|
	|	(Количество * 
	|	ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|				И Коэффициент <> 0 ТОГДА 
	|		Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ
	|	) КАК Количество
	|		
	|//Поместить ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ	
	|	Документ.АктОбОказанииПроизводственныхУслуг.Материалы КАК ТабличнаяЧасть
	|	
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Ссылка.ИспользоватьМатериалы
	|	И ТабличнаяЧасть.Номенклатура.ВестиОперативныйУчетОстатковНЗП
	|		
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаПоМатериаламАктОбОказанииПроизводственныхУслуг()
		// Формирует текст запроса по табличной части "Материалы" документа "Корректировка НЗП".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоМатериаламКорректировкаНЗП(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.Номенклатура.ВестиУчетПоСериямВНЗП КАК ВестиУчетПоСериямВНЗП,
	|	ТабличнаяЧасть.Номенклатура КАК Затрата,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаЗатраты,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК СерияЗатраты,
	|		
	|	ВЫБОР КОГДА ТабличнаяЧасть.Заказ ССЫЛКА Документ.ЗаказПокупателя 
	|			И ТабличнаяЧасть.Заказ <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) ТОГДА
	|		ТабличнаяЧасть.Заказ
	|	КОГДА ТабличнаяЧасть.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
	|			И ТабличнаяЧасть.Заказ <> ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|			И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		ТабличнаяЧасть.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК Заказ,
	|
	|	(Количество * 
	|	ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|				И Коэффициент <> 0 ТОГДА 
	|		Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ
	|	) КАК Количество
	|		
	|//Поместить ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ	
	|	Документ.КорректировкаНЗП.Материалы КАК ТабличнаяЧасть
	|	
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Номенклатура.ВестиОперативныйУчетОстатковНЗП
	|		
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаПоМатериаламКорректировкаНЗП()
		// Формирует текст запроса по табличной части "Материалы" документа "Списание НЗП".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоМатериаламСписаниеНЗП(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.Номенклатура.ВестиУчетПоСериямВНЗП КАК ВестиУчетПоСериямВНЗП,
	|	ТабличнаяЧасть.Номенклатура КАК Затрата,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаЗатраты,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК СерияЗатраты,
	|		
	|	ВЫБОР КОГДА ТабличнаяЧасть.Заказ ССЫЛКА Документ.ЗаказПокупателя 
	|			И ТабличнаяЧасть.Заказ <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) ТОГДА
	|		ТабличнаяЧасть.Заказ
	|	КОГДА ТабличнаяЧасть.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
	|			И ТабличнаяЧасть.Заказ <> ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|			И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		ТабличнаяЧасть.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК Заказ,
	|
	|	(Количество * 
	|	ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|				И Коэффициент <> 0 ТОГДА 
	|		Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ
	|	) КАК Количество
	|		
	|//Поместить ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ	
	|	Документ.СписаниеНЗП.Материалы КАК ТабличнаяЧасть
	|	
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Номенклатура.ВестиОперативныйУчетОстатковНЗП
	|		
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаПоМатериаламСписаниеНЗП()
		// Формирует текст запроса по табличной части "Материалы" документа "Оприходование материалов из производства".
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоМатериаламОприходованиеМатериаловИзПроизводства(/**/)
		{
			/*ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.Номенклатура.ВестиУчетПоСериямВНЗП КАК ВестиУчетПоСериямВНЗП,
	|	ТабличнаяЧасть.Номенклатура КАК Затрата,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаЗатраты,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК СерияЗатраты,
	|		
	|	ВЫБОР КОГДА ТабличнаяЧасть.Заказ ССЫЛКА Документ.ЗаказПокупателя 
	|			И ТабличнаяЧасть.Заказ <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) ТОГДА
	|		ТабличнаяЧасть.Заказ
	|	КОГДА ТабличнаяЧасть.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
	|			И ТабличнаяЧасть.Заказ <> ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|			И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		ТабличнаяЧасть.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК Заказ,
	|
	|	(Количество * 
	|	ВЫБОР КОГДА Не Номенклатура.ЕдиницаХраненияОстатков.Коэффициент ЕСТЬ NULL 
	|				И Коэффициент <> 0 ТОГДА 
	|		Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ
	|	) КАК Количество
	|		
	|//Поместить ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ	
	|	Документ.ОприходованиеМатериаловИзПроизводства.Материалы КАК ТабличнаяЧасть
	|	
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Номенклатура.ВестиОперативныйУчетОстатковНЗП
	|	И ТабличнаяЧасть.СтатьяЗатрат.ХарактерЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерЗатрат.ПроизводственныеРасходы)
	|	И ТабличнаяЧасть.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОприходованиеМатериаловИзПроизводства.Материалы)
	|		
	|";*/
			return null;
		}
		// СформироватьТекстЗапросаПоМатериаламОприходованиеМатериаловИзПроизводства()
		// Функция формирует текст запроса по табличной части "Материалы".
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	ФормироватьВременнуюТаблицу - Булево - Признак формирования временной таблицы
		//
		// Возвращаемое значение:
		//   Строка – Текст запроса.
		//

		public object СформироватьТекстЗапросаПоМатериалам(/*
	СтруктураШапкиДокумента,
	ФормироватьВременнуюТаблицу = Ложь
	*/)
		{
			/*ТекстЗапросаПоМатериалам = "";*/
			/*ТипДокумента = ТипЗнч(СтруктураШапкиДокумента.Ссылка);*/
			if(true/*ТипДокумента = Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену")*/)
			{
				/*ТекстЗапросаПоМатериалам = СформироватьТекстЗапросаПоМатериаламОтчетПроизводстваЗаСмену();*/
			}
			if(true/*ФормироватьВременнуюТаблицу*/)
			{
				/*ТекстЗапросаПоМатериалам = СтрЗаменить(ТекстЗапросаПоМатериалам, "//Поместить", "");*/
			}
			return null;
		}
		// СформироватьТекстЗапросаПоМатериалам()
		// Функция формирует запрос по материалам.
		//
		// Параметры:
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	ТекстЗапросаПоМатериалам - Строка - Текст запроса по табличной части документа
		//	УчетнаяПолитика - Структура - Учетная политика по управленческому учету
		//
		// Возвращаемое значение:
		//	Запрос - Запрос по материалам.
		//

		public object СформироватьЗапросПоМатериалам(/*
	СтруктураШапкиДокумента,
	ТекстЗапросаПоМатериалам,
	УчетнаяПолитика
	*/)
		{
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = ТекстЗапросаПоМатериалам;*/
			/*Запрос.УстановитьПараметр("Ссылка", СтруктураШапкиДокумента.Ссылка);*/
			/*Запрос.УстановитьПараметр("УчетЗатратПоЗаказамНаПроизводство", УчетнаяПолитика.УчетЗатратПоЗаказамНаПроизводство);*/
			return null;
		}
		// СформироватьЗапросПоВыпускуПродукции()
		// Процедура формирует движение по регистру "Материалы в производстве".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура – Реквизиты документа
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Строка выборки из результата запроса
		//	КодОперации - ПеречислениеСсылка.КодыОперацийМатериалыВПроизводстве - Код операции
		//	НаборЗаписейМатериалыВПроизводстве - РегистрНакопленияНаборЗаписей - Набор записей регистра накопления "Материалы в производстве".
		//

		public void СформироватьДвиженияРасходПоРегиструМатериалыВПроизводстве(/*
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	КодОперации,
	НаборЗаписейМатериалыВПроизводстве
	*/)
		{
			/*// В движениях по регистру "Материалы в производстве" должны быть заполнены измерения:
*/
			/*//	- Подразделение,
*/
			/*//	- Заказ,
*/
			/*//	- Затрата,
*/
			/*//	- ХарактеристикаЗатраты,
*/
			/*//	- СерияЗатраты - заполняется, если ведется учет по сериям в незавершенном производстве
*/
			/*НоваяСтрока = НаборЗаписейМатериалыВПроизводстве.Добавить();*/
			/*НоваяСтрока.Активность = Истина;*/
			/*НоваяСтрока.Период = СтруктураШапкиДокумента.Дата;*/
			/*НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Расход;*/
			/*ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВыборки);*/
			if(true/*СтрокаВыборки.ВестиУчетПоСериямВНЗП*/)
			{
				/*НоваяСтрока.СерияЗатраты = СтрокаВыборки.СерияЗатраты;*/
			}
			/*НоваяСтрока.КодОперации = КодОперации;*/
			/*// Если в наборе записей 1000 строк, запишем набор.
*/
			if(true/*НаборЗаписейМатериалыВПроизводстве.Количество() = 1000*/)
			{
				/*НаборЗаписейМатериалыВПроизводстве.Записать(Ложь);*/
			}
		}
		// СформироватьДвиженияРасходПоРегиструМатериалыВПроизводстве()
		// Функция определяет код операции для регистра "Материалы в производстве".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//
		// Возвращаемое значение:
		//  ПеречислениеСсылка.КодыОперацийВыпускПродукции – код операции выпуска продукции
		//

		public object ПолучитьКодОперацииМатериалыВПроизводстве(/*
	СтруктураШапкиДокумента
	*/)
		{
			if(true/*ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.КорректировкаНЗП")*/)
			{
				/*КодОперации = Перечисления.КодыОперацийМатериалыВПроизводстве.КорректировкаНЗП;*/
			}
			return null;
		}
		// ПолучитьКодОперацииМатериалыВПроизводстве()
		// Процедура формирует движения по материалам.
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура – Реквизиты документа
		//	РезультатЗапросаПоМатериалам - РезультатЗапроса - Результат запроса по материалам
		//

		public void СформироватьДвиженияПоМатериалам(/*
	СтруктураШапкиДокумента,
	РезультатЗапросаПоМатериалам
	*/)
		{
			/*СтруктураНаборыЗаписей = Новый Структура;*/
			/*ПолученНаборЗаписей = УправлениеЗатратамиДвиженияПоРегистрам.ПолучитьНаборЗаписейРегистра(
		СтруктураШапкиДокумента, 
		"МатериалыВПроизводстве", 
		СтруктураНаборыЗаписей
	);*/
			if(true/*Не ПолученНаборЗаписей*/)
			{
			}
			/*КодОперацииМатериалыВПроизводстве = ПолучитьКодОперацииМатериалыВПроизводстве(СтруктураШапкиДокумента);*/
			/*ВыборкаПоМатериалам = РезультатЗапросаПоМатериалам.Выбрать();*/
			while(true/*ВыборкаПоМатериалам.Следующий()*/)
			{
				/*СформироватьДвиженияРасходПоРегиструМатериалыВПроизводстве(
			СтруктураШапкиДокумента,
			ВыборкаПоМатериалам,
			КодОперацииМатериалыВПроизводстве,
			СтруктураНаборыЗаписей.МатериалыВПроизводстве
		);*/
			}
			if(true/*СтруктураНаборыЗаписей.МатериалыВПроизводстве.Модифицированность()*/)
			{
				/*СтруктураНаборыЗаписей.МатериалыВПроизводстве.Записать(Ложь);*/
			}
		}
		// СформироватьДвиженияПоМатериалам()
		// Процедура формирует движения по регистру "Материалы в производстве".
		//
		// Параметры
		//  СтруктураШапкиДокумента – Структура - Реквизиты документа
		//	УчетнаяПолитика - Структура - Учетная политика по управленческому учету
		//

		public void СформироватьДвиженияПоМатериаламВПроизводстве(/*
	СтруктураШапкиДокумента, 
	УчетнаяПолитика
	*/)
		{
			/*ТекстЗапросаПоМатериалам = СформироватьТекстЗапросаПоМатериалам(СтруктураШапкиДокумента);*/
			if(true/*ПустаяСтрока(ТекстЗапросаПоМатериалам)*/)
			{
				/*ОбщегоНазначения.Сообщение("Не определено формирование движений по материалам в производстве для документа: " + СтруктураШапкиДокумента.Ссылка);*/
			}
			/*ЗапросПоМатериалам = СформироватьЗапросПоМатериалам(
		СтруктураШапкиДокумента,
		ТекстЗапросаПоМатериалам,
		УчетнаяПолитика
	);*/
			/*РезультатЗапросаПоМатериалам = ЗапросПоМатериалам.Выполнить();*/
			if(true/*Не РезультатЗапросаПоМатериалам.Пустой()*/)
			{
				/*СформироватьДвиженияПоМатериалам(
			СтруктураШапкиДокумента,
			РезультатЗапросаПоМатериалам
		);*/
			}
		}
		// СформироватьДвиженияПоМатериаламВПроизводстве()
		// Функция определяет используется ли статус материальных затрат "Принятые в переработку"
		//
		// Параметры:
		//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
		//
		// Возвращаемое значение:
		//	Булево, Истина если СтатусМатериальныхЗатрат = ПринятыеВПереработку
		//

		public object ОпределитьСтатусМатериальныхЗатратВПереработку(/*СтрокаВыборки*/)
		{
			return null;
		}
	}
}

