using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace V82.ОбщиеМодули
{
	public partial class КорректировкаСтоимости
	{
		////////////////////////////////////////////////////////////////////////////////
		// СТАРЫЕ АЛГОРИТМЫ
		////////////////////////////////////////////////////////////////////////////////
		// КОРРЕКТИРОВКА СУММ СПИСАНИЙ, ВЫПОЛНЕННЫХ В ТЕЧЕНИЕ МЕСЯЦА (ТОЛЬКО СУММОВЫЕ ДВИЖЕНИЯ)
		// Процедура вызывается из документа КорректировкаСтоимостиСписания и выполняет корректировку порциями по 100 элементов
		//
		// Параметры:
		//	ДатаНач - дата начала корректировки,
		//	ДатаКон - дата окончания корректировки,
		//	МассивВидовУчета - массив видов учета, по которым нужно выполнять корректировку,
		//	Ссылка - ссылка на документ КорректировкаСтоимостиСписания,
		//	Организация - организация, по которой выполняется корректировка.
		//

		public void ВыполнитьКорректировкуСтоимостиСписанияНаСервере(/*ДатаНач, ДатаКон, МассивВидовУчета, Ссылка, Организация*/)
		{
			/*Запрос = Новый Запрос();*/
			/*Запрос.УстановитьПараметр("ДатаНач", ДатаНач);*/
			/*Запрос.УстановитьПараметр("ДатаКон", ДатаКон);*/
		}
		// Функция-оболочка, вызывающая корректировку списания. Вызывается из документов:
		// ПогашениеСтоимости, РасчетСебестоимостиВыпуска, КорректировкаСтоимостиСписанияТоваров
		//
		// Параметры:
		//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отаржения в учете
		//

		public void КорректировкаСписания(/*ДатаНач, ДатаКон, ТаблицаТоваров, РегламентныйДокумент,
								Организация, 
								ВидОтраженияВУчете,
								НеСписыватьНаПостоянныеЗатраты = Ложь, ДопПараметры = Неопределено, ПоследнийПередел = Ложь,
								ВстречныйВыпуск = Ложь*/)
		{
			/*//Признак того, что в параметр ДопПараметры передана структура и ее необходимо вернуть из процедуры
*/
			/*флТребуетсяВозвратДопПараметров = истина;*/
			if(true/*ТипЗнч(ДопПараметры) <> Тип("Структура")*/)
			{
				/*флТребуетсяВозвратДопПараметров = Ложь;*/
				/*ДопПараметры = Новый Структура;*/
			}
			if(true/*ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете*/)
			{
				/*СпособВеденияПартионногоУчетаПоОрганизации = УправлениеЗапасами.ПолучитьСпособВеденияПартионногоУчетаПоОрганизации(Организация, ДатаКон);*/
				/*ДопПараметры.Вставить("Организация", УправлениеЗапасами.ПолучитьОрганизациюВСоответствииСоСпособомВеденияПартионногоУчетаПоОрганизациям(Организация,СпособВеденияПартионногоУчетаПоОрганизации));*/
			}
			/*ДопПараметры.Вставить("НеСписыватьНаПостоянныеЗатраты", НеСписыватьНаПостоянныеЗатраты);*/
			/*// Приведение структуры доп.параметров к виду структуры параметров из основного алгоритма списания партий
*/
			/*//
*/
			/*ДопПараметры.Вставить("ОтражатьВУправленческомУчете" , (ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете));*/
			/*ДопПараметры.Вставить("ОтражатьВБухгалтерскомУчете"  , (ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете));*/
			/*ДопПараметры.Вставить("ОтражатьВНалоговомУчете"      , (ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВНалоговомУчете));*/
			/*ДопПараметры.Вставить("ОтражатьВМеждународномУчете"  , (ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВМеждународномУчете));*/
			/*ДопПараметры.Вставить("ЕстьСтрокиОтражатьВУправленческомУчете" , (ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете));*/
			/*ДопПараметры.Вставить("ЕстьСтрокиОтражатьВБухгалтерскомУчете"  , (ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете));*/
			/*ДопПараметры.Вставить("ЕстьСтрокиОтражатьВНалоговомУчете"      , (ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВНалоговомУчете));*/
			/*ДопПараметры.Вставить("ЕстьСтрокиОтражатьВМеждународномУчете"  , (ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВМеждународномУчете));*/
			/*ДопПараметры.Вставить("КэшПоВидамСубконто", Новый Соответствие);*/
			if(true/*НЕ ДопПараметры.Свойство("КодыОпераций")*/)
			{
				/*ДопПараметры.Вставить("КодыОпераций", Перечисления.КодыОперацийПартииТоваров);*/
			}
			if(true/*НЕ РегламентныйДокумент = Неопределено*/)
			{
				/*ДопПараметры.Вставить("ТипЗначенияРегистратора", ТипЗнч(РегламентныйДокумент));*/
			}
			/*ДопПараметры.Вставить("ВстречныйВыпуск",ВстречныйВыпуск);*/
			/*СкорректироватьСписание(ДатаНач, ДатаКон, ТаблицаТоваров, РегламентныйДокумент, ДопПараметры);*/
			/*// Корректировка стоимости реализации комплектов продукции должна выполняться только после последнего передела,
*/
			/*// когда известна себестоимость всей продукции
*/
			/*// Получим список номенклатуры появившейся в результате комплектации
*/
			/*// Это упрощенный способ, имеющий свои ограничения
*/
			/*// Так можно рассчитать только себестоимость реализации комплектов, скомплектованных одним документом "комплектация"
*/
			/*// Более сложные схемы с многоуровневыми комплектациями - разукомплектациями и передачами комплектов в производство
*/
			/*// обслуживаются только специализированными производственными документами
*/
			if(true/*ПоследнийПередел*/)
			{
				/*ТаблицаКомплектов = ПолучитьТаблицуПартийПоКодуОперации(ДатаНач,ДатаКон,ДопПараметры,Перечисления.КодыОперацийПартииТоваров.Комплектация,ВидДвиженияНакопления.Приход);*/
				/*// Если комплектов нет - корректировать нечего
*/
				if(true/*ТаблицаКомплектов <> Неопределено*/)
				{
					/*ДопПараметры.Вставить("КорректироватьКомплектыПродукции");*/
					/*СкорректироватьСписание(ДатаНач, ДатаКон, ТаблицаКомплектов, РегламентныйДокумент, ДопПараметры);*/
				}
				/*// Если возврат от покупателя текущего месяца осуществляется по документу поступления - стоимость соответствующего состояния
*/
				/*// может быть уменьшена документом списания и стоимость возврата может не соотвествовать стоимости реализации
*/
				/*// Поэтому корректировка стоимости возвратов от покупателя текущего месяца должна выполняться последней
*/
				/*ТаблицаВозвратов = ПолучитьТаблицуПартийПоКодуОперации(ДатаНач,ДатаКон,ДопПараметры,Перечисления.КодыОперацийПартииТоваров.ВозвратОтПокупателяТекущийМесяц,ВидДвиженияНакопления.Расход);*/
				if(true/*ТаблицаВозвратов <> Неопределено*/)
				{
					/*ДопПараметры.Вставить("КорректироватьСтоимостьВозвратовТекущегоМесяца");*/
					/*СкорректироватьСписание(ДатаНач, ДатаКон, ТаблицаВозвратов, РегламентныйДокумент, ДопПараметры);*/
				}
			}
			if(true/*флТребуетсяВозвратДопПараметров*/)
			{
				/*// Последних переделов может быть несколько 
*/
				if(true/*ДопПараметры.Свойство("КорректироватьКомплектыПродукции")*/)
				{
					/*ДопПараметры.Удалить("КорректироватьКомплектыПродукции");*/
				}
				if(true/*ДопПараметры.Свойство("КорректироватьСтоимостьВозвратовТекущегоМесяца")*/)
				{
					/*ДопПараметры.Удалить("КорректироватьСтоимостьВозвратовТекущегоМесяца");*/
				}
			}
		}
		// КорректировкаСписания
		// Возвращает таблицу партий по переданному коду операции
		//
		// Параметры:
		//	ДатаНач 		- дата начала периода, за который получаются данные,
		//	ДатаКон 		- дата окончания периода,
		//	ДопПараметры 	- структура, содержащая параметры для установки отборов,
		//	КодОперации 	- код операции, по которому производиться отбор партий,
		//	ВидДвижения 	- вид движения, по которому производиться отбор партий.
		//
		//	Возвращает таблицу партий

		public object ПолучитьТаблицуПартийПоКодуОперации(/*ДатаНач, ДатаКон,ДопПараметры,КодОперации,ВидДвижения*/)
		{
			/*Запрос = Новый Запрос;*/
			/*Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
				   |	НаСкладах.Номенклатура КАК Номенклатура,
				   |	НаСкладах.ДокументОприходования КАК ДокументОприходования
				   |ИЗ
				   |	РегистрНакопления.ПартииТоваровНаСкладах КАК НаСкладах
				   |ГДЕ
				   |	НаСкладах.Период МЕЖДУ &ДатаНач И &ДатаКон
				   |	И НаСкладах.ВидДвижения = &ВидДвижения
				   |	И НаСкладах.КодОперации = &КодОперации";*/
			/*Запрос.УстановитьПараметр("КодОперации", КодОперации);*/
			/*Запрос.УстановитьПараметр("ВидДвижения", ВидДвижения);*/
			/*Запрос.УстановитьПараметр("ДатаНач", ДатаНач);*/
			/*Запрос.УстановитьПараметр("ДатаКон", ДатаКон);*/
			if(true/*ДопПараметры.ОтражатьВБухгалтерскомУчете*/)
			{
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст,"ПартииТоваровНаСкладах", "ПартииТоваровНаСкладахБухгалтерскийУчет");*/
			}
			/*Запрос.Текст = Запрос.Текст + "
	|	И НаСкладах.Организация = &Организация";*/
			/*Запрос.УстановитьПараметр("Организация", ДопПараметры.Организация);*/
			/*РезультатЗапроса = Запрос.Выполнить();*/
			if(true/*РезультатЗапроса.Пустой()*/)
			{
			}
			return null;
		}
		////////////////////////////////////////////////////////////////////////////////
		// Процедуры списания по-средней, не зависящие от структуры данных конфигурации

		public object ПолучитьСтруктруТаблицыСписанныхПартийСпецодежды(/*Учет*/)
		{
			/*ТаблицаСписанныхПартий = УправлениеЗатратами.СформироватьТаблицуЗатрат();*/
			/*ТаблицаСписанныхПартий.Колонки.Добавить("Стоимость", Новый ОписаниеТипов("Число"), Новый КвалификаторыЧисла(15,2));*/
			/*ТаблицаСписанныхПартий.Колонки.Добавить("КодОперацииПартииТоваров", Новый ОписаниеТипов("ПеречислениеСсылка.КодыОперацийПартииТоваров"));*/
			/*ТаблицаСписанныхПартий.Колонки.Добавить("ОтражатьВУправленческомУчете", Новый ОписаниеТипов("Булево"));*/
			/*ТаблицаСписанныхПартий.Колонки.Добавить("ОтражатьВБухгалтерскомУчете", Новый ОписаниеТипов("Булево"));*/
			/*ТаблицаСписанныхПартий.Колонки.Добавить("ОтражатьВНалоговомУчете", Новый ОписаниеТипов("Булево"));*/
			/*ТаблицаСписанныхПартий.Колонки.Добавить("ОтражатьВМеждународномУчете", Новый ОписаниеТипов("Булево"));*/
			/*ТаблицаСписанныхПартий.Колонки.Добавить("ФизЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));*/
			/*ТаблицаСписанныхПартий.Колонки.Добавить("ДокументПередачи", Новый ОписаниеТипов("ДокументСсылка.ПередачаМатериаловВЭксплуатацию"));*/
			/*ТаблицаСписанныхПартий.Колонки.Добавить("НазначениеИспользования", Новый ОписаниеТипов("СправочникСсылка.НазначенияИспользования"));*/
			/*ТаблицаСписанныхПартий.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"));*/
			if(true/*Учет = "Бух" ИЛИ Учет = "Нал"*/)
			{
				/*ТаблицаСписанныхПартий.Колонки.Добавить("КорСчетБУ", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));*/
				/*ТаблицаСписанныхПартий.Колонки.Добавить("КорСубконтоБУ1");*/
				/*ТаблицаСписанныхПартий.Колонки.Добавить("КорСубконтоБУ2");*/
				/*ТаблицаСписанныхПартий.Колонки.Добавить("КорСубконтоБУ3");*/
				if(true/*Учет = "Нал"*/)
				{
					/*ТаблицаСписанныхПартий.Колонки.Добавить("КорСчетНУ", Новый ОписаниеТипов("ПланСчетовСсылка.Налоговый"));*/
					/*ТаблицаСписанныхПартий.Колонки.Добавить("КорСубконтоНУ1");*/
					/*ТаблицаСписанныхПартий.Колонки.Добавить("КорСубконтоНУ2");*/
					/*ТаблицаСписанныхПартий.Колонки.Добавить("КорСубконтоНУ3");*/
				}
			}
			return null;
		}
		// СписаниеПоСредней
		//
		// Параметры:
		//	ТаблицаТоваров - содержит товары, списание которых необходимо усреднить.
		//	Каждая колонка соответствует одному из постоянных параметров товара, не изменяемых в ходе перемещений.
		//	По остальным параметрам выполняется усреднение
		//

		public void РассчитатьСписаниеПоСредней(/*ТаблицаТоваров, ДатаНач, ДатаКон, СтруктураДопПараметров*/)
		{
			/*// Основное допущение данного метода - игнорирование замкнутой цепочки перемещений между состояниями ("холостого хода"):
*/
			/*// считаем, что если товар в ходе перемещений снова попал в исходное состояние, то он как бы не перемещался, 
*/
			/*// это движение можно исключить из общего оборота, а стоимость движения принять равной 0. Цепочки перемещений 
*/
			/*// таким образом размыкаются, что позволяет рассчитать стоимости движений, начиная от конца цепочки.
*/
			/*// Получим все состояния для товара, которые он принимал за период в виде таблицы
*/
			/*//	---------------------------------------------------------------------------------------------------------------------------------
*/
			/*// |Состояние 1 (Источник) |Состояние 2 (Приемник)| Перемещаемое количество| Стоимость (нужна для упрощения последующей корректировки)
*/
			/*// Последовательно обходя состояния, выделим контуры (пути, начала и концы которых совпадают)
*/
			/*// В каждом контуре найдем количество, которое совершило перемещение по замкнутому кругу ("холостой ход"), 
*/
			/*// и уменьшим каждое движение из контура на данное количество.
*/
			/*// Будем выбирать другие состояния для получения всех контуров и применим к ним то же правило.
*/
			/*// После нахождения контуров в графах перемещений и сокращения "холостого хода" получаем совокупность разомкнутых 
*/
			/*// путей перехода товара между состояниями (остовные деревья). Внутри каждой такой цепочки выполняем расчет.
*/
			/*// Важно:  в общем случае результат сокращения зависит от последовательности обхода контуров, поэтому
*/
			/*// для повторяемости результата она должна подчиняться какому-либо правилу (например, чтобы сводные перемещения
*/
			/*// упорядочивались по возрастанию даты первого перемещения)
*/
			/*// Получим таблицу перемещений, содержащую суммарные перемещения между состояниями
*/
			/*// Получаемая таблица должна содержать колонку "Количество", "Стоимость" и колонки, описывающие старое и новое состояние,
*/
			/*// причем имена колонок нового состояния заканчиваются на ПрефиксПараметровНовогоСостояния
*/
			/*ПрефиксПараметровНовогоСостояния="_НовоеСостояние";*/
			/*Таб = ПолучитьТаблицуПеремещений(ТаблицаТоваров, ДатаНач, ДатаКон, ПрефиксПараметровНовогоСостояния, СтруктураДопПараметров);*/
			/*СтруктураДопПараметров.Вставить("ТаблицаСписанныхПартийСпецодежды", ПолучитьСтруктруТаблицыСписанныхПартийСпецодежды(СтруктураДопПараметров.Учет));*/
			/*//1. Приведем переданную таблицу перемещений к требуемому виду:
*/
			/*// Таблица имеет колонки Источник, Приемник, Количество
*/
			/*// строка таблицы соответствует перемещению из состояния 1 в состояние 2, перемещения не повторяются.
*/
			/*// Количество колонок без ПрефиксПараметровНовогоСостояния должно быть равно количеству колонок с ПрефиксПараметровНовогоСостояния
*/
			/*// Сформируем также структуру, которая содержит параметры состояния товара
*/
			/*СтруктураСостояния = Новый Структура;*/
			/*МассивСумм = Неопределено;*/
			/*СтруктураДопПараметров.Свойство("МассивСумм", МассивСумм);*/
			if(true/*ТипЗнч(МассивСумм) <> Тип("Массив")*/)
			{
				/*МассивСумм = Новый Массив;*/
				/*МассивСумм.Добавить("Стоимость");*/
			}
			/*// То же самое, но в соответствии - для удобства поиска
*/
			/*СоотвСумм = Новый Соответствие;*/
			/*Инд=0;*/
			while(true/*Инд< Таб.Колонки.Количество()*/)
			{
				/*Колонка = Таб.Колонки[Инд];*/
				/*// Имя колонки не совпадает с количеством и колонками стоимости
*/
				if(true/*ВРег(Колонка.Имя) <> ВРег("Количество")*/)
				{
					/*// Это колонка суммы
*/
					if(true/*СоотвСумм[Колонка.Имя] <> Неопределено*/)
					{
						/*Инд = Инд+1;*/
						/*Продолжить;*/
					}
					/*// Колонки, оканчивающиеся на ПрефиксПараметровНовогоСостояния - правые (новое состояние), им должны соответствовать такие же левые, оканчивающиеся на ПрефиксПараметровНовогоСостояния
*/
					if(true/*Прав(Колонка.Имя, СтрДлина(ПрефиксПараметровНовогоСостояния)) = ПрефиксПараметровНовогоСостояния*/)
					{
						/*ИмяСоответствующейКолонки=Лев(Колонка.Имя, СтрДлина(Колонка.Имя)-СтрДлина(ПрефиксПараметровНовогоСостояния));*/
						if(true/*Таб.Колонки.Найти(ИмяСоответствующейКолонки)=Неопределено*/)
						{
							/*Таб.Колонки.Добавить(ИмяСоответствующейКолонки, Колонка.ТипЗначения);*/
						}
						/*// И наоборот, колонки, не оканчивающиеся на ПрефиксПараметровНовогоСостояния - левые (новое состояние), им должны соответствовать такие же правые, оканчивающиеся на ПрефиксПараметровНовогоСостояния
*/
					}
				}
				/*Инд=Инд+1;*/
			}
			/*// В таблице перемещений заменим параметры состояний индексами состояний, сами параметры будут храниться в СоотвПараметровСостояний
*/
			/*Таб.Колонки.Добавить("Источник", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(9,0)));*/
			/*Таб.Колонки.Добавить("Приемник", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(9,0)));*/
			/*СоотвПараметровСостояний = Новый Соответствие;*/
			/*// "Свернем" встречные перемещения: вместо двух перемещений типа 1->2 и 2->1 оставим одно 
*/
			/*// с количеством |Кол12 - Кол21| в направлении большего перемещения.
*/
			/*// Проведем следующее преобразование: повернем пары так, чтобы количество перемещения стало положительным
*/
			/*// "Свертка" встречных перемещений
*/
			/*Инд=0;*/
			/*КолВо = Таб.Количество();*/
			while(true/*Инд<КолВо*/)
			{
				/*Инд2 = Инд+1;*/
				while(true/*Инд2<КолВо*/)
				{
					/*Строка2 = Таб[Инд2];*/
					/*Строка  = Таб[Инд];*/
					/*// Если найдено соответствующее встречное перемещение
*/
					if(true/*Строка.Источник = Строка2.Приемник
				И Строка.Приемник = Строка2.Источник*/)
					{
						if(true/*Строка.Количество>Строка2.Количество*/)
						{
							/*УменьшитьНаКоличество = Строка2.Количество;*/
						}
						/*Строка.Количество  = Строка.Количество  - УменьшитьНаКоличество;*/
						/*Строка2.Количество = Строка2.Количество - УменьшитьНаКоличество;*/
						/*// На этом обход можно прервать: быть не более одной пары встречных перемещений
*/
						/*Прервать;*/
					}
				}
				/*; 
		
		Инд = Инд+1;*/
			}
			/*// Удалим обнулившиеся строки
*/
			/*// Удаляем только строки со всеми нулевыми суммами и нулевым количеством
*/
			/*КолВо = Таб.Количество();*/
			/*Инд=0;*/
			while(true/*Инд<КолВо*/)
			{
				/*Строка  = Таб[Инд];*/
				/*НеНужноУдалять = Строка.Количество<>0;*/
				if(true/*Не НеНужноУдалять*/)
				{
				}
				if(true/*Не НеНужноУдалять*/)
				{
					/*Таб.Удалить(Строка);*/
					/*КолВо = КолВо-1;*/
				}
			}
			/*// Получили таблицу перемещений в требуемом формате
*/
			/*ТаблицаПеремещений = Таб;*/
			/*// Таблица перемещений содержит несколько несвязанных частей, относящихся к отдельным партиям - строкам таблицы ТаблицаТоваров
*/
			/*// Обработка перемещений: разрыв контуров
*/
			/*// Получим наборы смежных вершин для каждой вершины
*/
			/*// Соотв СмежныеВершины Вершина, СмежныеВершины
*/
			/*Источники = Новый Соответствие;*/
			/*Приемники = Новый Соответствие;*/
			/*МассивНачалДеревьев = Новый Массив;*/
			/*// Чтобы рассчитать перемещения, заменим каждый связный граф перемещений его остовным деревом
*/
			/*// Для этого обойдем их все, найдем и разорвем все контуры по предложенному выше правилу.
*/
			/*// После этого таблица содержит незамкнутую последовательность перемещений. 
*/
			/*// Стоимость перемещений с количеством = 0 в таблице тоже должна быть приведена к 0.
*/
			/*СтСумм = Новый Структура;*/
			/*// структура сумм
*/
			/*// Теперь нужно выделить отдельные деревья, определить среднюю стоимость для каждого дерева, 
*/
			/*// и начиная с самого начала каждого дерева последовательно рассчитать стоимость для каждого состояния/перемещения
*/
			/*// Найдем начало каждого дерева - его нет в приемниках
*/
			/*// На данном этапе нужна информация о начальном состоянии и внешнем поступлении в каждую вершину
*/
			/*// Будем использовать список вершин, для каждой из которых указаны смежные вершины - приемники и 
*/
			/*Вершины = Новый Соответствие;*/
			/*// здесь нам понадобится общее количество источников, приемники
*/
			/*// В структуру Вершины нужно добавить данные о начальном остатке и внешнем поступлении для каждого из состояний,
*/
			/*// Можно также добавить состояний, не участвовавших в перемещениях, тогда для них тоже будет рассчитано внешнее списание
*/
			/*МассивДобавленныеВершины = Новый Массив;*/
			/*ДобавитьНачальныйОстатокИВнешнееПоступление(ТаблицаТоваров, Вершины, СоотвПараметровСостояний, ДатаНач, ДатаКон, СтруктураДопПараметров, МассивДобавленныеВершины);*/
			/*// Добавдленные состояния возвращаются специальным массивом, который добавляется к началам деревьев
*/
			/*// Теперь будем обходить деревья с начала, и рассчитывать состояния и переходы между ними
*/
			/*// Сформируем движения по спецодежде
*/
			/*ПроцедурыПогашенияСтоимости.ПогашениеСтоимостиПриПередачеВЭксплуатацию(СтруктураДопПараметров, СтруктураДопПараметров.ТаблицаСписанныхПартийСпецодежды);*/
		}
		// СписаниеПоСредней()
		// Находит контуры и разрывает их, сокращая на минимальное количество
		//
		// Параметры:
		//	Нет.
		//

		public void РазорватьКонтуры(/*НомерИсхВершины, Источники, ПройденныеВершины, ТаблицаПеремещений*/)
		{
			/*Приемники = Источники[НомерИсхВершины].СмежныеВершины;*/
		}
		// РазорватьКонтуры()
		// Рассчитывает отрезки пути в состояния, в которые есть переход из данной вершины
		//
		// Параметры:
		//	Источник - номер состояния-источника.
		//	Состояния - соответствие, содержащее состояния, приемники и т.д.
		//	СоотвПараметровСостояний - соответствие, содержащее параметры состояния, как они представлены в БД (измерения, счета, субконто и т.д.)
		//

		public void РассчитатьПуть(/*Источник, Состояния, СоотвПараметровСостояний, СтруктураДопПараметров*/)
		{
			/*// Состояние в начале:
*/
			/*// ............
*/
			/*// ............
*/
			/*// Расчет состояния.
*/
			/*// Стоимость в состоянии складывается из:
*/
			/*// Начального остатка + Внешнего прихода (определяется сразу)
*/
			/*// Прихода из других состояний (входящих стрелок - оперделяется сложением стрелок)
*/
			/*// Приход из других состояний определяем по таблице перемещений
*/
			/*// Расчет перемещения в другие состояния
*/
			/*// В каждом состоянии-приемнике КоличествоРассчитанныхВходов = КоличествоРассчитанныхВходов+1
*/
			/*СостояниеИсточник=Состояния[Источник];*/
			/*СтКорректировка = Новый Структура;*/
			/*// структура корректировок
*/
			/*СтСуммы = Новый Структура;*/
			/*// структура сумм в сстоянии
*/
			/*// Состояние можно использовать в расчете, если рассчитаны все входящие стрелки
*/
			if(true/*СостояниеИсточник.КоличествоИсточников=СостояниеИсточник.КоличествоРассчитанныхВходов*/)
			{
				/*СоотвПриемники=СостояниеИсточник.Приемники;*/
				/*// соответствие  - примники
*/
				/*// Рассчитаем перемещения между состояниями
*/
				/*// Остаток в состоянии после перемещений: суммы
*/
				/*СтОстаток = Новый Структура;*/
				/*// Теперь можем рассчитать внешние выходы:
*/
				/*// сформируем записи по внешнему списанию из состояния Источник
*/
				/*ДобавитьЗаписиПоВнешнемуСписанию(СоотвПараметровСостояний[Источник], СостояниеИсточник.Количество, СтОстаток, СтруктураДопПараметров);*/
				/*// Все выходы из данного состояния рассчитаны.
*/
			}
		}
		// РассчитатьПуть()
		////////////////////////////////////////////////////////////////////////////////
		// Процедуры списания по-средней, зависящие от структуры данных конфигурации

		public object ПолучитьМассивИсключаемыхСчетов(/**/)
		{
			/*МассивСчетов = Новый Массив();*/
			/*МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ТараПодТоваромИПорожняя);*/
			/*МассивСчетов.Добавить(ПланыСчетов.Налоговый.ТараПодТоваромИПорожняя);*/
			/*МассивСчетов.Добавить(ПланыСчетов.Международный.Тара);*/
			/*МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ТоварыНаСкладе);*/
			/*МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию);*/
			/*МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПереданныеОбъектыНедвижимости);*/
			/*МассивСчетов.Добавить(ПланыСчетов.Налоговый.ТоварыНаСкладе);*/
			/*МассивСчетов.Добавить(ПланыСчетов.Налоговый.ТоварыПереданныеНаКомиссию);*/
			/*МассивСчетов.Добавить(ПланыСчетов.Налоговый.ПереданныеОбъектыНедвижимости);*/
			return null;
		}

		public object ПолучитьМассивИсключаемыхСтатусовПартий(/**/)
		{
			/*МассивСтатусовПартий = Новый Массив();*/
			/*МассивСтатусовПартий.Добавить(Перечисления.СтатусыПартийТоваров.НаКомиссию);*/
			/*МассивСтатусовПартий.Добавить(Перечисления.СтатусыПартийТоваров.ВозвратнаяТара);*/
			return null;
		}

		public void ДобавитьВЗапросОтборПоКодуОперации(/*ЗапросНачОстПлюсПриход*/)
		{
			/*ЗапросНачОстПлюсПриход.Текст = СтрЗаменить(ЗапросНачОстПлюсПриход.Текст,"Номенклатура В (&МассивНоменклатуры)","Номенклатура В (&МассивНоменклатуры) И (НЕ СтатусПартии В (&ИсключаемыеСтатусыПартий))");*/
			/*ЗапросНачОстПлюсПриход.УстановитьПараметр("ИсключаемыеСтатусыПартий",ПолучитьМассивИсключаемыхСтатусовПартий());*/
		}

		public void ДобавитьВЗапросОтборПоСчету(/*ЗапросНачОстПлюсПриход*/)
		{
			/*ЗапросНачОстПлюсПриход.Текст = СтрЗаменить(ЗапросНачОстПлюсПриход.Текст,"Номенклатура В (&МассивНоменклатуры)","Номенклатура В (&МассивНоменклатуры) И (НЕ СчетУчета В (&СписокИсключаемыхСчетовУчета))");*/
			/*ЗапросНачОстПлюсПриход.УстановитьПараметр("СписокИсключаемыхСчетовУчета",ПолучитьМассивИсключаемыхСчетов());*/
		}

		public object ДобавитьОтборПоВидуУчета(/*ИмяТаблицы,Учет*/)
		{
			if(true/*Учет = "Упр"*/)
			{
			}
			return null;
		}
		// Возвращает таблицу перемещений товаров между состояниями
		// Зависит от конкретной структуры данных конфигурации
		//
		// Параметры:
		//	Нет.
		//

		public object ПолучитьТаблицуПеремещений(/*ТаблицаТоваров, ДатаНач, ДатаКон, ПрефиксПараметровНовогоСостояния, СтруктураДопПараметров*/)
		{
			/*Таб = Новый ТаблицаЗначений;*/
			/*// Если таблица товаров не задана, перемещений нет
*/
			if(true/*ТаблицаТоваров.Количество()=0*/)
			{
			}
			/*// Из структуры доп параметров добудем дополнительные параметры
*/
			/*Учет = СтруктураДопПараметров.Учет;*/
			/*//Состояния в УПП:
*/
			/*// Номенклатура
*/
			/*// ХарактеристикаНоменклатуры
*/
			/*// СерияНоменклатуры
*/
			/*// СтатусПартии (у)
*/
			/*// СчетУчета (б)
*/
			/*// Организация (б)
*/
			/*// ДокументОприходования
*/
			/*// Качество
*/
			/*// Склад
*/
			/*// Заказ
*/
			/*// Перемещения между состояниями в УПП записываются в регистры ПартииТоваровНаСкладах и ПартииТоваровПереданные
*/
			/*СтруктураИзмерений=Новый Структура;*/
			/*ИмяРегистра = СтруктураДопПараметров.ИмяРегистраСклад;*/
			/*СтруктураИзмерений.Вставить(ИмяРегистра, Новый Массив);*/
			/*ИмяРегистра = СтруктураДопПараметров.ИмяРегистраПереданные;*/
			/*СтруктураИзмерений.Вставить(ИмяРегистра, Новый Массив);*/
			if(true/*СтруктураДопПараметров.Свойство("ИмяРегистраВЭксплуатации")*/)
			{
				/*ИмяРегистра = СтруктураДопПараметров.ИмяРегистраВЭксплуатации;*/
				/*СтруктураИзмерений.Вставить(ИмяРегистра, Новый Массив);*/
			}
			/*КодыОперацийПеремещенияСклад = Новый Массив;*/
			/*КодыОперацийПеремещенияСклад.Добавить(Перечисления.КодыОперацийПартииТоваров.ПеремещениеМеждуСкладами);*/
			/*КодыОперацийПеремещенияСклад.Добавить(Перечисления.КодыОперацийПартииТоваров.КорректировкаСерийИХарактеристик);*/
			/*КодыОперацийПеремещенияСклад.Добавить(Перечисления.КодыОперацийПартииТоваров.КорректировкаКачества);*/
			/*КодыОперацийПеремещенияСклад.Добавить(Перечисления.КодыОперацийПартииТоваров.РезервированиеПодЗаказ);*/
			/*КодыОперацийПеремещенияСклад.Добавить(Перечисления.КодыОперацийПартииТоваров.СнятиеРезерваПодЗаказ);*/
			/*КодыОперацийПередача = Новый Массив;*/
			/*КодыОперацийПередача.Добавить(Перечисления.КодыОперацийПартииТоваров.ПередачаНаКомиссию);*/
			/*КодыОперацийПередача.Добавить(Перечисления.КодыОперацийПартииТоваров.ПередачаТарыКонтрагенту);*/
			/*КодыОперацийПередача.Добавить(Перечисления.КодыОперацийПартииТоваров.ПередачаВПереработку);*/
			/*КодыОперацийВозвратПереданных = Новый Массив;*/
			/*КодыОперацийВозвратПереданных.Добавить(Перечисления.КодыОперацийПартииТоваров.ВозвратОтКомиссионера);*/
			/*КодыОперацийВозвратПереданных.Добавить(Перечисления.КодыОперацийПартииТоваров.ВозвратТарыОтКонтрагента);*/
			/*КодыОперацийВозвратПереданных.Добавить(Перечисления.КодыОперацийПартииТоваров.ВозвратОтПереработчика);*/
			/*КодыОперацийПеремещенияВЭксплуатации = Новый Массив;*/
			/*КодыОперацийПеремещенияВЭксплуатации.Добавить(Перечисления.КодыОперацийПартииМатериаловВЭксплуатации.ПеремещениеВЭксплуатации);*/
			/*КодыОперацийПередачаВЭксплуатацию = Новый Массив;*/
			/*КодыОперацийПередачаВЭксплуатацию.Добавить(Перечисления.КодыОперацийПартииТоваров.ПередачаМатериаловВЭксплуатацию);*/
			/*КодыОперацийВозвратИзЭксплуатации = Новый Массив;*/
			/*//Возврат обслуживается производственным учетом
*/
			/*//КодыОперацийВозвратИзЭксплуатации.Добавить(Перечисления.КодыОперацийПартииМатериаловВЭксплуатации.ВозвратИзЭксплуатации);
*/
			/*КодыОперацийПустойМассив = Новый Массив;*/
			/*СтруктураВсехИзмерений= Новый Структура;*/
			/*// содержит все измерения
*/
			/*// В соответствии с метаданными регистров генерируется текст запроса
*/
			/*ПараметрыОтбораТоваров=Новый Массив;*/
			/*Запрос = Новый Запрос;*/
			/*// Для налогового учета процедура может быть использована для расчета постоянных и временных разниц
*/
			/*ДопРесурсы = "";*/
			if(true/*Учет = "Нал"*/)
			{
				/*ДопРесурсы = ", Источник.ПостояннаяРазница КАК ПостояннаяРазница, Источник.ВременнаяРазница КАК ВременнаяРазница";*/
				/*ДопАгрегРесурсы = ", СУММА(ПостояннаяРазница) КАК ПостояннаяРазница, СУММА(ВременнаяРазница) КАК ВременнаяРазница";*/
			}
			/*// Заполним структуры измерений в соответствии с метаданными регистров:
*/
			/*// Если в учете перемешений товаров могут участвовать n регистров, запрос будет состоять
*/
			/*// из объединения n запросов, в каждом из которых используются n+1 таблица регистра 
*/
			/*// (таблица i-го регистра, соединеная с таблицами всех регистров)
*/
			/*ТекстОбщий="";*/
			/*Сч=1;*/
			/*Инд=0;*/
			/*ТекстПоля = "";*/
			/*ТекстПоляРесурсы = ", СУММА(Количество) КАК Количество, СУММА(Стоимость) КАК Стоимость" + ДопАгрегРесурсы;*/
			/*ТекстЗапроса = "ВЫБРАТЬ "+Сред(ТекстПоля+ТекстПоляРесурсы, 2)+" ИЗ(" + Сред(ТекстОбщий, 16) + ") КАК Подзапрос
	//|" + ТекстУсловияНаНеравенствоПолей +"
	|СГРУППИРОВАТЬ ПО "+ Сред(ТекстПоля, 2)+"
	|УПОРЯДОЧИТЬ ПО МИНИМУМ(Подзапрос.Период) ";*/
			/*// Перемещения будут следовать в порядке дат первых движений
*/
			/*Запрос.Текст = ТекстЗапроса;*/
			/*//Запрос.УстановитьПараметр("КодыОпераций0", КодыОперацийПеремещенияСклад);
*/
			/*//Запрос.УстановитьПараметр("КодыОпераций1", КодыОперацийПередача);
*/
			/*//Запрос.УстановитьПараметр("КодыОпераций2", КодыОперацийВозвратПереданных);
*/
			/*//Запрос.УстановитьПараметр("КодыОпераций3", КодыОперацийПеремещенияПереданные);
*/
			/*Запрос.УстановитьПараметр("КодыОпераций0", КодыОперацийПеремещенияСклад);*/
			/*Запрос.УстановитьПараметр("КодыОпераций1", КодыОперацийПередача);*/
			/*Запрос.УстановитьПараметр("КодыОпераций2", КодыОперацийПередачаВЭксплуатацию);*/
			/*Запрос.УстановитьПараметр("КодыОпераций3", КодыОперацийВозвратПереданных);*/
			/*Запрос.УстановитьПараметр("КодыОпераций4", КодыОперацийПустойМассив);*/
			/*//Перемещение внутри товаров переданных на комиссию
*/
			/*Запрос.УстановитьПараметр("КодыОпераций5", КодыОперацийПустойМассив);*/
			/*//Перемещение из переданных на комиссию в эксплуатацию
*/
			/*Запрос.УстановитьПараметр("КодыОпераций6", КодыОперацийВозвратИзЭксплуатации);*/
			/*Запрос.УстановитьПараметр("КодыОпераций7", КодыОперацийПустойМассив);*/
			/*//Перемещение из эксплуатации на комиссию
*/
			/*Запрос.УстановитьПараметр("КодыОпераций8", КодыОперацийПеремещенияВЭксплуатации);*/
			/*Запрос.УстановитьПараметр("ВидДвиженияРасход", ВидДвиженияНакопления.Расход);*/
			/*Запрос.УстановитьПараметр("ДатаНач", ДатаНач);*/
			/*Запрос.УстановитьПараметр("ДатаКон", ДатаКон);*/
			/*Запрос.УстановитьПараметр("Организация", СтруктураДопПараметров.Организация);*/
			/*Запрос.УстановитьПараметр("СписокИсключаемыхСчетовУчета", ПолучитьМассивИсключаемыхСчетов());*/
			/*Запрос.УстановитьПараметр("ИсключаемыеСтатусыПартий",ПолучитьМассивИсключаемыхСтатусовПартий());*/
			/*Таб=Запрос.Выполнить().Выгрузить();*/
			/*// Удалим из таблицы строки, не соответствующие таблице товаров (если в ней есть несколько строк, то в запросе могут быть 
*/
			/*// другие комбинации значений в разных колонках)
*/
			/*СтруктураОтбора = Новый Структура;*/
			if(true/*ТаблицаТоваров.Количество()>1*/)
			{
				/*Инд=0;*/
				while(true/*Инд < Таб.Количество()*/)
				{
					/*;
			Строка = Таб[Инд];*/
					if(true/*ТаблицаТоваров.НайтиСтроки(СтруктураОтбора).Количество()=0*/)
					{
						/*Таб.Удалить(Строка);*/
					}
				}
				/*;;*/
			}
			return null;
		}
		// ПолучитьТаблицуПеремещений()
		// Добавляет данные о начальном остатке и внешнем поступлении в состояниях
		//
		// Параметры:
		//	Нет.
		//

		public void ДобавитьНачальныйОстатокИВнешнееПоступление(/*ТаблицаТоваров, Состояния, СоотвПараметровСостояний, ДатаНач, ДатаКон, СтруктураДопПараметров, МассивДобавляемыхВершин*/)
		{
			/*// Из структуры доп параметров получим дополнительные параметры
*/
			/*// Запросом получим данные об остатках в состояниях на начало периода
*/
			/*КодыОпераций = Перечисления.КодыОперацийПартииТоваров;*/
			/*МассивНоменклатуры  = Неопределено;*/
			/*ТабПартий = Неопределено;*/
			/*МассивСумм = Неопределено;*/
			/*// список суммовых ресурсов, списываемых пропорционально количеству
*/
			/*СтруктураДопПараметров.Свойство("МассивСумм", МассивСумм);*/
			if(true/*ТипЗнч(МассивСумм) <> Тип("Массив")*/)
			{
				/*МассивСумм = Новый Массив;*/
				/*МассивСумм.Добавить("Стоимость");*/
			}
			/*ЗапросНачОстПлюсПриход = Новый Запрос;*/
			/*ЗапросНачОстПлюсПриход.УстановитьПараметр("ВидДвиженияПриход", ВидДвиженияНакопления.Приход);*/
			/*ЗапросНачОстПлюсПриход.УстановитьПараметр("ВидДвиженияРасход", ВидДвиженияНакопления.Расход);*/
			/*ЗапросНачОстПлюсПриход.УстановитьПараметр("ДатаНач", ДатаНач);*/
			/*ЗапросНачОстПлюсПриход.УстановитьПараметр("ДатаКон", ДатаКон);*/
			/*// Массив для отбора товаров в запросе
*/
			/*ИндСостояния=0;*/
			/*// Добавим номенклатуру из общего списка
*/
			/*МассивНоменклатуры = ТаблицаТоваров.ВыгрузитьКолонку("Номенклатура");*/
			/*МассивНоменклатуры = ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(МассивНоменклатуры);*/
			/*// Из структуры доп параметров добудем дополнительные параметры
*/
			/*Учет = СтруктураДопПараметров.Учет;*/
			/*ИмяРегистра = СтруктураДопПараметров.ИмяРегистраСклад;*/
			/*ИмяРегистраПеред = СтруктураДопПараметров.ИмяРегистраПереданные;*/
			/*// Товары на складах
*/
			if(true/*Учет = "Упр"*/)
			{
				/*ЗаполнитьЗапросНачОстПлюсПриходУпр(ЗапросНачОстПлюсПриход);*/
				/*ДобавитьВЗапросОтборПоКодуОперации(ЗапросНачОстПлюсПриход);*/
			}
			/*ЗапросНачОстПлюсПриход.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);*/
			/*// Коды операций выбираемых в запросе движений (внешнего поступления)
*/
			/*СписокКодов = Новый Массив;*/
			/*СписокКодов.Добавить(КодыОпераций.Поступление);*/
			/*СписокКодов.Добавить(КодыОпераций.ПоступлениеВПереработку);*/
			/*СписокКодов.Добавить(КодыОпераций.ВозвратМатериаловИзПроизводстваФикс);*/
			/*СписокКодов.Добавить(КодыОпераций.ВозвратМатериаловИзПроизводстваРасч);*/
			/*СписокКодов.Добавить(КодыОпераций.ВозвратОтПокупателя);*/
			/*СписокКодов.Добавить(КодыОпераций.ВозвратПродукцииИзПроизводстваФикс);*/
			/*СписокКодов.Добавить(КодыОпераций.ВыпускПродукцииФиксНаСклад);*/
			/*СписокКодов.Добавить(КодыОпераций.ПоступлениеДопРасходов);*/
			/*СписокКодов.Добавить(КодыОпераций.ПоступлениеОборудования);*/
			/*СписокКодов.Добавить(КодыОпераций.ВыпускПоОперацииСтоимость);*/
			/*СписокКодов.Добавить(КодыОпераций.ВозвратТарыОтКонтрагента);*/
			/*СписокКодов.Добавить(КодыОпераций.ВозвратМатериаловИзЭксплуатации);*/
			/*СписокКодов.Добавить(КодыОпераций.Оприходование);*/
			/*СписокКодов.Добавить(КодыОпераций.ВключениеАктиваВСоставМПЗ);*/
			/*СписокКодов.Добавить(КодыОпераций.ВключениеНДСВСтоимость);*/
			if(true/*СтруктураДопПараметров.Свойство("КорректироватьКомплектыПродукции")*/)
			{
				/*СписокКодов.Добавить(КодыОпераций.Комплектация);*/
			}
			/*// Добавляем коды исключаемого расхода:
*/
			/*// Вычитаем списание по возврату поставщику: оно не должно корректироваться
*/
			/*СписокКодов.Добавить(КодыОпераций.ВозвратПоставщику);*/
			if(true/*СтруктураДопПараметров.ВстречныйВыпуск*/)
			{
				/*// вычитаем встречный выпуск
*/
				/*ЗапросНачОстПлюсПриход.Текст = СтрЗаменить(ЗапросНачОстПлюсПриход.Текст, "ПартииПриход.КодОперации В(&СписокКодов)",
			"(ПартииПриход.КодОперации В(&СписокКодов)
			|ИЛИ ( 1 В
			|	(ВЫБРАТЬ Первые 1
			|		1
			|	ИЗ
			|		РегистрСведений.КорректировкаВстречногоВыпускаПродукции КАК КорректировкаВстречногоВыпускаПродукции
			|	ГДЕ
			|		ПартииПриход.НомерСтрокиСписанныхТоваров = КорректировкаВстречногоВыпускаПродукции.НомерСтрокиСписанныхТоваров
			|		И ПартииПриход.Регистратор = КорректировкаВстречногоВыпускаПродукции.Документ			
			|		" + ДобавитьОтборПоВидуУчета("КорректировкаВстречногоВыпускаПродукции",Учет) + "
			|	Объединить
			|
			|	ВЫБРАТЬ Первые 1
			|		1
			|	ИЗ
			|		РегистрСведений.КорректировкаВстречногоВыпускаПродукции КАК КорректировкаВстречногоВыпускаПродукции
			|	ГДЕ
			|		ПартииПриход.НомерСтрокиСписанныхТоваров = КорректировкаВстречногоВыпускаПродукции.НомерСтрокиСписанныхТоваров
			|		И КорректировкаВстречногоВыпускаПродукции.ОтражатьВУправленческомУчете
			|		И ПартииПриход.ДокументДвижения = КорректировкаВстречногоВыпускаПродукции.Документ
			|		И ПартииПриход.Период = &Период
			//|		И ПартииПриход.КодОперации = &СписаниеПартийВПроизводствоОперативно
			//|		" + ДобавитьОтборПоВидуУчета("КорректировкаВстречногоВыпускаПродукции",Учет) + "
			|
			|)))");*/
				/*// В одной секунде может быть записано несколько документов "Расчет себестоимости"
*/
				/*// Запись в регистр "КорректировкаВстречногоВыпускаПродукции" сделает только один документ
*/
				if(true/*Учет = "Бух"*/)
				{
					/*ЗапросНачОстПлюсПриход.Текст = СтрЗаменить(ЗапросНачОстПлюсПриход.Текст, 
										   "КорректировкаВстречногоВыпускаПродукции.ОтражатьВУправленческомУчете",
										   "КорректировкаВстречногоВыпускаПродукции.ОтражатьВБухгалтерскомУчете");*/
				}
				/*ЗапросНачОстПлюсПриход.УстановитьПараметр("СписаниеПартийВПроизводствоОперативно",КодыОпераций.СписаниеПартийВПроизводствоОперативно);*/
				/*ЗапросНачОстПлюсПриход.УстановитьПараметр("Период",СтруктураДопПараметров.Период);*/
			}
			/*ЗапросНачОстПлюсПриход.УстановитьПараметр("СписокКодов", СписокКодов);*/
			/*ТабПартий = ЗапросНачОстПлюсПриход.Выполнить().Выгрузить();*/
			/*ТабПартий.Колонки.Добавить("Найдена", Новый ОписаниеТипов("Булево"));*/
			/*// Теперь добавим состояния не участвующие в перемещениях (обособленные вершины) - тем, 
*/
			/*//по которым не было перемещений, чтобы по ним внешнее списание рассчиталось той же процедурой, что и для перемещений
*/
			/*ИндСостояния = СоотвПараметровСостояний.Количество();*/
		}
		// ДобавитьНачальныйОстатокИВнешнееПоступление()
		// Заполняет текст запроса, выбирающего остаток и поступление по упр учету
		//
		// Параметры:
		//	Нет.
		//

		public void ЗаполнитьЗапросНачОстПлюсПриходУпр(/*ЗапросНачОстПлюсПриход*/)
		{
			/*// Партии на складах
*/
			/*"ВЫБРАТЬ
	|	ОстПлюсПрих.Номенклатура,
	|	ОстПлюсПрих.ХарактеристикаНоменклатуры,
	|	ОстПлюсПрих.СерияНоменклатуры,
	|	ОстПлюсПрих.ДокументОприходования,
	|	ОстПлюсПрих.Склад,
	|	ОстПлюсПрих.Заказ,
	|	ОстПлюсПрих.Качество,
	|	NULL КАК ДоговорКонтрагента,
	|	NULL КАК ДокументПередачи,
	|	ОстПлюсПрих.СтатусПартии,
	|	NULL КАК СтатусПередачи,
	|	СУММА(ОстПлюсПрих.Количество) КАК Количество,
	|	СУММА(ОстПлюсПрих.Стоимость) КАК Стоимость,
	|	ОстПлюсПрих.Организация,
	|	NULL КАК Подразделение,
	|	NULL КАК ФизЛицо,
	|	NULL КАК НазначениеИспользования
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПартииОстатки.Номенклатура КАК Номенклатура,
	|		ПартииОстатки.Склад КАК Склад,
	|		ПартииОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ПартииОстатки.СерияНоменклатуры КАК СерияНоменклатуры,
	|		ПартииОстатки.ДокументОприходования КАК ДокументОприходования,
	|		ПартииОстатки.Заказ КАК Заказ,
	|		ПартииОстатки.Качество КАК Качество,
	|		ПартииОстатки.СтатусПартии КАК СтатусПартии,
	|		ПартииОстатки.КоличествоОстаток КАК Количество,
	|		ПартииОстатки.СтоимостьОстаток КАК Стоимость,
	|		ПартииОстатки.Организация КАК Организация
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровНаСкладах.Остатки(&ДатаНач, Номенклатура В (&МассивНоменклатуры)) КАК ПартииОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПартииПриход.Номенклатура,
	|		ПартииПриход.Склад,
	|		ПартииПриход.ХарактеристикаНоменклатуры,
	|		ПартииПриход.СерияНоменклатуры,
	|		ПартииПриход.ДокументОприходования,
	|		ПартииПриход.Заказ,
	|		ПартииПриход.Качество,
	|		ПартииПриход.СтатусПартии,
	|		ВЫБОР
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииПриход.Количество
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииПриход.Количество
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииПриход.Стоимость
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииПриход.Стоимость
	|		КОНЕЦ,
	|		ПартииПриход.Организация
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровНаСкладах КАК ПартииПриход
	|	ГДЕ
	|		ПартииПриход.Номенклатура В(&МассивНоменклатуры)
	|		И ПартииПриход.Период МЕЖДУ &ДатаНач И &ДатаКон
	|		И ПартииПриход.КодОперации В(&СписокКодов)
	|		И ПартииПриход.Активность = ИСТИНА) КАК ОстПлюсПрих
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстПлюсПрих.Номенклатура,
	|	ОстПлюсПрих.Склад,
	|	ОстПлюсПрих.ХарактеристикаНоменклатуры,
	|	ОстПлюсПрих.СерияНоменклатуры,
	|	ОстПлюсПрих.ДокументОприходования,
	|	ОстПлюсПрих.Заказ,
	|	ОстПлюсПрих.Качество,
	|	ОстПлюсПрих.СтатусПартии,
	|	ОстПлюсПрих.Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОстПлюсПрих.Номенклатура,
	|	ОстПлюсПрих.ХарактеристикаНоменклатуры,
	|	NULL,
	|	ОстПлюсПрих.ДокументОприходования,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ОстПлюсПрих.ДоговорКонтрагента,
	|	ОстПлюсПрих.ДокументПередачи,
	|	ОстПлюсПрих.СтатусПартии,
	|	ОстПлюсПрих.СтатусПередачи,
	|	СУММА(ОстПлюсПрих.Количество),
	|	СУММА(ОстПлюсПрих.Стоимость),
	|	ОстПлюсПрих.Организация,
	|	NULL КАК Подразделение,
	|	NULL КАК ФизЛицо,
	|	NULL КАК НазначениеИспользования
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПартииПередОстатки.Номенклатура КАК Номенклатура,
	|		ПартииПередОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ПартииПередОстатки.ДокументОприходования КАК ДокументОприходования,
	|		ПартииПередОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|		ПартииПередОстатки.ДокументПередачи КАК ДокументПередачи,
	|		ПартииПередОстатки.КоличествоОстаток КАК Количество,
	|		ПартииПередОстатки.СтоимостьОстаток КАК Стоимость,
	|		ПартииПередОстатки.СтатусПартии КАК СтатусПартии,
	|		ПартииПередОстатки.СтатусПередачи КАК СтатусПередачи,
	|		ПартииПередОстатки.Организация КАК Организация
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровПереданные.Остатки(&ДатаНач, Номенклатура В (&МассивНоменклатуры)) КАК ПартииПередОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПартииПередПриход.Номенклатура,
	|		ПартииПередПриход.ХарактеристикаНоменклатуры,
	|		ПартииПередПриход.ДокументОприходования,
	|		ПартииПередПриход.ДоговорКонтрагента,
	|		ПартииПередПриход.ДокументПередачи,
	|		ВЫБОР
	|			КОГДА ПартииПередПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииПередПриход.Количество
	|			КОГДА ПартииПередПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииПередПриход.Количество
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ПартииПередПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииПередПриход.Стоимость
	|			КОГДА ПартииПередПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииПередПриход.Стоимость
	|		КОНЕЦ,
	|		ПартииПередПриход.СтатусПартии,
	|		ПартииПередПриход.СтатусПередачи,
	|		ПартииПередПриход.Организация
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровПереданные КАК ПартииПередПриход
	|	ГДЕ
	|		ПартииПередПриход.Номенклатура В(&МассивНоменклатуры)
	|		И ПартииПередПриход.Период МЕЖДУ &ДатаНач И &ДатаКон
	|		И ПартииПередПриход.КодОперации В(&СписокКодов)
	|		И ПартииПередПриход.Активность = ИСТИНА) КАК ОстПлюсПрих
	|СГРУППИРОВАТЬ ПО
	|	ОстПлюсПрих.Номенклатура,
	|	ОстПлюсПрих.ДокументОприходования,
	|	ОстПлюсПрих.ХарактеристикаНоменклатуры,
	|	ОстПлюсПрих.ДоговорКонтрагента,
	|	ОстПлюсПрих.ДокументПередачи,
	|	ОстПлюсПрих.СтатусПартии,
	|	ОстПлюсПрих.СтатусПередачи,
	|	ОстПлюсПрих.Организация	
	//Партии материалов в эксплуатации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОстПлюсПрих.Номенклатура,
	|	ОстПлюсПрих.ХарактеристикаНоменклатуры,
	|	ОстПлюсПрих.СерияНоменклатуры,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ОстПлюсПрих.ДокументПередачи,
	|	NULL,
	|	NULL,
	|	СУММА(ОстПлюсПрих.Количество),
	|	СУММА(ОстПлюсПрих.Стоимость),
	|	NULL,
	|	ОстПлюсПрих.Подразделение,
	|	ОстПлюсПрих.ФизЛицо,
	|	ОстПлюсПрих.НазначениеИспользования
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПартииВЭксплуатацииОстатки.Номенклатура КАК Номенклатура,
	|		ПартииВЭксплуатацииОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ПартииВЭксплуатацииОстатки.СерияНоменклатуры КАК СерияНоменклатуры,
	|		ПартииВЭксплуатацииОстатки.ДокументПередачи КАК ДокументПередачи,
	|		ПартииВЭксплуатацииОстатки.ФизЛицо КАК ФизЛицо,
	|		ПартииВЭксплуатацииОстатки.КоличествоОстаток КАК Количество,
	|		ПартииВЭксплуатацииОстатки.СтоимостьОстаток КАК Стоимость,
	|		ПартииВЭксплуатацииОстатки.НазначениеИспользования КАК НазначениеИспользования,
	|		ПартииВЭксплуатацииОстатки.Подразделение КАК Подразделение
	|	ИЗ
	|		РегистрНакопления.ПартииМатериаловВЭксплуатации.Остатки(&ДатаНач, Номенклатура в (&МассивНоменклатуры)) КАК ПартииВЭксплуатацииОстатки
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПартииВЭксплуатацииПриход.Номенклатура,
	|		ПартииВЭксплуатацииПриход.ХарактеристикаНоменклатуры,
	|		ПартииВЭксплуатацииПриход.СерияНоменклатуры,
	|		ПартииВЭксплуатацииПриход.ДокументПередачи,
	|		ПартииВЭксплуатацииПриход.ФизЛицо,
	|		ВЫБОР
	|			КОГДА ПартииВЭксплуатацииПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииВЭксплуатацииПриход.Количество
	|			КОГДА ПартииВЭксплуатацииПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииВЭксплуатацииПриход.Количество
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ПартииВЭксплуатацииПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииВЭксплуатацииПриход.Стоимость
	|			КОГДА ПартииВЭксплуатацииПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииВЭксплуатацииПриход.Стоимость
	|		КОНЕЦ,
	|		ПартииВЭксплуатацииПриход.НазначениеИспользования,
	|		ПартииВЭксплуатацииПриход.Подразделение
	|	ИЗ
	|		РегистрНакопления.ПартииМатериаловВЭксплуатации КАК ПартииВЭксплуатацииПриход
	|	ГДЕ
	|		ПартииВЭксплуатацииПриход.Номенклатура В(&МассивНоменклатуры)
	|		И ПартииВЭксплуатацииПриход.Период МЕЖДУ &ДатаНач И &ДатаКон
	|		И ПартииВЭксплуатацииПриход.КодОперации В(&СписокКодов)
	|		И ПартииВЭксплуатацииПриход.Активность = ИСТИНА) КАК ОстПлюсПрих
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстПлюсПрих.Номенклатура,
	|	ОстПлюсПрих.ХарактеристикаНоменклатуры,
	|	ОстПлюсПрих.СерияНоменклатуры,
	|	ОстПлюсПрих.ДокументПередачи,
	|	ОстПлюсПрих.Подразделение,
	|	ОстПлюсПрих.ФизЛицо,
	|	ОстПлюсПрих.НазначениеИспользования";*/
			/*ЗапросНачОстПлюсПриход.Текст = Текст;*/
		}
		// ЗаполнитьЗапросНачОстПлюсПриходУпр()
		// Заполняет текст запроса, выбирающего остаток и поступление по бух учету
		//
		// Параметры:
		//	ЗапросНачОстПлюсПриход - Запрос
		//

		public void ЗаполнитьЗапросНачОстПлюсПриходБух(/*ЗапросНачОстПлюсПриход*/)
		{
			/*// Партии на складах
*/
			/*"ВЫБРАТЬ
	|	ОстПлюсПрих.Номенклатура,
	|	ОстПлюсПрих.ХарактеристикаНоменклатуры,
	|	ОстПлюсПрих.СерияНоменклатуры,
	|	ОстПлюсПрих.ДокументОприходования,
	|	ОстПлюсПрих.Склад,
	|	ОстПлюсПрих.Заказ,
	|	ОстПлюсПрих.Качество,
	|	NULL КАК ДоговорКонтрагента,
	|	NULL КАК ДокументПередачи,
	|	СУММА(ОстПлюсПрих.Количество) КАК Количество,
	|	СУММА(ОстПлюсПрих.Стоимость) КАК Стоимость,
	|	ОстПлюсПрих.СчетУчета,
	|	ОстПлюсПрих.Организация,
	|	NULL КАК Подразделение,
	|	NULL КАК ФизЛицо,
	|	NULL КАК НазначениеИспользования
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПартииОстатки.Номенклатура КАК Номенклатура,
	|		ПартииОстатки.Склад КАК Склад,
	|		ПартииОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ПартииОстатки.СерияНоменклатуры КАК СерияНоменклатуры,
	|		ПартииОстатки.ДокументОприходования КАК ДокументОприходования,
	|		ПартииОстатки.Заказ КАК Заказ,
	|		ПартииОстатки.Качество КАК Качество,
	|		ПартииОстатки.КоличествоОстаток КАК Количество,
	|		ПартииОстатки.СтоимостьОстаток КАК Стоимость,
	|		ПартииОстатки.СчетУчета КАК СчетУчета,
	|		ПартииОстатки.Организация КАК Организация
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровНаСкладахБухгалтерскийУчет.Остатки(&ДатаНач, Номенклатура В (&МассивНоменклатуры)) КАК ПартииОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПартииПриход.Номенклатура,
	|		ПартииПриход.Склад,
	|		ПартииПриход.ХарактеристикаНоменклатуры,
	|		ПартииПриход.СерияНоменклатуры,
	|		ПартииПриход.ДокументОприходования,
	|		ПартииПриход.Заказ,
	|		ПартииПриход.Качество,
	|		ВЫБОР
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииПриход.Количество
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииПриход.Количество
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииПриход.Стоимость
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииПриход.Стоимость
	|		КОНЕЦ,
	|		ПартииПриход.СчетУчета,
	|		ПартииПриход.Организация
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровНаСкладахБухгалтерскийУчет КАК ПартииПриход
	|	ГДЕ
	|		ПартииПриход.Номенклатура В(&МассивНоменклатуры)
	|		И ПартииПриход.Период МЕЖДУ &ДатаНач И &ДатаКон
	|		И ПартииПриход.КодОперации В(&СписокКодов)
	|		И ПартииПриход.Активность = ИСТИНА) КАК ОстПлюсПрих
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстПлюсПрих.Номенклатура,
	|	ОстПлюсПрих.Склад,
	|	ОстПлюсПрих.ХарактеристикаНоменклатуры,
	|	ОстПлюсПрих.СерияНоменклатуры,
	|	ОстПлюсПрих.ДокументОприходования,
	|	ОстПлюсПрих.Заказ,
	|	ОстПлюсПрих.Качество,
	|	ОстПлюсПрих.СчетУчета,
	|	ОстПлюсПрих.Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОстПлюсПрих.Номенклатура,
	|	ОстПлюсПрих.ХарактеристикаНоменклатуры,
	|	NULL,
	|	ОстПлюсПрих.ДокументОприходования,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ОстПлюсПрих.ДоговорКонтрагента,
	|	ОстПлюсПрих.ДокументПередачи,
	|	СУММА(ОстПлюсПрих.Количество),
	|	СУММА(ОстПлюсПрих.Стоимость),
	|	ОстПлюсПрих.СчетУчета,
	|	ОстПлюсПрих.Организация,
	|	NULL КАК Подразделение,
	|	NULL КАК ФизЛицо,
	|	NULL КАК НазначениеИспользования
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПартииПередОстатки.Номенклатура КАК Номенклатура,
	|		ПартииПередОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ПартииПередОстатки.ДокументОприходования КАК ДокументОприходования,
	|		ПартииПередОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|		ПартииПередОстатки.ДокументПередачи КАК ДокументПередачи,
	|		ПартииПередОстатки.КоличествоОстаток КАК Количество,
	|		ПартииПередОстатки.СтоимостьОстаток КАК Стоимость,
	|		ПартииПередОстатки.СчетУчета КАК СчетУчета,
	|		ПартииПередОстатки.Организация КАК Организация
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровПереданныеБухгалтерскийУчет.Остатки(&ДатаНач, Номенклатура В (&МассивНоменклатуры)) КАК ПартииПередОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПартииПередПриход.Номенклатура,
	|		ПартииПередПриход.ХарактеристикаНоменклатуры,
	|		ПартииПередПриход.ДокументОприходования,
	|		ПартииПередПриход.ДоговорКонтрагента,
	|		ПартииПередПриход.ДокументПередачи,
	|		ВЫБОР
	|			КОГДА ПартииПередПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииПередПриход.Количество
	|			КОГДА ПартииПередПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииПередПриход.Количество
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ПартииПередПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииПередПриход.Стоимость
	|			КОГДА ПартииПередПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииПередПриход.Стоимость
	|		КОНЕЦ,
	|		ПартииПередПриход.СчетУчета,
	|		ПартииПередПриход.Организация
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровПереданныеБухгалтерскийУчет КАК ПартииПередПриход
	|	ГДЕ
	|		ПартииПередПриход.Номенклатура В(&МассивНоменклатуры)
	|		И ПартииПередПриход.Период МЕЖДУ &ДатаНач И &ДатаКон
	|		И ПартииПередПриход.КодОперации В(&СписокКодов)
	|		И ПартииПередПриход.Активность = ИСТИНА) КАК ОстПлюсПрих
	|СГРУППИРОВАТЬ ПО
	|	ОстПлюсПрих.Номенклатура,
	|	ОстПлюсПрих.ХарактеристикаНоменклатуры,
	|	ОстПлюсПрих.ДокументОприходования,
	|	ОстПлюсПрих.ДокументПередачи,
	|	ОстПлюсПрих.ДоговорКонтрагента,
	|	ОстПлюсПрих.СчетУчета,
	|	ОстПлюсПрих.Организация
	|
	//Партии материалов в эксплуатации
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	ОстПлюсПрих.Номенклатура,
	|	ОстПлюсПрих.ХарактеристикаНоменклатуры,
	|	ОстПлюсПрих.СерияНоменклатуры,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL КАК ДоговорКонтрагента,
	|	ОстПлюсПрих.ДокументПередачи КАК ДокументПередачи,
	|	СУММА(ОстПлюсПрих.Количество) КАК Количество,
	|	СУММА(ОстПлюсПрих.Стоимость) КАК Стоимость,
	|	ОстПлюсПрих.СчетУчета,
	|	ОстПлюсПрих.Организация,
	|	ОстПлюсПрих.Подразделение КАК Подразделение,
	|	ОстПлюсПрих.ФизЛицо КАК ФизЛицо,
	|	ОстПлюсПрих.НазначениеИспользования КАК НазначениеИспользования
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПартииОстатки.Номенклатура КАК Номенклатура,
	|		ПартииОстатки.Подразделение КАК Подразделение,
	|		ПартииОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ПартииОстатки.СерияНоменклатуры КАК СерияНоменклатуры,
	|		ПартииОстатки.ДокументПередачи КАК ДокументПередачи,
	|		ПартииОстатки.ФизЛицо КАК ФизЛицо,
	|		ПартииОстатки.НазначениеИспользования КАК НазначениеИспользования,
	|		ПартииОстатки.КоличествоОстаток КАК Количество,
	|		ПартииОстатки.СтоимостьОстаток КАК Стоимость,
	|		ПартииОстатки.СчетУчета КАК СчетУчета,
	|		ПартииОстатки.Организация КАК Организация
	|	ИЗ
	|		РегистрНакопления.ПартииМатериаловВЭксплуатацииБухгалтерскийУчет.Остатки(&ДатаНач, Номенклатура В (&МассивНоменклатуры)) КАК ПартииОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПартииПриход.Номенклатура,
	|		ПартииПриход.Подразделение,
	|		ПартииПриход.ХарактеристикаНоменклатуры,
	|		ПартииПриход.СерияНоменклатуры,
	|		ПартииПриход.ДокументПередачи,
	|		ПартииПриход.ФизЛицо,
	|		ПартииПриход.НазначениеИспользования,
	|		ВЫБОР
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииПриход.Количество
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииПриход.Количество
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииПриход.Стоимость
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииПриход.Стоимость
	|		КОНЕЦ,
	|		ПартииПриход.СчетУчета,
	|		ПартииПриход.Организация
	|	ИЗ
	|		РегистрНакопления.ПартииМатериаловВЭксплуатацииБухгалтерскийУчет КАК ПартииПриход
	|	ГДЕ
	|		ПартииПриход.Номенклатура В(&МассивНоменклатуры)
	|		И ПартииПриход.Период МЕЖДУ &ДатаНач И &ДатаКон
	|		И ПартииПриход.КодОперации В(&СписокКодов)
	|		И ПартииПриход.Активность = ИСТИНА) КАК ОстПлюсПрих
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстПлюсПрих.Номенклатура,
	|	ОстПлюсПрих.ДокументПередачи,
	|	ОстПлюсПрих.ХарактеристикаНоменклатуры,
	|	ОстПлюсПрих.СерияНоменклатуры,
	|	ОстПлюсПрих.Подразделение,
	|	ОстПлюсПрих.ФизЛицо,
	|	ОстПлюсПрих.НазначениеИспользования,
	|	ОстПлюсПрих.СчетУчета,
	|	ОстПлюсПрих.Организация";*/
			/*ЗапросНачОстПлюсПриход.Текст = Текст;*/
		}
		// ЗаполнитьЗапросНачОстПлюсПриходБух()
		// Заполняет текст запроса, выбирающего остаток и поступление по упр учету
		//
		// Параметры:
		//	Нет.
		//

		public void ЗаполнитьЗапросНачОстПлюсПриходНал(/*ЗапросНачОстПлюсПриход*/)
		{
			/*// Партии на складах
*/
			/*"ВЫБРАТЬ
	|	ОстПлюсПрих.Номенклатура,
	|	ОстПлюсПрих.ХарактеристикаНоменклатуры,
	|	ОстПлюсПрих.СерияНоменклатуры,
	|	ОстПлюсПрих.ДокументОприходования,
	|	ОстПлюсПрих.Склад,
	|	ОстПлюсПрих.Заказ,
	|	ОстПлюсПрих.Качество,
	|	NULL КАК ДоговорКонтрагента,
	|	NULL КАК ДокументПередачи,
	|	ОстПлюсПрих.СчетУчета,
	|	ОстПлюсПрих.Организация,
	|	СУММА(ОстПлюсПрих.Количество) КАК Количество,
	|	СУММА(ОстПлюсПрих.Стоимость) КАК Стоимость,
	|	СУММА(ОстПлюсПрих.ПостояннаяРазница) КАК ПостояннаяРазница,
	|	СУММА(ОстПлюсПрих.ВременнаяРазница) КАК ВременнаяРазница,
	|	NULL КАК Подразделение,
	|	NULL КАК ФизЛицо,
	|	NULL КАК НазначениеИспользования
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПартииОстатки.Номенклатура КАК Номенклатура,
	|		ПартииОстатки.Склад КАК Склад,
	|		ПартииОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ПартииОстатки.СерияНоменклатуры КАК СерияНоменклатуры,
	|		ПартииОстатки.ДокументОприходования КАК ДокументОприходования,
	|		ПартииОстатки.Заказ КАК Заказ,
	|		ПартииОстатки.Качество КАК Качество,
	|		ПартииОстатки.КоличествоОстаток КАК Количество,
	|		ПартииОстатки.СтоимостьОстаток КАК Стоимость,
	|		ПартииОстатки.СчетУчета КАК СчетУчета,
	|		ПартииОстатки.Организация КАК Организация,
	|		ПартииОстатки.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
	|		ПартииОстатки.ВременнаяРазницаОстаток КАК ВременнаяРазница
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровНаСкладахНалоговыйУчет.Остатки(&ДатаНач, Номенклатура В (&МассивНоменклатуры)) КАК ПартииОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПартииПриход.Номенклатура,
	|		ПартииПриход.Склад,
	|		ПартииПриход.ХарактеристикаНоменклатуры,
	|		ПартииПриход.СерияНоменклатуры,
	|		ПартииПриход.ДокументОприходования,
	|		ПартииПриход.Заказ,
	|		ПартииПриход.Качество,
	|		ВЫБОР
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииПриход.Количество
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииПриход.Количество
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииПриход.Стоимость
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииПриход.Стоимость
	|		КОНЕЦ,
	|		ПартииПриход.СчетУчета,
	|		ПартииПриход.Организация,
	|		ВЫБОР
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииПриход.ПостояннаяРазница
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииПриход.ПостояннаяРазница
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииПриход.ВременнаяРазница
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииПриход.ВременнаяРазница
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровНаСкладахНалоговыйУчет КАК ПартииПриход
	|	ГДЕ
	|		ПартииПриход.Номенклатура В(&МассивНоменклатуры)
	|		И ПартииПриход.Период МЕЖДУ &ДатаНач И &ДатаКон
	|		И ПартииПриход.КодОперации В(&СписокКодов)
	|		И ПартииПриход.Активность = ИСТИНА) КАК ОстПлюсПрих
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстПлюсПрих.Номенклатура,
	|	ОстПлюсПрих.Склад,
	|	ОстПлюсПрих.ХарактеристикаНоменклатуры,
	|	ОстПлюсПрих.СерияНоменклатуры,
	|	ОстПлюсПрих.ДокументОприходования,
	|	ОстПлюсПрих.Заказ,
	|	ОстПлюсПрих.Качество,
	|	ОстПлюсПрих.СчетУчета,
	|	ОстПлюсПрих.Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОстПлюсПрих.Номенклатура,
	|	ОстПлюсПрих.ХарактеристикаНоменклатуры,
	|	NULL,
	|	ОстПлюсПрих.ДокументОприходования,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ОстПлюсПрих.ДоговорКонтрагента,
	|	ОстПлюсПрих.ДокументПередачи,
	|	ОстПлюсПрих.СчетУчета,
	|	ОстПлюсПрих.Организация,
	|	СУММА(ОстПлюсПрих.Количество),
	|	СУММА(ОстПлюсПрих.Стоимость),
	|	СУММА(ОстПлюсПрих.ПостояннаяРазница),
	|	СУММА(ОстПлюсПрих.ВременнаяРазница),
	|	NULL КАК Подразделение,
	|	NULL КАК ФизЛицо,
	|	NULL КАК НазначениеИспользования
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПартииПередОстатки.Номенклатура КАК Номенклатура,
	|		ПартииПередОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ПартииПередОстатки.ДокументОприходования КАК ДокументОприходования,
	|		ПартииПередОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|		ПартииПередОстатки.ДокументПередачи КАК ДокументПередачи,
	|		ПартииПередОстатки.КоличествоОстаток КАК Количество,
	|		ПартииПередОстатки.СтоимостьОстаток КАК Стоимость,
	|		ПартииПередОстатки.СчетУчета КАК СчетУчета,
	|		ПартииПередОстатки.Организация КАК Организация,
	|		ПартииПередОстатки.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
	|		ПартииПередОстатки.ВременнаяРазницаОстаток КАК ВременнаяРазница
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровПереданныеНалоговыйУчет.Остатки(&ДатаНач, Номенклатура В (&МассивНоменклатуры)) КАК ПартииПередОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПартииПередПриход.Номенклатура,
	|		ПартииПередПриход.ХарактеристикаНоменклатуры,
	|		ПартииПередПриход.ДокументОприходования,
	|		ПартииПередПриход.ДоговорКонтрагента,
	|		ПартииПередПриход.ДокументПередачи,
	|		ВЫБОР
	|			КОГДА ПартииПередПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииПередПриход.Количество
	|			КОГДА ПартииПередПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииПередПриход.Количество
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ПартииПередПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииПередПриход.Стоимость
	|			КОГДА ПартииПередПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииПередПриход.Стоимость
	|		КОНЕЦ,
	|		ПартииПередПриход.СчетУчета,
	|		ПартииПередПриход.Организация,
	|		ВЫБОР
	|			КОГДА ПартииПередПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииПередПриход.ПостояннаяРазница
	|			КОГДА ПартииПередПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииПередПриход.ПостояннаяРазница
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ПартииПередПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииПередПриход.ВременнаяРазница
	|			КОГДА ПартииПередПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииПередПриход.ВременнаяРазница
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровПереданныеНалоговыйУчет КАК ПартииПередПриход
	|	ГДЕ
	|		ПартииПередПриход.Номенклатура В(&МассивНоменклатуры)
	|		И ПартииПередПриход.Период МЕЖДУ &ДатаНач И &ДатаКон
	|		И ПартииПередПриход.КодОперации В(&СписокКодов)
	|		И ПартииПередПриход.Активность = ИСТИНА) КАК ОстПлюсПрих
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстПлюсПрих.Номенклатура,
	|	ОстПлюсПрих.ХарактеристикаНоменклатуры,
	|	ОстПлюсПрих.ДокументОприходования,
	|	ОстПлюсПрих.ДокументПередачи,
	|	ОстПлюсПрих.ДоговорКонтрагента,
	|	ОстПлюсПрих.СчетУчета,
	|	ОстПлюсПрих.Организация
//Партии материалов в эксплуатации	
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОстПлюсПрих.Номенклатура,
	|	ОстПлюсПрих.ХарактеристикаНоменклатуры,
	|	ОстПлюсПрих.СерияНоменклатуры,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL КАК ДоговорКонтрагента,
	|	ОстПлюсПрих.ДокументПередачи КАК ДокументПередачи,
	|	ОстПлюсПрих.СчетУчета,
	|	ОстПлюсПрих.Организация,
	|	СУММА(ОстПлюсПрих.Количество) КАК Количество,
	|	СУММА(ОстПлюсПрих.Стоимость) КАК Стоимость,
	|	СУММА(ОстПлюсПрих.ПостояннаяРазница) КАК ПостояннаяРазница,
	|	СУММА(ОстПлюсПрих.ВременнаяРазница) КАК ВременнаяРазница,
	|	ОстПлюсПрих.Подразделение КАК Подразделение,
	|	ОстПлюсПрих.ФизЛицо КАК ФизЛицо,
	|	ОстПлюсПрих.НазначениеИспользования КАК НазначениеИспользования
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПартииОстатки.Номенклатура КАК Номенклатура,
	|		ПартииОстатки.Подразделение КАК Подразделение,
	|		ПартииОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ПартииОстатки.СерияНоменклатуры КАК СерияНоменклатуры,
	|		ПартииОстатки.ДокументПередачи КАК ДокументПередачи,
	|		ПартииОстатки.ФизЛицо КАК ФизЛицо,
	|		ПартииОстатки.НазначениеИспользования КАК НазначениеИспользования,
	|		ПартииОстатки.КоличествоОстаток КАК Количество,
	|		ПартииОстатки.СтоимостьОстаток КАК Стоимость,
	|		ПартииОстатки.СчетУчета КАК СчетУчета,
	|		ПартииОстатки.Организация КАК Организация,
	|		ПартииОстатки.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
	|		ПартииОстатки.ВременнаяРазницаОстаток КАК ВременнаяРазница
	|	ИЗ
	|		РегистрНакопления.ПартииМатериаловВЭксплуатацииНалоговыйУчет.Остатки(&ДатаНач, Номенклатура В (&МассивНоменклатуры)) КАК ПартииОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПартииПриход.Номенклатура,
	|		ПартииПриход.Подразделение КАК Подразделение,	
	|		ПартииПриход.ХарактеристикаНоменклатуры,
	|		ПартииПриход.СерияНоменклатуры,
	|		ПартииПриход.ДокументПередачи,
	|		ПартииПриход.ФизЛицо,
	|		ПартииПриход.НазначениеИспользования,
	|		ВЫБОР
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииПриход.Количество
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииПриход.Количество
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииПриход.Стоимость
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииПриход.Стоимость
	|		КОНЕЦ,
	|		ПартииПриход.СчетУчета,
	|		ПартииПриход.Организация,
	|		ВЫБОР
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииПриход.ПостояннаяРазница
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииПриход.ПостояннаяРазница
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииПриход.ВременнаяРазница
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииПриход.ВременнаяРазница
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ПартииМатериаловВЭксплуатацииНалоговыйУчет КАК ПартииПриход
	|	ГДЕ
	|		ПартииПриход.Номенклатура В(&МассивНоменклатуры)
	|		И ПартииПриход.Период МЕЖДУ &ДатаНач И &ДатаКон
	|		И ПартииПриход.КодОперации В(&СписокКодов)
	|		И ПартииПриход.Активность = ИСТИНА) КАК ОстПлюсПрих
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстПлюсПрих.Номенклатура,
	|	ОстПлюсПрих.Подразделение,
	|	ОстПлюсПрих.ХарактеристикаНоменклатуры,
	|	ОстПлюсПрих.СерияНоменклатуры,
	|	ОстПлюсПрих.ДокументПередачи,
	|	ОстПлюсПрих.ФизЛицо,
	|	ОстПлюсПрих.НазначениеИспользования,
	|	ОстПлюсПрих.СчетУчета,
	|	ОстПлюсПрих.Организация";*/
			/*ЗапросНачОстПлюсПриход.Текст = Текст;*/
		}
		// ЗаполнитьЗапросНачОстПлюсПриходУпр()
		// Заполняет текст запроса, выбирающего остаток и поступление по упр учету
		//
		// Параметры:
		//	Нет.
		//

		public void ЗаполнитьЗапросНачОстПлюсПриходМеж(/*ЗапросНачОстПлюсПриход*/)
		{
			/*// Партии на складах
*/
			/*"ВЫБРАТЬ
	|	ОстПлюсПрих.Номенклатура,
	|	ОстПлюсПрих.ХарактеристикаНоменклатуры,
	|	ОстПлюсПрих.СерияНоменклатуры,
	|	ОстПлюсПрих.ДокументОприходования,
	|	ОстПлюсПрих.Склад,
	|	ОстПлюсПрих.Заказ,
	|	ОстПлюсПрих.Качество,
	|	NULL КАК ДоговорКонтрагента,
	|	NULL КАК ДокументПередачи,
	|	ОстПлюсПрих.СчетУчета,
	|	ОстПлюсПрих.Организация,
	|	СУММА(ОстПлюсПрих.Количество) КАК Количество,
	|	СУММА(ОстПлюсПрих.Стоимость) КАК Стоимость
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПартииОстатки.Номенклатура КАК Номенклатура,
	|		ПартииОстатки.Склад КАК Склад,
	|		ПартииОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ПартииОстатки.СерияНоменклатуры КАК СерияНоменклатуры,
	|		ПартииОстатки.ДокументОприходования КАК ДокументОприходования,
	|		ПартииОстатки.Заказ КАК Заказ,
	|		ПартииОстатки.Качество КАК Качество,
	|		ПартииОстатки.КоличествоОстаток КАК Количество,
	|		ПартииОстатки.СтоимостьОстаток КАК Стоимость,
	|		ПартииОстатки.СчетУчета КАК СчетУчета,
	|		ПартииОстатки.Организация КАК Организация
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровНаСкладахМеждународныйУчет.Остатки(&ДатаНач, Номенклатура В (&МассивНоменклатуры)) КАК ПартииОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПартииПриход.Номенклатура,
	|		ПартииПриход.Склад,
	|		ПартииПриход.ХарактеристикаНоменклатуры,
	|		ПартииПриход.СерияНоменклатуры,
	|		ПартииПриход.ДокументОприходования,
	|		ПартииПриход.Заказ,
	|		ПартииПриход.Качество,
	|		ВЫБОР
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииПриход.Количество
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииПриход.Количество
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииПриход.Стоимость
	|			КОГДА ПартииПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииПриход.Стоимость
	|		КОНЕЦ,
	|		ПартииПриход.СчетУчета,
	|		ПартииПриход.Организация
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровНаСкладахМеждународныйУчет КАК ПартииПриход
	|	ГДЕ
	|		ПартииПриход.Номенклатура В(&МассивНоменклатуры)
	|		И ПартииПриход.Период МЕЖДУ &ДатаНач И &ДатаКон
	|		И ПартииПриход.КодОперации В(&СписокКодов)
	|		И ПартииПриход.Активность = ИСТИНА) КАК ОстПлюсПрих
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстПлюсПрих.Номенклатура,
	|	ОстПлюсПрих.Склад,
	|	ОстПлюсПрих.ХарактеристикаНоменклатуры,
	|	ОстПлюсПрих.СерияНоменклатуры,
	|	ОстПлюсПрих.ДокументОприходования,
	|	ОстПлюсПрих.Заказ,
	|	ОстПлюсПрих.Качество,
	|	ОстПлюсПрих.СчетУчета,
	|	ОстПлюсПрих.Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОстПлюсПрих.Номенклатура,
	|	ОстПлюсПрих.ХарактеристикаНоменклатуры,
	|	NULL,
	|	ОстПлюсПрих.ДокументОприходования,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ОстПлюсПрих.ДоговорКонтрагента,
	|	ОстПлюсПрих.ДокументПередачи,
	|	ОстПлюсПрих.СчетУчета,
	|	ОстПлюсПрих.Организация,
	|	СУММА(ОстПлюсПрих.Количество),
	|	СУММА(ОстПлюсПрих.Стоимость)
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПартииПередОстатки.Номенклатура КАК Номенклатура,
	|		ПартииПередОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ПартииПередОстатки.ДокументОприходования КАК ДокументОприходования,
	|		ПартииПередОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|		ПартииПередОстатки.ДокументПередачи КАК ДокументПередачи,
	|		ПартииПередОстатки.КоличествоОстаток КАК Количество,
	|		ПартииПередОстатки.СтоимостьОстаток КАК Стоимость,
	|		ПартииПередОстатки.СчетУчета КАК СчетУчета,
	|		ПартииПередОстатки.Организация КАК Организация
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровПереданныеМеждународныйУчет.Остатки(&ДатаНач, Номенклатура В (&МассивНоменклатуры)) КАК ПартииПередОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПартииПередПриход.Номенклатура,
	|		ПартииПередПриход.ХарактеристикаНоменклатуры,
	|		ПартииПередПриход.ДокументОприходования,
	|		ПартииПередПриход.ДоговорКонтрагента,
	|		ПартииПередПриход.ДокументПередачи,
	|		ВЫБОР
	|			КОГДА ПартииПередПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииПередПриход.Количество
	|			КОГДА ПартииПередПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииПередПриход.Количество
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ПартииПередПриход.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ПартииПередПриход.Стоимость
	|			КОГДА ПартииПередПриход.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА -ПартииПередПриход.Стоимость
	|		КОНЕЦ,
	|		ПартииПередПриход.СчетУчета,
	|		ПартииПередПриход.Организация
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровПереданныеМеждународныйУчет КАК ПартииПередПриход
	|	ГДЕ
	|		ПартииПередПриход.Номенклатура В(&МассивНоменклатуры)
	|		И ПартииПередПриход.Период МЕЖДУ &ДатаНач И &ДатаКон
	|		И ПартииПередПриход.КодОперации В(&СписокКодов)
	|		И ПартииПередПриход.Активность = ИСТИНА) КАК ОстПлюсПрих
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстПлюсПрих.Номенклатура,
	|	ОстПлюсПрих.ХарактеристикаНоменклатуры,
	|	ОстПлюсПрих.ДокументОприходования,
	|	ОстПлюсПрих.ДокументПередачи,
	|	ОстПлюсПрих.ДоговорКонтрагента,
	|	ОстПлюсПрих.СчетУчета,
	|	ОстПлюсПрих.Организация";*/
			/*ЗапросНачОстПлюсПриход.Текст = Текст;*/
		}
		// ЗаполнитьЗапросНачОстПлюсПриходУпр()
		// Добавляет в базу данных записи по перемещению в другое состояние
		//
		// Параметры:
		//	Нет.
		//

		public void ДобавитьЗаписиПоПеремещению(/*ПараметрыСостоянияИсточника, ПараметрыСостоянияПриемника, СтСтоимость, СтруктураДопПараметров*/)
		{
			/*// Выполним движение по сторнированию перемещения
*/
			/*// Если корректировать нечего, движений не добавляем
*/
			/*ВыполнятьДвижения = Ложь;*/
			if(true/*НЕ ВыполнятьДвижения*/)
			{
			}
			/*// Из структуры доп параметров добудем дополнительные параметры
*/
			/*Учет            = СтруктураДопПараметров.Учет;*/
			/*// По параметрам источника и приемника определим вид партий
*/
			/*Договор = Неопределено;*/
			/*ПараметрыСостоянияИсточника.Свойство("ДоговорКонтрагента", Договор);*/
			/*Подразделение = Неопределено;*/
			/*ПараметрыСостоянияИсточника.Свойство("Подразделение", Подразделение);*/
			if(true/*ЗначениеЗаполнено(Договор)*/)
			{
				/*Источник =  "Переданные";*/
			}
			/*Договор = Неопределено;*/
			/*ПараметрыСостоянияПриемника.Свойство("ДоговорКонтрагента", Договор);*/
			/*Подразделение = Неопределено;*/
			/*ПараметрыСостоянияПриемника.Свойство("Подразделение", Подразделение);*/
			if(true/*ЗначениеЗаполнено(Договор)*/)
			{
				/*Приемник =  "Переданные";*/
			}
			if(true/*Источник =  "НаСкладах"*/)
			{
				/*ИмяРег="ПартииТоваровНаСкладах";*/
			}
			/*СтрокаДокумента= Новый Структура;*/
			/*// Эти параметры добавляются на всякий случай, т.к. они используются процедурой заполнения субконто по счету
*/
			/*СтрокаДокумента.Вставить("НоменклатураНовая", Неопределено);*/
			/*СтрокаДокумента.Вставить("ПодразделениеОрганизации", Неопределено);*/
			/*СтрокаДокумента.Вставить("СтатьяЗатрат", Неопределено);*/
			/*СтрокаДокумента.Вставить("НоменклатурнаяГруппа", Неопределено);*/
			/*СтрокаДокумента.Вставить("Склад", Неопределено);*/
			/*СтрокаДокумента.Вставить("СкладПолучатель", Неопределено);*/
			/*СтрокаДокумента.Вставить("ДоговорКонтрагента", Неопределено);*/
			/*СтрокаДокумента.Вставить("ИзменитьСерию", Ложь);*/
			/*СтрокаДокумента.Вставить("ИзменитьХарактеристику", Ложь);*/
			/*СтрокаДокумента.Вставить("ИзменитьСклад", Ложь);*/
			/*СтрокаДокумента.Вставить("ВидТабличнойЧасти");*/
			/*// Трансляция параметров состояния-источника в формат регистра СписанныеТовары
*/
			/*СтрокаДокумента.Вставить("Номенклатура", ПараметрыСостоянияИсточника.Номенклатура);*/
			/*СтруктураРеквизитов = Новый Структура("ВестиПартионныйУчетПоСериям");*/
			/*УправлениеЗапасамиПартионныйУчет.ПолучитьРеквизитыОбъекта(ПараметрыСостоянияИсточника.Номенклатура, СтруктураРеквизитов);*/
			/*СтрокаДокумента.Вставить("ВестиПартионныйУчетПоСериям", СтруктураРеквизитов.ВестиПартионныйУчетПоСериям);*/
			/*СтрокаДокумента.Вставить("ХарактеристикаНоменклатуры", ПараметрыСостоянияИсточника.ХарактеристикаНоменклатуры);*/
			if(true/*Источник =  "НаСкладах"*/)
			{
				/*СтрокаДокумента.Вставить("Склад", ПараметрыСостоянияИсточника.Склад);*/
				/*СтрокаДокумента.Вставить("СерияНоменклатуры", ПараметрыСостоянияИсточника.СерияНоменклатуры);*/
				/*СтрокаДокумента.Вставить("Качество", ПараметрыСостоянияИсточника.Качество);*/
				if(true/*Учет = "Упр"*/)
				{
					/*СтрокаДокумента.Вставить("СтатусПартии", ПараметрыСостоянияИсточника.СтатусПартии);*/
				}
			}
			/*СтрокаДокумента.Вставить("Заказ", ПараметрыСостоянияИсточника.Заказ);*/
			/*СтрокаДокумента.Вставить("ДокументОприходования", ПараметрыСостоянияИсточника.ДокументОприходования);*/
			/*СтрокаДокумента.Вставить("ДокументОприходованияНовый", ПараметрыСостоянияПриемника.ДокументОприходования);*/
			/*СтрокаДокумента.Вставить("Организация", ПараметрыСостоянияИсточника.Организация);*/
			if(true/*Учет = "Бух"*/)
			{
				/*СтрокаДокумента.Вставить("СчетУчетаБУ", ПараметрыСостоянияИсточника.СчетУчета);*/
				/*СтрокаДокумента.Вставить("КорСубконтоБУ1", Неопределено);*/
				/*СтрокаДокумента.Вставить("КорСубконтоБУ2", Неопределено);*/
				/*СтрокаДокумента.Вставить("КорСубконтоБУ3", Неопределено);*/
				/*СтрокаДокумента.Вставить("ПринятыеСчетУчетаБУ", Неопределено);*/
			}
			/*// Трансляция параметров состояния-приемника в формат регистра СписанныеТовары
*/
			/*СтрокаДокумента.Вставить("НоменклатураНовая", ПараметрыСостоянияПриемника.Номенклатура);*/
			/*СтрокаДокумента.Вставить("ХарактеристикаНоменклатурыНовая", ПараметрыСостоянияПриемника.ХарактеристикаНоменклатуры);*/
			/*СтрокаДокумента.Вставить("СерияНоменклатурыНовая", ПараметрыСостоянияПриемника.СерияНоменклатуры);*/
			/*СтрокаДокумента.Вставить("ЗаказСписания", ПараметрыСостоянияПриемника.Заказ);*/
			if(true/*Учет="Бух"*/)
			{
				/*СтрокаДокумента.Вставить("КорСчетБУ", ПараметрыСостоянияПриемника.СчетУчета);*/
				/*СтрокаДокумента.Вставить("ПринятыеКорСчетБУ", ПараметрыСостоянияПриемника.СчетУчета);*/
				/*СтрокаДокумента.Вставить("Организация", ПараметрыСостоянияПриемника.Организация);*/
			}
			if(true/*Приемник = "Переданные"*/)
			{
				/*СтрокаДокумента.Вставить("ДоговорКонтрагента", ПараметрыСостоянияПриемника.ДоговорКонтрагента);*/
				/*СтрокаДокумента.Вставить("ДокументПередачи", ПараметрыСостоянияПриемника.ДокументПередачи);*/
				if(true/*Учет = "Упр"*/)
				{
					/*СтрокаДокумента.Вставить("СтатусПартии", ПараметрыСостоянияПриемника.СтатусПартии);*/
					/*СтрокаДокумента.Вставить("СтатусПередачи", ПараметрыСостоянияПриемника.СтатусПередачи);*/
				}
			}
			/*СтрокаДокумента.Вставить("ОтражатьВУправленческомУчете", Истина);*/
			/*СтрокаДокумента.Вставить("КоличествоПоступление", 0);*/
			/*СтрокаДокумента.Вставить("ОтражатьВУправленческомУчете", Ложь);*/
			/*СтрокаДокумента.Вставить("ОтражатьВБухгалтерскомУчете", Ложь);*/
			/*СтрокаДокумента.Вставить("ОтражатьВНалоговомУчете", Ложь);*/
			/*СтрокаДокумента.Вставить("ОтражатьВМеждународномУчете", Ложь);*/
			if(true/*Учет = "Упр"*/)
			{
				/*СтрокаДокумента.Вставить("ОтражатьВУправленческомУчете", Истина);*/
			}
			/*Движение              = УправлениеЗапасамиПартионныйУчет.ДобавитьДвижениеВСтруктуруПараметров(ИмяРег+Учет, СтруктураДопПараметров);*/
			/*Движение.Период       = СтруктураДопПараметров.Период;*/
			/*Движение.ВидДвижения  = ВидДвиженияНакопления.Расход;*/
			/*Движение.Номенклатура = ПараметрыСостоянияИсточника.Номенклатура;*/
			/*Движение.ХарактеристикаНоменклатуры = ПараметрыСостоянияИсточника.ХарактеристикаНоменклатуры;*/
			if(true/*Источник =  "НаСкладах"*/)
			{
				/*Движение.Склад      = ПараметрыСостоянияИсточника.Склад;*/
				/*Движение.Заказ      = ПараметрыСостоянияИсточника.Заказ;*/
				/*Движение.СерияНоменклатуры = ПараметрыСостоянияИсточника.СерияНоменклатуры;*/
				/*Движение.Качество = ПараметрыСостоянияИсточника.Качество;*/
				if(true/*Учет = "Упр"*/)
				{
					/*Движение.СтатусПартии = ПараметрыСостоянияИсточника.СтатусПартии;*/
				}
				/*Движение.ДокументОприходования = ПараметрыСостоянияИсточника.ДокументОприходования;*/
				/*Движение.Организация = ПараметрыСостоянияИсточника.Организация;*/
			}
			if(true/*Учет = "Бух"*/)
			{
				/*Движение.СчетУчета = ПараметрыСостоянияИсточника.СчетУчета;*/
			}
			/*Движение.Количество   = 0;*/
			/*// Суммы из структуры
*/
			/*// Коды операций
*/
			/*СтрокаДокумента.Вставить("КодОперацииПартииТоваров", Перечисления.КодыОперацийПартииТоваров.ПеремещениеМеждуСкладами);*/
			/*// по умолчанию
*/
			if(true/*Источник = "НаСкладах" И Приемник = "Переданные"*/)
			{
				/*СтрокаДокумента.Вставить("КодОперацииПартииТоваров", Перечисления.КодыОперацийПартииТоваров.ПередачаНаКомиссию);*/
			}
			/*Движение.КодОперации = СтрокаДокумента.КодОперацииПартииТоваров;*/
			if(true/*НЕ Источник =  "ВЭксплуатации"*/)
			{
				/*СпособВеденияПартионногоУчетаПоОрганизации = УправлениеЗапасами.ПолучитьСпособВеденияПартионногоУчетаПоОрганизации(Движение.Организация, Движение.Период);*/
				/*СтруктураДопПараметров.Вставить("ОрганизацияУпр", УправлениеЗапасами.ПолучитьОрганизациюВСоответствииСоСпособомВеденияПартионногоУчетаПоОрганизациям(Движение.Организация,СпособВеденияПартионногоУчетаПоОрганизации));*/
				/*ВыполнитьКорДвижение(Источник, СтрокаДокумента, СтруктураДопПараметров, Движение);*/
			}
			if(true/*Приемник =  "ВЭксплуатации"*/)
			{
				/*//Вызов специальной процедуры производственного учета для формирования движений
*/
				/*НоваяСтрока = СтруктураДопПараметров.ТаблицаСписанныхПартийСпецодежды.Добавить();*/
				/*ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаДокумента);*/
				if(true/*Учет = "Упр"*/)
				{
					/*НоваяСтрока.ОтражатьВУправленческомУчете = Истина;*/
				}
				/*НоваяСтрока.Стоимость = СтСтоимость.Стоимость;*/
				if(true/*Учет = "Нал"*/)
				{
					/*НоваяСтрока.ПостояннаяРазница = СтСтоимость.ПостояннаяРазница;*/
					/*НоваяСтрока.ВременнаяРазница = СтСтоимость.ВременнаяРазница;*/
				}
				/*НоваяСтрока.Количество = 0;*/
				/*НоваяСтрока.КодОперацииПартииТоваров = Перечисления.КодыОперацийПартииТоваров.ПередачаМатериаловВЭксплуатацию;*/
			}
		}
		// ДобавитьЗаписиПоПеремещению()

		public void ВыполнитьКорДвижение(/*РегистрУчета, СтрокаДокумента, СтруктураПараметров, Движение*/)
		{
			/*СтруктураПараметров.Вставить("ФормироватьПроводкиПоСписаниюТМЦ",Истина);*/
			/*СтруктураПараметров.Вставить("СписыватьПартииНДС",Истина);*/
			/*НаправлениеСписания = УправлениеЗапасамиПартионныйУчет.ПолучитьНаправлениеСписанияПоКодуОперации(СтрокаДокумента.КодОперацииПартииТоваров, СтрокаДокумента.СтатьяЗатрат);*/
			/*УправлениеЗапасамиПартионныйУчет.ВыполнитьКорДвижениеУпр(РегистрУчета, НаправлениеСписания , СтрокаДокумента, СтруктураПараметров, Движение);*/
			if(true/*СтрокаДокумента.ОтражатьВБухгалтерскомУчете*/)
			{
				/*ИмяПланСчетов = "Хозрасчетный";*/
				/*СчетЗатрат = СтрокаДокумента.КорСчетБУ;*/
			}
			/*НаправлениеСписания = УправлениеЗапасамиПартионныйУчет.ПолучитьНаправлениеСписанияПоКодуОперации(СтрокаДокумента.КодОперацииПартииТоваров, СтрокаДокумента.СтатьяЗатрат, СчетЗатрат, ИмяПланСчетов);*/
			/*УправлениеЗапасамиПартионныйУчет.ВыполнитьКорДвижениеРегл(РегистрУчета, НаправлениеСписания, СтрокаДокумента, СтруктураПараметров, Движение);*/
			if(true/*СтрокаДокумента.ОтражатьВБухгалтерскомУчете ИЛИ СтрокаДокумента.ОтражатьВНалоговомУчете*/)
			{
				/*// Формирование проводок по бух учету
*/
				/*УправлениеЗапасамиПартионныйУчетФормированиеПроводокРегл.СписаниеНаСчет(РегистрУчета, СтрокаДокумента, СтруктураПараметров, Движение,,НаправлениеСписания);*/
			}
			/*НаправлениеСписания = УправлениеЗапасамиПартионныйУчет.ПолучитьНаправлениеСписанияПоКодуОперации(СтрокаДокумента.КодОперацииПартииТоваров, СтрокаДокумента.СтатьяЗатрат);*/
			/*УправлениеЗапасамиПартионныйУчет.ВыполнитьКорДвижениеМеж(РегистрУчета, НаправлениеСписания, СтрокаДокумента, СтруктураПараметров, Движение);*/
			if(true/*СтрокаДокумента.ОтражатьВМеждународномУчете*/)
			{
				/*// Формирование проводок по бух учету
*/
				/*УправлениеЗапасамиПартионныйУчетФормированиеПроводокМежд.СписаниеНаСчетМеж(РегистрУчета, СтрокаДокумента, СтруктураПараметров, Движение,НаправлениеСписания);*/
			}
			/*// Сюда можно добавить вызов процедур для выполнения движений по другим учетам
*/
		}
		// ВыполнитьКорДвижение()
		// Здесь формируются все записи по внешнему списанию из состояния ПараметрыСостоянияИсточника
		//
		// Параметры:
		//	Нет.
		//

		public void ДобавитьЗаписиПоВнешнемуСписанию(/*ПараметрыСостоянияИсточника, Количество, СтСтоимость, СтруктураДопПараметров*/)
		{
			/*// Если в состоянии ничего не осталось, ничего не делать
*/
			if(true/*Количество=0*/)
			{
			}
			/*// Из структуры доп параметров добудем дополнительные параметры
*/
			/*Учет            = СтруктураДопПараметров.Учет;*/
			/*// По параметрам источника и приемника определим вид партий
*/
			/*Договор = Неопределено;*/
			/*ПараметрыСостоянияИсточника.Свойство("ДоговорКонтрагента", Договор);*/
			/*Подразделение = Неопределено;*/
			/*ПараметрыСостоянияИсточника.Свойство("Подразделение", Подразделение);*/
			if(true/*ЗначениеЗаполнено(Договор)*/)
			{
				/*Источник =  "Переданные";*/
				/*ИмяРег = "ПартииТоваровПереданные";*/
			}
			/*Ст= Новый Структура;*/
			/*// Трансляция параметров состояния-источника в формат регистра СписанныеТовары
*/
			/*Ст.Вставить("Номенклатура", ПараметрыСостоянияИсточника.Номенклатура);*/
			/*Ст.Вставить("ХарактеристикаНоменклатуры", ПараметрыСостоянияИсточника.ХарактеристикаНоменклатуры);*/
			if(true/*Источник =  "НаСкладах"*/)
			{
				/*Ст.Вставить("Склад", ПараметрыСостоянияИсточника.Склад);*/
				/*Ст.Вставить("СерияНоменклатуры", ПараметрыСостоянияИсточника.СерияНоменклатуры);*/
				/*Ст.Вставить("Качество", ПараметрыСостоянияИсточника.Качество);*/
				if(true/*Учет = "Упр"*/)
				{
					/*Ст.Вставить("СтатусПартии", ПараметрыСостоянияИсточника.СтатусПартии);*/
				}
			}
			/*Ст.Вставить("ДокументОприходования", ПараметрыСостоянияИсточника.ДокументОприходования);*/
			/*Ст.Вставить("Заказ", ПараметрыСостоянияИсточника.Заказ);*/
			/*Ст.Вставить("Организация", ПараметрыСостоянияИсточника.Организация);*/
			if(true/*Учет = "Бух"*/)
			{
				/*Ст.Вставить("СчетУчетаБУ", ПараметрыСостоянияИсточника.СчетУчета);*/
			}
			/*// Найдем уже выполненные движения по списанию из этого состояния
*/
			/*ВыпДвижения = СтруктураДопПараметров.ТаблицаВыполненныхДвижений.НайтиСтроки(Ст);*/
		}
		// ДобавитьЗаписиПоВнешнемуСписанию()
		// Процедура вызова корректировки списания
		//

		public void СкорректироватьСписание(/*ДатаНач, ДатаКон, ТаблицаТоваров, РегламентныйДокумент, СтруктураПараметров*/)
		{
			/*ДопПараметры = Новый Структура;*/
			/*// Перенесем ключи и значения из исходной структуры
*/
			/*// Приведение к нужному виду
*/
			/*ДопПараметры.Свойство("НеСписыватьНаПостоянныеЗатраты", НеСписыватьНаПостоянныеЗатраты);*/
			if(true/*НеСписыватьНаПостоянныеЗатраты = Истина*/)
			{
				/*ДопПараметры.Вставить("НеСписыватьНаПостоянныеЗатраты", Истина);*/
			}
			/*КодыОпераций = Перечисления.КодыОперацийПартииТоваров;*/
			/*// Сформируем запрос для получения фактических движений 
*/
			/*Запрос = Новый Запрос;*/
			/*Запрос.УстановитьПараметр("ДатаНач", ДатаНач);*/
			/*Запрос.УстановитьПараметр("ДатаКон", ДатаКон);*/
			/*Запрос.УстановитьПараметр("ВидДвиженияРасход", ВидДвиженияНакопления.Расход);*/
			/*МассивНоменклатуры = ТаблицаТоваров.ВыгрузитьКолонку("Номенклатура");*/
			/*МассивДокументовОприходования = ТаблицаТоваров.ВыгрузитьКолонку("ДокументОприходования");*/
			/*МассивНоменклатуры = ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(МассивНоменклатуры);*/
			/*Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);*/
			/*Запрос.УстановитьПараметр("МассивДокументовОприходования", МассивДокументовОприходования);*/
			/*// Формирование запроса по списанию
*/
			/*// Коды операции, применяются во всех учетах
*/
			/*МассивСписаниеВНЗП = Новый Массив;*/
			/*МассивСписаниеВНЗП.Добавить(КодыОпераций.СписаниеПартийВПроизводствоОперативно);*/
			/*Запрос.УстановитьПараметр("КодыСписаниеВНЗП", МассивСписаниеВНЗП);*/
			/*Запрос.УстановитьПараметр("СписаниеПартийПереданныхВПроизводство", КодыОпераций.СписаниеПартийПереданныхВПроизводство);*/
			/*МассивСписаниеНаСебестоимость = Новый Массив;*/
			/*МассивСписаниеНаСебестоимость.Добавить(КодыОпераций.Реализация);*/
			/*МассивСписаниеНаСебестоимость.Добавить(КодыОпераций.РеализацияКомиссия);*/
			/*МассивСписаниеНаСебестоимость.Добавить(КодыОпераций.РеализацияРозница);*/
			/*Запрос.УстановитьПараметр("КодыСписаниеНаСебестоимость", МассивСписаниеНаСебестоимость);*/
			/*Запрос.УстановитьПараметр("КодыСписаниеНаЗатраты", КодыОпераций.СписаниеНаЗатраты);*/
			/*Запрос.УстановитьПараметр("КодыСписаниеНаБрак", КодыОпераций.СписаниеНаБрак);*/
			/*МассивЗатратыОС = Новый Массив;*/
			/*МассивЗатратыОС.Добавить(КодыОпераций.СписаниеНаСтроительствоОбъектовОС);*/
			/*МассивЗатратыОС.Добавить(КодыОпераций.СписаниеНаВложенияВоВнеоборотныеАктивы);*/
			/*Запрос.УстановитьПараметр("КодыСтроительствоОбъектовОС", МассивЗатратыОС);*/
			/*Запрос.УстановитьПараметр("КодКомплектация", КодыОпераций.Комплектация);*/
			/*// Все коды внешних списаний
*/
			/*МассивВнешСписание = Новый Массив;*/
			if(true/*СтруктураПараметров.Свойство("КорректироватьСтоимостьВозвратовТекущегоМесяца")*/)
			{
				/*// Возврат текущего месяца корректируется как реализация
*/
				/*МассивВнешСписание.Добавить(КодыОпераций.ВозвратОтПокупателяТекущийМесяц);*/
			}
			/*Запрос.УстановитьПараметр("КодыСписание", МассивВнешСписание);*/
			/*Запрос.УстановитьПараметр("КодПередачаМатериалов", КодыОпераций.ПередачаМатериаловВЭксплуатацию);*/
			/*ДопПараметры.Вставить("УчетнаяПолитика", 
			УправлениеЗапасамиПартионныйУчет.ПолучитьУчетнуюПолитику(ДатаКон, 
					ДопПараметры.ОтражатьВУправленческомУчете, 
					ДопПараметры.ОтражатьВБухгалтерскомУчете,
					ДопПараметры.ОтражатьВНалоговомУчете,
					ДопПараметры.ОтражатьВМеждународномУчете,
					СтруктураПараметров.Организация));*/
			if(true/*ДопПараметры.УчетнаяПолитика = Неопределено*/)
			{
			}
			/*СкорректироватьСписаниеУпр(Запрос, МассивНоменклатуры, ДатаНач, ДатаКон, ТаблицаТоваров, РегламентныйДокумент, ДопПараметры);*/
			/*СкорректироватьСписаниеРегл(Запрос, МассивНоменклатуры, ДатаНач, ДатаКон, ТаблицаТоваров, РегламентныйДокумент, ДопПараметры);*/
			/*СкорректироватьСписаниеМеж(Запрос, МассивНоменклатуры, ДатаНач, ДатаКон, ТаблицаТоваров, РегламентныйДокумент, ДопПараметры);*/
			/*// Возврат выполненных движений для расчета себестоимости
*/
			if(true/*ТипЗнч(СтруктураПараметров) = Тип("Структура")*/)
			{
				if(true/*СтруктураПараметров.Свойство("ВернутьДвижения")*/)
				{
				}
			}
		}
		//СкорректироватьСписание()
		// Приведение таблицы корректировки списания к требуемому виду
		//

		public void ПодготовитьТаблицуКорректировкиСписания(/*ТаблицаРезультатаЗапроса*/)
		{
			/*ДобавляемыеПоля = "ОтражатьВУправленческомУчете,ОтражатьВБухгалтерскомУчете,ОтражатьВНалоговомУчете,
					  |ОтражатьВМеждународномУчете,НоменклатураНовая,КоличествоПоступление,СкладПолучатель,
					  |ИзменитьХарактеристику,ИзменитьСерию,ИзменитьСклад,КачествоНовое,СтатусПартииНовый,
					  |ВедениеУчетаПоПроектам, ЗаказПартии";*/
			/*СтруктураДобавляемыхПолей = Новый Структура(ДобавляемыеПоля,"Булево","Булево","Булево","Булево",,"Число",,"Булево","Булево","Булево",,,"Булево");*/
		}
		// ПодготовитьТаблицуКорректировкиСписания()
		// Корректировка списания по упр учету
		//
		// Параметры:
		//	Нет.
		//

		public void СкорректироватьСписаниеУпр(/*Запрос, МассивНоменклатуры, ДатаНач, ДатаКон, ТаблицаТоваров, РегламентныйДокумент, ДопПараметры*/)
		{
			if(true/*ДопПараметры.ОтражатьВУправленческомУчете*/)
			{
				/*ЗаполнитьЗапросПоСписаниюУпр(Запрос, МассивНоменклатуры, ДопПараметры);*/
				/*// Таблица по списанию
*/
				/*ТаблицаРезультатаЗапроса = Запрос.Выполнить().Выгрузить();*/
				if(true/*ТаблицаРезультатаЗапроса.Количество()=0*/)
				{
					/*// Пустая строка для создния требуемых наборов записей, когда есть перемещения без списания
*/
					/*ТаблицаРезультатаЗапроса.Добавить();*/
				}
				/*ПодготовитьТаблицуКорректировкиСписания(ТаблицаРезультатаЗапроса);*/
				/*ТаблицаРезультатаЗапроса.ЗаполнитьЗначения(Истина, "ОтражатьВУправленческомУчете");*/
				/*// Структура общих параметров
*/
				/*СтруктураПараметров = ДопПараметры;*/
				/*// Признак учета, используемый в общих процедурах
*/
				/*СтруктураПараметров.Вставить("Учет", "Упр");*/
				/*СтруктураПараметров.Вставить("ИмяРегистраСклад",      "ПартииТоваровНаСкладах");*/
				/*СтруктураПараметров.Вставить("ИмяРегистраПереданные", "ПартииТоваровПереданные");*/
				/*СтруктураПараметров.Вставить("ИмяРегистраВЭксплуатации", "ПартииМатериаловВЭксплуатации");*/
				/*СтруктураПараметров.Вставить("ТаблицаВыполненныхДвижений", ТаблицаРезультатаЗапроса);*/
				/*СтруктураПараметров.Вставить("ТаблицаТоваров", ТаблицаТоваров);*/
				/*СтруктураПараметров.Вставить("РегламентныйДокумент", РегламентныйДокумент);*/
				/*// Движения - наборы записей по регистрам
*/
				/*УправлениеЗапасамиПартионныйУчет.СоздатьНаборыЗаписей(СтруктураПараметров, ТаблицаРезультатаЗапроса, РегламентныйДокумент);*/
				if(true/*НЕ ДопПараметры.Свойство("Период", ПериодЗаписей)*/)
				{
					if(true/*РегламентныйДокумент.Метаданные().Реквизиты.Найти("ПериодРегистрации") <> Неопределено*/)
					{
						/*ПериодЗаписей = КонецМесяца(РегламентныйДокумент.ПериодРегистрации);*/
					}
				}
				/*УправлениеЗапасамиПартионныйУчет.ПодготовитьНаборыЗаписей(СтруктураПараметров, ТаблицаРезультатаЗапроса, ПериодЗаписей, РегламентныйДокумент, Ложь);*/
				/*// Вызов процедуры расчета по средней
*/
				/*РассчитатьСписаниеПоСредней(ТаблицаТоваров, ДатаНач, ДатаКон, СтруктураПараметров);*/
				/*УправлениеЗапасамиПартионныйУчет.ЗаписатьДвиженияДокумента(СтруктураПараметров, ТаблицаРезультатаЗапроса, Ложь);*/
			}
		}
		// СкорректироватьСписаниеУпр()
		// Корректировка списания по бух и нал учету
		//
		// Параметры:
		//	Нет.
		//

		public void СкорректироватьСписаниеРегл(/*Запрос, МассивНоменклатуры, ДатаНач, ДатаКон, ТаблицаТоваров, РегламентныйДокумент, ДопПараметры*/)
		{
			/*// Бух
*/
			if(true/*ДопПараметры.ОтражатьВБухгалтерскомУчете*/)
			{
				/*ЗаполнитьЗапросПоСписаниюБух(Запрос, МассивНоменклатуры, ДопПараметры);*/
				/*// Таблица по списанию
*/
				/*ТаблицаРезультатаЗапроса = Запрос.Выполнить().Выгрузить();*/
				if(true/*ТаблицаРезультатаЗапроса.Количество()=0*/)
				{
					/*// Пустая строка для создния требуемых наборов записей, когда есть перемещения без списания
*/
					/*ТаблицаРезультатаЗапроса.Добавить();*/
				}
				/*ПодготовитьТаблицуКорректировкиСписания(ТаблицаРезультатаЗапроса);*/
				/*ТаблицаРезультатаЗапроса.ЗаполнитьЗначения(Истина, "ОтражатьВБухгалтерскомУчете");*/
				/*ТаблицаРезультатаЗапроса.Колонки.Добавить("ПринятыеКорСчетБУ");*/
				/*// колонка используется только для приведения к стандартному виду
*/
				/*ТаблицаРезультатаЗапроса.Колонки.Добавить("ПринятыеСчетУчетаБУ");*/
				/*// колонка используется только для приведения к стандартному виду
*/
				/*// Структура общих параметров
*/
				/*СтруктураПараметров = ДопПараметры;*/
				/*// Признак учета, используемый в общих процедурах
*/
				/*СтруктураПараметров.Вставить("Учет", "Бух");*/
				/*СтруктураПараметров.Вставить("ИмяРегистраСклад",      "ПартииТоваровНаСкладахБухгалтерскийУчет");*/
				/*СтруктураПараметров.Вставить("ИмяРегистраПереданные", "ПартииТоваровПереданныеБухгалтерскийУчет");*/
				/*СтруктураПараметров.Вставить("ИмяРегистраВЭксплуатации", "ПартииМатериаловВЭксплуатацииБухгалтерскийУчет");*/
				/*СтруктураПараметров.Вставить("ТаблицаВыполненныхДвижений", ТаблицаРезультатаЗапроса);*/
				/*СтруктураПараметров.Вставить("ТаблицаТоваров", ТаблицаТоваров);*/
				/*СтруктураПараметров.Вставить("РегламентныйДокумент", РегламентныйДокумент);*/
				/*// Движения - наборы записей по регистрам
*/
				/*УправлениеЗапасамиПартионныйУчет.СоздатьНаборыЗаписей(СтруктураПараметров, ТаблицаРезультатаЗапроса, РегламентныйДокумент);*/
				if(true/*НЕ ДопПараметры.Свойство("Период", ПериодЗаписей)*/)
				{
					if(true/*РегламентныйДокумент.Метаданные().Реквизиты.Найти("ПериодРегистрации") <> Неопределено*/)
					{
						/*ПериодЗаписей = КонецМесяца(РегламентныйДокумент.ПериодРегистрации);*/
					}
				}
				/*УправлениеЗапасамиПартионныйУчет.ПодготовитьНаборыЗаписей(СтруктураПараметров, ТаблицаРезультатаЗапроса, ПериодЗаписей, РегламентныйДокумент, Ложь);*/
				/*// Вызов процедуры расчета по средней
*/
				/*РассчитатьСписаниеПоСредней(ТаблицаТоваров, ДатаНач, ДатаКон, СтруктураПараметров);*/
				/*УправлениеЗапасамиПартионныйУчет.ЗаписатьДвиженияДокумента(СтруктураПараметров, ТаблицаРезультатаЗапроса, Ложь);*/
			}
			/*// Нал
*/
			if(true/*ДопПараметры.ОтражатьВНалоговомУчете*/)
			{
				/*ЗаполнитьЗапросПоСписаниюНал(Запрос, МассивНоменклатуры, ДопПараметры);*/
				/*// Таблица по списанию
*/
				/*ТаблицаРезультатаЗапроса = Запрос.Выполнить().Выгрузить();*/
				if(true/*ТаблицаРезультатаЗапроса.Количество()=0*/)
				{
					/*// Пустая строка для создния требуемых наборов записей, когда есть перемещения без списания
*/
					/*ТаблицаРезультатаЗапроса.Добавить();*/
				}
				/*ПодготовитьТаблицуКорректировкиСписания(ТаблицаРезультатаЗапроса);*/
				/*ТаблицаРезультатаЗапроса.ЗаполнитьЗначения(Истина, "ОтражатьВНалоговомУчете");*/
				/*ТаблицаРезультатаЗапроса.Колонки.Добавить("ПринятыеСчетУчетаНУ");*/
				/*// колонка используется только для приведения к стандартному виду
*/
				/*// Структура общих параметров
*/
				/*СтруктураПараметров = ДопПараметры;*/
				/*// Признак учета, используемый в общих процедурах
*/
				/*СтруктураПараметров.Вставить("Учет", "Нал");*/
				/*СтруктураПараметров.Вставить("ИмяРегистраСклад",      "ПартииТоваровНаСкладахНалоговыйУчет");*/
				/*СтруктураПараметров.Вставить("ИмяРегистраПереданные", "ПартииТоваровПереданныеНалоговыйУчет");*/
				/*СтруктураПараметров.Вставить("ИмяРегистраВЭксплуатации", "ПартииМатериаловВЭксплуатацииНалоговыйУчет");*/
				/*СтруктураПараметров.Вставить("УчетнаяПолитика", 
				УправлениеЗапасамиПартионныйУчет.ПолучитьУчетнуюПолитику(ДатаКон, 
						СтруктураПараметров.ОтражатьВУправленческомУчете, 
						СтруктураПараметров.ОтражатьВБухгалтерскомУчете,
						СтруктураПараметров.ОтражатьВНалоговомУчете,
						СтруктураПараметров.ОтражатьВМеждународномУчете,
						СтруктураПараметров.Организация));*/
				if(true/*СтруктураПараметров.УчетнаяПолитика = Неопределено*/)
				{
				}
				/*СтруктураПараметров.Вставить("ТаблицаВыполненныхДвижений", ТаблицаРезультатаЗапроса);*/
				/*СтруктураПараметров.Вставить("ТаблицаТоваров", ТаблицаТоваров);*/
				/*СтруктураПараметров.Вставить("РегламентныйДокумент", РегламентныйДокумент);*/
				/*МассивСумм = Новый Массив;*/
				/*МассивСумм.Добавить("Стоимость");*/
				/*МассивСумм.Добавить("ПостояннаяРазница");*/
				/*МассивСумм.Добавить("ВременнаяРазница");*/
				/*СтруктураПараметров.Вставить("МассивСумм", МассивСумм);*/
				/*// Движения - наборы записей по регистрам
*/
				/*УправлениеЗапасамиПартионныйУчет.СоздатьНаборыЗаписей(СтруктураПараметров, ТаблицаРезультатаЗапроса, РегламентныйДокумент);*/
				if(true/*НЕ ДопПараметры.Свойство("Период", ПериодЗаписей)*/)
				{
					if(true/*РегламентныйДокумент.Метаданные().Реквизиты.Найти("ПериодРегистрации") <> Неопределено*/)
					{
						/*ПериодЗаписей = КонецМесяца(РегламентныйДокумент.ПериодРегистрации);*/
					}
				}
				/*УправлениеЗапасамиПартионныйУчет.ПодготовитьНаборыЗаписей(СтруктураПараметров, ТаблицаРезультатаЗапроса, ПериодЗаписей, РегламентныйДокумент, Ложь);*/
				/*// Вызов процедуры расчета по средней
*/
				/*РассчитатьСписаниеПоСредней(ТаблицаТоваров, ДатаНач, ДатаКон, СтруктураПараметров);*/
				/*УправлениеЗапасамиПартионныйУчет.ЗаписатьДвиженияДокумента(СтруктураПараметров, ТаблицаРезультатаЗапроса, Ложь);*/
			}
		}
		// СкорректироватьСписаниеРегл()
		// Корректировка списания по меж учету
		//
		// Параметры:
		//	Нет.
		//

		public void СкорректироватьСписаниеМеж(/*Запрос, МассивНоменклатуры, ДатаНач, ДатаКон, ТаблицаТоваров, РегламентныйДокумент, ДопПараметры*/)
		{
			if(true/*ДопПараметры.ОтражатьВМеждународномУчете*/)
			{
				/*ЗаполнитьЗапросПоСписаниюМеж(Запрос, МассивНоменклатуры, ДопПараметры);*/
				/*// Таблица по списанию
*/
				/*ТаблицаРезультатаЗапроса = Запрос.Выполнить().Выгрузить();*/
				if(true/*ТаблицаРезультатаЗапроса.Количество()=0*/)
				{
					/*// Пустая строка для создния требуемых наборов записей, когда есть перемещения без списания
*/
					/*ТаблицаРезультатаЗапроса.Добавить();*/
				}
				/*ПодготовитьТаблицуКорректировкиСписания(ТаблицаРезультатаЗапроса);*/
				/*ТаблицаРезультатаЗапроса.ЗаполнитьЗначения(Истина, "ОтражатьВМеждународномУчете");*/
				/*// Структура общих параметров
*/
				/*СтруктураПараметров = ДопПараметры;*/
				/*// Признак учета, используемый в общих процедурах
*/
				/*СтруктураПараметров.Вставить("Учет", "Меж");*/
				/*СтруктураПараметров.Вставить("ИмяРегистраСклад",      "ПартииТоваровНаСкладахМеждународныйУчет");*/
				/*СтруктураПараметров.Вставить("ИмяРегистраПереданные", "ПартииТоваровПереданныеМеждународныйУчет");*/
				/*СтруктураПараметров.Вставить("ТаблицаВыполненныхДвижений", ТаблицаРезультатаЗапроса);*/
				/*СтруктураПараметров.Вставить("РегламентныйДокумент", РегламентныйДокумент);*/
				/*СтруктураПараметров.Вставить("ТаблицаТоваров", ТаблицаТоваров);*/
				/*// Движения - наборы записей по регистрам
*/
				/*УправлениеЗапасамиПартионныйУчет.СоздатьНаборыЗаписей(СтруктураПараметров, ТаблицаРезультатаЗапроса, РегламентныйДокумент);*/
				if(true/*НЕ ДопПараметры.Свойство("Период", ПериодЗаписей)*/)
				{
					if(true/*РегламентныйДокумент.Метаданные().Реквизиты.Найти("ПериодРегистрации") <> Неопределено*/)
					{
						/*ПериодЗаписей = КонецМесяца(РегламентныйДокумент.ПериодРегистрации);*/
					}
				}
				/*УправлениеЗапасамиПартионныйУчет.ПодготовитьНаборыЗаписей(СтруктураПараметров, ТаблицаРезультатаЗапроса, ПериодЗаписей, РегламентныйДокумент, Ложь);*/
				/*// Вызов процедуры расчета по средней
*/
				/*РассчитатьСписаниеПоСредней(ТаблицаТоваров, ДатаНач, ДатаКон, СтруктураПараметров);*/
				/*УправлениеЗапасамиПартионныйУчет.ЗаписатьДвиженияДокумента(СтруктураПараметров, ТаблицаРезультатаЗапроса, Ложь);*/
			}
		}
		// СкорректироватьСписаниеМеж()
		// Запрос по списанию: Упр учет
		//
		// Параметры:
		//	Нет.
		//

		public void ЗаполнитьЗапросПоСписаниюУпр(/*Запрос, МассивНоменклатуры, ДопПараметры*/)
		{
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	""НаСкладах"" КАК СписаноИз,
	|	Источник.Организация КАК Организация,
	|	Источник.Номенклатура,
	|	Источник.Склад,
	|	Источник.ХарактеристикаНоменклатуры,
	|	Источник.СерияНоменклатуры,
	|	Источник.ДокументОприходования,
	|	Источник.СтатусПартии,
	|	Источник.Заказ,
	|	СУММА(Источник.Количество) КАК Количество,
	|	СУММА(Источник.Стоимость) КАК Стоимость,
	|	0 КАК СтоимостьПоступление,
	|	NULL КАК СтатусПередачи,
	//|	NULL КАК ДокументПередачи,
	|	МатериалыВЭксплуатации.ДокументПередачи КАК ДокументПередачи,
	|	NULL КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА (НЕ Себестоимость.ЗаказПокупателя ЕСТЬ NULL )
	|			ТОГДА Себестоимость.ЗаказПокупателя
	|		КОГДА (НЕ НЗП.Заказ ЕСТЬ NULL )
	|			ТОГДА НЗП.Заказ
	|		КОГДА (НЕ Затраты.Заказ ЕСТЬ NULL )
	|			ТОГДА Затраты.Заказ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ЗаказСписания,
	|	Источник.КодОперации КАК КодОперацииПартииТоваров,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвижения
	|		ИНАЧЕ Источник.Регистратор
	|	КОНЕЦ КАК Регистратор,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвиженияПериод
	|		ИНАЧЕ Источник.Период
	|	КОНЕЦ КАК Период,
	|	Источник.Качество,
	|	ВЫБОР
	|		КОГДА (НЕ Затраты.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА Затраты.СтатьяЗатрат
	|		КОГДА (НЕ НЗП.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА НЗП.СтатьяЗатрат
	|		КОГДА (НЕ БракВПроизводстве.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.СтатьяЗатрат
	|		КОГДА (НЕ ЗатратыНаСтроительствоОС.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА ЗатратыНаСтроительствоОС.СтатьяЗатрат
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтатьяЗатрат,
	|	ВЫБОР
	|		КОГДА (НЕ Себестоимость.Подразделение ЕСТЬ NULL )
	|			ТОГДА Себестоимость.Подразделение
	|		КОГДА (НЕ Затраты.Подразделение ЕСТЬ NULL )
	|			ТОГДА Затраты.Подразделение
	|		КОГДА (НЕ НЗП.Подразделение ЕСТЬ NULL )
	|			ТОГДА НЗП.Подразделение
	|		КОГДА (НЕ БракВПроизводстве.Подразделение ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.Подразделение
	|		КОГДА (НЕ МатериалыВЭксплуатации.Подразделение ЕСТЬ NULL )
	|			ТОГДА МатериалыВЭксплуатации.Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Подразделение,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА НЗП.НоменклатурнаяГруппа
	|		КОГДА (НЕ Затраты.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА Затраты.НоменклатурнаяГруппа
	|		КОГДА (НЕ БракВПроизводстве.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.НоменклатурнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НоменклатурнаяГруппа,
	|	БракВПроизводстве.Продукция,
	|	ЗатратыНаСтроительствоОС.ОбъектСтроительства,
	|	ВЫБОР
	|		КОГДА (НЕ БракВПроизводстве.ХарактеристикаПродукции ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.ХарактеристикаПродукции
	|		КОГДА (НЕ ИсточникДляКомплектации.ХарактеристикаНоменклатуры ЕСТЬ NULL )
	|			ТОГДА ИсточникДляКомплектации.ХарактеристикаНоменклатуры
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ХарактеристикаНоменклатурыНовая,
	|	ВЫБОР
	|		КОГДА (НЕ БракВПроизводстве.СерияПродукции ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.СерияПродукции
	|		КОГДА (НЕ ИсточникДляКомплектации.СерияНоменклатуры ЕСТЬ NULL )
	|			ТОГДА ИсточникДляКомплектации.СерияНоменклатуры
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СерияНоменклатурыНовая,
	|	ВЫБОР
	|		КОГДА (НЕ ИсточникДляКомплектации.Номенклатура ЕСТЬ NULL )
	|			ТОГДА ИсточникДляКомплектации.Номенклатура
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НоменклатураНовая,
	|	ВЫБОР
	|		КОГДА (НЕ ИсточникДляКомплектации.ДокументОприходования ЕСТЬ NULL )
	|			ТОГДА ИсточникДляКомплектации.ДокументОприходования
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументОприходованияНовый,
	|	ИсточникДляКомплектации.СтатусПартии КАК СтатусПартииНовый,
	|	Источник.Номенклатура.ВестиПартионныйУчетПоСериям КАК ВестиПартионныйУчетПоСериям,
	|	ВЫБОР
	|		КОГДА (НЕ Затраты.Проект ЕСТЬ NULL )
	|			ТОГДА Затраты.Проект
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Проект,
	|	ВЫБОР
	|		КОГДА Себестоимость.Номенклатура <> Источник.Номенклатура
	|			ТОГДА Себестоимость.Номенклатура
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НоменклатураКомплекта,
	|	ВЫБОР
	|		КОГДА Себестоимость.ХарактеристикаНоменклатуры <> Источник.ХарактеристикаНоменклатуры
	|			ТОГДА Себестоимость.ХарактеристикаНоменклатуры
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ХарактеристикаКомплекта,	
	|	СУММА(ВЫБОР
	|		КОГДА Себестоимость.Номенклатура <> Источник.Номенклатура
	|			ТОГДА Себестоимость.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК КоличествоКомплекта,	
	|	ЕСТЬNULL(МатериалыВЭксплуатации.ФизЛицо, НЕОПРЕДЕЛЕНО) КАК ФизЛицо,
	|	ЕСТЬNULL(МатериалыВЭксплуатации.НазначениеИспользования, НЕОПРЕДЕЛЕНО) КАК НазначениеИспользования,
	|	ЕСТЬNULL(НЗП.СерияЗатраты, НЕОПРЕДЕЛЕНО) КАК СерияНоменклтатурыНЗП,
	|	Источник.НомерСтрокиСписанныхТоваров КАК НомерСтрокиСписанныхТоваров
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладах КАК Источник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Затраты КАК Затраты
	|		ПО Источник.Регистратор = Затраты.Регистратор
	|			И Источник.НомерКорСтроки = Затраты.НомерСтроки
	|			И (Источник.КодОперации В (&КодыСписаниеНаЗатраты))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПродажиСебестоимость КАК Себестоимость
	|		ПО Источник.Регистратор = Себестоимость.Регистратор
	|			И Источник.НомерКорСтроки = Себестоимость.НомерСтроки
	|			И (Источник.КодОперации В (&КодыСписаниеНаСебестоимость))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НезавершенноеПроизводство КАК НЗП
	|		ПО Источник.Регистратор = НЗП.Регистратор
	|			И Источник.НомерКорСтроки = НЗП.НомерСтроки
	|			И (Источник.КодОперации В (&КодыСписаниеВНЗП))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.БракВПроизводстве КАК БракВПроизводстве
	|		ПО Источник.Регистратор = БракВПроизводстве.Регистратор
	|			И Источник.НомерКорСтроки = БракВПроизводстве.НомерСтроки
	|			И (Источник.КодОперации В (&КодыСписаниеНаБрак))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗатратыНаСтроительствоОбъектовОсновныхСредств КАК ЗатратыНаСтроительствоОС
	|		ПО Источник.Регистратор = ЗатратыНаСтроительствоОС.Регистратор
	|			И Источник.НомерКорСтроки = ЗатратыНаСтроительствоОС.НомерСтроки
	|			И (Источник.КодОперации В (&КодыСтроительствоОбъектовОС))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровНаСкладах КАК ИсточникДляКомплектации
	|		ПО Источник.Регистратор = ИсточникДляКомплектации.Регистратор
	|			И Источник.НомерКорСтроки = ИсточникДляКомплектации.НомерСтроки
	|			И (Источник.КодОперации В (&КодКомплектация))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииМатериаловВЭксплуатации КАК МатериалыВЭксплуатации
	|		ПО Источник.Регистратор = МатериалыВЭксплуатации.Регистратор
	|			И (Источник.КодОперации В (&КодПередачаМатериалов))
	|			И Источник.НомерКорСтроки = МатериалыВЭксплуатации.НомерСтроки
	|ГДЕ
	|//ГДЕ
	|	Источник.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И Источник.ВидДвижения = &ВидДвиженияРасход
	|	И Источник.КодОперации В(&КодыСписание)
	|
	|СГРУППИРОВАТЬ ПО
	|	Источник.Организация,
	|	Источник.Номенклатура,
	|	Источник.Склад,
	|	Источник.ХарактеристикаНоменклатуры,
	|	Источник.СерияНоменклатуры,
	|	Источник.ДокументОприходования,
	|	МатериалыВЭксплуатации.ДокументПередачи,
	|	Источник.СтатусПартии,
	|	Источник.Заказ,
	|	Источник.КодОперации,
	|	Источник.Качество,
	|	БракВПроизводстве.Продукция,
	|	ЗатратыНаСтроительствоОС.ОбъектСтроительства,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвижения
	|		ИНАЧЕ Источник.Регистратор
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвиженияПериод
	|		ИНАЧЕ Источник.Период
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ Себестоимость.Подразделение ЕСТЬ NULL )
	|			ТОГДА Себестоимость.Подразделение
	|		КОГДА (НЕ Затраты.Подразделение ЕСТЬ NULL )
	|			ТОГДА Затраты.Подразделение
	|		КОГДА (НЕ НЗП.Подразделение ЕСТЬ NULL )
	|			ТОГДА НЗП.Подразделение
	|		КОГДА (НЕ БракВПроизводстве.Подразделение ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.Подразделение
	|		КОГДА (НЕ МатериалыВЭксплуатации.Подразделение ЕСТЬ NULL )
	|			ТОГДА МатериалыВЭксплуатации.Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА НЗП.НоменклатурнаяГруппа
	|		КОГДА (НЕ Затраты.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА Затраты.НоменклатурнаяГруппа
	|		КОГДА (НЕ БракВПроизводстве.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.НоменклатурнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ Себестоимость.ЗаказПокупателя ЕСТЬ NULL )
	|			ТОГДА Себестоимость.ЗаказПокупателя
	|		КОГДА (НЕ НЗП.Заказ ЕСТЬ NULL )
	|			ТОГДА НЗП.Заказ
	|		КОГДА (НЕ Затраты.Заказ ЕСТЬ NULL )
	|			ТОГДА Затраты.Заказ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ Затраты.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА Затраты.СтатьяЗатрат
	|		КОГДА (НЕ НЗП.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА НЗП.СтатьяЗатрат
	|		КОГДА (НЕ БракВПроизводстве.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.СтатьяЗатрат
	|		КОГДА (НЕ ЗатратыНаСтроительствоОС.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА ЗатратыНаСтроительствоОС.СтатьяЗатрат
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ БракВПроизводстве.ХарактеристикаПродукции ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.ХарактеристикаПродукции
	|		КОГДА (НЕ ИсточникДляКомплектации.ХарактеристикаНоменклатуры ЕСТЬ NULL )
	|			ТОГДА ИсточникДляКомплектации.ХарактеристикаНоменклатуры
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ БракВПроизводстве.СерияПродукции ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.СерияПродукции
	|		КОГДА (НЕ ИсточникДляКомплектации.СерияНоменклатуры ЕСТЬ NULL )
	|			ТОГДА ИсточникДляКомплектации.СерияНоменклатуры
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ ИсточникДляКомплектации.Номенклатура ЕСТЬ NULL )
	|			ТОГДА ИсточникДляКомплектации.Номенклатура
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ ИсточникДляКомплектации.ДокументОприходования ЕСТЬ NULL )
	|			ТОГДА ИсточникДляКомплектации.ДокументОприходования
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ИсточникДляКомплектации.СтатусПартии,
	|	Источник.Номенклатура.ВестиПартионныйУчетПоСериям,
	|	ВЫБОР
	|		КОГДА (НЕ Затраты.Проект ЕСТЬ NULL )
	|			ТОГДА Затраты.Проект
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Себестоимость.Номенклатура <> Источник.Номенклатура
	|			ТОГДА Себестоимость.Номенклатура
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Себестоимость.ХарактеристикаНоменклатуры <> Источник.ХарактеристикаНоменклатуры
	|			ТОГДА Себестоимость.ХарактеристикаНоменклатуры
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,	
	|	ЕСТЬNULL(МатериалыВЭксплуатации.ФизЛицо, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(МатериалыВЭксплуатации.НазначениеИспользования, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(НЗП.СерияЗатраты, НЕОПРЕДЕЛЕНО),
	|	Источник.НомерСтрокиСписанныхТоваров
	|
	|ИМЕЮЩИЕ
	|	СУММА(Источник.Количество) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Переданные"",
	|	Источник.Организация,
	|	Источник.Номенклатура,
	|	NULL,
	|	Источник.ХарактеристикаНоменклатуры,
	|	NULL,
	|	Источник.ДокументОприходования,
	|	Источник.СтатусПартии,
	|	NULL,
	|	СУММА(Источник.Количество),
	|	СУММА(Источник.Стоимость),
	|	0,
	|	Источник.СтатусПередачи,
	|	Источник.ДокументПередачи,
	|	Источник.ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА (НЕ Себестоимость.ЗаказПокупателя ЕСТЬ NULL )
	|			ТОГДА Себестоимость.ЗаказПокупателя
	|		КОГДА (НЕ НЗП.Заказ ЕСТЬ NULL )
	|			ТОГДА НЗП.Заказ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	Источник.КодОперации,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвижения
	|		ИНАЧЕ Источник.Регистратор
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвиженияПериод
	|		ИНАЧЕ Источник.Период
	|	КОНЕЦ,
	|	NULL,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА НЗП.СтатьяЗатрат
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ Себестоимость.Подразделение ЕСТЬ NULL )
	|			ТОГДА Себестоимость.Подразделение
	|		КОГДА (НЕ НЗП.Подразделение ЕСТЬ NULL )
	|			ТОГДА НЗП.Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА НЗП.НоменклатурнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	Источник.Номенклатура.ВестиПартионныйУчетПоСериям,
	|	NULL,
	|	NULL,
	|	NULL,
	|	0,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрНакопления.ПартииТоваровПереданные КАК Источник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПродажиСебестоимость КАК Себестоимость
	|		ПО Источник.Регистратор = Себестоимость.Регистратор
	|			И Источник.НомерКорСтроки = Себестоимость.НомерСтроки
	|			И (Источник.КодОперации В (&КодыСписаниеНаСебестоимость))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НезавершенноеПроизводство КАК НЗП
	|		ПО Источник.Регистратор = НЗП.Регистратор
	|			И Источник.НомерКорСтроки = НЗП.НомерСтроки
	|			И (Источник.КодОперации В (&СписаниеПартийПереданныхВПроизводство))
	|ГДЕ
	|//ГДЕ
	|	Источник.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И Источник.ВидДвижения = &ВидДвиженияРасход
	|	И Источник.КодОперации В(&КодыСписание)
	|
	|СГРУППИРОВАТЬ ПО
	|	Источник.Организация,
	|	Источник.Номенклатура,
	|	Источник.ХарактеристикаНоменклатуры,
	|	Источник.ДокументОприходования,
	|	Источник.СтатусПартии,
	|	Источник.СтатусПередачи,
	|	Источник.ДокументПередачи,
	|	Источник.ДоговорКонтрагента,
	|	Источник.КодОперации,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвижения
	|		ИНАЧЕ Источник.Регистратор
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвиженияПериод
	|		ИНАЧЕ Источник.Период
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ Себестоимость.Подразделение ЕСТЬ NULL )
	|			ТОГДА Себестоимость.Подразделение
	|		КОГДА (НЕ НЗП.Подразделение ЕСТЬ NULL )
	|			ТОГДА НЗП.Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА НЗП.СтатьяЗатрат
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА НЗП.НоменклатурнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ Себестоимость.ЗаказПокупателя ЕСТЬ NULL )
	|			ТОГДА Себестоимость.ЗаказПокупателя
	|		КОГДА (НЕ НЗП.Заказ ЕСТЬ NULL )
	|			ТОГДА НЗП.Заказ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	Источник.Номенклатура.ВестиПартионныйУчетПоСериям
	|
	|ИМЕЮЩИЕ
	|	СУММА(Источник.Количество) <> 0
	|
	//Партии материалов в эксплуатации
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ВЭксплуатации"",
	|	NULL,
	|	Источник.Номенклатура,
	|	NULL,
	|	Источник.ХарактеристикаНоменклатуры,
	|	Источник.СерияНоменклатуры,
	|	NULL,
	|	NULL,
	|	NULL,
	|	СУММА(Источник.Количество),
	|	СУММА(Источник.Стоимость),
	|	0,
	|	NULL,
	|	Источник.ДокументПередачи,
	|	NULL,
	|	NULL,
	|	Источник.КодОперации,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвижения
	|		ИНАЧЕ Источник.Регистратор
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвиженияПериод
	|		ИНАЧЕ Источник.Период
	|	КОНЕЦ,
	|	NULL,
	|	NULL,
	|	Источник.Подразделение,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	Источник.Номенклатура.ВестиПартионныйУчетПоСериям,
	|	NULL,
	|	NULL,
	|	NULL,
	|	0,
	|	Источник.ФизЛицо,
	|	Источник.НазначениеИспользования,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрНакопления.ПартииМатериаловВЭксплуатации КАК Источник
	|ГДЕ
	|	Источник.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И Источник.ВидДвижения = &ВидДвиженияРасход
	|	И Источник.КодОперации В(&КодыСписание)
	|
	|СГРУППИРОВАТЬ ПО
	|	Источник.Номенклатура,
	|	Источник.ХарактеристикаНоменклатуры,
	|	Источник.СерияНоменклатуры,
	|	Источник.ДокументПередачи,
	|	Источник.КодОперации,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвижения
	|		ИНАЧЕ Источник.Регистратор
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвиженияПериод
	|		ИНАЧЕ Источник.Период
	|	КОНЕЦ,
	|	Источник.Подразделение,
	|	Источник.Номенклатура.ВестиПартионныйУчетПоСериям,
	|	Источник.ФизЛицо,
	|	Источник.НазначениеИспользования
	|
	|ИМЕЮЩИЕ
	|	СУММА(Источник.Количество) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Регистратор";*/
			/*//Добавим дополнительный отбор по коду операции
*/
			/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ГДЕ", "//ГДЕ 
	|	(НЕ Источник.СтатусПартии В (&ИсключаемыеСтатусыПартий)) И ");*/
			/*Запрос.УстановитьПараметр("ИсключаемыеСтатусыПартий",ПолучитьМассивИсключаемыхСтатусовПартий());*/
			/*// Добавим дополнительный отбор по номенклатуре
*/
			if(true/*МассивНоменклатуры <> Неопределено*/)
			{
				/*ТекстОграничениеНаПартии = "";*/
				/*СпособОценкиМПЗ = ВРег(Строка(УправлениеЗапасамиПартионныйУчет.ПолучитьПараметрУчетнойПолитикиПартионногоУчета("СпособОценкиМПЗ", "Упр", ДопПараметры)));*/
				if(true/*СпособОценкиМПЗ = "ФИФО" 
			ИЛИ СпособОценкиМПЗ = "ЛИФО"*/)
				{
					/*ТекстОграничениеНаПартии = " И Источник.ДокументОприходования В (&МассивДокументовОприходования) ";*/
				}
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ГДЕ", "//ГДЕ 
		|	Источник.Номенклатура В (&МассивНоменклатуры)
		|	" + ТекстОграничениеНаПартии + " И ");*/
			}
			/*// Встречный выпуск
*/
			if(true/*ДопПараметры.ВстречныйВыпуск*/)
			{
				/*КодыОпераций = Перечисления.КодыОперацийПартииТоваров;*/
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ГДЕ",
			" //ГДЕ 
			|НЕ ( 1 В
			|	(ВЫБРАТЬ Первые 1
			|		1
			|	ИЗ
			|		РегистрСведений.КорректировкаВстречногоВыпускаПродукции КАК КорректировкаВстречногоВыпускаПродукции
			|	ГДЕ
			|		Источник.НомерСтрокиСписанныхТоваров = КорректировкаВстречногоВыпускаПродукции.НомерСтрокиСписанныхТоваров
			|		" + ДобавитьОтборПоВидуУчета("КорректировкаВстречногоВыпускаПродукции","Упр") + "
			|		И Источник.Регистратор = КорректировкаВстречногоВыпускаПродукции.Документ))
			| И");*/
				/*Запрос.УстановитьПараметр("СписаниеПартийВПроизводствоОперативно",КодыОпераций.СписаниеПартийВПроизводствоОперативно);*/
			}
		}
		// ЗаполнитьЗапросПоСписанию()
		// Запрос по списанию: Бух учет
		//
		// Параметры:
		//	Нет.
		//

		public void ЗаполнитьЗапросПоСписаниюБух(/*Запрос, МассивНоменклатуры, ДопПараметры*/)
		{
			/*Организация = ДопПараметры.Организация;*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	""НаСкладах"" КАК СписаноИз,
	|	Источник.Организация КАК Организация,
	|	Источник.Номенклатура,
	|	Источник.Склад,
	|	Источник.ХарактеристикаНоменклатуры,
	|	Источник.СерияНоменклатуры,
	|	Источник.ДокументОприходования,
	|	Источник.Заказ,
	|	СУММА(Источник.Количество) КАК Количество,
	|	СУММА(Источник.Стоимость) КАК Стоимость,
	|	0 КАК СтоимостьПоступление,
	|	МатериалыВЭксплуатации.ДокументПередачи КАК ДокументПередачи,
	|	NULL КАК ДоговорКонтрагента,
	|	Источник.КодОперации КАК КодОперацииПартииТоваров,
	|	Источник.Качество,
	|	БракВПроизводстве.Продукция,
	|	Источник.СчетУчета КАК СчетУчетаБУ,
	|	Источник.КорСчет КАК КорСчетБУ,
	|	Источник.КорСубконто1 КАК КорСубконтоБУ1,
	|	Источник.КорСубконто2 КАК КорСубконтоБУ2,
	|	Источник.КорСубконто3 КАК КорСубконтоБУ3,
	|	ВЫБОР
	|		КОГДА (НЕ Затраты.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА Затраты.СтатьяЗатрат
	|		КОГДА (НЕ НЗП.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА НЗП.СтатьяЗатрат
	|		КОГДА (НЕ БракВПроизводстве.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.СтатьяЗатрат
	|		КОГДА (НЕ СписанныеТовары.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА СписанныеТовары.СтатьяЗатрат
	|		КОГДА (НЕ СписанныеТоварыПоДокументуДвижения.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА СписанныеТоварыПоДокументуДвижения.СтатьяЗатрат
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтатьяЗатрат,
	|	ВЫБОР
	|		КОГДА (НЕ Затраты.Подразделение ЕСТЬ NULL )
	|			ТОГДА Затраты.Подразделение
	|		КОГДА (НЕ НЗП.Подразделение ЕСТЬ NULL )
	|			ТОГДА НЗП.Подразделение
	|		КОГДА (НЕ БракВПроизводстве.Подразделение ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.Подразделение
	|		КОГДА (НЕ МатериалыВЭксплуатации.Подразделение ЕСТЬ NULL )
	|			ТОГДА МатериалыВЭксплуатации.Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА НЗП.НоменклатурнаяГруппа
	|		КОГДА (НЕ Затраты.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА Затраты.НоменклатурнаяГруппа
	|		КОГДА (НЕ БракВПроизводстве.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.НоменклатурнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НоменклатурнаяГруппа,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.Заказ ЕСТЬ NULL )
	|			ТОГДА НЗП.Заказ
	|		КОГДА (НЕ Затраты.Заказ ЕСТЬ NULL )
	|			ТОГДА Затраты.Заказ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ЗаказСписания,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвижения
	|		ИНАЧЕ Источник.Регистратор
	|	КОНЕЦ КАК Регистратор,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвиженияПериод
	|		ИНАЧЕ Источник.Период
	|	КОНЕЦ КАК Период,
	|	ВЫБОР
	|		КОГДА (НЕ БракВПроизводстве.ХарактеристикаПродукции ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.ХарактеристикаПродукции
	|		КОГДА (НЕ ИсточникДляКомплектации.ХарактеристикаНоменклатуры ЕСТЬ NULL )
	|			ТОГДА ИсточникДляКомплектации.ХарактеристикаНоменклатуры
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ХарактеристикаНоменклатурыНовая,
	|	ВЫБОР
	|		КОГДА (НЕ БракВПроизводстве.СерияПродукции ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.СерияПродукции
	|		КОГДА (НЕ ИсточникДляКомплектации.СерияНоменклатуры ЕСТЬ NULL )
	|			ТОГДА ИсточникДляКомплектации.СерияНоменклатуры
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СерияНоменклатурыНовая,
	|	ВЫБОР
	|		КОГДА (НЕ ИсточникДляКомплектации.Номенклатура ЕСТЬ NULL )
	|			ТОГДА ИсточникДляКомплектации.Номенклатура
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НоменклатураНовая,
	|	ВЫБОР
	|		КОГДА (НЕ ИсточникДляКомплектации.ДокументОприходования ЕСТЬ NULL )
	|			ТОГДА ИсточникДляКомплектации.ДокументОприходования
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументОприходованияНовый,
	|	Источник.Номенклатура.ВестиПартионныйУчетПоСериям КАК ВестиПартионныйУчетПоСериям,
	|	ЕСТЬNULL(МатериалыВЭксплуатации.ФизЛицо, НЕОПРЕДЕЛЕНО) КАК ФизЛицо,
	|	ЕСТЬNULL(МатериалыВЭксплуатации.НазначениеИспользования, НЕОПРЕДЕЛЕНО) КАК НазначениеИспользования,
	|	ЕСТЬNULL(НЗП.СерияЗатраты, НЕОПРЕДЕЛЕНО) КАК СерияНоменклтатурыНЗП,
	|	Источник.НомерСтрокиСписанныхТоваров КАК НомерСтрокиСписанныхТоваров
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладахБухгалтерскийУчет КАК Источник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗатратыБухгалтерскийУчет КАК Затраты
	|		ПО Источник.Регистратор = Затраты.Регистратор
	|			И Источник.НомерКорСтроки = Затраты.НомерСтроки
	|			И Источник.КорСчет = Затраты.СчетУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НезавершенноеПроизводствоБухгалтерскийУчет КАК НЗП
	|		ПО Источник.Регистратор = НЗП.Регистратор
	|			И Источник.НомерКорСтроки = НЗП.НомерСтроки
	|			И Источник.КорСчет = НЗП.СчетУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.БракВПроизводствеБухгалтерскийУчет КАК БракВПроизводстве
	|		ПО Источник.Регистратор = БракВПроизводстве.Регистратор
	|			И Источник.НомерКорСтроки = БракВПроизводстве.НомерСтроки
	|			И Источник.КорСчет = БракВПроизводстве.СчетУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровНаСкладахБухгалтерскийУчет КАК ИсточникДляКомплектации
	|		ПО Источник.Регистратор = ИсточникДляКомплектации.Регистратор
	|			И Источник.НомерКорСтроки = ИсточникДляКомплектации.НомерСтроки
	|			И (Источник.КодОперации В (&КодКомплектация))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииМатериаловВЭксплуатацииБухгалтерскийУчет КАК МатериалыВЭксплуатации
	|		ПО Источник.Регистратор = МатериалыВЭксплуатации.Регистратор
	|			И Источник.НомерКорСтроки = МатериалыВЭксплуатации.НомерСтроки
	|			И (Источник.КодОперации В (&КодПередачаМатериалов))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СписанныеТовары КАК СписанныеТовары
	|		ПО Источник.Регистратор = СписанныеТовары.Регистратор
	|			И Источник.НомерСтрокиСписанныхТоваров = СписанныеТовары.НомерСтроки
	|			И Источник.Регистратор ССЫЛКА Документ.ТребованиеНакладная
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СписанныеТовары КАК СписанныеТоварыПоДокументуДвижения
	|		ПО Источник.ДокументДвижения = СписанныеТоварыПоДокументуДвижения.Регистратор
	|			И Источник.НомерСтрокиСписанныхТоваров = СписанныеТоварыПоДокументуДвижения.НомерСтроки
	|			И Источник.ДокументДвижения ССЫЛКА Документ.ТребованиеНакладная
	|ГДЕ
	|//ГДЕ
	|	Источник.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И Источник.ВидДвижения = &ВидДвиженияРасход
	|	И Источник.КодОперации В(&КодыСписание)
	|
	|СГРУППИРОВАТЬ ПО
	|	Источник.Номенклатура,
	|	Источник.Склад,
	|	Источник.ХарактеристикаНоменклатуры,
	|	Источник.СерияНоменклатуры,
	|	Источник.ДокументОприходования,
	|	МатериалыВЭксплуатации.ДокументПередачи,
	|	Источник.Заказ,
	|	Источник.КодОперации,
	|	Источник.Качество,
	|	БракВПроизводстве.Продукция,
	|	Источник.Организация,
	|	Источник.СчетУчета,
	|	Источник.КорСчет,
	|	Источник.КорСубконто1,
	|	Источник.КорСубконто2,
	|	Источник.КорСубконто3,
	|	ВЫБОР
	|		КОГДА (НЕ Затраты.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА Затраты.СтатьяЗатрат
	|		КОГДА (НЕ НЗП.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА НЗП.СтатьяЗатрат
	|		КОГДА (НЕ БракВПроизводстве.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.СтатьяЗатрат
	|		КОГДА (НЕ СписанныеТовары.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА СписанныеТовары.СтатьяЗатрат
	|		КОГДА (НЕ СписанныеТоварыПоДокументуДвижения.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА СписанныеТоварыПоДокументуДвижения.СтатьяЗатрат
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.Заказ ЕСТЬ NULL )
	|			ТОГДА НЗП.Заказ
	|		КОГДА (НЕ Затраты.Заказ ЕСТЬ NULL )
	|			ТОГДА Затраты.Заказ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвижения
	|		ИНАЧЕ Источник.Регистратор
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвиженияПериод
	|		ИНАЧЕ Источник.Период
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ БракВПроизводстве.ХарактеристикаПродукции ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.ХарактеристикаПродукции
	|		КОГДА (НЕ ИсточникДляКомплектации.ХарактеристикаНоменклатуры ЕСТЬ NULL )
	|			ТОГДА ИсточникДляКомплектации.ХарактеристикаНоменклатуры
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ БракВПроизводстве.СерияПродукции ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.СерияПродукции
	|		КОГДА (НЕ ИсточникДляКомплектации.СерияНоменклатуры ЕСТЬ NULL )
	|			ТОГДА ИсточникДляКомплектации.СерияНоменклатуры
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ ИсточникДляКомплектации.Номенклатура ЕСТЬ NULL )
	|			ТОГДА ИсточникДляКомплектации.Номенклатура
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ ИсточникДляКомплектации.ДокументОприходования ЕСТЬ NULL )
	|			ТОГДА ИсточникДляКомплектации.ДокументОприходования
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ Затраты.Подразделение ЕСТЬ NULL )
	|			ТОГДА Затраты.Подразделение
	|		КОГДА (НЕ НЗП.Подразделение ЕСТЬ NULL )
	|			ТОГДА НЗП.Подразделение
	|		КОГДА (НЕ БракВПроизводстве.Подразделение ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.Подразделение
	|		КОГДА (НЕ МатериалыВЭксплуатации.Подразделение ЕСТЬ NULL )
	|			ТОГДА МатериалыВЭксплуатации.Подразделение
    |		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА НЗП.НоменклатурнаяГруппа
	|		КОГДА (НЕ Затраты.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА Затраты.НоменклатурнаяГруппа
	|		КОГДА (НЕ БракВПроизводстве.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.НоменклатурнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	Источник.Номенклатура.ВестиПартионныйУчетПоСериям,
	|	ЕСТЬNULL(МатериалыВЭксплуатации.ФизЛицо, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(МатериалыВЭксплуатации.НазначениеИспользования, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(НЗП.СерияЗатраты, НЕОПРЕДЕЛЕНО),
	|	Источник.НомерСтрокиСписанныхТоваров
	|
	|ИМЕЮЩИЕ
	|	СУММА(Источник.Количество) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Переданные"",
	|	Источник.Организация,
	|	Источник.Номенклатура,
	|	NULL,
	|	Источник.ХарактеристикаНоменклатуры,
	|	NULL,
	|	Источник.ДокументОприходования,
	|	NULL,
	|	СУММА(Источник.Количество),
	|	СУММА(Источник.Стоимость),
	|	0,
	|	Источник.ДокументПередачи,
	|	Источник.ДоговорКонтрагента,
	|	Источник.КодОперации,
	|	NULL,
	|	NULL,
	|	Источник.СчетУчета,
	|	Источник.КорСчет,
	|	Источник.КорСубконто1,
	|	Источник.КорСубконто2,
	|	Источник.КорСубконто3,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА НЗП.СтатьяЗатрат
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.Подразделение ЕСТЬ NULL )
	|			ТОГДА НЗП.Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА НЗП.НоменклатурнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.Заказ ЕСТЬ NULL )
	|			ТОГДА НЗП.Заказ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвижения
	|		ИНАЧЕ Источник.Регистратор
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвиженияПериод
	|		ИНАЧЕ Источник.Период
	|	КОНЕЦ,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	Источник.Номенклатура.ВестиПартионныйУчетПоСериям,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрНакопления.ПартииТоваровПереданныеБухгалтерскийУчет КАК Источник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НезавершенноеПроизводствоБухгалтерскийУчет КАК НЗП
	|		ПО Источник.Регистратор = НЗП.Регистратор
	|			И Источник.НомерКорСтроки = НЗП.НомерСтроки
	|			И Источник.КорСчет = НЗП.СчетУчета
	|ГДЕ
	|//ГДЕ
	|	Источник.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И Источник.ВидДвижения = &ВидДвиженияРасход
	|	И Источник.КодОперации В(&КодыСписание)
	|
	|СГРУППИРОВАТЬ ПО
	|	Источник.Номенклатура,
	|	Источник.ХарактеристикаНоменклатуры,
	|	Источник.ДокументОприходования,
	|	Источник.ДокументПередачи,
	|	Источник.ДоговорКонтрагента,
	|	Источник.КодОперации,
	|	Источник.СчетУчета,
	|	Источник.Организация,
	|	Источник.КорСчет,
	|	Источник.КорСубконто1,
	|	Источник.КорСубконто2,
	|	Источник.КорСубконто3,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвижения
	|		ИНАЧЕ Источник.Регистратор
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвиженияПериод
	|		ИНАЧЕ Источник.Период
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА НЗП.СтатьяЗатрат
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.Подразделение ЕСТЬ NULL )
	|			ТОГДА НЗП.Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА НЗП.НоменклатурнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.Заказ ЕСТЬ NULL )
	|			ТОГДА НЗП.Заказ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	Источник.Номенклатура.ВестиПартионныйУчетПоСериям
//Партии материалов в эксплуатации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ВЭксплуатации"",
	|	Источник.Организация,
	|	Источник.Номенклатура,
	|	NULL,
	|	Источник.ХарактеристикаНоменклатуры,
	|	Источник.СерияНоменклатуры,
	|	NULL,
	|	NULL,
	|	СУММА(Источник.Количество),
	|	СУММА(Источник.Стоимость),
	|	0,
	|	Источник.ДокументПередачи,
	|	NULL,
	|	Источник.КодОперации,
	|	NULL,
	|	NULL,
	|	Источник.СчетУчета,
	|	СписанныеТовары.КорСчетБУ,
	|	СписанныеТовары.КорСубконтоБУ1,
	|	СписанныеТовары.КорСубконтоБУ2,
	|	СписанныеТовары.КорСубконтоБУ3,
	|	NULL,
	|	Источник.Подразделение,
	|	NULL,
	|	NULL,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвижения
	|		ИНАЧЕ Источник.Регистратор
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвиженияПериод
	|		ИНАЧЕ Источник.Период
	|	КОНЕЦ,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	Источник.Номенклатура.ВестиПартионныйУчетПоСериям,
	|	Источник.ФизЛицо,
	|	Источник.НазначениеИспользования,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрНакопления.ПартииМатериаловВЭксплуатацииБухгалтерскийУчет КАК Источник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СписанныеТовары КАК СписанныеТовары
	|		ПО Источник.Регистратор = СписанныеТовары.Регистратор
	|			И Источник.НомерСтрокиСписанныхТоваров = СписанныеТовары.НомерСтроки
	|ГДЕ
	|	Источник.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И Источник.ВидДвижения = &ВидДвиженияРасход
	|	И Источник.КодОперации В(&КодыСписание)
	|
	|СГРУППИРОВАТЬ ПО
	|	Источник.Номенклатура,
	|	Источник.ХарактеристикаНоменклатуры,
	|	Источник.СерияНоменклатуры,
	|	Источник.ДокументПередачи,
	|	Источник.КодОперации,
	|	Источник.СчетУчета,
	|	Источник.Организация,
	|	СписанныеТовары.КорСчетБУ,
	|	СписанныеТовары.КорСубконтоБУ1,
	|	СписанныеТовары.КорСубконтоБУ2,
	|	СписанныеТовары.КорСубконтоБУ3,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвижения
	|		ИНАЧЕ Источник.Регистратор
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвиженияПериод
	|		ИНАЧЕ Источник.Период
	|	КОНЕЦ,
	|	Источник.Подразделение,
	|	Источник.ФизЛицо,
	|	Источник.НазначениеИспользования,
	|	Источник.Номенклатура.ВестиПартионныйУчетПоСериям
	|
	|ИМЕЮЩИЕ
	|	СУММА(Источник.Количество) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Регистратор";*/
			/*//Добавим дополнительный отбор по счету
*/
			/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ГДЕ", "//ГДЕ
	|	(НЕ Источник.СчетУчета В (&СписокИсключаемыхСчетовУчета)) И ");*/
			/*Запрос.УстановитьПараметр("СписокИсключаемыхСчетовУчета",ПолучитьМассивИсключаемыхСчетов());*/
			/*// Если задана организация, отбор по организации 
*/
			if(true/*ЗначениеЗаполнено(Организация)*/)
			{
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ГДЕ", "//ГДЕ 
		|	Источник.Организация = &Организация И ");*/
				/*Запрос.УстановитьПараметр("Организация", Организация);*/
			}
			/*// Добавим дополнительный отбор по номенклатуре
*/
			if(true/*МассивНоменклатуры <> Неопределено*/)
			{
				/*ТекстОграничениеНаПартии = "";*/
				if(true/*ЗначениеЗаполнено(Организация)*/)
				{
					/*СпособОценкиМПЗ = ВРег(Строка(УправлениеЗапасамиПартионныйУчет.ПолучитьПараметрУчетнойПолитикиПартионногоУчета("СпособОценкиМПЗ", "Бух", ДопПараметры)));*/
					if(true/*СпособОценкиМПЗ = "ФИФО" 
				ИЛИ СпособОценкиМПЗ = "ЛИФО"*/)
					{
						/*ТекстОграничениеНаПартии = " И Источник.ДокументОприходования В (&МассивДокументовОприходования) ";*/
					}
				}
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ГДЕ", "//ГДЕ 
		|	Источник.Номенклатура В (&МассивНоменклатуры)
		|	" + ТекстОграничениеНаПартии + " И ");*/
			}
			/*// Встречный выпуск
*/
			if(true/*ДопПараметры.ВстречныйВыпуск*/)
			{
				/*КодыОпераций = Перечисления.КодыОперацийПартииТоваров;*/
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ГДЕ",
			" //ГДЕ 
			|	НЕ ( 1 В
			|	(ВЫБРАТЬ Первые 1
			|		1
			|	ИЗ
			|		РегистрСведений.КорректировкаВстречногоВыпускаПродукции КАК КорректировкаВстречногоВыпускаПродукции
			|	ГДЕ
			|		Источник.НомерСтрокиСписанныхТоваров = КорректировкаВстречногоВыпускаПродукции.НомерСтрокиСписанныхТоваров
			|		" + ДобавитьОтборПоВидуУчета("КорректировкаВстречногоВыпускаПродукции","Бух") + "
			|		И Источник.Регистратор = КорректировкаВстречногоВыпускаПродукции.Документ))
			| И");*/
				/*Запрос.УстановитьПараметр("СписаниеПартийВПроизводствоОперативно",КодыОпераций.СписаниеПартийВПроизводствоОперативно);*/
			}
		}
		// ЗапросПоСписаниюБух()
		// Запрос по списанию: Нал учет
		//
		// Параметры:
		//	Нет.
		//

		public void ЗаполнитьЗапросПоСписаниюНал(/*Запрос, МассивНоменклатуры, ДопПараметры*/)
		{
			/*Организация = ДопПараметры.Организация;*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	""НаСкладах"" КАК СписаноИз,
	|	Источник.Организация КАК Организация,
	|	Источник.Номенклатура,
	|	Источник.Склад,
	|	Источник.ХарактеристикаНоменклатуры,
	|	Источник.СерияНоменклатуры,
	|	Источник.ДокументОприходования,
	|	Источник.Заказ,
	|	СУММА(Источник.Количество) КАК Количество,
	|	СУММА(Источник.Стоимость) КАК Стоимость,
	|	0 КАК СтоимостьПоступление,
	|	МатериалыВЭксплуатации.ДокументПередачи КАК ДокументПередачи,
	|	NULL КАК ДоговорКонтрагента,
	|	Источник.КодОперации КАК КодОперацииПартииТоваров,
	|	Источник.Качество,
	|	БракВПроизводстве.Продукция,
	|	Источник.СчетУчета КАК СчетУчетаНУ,
	|	Источник.КорСчет КАК КорСчетНУ,
	|	Источник.КорСубконто1 КАК КорСубконтоБУ1,
	|	Источник.КорСубконто2 КАК КорСубконтоБУ2,
	|	Источник.КорСубконто3 КАК КорСубконтоБУ3,
	|	Источник.КорСубконто1 КАК КорСубконтоНУ1,
	|	Источник.КорСубконто2 КАК КорСубконтоНУ2,
	|	Источник.КорСубконто3 КАК КорСубконтоНУ3,
	|	СУММА(Источник.ПостояннаяРазница) КАК ПостояннаяРазница,
	|	СУММА(Источник.ВременнаяРазница) КАК ВременнаяРазница,
	|	ВЫБОР
	|		КОГДА (НЕ Затраты.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА Затраты.СтатьяЗатрат
	|		КОГДА (НЕ НЗП.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА НЗП.СтатьяЗатрат
	|		КОГДА (НЕ БракВПроизводстве.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.СтатьяЗатрат
	|		КОГДА (НЕ СписанныеТовары.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА СписанныеТовары.СтатьяЗатрат
	|		КОГДА (НЕ СписанныеТоварыПоДокументуДвижения.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА СписанныеТоварыПоДокументуДвижения.СтатьяЗатрат
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтатьяЗатрат,
	|	ВЫБОР
	|		КОГДА (НЕ Затраты.Подразделение ЕСТЬ NULL )
	|			ТОГДА Затраты.Подразделение
	|		КОГДА (НЕ НЗП.Подразделение ЕСТЬ NULL )
	|			ТОГДА НЗП.Подразделение
	|		КОГДА (НЕ БракВПроизводстве.Подразделение ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.Подразделение
	|		КОГДА (НЕ МатериалыВЭксплуатации.Подразделение ЕСТЬ NULL )
	|			ТОГДА МатериалыВЭксплуатации.Подразделение	
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА НЗП.НоменклатурнаяГруппа
	|		КОГДА (НЕ Затраты.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА Затраты.НоменклатурнаяГруппа
	|		КОГДА (НЕ БракВПроизводстве.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.НоменклатурнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НоменклатурнаяГруппа,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.Заказ ЕСТЬ NULL )
	|			ТОГДА НЗП.Заказ
	|		КОГДА (НЕ Затраты.Заказ ЕСТЬ NULL )
	|			ТОГДА Затраты.Заказ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ЗаказСписания,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвижения
	|		ИНАЧЕ Источник.Регистратор
	|	КОНЕЦ КАК Регистратор,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвиженияПериод
	|		ИНАЧЕ Источник.Период
	|	КОНЕЦ КАК Период,
	|	ВЫБОР
	|		КОГДА (НЕ БракВПроизводстве.ХарактеристикаПродукции ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.ХарактеристикаПродукции
	|		КОГДА (НЕ ИсточникДляКомплектации.ХарактеристикаНоменклатуры ЕСТЬ NULL )
	|			ТОГДА ИсточникДляКомплектации.ХарактеристикаНоменклатуры
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ХарактеристикаНоменклатурыНовая,
	|	ВЫБОР
	|		КОГДА (НЕ БракВПроизводстве.СерияПродукции ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.СерияПродукции
	|		КОГДА (НЕ ИсточникДляКомплектации.СерияНоменклатуры ЕСТЬ NULL )
	|			ТОГДА ИсточникДляКомплектации.СерияНоменклатуры
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СерияНоменклатурыНовая,
	|	ВЫБОР
	|		КОГДА (НЕ ИсточникДляКомплектации.Номенклатура ЕСТЬ NULL )
	|			ТОГДА ИсточникДляКомплектации.Номенклатура
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НоменклатураНовая,
	|	ВЫБОР
	|		КОГДА (НЕ ИсточникДляКомплектации.ДокументОприходования ЕСТЬ NULL )
	|			ТОГДА ИсточникДляКомплектации.ДокументОприходования
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументОприходованияНовый,
	|	Источник.Номенклатура.ВестиПартионныйУчетПоСериям КАК ВестиПартионныйУчетПоСериям,
	|	ЕСТЬNULL(МатериалыВЭксплуатации.ФизЛицо, НЕОПРЕДЕЛЕНО) КАК ФизЛицо,
	|	ЕСТЬNULL(МатериалыВЭксплуатации.НазначениеИспользования, НЕОПРЕДЕЛЕНО) КАК НазначениеИспользования,
	|	ЕСТЬNULL(НЗП.СерияЗатраты, НЕОПРЕДЕЛЕНО) КАК СерияНоменклтатурыНЗП,
	|	Источник.НомерСтрокиСписанныхТоваров КАК НомерСтрокиСписанныхТоваров
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладахНалоговыйУчет КАК Источник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗатратыНалоговыйУчет КАК Затраты
	|		ПО Источник.Регистратор = Затраты.Регистратор
	|			И Источник.НомерКорСтроки = Затраты.НомерСтроки
	|			И Источник.КорСчет = Затраты.СчетУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НезавершенноеПроизводствоНалоговыйУчет КАК НЗП
	|		ПО Источник.Регистратор = НЗП.Регистратор
	|			И Источник.НомерКорСтроки = НЗП.НомерСтроки
	|			И Источник.КорСчет = НЗП.СчетУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.БракВПроизводствеНалоговыйУчет КАК БракВПроизводстве
	|		ПО Источник.Регистратор = БракВПроизводстве.Регистратор
	|			И Источник.НомерКорСтроки = БракВПроизводстве.НомерСтроки
	|			И Источник.КорСчет = БракВПроизводстве.СчетУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровНаСкладахНалоговыйУчет КАК ИсточникДляКомплектации
	|		ПО Источник.Регистратор = ИсточникДляКомплектации.Регистратор
	|			И Источник.НомерКорСтроки = ИсточникДляКомплектации.НомерСтроки
	|			И (Источник.КодОперации В (&КодКомплектация))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииМатериаловВЭксплуатацииНалоговыйУчет КАК МатериалыВЭксплуатации
	|		ПО Источник.Регистратор = МатериалыВЭксплуатации.Регистратор
	|			И (Источник.КодОперации В (&КодПередачаМатериалов))
	|			И Источник.НомерКорСтроки = МатериалыВЭксплуатации.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СписанныеТовары КАК СписанныеТовары
	|		ПО Источник.Регистратор = СписанныеТовары.Регистратор
	|			И Источник.НомерСтрокиСписанныхТоваров = СписанныеТовары.НомерСтроки
	|			И Источник.Регистратор ССЫЛКА Документ.ТребованиеНакладная
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СписанныеТовары КАК СписанныеТоварыПоДокументуДвижения
	|		ПО Источник.ДокументДвижения = СписанныеТоварыПоДокументуДвижения.Регистратор
	|			И Источник.НомерСтрокиСписанныхТоваров = СписанныеТоварыПоДокументуДвижения.НомерСтроки
	|			И Источник.ДокументДвижения ССЫЛКА Документ.ТребованиеНакладная
	|ГДЕ
	|//ГДЕ
	|	Источник.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И Источник.ВидДвижения = &ВидДвиженияРасход
	|	И Источник.КодОперации В(&КодыСписание)
	|
	|СГРУППИРОВАТЬ ПО
	|	Источник.Номенклатура,
	|	Источник.Склад,
	|	Источник.ХарактеристикаНоменклатуры,
	|	Источник.СерияНоменклатуры,
	|	Источник.ДокументОприходования,
	|	МатериалыВЭксплуатации.ДокументПередачи,
	|	Источник.Заказ,
	|	Источник.КодОперации,
	|	Источник.Качество,
	|	БракВПроизводстве.Продукция,
	|	Источник.Организация,
	|	Источник.СчетУчета,
	|	Источник.КорСчет,
	|	Источник.КорСубконто1,
	|	Источник.КорСубконто2,
	|	Источник.КорСубконто3,
	|	ВЫБОР
	|		КОГДА (НЕ Затраты.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА Затраты.СтатьяЗатрат
	|		КОГДА (НЕ НЗП.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА НЗП.СтатьяЗатрат
	|		КОГДА (НЕ БракВПроизводстве.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.СтатьяЗатрат
	|		КОГДА (НЕ СписанныеТовары.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА СписанныеТовары.СтатьяЗатрат
	|		КОГДА (НЕ СписанныеТоварыПоДокументуДвижения.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА СписанныеТоварыПоДокументуДвижения.СтатьяЗатрат
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ Затраты.Подразделение ЕСТЬ NULL )
	|			ТОГДА Затраты.Подразделение
	|		КОГДА (НЕ НЗП.Подразделение ЕСТЬ NULL )
	|			ТОГДА НЗП.Подразделение
	|		КОГДА (НЕ БракВПроизводстве.Подразделение ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.Подразделение
	|		КОГДА (НЕ МатериалыВЭксплуатации.Подразделение ЕСТЬ NULL )
	|			ТОГДА МатериалыВЭксплуатации.Подразделение	
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА НЗП.НоменклатурнаяГруппа
	|		КОГДА (НЕ Затраты.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА Затраты.НоменклатурнаяГруппа
	|		КОГДА (НЕ БракВПроизводстве.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.НоменклатурнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.Заказ ЕСТЬ NULL )
	|			ТОГДА НЗП.Заказ
	|		КОГДА (НЕ Затраты.Заказ ЕСТЬ NULL )
	|			ТОГДА Затраты.Заказ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвижения
	|		ИНАЧЕ Источник.Регистратор
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвиженияПериод
	|		ИНАЧЕ Источник.Период
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ БракВПроизводстве.ХарактеристикаПродукции ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.ХарактеристикаПродукции
	|		КОГДА (НЕ ИсточникДляКомплектации.ХарактеристикаНоменклатуры ЕСТЬ NULL )
	|			ТОГДА ИсточникДляКомплектации.ХарактеристикаНоменклатуры
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ БракВПроизводстве.СерияПродукции ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.СерияПродукции
	|		КОГДА (НЕ ИсточникДляКомплектации.СерияНоменклатуры ЕСТЬ NULL )
	|			ТОГДА ИсточникДляКомплектации.СерияНоменклатуры
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ ИсточникДляКомплектации.Номенклатура ЕСТЬ NULL )
	|			ТОГДА ИсточникДляКомплектации.Номенклатура
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ ИсточникДляКомплектации.ДокументОприходования ЕСТЬ NULL )
	|			ТОГДА ИсточникДляКомплектации.ДокументОприходования
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	Источник.Номенклатура.ВестиПартионныйУчетПоСериям,
	|	ЕСТЬNULL(МатериалыВЭксплуатации.ФизЛицо, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(МатериалыВЭксплуатации.НазначениеИспользования, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(НЗП.СерияЗатраты, НЕОПРЕДЕЛЕНО),
	|	Источник.НомерСтрокиСписанныхТоваров,
	|	Источник.КорСубконто1,
	|	Источник.КорСубконто2,
	|	Источник.КорСубконто3
	|
	|ИМЕЮЩИЕ
	|	СУММА(Источник.Количество) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Переданные"",
	|	Источник.Организация,
	|	Источник.Номенклатура,
	|	NULL,
	|	Источник.ХарактеристикаНоменклатуры,
	|	NULL,
	|	Источник.ДокументОприходования,
	|	NULL,
	|	СУММА(Источник.Количество),
	|	СУММА(Источник.Стоимость),
	|	0,
	|	Источник.ДокументПередачи,
	|	Источник.ДоговорКонтрагента,
	|	Источник.КодОперации,
	|	NULL,
	|	NULL,
	|	Источник.СчетУчета,
	|	Источник.КорСчет,
	|	Источник.КорСубконто1,
	|	Источник.КорСубконто2,
	|	Источник.КорСубконто3,
	|	Источник.КорСубконто1,
	|	Источник.КорСубконто2,
	|	Источник.КорСубконто3,
	|	СУММА(Источник.ПостояннаяРазница),
	|	СУММА(Источник.ВременнаяРазница),
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА НЗП.СтатьяЗатрат
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.Подразделение ЕСТЬ NULL )
	|			ТОГДА НЗП.Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА НЗП.НоменклатурнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.Заказ ЕСТЬ NULL )
	|			ТОГДА НЗП.Заказ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвижения
	|		ИНАЧЕ Источник.Регистратор
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвиженияПериод
	|		ИНАЧЕ Источник.Период
	|	КОНЕЦ,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	Источник.Номенклатура.ВестиПартионныйУчетПоСериям,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрНакопления.ПартииТоваровПереданныеНалоговыйУчет КАК Источник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НезавершенноеПроизводствоНалоговыйУчет КАК НЗП
	|		ПО Источник.Регистратор = НЗП.Регистратор
	|			И Источник.НомерКорСтроки = НЗП.НомерСтроки
	|			И Источник.КорСчет = НЗП.СчетУчета
	|ГДЕ
	|//ГДЕ
	|	Источник.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И Источник.ВидДвижения = &ВидДвиженияРасход
	|	И Источник.КодОперации В(&КодыСписание)
	|
	|СГРУППИРОВАТЬ ПО
	|	Источник.Номенклатура,
	|	Источник.ХарактеристикаНоменклатуры,
	|	Источник.ДокументОприходования,
	|	Источник.ДокументПередачи,
	|	Источник.ДоговорКонтрагента,
	|	Источник.КодОперации,
	|	Источник.СчетУчета,
	|	Источник.Организация,
	|	Источник.КорСчет,
	|	Источник.КорСубконто1,
	|	Источник.КорСубконто2,
	|	Источник.КорСубконто3,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвижения
	|		ИНАЧЕ Источник.Регистратор
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвиженияПериод
	|		ИНАЧЕ Источник.Период
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА НЗП.СтатьяЗатрат
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.Подразделение ЕСТЬ NULL )
	|			ТОГДА НЗП.Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА НЗП.НоменклатурнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.Заказ ЕСТЬ NULL )
	|			ТОГДА НЗП.Заказ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	Источник.Номенклатура.ВестиПартионныйУчетПоСериям,
	|	Источник.КорСубконто1,
	|	Источник.КорСубконто2,
	|	Источник.КорСубконто3
	|
	|ИМЕЮЩИЕ
	|	СУММА(Источник.Количество) <> 0
	|
//Партии материалов в эксплуатации	
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ВЭксплуатации"" КАК СписаноИз,
	|	Источник.Организация КАК Организация,
	|	Источник.Номенклатура,
	|	NULL,
	|	Источник.ХарактеристикаНоменклатуры,
	|	Источник.СерияНоменклатуры,
	|	NULL,
	|	NULL,
	|	СУММА(Источник.Количество) КАК Количество,
	|	СУММА(Источник.Стоимость) КАК Стоимость,
	|	0 КАК СтоимостьПоступление,
	|	Источник.ДокументПередачи КАК ДокументПередачи,
	|	NULL КАК ДоговорКонтрагента,
	|	Источник.КодОперации КАК КодОперацииПартииТоваров,
	|	NULL,
	|	NULL,
	|	Источник.СчетУчета КАК СчетУчетаНУ,
	|	СписанныеТовары.КорСчетНУ КАК КорСчетНУ,
	|	СписанныеТовары.КорСубконтоБУ1 КАК КорСубконтоБУ1,
	|	СписанныеТовары.КорСубконтоБУ2 КАК КорСубконтоБУ2,
	|	СписанныеТовары.КорСубконтоБУ3 КАК КорСубконтоБУ3,
	|	СписанныеТовары.КорСубконтоНУ1 КАК КорСубконтоНУ1,
	|	СписанныеТовары.КорСубконтоНУ2 КАК КорСубконтоНУ2,
	|	СписанныеТовары.КорСубконтоНУ3 КАК КорСубконтоНУ3,
	|	СУММА(Источник.ПостояннаяРазница) КАК ПостояннаяРазница,
	|	СУММА(Источник.ВременнаяРазница) КАК ВременнаяРазница,
	|	NULL,
	|	Источник.Подразделение КАК ПодразделениеОрганизации,
	|	NULL КАК НоменклатурнаяГруппа,
	|	NULL КАК ЗаказСписания,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвижения
	|		ИНАЧЕ Источник.Регистратор
	|	КОНЕЦ КАК Регистратор,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвиженияПериод
	|		ИНАЧЕ Источник.Период
	|	КОНЕЦ КАК Период,
	|	NULL КАК ХарактеристикаНоменклатурыНовая,
	|	NULL КАК СерияНоменклатурыНовая,
	|	NULL КАК НоменклатураНовая,
	|	NULL КАК ДокументОприходованияНовый,
	|	Источник.Номенклатура.ВестиПартионныйУчетПоСериям КАК ВестиПартионныйУчетПоСериям,
	|	Источник.ФизЛицо КАК ФизЛицо,
	|	Источник.НазначениеИспользования КАК НазначениеИспользования,
	|	НЕОПРЕДЕЛЕНО КАК СерияНоменклтатурыНЗП,
	|	Источник.НомерСтрокиСписанныхТоваров КАК НомерСтрокиСписанныхТоваров
	|ИЗ
	|	РегистрНакопления.ПартииМатериаловВЭксплуатацииНалоговыйУчет КАК Источник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СписанныеТовары КАК СписанныеТовары
	|		ПО Источник.Регистратор = СписанныеТовары.Регистратор
	|			И Источник.НомерСтрокиСписанныхТоваров = СписанныеТовары.НомерСтроки
	|ГДЕ
	|	Источник.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И Источник.ВидДвижения = &ВидДвиженияРасход
	|	И Источник.КодОперации В(&КодыСписание)
	|
	|СГРУППИРОВАТЬ ПО
	|	Источник.Номенклатура,
	|	Источник.ХарактеристикаНоменклатуры,
	|	Источник.СерияНоменклатуры,
	|	Источник.ДокументПередачи,
	|	Источник.КодОперации,
	|	Источник.Организация,
	|	Источник.СчетУчета,
	|	СписанныеТовары.КорСчетНУ,
	|	СписанныеТовары.КорСубконтоБУ1,
	|	СписанныеТовары.КорСубконтоБУ2,
	|	СписанныеТовары.КорСубконтоБУ3,
	|	Источник.Подразделение,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвижения
	|		ИНАЧЕ Источник.Регистратор
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвиженияПериод
	|		ИНАЧЕ Источник.Период
	|	КОНЕЦ,
	|	Источник.Номенклатура.ВестиПартионныйУчетПоСериям,
	|	Источник.ФизЛицо,
	|	Источник.НазначениеИспользования,
	|	Источник.НомерСтрокиСписанныхТоваров,
	|	СписанныеТовары.КорСубконтоНУ1,
	|	СписанныеТовары.КорСубконтоНУ2,
	|	СписанныеТовары.КорСубконтоНУ3
	|
	|ИМЕЮЩИЕ
	|	СУММА(Источник.Количество) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Регистратор";*/
			/*//Добавим дополнительный отбор по счету
*/
			/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ГДЕ", "//ГДЕ 
	|	(НЕ Источник.СчетУчета В (&СписокИсключаемыхСчетовУчета)) И ");*/
			/*Запрос.УстановитьПараметр("СписокИсключаемыхСчетовУчета",ПолучитьМассивИсключаемыхСчетов());*/
			/*// Если задана организация, отбор по организации 
*/
			if(true/*ЗначениеЗаполнено(Организация)*/)
			{
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ГДЕ", "//ГДЕ
		|	Источник.Организация = &Организация И ");*/
				/*Запрос.УстановитьПараметр("Организация", Организация);*/
			}
			/*// Добавим дополнительный отбор по номенклатуре
*/
			if(true/*МассивНоменклатуры <> Неопределено*/)
			{
				/*ТекстОграничениеНаПартии = "";*/
				if(true/*ЗначениеЗаполнено(Организация)*/)
				{
					/*СпособОценкиМПЗ = ВРег(Строка(УправлениеЗапасамиПартионныйУчет.ПолучитьПараметрУчетнойПолитикиПартионногоУчета("СпособОценкиМПЗ", "Нал", ДопПараметры)));*/
					if(true/*СпособОценкиМПЗ = "ФИФО" 
				ИЛИ СпособОценкиМПЗ = "ЛИФО"*/)
					{
						/*ТекстОграничениеНаПартии = " И Источник.ДокументОприходования В (&МассивДокументовОприходования) ";*/
					}
				}
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ГДЕ", "//ГДЕ 
		|	Источник.Номенклатура В (&МассивНоменклатуры)
		|	" + ТекстОграничениеНаПартии + " И ");*/
			}
			/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ГДЕ", "//ГДЕ 
	|	Источник.Номенклатура В (&МассивНоменклатуры)
	|	" + ТекстОграничениеНаПартии + " И ");*/
			/*// Встречный выпуск
*/
			if(true/*ДопПараметры.ВстречныйВыпуск*/)
			{
				/*КодыОпераций = Перечисления.КодыОперацийПартииТоваров;*/
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ГДЕ",
			" //ГДЕ
			|	НЕ ( 1 В
			|	(ВЫБРАТЬ Первые 1
			|		1
			|	ИЗ
			|		РегистрСведений.КорректировкаВстречногоВыпускаПродукции КАК КорректировкаВстречногоВыпускаПродукции
			|	ГДЕ
			|		Источник.НомерСтрокиСписанныхТоваров = КорректировкаВстречногоВыпускаПродукции.НомерСтрокиСписанныхТоваров
			|		" + ДобавитьОтборПоВидуУчета("КорректировкаВстречногоВыпускаПродукции","Нал") + "
			|		И Источник.Регистратор = КорректировкаВстречногоВыпускаПродукции.Документ))
			| И");*/
				/*Запрос.УстановитьПараметр("СписаниеПартийВПроизводствоОперативно",КодыОпераций.СписаниеПартийВПроизводствоОперативно);*/
			}
		}
		// ЗаполнитьЗапросПоСписаниюНал()
		// Запрос по списанию: Меж
		//
		// Параметры:
		//	Нет.
		//

		public void ЗаполнитьЗапросПоСписаниюМеж(/*Запрос, МассивНоменклатуры, ДопПараметры*/)
		{
			/*Организация = ДопПараметры.Организация;*/
			/*Запрос.Текст = 
	"ВЫБРАТЬ
	|	""НаСкладах"" КАК СписаноИз,
	|	Источник.Организация КАК Организация,
	|	Источник.Номенклатура,
	|	Источник.Склад,
	|	Источник.ХарактеристикаНоменклатуры,
	|	Источник.СерияНоменклатуры,
	|	Источник.ДокументОприходования,
	|	Источник.Заказ,
	|	СУММА(Источник.Количество) КАК Количество,
	|	СУММА(Источник.Стоимость) КАК Стоимость,
	|	0 КАК СтоимостьПоступление,
	|	NULL КАК ДокументПередачи,
	|	NULL КАК ДоговорКонтрагента,
	|	Источник.КодОперации КАК КодОперацииПартииТоваров,
	|	Источник.Качество,
	|	БракВПроизводстве.Продукция,
	|	Источник.СчетУчета КАК СчетУчетаМУ,
	|	Источник.КорСчет КАК КорСчетМУ,
	|	Источник.КорСубконто1 КАК КорСубконтоМУ1,
	|	Источник.КорСубконто2 КАК КорСубконтоМУ2,
	|	Источник.КорСубконто3 КАК КорСубконтоМУ3,
	|	ВЫБОР
	|		КОГДА (НЕ Затраты.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА Затраты.СтатьяЗатрат
	|		КОГДА (НЕ НЗП.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА НЗП.СтатьяЗатрат
	|		КОГДА (НЕ БракВПроизводстве.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.СтатьяЗатрат
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтатьяЗатрат,
	|	ВЫБОР
	|		КОГДА (НЕ Затраты.Подразделение ЕСТЬ NULL )
	|			ТОГДА Затраты.Подразделение
	|		КОГДА (НЕ НЗП.Подразделение ЕСТЬ NULL )
	|			ТОГДА НЗП.Подразделение
	|		КОГДА (НЕ БракВПроизводстве.Подразделение ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА НЗП.НоменклатурнаяГруппа
	|		КОГДА (НЕ Затраты.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА Затраты.НоменклатурнаяГруппа
	|		КОГДА (НЕ БракВПроизводстве.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.НоменклатурнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НоменклатурнаяГруппа,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.Заказ ЕСТЬ NULL )
	|			ТОГДА НЗП.Заказ
	|		КОГДА (НЕ Затраты.Заказ ЕСТЬ NULL )
	|			ТОГДА Затраты.Заказ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ЗаказСписания,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвижения
	|		ИНАЧЕ Источник.Регистратор
	|	КОНЕЦ КАК Регистратор,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвиженияПериод
	|		ИНАЧЕ Источник.Период
	|	КОНЕЦ КАК Период,
	|	БракВПроизводстве.ХарактеристикаПродукции КАК ХарактеристикаНоменклатурыНовая,
	|	БракВПроизводстве.СерияПродукции КАК СерияНоменклатурыНовая,
	|	Источник.Номенклатура.ВестиПартионныйУчетПоСериям КАК ВестиПартионныйУчетПоСериям,
	|	НЕОПРЕДЕЛЕНО КАК ФизЛицо,
	|	НЕОПРЕДЕЛЕНО КАК НазначениеИспользования,
	|	ЕСТЬNULL(НЗП.СерияЗатраты, НЕОПРЕДЕЛЕНО) КАК СерияНоменклтатурыНЗП,
	|	Источник.НомерСтрокиСписанныхТоваров КАК НомерСтрокиСписанныхТоваров
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладахМеждународныйУчет КАК Источник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗатратыМеждународныйУчет КАК Затраты
	|		ПО Источник.Регистратор = Затраты.Регистратор
	|			И Источник.НомерКорСтроки = Затраты.НомерСтроки
	|			И Источник.КорСчет = Затраты.СчетУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НезавершенноеПроизводствоМеждународныйУчет КАК НЗП
	|		ПО Источник.Регистратор = НЗП.Регистратор
	|			И Источник.НомерКорСтроки = НЗП.НомерСтроки
	|			И Источник.КорСчет = НЗП.СчетУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.БракВПроизводствеМеждународныйУчет КАК БракВПроизводстве
	|		ПО Источник.Регистратор = БракВПроизводстве.Регистратор
	|			И Источник.НомерКорСтроки = БракВПроизводстве.НомерСтроки
	|			И Источник.КорСчет = БракВПроизводстве.СчетУчета
	|ГДЕ
	|	Источник.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И Источник.ВидДвижения = &ВидДвиженияРасход
	|	И Источник.КодОперации В(&КодыСписание)
	|
	|СГРУППИРОВАТЬ ПО
	|	Источник.Номенклатура,
	|	Источник.Склад,
	|	Источник.ХарактеристикаНоменклатуры,
	|	Источник.СерияНоменклатуры,
	|	Источник.ДокументОприходования,
	|	Источник.Заказ,
	|	Источник.КодОперации,
	|	Источник.Качество,
	|	БракВПроизводстве.Продукция,
	|	Источник.Организация,
	|	Источник.СчетУчета,
	|	Источник.КорСчет,
	|	Источник.КорСубконто1,
	|	Источник.КорСубконто2,
	|	Источник.КорСубконто3,
	|	ВЫБОР
	|		КОГДА (НЕ Затраты.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА Затраты.СтатьяЗатрат
	|		КОГДА (НЕ НЗП.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА НЗП.СтатьяЗатрат
	|		КОГДА (НЕ БракВПроизводстве.СтатьяЗатрат ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.СтатьяЗатрат
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ Затраты.Подразделение ЕСТЬ NULL )
	|			ТОГДА Затраты.Подразделение
	|		КОГДА (НЕ НЗП.Подразделение ЕСТЬ NULL )
	|			ТОГДА НЗП.Подразделение
	|		КОГДА (НЕ БракВПроизводстве.Подразделение ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА НЗП.НоменклатурнаяГруппа
	|		КОГДА (НЕ Затраты.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА Затраты.НоменклатурнаяГруппа
	|		КОГДА (НЕ БракВПроизводстве.НоменклатурнаяГруппа ЕСТЬ NULL )
	|			ТОГДА БракВПроизводстве.НоменклатурнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ НЗП.Заказ ЕСТЬ NULL )
	|			ТОГДА НЗП.Заказ
	|		КОГДА (НЕ Затраты.Заказ ЕСТЬ NULL )
	|			ТОГДА Затраты.Заказ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвижения
	|		ИНАЧЕ Источник.Регистратор
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвиженияПериод
	|		ИНАЧЕ Источник.Период
	|	КОНЕЦ,
	|	БракВПроизводстве.ХарактеристикаПродукции,
	|	БракВПроизводстве.СерияПродукции,
	|	Источник.Номенклатура.ВестиПартионныйУчетПоСериям,
	|	ЕСТЬNULL(НЗП.СерияЗатраты, НЕОПРЕДЕЛЕНО),
	|	Источник.НомерСтрокиСписанныхТоваров
	|
	|ИМЕЮЩИЕ
	|	СУММА(Источник.Количество) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Переданные"",
	|	Источник.Организация,
	|	Источник.Номенклатура,
	|	NULL,
	|	Источник.ХарактеристикаНоменклатуры,
	|	NULL,
	|	Источник.ДокументОприходования,
	|	NULL,
	|	СУММА(Источник.Количество),
	|	СУММА(Источник.Стоимость),
	|	0,
	|	Источник.ДокументПередачи,
	|	Источник.ДоговорКонтрагента,
	|	Источник.КодОперации,
	|	NULL,
	|	NULL,
	|	Источник.СчетУчета,
	|	Источник.КорСчет,
	|	Источник.КорСубконто1,
	|	Источник.КорСубконто2,
	|	Источник.КорСубконто3,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвижения
	|		ИНАЧЕ Источник.Регистратор
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвиженияПериод
	|		ИНАЧЕ Источник.Период
	|	КОНЕЦ,
	|	NULL,
	|	NULL,
	|	Источник.Номенклатура.ВестиПартионныйУчетПоСериям,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрНакопления.ПартииТоваровПереданныеМеждународныйУчет КАК Источник
	|ГДЕ
	|	Источник.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И Источник.ВидДвижения = &ВидДвиженияРасход
	|	И Источник.КодОперации В(&КодыСписание)
	|
	|СГРУППИРОВАТЬ ПО
	|	Источник.Номенклатура,
	|	Источник.ХарактеристикаНоменклатуры,
	|	Источник.ДокументОприходования,
	|	Источник.ДокументПередачи,
	|	Источник.ДоговорКонтрагента,
	|	Источник.КодОперации,
	|	Источник.СчетУчета,
	|	Источник.Организация,
	|	Источник.КорСчет,
	|	Источник.КорСубконто1,
	|	Источник.КорСубконто2,
	|	Источник.КорСубконто3,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвижения
	|		ИНАЧЕ Источник.Регистратор
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Источник.ДокументДвижения <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Источник.ДокументДвиженияПериод
	|		ИНАЧЕ Источник.Период
	|	КОНЕЦ,
	|	Источник.Номенклатура.ВестиПартионныйУчетПоСериям
	|
	|ИМЕЮЩИЕ
	|	СУММА(Источник.Количество) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Регистратор";*/
			/*//Добавим дополнительный отбор по счету
*/
			/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "ГДЕ", "ГДЕ (НЕ Источник.СчетУчета В (&СписокИсключаемыхСчетовУчета)) И ");*/
			/*Запрос.УстановитьПараметр("СписокИсключаемыхСчетовУчета",ПолучитьМассивИсключаемыхСчетов());*/
			/*// Если задана организация, отбор по организации 
*/
			if(true/*ЗначениеЗаполнено(Организация)*/)
			{
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "ГДЕ", "ГДЕ Источник.Организация = &Организация И ");*/
				/*Запрос.УстановитьПараметр("Организация", Организация);*/
			}
			/*// Добавим дополнительный отбор по номенклатуре
*/
			if(true/*МассивНоменклатуры <> Неопределено*/)
			{
				/*ТекстОграничениеНаПартии = "";*/
				if(true/*ЗначениеЗаполнено(Организация)*/)
				{
					/*СпособОценкиМПЗ = ВРег(Строка(УправлениеЗапасамиПартионныйУчет.ПолучитьПараметрУчетнойПолитикиПартионногоУчета("СпособОценкиМПЗ", "Меж", ДопПараметры)));*/
					if(true/*СпособОценкиМПЗ = "ФИФО" 
				ИЛИ СпособОценкиМПЗ = "ЛИФО"*/)
					{
						/*ТекстОграничениеНаПартии = " И Источник.ДокументОприходования В (&МассивДокументовОприходования) ";*/
					}
				}
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "ГДЕ", "ГДЕ Источник.Номенклатура В (&МассивНоменклатуры)
		|	" + ТекстОграничениеНаПартии + " И ");*/
			}
			/*// Встречный выпуск
*/
			if(true/*ДопПараметры.ВстречныйВыпуск*/)
			{
				/*КодыОпераций = Перечисления.КодыОперацийПартииТоваров;*/
				/*Запрос.Текст = СтрЗаменить(Запрос.Текст, "ГДЕ",
			" ГДЕ НЕ ( 1 В
			|	(ВЫБРАТЬ Первые 1
			|		1
			|	ИЗ
			|		РегистрСведений.КорректировкаВстречногоВыпускаПродукции КАК КорректировкаВстречногоВыпускаПродукции
			|	ГДЕ
			|		Источник.НомерСтрокиСписанныхТоваров = КорректировкаВстречногоВыпускаПродукции.НомерСтрокиСписанныхТоваров
			|		" + ДобавитьОтборПоВидуУчета("КорректировкаВстречногоВыпускаПродукции","Меж") + "
			|		И Источник.Регистратор = КорректировкаВстречногоВыпускаПродукции.Документ))
			| И");*/
				/*Запрос.УстановитьПараметр("СписаниеПартийВПроизводствоОперативно",КодыОпераций.СписаниеПартийВПроизводствоОперативно);*/
			}
		}
	}
}

