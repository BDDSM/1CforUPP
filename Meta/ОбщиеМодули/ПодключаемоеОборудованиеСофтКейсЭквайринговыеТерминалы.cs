using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace V82.ОбщиеМодули
{
	public partial class ПодключаемоеОборудованиеСофтКейсЭквайринговыеТерминалы
	{
		///////////////////////////////////////////////////////////////////////////////
		// ПРОГРАММНЫЙ ИНТЕРФЕЙС
		// Функция осуществляет подключение устройства.
		//
		// Параметры:
		//  ОбъектДрайвера   - <*>
		//           - ОбъектДрайвера драйвера торгового оборудования.
		//
		// Возвращаемое значение:
		//  <Булево> - Результат работы функции.
		//

		public object ПодключитьУстройство(/*ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры*/)
		{
			/*Результат = Истина;*/
			/*ВыходныеПараметры = Новый Массив();*/
			/*// Проверка настроенных параметров
*/
			/*ШиринаСлипЧека          = Неопределено;*/
			/*КоличествоКопийСлипчека = Неопределено;*/
			/*ДанныеМакетаСлипЧека    = Неопределено;*/
			/*Параметры.Свойство("ШиринаСлипЧека",          ШиринаСлипЧека);*/
			/*Параметры.Свойство("КоличествоКопийСлипчека", КоличествоКопийСлипчека);*/
			/*Параметры.Свойство("ДанныеМакетаСлипЧека",    ДанныеМакетаСлипЧека);*/
			if(true/*ШиринаСлипЧека          = Неопределено
	 Или КоличествоКопийСлипчека = Неопределено
	 Или ДанныеМакетаСлипЧека    = Неопределено*/)
			{
				/*ВыходныеПараметры.Добавить(999);*/
				/*ВыходныеПараметры.Добавить(НСтр("ru='Не настроены параметры устройства.
		|Для корректной работы устройства необходимо задать параметры его работы.
		|Сделать это можно при помощи формы ""Настройка параметров"" модели
		|подключаемого оборудования в форме ""Подключение и настройка оборудования"".'"));*/
				/*Результат = Ложь;*/
			}
			/*// Конец: Проверка настроенных параметров
*/
			if(true/*Результат*/)
			{
				/*ПараметрыПодключения.Вставить("ТипТранзакции", "");*/
				/*ПараметрыПодключения.Вставить("НомерКарты", "");*/
				/*ПараметрыПодключения.Вставить("НомерЧека", "");*/
				/*ПараметрыПодключения.Вставить("СсылочныйНомер", "");*/
			}
			return null;
		}
		// Функция осуществляет отключение устройства.
		//
		// Параметры:
		//  ОбъектДрайвера - <*>
		//         - ОбъектДрайвера драйвера торгового оборудования.
		//
		// Возвращаемое значение:
		//  <Булево> - Результат работы функции.
		//

		public object ОтключитьУстройство(/*ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры*/)
		{
			/*Результат = Истина;*/
			/*ВыходныеПараметры = Новый Массив();*/
			return null;
		}
		// Функция получает, обрабатывает и перенаправляет на исполнение команду к драйверу
		//

		public object ВыполнитьКоманду(/*Команда, ВходныеПараметры = Неопределено, ВыходныеПараметры = Неопределено,
                         ОбъектДрайвера, Параметры, ПараметрыПодключения*/)
		{
			/*Результат = Истина;*/
			/*ВыходныеПараметры = Новый Массив();*/
			/*// Оплата платежной картой
*/
			if(true/*Команда = "AuthorizeSales"*/)
			{
				/*Сумма      = ВходныеПараметры[0];*/
				/*НомерКарты = ВходныеПараметры[1];*/
				/*Результат = ОплатитьПлатежнойКартой(ОбъектДрайвера, Параметры, ПараметрыПодключения,
		                                    Сумма, НомерКарты, ВыходныеПараметры);*/
				/*// Возрат платежа
*/
			}
			return null;
		}
		///////////////////////////////////////////////////////////////////////////////
		// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
		// Функция осуществляет авторизацию (оплату) по карте.
		//

		public object ОплатитьПлатежнойКартой(/*ОбъектДрайвера, Параметры, ПараметрыПодключения,
                                Сумма, НомерКарты, ВыходныеПараметры*/)
		{
			/*Результат = Истина;*/
			/*СсылочныйНомер = "";*/
			/*НомерЧека      = "";*/
			/*ПараметрыПодключения.ТипТранзакции = НСтр("ru='Оплатить'");*/
			/*УстановитьПараметрыДрайвера(ОбъектДрайвера, Параметры);*/
			/*// Преобразование номера карты в код карты и срок действия
*/
			/*КодКарты = "";*/
			/*//СрокДействия = "";
*/
			/*//Если Не ПустаяСтрока(НомерКарты) Тогда
*/
			/*//	ПозицияРазделителя = Найти(НомерКарты, "=");
*/
			/*//	Если ПозицияРазделителя > 0 Тогда
*/
			/*//		КодКарты     = Лев(НомерКарты, ПозицияРазделителя - 1);
*/
			/*//		СрокДействия = Сред(НомерКарты, ПозицияРазделителя + 1, 4);
*/
			/*//		ОбъектДрайвера.ПОЛЕДАТАИСТЕЧЕНИЯ = СрокДействия;
*/
			/*//	Иначе
*/
			/*//		ВыходныеПараметры.Добавить(999);
*/
			/*//		ВыходныеПараметры.Добавить(НСтр("ru='Указан неверный номер карты.'"));
*/
			/*//		Результат = Ложь;
*/
			/*//	КонецЕсли;
*/
			/*//КонецЕсли;
*/
			if(true/*Результат*/)
			{
				/*СуммаВременная = Сумма * 100;*/
				/*Ответ = ОбъектДрайвера.ОплатитьПлатежнойКартой(КодКарты,
		                                               СуммаВременная,
		                                               СсылочныйНомер,
		                                               НомерЧека);*/
				if(true/*Не Ответ*/)
				{
					/*ПараметрыПодключения.ТипТранзакции = "Отказ";*/
					/*ВыходныеПараметры.Добавить(999);*/
					/*ВыходныеПараметры.Добавить(ОбъектДрайвера.ПОЛЕТЕКСТОТВЕТА);*/
					/*КодОперации = ОбъектДрайвера.ПолучитьОшибку(ВыходныеПараметры[1]);*/
					/*ВыходныеПараметры[0] = КодОперации;*/
					/*Результат = Ложь;*/
				}
			}
			return null;
		}
		// Функция осуществляет возврат платежа по карте.
		//

		public object ВернутьПлатежПоПлатежнойКарте(/*ОбъектДрайвера, Параметры, ПараметрыПодключения,
                                      Сумма, НомерКарты, СсылочныйНомер, НомерЧека, ВыходныеПараметры*/)
		{
			/*Результат = Истина;*/
			/*//СсылочныйНомер = Неопределено;
*/
			/*//НомерЧека      = Неопределено;
*/
			/*ПараметрыПодключения.ТипТранзакции = НСтр("ru='Вернуть платеж'");*/
			/*УстановитьПараметрыДрайвера(ОбъектДрайвера, Параметры);*/
			/*// Преобразование номера карты в код карты и срок действия
*/
			/*КодКарты = "";*/
			/*//СрокДействия = "";
*/
			/*//Если Не ПустаяСтрока(НомерКарты) Тогда
*/
			/*//	ПозицияРазделителя = Найти(НомерКарты, "=");
*/
			/*//	Если ПозицияРазделителя > 0 Тогда
*/
			/*//		КодКарты     = Лев(НомерКарты, ПозицияРазделителя - 1);
*/
			/*//		СрокДействия = Сред(НомерКарты, ПозицияРазделителя + 1, 4);
*/
			/*//		ОбъектДрайвера.ПОЛЕДАТАИСТЕЧЕНИЯ = СрокДействия;
*/
			/*//	Иначе
*/
			/*//		ВыходныеПараметры.Добавить(999);
*/
			/*//		ВыходныеПараметры.Добавить(НСтр("ru='Указан неверный номер карты.'"));
*/
			/*//		Результат = Ложь;
*/
			/*//	КонецЕсли;
*/
			/*//КонецЕсли;
*/
			if(true/*Результат*/)
			{
				/*СуммаВременная = Сумма * 100;*/
				/*Ответ = ОбъектДрайвера.ВернутьПлатежПоПлатежнойКарте(КодКарты,
		                                                     СуммаВременная,
		                                                     СсылочныйНомер,
		                                                     НомерЧека);*/
				if(true/*Не Ответ*/)
				{
					/*ПараметрыПодключения.ТипТранзакции = "Отказ";*/
					/*ВыходныеПараметры.Добавить(999);*/
					/*ВыходныеПараметры.Добавить("");*/
					/*КодОперации = ОбъектДрайвера.ПолучитьОшибку(ВыходныеПараметры[1]);*/
					/*Результат = Ложь;*/
				}
			}
			return null;
		}
		// Функция осуществляет отмену платежа по карте.
		//

		public object ОтменитьПлатежПоПлатежнойКарте(/*ОбъектДрайвера, Параметры, ПараметрыПодключения,
                                      Сумма, СсылочныйНомер, НомерЧека, ВыходныеПараметры*/)
		{
			/*Результат = Истина;*/
			/*СсылочныйНомер = Неопределено;*/
			/*НомерЧека      = Неопределено;*/
			/*НомерКарты 	   = "";*/
			/*ПараметрыПодключения.ТипТранзакции = НСтр("ru='Отменить платеж'");*/
			/*УстановитьПараметрыДрайвера(ОбъектДрайвера, Параметры);*/
			if(true/*Результат*/)
			{
				/*СуммаВременная = Сумма * 100;*/
				/*Ответ = ОбъектДрайвера.ОтменитьПлатежПоПлатежнойКарте(НомерКарты,
		                                                       СуммаВременная,
		                                                       СсылочныйНомер);*/
				if(true/*Не Ответ*/)
				{
					/*ПараметрыПодключения.ТипТранзакции = "Отказ";*/
					/*ВыходныеПараметры.Добавить(999);*/
					/*ВыходныеПараметры.Добавить("");*/
					/*КодОперации = ОбъектДрайвера.ПолучитьОшибку(ВыходныеПараметры[1]);*/
					/*Результат = Ложь;*/
				}
			}
			return null;
		}
		// Функция осуществляет аварийную отмену операции по карте.
		//

		public object АварийнаяОтменаОперации(/*ОбъектДрайвера, Параметры, ПараметрыПодключения,
                                Сумма, СсылочныйНомер, НомерЧека, ВыходныеПараметры*/)
		{
			/*Результат = Истина;*/
			/*УстановитьПараметрыДрайвера(ОбъектДрайвера, Параметры);*/
			/*//ОбъектДрайвера.ИдентификаторОперацииНаТерминале = ПараметрыПодключения.КодОригинальнойТранзакции;
*/
			/*СуммаВременная = Сумма * 100;*/
			/*Ответ = ОбъектДрайвера.АварийнаяОтменаОперации("", СуммаВременная * 100, СсылочныйНомер, НомерЧека);*/
			if(true/*Не Ответ*/)
			{
				/*ВыходныеПараметры.Добавить(999);*/
				/*ВыходныеПараметры.Добавить("");*/
				/*КодОперации = ОбъектДрайвера.ПолучитьОшибку(ВыходныеПараметры[1]);*/
				/*Результат = Ложь;*/
			}
			return null;
		}
		// Функция осуществляет сверку итогов по картам.
		//

		public object ИтогиДняПоКартам(/*ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры*/)
		{
			/*Результат = Истина;*/
			/*Ответ     = Неопределено;*/
			/*ПараметрыПодключения.ТипТранзакции = НСтр("ru='Сверка итогов'");*/
			/*УстановитьПараметрыДрайвера(ОбъектДрайвера, Параметры);*/
			/*Ответ = ОбъектДрайвера.ИтогиДняПоКартам();*/
			if(true/*Не Ответ*/)
			{
				/*ВыходныеПараметры.Добавить(999);*/
				/*ВыходныеПараметры.Добавить("");*/
				/*ОбъектДрайвера.ПолучитьОшибку(ВыходныеПараметры[1]);*/
				/*Результат = Ложь;*/
			}
			return null;
		}
		// Функция осуществляет преавторизацию по карте.
		//

		public object ПреавторизоватьПоПлатежнойКарте(/*ОбъектДрайвера, Параметры, ПараметрыПодключения,
                                        Сумма, НомерКарты, ВыходныеПараметры*/)
		{
			/*Результат = Истина;*/
			/*СсылочныйНомер = Неопределено;*/
			/*НомерЧека      = Неопределено;*/
			/*ПараметрыПодключения.ТипТранзакции = НСтр("ru='Преавторизовать платеж'");*/
			/*УстановитьПараметрыДрайвера(ОбъектДрайвера, Параметры);*/
			/*// Преобразование номера карты в код карты и срок действия
*/
			/*КодКарты = "";*/
			/*//СрокДействия = "";
*/
			/*//Если Не ПустаяСтрока(НомерКарты) Тогда
*/
			/*//	ПозицияРазделителя = Найти(НомерКарты, "=");
*/
			/*//	Если ПозицияРазделителя > 0 Тогда
*/
			/*//		КодКарты     = Лев(НомерКарты, ПозицияРазделителя - 1);
*/
			/*//		СрокДействия = Сред(НомерКарты, ПозицияРазделителя + 1, 4);
*/
			/*//		ОбъектДрайвера.ПОЛЕДАТАИСТЕЧЕНИЯ = СрокДействия;
*/
			/*//	Иначе
*/
			/*//		ВыходныеПараметры.Добавить(999);
*/
			/*//		ВыходныеПараметры.Добавить(НСтр("ru='Указан неверный номер карты.'"));
*/
			/*//		Результат = Ложь;
*/
			/*//	КонецЕсли;
*/
			/*//КонецЕсли;
*/
			if(true/*Результат*/)
			{
				/*СуммаВременная = Сумма * 100;*/
				/*Ответ = ОбъектДрайвера.ПреавторизацияПоПлатежнойКарте(КодКарты,
		                                                      СуммаВременная,
		                                                      СсылочныйНомер,
		                                                      НомерЧека);*/
				if(true/*Не Ответ*/)
				{
					/*ПараметрыПодключения.ТипТранзакции = "Отказ";*/
					/*ВыходныеПараметры.Добавить(999);*/
					/*ВыходныеПараметры.Добавить("");*/
					/*КодОперации = ОбъектДрайвера.ПолучитьОшибку(ВыходныеПараметры[1]);*/
					/*Результат = Ложь;*/
				}
			}
			return null;
		}
		// Функция осуществляет завершение преавторизации по карте.
		//

		public object ЗавершитьПреавторизациюПоПлатежнойКарте(/*ОбъектДрайвера, Параметры, ПараметрыПодключения,
                                                Сумма, НомерКарты, СсылочныйНомер, НомерЧека, ВыходныеПараметры*/)
		{
			/*Результат = Истина;*/
			/*ПараметрыПодключения.ТипТранзакции = НСтр("ru='Завершить преавторизацию'");*/
			/*УстановитьПараметрыДрайвера(ОбъектДрайвера, Параметры);*/
			/*// Преобразование номера карты в код карты и срок действия
*/
			/*КодКарты = "";*/
			/*//СрокДействия = "";
*/
			/*//Если Не ПустаяСтрока(НомерКарты) Тогда
*/
			/*//	ПозицияРазделителя = Найти(НомерКарты, "=");
*/
			/*//	Если ПозицияРазделителя > 0 Тогда
*/
			/*//		КодКарты     = Лев(НомерКарты, ПозицияРазделителя - 1);
*/
			/*//		СрокДействия = Сред(НомерКарты, ПозицияРазделителя + 1, 4);
*/
			/*//		ОбъектДрайвера.ПОЛЕДАТАИСТЕЧЕНИЯ = СрокДействия;
*/
			/*//	Иначе
*/
			/*//		ВыходныеПараметры.Добавить(999);
*/
			/*//		ВыходныеПараметры.Добавить(НСтр("ru='Указан неверный номер карты.'"));
*/
			/*//		Результат = Ложь;
*/
			/*//	КонецЕсли;
*/
			/*//КонецЕсли;
*/
			if(true/*Результат*/)
			{
				/*СуммаВременная = Сумма * 100;*/
				/*Ответ = ОбъектДрайвера.ЗавершениеПреавторизацииПоПлатежнойКарте(КодКарты,
		                                                                СуммаВременная,
		                                                                СсылочныйНомер,
		                                                                НомерЧека);*/
				if(true/*Не Ответ*/)
				{
					/*ПараметрыПодключения.ТипТранзакции = "Отказ";*/
					/*ВыходныеПараметры.Добавить(999);*/
					/*ВыходныеПараметры.Добавить("");*/
					/*КодОперации = ОбъектДрайвера.ПолучитьОшибку(ВыходныеПараметры[1]);*/
					/*Результат = Ложь;*/
				}
			}
			return null;
		}
		// Функция осуществляет отмену преавторизации по карте.
		//

		public object ОтменитьПреавторизациюПоПлатежнойКарте(/*ОбъектДрайвера, Параметры, ПараметрыПодключения,
                                               Сумма, НомерКарты, СсылочныйНомер, НомерЧека, ВыходныеПараметры*/)
		{
			/*Результат = Истина;*/
			/*ПараметрыПодключения.ТипТранзакции = НСтр("ru='Отменить преавторизацию'");*/
			/*УстановитьПараметрыДрайвера(ОбъектДрайвера, Параметры);*/
			/*// Преобразование номера карты в код карты и срок действия
*/
			/*КодКарты = "";*/
			/*//СрокДействия = "";
*/
			/*//Если Не ПустаяСтрока(НомерКарты) Тогда
*/
			/*//	ПозицияРазделителя = Найти(НомерКарты, "=");
*/
			/*//	Если ПозицияРазделителя > 0 Тогда
*/
			/*//		КодКарты     = Лев(НомерКарты, ПозицияРазделителя - 1);
*/
			/*//		СрокДействия = Сред(НомерКарты, ПозицияРазделителя + 1, 4);
*/
			/*//		ОбъектДрайвера.ПОЛЕДАТАИСТЕЧЕНИЯ = СрокДействия;
*/
			/*//	Иначе
*/
			/*//		ВыходныеПараметры.Добавить(999);
*/
			/*//		ВыходныеПараметры.Добавить(НСтр("ru='Указан неверный номер карты.'"));
*/
			/*//		Результат = Ложь;
*/
			/*//	КонецЕсли;
*/
			/*//КонецЕсли;
*/
			if(true/*Результат*/)
			{
				/*СуммаВременная = Сумма * 100;*/
				/*Ответ = ОбъектДрайвера.ОтменитьПреавторизациюПоПлатежнойКарте(КодКарты,
		                                                              СуммаВременная,
		                                                              СсылочныйНомер);*/
				if(true/*Не Ответ*/)
				{
					/*ПараметрыПодключения.ТипТранзакции = "Отказ";*/
					/*ВыходныеПараметры.Добавить(999);*/
					/*ВыходныеПараметры.Добавить("");*/
					/*КодОперации = ОбъектДрайвера.ПолучитьОшибку(ВыходныеПараметры[1]);*/
					/*Результат = Ложь;*/
				}
			}
			return null;
		}
		// Функция осуществляет тестирование устройства.
		//

		public object ТестУстройства(/*ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры*/)
		{
			/*Результат = Истина;*/
			/*РезультатТеста = "";*/
			/*УстановитьПараметрыДрайвера(ОбъектДрайвера, Параметры);*/
			/*Результат = ОбъектДрайвера.ТестУстройства(РезультатТеста);*/
			/*ВыходныеПараметры.Добавить(?(Результат, 0, 999));*/
			/*ВыходныеПараметры.Добавить(РезультатТеста);*/
			return null;
		}
		// Функция возвращает версию установленного драйвера
		//

		public object ПолучитьВерсиюДрайвера(/*ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры*/)
		{
			/*Результат = Истина;*/
			/*ВыходныеПараметры.Добавить(НСтр("ru='Установлен'"));*/
			/*ВыходныеПараметры.Добавить(НСтр("ru='Не определена'"));*/
			/*Попытка
		ВыходныеПараметры[1] = ОбъектДрайвера.ПолучитьНомерВерсии();*/
			/*Исключение
	КонецПопытки;*/
			return null;
		}
		// Заполняет массив строками слип-чека для последующей печати на ФР
		//

		public object ПолучитьСтрокиСлипЧека(/*ОбъектДрайвера, Параметры, ПараметрыПодключения, СлипЧек, ВыходныеПараметры*/)
		{
			/*Результат = Истина;*/
			/*ИмяМакета    = "СлипЧекСофткейс";*/
			if(true/*ПараметрыПодключения.ТипТранзакции = "Оплатить"
	 Или ПараметрыПодключения.ТипТранзакции = "Вернуть платеж"
	 Или ПараметрыПодключения.ТипТранзакции = "Отменить платеж"
	 Или ПараметрыПодключения.ТипТранзакции = "Преавторизовать платеж"
	 Или ПараметрыПодключения.ТипТранзакции = "Завершить преавторизацию"
	 Или ПараметрыПодключения.ТипТранзакции = "Отменить преавторизацию"*/)
			{
				/*ОбластьПараметры = Новый Структура();*/
				/*// Параметры устанавливаемые пользователем
*/
				/*ОбластьПараметры.Вставить("Банк"       , Параметры.ДанныеМакетаСлипЧека[0].Значение);*/
				/*ОбластьПараметры.Вставить("Организация", Параметры.ДанныеМакетаСлипЧека[1].Значение);*/
				/*ОбластьПараметры.Вставить("Город"      , Параметры.ДанныеМакетаСлипЧека[2].Значение);*/
				/*ОбластьПараметры.Вставить("Адрес"      , Параметры.ДанныеМакетаСлипЧека[3].Значение);*/
				/*// Параметры поставляемые драйвером
*/
				/*ОбластьПараметры.Вставить("TID"        	, ОбъектДрайвера.ПОЛЕНОМЕРТЕРМИНАЛА);*/
				/*ДатаВремя = Дата("20"+ОбъектДрайвера.ПОЛЕВРЕМЯТРАНЗАКЦИИ);*/
				/*ОбластьПараметры.Вставить("Дата"        , Формат(ДатаВремя, "ДФ=dd.MM.yy"));*/
				/*ОбластьПараметры.Вставить("Время"       , Формат(ДатаВремя, "ДФ=HH:mm"));*/
				if(true/*ПараметрыПодключения.ТипТранзакции = "Оплатить"*/)
				{
					/*ОбластьПараметры.Вставить("Операция", "ОПЛАТА");*/
				}
				/*ОбластьПараметры.Вставить("Сумма",
		                          Формат(?(ПустаяСтрока(ОбъектДрайвера.ПОЛЕСУММА), 0, Число(ОбъектДрайвера.ПОЛЕСУММА)),
		                                 "ЧЦ=15; ЧДЦ=2; ЧС=2; ЧРГ=' '; ЧГ=3,0")
		                         + " "
		                         + "руб.");*/
				/*ОбластьПараметры.Вставить("НомерКарты",	ПараметрыПодключения.НомерКарты);*/
				/*ОбластьПараметры.Вставить("КодRRN",		ПараметрыПодключения.СсылочныйНомер);*/
				/*ОбластьПараметры.Вставить("НомерТранзакции", 		ОбъектДрайвера.ПОЛЕНОМЕРТРАНЗАКЦИИ);*/
				/*ОбластьПараметры.Вставить("КодАвторизации", 		ОбъектДрайвера.ПОЛЕАВТОРИЗАЦИОННЫЙКОД);*/
				/*ОбластьПараметры.Вставить("КодОтвета", 				ОбъектДрайвера.ПОЛЕКОДОТВЕТА);*/
				/*ОбластьПараметры.Вставить("ОписаниеОтветаХоста", 	ОбъектДрайвера.ПОЛЕТЕКСТОТВЕТА);*/
				/*ОбластьПараметры.Вставить("ТекстПодвала", Параметры.ДанныеМакетаСлипЧека[4].Значение);*/
				if(true/*Сред(ОбъектДрайвера.ПОЛЕПЕМ, 2, 1) = "1"*/)
				{
					/*// Признак ввода ПИН
*/
					/*АвторизацияПИН = Истина;*/
					/*ОбластьПараметры.Вставить("ИмяДержателяКарты", 	ОбъектДрайвера.ПОЛЕВЛАДЕЛЕЦКАРТЫ);*/
					/*ОбластьПараметры.Вставить("Сертификат", 		ОбъектДрайвера.ПОЛЕСЕРТИФИКАТТРАНЗАКЦИИ);*/
					/*ОбластьПараметры.Вставить("AID", 				ОбъектДрайвера.ПОЛЕАИД);*/
					/*ОбластьПараметры.Вставить("ТипКарты", 			ОбъектДрайвера.ПОЛЕМЕТКАПРИЛОЖЕНИЯ);*/
				}
				/*СлипЧек =
		   МенеджерОборудованияКлиент.ПолучитьСлипЧек(ИмяМакета, Параметры.ШиринаСлипЧека, ОбластьПараметры, АвторизацияПИН);*/
			}
			if(true/*Результат*/)
			{
				/*КопииСлипЧека = "";*/
				/*СлипЧек = КопииСлипЧека;*/
			}
			return null;
		}
		// Установить параметры драйвера
		//

		public void УстановитьПараметрыДрайвера(/*ОбъектДрайвера, Параметры*/)
		{
			/*//// Параметры системы
*/
			/*//ОбъектДрайвера.АдресСервераАвторизации   = Параметры.АдресСА;
*/
			/*//ОбъектДрайвера.ПортСервераАвторизации    = Параметры.ПортСА;
*/
			/*//ОбъектДрайвера.СкриптX25                 = Параметры.СкриптX25;
*/
			/*//ОбъектДрайвера.ТаймаутACK                = Параметры.ТаймаутACK;
*/
			/*//ОбъектДрайвера.ТаймаутСервераАвторизации = Параметры.ТаймаутСА;
*/
			/*//ОбъектДрайвера.ЧислоNAK                  = Параметры.ЧислоNAK;
*/
			/*//ОбъектДрайвера.РазмерПакета              = Параметры.РазмерПакета;
*/
			/*//ОбъектДрайвера.ТаймаутОперации           = Параметры.ТаймаутОперации;
*/
			/*//ОбъектДрайвера.АдресКаналаУправления     = Параметры.АдресКУ;
*/
			/*//ОбъектДрайвера.ПортКаналаУправления      = Параметры.ПортКУ;
*/
			/*//ОбъектДрайвера.ТаймаутКаналаУправления   = Параметры.ТаймаутКУ;
*/
			/*//ОбъектДрайвера.COMПортДО                 = Параметры.COMПортДО;
*/
			/*//ОбъектДрайвера.СкоростьОбменаСДО         = Параметры.СкоростьОбменаСДО;
*/
			/*//ОбъектДрайвера.РазмерДанныхДО            = Параметры.РазмерДанныхДО;
*/
			/*//ОбъектДрайвера.ЧетностьДО                = Параметры.ЧетностьДО;
*/
			/*//ОбъектДрайвера.СтопБитыДО                = Параметры.СтопБитыДО;
*/
			/*//ОбъектДрайвера.УправлениеПотокомДО       = Параметры.УправлениеПотокомДО;
*/
			/*//ОбъектДрайвера.ИдентификаторТерминала    = Параметры.ИдентификаторТерминала;
*/
			/*//ОбъектДрайвера.КодВалюты                 = Параметры.КодВалюты;
*/
			/*//ОбъектДрайвера.ВремяОперацииНаТерминале  = Формат(ТекущаяДата(), "ДФ=yyyyMMddЧЧммсс");
*/
		}
	}
}

