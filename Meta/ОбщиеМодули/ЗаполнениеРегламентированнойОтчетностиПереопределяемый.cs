using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace V82.ОбщиеМодули
{
	public partial class ЗаполнениеРегламентированнойОтчетностиПереопределяемый
	{
		////////////////////////////////////////////////////////////////////////////////
		// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
		////////////////////////////////////////////////////////////////////////////////
		// ЭКСПОРТИРУЕМЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
		// Возвращает текст запроса для вычисления УСН
		//
		// Параметры
		//  нет
		//
		// Возвращаемое значение:
		//   строка
		//

		public object ТекстЗапросаУСН(/**/)
		{
			/*// УчетнаяПолитикаНалоговыйУчет
*/
			/*// Таблица ВТУчетнаяПолитикаНалоговыйУчет - это список периодов, когда организация переходила на УСН
*/
			/*// поля:
*/
			/*//		УСН, 
*/
			/*//		Месяц - месяц налогового периода
*/
			/*// Описание:	
*/
			/*//	Выбираем Из Периоды (таблица - список периодов с начала года по текущий период)
*/
			/*//	Внутреннее соединение с "псевдосрезом" последних регистра УчетнаяПолитикаНалоговыйУчет
*/
			/*//	по равенству периодов
*/
			/*//  условие: что организация использует УСН
*/
			/*Возврат 
	"ВЫБРАТЬ
	|	МЕСЯЦ(Периоды.Период) КАК Месяц,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА УчетнаяПолитикаНалоговыйУчет.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Упрощенная)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ, ЛОЖЬ) КАК УСН
	|ПОМЕСТИТЬ ВТУчетнаяПолитикаНалоговыйУчет
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		МАКСИМУМ(УчетнаяПолитикаНалоговыйУчет.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаНалоговыйУчет
	|			ПО Периоды.Период >= УчетнаяПолитикаНалоговыйУчет.Период
	|				И (УчетнаяПолитикаНалоговыйУчет.Организация = &парамГоловнаяОрганизация)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО Периоды.ПериодРегистра = УчетнаяПолитикаНалоговыйУчет.Период
	|			И (УчетнаяПолитикаНалоговыйУчет.Организация = &парамГоловнаяОрганизация)
	|			И (УчетнаяПолитикаНалоговыйУчет.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Упрощенная))";*/
			return null;
		}
		// ТекстПоляУСН()

		public object ТекстЗапросаУСНдляРасшифровки(/**/)
		{
			/*Возврат 
	"ВЫБРАТЬ
	|	УчетнаяПолитикаНалоговыйУчет.Организация
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаНалоговыйУчет
	|ГДЕ
	|	УчетнаяПолитикаНалоговыйУчет.Организация = &Организация
	|	И УчетнаяПолитикаНалоговыйУчет.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Упрощенная)
	|	И УчетнаяПолитикаНалоговыйУчет.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	УчетнаяПолитикаНалоговыйУчетСрезПоследних.Организация
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&НачалоПериода, ) КАК УчетнаяПолитикаНалоговыйУчетСрезПоследних
	|ГДЕ
	|	УчетнаяПолитикаНалоговыйУчетСрезПоследних.Организация = &Организация
	|	И УчетнаяПолитикаНалоговыйУчетСрезПоследних.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Упрощенная)";*/
			return null;
		}
		// ТекстПоляУСН()

		public object ТекстПоляУсловияУСН(/**/)
		{
			//Возврат "УчетнаяПолитикаНалоговыйУчет.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Упрощенная)";
			return null;
		}

		public object ИмяУчетнойПолитики(/**/)
		{
			return null;
		}
		// ИмяУчетнойПолитики()

		public object ИмяУчетнойПолитикиЕСН(/**/)
		{
			return null;
		}
		// ИмяУчетнойПолитики()
		////////////////////////////////////////////////////////////////////////////////
		// ФУНКЦИИ ФОРМЫ 4-ФСС
		// Возвращает текст запроса расчетов с фондом
		//
		// Параметры
		//  нет
		//
		// Возвращаемое значение:
		//   строка
		//

		public object ТекстРасчетовСФСС(/**/)
		{
			/*Возврат
	"ВЫБРАТЬ
	|	МЕСЯЦ(Периоды.Период) КАК Месяц,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС)
	|					ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 1))) * &Делитель КАК НачисленоЗаМесяц,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС)
	|					ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 1))) * &Делитель КАК РасходовЗаМесяц,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС_НСиПЗ)
	|					ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 1))) * &Делитель КАК РасходовНСиПЗ_ЗаМесяц,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС_НСиПЗ)
	|					ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 1))) * &Делитель КАК НачисленоНСиПЗ_ЗаМесяц
	|ПОМЕСТИТЬ ВТОтражениеЗарплатыВРеглУчетеНарастающимИтогом
	|ИЗ
	|	ВТПериоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтражениеЗарплатыВРеглУчете.ОтражениеВУчете КАК ОтражениеЗарплатыВРеглУчетеОтражениеВУчете
	|		ПО (ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.ПериодРегистрации МЕЖДУ &парамНачалоГода И КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ))
	|ГДЕ
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.Организация = &парамОрганизация
	|	И ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.Проведен
	|	И (ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС_НСиПЗ))
	|			ИЛИ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС_НСиПЗ)))
	|
	|СГРУППИРОВАТЬ ПО
	|	МЕСЯЦ(Периоды.Период)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц";*/
			return null;
		}
		// ТекстРасчетовСФСС()
		////////////////////////////////////////////////////////////////////////////////
		// ФУНКЦИИ ФОРМЫ 4а-ФСС
		// Возвращает текст поля запроса для вычисления УСН
		//
		// Параметры
		//  нет
		//
		// Возвращаемое значение:
		//   строка
		//

		public object ТекстПоляУСН4аФСС(/**/)
		{
			//Возврат "ЕСТЬNULL(ВЫБОР КОГДА УчетнаяПолитикаНалоговыйУчет.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Упрощенная) ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ , ЛОЖЬ)";
			return null;
		}
		// ТекстПоляУСН()
		// Возвращает текст дополнительных условий для отбора проводок
		//
		// Параметры
		//  нет
		//
		// Возвращаемое значение:
		//   строка
		//

		public object ТекстПроводок4аФСС(/**/)
		{
			/*Возврат 
	"ВЫБРАТЬ
	|	СУММА(ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма) КАК П000020002003,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ МЕСЯЦ(ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.ПериодРегистрации) В (&Месяц1, &Месяц2, &Месяц3))
	|				ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020002101,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.ПериодРегистрации) = &Месяц1
	|				ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020002301,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.ПериодРегистрации) = &Месяц2
	|				ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020002401,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.ПериодРегистрации) = &Месяц3
	|				ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020002501
	|ИЗ
	|	Документ.ОтражениеЗарплатыВРеглУчете.ОтражениеВУчете КАК ОтражениеЗарплатыВРеглУчетеОтражениеВУчете
	|ГДЕ
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.ПериодРегистрации МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
	|	И ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.Организация = &парамОрганизация
	|	И ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС_ДобровольныеВзносы)
	|	И ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.Проведен";*/
			return null;
		}
		// ТекстОтбораПроводок4аФСС()
		////////////////////////////////////////////////////////////////////////////////
		// РАСШИФРОВКА ОТЧЕТОВ
		// Открывает отчет расшифровку для отчета "Отчет по ПФР"
		//
		// Параметры
		//    Форма - ссылка на форму отчета
		//    Отчет - отчет объект, который расшифровывается
		//

		public void РасшифроватьОтчетПФР(/*Отчет, Форма, Расшифровка, СтандартнаяОбработка*/)
		{
			//ОтчетРасшифровки = Отчеты.АнализНачисленногоЕСН.Создать();
			//ОтчетРасшифровкиФорма = ОтчетРасшифровки.ПолучитьФорму("ФормаОтчета", Форма);
			//ОтчетРасшифровкиФорма.ЭтоОтработкаРасшифровки = истина;
			//Поле         = "";
			//ИмяЯчейки    = "";
			//НомерРаздела = "";
			//НомерСтроки  = "";
			//НомерКолонки = "";
			//Заголовок = "";
			if(true/*Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел2"*/)
			{
				//ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел2.ТекущаяОбласть;
				//ИмяЯчейки	   = ТекущаяОбласть.Имя;
				//НомерРаздела   = "2";
				//НомерТаблицы   = Сред(ИмяЯчейки, 8, 2);
				//НомерСтроки    = Сред(ИмяЯчейки, 10, 2);
				//НомерКолонки   = Прав(ИмяЯчейки, 2);
				if(true/*НомерКолонки = "03" и НомерТаблицы = "04"*/)
				{
				}
				//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "Организация",    Отчет.Организация);
				//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "НеГражданин", истина,  ВидСравненияКомпоновкиДанных.НеРавно);
				//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ИмеетПравоНаПенсию", истина,  ВидСравненияКомпоновкиДанных.Равно);
				//ГруппаИЛИ = ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
				//ГруппаИЛИ.Использование = Истина;
				//ГруппаИЛИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
				//ТиповыеОтчеты.ДобавитьОтбор(ГруппаИЛИ, "ЕСН.НомерСтрокиСтавокФБ", 1);
				//ТиповыеОтчеты.ДобавитьОтбор(ГруппаИЛИ, "ЕСН.НомерСтрокиСтавокФБ", 2);
				//ТиповыеОтчеты.ДобавитьОтбор(ГруппаИЛИ, "ЕСН.НомерСтрокиСтавокФБ", 3);
				//ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Структура.Очистить();
				//ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
				/*// установим период формирования отчета
*/
				if(true/*НомерСтроки = "00"*/)
				{
					//ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
					//ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода",  Отчет.мДатаКонцаПериодаОтчета);
				}
				if(true/*НомерТаблицы = "01"*/)
				{
					//Поле = Поле + "ПФР.БазаПФР";
				}
				if(true/*НомерКолонки = "03"*/)
				{
					//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ВозрастнаяГруппа", "до1967");
				}
				//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "Пояснение", "По данным в учете");
				//ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ПериодРегистрации");
				//ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Сотрудник");
				if(true/*НомерТаблицы = "01"*/)
				{
					//ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ВидРасчета");
				}
				if(true/*Поле = ""*/)
				{
					//Предупреждение("Расшифровка данного раздела не поддерживается");
				}
				//ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетРасшифровки.КомпоновщикНастроек, Поле);
			}
			if(true/*Найти(ИмяЯчейки,"R") > 0*/)
			{
				//Предупреждение("Расшифровка данной ячейки не поддерживается");
			}
			/*// установи отбор, что бы не показывались пустые строки в отчете
*/
			//МассивГруппировокОтчета = ТиповыеОтчеты.ПолучитьПоляГруппировок(ОтчетРасшифровки.КомпоновщикНастроек);
			//Заголовок = ?(Заголовок = "", "Расшифровка отчета ПФР , колонка: " + НомерКолонки + ", номер строки " + НомерТаблицы + НомерСтроки, Заголовок);
			//ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетРасшифровки, Заголовок);
		}
		// Открывает отчет расшифровку для отчета "Сводная карточка по ОПС"
		//
		// Параметры
		//    Форма - ссылка на форму отчета
		//    Отчет - отчет объект, который расшифровывается
		//

		public void РасшифроватьАвансыПФР(/*Отчет, Форма, Расшифровка, СтандартнаяОбработка*/)
		{
			//ОтчетРасшифровки = Отчеты.АнализНачисленногоЕСН.Создать();
			//Поле         = "";
			//ИмяЯчейки    = "";
			//НомерРаздела = "";
			//НомерСтроки  = "";
			//НомерКолонки = "";
			if(true/*Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел2"*/)
			{
				//ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел2.ТекущаяОбласть;
				//ИмяЯчейки	   = ТекущаяОбласть.Имя;
				//НомерРаздела   = "2";
				//НомерТаблицы   = Сред(ИмяЯчейки, 8, 2);
				//НомерСтроки    = Сред(ИмяЯчейки, 10, 2);
				//НомерКолонки   = Прав(ИмяЯчейки, 2);
				if(true/*НомерКолонки = "03" и НомерТаблицы = "04"*/)
				{
				}
				//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "Организация",    Отчет.Организация);
				/*//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "НеГражданин", истина,  ВидСравненияКомпоновкиДанных.НеРавно);
*/
				/*//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ИмеетПравоНаПенсию", истина,  ВидСравненияКомпоновкиДанных.Равно);
*/
				//ГруппаИЛИ = ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
				//ГруппаИЛИ.Использование = Истина;
				//ГруппаИЛИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
				//ТиповыеОтчеты.ДобавитьОтбор(ГруппаИЛИ, "ЕСН.НомерСтрокиСтавокФБ", 1);
				//ТиповыеОтчеты.ДобавитьОтбор(ГруппаИЛИ, "ЕСН.НомерСтрокиСтавокФБ", 2);
				//ТиповыеОтчеты.ДобавитьОтбор(ГруппаИЛИ, "ЕСН.НомерСтрокиСтавокФБ", 3);
				//ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Структура.Очистить();
				//ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
				/*// установим период формирования отчета
*/
				if(true/*НомерСтроки = "00"*/)
				{
					//ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
					//ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода",  Отчет.мДатаКонцаПериодаОтчета);
				}
				if(true/*НомерТаблицы = "01"*/)
				{
					//Поле = Поле + "ПФР.БазаПФР";
				}
				if(true/*НомерКолонки = "03"*/)
				{
					//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ВозрастнаяГруппа", "до1967");
				}
				//ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ПериодРегистрации");
				//ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Сотрудник");
				if(true/*НомерТаблицы = "01"*/)
				{
					//ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ВидРасчета");
				}
				if(true/*Поле = ""*/)
				{
					//Предупреждение("Расшифровка данного раздела не поддерживается");
				}
				//ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетРасшифровки.КомпоновщикНастроек, Поле);
			}
			if(true/*Найти(ИмяЯчейки,"R") > 0*/)
			{
				//Предупреждение("Расшифровка данной ячейки не поддерживается");
			}
			//ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетРасшифровки, "Расшифровка отчета Авансы ПФР , колонка: " + НомерКолонки + ", номер строки " + НомерТаблицы + НомерСтроки);
		}
		// Открывает отчет расшифровку для отчета "Сводная карточка по ОПС"
		//
		// Параметры
		//    Форма - ссылка на форму отчета
		//    Отчет - отчет объект, который расшифровывается
		//

		public void РасшифроватьАвансыЕСН(/*Отчет, Форма, Расшифровка, СтандартнаяОбработка*/)
		{
			//ОтчетРасшифровки = Отчеты.АнализНачисленногоЕСН.Создать();
			//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "Организация", Отчет.Организация);
			//Поле         = "";
			//ИмяЯчейки    = "";
			//НомерРаздела = "";
			//НомерСтроки  = "";
			//НомерКолонки = "";
			if(true/*Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел2"*/)
			{
				//ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел2.ТекущаяОбласть;
				//ИмяЯчейки	   = ТекущаяОбласть.Имя;
				//НомерРаздела   = "2";
				//НомерТаблицы   = Сред(ИмяЯчейки, 8, 2);
				//НомерСтроки    = Сред(ИмяЯчейки, 10, 2);
				//НомерКолонки   = Прав(ИмяЯчейки, 2);
				//ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Структура.Очистить();
				//ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
				/*// установим период формирования отчета
*/
				if(true/*НомерСтроки = "00"*/)
				{
					//ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
					//ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода",  Отчет.мДатаКонцаПериодаОтчета);
				}
				//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "НалоговыйРежим", "ОСН");
				if(true/*НомерТаблицы = "01"*/)
				{
					//Поле = "База";
					if(true/*НомерКолонки = "03"*/)
					{
						//Поле = "ЕСН.ФБ." + Поле + "ФБ";
					}
				}
				//ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ПериодРегистрации");
				//ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Сотрудник");
				if(true/*НомерТаблицы = "01"*/)
				{
					//ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ВидРасчета");
				}
				if(true/*Поле = ""*/)
				{
					//Предупреждение("Расшифровка данного раздела не поддерживается");
				}
				//ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетРасшифровки.КомпоновщикНастроек, Поле);
			}
			if(true/*Найти(ИмяЯчейки,"R") > 0*/)
			{
				//Предупреждение("Расшифровка данной ячейки не поддерживается");
			}
			//ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетРасшифровки, "Расшифровка отчета Авансы ЕСН , колонка: " + НомерКолонки + ", номер строки " + НомерТаблицы + НомерСтроки);
		}
		// Открывает отчет расшифровку для отчета "Сводная карточка по ОПС"
		//
		// Параметры
		//    Форма - ссылка на форму отчета
		//    Отчет - отчет объект, который расшифровывается
		//

		public void РасшифроватьСводнуюКарточкуПоОПС(/*Отчет, Форма, Расшифровка, СтандартнаяОбработка*/)
		{
			//СтандартнаяОбработка = Ложь;
			//Колонка = Прав(Расшифровка.Имя, 2);
			if(true/*Найти(Расшифровка.Имя, "ОСН") <> 0*/)
			{
				//Режим = "ОСН";
			}
			//ОтчетРасшифровки = Отчеты.АнализНачисленногоЕСН.Создать();
			//ДатаКон = КонецМесяца(Дата(Формат(Отчет.НалоговыйПериод, "ЧГ=0"),Формат(Расшифровка.Месяц, "ЧМ=0"), Формат(Расшифровка.Месяц, "ЧЧ=0")));
			//ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода", ДатаКон);
			if(true/*Найти(Расшифровка.Имя,"СНГ") > 0*/)
			{
				/*// с начала года
*/
				//ДатаНач = НачалоГода(ДатаКон);
				//ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", ДатаНач);
			}
			//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "Организация", Отчет.Организация);
			//ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Структура.Очистить();
			//ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			//ПоследняяГруппировка = ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Сотрудник");
			//Поле = "";
			if(true/*Колонка = "02" или Колонка = "03" или Колонка = "04" или Колонка = "05"*/)
			{
				//Поле = Поле + "База";
				//ПоследняяГруппировка = ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ВидРасчета");
			}
			if(true/*Режим = "Спец"*/)
			{
				//ГруппаИли = ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
				//ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
				//ТиповыеОтчеты.ДобавитьОтбор(ГруппаИли, "ЕСН.УСН", истина);
				//ТиповыеОтчеты.ДобавитьОтбор(ГруппаИли, "ЕСН.ОблагаетсяЕНВД", истина);
			}
			if(true/*Колонка = "02"*/)
			{
				//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "КодДохода", Справочники.ДоходыЕСН.ВыплатыЗаСчетПрибыли, ВидСравненияКомпоновкиДанных.НеРавно);
				//Поле = "ЕСН.Начислено";
			}
			//ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетРасшифровки.КомпоновщикНастроек, Поле);
			/*// установи отбор, что бы не показывались пустые строки в отчете
*/
			//МассивГруппировокОтчета = ТиповыеОтчеты.ПолучитьПоляГруппировок(ОтчетРасшифровки.КомпоновщикНастроек);
			//ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетРасшифровки, "Расшифровка сводной карточки по ОПС, колонка: " + Колонка);
		}
		// Открывает отчет расшифровку для отчета "Сводная карточка по ЕСН"
		//
		// Параметры
		//    Форма - ссылка на форму отчета
		//    Отчет - отчет объект, который расшифровывается
		//

		public void РасшифроватьСводнуюКарточкуПоЕСН(/*Отчет, Форма, Расшифровка, СтандартнаяОбработка*/)
		{
			//СтандартнаяОбработка = Ложь;
			//СписокРасшифрованныхКолонок = Новый СписокЗначений;
			//СписокРасшифрованныхКолонок.Добавить("02");
			//СписокРасшифрованныхКолонок.Добавить("03");
			//СписокРасшифрованныхКолонок.Добавить("04");
			//СписокРасшифрованныхКолонок.Добавить("05");
			//СписокРасшифрованныхКолонок.Добавить("07");
			//СписокРасшифрованныхКолонок.Добавить("08");
			//СписокРасшифрованныхКолонок.Добавить("09");
			//СписокРасшифрованныхКолонок.Добавить("10");
			//СписокРасшифрованныхКолонок.Добавить("11");
			//СписокРасшифрованныхКолонок.Добавить("12");
			//СписокРасшифрованныхКолонок.Добавить("13");
			//СписокРасшифрованныхКолонок.Добавить("14");
			//СписокРасшифрованныхКолонок.Добавить("15");
			//СписокРасшифрованныхКолонок.Добавить("16");
			//СписокРасшифрованныхКолонок.Добавить("17");
			//СписокРасшифрованныхКолонок.Добавить("18");
			//СписокРасшифрованныхКолонок.Добавить("19");
			//СписокРасшифрованныхКолонок.Добавить("20");
			//СписокРасшифрованныхКолонок.Добавить("21");
			//СписокРасшифрованныхКолонок.Добавить("22");
			//СписокРасшифрованныхКолонок.Добавить("23");
			//СписокРасшифрованныхКолонок.Добавить("24");
			//СписокРасшифрованныхКолонок.Добавить("25");
			//СписокРасшифрованныхКолонок.Добавить("26");
			//СписокРасшифрованныхКолонок.Добавить("27");
			//СписокРасшифрованныхКолонок.Добавить("28");
			//СписокРасшифрованныхКолонок.Добавить("29");
			//СписокРасшифрованныхКолонок.Добавить("30");
			//СписокРасшифрованныхКолонок.Добавить("31");
			//СписокРасшифрованныхКолонок.Добавить("32");
			//Колонка = Прав(Расшифровка.Имя,2);
			if(true/*СписокРасшифрованныхКолонок.НайтиПоЗначению(Колонка) = Неопределено*/)
			{
			}
			//ОтчетРасшифровки = Отчеты.АнализНачисленногоЕСН.Создать();
			//ДатаКон = КонецМесяца(Дата(Формат(Отчет.НалоговыйПериод, "ЧГ=0"),Формат(Расшифровка.Месяц, "ЧМ=0"), Формат(Расшифровка.Месяц, "ЧЧ=0")));
			//ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода", ДатаКон);
			if(true/*Лев(Расшифровка.Имя,3) = "СНГ"*/)
			{
				/*// с начала года
*/
				//ДатаНач = НачалоГода(ДатаКон);
				//ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", ДатаНач);
			}
			//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "Организация", Отчет.Организация);
			//ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Структура.Очистить();
			//ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			//ПоследняяГруппировка = ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Сотрудник");
			//Поле = "";
			if(true/*Колонка = "02" Или Колонка = "03" Или Колонка = "04" Или Колонка = "07" Или Колонка = "08" Или Колонка = "09" Или Колонка = "14" Или Колонка = "32"*/)
			{
				//ПоследняяГруппировка = ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ВидРасчета");
				//Поле = Поле + "База";
				//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ЕСН.ОблагаетсяЕНВД", ложь);
			}
			if(true/*Колонка = "10" или Колонка = "11" или Колонка = "12" или Колонка = "13"*/)
			{
				//Поле = Поле + "Исчислено";
			}
			if(true/*Колонка = "02"*/)
			{
				//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "КодДохода", Справочники.ДоходыЕСН.НеЯвляетсяОбъектом, ВидСравненияКомпоновкиДанных.НеРавно);
				//Поле = "ЕСН.Начислено";
			}
			//ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетРасшифровки.КомпоновщикНастроек, Поле, "Значение");
			/*// установи отбор, что бы не показывались пустые строки в отчете
*/
			//МассивГруппировокОтчета = ТиповыеОтчеты.ПолучитьПоляГруппировок(ОтчетРасшифровки.КомпоновщикНастроек);
			//ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетРасшифровки, "Расшифровка сводной карточник по ЕСН колонка: " + Колонка);
		}
		// Открывает отчет расшифровку для отчета "Карточка по ОПС"
		//
		// Параметры
		//    Форма - ссылка на форму отчета
		//    Отчет - отчет объект, который расшифровывается
		//

		public void РасшифроватьКарточкаПоОПС(/*Отчет, Форма, Расшифровка, СтандартнаяОбработка*/)
		{
			//СтандартнаяОбработка = Ложь;
			//СписокРасшифрованныхКолонок = Новый СписокЗначений;
			//СписокРасшифрованныхКолонок.Добавить("П0102");
			//СписокРасшифрованныхКолонок.Добавить("П309");
			//СписокРасшифрованныхКолонок.Добавить("П311");
			//СписокРасшифрованныхКолонок.Добавить("П0103");
			//СписокРасшифрованныхКолонок.Добавить("П310");
			//СписокРасшифрованныхКолонок.Добавить("П312");
			//СписокРасшифрованныхКолонок.Добавить("ВСЕГО4");
			//СписокРасшифрованныхКолонок.Добавить("ВСЕГО7");
			//СписокРасшифрованныхКолонок.Добавить("ВСЕГО10");
			//СписокРасшифрованныхКолонок.Добавить("П0105");
			//СписокРасшифрованныхКолонок.Добавить("П510");
			//СписокРасшифрованныхКолонок.Добавить("П512");
			//СписокРасшифрованныхКолонок.Добавить("П8Общ");
			//СписокРасшифрованныхКолонок.Добавить("П8Общ");
			//СписокРасшифрованныхКолонок.Добавить("П8СР");
			//СписокРасшифрованныхКолонок.Добавить("П8");
			//СписокРасшифрованныхКолонок.Добавить("П9Общ");
			//СписокРасшифрованныхКолонок.Добавить("П9СР");
			//СписокРасшифрованныхКолонок.Добавить("П9");
			//СписокРасшифрованныхКолонок.Добавить("П10Общ");
			//СписокРасшифрованныхКолонок.Добавить("П10СР");
			//СписокРасшифрованныхКолонок.Добавить("П10");
			//СписокРасшифрованныхКолонок.Добавить("СНГ0102");
			//СписокРасшифрованныхКолонок.Добавить("СНГ309");
			//СписокРасшифрованныхКолонок.Добавить("СНГ311");
			//СписокРасшифрованныхКолонок.Добавить("СНГ0103");
			//СписокРасшифрованныхКолонок.Добавить("СНГ310");
			//СписокРасшифрованныхКолонок.Добавить("СНГ312");
			//СписокРасшифрованныхКолонок.Добавить("ВСЕГО_СНГ4");
			//СписокРасшифрованныхКолонок.Добавить("ВСЕГО_СНГ7");
			//СписокРасшифрованныхКолонок.Добавить("ВСЕГО_СНГ10");
			//СписокРасшифрованныхКолонок.Добавить("СНГ0105");
			//СписокРасшифрованныхКолонок.Добавить("СНГ510");
			//СписокРасшифрованныхКолонок.Добавить("СНГ512");
			//СписокРасшифрованныхКолонок.Добавить("СНГ8Общ");
			//СписокРасшифрованныхКолонок.Добавить("СНГ8Общ");
			//СписокРасшифрованныхКолонок.Добавить("СНГ8СР");
			//СписокРасшифрованныхКолонок.Добавить("СНГ8");
			//СписокРасшифрованныхКолонок.Добавить("СНГ9Общ");
			//СписокРасшифрованныхКолонок.Добавить("СНГП9СР");
			//СписокРасшифрованныхКолонок.Добавить("СНГ9");
			//СписокРасшифрованныхКолонок.Добавить("СНГ10Общ");
			//СписокРасшифрованныхКолонок.Добавить("СНГ10СР");
			//СписокРасшифрованныхКолонок.Добавить("СНГ10");
			if(true/*СписокРасшифрованныхКолонок.НайтиПоЗначению(Расшифровка.Имя) = Неопределено*/)
			{
			}
			//Область = Расшифровка.Имя;
			//Колонка = "";
			if(true/*Область = "П0102" или Область = "П309" или Область = "П311" или Область = "СНГ0102" или Область = "СНГ309" или Область = "СНГ311"*/)
			{
				//Колонка = "02";
			}
			//Режим = "";
			if(true/*Область = "П0102" или Область = "СНГ0102" или Область = "П0103" или Область = "СНГ0103" или Область = "ВСЕГО4" 
	 или Область = "ВСЕГО_СНГ4" или Область = "П0105" или Область = "СНГ0105" или Область = "П8Общ" или Область = "СНГ8Общ" 
	 или Область = "П9Общ" или Область = "СНГ9Общ" или Область = "П10Общ" или Область = "СНГ10Общ"*/)
			{
				//Режим = "Общ";
			}
			//ОтчетРасшифровки = Отчеты.АнализНачисленногоЕСН.Создать();
			//ДатаКон = КонецМесяца(Дата(Формат(Отчет.НалоговыйПериод, "ЧГ=0"),Формат(Расшифровка.Месяц, "ЧМ=0"), Формат(Расшифровка.Месяц, "ЧЧ=0")));
			//ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода", ДатаКон);
			if(true/*Найти(Расшифровка.Имя,"СНГ") > 0*/)
			{
				/*// с начала года
*/
				//ДатаНач = НачалоГода(ДатаКон);
				//ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", ДатаНач);
			}
			//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ГоловнаяОрганизация", Отчет.Организация);
			//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ФизЛицо", Отчет.ФизЛицо);
			//ОтчетРасшифровкиФорма = ОтчетРасшифровки.ПолучитьФорму("ФормаОтчета", Форма);
			//ОтчетРасшифровкиФорма.ЭтоОтработкаРасшифровки = истина;
			//ДокументРезультат	  = ОтчетРасшифровкиФорма.ЭлементыФормы.Результат;
			//ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Структура.Очистить();
			//ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			//ПоследняяГруппировка = ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Сотрудник");
			//Поле = "";
			if(true/*Колонка = "02" или Колонка = "03" или Колонка = "04" или Колонка = "05"*/)
			{
				//Поле = Поле + "База";
				//ПоследняяГруппировка = ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ВидРасчета");
			}
			if(true/*Режим = "Спец"*/)
			{
				//ГруппаИли = ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
				//ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
				//ТиповыеОтчеты.ДобавитьОтбор(ГруппаИли, "УСН", истина);
				//ТиповыеОтчеты.ДобавитьОтбор(ГруппаИли, "ОблагаоетсяЕНВД", истина);
			}
			if(true/*Колонка = "02"*/)
			{
				//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "КодДохода", Справочники.ДоходыЕСН.ВыплатыЗаСчетПрибыли, ВидСравненияКомпоновкиДанных.НеРавно);
				//Поле = "ЕСН.Начислено";
			}
			//ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетРасшифровки.КомпоновщикНастроек, Поле);
			//ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетРасшифровки, "Расшифровка карточки ОПС, колонка: " + Колонка);
		}
		// Открывает отчет расшифровку для отчета "Карточка по ЕСН"
		//
		// Параметры
		//    ФормаОтчета - ссылка на форму отчета
		//    Отчет - отчет объект, который расшифровывается
		//

		public void РасшифроватьКарточкаПоЕСН(/*Отчет, Форма, Расшифровка, СтандартнаяОбработка*/)
		{
			//СтандартнаяОбработка = Ложь;
			/*// Определим требуется ли расшифровывать данную колонку
*/
			//СписокРасшифрованныхКолонок = Новый СписокЗначений;
			//СписокРасшифрованныхКолонок.Добавить("02");
			//СписокРасшифрованныхКолонок.Добавить("03");
			//СписокРасшифрованныхКолонок.Добавить("04");
			//СписокРасшифрованныхКолонок.Добавить("05");
			//СписокРасшифрованныхКолонок.Добавить("07");
			//СписокРасшифрованныхКолонок.Добавить("09");
			//СписокРасшифрованныхКолонок.Добавить("11");
			//СписокРасшифрованныхКолонок.Добавить("13");
			//СписокРасшифрованныхКолонок.Добавить("14");
			//СписокРасшифрованныхКолонок.Добавить("15");
			//СписокРасшифрованныхКолонок.Добавить("16");
			//СписокРасшифрованныхКолонок.Добавить("17");
			//СписокРасшифрованныхКолонок.Добавить("20");
			//СписокРасшифрованныхКолонок.Добавить("21");
			//СписокРасшифрованныхКолонок.Добавить("22");
			//СписокРасшифрованныхКолонок.Добавить("23");
			//СписокРасшифрованныхКолонок.Добавить("24");
			//СписокРасшифрованныхКолонок.Добавить("25");
			//СписокРасшифрованныхКолонок.Добавить("26");
			//СписокРасшифрованныхКолонок.Добавить("27");
			//СписокРасшифрованныхКолонок.Добавить("28");
			//СписокРасшифрованныхКолонок.Добавить("29");
			//СписокРасшифрованныхКолонок.Добавить("30");
			//СписокРасшифрованныхКолонок.Добавить("31");
			//СписокРасшифрованныхКолонок.Добавить("32");
			//Колонка = Прав(Расшифровка.Имя,2);
			if(true/*СписокРасшифрованныхКолонок.НайтиПоЗначению(Колонка) = Неопределено*/)
			{
			}
			/*//Настроим отчете расшифровку
*/
			//ОтчетРасшифровки = Отчеты.АнализНачисленногоЕСН.Создать();
			//ДатаКон = КонецМесяца(Дата(Формат(Отчет.НалоговыйПериод, "ЧГ=0"),Формат(Расшифровка.Месяц, "ЧМ=0"), Формат(Расшифровка.Месяц, "ЧЧ=0")));
			//ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода", ДатаКон);
			/*// установим период, за который строится отчет расшифровка
*/
			if(true/*Лев(Расшифровка.Имя,3) = "СНГ"*/)
			{
				/*// с начала года
*/
				//ДатаНач = НачалоГода(ДатаКон);
				//ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", ДатаНач);
			}
			//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ГоловнаяОрганизация", Отчет.Организация);
			//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ФизЛицо", Отчет.ФизЛицо);
			/*// добавим структуру отчета для расшифровки
*/
			//ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Структура.Очистить();
			//ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			//ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Сотрудник");
			/*//ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ПериодРегистрации");
*/
			/*// добавим в отчет ресурс, которые требуется  выводить для расшифровываемой колонки
*/
			//Поле = "";
			if(true/*Колонка = "02" Или Колонка = "03" Или Колонка = "04" Или Колонка = "07" Или Колонка = "09" Или Колонка = "11" Или Колонка = "17" Или Колонка = "32"*/)
			{
				//Поле = Поле + "База";
				//ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ВидРасчета");
			}
			if(true/*Колонка = "13" или Колонка = "14" или Колонка = "15" или Колонка = "16"*/)
			{
				//Поле = Поле + "Исчислено";
			}
			if(true/*Колонка = "02"*/)
			{
				//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "КодДохода", Справочники.ДоходыЕСН.ВыплатыЗаСчетПрибыли, ВидСравненияКомпоновкиДанных.НеРавно);
				//Поле = "ЕСН.Начислено";
			}
			//ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетРасшифровки.КомпоновщикНастроек, Поле);
			/*// установи отбор, что бы не показывались пустые строки в отчете
*/
			//МассивГруппировокОтчета = ТиповыеОтчеты.ПолучитьПоляГруппировок(ОтчетРасшифровки.КомпоновщикНастроек);
			//ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетРасшифровки, "Расшифровка карточки по ЕСН, колонка: " + Колонка);
		}
	}
}
