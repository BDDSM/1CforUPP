
using System;
using System.IO;
using System.Globalization;
using System.Runtime.Serialization;
using ProtoBuf;/*https://github.com/ServiceStack/ServiceStack/tree/master/lib*/
using ServiceStack.Text;/*https://github.com/ServiceStack/ServiceStack.Text*/
using V82;
using V82.ОбщиеОбъекты;
using V82.СправочникиСсылка;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.СправочникиСсылка
{
	///<summary>
	///(Общ)
	///</summary>
	[ProtoContract]
	[DataContract]
	public partial class ДоговорыКонтрагентов:СправочникСсылка,IСериализаторProtoBuf,IСериализаторJson
	{
		public static readonly Guid ГуидКласса = new Guid("f77d42e4-148c-4450-ad6a-47b092128306");
		public static readonly DateTime ВерсияКласса = DateTime.ParseExact("20121221191916.000", new string[] {"yyyyMMddHHmmss.fff"}, CultureInfo.InvariantCulture, DateTimeStyles.None);
		public static readonly long КонтрольнаяСуммаКласса = 123;
		[DataMember]
		[ProtoMember(1)]
		public Guid Ссылка {get;set;}
		[DataMember]
		[ProtoMember(2)]
		public long Версия {get;set;}
		public string ВерсияДанных {get;set;}
		/*static хэш сумма состава и порядка реквизитов*/
		/*версия класса восстановленного из пакета*/
		public bool ПометкаУдаления {get;set;}
		public bool Предопределенный {get;set;}
		public Guid Владелец {get;set;}
		public Guid Родитель {get;set;}
		public bool ЭтоГруппа {get;set;}
		public string/*9*/ Код {get;set;}
		public string/*50*/ Наименование {get;set;}
		///<summary>
		///(Общ) Определяет валюту взаиморасчетов по договору, не может меняться, если по договору проведен хотя бы один документ
		///</summary>
		public V82.СправочникиСсылка.Валюты ВалютаВзаиморасчетов {get;set;}//Валюта взаиморасчетов
		///<summary>
		///(Общ)
		///</summary>
		public V82.Перечисления/*Ссылка*/.ВедениеВзаиморасчетовПоДоговорам ВедениеВзаиморасчетов {get;set;}//Ведение взаиморасчетов
		///<summary>
		///(Общ) Любая дополнительная информация
		///</summary>
		public string/*(0)*/ Комментарий {get;set;}
		///<summary>
		///(Упр) 
		///</summary>
		public V82.Перечисления/*Ссылка*/.ВидыУсловийДоговоровВзаиморасчетов ВидУсловийДоговора {get;set;}//Вид условий договора
		///<summary>
		///(Упр) Держать резерв без оплаты ограниченное/неограниченное время
		///</summary>
		public bool ДержатьРезервБезОплатыОграниченноеВремя {get;set;}//Держать резерв без оплаты ограниченное время
		///<summary>
		///(Упр) 
		///</summary>
		public decimal/*(15.2)*/ ДопустимаяСуммаЗадолженности {get;set;}//Допустимая сумма дебиторской задолженности
		///<summary>
		///(Упр) 
		///</summary>
		public decimal/*(10)*/ ДопустимоеЧислоДнейЗадолженности {get;set;}//Допустимое число дней дебиторской задолженности
		///<summary>
		///(Общ) 
		///</summary>
		public V82.СправочникиСсылка.Организации Организация {get;set;}
		///<summary>
		///(Упр) 
		///</summary>
		public bool КонтролироватьСуммуЗадолженности {get;set;}//Контролировать сумму дебиторской задолженности
		///<summary>
		///(Упр) 
		///</summary>
		public bool КонтролироватьЧислоДнейЗадолженности {get;set;}//Контролировать число дней дебиторской задолженности
		///<summary>
		///(Общ) Обособленный партионный учет Товаров по заказам покупателей
		///</summary>
		public bool ОбособленныйУчетТоваровПоЗаказамПокупателей {get;set;}//Обособленный учет Товаров по заказам покупателей
		///<summary>
		///(Общ) 
		///</summary>
		public decimal/*(5.2)*/ ПроцентКомиссионногоВознаграждения {get;set;}//Процент комиссионного вознаграждения
		///<summary>
		///(Общ) 
		///</summary>
		public V82.Перечисления/*Ссылка*/.СпособыРасчетаКомиссионногоВознаграждения СпособРасчетаКомиссионногоВознаграждения {get;set;}//Способ расчета комиссионного вознаграждения
		///<summary>
		///(Упр) 
		///</summary>
		public decimal/*(5.2)*/ ПроцентПредоплаты {get;set;}//Процент предоплаты
		///<summary>
		///(Общ) Тип цен по умолчанию для оформления покупок по данному договору
		///</summary>
		public object ТипЦен {get;set;}//Тип цен
		///<summary>
		///(Общ)
		///</summary>
		public V82.Перечисления/*Ссылка*/.ВидыДоговоровКонтрагентов ВидДоговора {get;set;}//Вид договора
		///<summary>
		///(Упр) Если 0, то неограничено
		///</summary>
		public decimal/*(10)*/ ЧислоДнейРезерваБезОплаты {get;set;}//Число дней резерва без оплаты
		///<summary>
		///Признак того что в данном договоре организация выступает в качестве налогового агента
		///</summary>
		public bool УчетАгентскогоНДС {get;set;}//Учет агентского НДС
		///<summary>
		///Разновидность договора с обязанностью оплаты организацией НДС в качестве налогового агента 
		///</summary>
		public V82.Перечисления/*Ссылка*/.ВидыАгентскихДоговоров ВидАгентскогоДоговора {get;set;}//Вид агентского договора
		///<summary>
		///(Регл)
		///</summary>
		public bool РасчетыВУсловныхЕдиницах {get;set;}//Расчеты в условных единицах
		public bool КонтролироватьДенежныеСредстваКомитента {get;set;}//Контролировать денежные средства комитента
		public bool РеализацияНаЭкспорт {get;set;}//Реализация на экспорт
		public DateTime Дата {get;set;}
		public string/*(20)*/ Номер {get;set;}
		///<summary>
		///(Упр)
		///</summary>
		public V82.СправочникиСсылка.ВидыВзаиморасчетов ВидВзаиморасчетов {get;set;}//Вид взаиморасчетов
		public bool ВестиПоДокументамРасчетовСКонтрагентом {get;set;}//Вести по документам расчетов с контрагентом
		public object ОсновнойПроект {get;set;}//Основной проект
		public V82.СправочникиСсылка.СтатьиДвиженияДенежныхСредств ОсновнаяСтатьяДвиженияДенежныхСредств {get;set;}//Основная статья движения денежных средств
		public DateTime СрокДействия {get;set;}//Срок действия договора
		public V82.СправочникиСсылка.Номенклатура НаименованиеДляСчетаФактурыНаАванс {get;set;}//Обобщенное наименование товаров для счета-фактуры на аванс
		public V82.Перечисления/*Ссылка*/.ПорядокРегистрацииСчетовФактурНаАванс ПорядокРегистрацииСчетовФактурНаАвансПоДоговору {get;set;}//Порядок регистрации счетов-фактур на аванс по договору
		public bool НалоговыйАгентПоОплате {get;set;}//НДС при исполнении обязанностей налогового агента начисляется по оплате
		///<summary>
		///Если не установлен, для контроля просроченной задолженности используется срок из учетной политики организации
		///</summary>
		public bool УстановленСрокОплатыДляРезервовПоСомнительнымДолгам {get;set;}//Установлен срок оплаты для резервов по сомнительным долгам
		///<summary>
		///Срок в днях, после которого долг считается просроченным
		///</summary>
		public decimal/*(5)*/ СрокОплатыДляРезервовПоСомнительнымДолгам {get;set;}//Срок оплаты для резервов по сомнительным долгам

		public V82.СправочникиОбъект.ДоговорыКонтрагентов  ПолучитьОбъект()
		{
			var Объект = new V82.СправочникиОбъект.ДоговорыКонтрагентов();
			Объект._ЭтоНовый = false;
			Объект.Ссылка = Ссылка;
			Объект.Версия = Версия;
			Объект.ПометкаУдаления = ПометкаУдаления;
			Объект.Предопределенный = Предопределенный;
			Объект.Владелец = Владелец;
			Объект.Родитель = Родитель;
			Объект.ЭтоГруппа = ЭтоГруппа;
			Объект.Код = Код;
			Объект.Наименование = Наименование;
			Объект.ВалютаВзаиморасчетов = ВалютаВзаиморасчетов;
			Объект.ВедениеВзаиморасчетов = ВедениеВзаиморасчетов;
			Объект.Комментарий = Комментарий;
			Объект.ВидУсловийДоговора = ВидУсловийДоговора;
			Объект.ДержатьРезервБезОплатыОграниченноеВремя = ДержатьРезервБезОплатыОграниченноеВремя;
			Объект.ДопустимаяСуммаЗадолженности = ДопустимаяСуммаЗадолженности;
			Объект.ДопустимоеЧислоДнейЗадолженности = ДопустимоеЧислоДнейЗадолженности;
			Объект.Организация = Организация;
			Объект.КонтролироватьСуммуЗадолженности = КонтролироватьСуммуЗадолженности;
			Объект.КонтролироватьЧислоДнейЗадолженности = КонтролироватьЧислоДнейЗадолженности;
			Объект.ОбособленныйУчетТоваровПоЗаказамПокупателей = ОбособленныйУчетТоваровПоЗаказамПокупателей;
			Объект.ПроцентКомиссионногоВознаграждения = ПроцентКомиссионногоВознаграждения;
			Объект.СпособРасчетаКомиссионногоВознаграждения = СпособРасчетаКомиссионногоВознаграждения;
			Объект.ПроцентПредоплаты = ПроцентПредоплаты;
			Объект.ТипЦен = ТипЦен;
			Объект.ВидДоговора = ВидДоговора;
			Объект.ЧислоДнейРезерваБезОплаты = ЧислоДнейРезерваБезОплаты;
			Объект.УчетАгентскогоНДС = УчетАгентскогоНДС;
			Объект.ВидАгентскогоДоговора = ВидАгентскогоДоговора;
			Объект.РасчетыВУсловныхЕдиницах = РасчетыВУсловныхЕдиницах;
			Объект.КонтролироватьДенежныеСредстваКомитента = КонтролироватьДенежныеСредстваКомитента;
			Объект.РеализацияНаЭкспорт = РеализацияНаЭкспорт;
			Объект.Дата = Дата;
			Объект.Номер = Номер;
			Объект.ВидВзаиморасчетов = ВидВзаиморасчетов;
			Объект.ВестиПоДокументамРасчетовСКонтрагентом = ВестиПоДокументамРасчетовСКонтрагентом;
			Объект.ОсновнойПроект = ОсновнойПроект;
			Объект.ОсновнаяСтатьяДвиженияДенежныхСредств = ОсновнаяСтатьяДвиженияДенежныхСредств;
			Объект.СрокДействия = СрокДействия;
			Объект.НаименованиеДляСчетаФактурыНаАванс = НаименованиеДляСчетаФактурыНаАванс;
			Объект.ПорядокРегистрацииСчетовФактурНаАвансПоДоговору = ПорядокРегистрацииСчетовФактурНаАвансПоДоговору;
			Объект.НалоговыйАгентПоОплате = НалоговыйАгентПоОплате;
			Объект.УстановленСрокОплатыДляРезервовПоСомнительнымДолгам = УстановленСрокОплатыДляРезервовПоСомнительнымДолгам;
			Объект.СрокОплатыДляРезервовПоСомнительнымДолгам = СрокОплатыДляРезервовПоСомнительнымДолгам;
			return Объект;
		}

		public void СериализацияProtoBuf(Stream Поток)
		{
			Serializer.Serialize(Поток,this);
		}

		public string СериализацияJson()
		{
			return this.ToJson();
		}

		public string СериализацияXml()
		{
			return this.ToXml();
		}
	}
}