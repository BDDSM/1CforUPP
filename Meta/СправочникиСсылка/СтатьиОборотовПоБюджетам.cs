
using System;
using System.IO;
using System.Globalization;
using System.Runtime.Serialization;
using ProtoBuf;/*https://github.com/ServiceStack/ServiceStack/tree/master/lib*/
using ServiceStack.Text;/*https://github.com/ServiceStack/ServiceStack.Text*/
using V82;
using V82.ОбщиеОбъекты;
using V82.СправочникиСсылка;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.СправочникиСсылка
{
	///<summary>
	///(Упр)
	///</summary>
	[ProtoContract]
	[DataContract]
	public partial class СтатьиОборотовПоБюджетам:СправочникСсылка,IСериализаторProtoBuf,IСериализаторJson
	{
		public static readonly Guid ГуидКласса = new Guid("6b5a8962-cdd3-4e03-afb7-7cda5ebfdfa7");
		public static readonly DateTime ВерсияКласса = DateTime.ParseExact("20121221191010.000", new string[] {"yyyyMMddHHmmss.fff"}, CultureInfo.InvariantCulture, DateTimeStyles.None);
		public static readonly long КонтрольнаяСуммаКласса = 123;
		[DataMember]
		[ProtoMember(1)]
		public Guid Ссылка {get;set;}
		[DataMember]
		[ProtoMember(2)]
		public long Версия {get;set;}
		/*static хэш сумма состава и порядка реквизитов*/
		/*версия класса восстановленного из пакета*/
		[DataMember]
		[ProtoMember(3)]
		public bool ПометкаУдаления {get;set;}
		[DataMember]
		[ProtoMember(4)]
		public bool Предопределенный {get;set;}
		[DataMember]
		[ProtoMember(5)]
		public bool ЭтоГруппа {get;set;}
		[DataMember]
		[ProtoMember(6)]
		public Guid Родитель {get;set;}
		[DataMember]
		[ProtoMember(7)]
		public string/*9*/ Код {get;set;}
		[DataMember]
		[ProtoMember(8)]
		public string/*100*/ Наименование {get;set;}
		///<summary>
		///Полное наименование, например, для печати
		///</summary>
		[DataMember]
		[ProtoMember(9)]
		public string/*(0)*/ НаименованиеПолное {get;set;}//Наименование полное
		///<summary>
		///Признак использования количественных оборотов
		///</summary>
		[DataMember]
		[ProtoMember(10)]
		public bool УчетПоКоличеству {get;set;}//Учет по количеству
		///<summary>
		///Признак использования суммовых оборотов
		///</summary>
		[DataMember]
		[ProtoMember(11)]
		public bool УчетПоСумме {get;set;}//Учет по сумме
		///<summary>
		///Источник данных для расчетов бюджетирования, ресурс которого будет использоваться для пересчета количественных оборотов по статье в суммовые
		///</summary>
		[DataMember]
		[ProtoMember(12)]
		public V82.СправочникиСсылка.ИсточникиДанныхДляРасчетовБюджетирования ИсточникДанныхДляЦены {get;set;}//Источник данных для цены
		///<summary>
		///Показатель источника данных расчетов бюджетирования, который будет использоваться для пересчета количественного оборота по статье в суммовой
		///</summary>
		[DataMember]
		[ProtoMember(13)]
		public string/*(50)*/ ПоказательИсточникаДанныхДляЦены {get;set;}//Показатель источника данных для цены
		[DataMember]
		[ProtoMember(14)]
		public V82.СправочникиСсылка.ИсточникиДанныхДляРасчетовБюджетирования ИсточникДанныхДляФакта {get;set;}//Источник данных для факта
		///<summary>
		///Показатель источника данных расчетов бюджетирования, который будет использоваться для получения фактических данных
		///</summary>
		[DataMember]
		[ProtoMember(15)]
		public string/*(100)*/ ПоказательИсточникаДанныхДляФактаСум {get;set;}//Показатель источника данных для факта сум
		///<summary>
		///Способ определения валюты оборота при получении фактических данных
		///</summary>
		[DataMember]
		[ProtoMember(16)]
		public V82.Перечисления/*Ссылка*/.СпособыОпределенияВалютыОборотаПоСтатье СпособОпределенияВалютыОборотаФакт {get;set;}//Способ определения валюты оборота факт
		///<summary>
		///Показатель источника данных расчетов бюджетирования, который будет использоваться для получения фактических данных
		///</summary>
		[DataMember]
		[ProtoMember(17)]
		public string/*(100)*/ ПоказательИсточникаДанныхДляФактаКол {get;set;}//Показатель источника данных для факта кол
		[DataMember]
		[ProtoMember(18)]
		public V82.СправочникиСсылка.КлассификаторЕдиницИзмерения ЕдиницаИзмерения {get;set;}//Единица измерения
		///<summary>
		///Признак разделения оборотов по контрагентам
		///</summary>
		[DataMember]
		[ProtoMember(19)]
		public bool РазделениеПоКонтрагентам {get;set;}//Разделение по контрагентам
		///<summary>
		///Признак разделения оборотов по ресурсам
		///</summary>
		[DataMember]
		[ProtoMember(20)]
		public bool РазделениеПоНоменклатуре {get;set;}//Разделение по номенклатуре
		[DataMember]
		[ProtoMember(21)]
		public V82.СправочникиСсылка.Валюты ОсновнаяВалюта {get;set;}//Основная валюта
		[DataMember]
		[ProtoMember(22)]
		public V82.СправочникиСсылка.Подразделения ОсновноеЦФО {get;set;}//ЦФО по умолчанию
		[DataMember]
		[ProtoMember(23)]
		public V82.СправочникиСсылка.Проекты ОсновнойПроект {get;set;}//Основной проект
		[DataMember]
		[ProtoMember(24)]
		public V82.СправочникиСсылка.Контрагенты ОсновнойКонтрагент {get;set;}//Основной контрагент
		[DataMember]
		[ProtoMember(25)]
		public object ОсновнаяНоменклатура {get;set;}//Основная номенклатура
		[DataMember]
		[ProtoMember(26)]
		public string/*(0)*/ Комментарий {get;set;}
		[DataMember]
		[ProtoMember(27)]
		public decimal/*(15.2)*/ КоэффициентДляФактаСум {get;set;}//Коэффициент для факта (сум)
		[DataMember]
		[ProtoMember(28)]
		public decimal/*(15.2)*/ КоэффициентДляФактаКол {get;set;}//Коэффициент для факта (кол)

		public V82.СправочникиОбъект.СтатьиОборотовПоБюджетам  ПолучитьОбъект()
		{
			var Объект = new V82.СправочникиОбъект.СтатьиОборотовПоБюджетам();
			Объект._ЭтоНовый = false;
			Объект.Ссылка = Ссылка;
			Объект.Версия = Версия;
			Объект.ПометкаУдаления = ПометкаУдаления;
			Объект.Предопределенный = Предопределенный;
			Объект.ЭтоГруппа = ЭтоГруппа;
			Объект.Родитель = Родитель;
			Объект.Код = Код;
			Объект.Наименование = Наименование;
			Объект.НаименованиеПолное = НаименованиеПолное;
			Объект.УчетПоКоличеству = УчетПоКоличеству;
			Объект.УчетПоСумме = УчетПоСумме;
			Объект.ИсточникДанныхДляЦены = ИсточникДанныхДляЦены;
			Объект.ПоказательИсточникаДанныхДляЦены = ПоказательИсточникаДанныхДляЦены;
			Объект.ИсточникДанныхДляФакта = ИсточникДанныхДляФакта;
			Объект.ПоказательИсточникаДанныхДляФактаСум = ПоказательИсточникаДанныхДляФактаСум;
			Объект.СпособОпределенияВалютыОборотаФакт = СпособОпределенияВалютыОборотаФакт;
			Объект.ПоказательИсточникаДанныхДляФактаКол = ПоказательИсточникаДанныхДляФактаКол;
			Объект.ЕдиницаИзмерения = ЕдиницаИзмерения;
			Объект.РазделениеПоКонтрагентам = РазделениеПоКонтрагентам;
			Объект.РазделениеПоНоменклатуре = РазделениеПоНоменклатуре;
			Объект.ОсновнаяВалюта = ОсновнаяВалюта;
			Объект.ОсновноеЦФО = ОсновноеЦФО;
			Объект.ОсновнойПроект = ОсновнойПроект;
			Объект.ОсновнойКонтрагент = ОсновнойКонтрагент;
			Объект.ОсновнаяНоменклатура = ОсновнаяНоменклатура;
			Объект.Комментарий = Комментарий;
			Объект.КоэффициентДляФактаСум = КоэффициентДляФактаСум;
			Объект.КоэффициентДляФактаКол = КоэффициентДляФактаКол;
			return Объект;
		}

		public void СериализацияProtoBuf(Stream Поток)
		{
			Serializer.Serialize(Поток,this);
		}

		public string СериализацияJson()
		{
			return this.ToJson();
		}

		public string СериализацияXml()
		{
			return this.ToXml();
		}
	}
}