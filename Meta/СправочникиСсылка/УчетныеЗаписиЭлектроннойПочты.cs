
using System;
using System.IO;
using System.Globalization;
using System.Runtime.Serialization;
using ProtoBuf;/*https://github.com/ServiceStack/ServiceStack/tree/master/lib*/
using ServiceStack.Text;/*https://github.com/ServiceStack/ServiceStack.Text*/
using V82;
using V82.ОбщиеОбъекты;
using V82.СправочникиСсылка;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.СправочникиСсылка
{
	[ProtoContract]
	[DataContract]
	public partial class УчетныеЗаписиЭлектроннойПочты:СправочникСсылка,IСериализаторProtoBuf,IСериализаторJson
	{
		public static readonly Guid ГуидКласса = new Guid("adfa05bd-794e-4a3c-a21a-2632e7b3500b");
		public static readonly DateTime ВерсияКласса = DateTime.ParseExact("20121221191923.000", new string[] {"yyyyMMddHHmmss.fff"}, CultureInfo.InvariantCulture, DateTimeStyles.None);
		public static readonly long КонтрольнаяСуммаКласса = 123;
		[DataMember]
		[ProtoMember(1)]
		public Guid Ссылка {get;set;}
		[DataMember]
		[ProtoMember(2)]
		public long Версия {get;set;}
		public string ВерсияДанных {get;set;}
		/*static хэш сумма состава и порядка реквизитов*/
		/*версия класса восстановленного из пакета*/
		public bool ПометкаУдаления {get;set;}
		public bool Предопределенный {get;set;}
		public string/*9*/ Код {get;set;}
		public string/*150*/ Наименование {get;set;}
		public string/*(100)*/ SMTPСервер {get;set;}//Сервер исходящей почты (SMTP)
		public string/*(100)*/ POP3Сервер {get;set;}//Сервер входящей почты (POP3)
		public decimal/*(4)*/ ПортSMTP {get;set;}//Порт SMTP
		public decimal/*(4)*/ ПортPOP3 {get;set;}//Порт POP3
		public string/*(200)*/ Логин {get;set;}
		public string/*(200)*/ Пароль {get;set;}
		public bool ТребуетсяSMTPАутентификация {get;set;}//Требуется SMTP Аутентификация
		public string/*(200)*/ ЛогинSMTP {get;set;}//Логин SMTP
		public string/*(200)*/ ПарольSMTP {get;set;}//Пароль SMTP
		public decimal/*(4)*/ ВремяОжиданияСервера {get;set;}//Время ожидания сервера
		public bool ОставлятьКопииСообщенийНаСервере {get;set;}//Оставлять копии сообщений на сервере
		public bool УдалятьПисьмаССервераЧерез {get;set;}//Удалять письма с сервера через
		public decimal/*(3)*/ КоличествоДнейУдаленияПисемССервера {get;set;}//Количество дней удаления писем с сервера
		public string/*(150)*/ АдресЭлектроннойПочты {get;set;}//Адрес электронной почты
		public V82.СправочникиСсылка.ГруппыПисемЭлектроннойПочты ГруппаВходящие {get;set;}//Группа входящие
		public V82.СправочникиСсылка.ГруппыПисемЭлектроннойПочты ГруппаИсходящие {get;set;}//Группа исходящие
		public V82.СправочникиСсылка.ГруппыПисемЭлектроннойПочты ГруппаУдаленные {get;set;}//Группа удаленные
		public V82.СправочникиСсылка.ГруппыПисемЭлектроннойПочты ГруппаЧерновики {get;set;}//Группа черновики
		public V82.СправочникиСсылка.ГруппыПисемЭлектроннойПочты ГруппаНежелательные {get;set;}//Группа нежелательные
		public V82.Перечисления/*Ссылка*/.ВидыТекстовЭлектронныхПисем ФорматТекстаПисьмаПоУмолчанию {get;set;}//Формат текста письма по умолчанию
		public string/*(0)*/ ТекстПодписи {get;set;}//Текст подписи
		public bool ДобавлятьПодписьКИсходящимПисьмам {get;set;}//Добавлять подпись к исходящим письмам
		public bool ДобавлятьПодписьКОтветамИПересылкам {get;set;}//Добавлять подпись к ответам и пересылкам
		public bool АвтоПолучениеОтправкаСообщений {get;set;}//Авто получение/отправка сообщений
		public decimal/*(2)*/ ИнтервалАвтоПолученияОтправкиСообщений {get;set;}//Интервал авто получения/отправки сообщений (в минутах)
		public V82.СправочникиСсылка.Пользователи ОтветственныйЗаАвтоПолучениеОтправкуСообщений {get;set;}//Ответственный за авто получение отправку сообщений
		public bool ПомещатьОтветыИПереадресацииВТужеГруппу {get;set;}//Помещать ответы и переадресации в туже группу
		public V82.Перечисления/*Ссылка*/.ВидыДействийАвтоПолученияОтправкиЭлектронныхПисем ДействиеАвтополученияОтправкиСообщений {get;set;}//Действие автополучения отправки сообщений
		public bool АвтоматическаяУстановкаПометкиРассмотрено {get;set;}//Автоматическая установка пометки рассмотрено
		public decimal/*(2)*/ ИнтервалАвтоматическойУстановкиОтметкиРассмотрено {get;set;}//Интервал автоматической установки отметки рассмотрено
		public bool АвтоматическаяУстановкаПометкиРассмотреноПриОтвете {get;set;}//Автоматическая установка пометки рассмотрено при ответе
		public bool АвтоматическаяУстановкаПометкиРассмотреноПриПолученииОтвета {get;set;}//Автоматическая установка пометки рассмотрено при ответе или переадресации
		public bool ИспользоватьКлассификациюПисемПоПредметам {get;set;}//Использовать классификацию писем по предметам
		public bool ЗаполнятьПустойПредметДляНовыхПисемИзТемыПисьма {get;set;}//Заполнять пустой предмет для новых писем из темы письма
		public bool ДляВходящихОтветовИПереадресацийИскатьПисьмаОснованияИЗаполнятьПредмет {get;set;}//Для входящих ответов и переадресаций искать письма основания и заполнять предмет
		public bool ДляВходящихОтветовИПереадресацийИскатьПисьмаОснованияИЗаполнятьОснованиеНовогоПисьма {get;set;}//Для входящих ответов и переадресаций искать письма основания и заполнять основание нового письма
		public bool ДляВходящихОтветовИПереадресацийИскатьПисьмаОснованияИЗаполнятьГруппуПисемНовогоПисьма {get;set;}//Для входящих ответов и переадресаций искать письма основания и заполнять группу писем нового письма
		public bool АвтосохранениеПисем {get;set;}//Автосохранение писем
		public decimal/*(3)*/ ИнтервалАвтосохраненияПисем {get;set;}//Интервал автосохранения писем
		public bool ФорматПисьмаДляОтветовИПереадресацийБратьИзИсходного {get;set;}//Формат письма для ответов и переадресаций брать из исходного
		public string/*(200)*/ КодировкаПисемПоУмолчанию {get;set;}//Кодировка писем по умолчанию
		public bool КодировкуПисьмаДляОтветовБратьИзИсходного {get;set;}//Кодировку письма для ответов брать из исходного
		public bool ЗаполнятьОбъектыИзАдресовПервогоПисьма {get;set;}//Заполнять объекты из адресов первого письма
		public V82.Перечисления/*Ссылка*/.НазначенияУчетнойЗаписи НазначениеУчетнойЗаписи {get;set;}//Назначение учетной записи
		///<summary>
		///И
		///</summary>
		public bool ИспользоватьДляОтправки {get;set;}//Использовать для отправки
		public bool ИспользоватьДляПолучения {get;set;}//Использовать для получения

		public V82.СправочникиОбъект.УчетныеЗаписиЭлектроннойПочты  ПолучитьОбъект()
		{
			var Объект = new V82.СправочникиОбъект.УчетныеЗаписиЭлектроннойПочты();
			Объект._ЭтоНовый = false;
			Объект.Ссылка = Ссылка;
			Объект.Версия = Версия;
			Объект.ПометкаУдаления = ПометкаУдаления;
			Объект.Предопределенный = Предопределенный;
			Объект.Код = Код;
			Объект.Наименование = Наименование;
			Объект.SMTPСервер = SMTPСервер;
			Объект.POP3Сервер = POP3Сервер;
			Объект.ПортSMTP = ПортSMTP;
			Объект.ПортPOP3 = ПортPOP3;
			Объект.Логин = Логин;
			Объект.Пароль = Пароль;
			Объект.ТребуетсяSMTPАутентификация = ТребуетсяSMTPАутентификация;
			Объект.ЛогинSMTP = ЛогинSMTP;
			Объект.ПарольSMTP = ПарольSMTP;
			Объект.ВремяОжиданияСервера = ВремяОжиданияСервера;
			Объект.ОставлятьКопииСообщенийНаСервере = ОставлятьКопииСообщенийНаСервере;
			Объект.УдалятьПисьмаССервераЧерез = УдалятьПисьмаССервераЧерез;
			Объект.КоличествоДнейУдаленияПисемССервера = КоличествоДнейУдаленияПисемССервера;
			Объект.АдресЭлектроннойПочты = АдресЭлектроннойПочты;
			Объект.ГруппаВходящие = ГруппаВходящие;
			Объект.ГруппаИсходящие = ГруппаИсходящие;
			Объект.ГруппаУдаленные = ГруппаУдаленные;
			Объект.ГруппаЧерновики = ГруппаЧерновики;
			Объект.ГруппаНежелательные = ГруппаНежелательные;
			Объект.ФорматТекстаПисьмаПоУмолчанию = ФорматТекстаПисьмаПоУмолчанию;
			Объект.ТекстПодписи = ТекстПодписи;
			Объект.ДобавлятьПодписьКИсходящимПисьмам = ДобавлятьПодписьКИсходящимПисьмам;
			Объект.ДобавлятьПодписьКОтветамИПересылкам = ДобавлятьПодписьКОтветамИПересылкам;
			Объект.АвтоПолучениеОтправкаСообщений = АвтоПолучениеОтправкаСообщений;
			Объект.ИнтервалАвтоПолученияОтправкиСообщений = ИнтервалАвтоПолученияОтправкиСообщений;
			Объект.ОтветственныйЗаАвтоПолучениеОтправкуСообщений = ОтветственныйЗаАвтоПолучениеОтправкуСообщений;
			Объект.ПомещатьОтветыИПереадресацииВТужеГруппу = ПомещатьОтветыИПереадресацииВТужеГруппу;
			Объект.ДействиеАвтополученияОтправкиСообщений = ДействиеАвтополученияОтправкиСообщений;
			Объект.АвтоматическаяУстановкаПометкиРассмотрено = АвтоматическаяУстановкаПометкиРассмотрено;
			Объект.ИнтервалАвтоматическойУстановкиОтметкиРассмотрено = ИнтервалАвтоматическойУстановкиОтметкиРассмотрено;
			Объект.АвтоматическаяУстановкаПометкиРассмотреноПриОтвете = АвтоматическаяУстановкаПометкиРассмотреноПриОтвете;
			Объект.АвтоматическаяУстановкаПометкиРассмотреноПриПолученииОтвета = АвтоматическаяУстановкаПометкиРассмотреноПриПолученииОтвета;
			Объект.ИспользоватьКлассификациюПисемПоПредметам = ИспользоватьКлассификациюПисемПоПредметам;
			Объект.ЗаполнятьПустойПредметДляНовыхПисемИзТемыПисьма = ЗаполнятьПустойПредметДляНовыхПисемИзТемыПисьма;
			Объект.ДляВходящихОтветовИПереадресацийИскатьПисьмаОснованияИЗаполнятьПредмет = ДляВходящихОтветовИПереадресацийИскатьПисьмаОснованияИЗаполнятьПредмет;
			Объект.ДляВходящихОтветовИПереадресацийИскатьПисьмаОснованияИЗаполнятьОснованиеНовогоПисьма = ДляВходящихОтветовИПереадресацийИскатьПисьмаОснованияИЗаполнятьОснованиеНовогоПисьма;
			Объект.ДляВходящихОтветовИПереадресацийИскатьПисьмаОснованияИЗаполнятьГруппуПисемНовогоПисьма = ДляВходящихОтветовИПереадресацийИскатьПисьмаОснованияИЗаполнятьГруппуПисемНовогоПисьма;
			Объект.АвтосохранениеПисем = АвтосохранениеПисем;
			Объект.ИнтервалАвтосохраненияПисем = ИнтервалАвтосохраненияПисем;
			Объект.ФорматПисьмаДляОтветовИПереадресацийБратьИзИсходного = ФорматПисьмаДляОтветовИПереадресацийБратьИзИсходного;
			Объект.КодировкаПисемПоУмолчанию = КодировкаПисемПоУмолчанию;
			Объект.КодировкуПисьмаДляОтветовБратьИзИсходного = КодировкуПисьмаДляОтветовБратьИзИсходного;
			Объект.ЗаполнятьОбъектыИзАдресовПервогоПисьма = ЗаполнятьОбъектыИзАдресовПервогоПисьма;
			Объект.НазначениеУчетнойЗаписи = НазначениеУчетнойЗаписи;
			Объект.ИспользоватьДляОтправки = ИспользоватьДляОтправки;
			Объект.ИспользоватьДляПолучения = ИспользоватьДляПолучения;
			return Объект;
		}

		public void СериализацияProtoBuf(Stream Поток)
		{
			Serializer.Serialize(Поток,this);
		}

		public string СериализацияJson()
		{
			return this.ToJson();
		}

		public string СериализацияXml()
		{
			return this.ToXml();
		}
	}
}