
using System;
using System.IO;
using System.Globalization;
using System.Runtime.Serialization;
using ProtoBuf;/*https://github.com/ServiceStack/ServiceStack/tree/master/lib*/
using ServiceStack.Text;/*https://github.com/ServiceStack/ServiceStack.Text*/
using V82;
using V82.ОбщиеОбъекты;
using V82.СправочникиСсылка;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.СправочникиСсылка
{
	[ProtoContract]
	[DataContract]
	public partial class НастройкиДопроведенияДокументов:СправочникСсылка,IСериализаторProtoBuf,IСериализаторJson
	{
		public static readonly Guid ГуидКласса = new Guid("416e5962-85e4-42f2-ae9b-a5208060487d");
		public static readonly DateTime ВерсияКласса = DateTime.ParseExact("20121221191943.000", new string[] {"yyyyMMddHHmmss.fff"}, CultureInfo.InvariantCulture, DateTimeStyles.None);
		public static readonly long КонтрольнаяСуммаКласса = 123;
		[DataMember]
		[ProtoMember(1)]
		public Guid Ссылка {get;set;}
		[DataMember]
		[ProtoMember(2)]
		public long Версия {get;set;}
		/*static хэш сумма состава и порядка реквизитов*/
		/*версия класса восстановленного из пакета*/
		[DataMember]
		[ProtoMember(3)]
		public bool ПометкаУдаления {get;set;}
		[DataMember]
		[ProtoMember(4)]
		public bool Предопределенный {get;set;}
		[DataMember]
		[ProtoMember(5)]
		public string/*100*/ Наименование {get;set;}
		///<summary>
		///Запускать допроведение автоматически (регламентным заданием)
		///</summary>
		[DataMember]
		[ProtoMember(6)]
		public bool ФормироватьДокументыАвтоматически {get;set;}//Запускать допроведение автоматически
		///<summary>
		///Уникальный идентификатор регламентного задания
		///</summary>
		[DataMember]
		[ProtoMember(7)]
		public string/*(36)*/ РегламентноеЗадание {get;set;}//Регламентное задание
		[DataMember]
		[ProtoMember(8)]
		public string/*(0)*/ Комментарий {get;set;}
		[DataMember]
		[ProtoMember(9)]
		public bool ДопроводитьВсеДокументы {get;set;}//Допроводить все документы
		///<summary>
		///День месяца, заканчивая которым создается задача на допроведение документов
		///</summary>
		[DataMember]
		[ProtoMember(10)]
		public decimal/*(2)*/ НомерДняКонецЗапуска {get;set;}//Номер дня конец запуска
		///<summary>
		///День месяца, начиная с которого создается задача на допроведение документов
		///</summary>
		[DataMember]
		[ProtoMember(11)]
		public decimal/*(2)*/ НомерДняНачалоЗапуска {get;set;}//Номер дня начало запуска
		[DataMember]
		[ProtoMember(12)]
		public DateTime НачалоИнтервалаДопроведения {get;set;}//Начало интервала допроведения
		[DataMember]
		[ProtoMember(13)]
		public DateTime КонецИнтервалаДопроведения {get;set;}//Конец интервала допроведения
		///<summary>
		///Количество периодов, на которые отстают обрабатываемые документы относительно текущей даты
		///</summary>
		[DataMember]
		[ProtoMember(14)]
		public decimal/*(2)*/ КоличествоПериодовОтставанияКонецИнтервала {get;set;}//Количество периодов отставания конец интервала
		///<summary>
		///Количество периодов, на которые отстают обрабатываемые документы относительно текущей даты
		///</summary>
		[DataMember]
		[ProtoMember(15)]
		public decimal/*(2)*/ КоличествоПериодовОтставанияНачалоИнтервала {get;set;}//Количество периодов отставания начало интервала
		///<summary>
		///Период, на который отстают обрабатываемые документы по сравнению с текущим периодом
		///</summary>
		[DataMember]
		[ProtoMember(16)]
		public V82.Перечисления/*Ссылка*/.Периодичность ПериодичностьОтставанияКонецИнтервала {get;set;}//Периодичность отставания конец интервала
		///<summary>
		///Период, на который отстают обрабатываемые документы по сравнению с текущим периодом
		///</summary>
		[DataMember]
		[ProtoMember(17)]
		public V82.Перечисления/*Ссылка*/.Периодичность ПериодичностьОтставанияНачалоИнтервала {get;set;}//Периодичность отставания начало интервала
		[DataMember]
		[ProtoMember(18)]
		public bool РассчитыватьКонецИнтервала {get;set;}//Рассчитывать конец интервала
		[DataMember]
		[ProtoMember(19)]
		public bool РассчитыватьНачалоИнтервала {get;set;}//Рассчитывать начало интервала

		public V82.СправочникиОбъект.НастройкиДопроведенияДокументов  ПолучитьОбъект()
		{
			var Объект = new V82.СправочникиОбъект.НастройкиДопроведенияДокументов();
			Объект._ЭтоНовый = false;
			Объект.Ссылка = Ссылка;
			Объект.Версия = Версия;
			Объект.ПометкаУдаления = ПометкаУдаления;
			Объект.Предопределенный = Предопределенный;
			Объект.Наименование = Наименование;
			Объект.ФормироватьДокументыАвтоматически = ФормироватьДокументыАвтоматически;
			Объект.РегламентноеЗадание = РегламентноеЗадание;
			Объект.Комментарий = Комментарий;
			Объект.ДопроводитьВсеДокументы = ДопроводитьВсеДокументы;
			Объект.НомерДняКонецЗапуска = НомерДняКонецЗапуска;
			Объект.НомерДняНачалоЗапуска = НомерДняНачалоЗапуска;
			Объект.НачалоИнтервалаДопроведения = НачалоИнтервалаДопроведения;
			Объект.КонецИнтервалаДопроведения = КонецИнтервалаДопроведения;
			Объект.КоличествоПериодовОтставанияКонецИнтервала = КоличествоПериодовОтставанияКонецИнтервала;
			Объект.КоличествоПериодовОтставанияНачалоИнтервала = КоличествоПериодовОтставанияНачалоИнтервала;
			Объект.ПериодичностьОтставанияКонецИнтервала = ПериодичностьОтставанияКонецИнтервала;
			Объект.ПериодичностьОтставанияНачалоИнтервала = ПериодичностьОтставанияНачалоИнтервала;
			Объект.РассчитыватьКонецИнтервала = РассчитыватьКонецИнтервала;
			Объект.РассчитыватьНачалоИнтервала = РассчитыватьНачалоИнтервала;
			return Объект;
		}

		public void СериализацияProtoBuf(Stream Поток)
		{
			Serializer.Serialize(Поток,this);
		}
		
		public string СериализацияJson()
		{
			return this.ToJson();
		}
		
		public string СериализацияXml()
		{
			return this.ToXml();
		}
	}
}
