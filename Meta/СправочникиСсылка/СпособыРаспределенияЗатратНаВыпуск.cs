
using System;
using System.Collections;
using System.IO;
using System.Data.SqlClient;
using System.Globalization;
using System.Runtime.Serialization;
using ProtoBuf;/*https://github.com/ServiceStack/ServiceStack/tree/master/lib*/
using ServiceStack.Text;/*https://github.com/ServiceStack/ServiceStack.Text*/
using V82;
using V82.ОбщиеОбъекты;
using V82.СправочникиСсылка;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.СправочникиСсылка
{
	///<summary>
	///(Общ)
	///</summary>
	[ProtoContract]
	[DataContract]
	public partial class СпособыРаспределенияЗатратНаВыпуск:СправочникСсылка,IСериализаторProtoBuf,IСериализаторJson
	{
		public static readonly Guid ГуидКласса = new Guid("4ca01eb0-049f-4508-8dce-838d931e2725");
		public static readonly DateTime ВерсияКласса = DateTime.ParseExact("20121221191455.000", new string[] {"yyyyMMddHHmmss.fff"}, CultureInfo.InvariantCulture, DateTimeStyles.None);
		public static readonly long КонтрольнаяСуммаКласса = 123;
		[DataMember]
		[ProtoMember(1)]
		public Guid Ссылка {get;set;}
		[DataMember]
		[ProtoMember(2)]
		public long Версия {get;set;}
		public string ВерсияДанных {get;set;}
		/*static хэш сумма состава и порядка реквизитов*/
		/*версия класса восстановленного из пакета*/
		public bool ПометкаУдаления {get;set;}
		public bool Предопределенный {get;set;}
		public string/*9*/ Код {get;set;}
		[DataMember(Name = "Представление")]//Проверить основное представление.
		[ProtoMember(3)]
		public string/*50*/ Наименование {get;set;}
		///<summary>
		///(Общ)
		///</summary>
		public string/*(0)*/ Комментарий {get;set;}
		///<summary>
		///(Общ)
		///</summary>
		public V82.Перечисления/*Ссылка*/.СпособыРаспределенияЗатратНаВыпуск СпособРаспределенияЗатратНаВыпуск {get;set;}//Способ распределения затрат на выпуск
		///<summary>
		///(Общ)
		///</summary>
		public V82.Перечисления/*Ссылка*/.ТипыФильтровПриРаспределенииЗатратНаВыпуск ТипФильтраПриРаспределенииЗатратНаВыпуск {get;set;}//Тип фильтра при распределении затрат на выпуск
		public V82.Перечисления/*Ссылка*/.БазыРаспределенияЗатрат БазаРаспределенияЗатрат {get;set;}//База распределения затрат
		public V82.Перечисления/*Ссылка*/.ВидыПоказателейБазыРаспределения ПоказательБазыРаспределения {get;set;}//Показатель базы распределения
		public V82.СправочникиСсылка.ТипыЦенНоменклатуры ТипЦен {get;set;}//Тип цен
		public V82.СправочникиСсылка.ОсновноеСырье ОсновноеСырье {get;set;}//Основное сырье
		public V82.СправочникиСсылка.СпособыРаспределенияЗатратНаВыпуск СпособРаспределенияЗатратПоПодразделениям {get;set;}//Способ распределения затрат по подразделениям
		public bool РаспределятьНаСобственнуюПродукцию {get;set;}//Распределять на собственную продукцию
		public bool РаспределятьНаПродукциюСтороннегоПереработчика {get;set;}//Распределять на продукцию стороннего переработчика
		public bool РаспределятьНаПродукциюИзДавальческогоСырья {get;set;}//Распределять на продукцию из давальческого сырья
		public bool РаспределятьНаПодчиненныеПодразделения {get;set;}//Распределять на подчиненные подразделения
		public bool РаспределятьНаНаработку {get;set;}//Распределять на наработку
		public decimal/*(5.2)*/ Процент {get;set;}
		public decimal/*(15.3)*/ Коэффициент {get;set;}
		public V82.Перечисления/*Ссылка*/.ПорядкиОкругления ПорядокОкругления {get;set;}//Порядок округления
		public ХранилищеЗначения НастройкиПостроителя {get;set;}//Настройки построителя
		public bool ИзменитьНаПроцент {get;set;}//Изменить на процент
		public bool ИзменитьНаКоэффициент {get;set;}//Изменить на коэффициент
		public bool ОкруглитьДо {get;set;}//Округлить до
		public ХранилищеЗначения СхемаКомпоновкиДанных {get;set;}//Схема компоновки данных
		public V82.Перечисления/*Ссылка*/.ХарактерЗатрат Применимость {get;set;}//Для каких расходов применять
		///<summary>
		///При использовании этой базы распределение будет выполняться алгоритмом, основанным на схемах компоновки данных
		///</summary>
		public bool ИспользоватьПростоеРаспределение {get;set;}//Использовать упрощенный алгоритм распределения расходов
		public V82.Перечисления/*Ссылка*/.НаправленияРаспределенияЗатрат НаправлениеРаспределения {get;set;}//Куда распределять
		///<summary>
		///(Общ)
		///</summary>
		public string/*(0)*/ КогдаПрименять {get;set;}//Область, условия применения
		public V82.Перечисления/*Ссылка*/.ТипыБазРаспределения ТипБазыРаспределения {get;set;}//Тип базы
		
		public СпособыРаспределенияЗатратНаВыпуск()
		{
		}
		
		public СпособыРаспределенияЗатратНаВыпуск(byte[] УникальныйИдентификатор)
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Select top 1 
					_IDRRef [Ссылка]
					,_Version [Версия]
					,_Marked [ПометкаУдаления]
					,_IsMetadata [Предопределенный]
					,_Code [Код]
					,_Description [Наименование]
					,_Fld3740 [Комментарий]
					,_Fld3741RRef [СпособРаспределенияЗатратНаВыпуск]
					,_Fld3742RRef [ТипФильтраПриРаспределенииЗатратНаВыпуск]
					,_Fld3743RRef [БазаРаспределенияЗатрат]
					,_Fld3744RRef [ПоказательБазыРаспределения]
					,_Fld3745RRef [ТипЦен]
					,_Fld3746RRef [ОсновноеСырье]
					,_Fld3747RRef [СпособРаспределенияЗатратПоПодразделениям]
					,_Fld3748 [РаспределятьНаСобственнуюПродукцию]
					,_Fld3749 [РаспределятьНаПродукциюСтороннегоПереработчика]
					,_Fld3750 [РаспределятьНаПродукциюИзДавальческогоСырья]
					,_Fld3751 [РаспределятьНаПодчиненныеПодразделения]
					,_Fld3752 [РаспределятьНаНаработку]
					,_Fld3753 [Процент]
					,_Fld3754 [Коэффициент]
					,_Fld3755RRef [ПорядокОкругления]
					,_Fld3756 [НастройкиПостроителя]
					,_Fld3757 [ИзменитьНаПроцент]
					,_Fld3758 [ИзменитьНаКоэффициент]
					,_Fld3759 [ОкруглитьДо]
					,_Fld3760 [СхемаКомпоновкиДанных]
					,_Fld3761RRef [Применимость]
					,_Fld3762 [ИспользоватьПростоеРаспределение]
					,_Fld3763RRef [НаправлениеРаспределения]
					,_Fld3764 [КогдаПрименять]
					,_Fld3765RRef [ТипБазыРаспределения]
					From _Reference244(NOLOCK)
					Where _IDRRef=@УникальныйИдентификатор";
					Команда.Parameters.AddWithValue("УникальныйИдентификатор", УникальныйИдентификатор);
					using (var Читалка = Команда.ExecuteReader())
					{
						if (Читалка.Read())
						{
							//ToDo: Читать нужно через GetValues()
							Ссылка = new Guid((byte[])Читалка.GetValue(0));
							var ПотокВерсии = ((byte[])Читалка.GetValue(1));
							Array.Reverse(ПотокВерсии);
							Версия =  BitConverter.ToInt64(ПотокВерсии, 0);
							ВерсияДанных =  Convert.ToBase64String(ПотокВерсии);
							ПометкаУдаления = ((byte[])Читалка.GetValue(2))[0]==1;
							Предопределенный = ((byte[])Читалка.GetValue(3))[0]==1;
							Код = Читалка.GetString(4);
							Наименование = Читалка.GetString(5);
							Комментарий = Читалка.GetString(6);
							СпособРаспределенияЗатратНаВыпуск = V82.Перечисления/*Ссылка*/.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка.Получить((byte[])Читалка.GetValue(7));
							ТипФильтраПриРаспределенииЗатратНаВыпуск = V82.Перечисления/*Ссылка*/.ТипыФильтровПриРаспределенииЗатратНаВыпуск.ПустаяСсылка.Получить((byte[])Читалка.GetValue(8));
							БазаРаспределенияЗатрат = V82.Перечисления/*Ссылка*/.БазыРаспределенияЗатрат.ПустаяСсылка.Получить((byte[])Читалка.GetValue(9));
							ПоказательБазыРаспределения = V82.Перечисления/*Ссылка*/.ВидыПоказателейБазыРаспределения.ПустаяСсылка.Получить((byte[])Читалка.GetValue(10));
							ТипЦен = new V82.СправочникиСсылка.ТипыЦенНоменклатуры((byte[])Читалка.GetValue(11));
							ОсновноеСырье = new V82.СправочникиСсылка.ОсновноеСырье((byte[])Читалка.GetValue(12));
							СпособРаспределенияЗатратПоПодразделениям = new V82.СправочникиСсылка.СпособыРаспределенияЗатратНаВыпуск((byte[])Читалка.GetValue(13));
							РаспределятьНаСобственнуюПродукцию = ((byte[])Читалка.GetValue(14))[0]==1;
							РаспределятьНаПродукциюСтороннегоПереработчика = ((byte[])Читалка.GetValue(15))[0]==1;
							РаспределятьНаПродукциюИзДавальческогоСырья = ((byte[])Читалка.GetValue(16))[0]==1;
							РаспределятьНаПодчиненныеПодразделения = ((byte[])Читалка.GetValue(17))[0]==1;
							РаспределятьНаНаработку = ((byte[])Читалка.GetValue(18))[0]==1;
							Процент = Читалка.GetDecimal(19);
							Коэффициент = Читалка.GetDecimal(20);
							ПорядокОкругления = V82.Перечисления/*Ссылка*/.ПорядкиОкругления.ПустаяСсылка.Получить((byte[])Читалка.GetValue(21));
							ИзменитьНаПроцент = ((byte[])Читалка.GetValue(23))[0]==1;
							ИзменитьНаКоэффициент = ((byte[])Читалка.GetValue(24))[0]==1;
							ОкруглитьДо = ((byte[])Читалка.GetValue(25))[0]==1;
							Применимость = V82.Перечисления/*Ссылка*/.ХарактерЗатрат.ПустаяСсылка.Получить((byte[])Читалка.GetValue(27));
							ИспользоватьПростоеРаспределение = ((byte[])Читалка.GetValue(28))[0]==1;
							НаправлениеРаспределения = V82.Перечисления/*Ссылка*/.НаправленияРаспределенияЗатрат.ПустаяСсылка.Получить((byte[])Читалка.GetValue(29));
							КогдаПрименять = Читалка.GetString(30);
							ТипБазыРаспределения = V82.Перечисления/*Ссылка*/.ТипыБазРаспределения.ПустаяСсылка.Получить((byte[])Читалка.GetValue(31));
							//return Ссылка;
						}
						else
						{
							//return null;
						}
					}
				}
			}
		}
		
		public V82.СправочникиОбъект.СпособыРаспределенияЗатратНаВыпуск  ПолучитьОбъект()
		{
			var Объект = new V82.СправочникиОбъект.СпособыРаспределенияЗатратНаВыпуск();
			Объект._ЭтоНовый = false;
			Объект.Ссылка = Ссылка;
			Объект.Версия = Версия;
			Объект.ПометкаУдаления = ПометкаУдаления;
			Объект.Предопределенный = Предопределенный;
			Объект.Код = Код;
			Объект.Наименование = Наименование;
			Объект.Комментарий = Комментарий;
			Объект.СпособРаспределенияЗатратНаВыпуск = СпособРаспределенияЗатратНаВыпуск;
			Объект.ТипФильтраПриРаспределенииЗатратНаВыпуск = ТипФильтраПриРаспределенииЗатратНаВыпуск;
			Объект.БазаРаспределенияЗатрат = БазаРаспределенияЗатрат;
			Объект.ПоказательБазыРаспределения = ПоказательБазыРаспределения;
			Объект.ТипЦен = ТипЦен;
			Объект.ОсновноеСырье = ОсновноеСырье;
			Объект.СпособРаспределенияЗатратПоПодразделениям = СпособРаспределенияЗатратПоПодразделениям;
			Объект.РаспределятьНаСобственнуюПродукцию = РаспределятьНаСобственнуюПродукцию;
			Объект.РаспределятьНаПродукциюСтороннегоПереработчика = РаспределятьНаПродукциюСтороннегоПереработчика;
			Объект.РаспределятьНаПродукциюИзДавальческогоСырья = РаспределятьНаПродукциюИзДавальческогоСырья;
			Объект.РаспределятьНаПодчиненныеПодразделения = РаспределятьНаПодчиненныеПодразделения;
			Объект.РаспределятьНаНаработку = РаспределятьНаНаработку;
			Объект.Процент = Процент;
			Объект.Коэффициент = Коэффициент;
			Объект.ПорядокОкругления = ПорядокОкругления;
			Объект.НастройкиПостроителя = НастройкиПостроителя;
			Объект.ИзменитьНаПроцент = ИзменитьНаПроцент;
			Объект.ИзменитьНаКоэффициент = ИзменитьНаКоэффициент;
			Объект.ОкруглитьДо = ОкруглитьДо;
			Объект.СхемаКомпоновкиДанных = СхемаКомпоновкиДанных;
			Объект.Применимость = Применимость;
			Объект.ИспользоватьПростоеРаспределение = ИспользоватьПростоеРаспределение;
			Объект.НаправлениеРаспределения = НаправлениеРаспределения;
			Объект.КогдаПрименять = КогдаПрименять;
			Объект.ТипБазыРаспределения = ТипБазыРаспределения;
			return Объект;
		}
		
		private static readonly Hashtable Кэш = new Hashtable(1000);
		
		public static V82.СправочникиСсылка.СпособыРаспределенияЗатратНаВыпуск ВзятьИзКэша(byte[] УникальныйИдентификатор)
		{
			var УИ = new Guid(УникальныйИдентификатор);
			if (Кэш.ContainsKey(УИ))
			{
				return (V82.СправочникиСсылка.СпособыРаспределенияЗатратНаВыпуск)Кэш[УИ];
			}
			var Ссылка = new V82.СправочникиСсылка.СпособыРаспределенияЗатратНаВыпуск(УникальныйИдентификатор);
			Кэш.Add(УИ, Ссылка);
			return Ссылка;
		}
		
		public void СериализацияProtoBuf(Stream Поток)
		{
			Serializer.Serialize(Поток,this);
		}
		
		public string СериализацияJson()
		{
			return this.ToJson();
		}
		
		public string СериализацияXml()
		{
			return this.ToXml();
		}
	}
}