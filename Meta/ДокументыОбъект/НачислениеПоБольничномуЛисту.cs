
using System;
using System.Data.SqlClient;
using System.Globalization;
using System.Runtime.Serialization;
using ProtoBuf;/*https://github.com/ServiceStack/ServiceStack/tree/master/lib*/
using ServiceStack.Text;/*https://github.com/ServiceStack/ServiceStack.Text*/
using V82;
using V82.ОбщиеОбъекты;
using V82.ДокументыСсылка;
using V82.ДокументыОбъект;
using V82.ДокументыСсылка;
using V82.Перечисления;//Ссылка;
namespace V82.ДокументыОбъект
{
	///<summary>
	///(Регл)
	///</summary>
	[ProtoContract]
	[DataContract]
	public partial class НачислениеПоБольничномуЛисту:ДокументОбъект
	{
		public bool _ЭтоНовый;
		public bool ЭтоНовый()
		{
			return _ЭтоНовый;
		}
		[DataMember]
		[ProtoMember(1)]
		public Guid Ссылка {get;set;}
		[DataMember]
		[ProtoMember(2)]
		public long Версия {get;set;}
		[DataMember]
		[ProtoMember(3)]
		public string ВерсияДанных {get;set;}
		/*static хэш сумма состава и порядка реквизитов*/
		/*версия класса восстановленного из пакета*/
		[DataMember]
		[ProtoMember(4)]
		public bool ПометкаУдаления {get;set;}
		[DataMember]
		[ProtoMember(5)]
		public DateTime Дата {get;set;}
		[DataMember]
		[ProtoMember(6)]
		public DateTime ПрефиксНомера {get;set;}
		[DataMember]
		[ProtoMember(7)]
		public string/*11*/ Номер {get;set;}
		[DataMember]
		[ProtoMember(8)]
		public bool Проведен {get;set;}
		[DataMember]
		[ProtoMember(9)]
		public DateTime ПериодРегистрации {get;set;}//Период регистрации
		[DataMember]
		[ProtoMember(10)]
		public V82.СправочникиСсылка.Организации Организация {get;set;}
		///<summary>
		///Любая дополнительная информация
		///</summary>
		[DataMember]
		[ProtoMember(11)]
		public string/*(0)*/ Комментарий {get;set;}
		[DataMember]
		[ProtoMember(12)]
		public V82.СправочникиСсылка.Пользователи Ответственный {get;set;}
		[DataMember]
		[ProtoMember(13)]
		public V82.СправочникиСсылка.СотрудникиОрганизаций Сотрудник {get;set;}
		[DataMember]
		[ProtoMember(14)]
		public V82.СправочникиСсылка.ФизическиеЛица Физлицо {get;set;}//Физическое лицо
		[DataMember]
		[ProtoMember(15)]
		public V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности ПричинаНетрудоспособности {get;set;}//Причина нетрудоспособности
		///<summary>
		///Процент оплаты
		///</summary>
		[DataMember]
		[ProtoMember(16)]
		public decimal/*(6.2)*/ ПроцентОплаты {get;set;}//Процент оплаты
		[DataMember]
		[ProtoMember(17)]
		public bool ЯвляетсяПродолжениемБолезни {get;set;}//Является продолжением болезни
		[DataMember]
		[ProtoMember(18)]
		public V82.ДокументыСсылка.НачислениеПоБольничномуЛисту ПервичныйБольничныйЛист {get;set;}//Первичный больничный лист
		///<summary>
		///Дата начала события, оплачиваемого по среднему заработку
		///</summary>
		[DataMember]
		[ProtoMember(19)]
		public DateTime ДатаНачалаСобытия {get;set;}//Дата начала события
		[DataMember]
		[ProtoMember(20)]
		public DateTime ДатаНачала {get;set;}//Дата начала
		[DataMember]
		[ProtoMember(21)]
		public DateTime ДатаНачалаОплаты {get;set;}//Дата начала оплаты
		[DataMember]
		[ProtoMember(22)]
		public DateTime ДатаОкончания {get;set;}//Дата окончания
		[DataMember]
		[ProtoMember(23)]
		public DateTime ДатаНарушенияРежима {get;set;}//Дата нарушения режима
		[DataMember]
		[ProtoMember(24)]
		public bool ПособиеОтражаетсяВРеглУчетеТекущимДокументом {get;set;}//Пособие отражается в регл учете текущим документом
		[DataMember]
		[ProtoMember(25)]
		public V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия ОграничениеПособия {get;set;}//Ограничение пособия
		[DataMember]
		[ProtoMember(26)]
		public string/*(12)*/ НомерВходящегоДокумента {get;set;}//Номер документа сторонней организации
		[DataMember]
		[ProtoMember(27)]
		public string/*(10)*/ СерияВходящегоДокумента {get;set;}//Серия документа сторонней организации
		[DataMember]
		[ProtoMember(28)]
		public V82.ДокументыСсылка.НачислениеПоБольничномуЛисту ПерерассчитываемыйДокумент {get;set;}//Перерассчитываемый документ
		[DataMember]
		[ProtoMember(29)]
		public V82.Перечисления/*Ссылка*/.ПричиныНетрудоспособности ПричинаНетрудоспособностиПереходногоПериода {get;set;}//Причина нетрудоспособности переходного периода
		///<summary>
		///Процент оплаты
		///</summary>
		[DataMember]
		[ProtoMember(30)]
		public decimal/*(6.2)*/ ПроцентОплатыПереходногоПериода {get;set;}//Процент оплаты переходного периода
		[DataMember]
		[ProtoMember(31)]
		public V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия ОграничениеПособияПереходногоПериода {get;set;}//Ограничение пособия переходного периода
		[DataMember]
		[ProtoMember(32)]
		public V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми СлучайУходаЗаБольнымРебенкомПереходногоПериода {get;set;}//Случай ухода за больным ребенком переходного периода
		[DataMember]
		[ProtoMember(33)]
		public V82.Перечисления/*Ссылка*/.СтратегииОтраженияВРеглУчетеНачислений СтратегияОтраженияВУчете {get;set;}//Стратегия отражения в учете
		[DataMember]
		[ProtoMember(34)]
		public V82.ДокументыСсылка.ПриемНаРаботуВОрганизацию УдалитьПриказ {get;set;}//Удалить приказ
		[DataMember]
		[ProtoMember(35)]
		public decimal/*(8.5)*/ ПодпадаетПодЕНВД {get;set;}//Подпадает под ЕНВД
		[DataMember]
		[ProtoMember(36)]
		public V82.Перечисления/*Ссылка*/.СлучаиУходаЗаБольнымиДетьми СлучайУходаЗаБольнымРебенком {get;set;}//Случай ухода за больным ребенком
		[DataMember]
		[ProtoMember(37)]
		public decimal/*(3)*/ ДнейОплаты {get;set;}//Дней оплаты
		[DataMember]
		[ProtoMember(38)]
		public object ВидРасчета {get;set;}//Вид расчета
		[DataMember]
		[ProtoMember(39)]
		public bool ДоплачиватьДоПолногоСреднегоЗаработка {get;set;}//Доплачивать до полного среднего заработка
		[DataMember]
		[ProtoMember(40)]
		public object ВидРасчетаДоплаты {get;set;}//Вид расчета доплаты
		///<summary>
		///Дата начала расчетного периода
		///</summary>
		[DataMember]
		[ProtoMember(41)]
		public DateTime ПериодРасчетаСреднегоЗаработкаНачало {get;set;}//Период расчета среднего заработка начало
		///<summary>
		///Дата окончания расчетного периода
		///</summary>
		[DataMember]
		[ProtoMember(42)]
		public DateTime ПериодРасчетаСреднегоЗаработкаОкончание {get;set;}//Период расчета среднего заработка окончание
		///<summary>
		///Процент оплаты
		///</summary>
		[DataMember]
		[ProtoMember(43)]
		public decimal/*(6.2)*/ ПроцентОплатыБезЛьгот {get;set;}//Процент оплаты без льгот
		[DataMember]
		[ProtoMember(44)]
		public V82.Перечисления/*Ссылка*/.ВидыОграниченияПособия ОграничениеПособияБезЛьгот {get;set;}//Ограничение пособия без льгот
		[DataMember]
		[ProtoMember(45)]
		public bool ПрименятьЛьготыПриНачисленииПособия {get;set;}//Применять льготы при начислении пособия
		[DataMember]
		[ProtoMember(46)]
		public V82.Перечисления/*Ссылка*/.ВыплатыПособийЗаСчетФедеральногоБюджета ВыплатаЗаСчетФедеральногоБюджета {get;set;}//Выплата за счет федерального бюджета
		[DataMember]
		[ProtoMember(47)]
		public object ВидРасчетаЗаСчетРаботодателя {get;set;}//Вид расчета за счет работодателя
		[DataMember]
		[ProtoMember(48)]
		public bool УчитыватьЗаработокПредыдущихСтрахователей {get;set;}//Учитывать заработок предыдущих страхователей
		[DataMember]
		[ProtoMember(49)]
		public decimal/*(1)*/ ДнейОплатыРаботодателем {get;set;}//Дней оплаты работодателем
		[DataMember]
		[ProtoMember(50)]
		public bool НеВыплачиватьПособие {get;set;}//Не выплачивать пособие
		[DataMember]
		[ProtoMember(51)]
		public bool РасчетПоПравилам2010Года {get;set;}//Расчет по правилам 2010 года
		[DataMember]
		[ProtoMember(52)]
		public string/*(2)*/ УсловияИсчисленияКод1 {get;set;}//Условия исчисления: код
		[DataMember]
		[ProtoMember(53)]
		public string/*(2)*/ УсловияИсчисленияКод2 {get;set;}//Условия исчисления: код
		[DataMember]
		[ProtoMember(54)]
		public string/*(2)*/ УсловияИсчисленияКод3 {get;set;}//Условия исчисления: код
		[DataMember]
		[ProtoMember(55)]
		public decimal/*(2)*/ СтажЛет {get;set;}//Стаж: лет
		[DataMember]
		[ProtoMember(56)]
		public decimal/*(2)*/ СтажМесяцев {get;set;}//Стаж: месяцев
		[DataMember]
		[ProtoMember(57)]
		public decimal/*(2)*/ СтажБезНестраховыхПериодовЛет {get;set;}//Стаж: лет
		[DataMember]
		[ProtoMember(58)]
		public decimal/*(2)*/ СтажБезНестраховыхПериодовСтажМесяцев {get;set;}//Стаж: месяцев
		[DataMember]
		[ProtoMember(59)]
		public bool ПеречислятьПособиеПочтовымПереводом {get;set;}//Перечислять пособие почтовым переводом
		[DataMember]
		[ProtoMember(60)]
		public V82.СправочникиСсылка.Банки Банк {get;set;}
		[DataMember]
		[ProtoMember(61)]
		public string/*(100)*/ НаименованиеБанка {get;set;}//Наименование банка
		[DataMember]
		[ProtoMember(62)]
		public string/*(9)*/ БИКБанка {get;set;}//БИК банка
		[DataMember]
		[ProtoMember(63)]
		public string/*(20)*/ НомерЛицевогоСчета {get;set;}//Номер лицевого счета
		[DataMember]
		[ProtoMember(64)]
		public string/*(240)*/ АдресПочтовый {get;set;}//Адрес почтовый
		///<summary>
		///(Общ)
		///</summary>
		[DataMember]
		[ProtoMember(65)]
		public string/*(40)*/ Фамилия {get;set;}
		///<summary>
		///(Общ)
		///</summary>
		[DataMember]
		[ProtoMember(66)]
		public string/*(40)*/ Имя {get;set;}
		///<summary>
		///(Общ)
		///</summary>
		[DataMember]
		[ProtoMember(67)]
		public string/*(40)*/ Отчество {get;set;}
		[DataMember]
		[ProtoMember(68)]
		public V82.СправочникиСсылка.ДокументыУдостоверяющиеЛичность ВидДокумента {get;set;}//Вид документа
		[DataMember]
		[ProtoMember(69)]
		public string/*(14)*/ СерияДокумента {get;set;}//Серия документа
		[DataMember]
		[ProtoMember(70)]
		public string/*(14)*/ НомерДокумента {get;set;}//Номер документа
		[DataMember]
		[ProtoMember(71)]
		public DateTime ДатаВыдачиДокумента {get;set;}//Дата выдачи документа
		[DataMember]
		[ProtoMember(72)]
		public DateTime ДатаДействияДокумента {get;set;}//Дата действия документа
		[DataMember]
		[ProtoMember(73)]
		public DateTime ПериодПростояС {get;set;}//Период простоя: с
		[DataMember]
		[ProtoMember(74)]
		public DateTime ПериодПростояПо {get;set;}//Период простоя: по
		[DataMember]
		[ProtoMember(75)]
		public bool РасчетПособияИзТарифнойСтавки {get;set;}//Расчет пособия из тарифной ставки
		[DataMember]
		[ProtoMember(76)]
		public V82.СправочникиСсылка.ДолжностиОрганизаций ДолжностьУполномоченного {get;set;}//Должность уполномоченного
		[DataMember]
		[ProtoMember(77)]
		public V82.СправочникиСсылка.ФизическиеЛица Уполномоченный {get;set;}
		[DataMember]
		[ProtoMember(78)]
		public bool ПоставленаНаУчетВРанниеСрокиБеременности {get;set;}//Поставлена на учет в ранние сроки беременности
		[DataMember]
		[ProtoMember(79)]
		public DateTime ДатаВыдачиБольничного {get;set;}//Дата выдачи больничного
		[DataMember]
		[ProtoMember(80)]
		public string/*(2)*/ КодПричиныНетрудоспособности {get;set;}//Код причины нетрудоспособности
		[DataMember]
		[ProtoMember(81)]
		public string/*(3)*/ ДополнительныйКодПричиныНетрудоспособности {get;set;}//Дополнительный код причины нетрудоспособности
		[DataMember]
		[ProtoMember(82)]
		public string/*(2)*/ ВторойКодПричиныНетрудоспособности {get;set;}//Второй код причины нетрудоспособности
		[DataMember]
		[ProtoMember(83)]
		public DateTime ДатаИзмененияКодаПричиныНетрудоспособности {get;set;}//Дата изменения кода причины нетрудоспособности
		[DataMember]
		[ProtoMember(84)]
		public DateTime ДатаСправкиБеременной {get;set;}//Дата справки беременной
		[DataMember]
		[ProtoMember(85)]
		public DateTime ПериодНахожденияВСтационареСРебенкомС {get;set;}//Период нахождения в стационаре с ребенком: с
		[DataMember]
		[ProtoMember(86)]
		public DateTime ПериодНахожденияВСтационареСРебенкомПо {get;set;}//Период нахождения в стационаре с ребенком: по
		[DataMember]
		[ProtoMember(87)]
		public string/*(2)*/ КодНарушенияРежима {get;set;}//Код нарушения режима
		[DataMember]
		[ProtoMember(88)]
		public DateTime ДатаРегистрацииДокументовМСЭ {get;set;}//Дата регистрации документов МСЭ
		[DataMember]
		[ProtoMember(89)]
		public bool УстановленаИзмененаГруппаИнвалидности {get;set;}//Установлена/изменена группа инвалидности
		[DataMember]
		[ProtoMember(90)]
		public DateTime ДатаВыходаНаРаботу {get;set;}//Дата выхода на работу
		[DataMember]
		[ProtoMember(91)]
		public bool ЯвляетсяДубликатом {get;set;}//Является дубликатом
		[DataMember]
		[ProtoMember(92)]
		public string/*(240)*/ АдресЛПУ {get;set;}//Адрес ЛПУ
		[DataMember]
		[ProtoMember(93)]
		public string/*(0)*/ НаименованиеЛПУ {get;set;}//Наименование ЛПУ
		[DataMember]
		[ProtoMember(94)]
		public string/*(15)*/ ОГРН_ЛПУ {get;set;}//ОГРН ЛПУ
		[DataMember]
		[ProtoMember(95)]
		public string/*(12)*/ НомерЛисткаПоОсновномуМестуРаботы {get;set;}//Номер листка по основному месту работы
		[DataMember]
		[ProtoMember(96)]
		public DateTime ДатаОкончанияПутевки {get;set;}//Дата окончания путевки
		[DataMember]
		[ProtoMember(97)]
		public string/*(10)*/ НомерПутевки {get;set;}//Номер путевки
		[DataMember]
		[ProtoMember(98)]
		public string/*(15)*/ ОГРН_Санатория {get;set;}//ОГРН санатория
		[DataMember]
		[ProtoMember(99)]
		public string/*(12)*/ НомерЛисткаПродолжения {get;set;}//Номер листка продолжения
		[DataMember]
		[ProtoMember(100)]
		public DateTime ДатаНаправленияВБюроМСЭ {get;set;}//Дата направления в бюро МСЭ
		[DataMember]
		[ProtoMember(101)]
		public DateTime ДатаОсвидетельствованияМСЭ {get;set;}//Дата освидетельствования МСЭ
		[DataMember]
		[ProtoMember(102)]
		public string/*(2)*/ НовыйСтатусНетрудопособного {get;set;}//Новый статус нетрудопособного
		[DataMember]
		[ProtoMember(103)]
		public DateTime ДатаНовыйСтатусНетрудопособного {get;set;}//Дата новый статус нетрудопособного
		[DataMember]
		[ProtoMember(104)]
		public string/*(0)*/ КемВыданДокумент {get;set;}//Кем выдан документ
		[DataMember]
		[ProtoMember(105)]
		public string/*(1)*/ ГруппаИнвалидности {get;set;}//Группа инвалидности
		[DataMember]
		[ProtoMember(106)]
		public string/*(2)*/ КодПричиныПерерасчета {get;set;}//Код причины перерасчета
		[DataMember]
		[ProtoMember(107)]
		public decimal/*(15.2)*/ НДФЛсПособия {get;set;}//НДФЛ с пособия
		///<summary>
		///Корреспонденский счет банка
		///</summary>
		[DataMember]
		[ProtoMember(108)]
		public string/*(20)*/ КоррСчетБанка {get;set;}//Корр. счет банка
		[DataMember]
		[ProtoMember(109)]
		public string/*(14)*/ НомерСправкиБеременной {get;set;}//Номер справки беременной
		[DataMember]
		[ProtoMember(110)]
		public string/*(100)*/ НаименованиеДокументаНаПроживание {get;set;}//Наименование документа на проживание
		[DataMember]
		[ProtoMember(111)]
		public string/*(14)*/ СерияДокументаНаПроживание {get;set;}//Серия документа на проживание
		[DataMember]
		[ProtoMember(112)]
		public string/*(14)*/ НомерДокументаНаПроживание {get;set;}//Номер документа на проживание
		[DataMember]
		[ProtoMember(113)]
		public DateTime ДатаВыдачиДокументаНаПроживание {get;set;}//Дата выдачи документа на проживание
		[DataMember]
		[ProtoMember(114)]
		public string/*(240)*/ АдресРегистрации {get;set;}//Адрес регистрации
		[DataMember]
		[ProtoMember(115)]
		public string/*(15)*/ Телефон {get;set;}
		[DataMember]
		[ProtoMember(116)]
		public decimal/*(15.2)*/ ТарифнаяСтавкаОклад {get;set;}//Тарифная ставка оклад
		[DataMember]
		[ProtoMember(117)]
		public decimal/*(15.2)*/ СреднедневнойЗаработокНаПериодПростоя {get;set;}//Среднедневной заработок на период простоя
		[DataMember]
		[ProtoMember(118)]
		public string/*(30)*/ ТелефонСоставителя {get;set;}//Телефон составителя
		[DataMember]
		[ProtoMember(119)]
		public string/*(17)*/ АдресПочтовыйКодПоКЛАДР {get;set;}//Адрес почтовый код по КЛАДР
		[DataMember]
		[ProtoMember(120)]
		public string/*(17)*/ АдресРегистрацииКодПоКЛАДР {get;set;}//Адрес регистрации код по КЛАДР
		[DataMember]
		[ProtoMember(121)]
		public string/*(17)*/ АдресЛПУКодПоКЛАДР {get;set;}//Адрес ЛПУКод по КЛАДР
		[DataMember]
		[ProtoMember(122)]
		public V82.СправочникиСсылка.МедицинскиеОрганизации ЛПУ {get;set;}
		[DataMember]
		[ProtoMember(123)]
		public bool НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении {get;set;}//Новый порядок расчета пособия по материнству при исправлении
		public void Записать()
		{
			//Установка блокировки элемента на горизантально масштабированный кластер.
			//Опционально введение тайм аута на запись одного и того же объекта, не чаще раза в 5-секунд. Защита от спама. упращение алгоритма блокировки.
			//Выделение сервиса для блокировки элемента и генерации кода
			//Выполнение операций контроля без обращений к sql-серверу.
			//Контроль конфликта блокировок.
			//Контроль загрузки булкинсертом гетерогенной коллекции.
			//Контроль уникальности кода для Документов.
			//Контроль уникальности номера для документов, в границах префикса.
			//Контроль владельца, он не может быть группой.
			//Контроль владельца он должен быть задан.
			//Контроль родителя он должен быть группой.
			//Контроль количества уровней, должен соотвествовать метаданным.
			//Контроль версии, объект не должен был быть записан перед чтением текущей записи, алгоритм версионника.
			//Контроль уникальности ссылки
			//Контроль зацикливания
			//Опционально контроль битых ссылок.
			//Соблюдейние транзакционности. ПередЗаписью. Открытие транзации. Валидации. ПриЗаписи. Фиксация транзакции. Информирование о записи элемента.
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					if(_ЭтоНовый)
					{
						Команда.CommandText = @"
						Insert Into _Document440(
						_IDRRef
						/*,_Version*/
						,_Marked
						,_IsMetadata
						,_Number
						,_Fld10021
						,_Fld10022RRef
						,_Fld10023
						,_Fld10024RRef
						,_Fld10025RRef
						,_Fld10026RRef
						,_Fld10027RRef
						,_Fld10028
						,_Fld10029
						,_Fld10030RRef
						,_Fld10031
						,_Fld10032
						,_Fld10033
						,_Fld10034
						,_Fld10035
						,_Fld10036
						,_Fld10037RRef
						,_Fld10038
						,_Fld10039
						,_Fld10040RRef
						,_Fld10041RRef
						,_Fld10042
						,_Fld10043RRef
						,_Fld10044RRef
						,_Fld10045RRef
						,_Fld10046RRef
						,_Fld10047
						,_Fld10048RRef
						,_Fld10049
						,_Fld10050RRef
						,_Fld10051
						,_Fld10052RRef
						,_Fld10053
						,_Fld10054
						,_Fld10055
						,_Fld10056RRef
						,_Fld10057
						,_Fld10058RRef
						,_Fld10059RRef
						,_Fld10060
						,_Fld10061
						,_Fld10062
						,_Fld10063
						,_Fld10064
						,_Fld10065
						,_Fld10066
						,_Fld10067
						,_Fld10068
						,_Fld10069
						,_Fld10070
						,_Fld10071
						,_Fld10072RRef
						,_Fld10073
						,_Fld10074
						,_Fld10075
						,_Fld10076
						,_Fld10077
						,_Fld10078
						,_Fld10079
						,_Fld10080RRef
						,_Fld10081
						,_Fld10082
						,_Fld10083
						,_Fld10084
						,_Fld10085
						,_Fld10086
						,_Fld10087
						,_Fld10088RRef
						,_Fld10089RRef
						,_Fld10090
						,_Fld10091
						,_Fld10092
						,_Fld10093
						,_Fld10094
						,_Fld10095
						,_Fld10096
						,_Fld10097
						,_Fld10098
						,_Fld10099
						,_Fld10100
						,_Fld10101
						,_Fld10102
						,_Fld10103
						,_Fld10104
						,_Fld10105
						,_Fld10106
						,_Fld10107
						,_Fld10108
						,_Fld10109
						,_Fld10110
						,_Fld10111
						,_Fld10112
						,_Fld10113
						,_Fld10114
						,_Fld10115
						,_Fld10116
						,_Fld10117
						,_Fld10118
						,_Fld10119
						,_Fld10120
						,_Fld10121
						,_Fld10122
						,_Fld10123
						,_Fld10124
						,_Fld10125
						,_Fld10126
						,_Fld10127
						,_Fld10128
						,_Fld10129
						,_Fld10130
						,_Fld10131
						,_Fld10132
						,_Fld10133
						,_Fld10134RRef
						,_Fld10135)
						Values(
						@Ссылка
						/*,@Версия*/
						,@ПометкаУдаления
						,@Номер
						,@ПериодРегистрации
						,@Организация
						,@Комментарий
						,@Ответственный
						,@Сотрудник
						,@Физлицо
						,@ПричинаНетрудоспособности
						,@ПроцентОплаты
						,@ЯвляетсяПродолжениемБолезни
						,@ПервичныйБольничныйЛист
						,@ДатаНачалаСобытия
						,@ДатаНачала
						,@ДатаНачалаОплаты
						,@ДатаОкончания
						,@ДатаНарушенияРежима
						,@ПособиеОтражаетсяВРеглУчетеТекущимДокументом
						,@ОграничениеПособия
						,@НомерВходящегоДокумента
						,@СерияВходящегоДокумента
						,@ПерерассчитываемыйДокумент
						,@ПричинаНетрудоспособностиПереходногоПериода
						,@ПроцентОплатыПереходногоПериода
						,@ОграничениеПособияПереходногоПериода
						,@СлучайУходаЗаБольнымРебенкомПереходногоПериода
						,@СтратегияОтраженияВУчете
						,@УдалитьПриказ
						,@ПодпадаетПодЕНВД
						,@СлучайУходаЗаБольнымРебенком
						,@ДнейОплаты
						,@ВидРасчета
						,@ДоплачиватьДоПолногоСреднегоЗаработка
						,@ВидРасчетаДоплаты
						,@ПериодРасчетаСреднегоЗаработкаНачало
						,@ПериодРасчетаСреднегоЗаработкаОкончание
						,@ПроцентОплатыБезЛьгот
						,@ОграничениеПособияБезЛьгот
						,@ПрименятьЛьготыПриНачисленииПособия
						,@ВыплатаЗаСчетФедеральногоБюджета
						,@ВидРасчетаЗаСчетРаботодателя
						,@УчитыватьЗаработокПредыдущихСтрахователей
						,@ДнейОплатыРаботодателем
						,@НеВыплачиватьПособие
						,@РасчетПоПравилам2010Года
						,@УсловияИсчисленияКод1
						,@УсловияИсчисленияКод2
						,@УсловияИсчисленияКод3
						,@СтажЛет
						,@СтажМесяцев
						,@СтажБезНестраховыхПериодовЛет
						,@СтажБезНестраховыхПериодовСтажМесяцев
						,@ПеречислятьПособиеПочтовымПереводом
						,@Банк
						,@НаименованиеБанка
						,@БИКБанка
						,@НомерЛицевогоСчета
						,@АдресПочтовый
						,@Фамилия
						,@Имя
						,@Отчество
						,@ВидДокумента
						,@СерияДокумента
						,@НомерДокумента
						,@ДатаВыдачиДокумента
						,@ДатаДействияДокумента
						,@ПериодПростояС
						,@ПериодПростояПо
						,@РасчетПособияИзТарифнойСтавки
						,@ДолжностьУполномоченного
						,@Уполномоченный
						,@ПоставленаНаУчетВРанниеСрокиБеременности
						,@ДатаВыдачиБольничного
						,@КодПричиныНетрудоспособности
						,@ДополнительныйКодПричиныНетрудоспособности
						,@ВторойКодПричиныНетрудоспособности
						,@ДатаИзмененияКодаПричиныНетрудоспособности
						,@ДатаСправкиБеременной
						,@ПериодНахожденияВСтационареСРебенкомС
						,@ПериодНахожденияВСтационареСРебенкомПо
						,@КодНарушенияРежима
						,@ДатаРегистрацииДокументовМСЭ
						,@УстановленаИзмененаГруппаИнвалидности
						,@ДатаВыходаНаРаботу
						,@ЯвляетсяДубликатом
						,@АдресЛПУ
						,@НаименованиеЛПУ
						,@ОГРН_ЛПУ
						,@НомерЛисткаПоОсновномуМестуРаботы
						,@ДатаОкончанияПутевки
						,@НомерПутевки
						,@ОГРН_Санатория
						,@НомерЛисткаПродолжения
						,@ДатаНаправленияВБюроМСЭ
						,@ДатаОсвидетельствованияМСЭ
						,@НовыйСтатусНетрудопособного
						,@ДатаНовыйСтатусНетрудопособного
						,@КемВыданДокумент
						,@ГруппаИнвалидности
						,@КодПричиныПерерасчета
						,@НДФЛсПособия
						,@КоррСчетБанка
						,@НомерСправкиБеременной
						,@НаименованиеДокументаНаПроживание
						,@СерияДокументаНаПроживание
						,@НомерДокументаНаПроживание
						,@ДатаВыдачиДокументаНаПроживание
						,@АдресРегистрации
						,@Телефон
						,@ТарифнаяСтавкаОклад
						,@СреднедневнойЗаработокНаПериодПростоя
						,@ТелефонСоставителя
						,@АдресПочтовыйКодПоКЛАДР
						,@АдресРегистрацииКодПоКЛАДР
						,@АдресЛПУКодПоКЛАДР
						,@ЛПУ
						,@НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении)";
					}
					else
					{
						Команда.CommandText = @"
						Update _Document440
						Set
						/*_IDRRef	= @Ссылка*/
						/*,_Version	= @Версия*/
						_Marked	= @ПометкаУдаления
						,_Number	= @Номер
						,_Fld10021	= @ПериодРегистрации
						,_Fld10022RRef	= @Организация
						,_Fld10023	= @Комментарий
						,_Fld10024RRef	= @Ответственный
						,_Fld10025RRef	= @Сотрудник
						,_Fld10026RRef	= @Физлицо
						,_Fld10027RRef	= @ПричинаНетрудоспособности
						,_Fld10028	= @ПроцентОплаты
						,_Fld10029	= @ЯвляетсяПродолжениемБолезни
						,_Fld10030RRef	= @ПервичныйБольничныйЛист
						,_Fld10031	= @ДатаНачалаСобытия
						,_Fld10032	= @ДатаНачала
						,_Fld10033	= @ДатаНачалаОплаты
						,_Fld10034	= @ДатаОкончания
						,_Fld10035	= @ДатаНарушенияРежима
						,_Fld10036	= @ПособиеОтражаетсяВРеглУчетеТекущимДокументом
						,_Fld10037RRef	= @ОграничениеПособия
						,_Fld10038	= @НомерВходящегоДокумента
						,_Fld10039	= @СерияВходящегоДокумента
						,_Fld10040RRef	= @ПерерассчитываемыйДокумент
						,_Fld10041RRef	= @ПричинаНетрудоспособностиПереходногоПериода
						,_Fld10042	= @ПроцентОплатыПереходногоПериода
						,_Fld10043RRef	= @ОграничениеПособияПереходногоПериода
						,_Fld10044RRef	= @СлучайУходаЗаБольнымРебенкомПереходногоПериода
						,_Fld10045RRef	= @СтратегияОтраженияВУчете
						,_Fld10046RRef	= @УдалитьПриказ
						,_Fld10047	= @ПодпадаетПодЕНВД
						,_Fld10048RRef	= @СлучайУходаЗаБольнымРебенком
						,_Fld10049	= @ДнейОплаты
						,_Fld10050RRef	= @ВидРасчета
						,_Fld10051	= @ДоплачиватьДоПолногоСреднегоЗаработка
						,_Fld10052RRef	= @ВидРасчетаДоплаты
						,_Fld10053	= @ПериодРасчетаСреднегоЗаработкаНачало
						,_Fld10054	= @ПериодРасчетаСреднегоЗаработкаОкончание
						,_Fld10055	= @ПроцентОплатыБезЛьгот
						,_Fld10056RRef	= @ОграничениеПособияБезЛьгот
						,_Fld10057	= @ПрименятьЛьготыПриНачисленииПособия
						,_Fld10058RRef	= @ВыплатаЗаСчетФедеральногоБюджета
						,_Fld10059RRef	= @ВидРасчетаЗаСчетРаботодателя
						,_Fld10060	= @УчитыватьЗаработокПредыдущихСтрахователей
						,_Fld10061	= @ДнейОплатыРаботодателем
						,_Fld10062	= @НеВыплачиватьПособие
						,_Fld10063	= @РасчетПоПравилам2010Года
						,_Fld10064	= @УсловияИсчисленияКод1
						,_Fld10065	= @УсловияИсчисленияКод2
						,_Fld10066	= @УсловияИсчисленияКод3
						,_Fld10067	= @СтажЛет
						,_Fld10068	= @СтажМесяцев
						,_Fld10069	= @СтажБезНестраховыхПериодовЛет
						,_Fld10070	= @СтажБезНестраховыхПериодовСтажМесяцев
						,_Fld10071	= @ПеречислятьПособиеПочтовымПереводом
						,_Fld10072RRef	= @Банк
						,_Fld10073	= @НаименованиеБанка
						,_Fld10074	= @БИКБанка
						,_Fld10075	= @НомерЛицевогоСчета
						,_Fld10076	= @АдресПочтовый
						,_Fld10077	= @Фамилия
						,_Fld10078	= @Имя
						,_Fld10079	= @Отчество
						,_Fld10080RRef	= @ВидДокумента
						,_Fld10081	= @СерияДокумента
						,_Fld10082	= @НомерДокумента
						,_Fld10083	= @ДатаВыдачиДокумента
						,_Fld10084	= @ДатаДействияДокумента
						,_Fld10085	= @ПериодПростояС
						,_Fld10086	= @ПериодПростояПо
						,_Fld10087	= @РасчетПособияИзТарифнойСтавки
						,_Fld10088RRef	= @ДолжностьУполномоченного
						,_Fld10089RRef	= @Уполномоченный
						,_Fld10090	= @ПоставленаНаУчетВРанниеСрокиБеременности
						,_Fld10091	= @ДатаВыдачиБольничного
						,_Fld10092	= @КодПричиныНетрудоспособности
						,_Fld10093	= @ДополнительныйКодПричиныНетрудоспособности
						,_Fld10094	= @ВторойКодПричиныНетрудоспособности
						,_Fld10095	= @ДатаИзмененияКодаПричиныНетрудоспособности
						,_Fld10096	= @ДатаСправкиБеременной
						,_Fld10097	= @ПериодНахожденияВСтационареСРебенкомС
						,_Fld10098	= @ПериодНахожденияВСтационареСРебенкомПо
						,_Fld10099	= @КодНарушенияРежима
						,_Fld10100	= @ДатаРегистрацииДокументовМСЭ
						,_Fld10101	= @УстановленаИзмененаГруппаИнвалидности
						,_Fld10102	= @ДатаВыходаНаРаботу
						,_Fld10103	= @ЯвляетсяДубликатом
						,_Fld10104	= @АдресЛПУ
						,_Fld10105	= @НаименованиеЛПУ
						,_Fld10106	= @ОГРН_ЛПУ
						,_Fld10107	= @НомерЛисткаПоОсновномуМестуРаботы
						,_Fld10108	= @ДатаОкончанияПутевки
						,_Fld10109	= @НомерПутевки
						,_Fld10110	= @ОГРН_Санатория
						,_Fld10111	= @НомерЛисткаПродолжения
						,_Fld10112	= @ДатаНаправленияВБюроМСЭ
						,_Fld10113	= @ДатаОсвидетельствованияМСЭ
						,_Fld10114	= @НовыйСтатусНетрудопособного
						,_Fld10115	= @ДатаНовыйСтатусНетрудопособного
						,_Fld10116	= @КемВыданДокумент
						,_Fld10117	= @ГруппаИнвалидности
						,_Fld10118	= @КодПричиныПерерасчета
						,_Fld10119	= @НДФЛсПособия
						,_Fld10120	= @КоррСчетБанка
						,_Fld10121	= @НомерСправкиБеременной
						,_Fld10122	= @НаименованиеДокументаНаПроживание
						,_Fld10123	= @СерияДокументаНаПроживание
						,_Fld10124	= @НомерДокументаНаПроживание
						,_Fld10125	= @ДатаВыдачиДокументаНаПроживание
						,_Fld10126	= @АдресРегистрации
						,_Fld10127	= @Телефон
						,_Fld10128	= @ТарифнаяСтавкаОклад
						,_Fld10129	= @СреднедневнойЗаработокНаПериодПростоя
						,_Fld10130	= @ТелефонСоставителя
						,_Fld10131	= @АдресПочтовыйКодПоКЛАДР
						,_Fld10132	= @АдресРегистрацииКодПоКЛАДР
						,_Fld10133	= @АдресЛПУКодПоКЛАДР
						,_Fld10134RRef	= @ЛПУ
						,_Fld10135	= @НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении
						Where _IDRRef = @Ссылка";
					}
					Команда.Parameters.AddWithValue("Ссылка", Ссылка.ToByteArray());
					/*Команда.Parameters.AddWithValue("Версия", Версия);*/
					Команда.Parameters.AddWithValue("ПометкаУдаления", ПометкаУдаления);
					Команда.Parameters.AddWithValue("Номер", Номер);
					Команда.Parameters.AddWithValue("ПериодРегистрации", ПериодРегистрации);
					Команда.Parameters.AddWithValue("Комментарий", Комментарий);
					Команда.Parameters.AddWithValue("ПричинаНетрудоспособности", ПричинаНетрудоспособности.Ключ());
					Команда.Parameters.AddWithValue("ПроцентОплаты", ПроцентОплаты);
					Команда.Parameters.AddWithValue("ЯвляетсяПродолжениемБолезни", ЯвляетсяПродолжениемБолезни);
					Команда.Parameters.AddWithValue("ПервичныйБольничныйЛист", ПервичныйБольничныйЛист.Ссылка);
					Команда.Parameters.AddWithValue("ДатаНачалаСобытия", ДатаНачалаСобытия);
					Команда.Parameters.AddWithValue("ДатаНачала", ДатаНачала);
					Команда.Parameters.AddWithValue("ДатаНачалаОплаты", ДатаНачалаОплаты);
					Команда.Parameters.AddWithValue("ДатаОкончания", ДатаОкончания);
					Команда.Parameters.AddWithValue("ДатаНарушенияРежима", ДатаНарушенияРежима);
					Команда.Parameters.AddWithValue("ПособиеОтражаетсяВРеглУчетеТекущимДокументом", ПособиеОтражаетсяВРеглУчетеТекущимДокументом);
					Команда.Parameters.AddWithValue("ОграничениеПособия", ОграничениеПособия.Ключ());
					Команда.Parameters.AddWithValue("НомерВходящегоДокумента", НомерВходящегоДокумента);
					Команда.Parameters.AddWithValue("СерияВходящегоДокумента", СерияВходящегоДокумента);
					Команда.Parameters.AddWithValue("ПерерассчитываемыйДокумент", ПерерассчитываемыйДокумент.Ссылка);
					Команда.Parameters.AddWithValue("ПричинаНетрудоспособностиПереходногоПериода", ПричинаНетрудоспособностиПереходногоПериода.Ключ());
					Команда.Parameters.AddWithValue("ПроцентОплатыПереходногоПериода", ПроцентОплатыПереходногоПериода);
					Команда.Parameters.AddWithValue("ОграничениеПособияПереходногоПериода", ОграничениеПособияПереходногоПериода.Ключ());
					Команда.Parameters.AddWithValue("СлучайУходаЗаБольнымРебенкомПереходногоПериода", СлучайУходаЗаБольнымРебенкомПереходногоПериода.Ключ());
					Команда.Parameters.AddWithValue("СтратегияОтраженияВУчете", СтратегияОтраженияВУчете.Ключ());
					Команда.Parameters.AddWithValue("УдалитьПриказ", УдалитьПриказ.Ссылка);
					Команда.Parameters.AddWithValue("ПодпадаетПодЕНВД", ПодпадаетПодЕНВД);
					Команда.Parameters.AddWithValue("СлучайУходаЗаБольнымРебенком", СлучайУходаЗаБольнымРебенком.Ключ());
					Команда.Parameters.AddWithValue("ДнейОплаты", ДнейОплаты);
					Команда.Parameters.AddWithValue("ВидРасчета", Guid.Empty);
					Команда.Parameters.AddWithValue("ДоплачиватьДоПолногоСреднегоЗаработка", ДоплачиватьДоПолногоСреднегоЗаработка);
					Команда.Parameters.AddWithValue("ВидРасчетаДоплаты", Guid.Empty);
					Команда.Parameters.AddWithValue("ПериодРасчетаСреднегоЗаработкаНачало", ПериодРасчетаСреднегоЗаработкаНачало);
					Команда.Parameters.AddWithValue("ПериодРасчетаСреднегоЗаработкаОкончание", ПериодРасчетаСреднегоЗаработкаОкончание);
					Команда.Parameters.AddWithValue("ПроцентОплатыБезЛьгот", ПроцентОплатыБезЛьгот);
					Команда.Parameters.AddWithValue("ОграничениеПособияБезЛьгот", ОграничениеПособияБезЛьгот.Ключ());
					Команда.Parameters.AddWithValue("ПрименятьЛьготыПриНачисленииПособия", ПрименятьЛьготыПриНачисленииПособия);
					Команда.Parameters.AddWithValue("ВыплатаЗаСчетФедеральногоБюджета", ВыплатаЗаСчетФедеральногоБюджета.Ключ());
					Команда.Parameters.AddWithValue("ВидРасчетаЗаСчетРаботодателя", Guid.Empty);
					Команда.Parameters.AddWithValue("УчитыватьЗаработокПредыдущихСтрахователей", УчитыватьЗаработокПредыдущихСтрахователей);
					Команда.Parameters.AddWithValue("ДнейОплатыРаботодателем", ДнейОплатыРаботодателем);
					Команда.Parameters.AddWithValue("НеВыплачиватьПособие", НеВыплачиватьПособие);
					Команда.Parameters.AddWithValue("РасчетПоПравилам2010Года", РасчетПоПравилам2010Года);
					Команда.Parameters.AddWithValue("УсловияИсчисленияКод1", УсловияИсчисленияКод1);
					Команда.Parameters.AddWithValue("УсловияИсчисленияКод2", УсловияИсчисленияКод2);
					Команда.Parameters.AddWithValue("УсловияИсчисленияКод3", УсловияИсчисленияКод3);
					Команда.Parameters.AddWithValue("СтажЛет", СтажЛет);
					Команда.Parameters.AddWithValue("СтажМесяцев", СтажМесяцев);
					Команда.Parameters.AddWithValue("СтажБезНестраховыхПериодовЛет", СтажБезНестраховыхПериодовЛет);
					Команда.Parameters.AddWithValue("СтажБезНестраховыхПериодовСтажМесяцев", СтажБезНестраховыхПериодовСтажМесяцев);
					Команда.Parameters.AddWithValue("ПеречислятьПособиеПочтовымПереводом", ПеречислятьПособиеПочтовымПереводом);
					Команда.Parameters.AddWithValue("НаименованиеБанка", НаименованиеБанка);
					Команда.Parameters.AddWithValue("БИКБанка", БИКБанка);
					Команда.Parameters.AddWithValue("НомерЛицевогоСчета", НомерЛицевогоСчета);
					Команда.Parameters.AddWithValue("АдресПочтовый", АдресПочтовый);
					Команда.Parameters.AddWithValue("Фамилия", Фамилия);
					Команда.Parameters.AddWithValue("Имя", Имя);
					Команда.Parameters.AddWithValue("Отчество", Отчество);
					Команда.Parameters.AddWithValue("СерияДокумента", СерияДокумента);
					Команда.Parameters.AddWithValue("НомерДокумента", НомерДокумента);
					Команда.Parameters.AddWithValue("ДатаВыдачиДокумента", ДатаВыдачиДокумента);
					Команда.Parameters.AddWithValue("ДатаДействияДокумента", ДатаДействияДокумента);
					Команда.Parameters.AddWithValue("ПериодПростояС", ПериодПростояС);
					Команда.Parameters.AddWithValue("ПериодПростояПо", ПериодПростояПо);
					Команда.Parameters.AddWithValue("РасчетПособияИзТарифнойСтавки", РасчетПособияИзТарифнойСтавки);
					Команда.Parameters.AddWithValue("ПоставленаНаУчетВРанниеСрокиБеременности", ПоставленаНаУчетВРанниеСрокиБеременности);
					Команда.Parameters.AddWithValue("ДатаВыдачиБольничного", ДатаВыдачиБольничного);
					Команда.Parameters.AddWithValue("КодПричиныНетрудоспособности", КодПричиныНетрудоспособности);
					Команда.Parameters.AddWithValue("ДополнительныйКодПричиныНетрудоспособности", ДополнительныйКодПричиныНетрудоспособности);
					Команда.Parameters.AddWithValue("ВторойКодПричиныНетрудоспособности", ВторойКодПричиныНетрудоспособности);
					Команда.Parameters.AddWithValue("ДатаИзмененияКодаПричиныНетрудоспособности", ДатаИзмененияКодаПричиныНетрудоспособности);
					Команда.Parameters.AddWithValue("ДатаСправкиБеременной", ДатаСправкиБеременной);
					Команда.Parameters.AddWithValue("ПериодНахожденияВСтационареСРебенкомС", ПериодНахожденияВСтационареСРебенкомС);
					Команда.Parameters.AddWithValue("ПериодНахожденияВСтационареСРебенкомПо", ПериодНахожденияВСтационареСРебенкомПо);
					Команда.Parameters.AddWithValue("КодНарушенияРежима", КодНарушенияРежима);
					Команда.Parameters.AddWithValue("ДатаРегистрацииДокументовМСЭ", ДатаРегистрацииДокументовМСЭ);
					Команда.Parameters.AddWithValue("УстановленаИзмененаГруппаИнвалидности", УстановленаИзмененаГруппаИнвалидности);
					Команда.Parameters.AddWithValue("ДатаВыходаНаРаботу", ДатаВыходаНаРаботу);
					Команда.Parameters.AddWithValue("ЯвляетсяДубликатом", ЯвляетсяДубликатом);
					Команда.Parameters.AddWithValue("АдресЛПУ", АдресЛПУ);
					Команда.Parameters.AddWithValue("НаименованиеЛПУ", НаименованиеЛПУ);
					Команда.Parameters.AddWithValue("ОГРН_ЛПУ", ОГРН_ЛПУ);
					Команда.Parameters.AddWithValue("НомерЛисткаПоОсновномуМестуРаботы", НомерЛисткаПоОсновномуМестуРаботы);
					Команда.Parameters.AddWithValue("ДатаОкончанияПутевки", ДатаОкончанияПутевки);
					Команда.Parameters.AddWithValue("НомерПутевки", НомерПутевки);
					Команда.Parameters.AddWithValue("ОГРН_Санатория", ОГРН_Санатория);
					Команда.Parameters.AddWithValue("НомерЛисткаПродолжения", НомерЛисткаПродолжения);
					Команда.Parameters.AddWithValue("ДатаНаправленияВБюроМСЭ", ДатаНаправленияВБюроМСЭ);
					Команда.Parameters.AddWithValue("ДатаОсвидетельствованияМСЭ", ДатаОсвидетельствованияМСЭ);
					Команда.Parameters.AddWithValue("НовыйСтатусНетрудопособного", НовыйСтатусНетрудопособного);
					Команда.Parameters.AddWithValue("ДатаНовыйСтатусНетрудопособного", ДатаНовыйСтатусНетрудопособного);
					Команда.Parameters.AddWithValue("КемВыданДокумент", КемВыданДокумент);
					Команда.Parameters.AddWithValue("ГруппаИнвалидности", ГруппаИнвалидности);
					Команда.Parameters.AddWithValue("КодПричиныПерерасчета", КодПричиныПерерасчета);
					Команда.Parameters.AddWithValue("НДФЛсПособия", НДФЛсПособия);
					Команда.Parameters.AddWithValue("КоррСчетБанка", КоррСчетБанка);
					Команда.Parameters.AddWithValue("НомерСправкиБеременной", НомерСправкиБеременной);
					Команда.Parameters.AddWithValue("НаименованиеДокументаНаПроживание", НаименованиеДокументаНаПроживание);
					Команда.Parameters.AddWithValue("СерияДокументаНаПроживание", СерияДокументаНаПроживание);
					Команда.Parameters.AddWithValue("НомерДокументаНаПроживание", НомерДокументаНаПроживание);
					Команда.Parameters.AddWithValue("ДатаВыдачиДокументаНаПроживание", ДатаВыдачиДокументаНаПроживание);
					Команда.Parameters.AddWithValue("АдресРегистрации", АдресРегистрации);
					Команда.Parameters.AddWithValue("Телефон", Телефон);
					Команда.Parameters.AddWithValue("ТарифнаяСтавкаОклад", ТарифнаяСтавкаОклад);
					Команда.Parameters.AddWithValue("СреднедневнойЗаработокНаПериодПростоя", СреднедневнойЗаработокНаПериодПростоя);
					Команда.Parameters.AddWithValue("ТелефонСоставителя", ТелефонСоставителя);
					Команда.Parameters.AddWithValue("АдресПочтовыйКодПоКЛАДР", АдресПочтовыйКодПоКЛАДР);
					Команда.Parameters.AddWithValue("АдресРегистрацииКодПоКЛАДР", АдресРегистрацииКодПоКЛАДР);
					Команда.Parameters.AddWithValue("АдресЛПУКодПоКЛАДР", АдресЛПУКодПоКЛАДР);
					Команда.Parameters.AddWithValue("НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении", НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении);
					Команда.ExecuteNonQuery();
				}
			}
		}
		public void Удалить()
		{
			using (var Подключение = new SqlConnection(СтрокаСоединения))
			{
				Подключение.Open();
				using (var Команда = Подключение.CreateCommand())
				{
					Команда.CommandText = @"Delete _Document440
					Where _IDRRef=@Ссылка";
					Команда.Parameters.AddWithValue("Ссылка", Ссылка.ToByteArray());
					Команда.ExecuteNonQuery();
				}
			}
		}
	}
}