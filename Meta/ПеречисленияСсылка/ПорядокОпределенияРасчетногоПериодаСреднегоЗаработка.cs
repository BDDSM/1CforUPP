
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	public enum ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка
	{
		ПустаяСсылка = - 1,
		ПоТрудовомуЗаконодательству = 0,//В соответствии с частями третьей и четвертой ст. 139 ТК РФ
		ПоКолдоговору = 1,//В соответствии с коллективным договором
	}
	public static partial class ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid ПоТрудовомуЗаконодательству = new Guid("55896c83-2e23-6a17-4d71-f1bc93232a81");//В соответствии с частями третьей и четвертой ст. 139 ТК РФ
		public static readonly Guid ПоКолдоговору = new Guid("51185dad-8339-c140-4690-29847b05bb4d");//В соответствии с коллективным договором
		public static ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка Получить(this ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка Получить(this ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка Значение, Guid Ссылка)
		{
			if(Ссылка == ПоТрудовомуЗаконодательству)
			{
				return ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоТрудовомуЗаконодательству;
			}
			else if(Ссылка == ПоКолдоговору)
			{
				return ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоКолдоговору;
			}
			return ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПустаяСсылка;
		}
		public static byte[] Ключ(this ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка Значение)
		{
			switch (Значение)
			{
				case ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоТрудовомуЗаконодательству: return ПоТрудовомуЗаконодательству;
				case ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоКолдоговору: return ПоКолдоговору;
			}
			return Guid.Empty;
		}
	}
}