
using System;
using V82;
using V82.ѕеречислени€;//—сылка;
namespace V82.ѕеречислени€//—сылка
{
	public enum ¬ид«аписиќ–егистрации
	{
		ѕуста€—сылка = - 1,
		–егистраци€ = 0,
		—н€тие—–егистрационного”чета = 1,//—н€тие с регистрационного учета
	}
	public static partial class ¬ид«аписиќ–егистрации_«начени€//:ѕеречисление—сылка
	{
		public static readonly Guid –егистраци€ = new Guid("23e2098e-6bfd-2932-44a2-c014cf63ac66");
		public static readonly Guid —н€тие—–егистрационного”чета = new Guid("5508e193-4238-9e3f-4deb-00dffbe393de");//—н€тие с регистрационного учета
		public static ¬ид«аписиќ–егистрации ѕолучить(this ¬ид«аписиќ–егистрации «начение, byte[] —сылка)
		{
			return ѕолучить(«начение, new Guid(—сылка));
		}
		public static ¬ид«аписиќ–егистрации ѕолучить(this ¬ид«аписиќ–егистрации «начение, Guid —сылка)
		{
			if(—сылка == –егистраци€)
			{
				return ¬ид«аписиќ–егистрации.–егистраци€;
			}
			else if(—сылка == —н€тие—–егистрационного”чета)
			{
				return ¬ид«аписиќ–егистрации.—н€тие—–егистрационного”чета;
			}
			return ¬ид«аписиќ–егистрации.ѕуста€—сылка;
		}
		public static byte[]  люч(this ¬ид«аписиќ–егистрации «начение)
		{
			return —сылка(«начение).ToByteArray();
		}
		public static Guid —сылка(this ¬ид«аписиќ–егистрации «начение)
		{
			switch («начение)
			{
				case ¬ид«аписиќ–егистрации.–егистраци€: return –егистраци€;
				case ¬ид«аписиќ–егистрации.—н€тие—–егистрационного”чета: return —н€тие—–егистрационного”чета;
			}
			return Guid.Empty;
		}
	}
}
