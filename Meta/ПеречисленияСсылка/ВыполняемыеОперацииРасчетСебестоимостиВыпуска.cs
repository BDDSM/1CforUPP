
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
		///<summary>
		///(Общ)
		///</summary>
	public enum ВыполняемыеОперацииРасчетСебестоимостиВыпуска
	{
		ПустаяСсылка = - 1,
	///<summary>
	///(Общ)
	///</summary>
		РасчетБазыРаспределенияПроизводственныхРасходов = 0,//Расчет базы распределения производственных расходов
	///<summary>
	///(Общ)
	///</summary>
		РаспределениеПроизводственныхРасходов = 1,//Распределение производственных расходов
	///<summary>
	///(Общ)
	///</summary>
		РаспределениеПродукцииИЗатратПоПеределам = 2,//Распределение продукции и затрат по переделам
	///<summary>
	///(Общ)
	///</summary>
		РасчетПрямыхЗатратПоПодразделениям = 3,//Расчет прямых затрат по подразделениям
	///<summary>
	///(Общ)
	///</summary>
		РасчетПрямыхЗатратПоПеределам = 4,//Расчет прямых затрат по переделам
		ОпределениеПродукцииИсключаемойИзБазыРаспределения = 5,//Определение продукции, исключаемой из базы распределения
	///<summary>
	///(Общ)
	///</summary>
		РасчетБазыРаспределенияКосвенныхРасходов = 6,//Расчет базы распределения косвенных расходов
	///<summary>
	///(Общ)
	///</summary>
		РаспределениеКосвенныхРасходовПоПодразделениям = 7,//Распределение косвенных расходов по подразделениям
	///<summary>
	///(Общ)
	///</summary>
		РаспределениеКосвенныхРасходовПоПеределам = 8,//Распределение косвенных расходов по переделам
	///<summary>
	///(Общ)
	///</summary>
		СписаниеКосвенныхРасходовНаРБП = 9,//Списание косвенных расходов на РБП
	///<summary>
	///(Общ)
	///</summary>
		СписаниеОбщехозяйственныхРасходовПоМетодуДиректКостинг = 10,//Списание общехоз. расходов по методу директ- костинг
	///<summary>
	///(Общ)
	///</summary>
		РасчетЗатратВстречногоВыпускаПоПодразделениям = 11,//Расчет затрат встречного выпуска по подразделениям
	///<summary>
	///(Общ)
	///</summary>
		РасчетЗатратВстречногоВыпускаПоПеределам = 12,//Расчет затрат встречного выпуска по переделам
	///<summary>
	///(Общ)
	///</summary>
		СписаниеИздержекОбращения = 13,//Списание издержек обращения
	///<summary>
	///(Общ)
	///</summary>
		СписаниеКоммерческихРасходов = 14,//Списание коммерческих расходов
	///<summary>
	///(Регл)
	///</summary>
		ПризнаниеМатериальныхРасходовПриУСН = 15,//Признание материальных расходов при УСН
	///<summary>
	///(Упр)
	///</summary>
		СписаниеПрочихЗатрат = 16,//Списание прочих затрат
	///<summary>
	///(Регл)
	///</summary>
		СверткаДвиженийПоРегистрам = 17,//Свертка движений по регистрам
	///<summary>
	///(Общ)
	///</summary>
		РасчетБазыРаспределенияРасходов = 18,//Расчет базы распределения расходов
	///<summary>
	///(Общ)
	///</summary>
		РаспределениеРасходовПоБазе = 19,//Распределение расходов по базе
	///<summary>
	///(Общ)
	///</summary>
		РасчетФактическойСебестоимости = 20,//Расчет фактической себестоимости
	///<summary>
	///(Общ)
	///</summary>
		ФормированиеДвиженийПоРегистрам = 21,//Формирование движений по регистрам
		РаспределениеТЗР = 22,//Распределение ТЗР
	///<summary>
	///Определение списка реализованных услуг, себестоимость которых требуется рассчитать
	///</summary>
		РасчетСебестоимостиПроизводственныхУслуг = 23,//Определение списка реализованных услуг
	}
	public static partial class ВыполняемыеОперацииРасчетСебестоимостиВыпуска_Значения//:ПеречислениеСсылка
	{
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid РасчетБазыРаспределенияПроизводственныхРасходов = new Guid("bdc6b891-97df-2a40-42f0-fbd057ca2eff");//Расчет базы распределения производственных расходов
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid РаспределениеПроизводственныхРасходов = new Guid("2d2e36b5-dc16-36a8-493e-b5b8a1dfe49b");//Распределение производственных расходов
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid РаспределениеПродукцииИЗатратПоПеределам = new Guid("83a8e681-cb5b-ebff-4eb2-31a53ce23ede");//Распределение продукции и затрат по переделам
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid РасчетПрямыхЗатратПоПодразделениям = new Guid("bd4384bf-3c9e-5473-4b35-10b7fb0887ea");//Расчет прямых затрат по подразделениям
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid РасчетПрямыхЗатратПоПеределам = new Guid("e5ea73ae-89a4-29f6-49c0-e919e694552b");//Расчет прямых затрат по переделам
		public static readonly Guid ОпределениеПродукцииИсключаемойИзБазыРаспределения = new Guid("9128e6af-b14d-c8ff-4e3b-74740d961dce");//Определение продукции, исключаемой из базы распределения
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid РасчетБазыРаспределенияКосвенныхРасходов = new Guid("cac7f2bb-59b7-5e85-472b-8f1e53cf6a20");//Расчет базы распределения косвенных расходов
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid РаспределениеКосвенныхРасходовПоПодразделениям = new Guid("590e93a5-34a6-78d1-44bf-8da15557dbdb");//Распределение косвенных расходов по подразделениям
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid РаспределениеКосвенныхРасходовПоПеределам = new Guid("ee2b528b-57ab-8efc-414b-4f9d712a0a1f");//Распределение косвенных расходов по переделам
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid СписаниеКосвенныхРасходовНаРБП = new Guid("973f8caf-31d1-8053-48e4-631d2b1035a2");//Списание косвенных расходов на РБП
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid СписаниеОбщехозяйственныхРасходовПоМетодуДиректКостинг = new Guid("ff6da99c-77df-dedf-4f86-fc966f258fe4");//Списание общехоз. расходов по методу директ- костинг
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid РасчетЗатратВстречногоВыпускаПоПодразделениям = new Guid("3d1bcb8a-b036-7542-46ef-b693b0ac39bc");//Расчет затрат встречного выпуска по подразделениям
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid РасчетЗатратВстречногоВыпускаПоПеределам = new Guid("0f0c6db8-077e-19a0-4f08-a44bc60dd04a");//Расчет затрат встречного выпуска по переделам
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid СписаниеИздержекОбращения = new Guid("e51d8593-182c-d0c4-41b1-51d897d896c1");//Списание издержек обращения
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid СписаниеКоммерческихРасходов = new Guid("964c09ab-63cd-2dec-43e0-9ae718ec94f2");//Списание коммерческих расходов
		///<summary>
		///(Регл)
		///</summary>
		public static readonly Guid ПризнаниеМатериальныхРасходовПриУСН = new Guid("2579c2b9-d9dc-e97b-4227-392b332a0e3f");//Признание материальных расходов при УСН
		///<summary>
		///(Упр)
		///</summary>
		public static readonly Guid СписаниеПрочихЗатрат = new Guid("71aebdac-1ef6-f30f-4674-4dfe7ca65cb4");//Списание прочих затрат
		///<summary>
		///(Регл)
		///</summary>
		public static readonly Guid СверткаДвиженийПоРегистрам = new Guid("325d3bae-d6d5-24df-4af9-f63a7c213e39");//Свертка движений по регистрам
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid РасчетБазыРаспределенияРасходов = new Guid("a1f4c5af-602e-804b-4132-583e111617be");//Расчет базы распределения расходов
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid РаспределениеРасходовПоБазе = new Guid("f49da2ac-2f19-cdc7-4706-c858c5d5a13a");//Распределение расходов по базе
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid РасчетФактическойСебестоимости = new Guid("f45e44b4-dd05-0055-4d9b-4d6af0af868b");//Расчет фактической себестоимости
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid ФормированиеДвиженийПоРегистрам = new Guid("3f7d45a9-5d03-e44e-4125-ebf31311759d");//Формирование движений по регистрам
		public static readonly Guid РаспределениеТЗР = new Guid("69da39ba-c528-cfcd-40d9-744c2f6f4e39");//Распределение ТЗР
		///<summary>
		///Определение списка реализованных услуг, себестоимость которых требуется рассчитать
		///</summary>
		public static readonly Guid РасчетСебестоимостиПроизводственныхУслуг = new Guid("10cba598-2727-6411-4a14-3267774cadfd");//Определение списка реализованных услуг
		public static ВыполняемыеОперацииРасчетСебестоимостиВыпуска Получить(this ВыполняемыеОперацииРасчетСебестоимостиВыпуска Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ВыполняемыеОперацииРасчетСебестоимостиВыпуска Получить(this ВыполняемыеОперацииРасчетСебестоимостиВыпуска Значение, Guid Ссылка)
		{
			if(Ссылка == РасчетБазыРаспределенияПроизводственныхРасходов)
			{
				return ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетБазыРаспределенияПроизводственныхРасходов;
			}
			else if(Ссылка == РаспределениеПроизводственныхРасходов)
			{
				return ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеПроизводственныхРасходов;
			}
			else if(Ссылка == РаспределениеПродукцииИЗатратПоПеределам)
			{
				return ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеПродукцииИЗатратПоПеределам;
			}
			else if(Ссылка == РасчетПрямыхЗатратПоПодразделениям)
			{
				return ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетПрямыхЗатратПоПодразделениям;
			}
			else if(Ссылка == РасчетПрямыхЗатратПоПеределам)
			{
				return ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетПрямыхЗатратПоПеределам;
			}
			else if(Ссылка == ОпределениеПродукцииИсключаемойИзБазыРаспределения)
			{
				return ВыполняемыеОперацииРасчетСебестоимостиВыпуска.ОпределениеПродукцииИсключаемойИзБазыРаспределения;
			}
			else if(Ссылка == РасчетБазыРаспределенияКосвенныхРасходов)
			{
				return ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетБазыРаспределенияКосвенныхРасходов;
			}
			else if(Ссылка == РаспределениеКосвенныхРасходовПоПодразделениям)
			{
				return ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеКосвенныхРасходовПоПодразделениям;
			}
			else if(Ссылка == РаспределениеКосвенныхРасходовПоПеределам)
			{
				return ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеКосвенныхРасходовПоПеределам;
			}
			else if(Ссылка == СписаниеКосвенныхРасходовНаРБП)
			{
				return ВыполняемыеОперацииРасчетСебестоимостиВыпуска.СписаниеКосвенныхРасходовНаРБП;
			}
			else if(Ссылка == СписаниеОбщехозяйственныхРасходовПоМетодуДиректКостинг)
			{
				return ВыполняемыеОперацииРасчетСебестоимостиВыпуска.СписаниеОбщехозяйственныхРасходовПоМетодуДиректКостинг;
			}
			else if(Ссылка == РасчетЗатратВстречногоВыпускаПоПодразделениям)
			{
				return ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетЗатратВстречногоВыпускаПоПодразделениям;
			}
			else if(Ссылка == РасчетЗатратВстречногоВыпускаПоПеределам)
			{
				return ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетЗатратВстречногоВыпускаПоПеределам;
			}
			else if(Ссылка == СписаниеИздержекОбращения)
			{
				return ВыполняемыеОперацииРасчетСебестоимостиВыпуска.СписаниеИздержекОбращения;
			}
			else if(Ссылка == СписаниеКоммерческихРасходов)
			{
				return ВыполняемыеОперацииРасчетСебестоимостиВыпуска.СписаниеКоммерческихРасходов;
			}
			else if(Ссылка == ПризнаниеМатериальныхРасходовПриУСН)
			{
				return ВыполняемыеОперацииРасчетСебестоимостиВыпуска.ПризнаниеМатериальныхРасходовПриУСН;
			}
			else if(Ссылка == СписаниеПрочихЗатрат)
			{
				return ВыполняемыеОперацииРасчетСебестоимостиВыпуска.СписаниеПрочихЗатрат;
			}
			else if(Ссылка == СверткаДвиженийПоРегистрам)
			{
				return ВыполняемыеОперацииРасчетСебестоимостиВыпуска.СверткаДвиженийПоРегистрам;
			}
			else if(Ссылка == РасчетБазыРаспределенияРасходов)
			{
				return ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетБазыРаспределенияРасходов;
			}
			else if(Ссылка == РаспределениеРасходовПоБазе)
			{
				return ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеРасходовПоБазе;
			}
			else if(Ссылка == РасчетФактическойСебестоимости)
			{
				return ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетФактическойСебестоимости;
			}
			else if(Ссылка == ФормированиеДвиженийПоРегистрам)
			{
				return ВыполняемыеОперацииРасчетСебестоимостиВыпуска.ФормированиеДвиженийПоРегистрам;
			}
			else if(Ссылка == РаспределениеТЗР)
			{
				return ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеТЗР;
			}
			else if(Ссылка == РасчетСебестоимостиПроизводственныхУслуг)
			{
				return ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетСебестоимостиПроизводственныхУслуг;
			}
			return ВыполняемыеОперацииРасчетСебестоимостиВыпуска.ПустаяСсылка;
		}
		public static byte[] Ключ(this ВыполняемыеОперацииРасчетСебестоимостиВыпуска Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ВыполняемыеОперацииРасчетСебестоимостиВыпуска Значение)
		{
			switch (Значение)
			{
				case ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетБазыРаспределенияПроизводственныхРасходов: return РасчетБазыРаспределенияПроизводственныхРасходов;
				case ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеПроизводственныхРасходов: return РаспределениеПроизводственныхРасходов;
				case ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеПродукцииИЗатратПоПеределам: return РаспределениеПродукцииИЗатратПоПеределам;
				case ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетПрямыхЗатратПоПодразделениям: return РасчетПрямыхЗатратПоПодразделениям;
				case ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетПрямыхЗатратПоПеределам: return РасчетПрямыхЗатратПоПеределам;
				case ВыполняемыеОперацииРасчетСебестоимостиВыпуска.ОпределениеПродукцииИсключаемойИзБазыРаспределения: return ОпределениеПродукцииИсключаемойИзБазыРаспределения;
				case ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетБазыРаспределенияКосвенныхРасходов: return РасчетБазыРаспределенияКосвенныхРасходов;
				case ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеКосвенныхРасходовПоПодразделениям: return РаспределениеКосвенныхРасходовПоПодразделениям;
				case ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеКосвенныхРасходовПоПеределам: return РаспределениеКосвенныхРасходовПоПеределам;
				case ВыполняемыеОперацииРасчетСебестоимостиВыпуска.СписаниеКосвенныхРасходовНаРБП: return СписаниеКосвенныхРасходовНаРБП;
				case ВыполняемыеОперацииРасчетСебестоимостиВыпуска.СписаниеОбщехозяйственныхРасходовПоМетодуДиректКостинг: return СписаниеОбщехозяйственныхРасходовПоМетодуДиректКостинг;
				case ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетЗатратВстречногоВыпускаПоПодразделениям: return РасчетЗатратВстречногоВыпускаПоПодразделениям;
				case ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетЗатратВстречногоВыпускаПоПеределам: return РасчетЗатратВстречногоВыпускаПоПеределам;
				case ВыполняемыеОперацииРасчетСебестоимостиВыпуска.СписаниеИздержекОбращения: return СписаниеИздержекОбращения;
				case ВыполняемыеОперацииРасчетСебестоимостиВыпуска.СписаниеКоммерческихРасходов: return СписаниеКоммерческихРасходов;
				case ВыполняемыеОперацииРасчетСебестоимостиВыпуска.ПризнаниеМатериальныхРасходовПриУСН: return ПризнаниеМатериальныхРасходовПриУСН;
				case ВыполняемыеОперацииРасчетСебестоимостиВыпуска.СписаниеПрочихЗатрат: return СписаниеПрочихЗатрат;
				case ВыполняемыеОперацииРасчетСебестоимостиВыпуска.СверткаДвиженийПоРегистрам: return СверткаДвиженийПоРегистрам;
				case ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетБазыРаспределенияРасходов: return РасчетБазыРаспределенияРасходов;
				case ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеРасходовПоБазе: return РаспределениеРасходовПоБазе;
				case ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетФактическойСебестоимости: return РасчетФактическойСебестоимости;
				case ВыполняемыеОперацииРасчетСебестоимостиВыпуска.ФормированиеДвиженийПоРегистрам: return ФормированиеДвиженийПоРегистрам;
				case ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеТЗР: return РаспределениеТЗР;
				case ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетСебестоимостиПроизводственныхУслуг: return РасчетСебестоимостиПроизводственныхУслуг;
			}
			return Guid.Empty;
		}
	}
}