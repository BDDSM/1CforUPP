
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	public enum ТСДПоляДанных
	{
		ПустаяСсылка = - 1,
		ШтрихКод = 0,
		НоменклатураНаименование = 1,//Наименование номенклатуры
		НоменклатураАртикул = 2,//Артикул номенклатуры
		НоменклатураХарактеристика = 3,//Характеристика номенклатуры
		НоменклатураСерия = 4,//Серия номенклатуры
		НоменклатураИзмерение = 5,//Единица измерения номенклатуры
		НоменклатураКод = 6,//Код номенклатуры
		НоменклатураЦена = 7,//Цена номенклатуры
		КоличествоНаСкладе = 8,//Количество на складе
		Качество = 9,
	}
	public static partial class ТСДПоляДанных_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid ШтрихКод = new Guid("897d79ad-280b-1244-4f44-acfec74c0136");
		public static readonly Guid НоменклатураНаименование = new Guid("e46d278e-6e35-c055-449a-b915de2cb333");//Наименование номенклатуры
		public static readonly Guid НоменклатураАртикул = new Guid("70e5ceb5-b7b4-fe89-41e5-1f7df59ef0e8");//Артикул номенклатуры
		public static readonly Guid НоменклатураХарактеристика = new Guid("5842b59f-ceb4-f559-4f12-49670404acd6");//Характеристика номенклатуры
		public static readonly Guid НоменклатураСерия = new Guid("def92b8e-eade-6beb-45f1-2642277960f3");//Серия номенклатуры
		public static readonly Guid НоменклатураИзмерение = new Guid("7f17f1ac-fcac-35de-4fd1-964ea5c68d14");//Единица измерения номенклатуры
		public static readonly Guid НоменклатураКод = new Guid("7328d4ab-ed5b-597e-43f3-d7564771a6a8");//Код номенклатуры
		public static readonly Guid НоменклатураЦена = new Guid("5e0bcab3-7d9d-4418-49e2-094e7730b75f");//Цена номенклатуры
		public static readonly Guid КоличествоНаСкладе = new Guid("904c63a1-15cc-51a3-4c07-12cf0a1646af");//Количество на складе
		public static readonly Guid Качество = new Guid("e055ed86-15e4-126c-4809-0c2b029d2fa2");
		public static ТСДПоляДанных Получить(this ТСДПоляДанных Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ТСДПоляДанных Получить(this ТСДПоляДанных Значение, Guid Ссылка)
		{
			if(Ссылка == ШтрихКод)
			{
				return ТСДПоляДанных.ШтрихКод;
			}
			else if(Ссылка == НоменклатураНаименование)
			{
				return ТСДПоляДанных.НоменклатураНаименование;
			}
			else if(Ссылка == НоменклатураАртикул)
			{
				return ТСДПоляДанных.НоменклатураАртикул;
			}
			else if(Ссылка == НоменклатураХарактеристика)
			{
				return ТСДПоляДанных.НоменклатураХарактеристика;
			}
			else if(Ссылка == НоменклатураСерия)
			{
				return ТСДПоляДанных.НоменклатураСерия;
			}
			else if(Ссылка == НоменклатураИзмерение)
			{
				return ТСДПоляДанных.НоменклатураИзмерение;
			}
			else if(Ссылка == НоменклатураКод)
			{
				return ТСДПоляДанных.НоменклатураКод;
			}
			else if(Ссылка == НоменклатураЦена)
			{
				return ТСДПоляДанных.НоменклатураЦена;
			}
			else if(Ссылка == КоличествоНаСкладе)
			{
				return ТСДПоляДанных.КоличествоНаСкладе;
			}
			else if(Ссылка == Качество)
			{
				return ТСДПоляДанных.Качество;
			}
			return ТСДПоляДанных.ПустаяСсылка;
		}
		public static byte[] Ключ(this ТСДПоляДанных Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ТСДПоляДанных Значение)
		{
			switch (Значение)
			{
				case ТСДПоляДанных.ШтрихКод: return ШтрихКод;
				case ТСДПоляДанных.НоменклатураНаименование: return НоменклатураНаименование;
				case ТСДПоляДанных.НоменклатураАртикул: return НоменклатураАртикул;
				case ТСДПоляДанных.НоменклатураХарактеристика: return НоменклатураХарактеристика;
				case ТСДПоляДанных.НоменклатураСерия: return НоменклатураСерия;
				case ТСДПоляДанных.НоменклатураИзмерение: return НоменклатураИзмерение;
				case ТСДПоляДанных.НоменклатураКод: return НоменклатураКод;
				case ТСДПоляДанных.НоменклатураЦена: return НоменклатураЦена;
				case ТСДПоляДанных.КоличествоНаСкладе: return КоличествоНаСкладе;
				case ТСДПоляДанных.Качество: return Качество;
			}
			return Guid.Empty;
		}
	}
}
