
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
		///<summary>
		///(Регл)
		///</summary>
	public enum УсловияПоступленияИВыбытияИмущества
	{
		ПустаяСсылка = - 1,
		ЗаПлату = 0,//За плату
		Возврат = 1,
		ПоДоговоруЗайма = 2,//По договору займа
		Товароообмен = 3,
		ВкладВУставныйКапитал = 4,//Вклад в уставный капитал
		ВкладВПростоеТоварищество = 5,//Вклад в простое товарищество
		Недостачи = 6,//Недостачи и потери
		СписаниеИмущества = 7,//Списание имущества за непригодностью
		ПередачаОбособленномуПодразделению = 8,//Передача обособленному подразделению
		Другие = 9,//Другие существенные условия
		НеОблагается = 10,//По деятельности не облагаемой налогом на прибыль
	}
	public static partial class УсловияПоступленияИВыбытияИмущества_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid ЗаПлату = new Guid("77a3cd8a-8279-dd18-4f76-405238880fac");//За плату
		public static readonly Guid Возврат = new Guid("9f699c97-a0a3-0bed-416c-9f75ad671ee5");
		public static readonly Guid ПоДоговоруЗайма = new Guid("725c7ab8-89af-01f5-43b2-9b09a61a9d44");//По договору займа
		public static readonly Guid Товароообмен = new Guid("6cf7ebbd-07bc-f8eb-4784-f0aa847d1050");
		public static readonly Guid ВкладВУставныйКапитал = new Guid("1e664a93-e15b-6bb5-4424-9915e1c13234");//Вклад в уставный капитал
		public static readonly Guid ВкладВПростоеТоварищество = new Guid("515f3ca7-4d57-663a-43ce-bca44dda47ab");//Вклад в простое товарищество
		public static readonly Guid Недостачи = new Guid("d6b370b5-6b06-a965-47f6-41fb41b2243e");//Недостачи и потери
		public static readonly Guid СписаниеИмущества = new Guid("26081aae-bc0a-0878-4260-ade59fc0bc9c");//Списание имущества за непригодностью
		public static readonly Guid ПередачаОбособленномуПодразделению = new Guid("9d22e2a3-f7b3-58fb-4d15-84d7ad8360a3");//Передача обособленному подразделению
		public static readonly Guid Другие = new Guid("5a9f329b-d5bd-6084-489e-d0f0cd1e5d3f");//Другие существенные условия
		public static readonly Guid НеОблагается = new Guid("3372339f-72e9-bb84-4867-6052b33710be");//По деятельности не облагаемой налогом на прибыль
		public static УсловияПоступленияИВыбытияИмущества Получить(this УсловияПоступленияИВыбытияИмущества Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static УсловияПоступленияИВыбытияИмущества Получить(this УсловияПоступленияИВыбытияИмущества Значение, Guid Ссылка)
		{
			if(Ссылка == ЗаПлату)
			{
				return УсловияПоступленияИВыбытияИмущества.ЗаПлату;
			}
			else if(Ссылка == Возврат)
			{
				return УсловияПоступленияИВыбытияИмущества.Возврат;
			}
			else if(Ссылка == ПоДоговоруЗайма)
			{
				return УсловияПоступленияИВыбытияИмущества.ПоДоговоруЗайма;
			}
			else if(Ссылка == Товароообмен)
			{
				return УсловияПоступленияИВыбытияИмущества.Товароообмен;
			}
			else if(Ссылка == ВкладВУставныйКапитал)
			{
				return УсловияПоступленияИВыбытияИмущества.ВкладВУставныйКапитал;
			}
			else if(Ссылка == ВкладВПростоеТоварищество)
			{
				return УсловияПоступленияИВыбытияИмущества.ВкладВПростоеТоварищество;
			}
			else if(Ссылка == Недостачи)
			{
				return УсловияПоступленияИВыбытияИмущества.Недостачи;
			}
			else if(Ссылка == СписаниеИмущества)
			{
				return УсловияПоступленияИВыбытияИмущества.СписаниеИмущества;
			}
			else if(Ссылка == ПередачаОбособленномуПодразделению)
			{
				return УсловияПоступленияИВыбытияИмущества.ПередачаОбособленномуПодразделению;
			}
			else if(Ссылка == Другие)
			{
				return УсловияПоступленияИВыбытияИмущества.Другие;
			}
			else if(Ссылка == НеОблагается)
			{
				return УсловияПоступленияИВыбытияИмущества.НеОблагается;
			}
			return УсловияПоступленияИВыбытияИмущества.ПустаяСсылка;
		}
		public static byte[] Ключ(this УсловияПоступленияИВыбытияИмущества Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this УсловияПоступленияИВыбытияИмущества Значение)
		{
			switch (Значение)
			{
				case УсловияПоступленияИВыбытияИмущества.ЗаПлату: return ЗаПлату;
				case УсловияПоступленияИВыбытияИмущества.Возврат: return Возврат;
				case УсловияПоступленияИВыбытияИмущества.ПоДоговоруЗайма: return ПоДоговоруЗайма;
				case УсловияПоступленияИВыбытияИмущества.Товароообмен: return Товароообмен;
				case УсловияПоступленияИВыбытияИмущества.ВкладВУставныйКапитал: return ВкладВУставныйКапитал;
				case УсловияПоступленияИВыбытияИмущества.ВкладВПростоеТоварищество: return ВкладВПростоеТоварищество;
				case УсловияПоступленияИВыбытияИмущества.Недостачи: return Недостачи;
				case УсловияПоступленияИВыбытияИмущества.СписаниеИмущества: return СписаниеИмущества;
				case УсловияПоступленияИВыбытияИмущества.ПередачаОбособленномуПодразделению: return ПередачаОбособленномуПодразделению;
				case УсловияПоступленияИВыбытияИмущества.Другие: return Другие;
				case УсловияПоступленияИВыбытияИмущества.НеОблагается: return НеОблагается;
			}
			return Guid.Empty;
		}
	}
}