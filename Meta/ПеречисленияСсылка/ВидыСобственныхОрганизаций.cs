
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
		///<summary>
		///(Упр)
		///</summary>
	public enum ВидыСобственныхОрганизаций
	{
		ПустаяСсылка = - 1,
		ДочерняяОрганизация = 0,//Дочерняя организация
		ЗависимаяОрганизация = 1,//Зависимая организация
		СовместноКонтролируемаяОрганизация = 2,//Совместно контролируемая организация
		МатеринскаяОрганизация = 3,//Материнская организация
		КонтролирующаяОрганизация = 4,//Контролирующая организация
	}
	public static partial class ВидыСобственныхОрганизаций_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid ДочерняяОрганизация = new Guid("b4f07d92-aee5-576a-4f8b-ddd023ed92eb");//Дочерняя организация
		public static readonly Guid ЗависимаяОрганизация = new Guid("82838f99-31bc-3bde-4811-f5b5b4773e07");//Зависимая организация
		public static readonly Guid СовместноКонтролируемаяОрганизация = new Guid("b13b4b99-33b5-c6ff-4748-1e2a43be9e5c");//Совместно контролируемая организация
		public static readonly Guid МатеринскаяОрганизация = new Guid("d63b66a7-9115-2a90-4169-3051aca797b0");//Материнская организация
		public static readonly Guid КонтролирующаяОрганизация = new Guid("1f4b18bf-5aed-a5a4-45fb-735178d86c69");//Контролирующая организация
		public static ВидыСобственныхОрганизаций Получить(this ВидыСобственныхОрганизаций Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ВидыСобственныхОрганизаций Получить(this ВидыСобственныхОрганизаций Значение, Guid Ссылка)
		{
			if(Ссылка == ДочерняяОрганизация)
			{
				return ВидыСобственныхОрганизаций.ДочерняяОрганизация;
			}
			else if(Ссылка == ЗависимаяОрганизация)
			{
				return ВидыСобственныхОрганизаций.ЗависимаяОрганизация;
			}
			else if(Ссылка == СовместноКонтролируемаяОрганизация)
			{
				return ВидыСобственныхОрганизаций.СовместноКонтролируемаяОрганизация;
			}
			else if(Ссылка == МатеринскаяОрганизация)
			{
				return ВидыСобственныхОрганизаций.МатеринскаяОрганизация;
			}
			else if(Ссылка == КонтролирующаяОрганизация)
			{
				return ВидыСобственныхОрганизаций.КонтролирующаяОрганизация;
			}
			return ВидыСобственныхОрганизаций.ПустаяСсылка;
		}
		public static byte[] Ключ(this ВидыСобственныхОрганизаций Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ВидыСобственныхОрганизаций Значение)
		{
			switch (Значение)
			{
				case ВидыСобственныхОрганизаций.ДочерняяОрганизация: return ДочерняяОрганизация;
				case ВидыСобственныхОрганизаций.ЗависимаяОрганизация: return ЗависимаяОрганизация;
				case ВидыСобственныхОрганизаций.СовместноКонтролируемаяОрганизация: return СовместноКонтролируемаяОрганизация;
				case ВидыСобственныхОрганизаций.МатеринскаяОрганизация: return МатеринскаяОрганизация;
				case ВидыСобственныхОрганизаций.КонтролирующаяОрганизация: return КонтролирующаяОрганизация;
			}
			return Guid.Empty;
		}
	}
}