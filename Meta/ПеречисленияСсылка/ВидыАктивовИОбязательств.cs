
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
		///<summary>
		///(Общ)
		///</summary>
	public enum ВидыАктивовИОбязательств
	{
		ПустаяСсылка = - 1,
	///<summary>
	///(Общ)
	///</summary>
		ВнеоборотныеАктивы = 0,//Внеоборотные активы
	///<summary>
	///(Общ)
	///</summary>
		ГотоваяПродукция = 1,//Готовая продукция
	///<summary>
	///(Общ)
	///</summary>
		ДебиторскаяЗадолженность = 2,//Дебиторская задолженность
	///<summary>
	///Доходные вложения в материальные ценности
	///</summary>
		ДоходныеВложенияВ_МЦ = 3,//Доходные вложения в материальные ценности
	///<summary>
	///(Общ)
	///</summary>
		ДоходыБудущихПериодов = 4,//Доходы будущих периодов
	///<summary>
	///(Общ)
	///</summary>
		ИздержкиОбращения = 5,//Издержки обращения
	///<summary>
	///(Общ)
	///</summary>
		КредиторскаяЗадолженность = 6,//Кредиторская задолженность
	///<summary>
	///Курсовые разницы по расчетам в у.е.
	///</summary>
		КурсовыеРазницыПоРасчетамВУЕ = 7,//Курсовые разницы по расчетам в у.е.
	///<summary>
	///(Общ)
	///</summary>
		Материалы = 8,
		НедостачиПотери = 9,//Недостачи и потери от порчи ценностей
	///<summary>
	///(Общ)
	///</summary>
		НезавершенноеПроизводство = 10,//Незавершенное производство
	///<summary>
	///(Общ)
	///</summary>
		НематериальныеАктивы = 11,//Нематериальные активы
	///<summary>
	///(Общ)
	///</summary>
		Оборудование = 12,
	///<summary>
	///(Общ)
	///</summary>
		ОсновныеСредства = 13,//Основные средства
		ОценочныеОбязательства = 14,//Оценочные обязательства и резервы
	///<summary>
	///(Общ)
	///</summary>
		Полуфабрикаты = 15,
	///<summary>
	///(Общ)
	///</summary>
		РасходыБудущихПериодов = 16,//Расходы будущих периодов
		РезервыСомнительныхДолгов = 17,//Резервы сомнительных долгов
	///<summary>
	///(Общ)
	///</summary>
		Товары = 18,
	///<summary>
	///(Общ)
	///</summary>
		ТоварыОтгруженные = 19,//Товары отгруженные
	///<summary>
	///(Общ)
	///</summary>
		УбытокТекущегоПериода = 20,//Убыток текущего периода
	///<summary>
	///(Общ)
	///</summary>
		ФинансовыеВложения = 21,//Финансовые вложения
	}
	public static partial class ВидыАктивовИОбязательств_Значения//:ПеречислениеСсылка
	{
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid ВнеоборотныеАктивы = new Guid("b0dd6bbc-5f14-de8d-43d3-bf77e3a75427");//Внеоборотные активы
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid ГотоваяПродукция = new Guid("04130b91-20e6-5d1e-4902-2af607c07568");//Готовая продукция
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid ДебиторскаяЗадолженность = new Guid("c4c6acbc-8d77-c4a4-424d-fcdf258cc312");//Дебиторская задолженность
		///<summary>
		///Доходные вложения в материальные ценности
		///</summary>
		public static readonly Guid ДоходныеВложенияВ_МЦ = new Guid("490fd29c-e0bc-8a75-4d36-a5ea261dfeb3");//Доходные вложения в материальные ценности
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid ДоходыБудущихПериодов = new Guid("8e0c87bd-b061-29c2-4752-baea06cd1d50");//Доходы будущих периодов
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid ИздержкиОбращения = new Guid("507e1fb9-d6b5-18dc-4fb1-cb412e868b02");//Издержки обращения
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid КредиторскаяЗадолженность = new Guid("4c488fb2-df07-a984-4495-7973a0475adc");//Кредиторская задолженность
		///<summary>
		///Курсовые разницы по расчетам в у.е.
		///</summary>
		public static readonly Guid КурсовыеРазницыПоРасчетамВУЕ = new Guid("dd2e8db9-f162-d253-4a33-a782cbba0c1a");//Курсовые разницы по расчетам в у.е.
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid Материалы = new Guid("54d23d83-4235-1f18-4004-dff21a5a3b0c");
		public static readonly Guid НедостачиПотери = new Guid("eba3cdb0-4684-2c2f-4f4f-4686ae8bc94e");//Недостачи и потери от порчи ценностей
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid НезавершенноеПроизводство = new Guid("5cdd0799-1e46-ccf0-481c-4b2a12c1cae1");//Незавершенное производство
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid НематериальныеАктивы = new Guid("444fe9be-e25e-e6bf-4ef6-276e246e00e9");//Нематериальные активы
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid Оборудование = new Guid("b1b0f18d-b293-99b5-4de5-0216d0b17a30");
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid ОсновныеСредства = new Guid("d09662a5-308f-b4f5-4fbf-7531684266a6");//Основные средства
		public static readonly Guid ОценочныеОбязательства = new Guid("03fb6097-973a-5a27-403d-160b6d1e753f");//Оценочные обязательства и резервы
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid Полуфабрикаты = new Guid("ffecbf85-2f7f-99ba-447b-951784281b04");
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid РасходыБудущихПериодов = new Guid("85d6f898-6a77-a7a1-4b6e-8f167c3dc925");//Расходы будущих периодов
		public static readonly Guid РезервыСомнительныхДолгов = new Guid("9b3e1092-47da-d0e5-4899-86296d59923f");//Резервы сомнительных долгов
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid Товары = new Guid("9e2dac85-098a-10f5-47fd-576e5ac93b61");
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid ТоварыОтгруженные = new Guid("cd635d9c-7055-4e67-4a2b-a79d587d80fd");//Товары отгруженные
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid УбытокТекущегоПериода = new Guid("ecdab79b-6826-64cd-4b05-f366e1f71fae");//Убыток текущего периода
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid ФинансовыеВложения = new Guid("d2211cb3-819f-4bf9-4208-0a0e96680546");//Финансовые вложения
		public static ВидыАктивовИОбязательств Получить(this ВидыАктивовИОбязательств Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ВидыАктивовИОбязательств Получить(this ВидыАктивовИОбязательств Значение, Guid Ссылка)
		{
			if(Ссылка == ВнеоборотныеАктивы)
			{
				return ВидыАктивовИОбязательств.ВнеоборотныеАктивы;
			}
			else if(Ссылка == ГотоваяПродукция)
			{
				return ВидыАктивовИОбязательств.ГотоваяПродукция;
			}
			else if(Ссылка == ДебиторскаяЗадолженность)
			{
				return ВидыАктивовИОбязательств.ДебиторскаяЗадолженность;
			}
			else if(Ссылка == ДоходныеВложенияВ_МЦ)
			{
				return ВидыАктивовИОбязательств.ДоходныеВложенияВ_МЦ;
			}
			else if(Ссылка == ДоходыБудущихПериодов)
			{
				return ВидыАктивовИОбязательств.ДоходыБудущихПериодов;
			}
			else if(Ссылка == ИздержкиОбращения)
			{
				return ВидыАктивовИОбязательств.ИздержкиОбращения;
			}
			else if(Ссылка == КредиторскаяЗадолженность)
			{
				return ВидыАктивовИОбязательств.КредиторскаяЗадолженность;
			}
			else if(Ссылка == КурсовыеРазницыПоРасчетамВУЕ)
			{
				return ВидыАктивовИОбязательств.КурсовыеРазницыПоРасчетамВУЕ;
			}
			else if(Ссылка == Материалы)
			{
				return ВидыАктивовИОбязательств.Материалы;
			}
			else if(Ссылка == НедостачиПотери)
			{
				return ВидыАктивовИОбязательств.НедостачиПотери;
			}
			else if(Ссылка == НезавершенноеПроизводство)
			{
				return ВидыАктивовИОбязательств.НезавершенноеПроизводство;
			}
			else if(Ссылка == НематериальныеАктивы)
			{
				return ВидыАктивовИОбязательств.НематериальныеАктивы;
			}
			else if(Ссылка == Оборудование)
			{
				return ВидыАктивовИОбязательств.Оборудование;
			}
			else if(Ссылка == ОсновныеСредства)
			{
				return ВидыАктивовИОбязательств.ОсновныеСредства;
			}
			else if(Ссылка == ОценочныеОбязательства)
			{
				return ВидыАктивовИОбязательств.ОценочныеОбязательства;
			}
			else if(Ссылка == Полуфабрикаты)
			{
				return ВидыАктивовИОбязательств.Полуфабрикаты;
			}
			else if(Ссылка == РасходыБудущихПериодов)
			{
				return ВидыАктивовИОбязательств.РасходыБудущихПериодов;
			}
			else if(Ссылка == РезервыСомнительныхДолгов)
			{
				return ВидыАктивовИОбязательств.РезервыСомнительныхДолгов;
			}
			else if(Ссылка == Товары)
			{
				return ВидыАктивовИОбязательств.Товары;
			}
			else if(Ссылка == ТоварыОтгруженные)
			{
				return ВидыАктивовИОбязательств.ТоварыОтгруженные;
			}
			else if(Ссылка == УбытокТекущегоПериода)
			{
				return ВидыАктивовИОбязательств.УбытокТекущегоПериода;
			}
			else if(Ссылка == ФинансовыеВложения)
			{
				return ВидыАктивовИОбязательств.ФинансовыеВложения;
			}
			return ВидыАктивовИОбязательств.ПустаяСсылка;
		}
		public static byte[] Ключ(this ВидыАктивовИОбязательств Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ВидыАктивовИОбязательств Значение)
		{
			switch (Значение)
			{
				case ВидыАктивовИОбязательств.ВнеоборотныеАктивы: return ВнеоборотныеАктивы;
				case ВидыАктивовИОбязательств.ГотоваяПродукция: return ГотоваяПродукция;
				case ВидыАктивовИОбязательств.ДебиторскаяЗадолженность: return ДебиторскаяЗадолженность;
				case ВидыАктивовИОбязательств.ДоходныеВложенияВ_МЦ: return ДоходныеВложенияВ_МЦ;
				case ВидыАктивовИОбязательств.ДоходыБудущихПериодов: return ДоходыБудущихПериодов;
				case ВидыАктивовИОбязательств.ИздержкиОбращения: return ИздержкиОбращения;
				case ВидыАктивовИОбязательств.КредиторскаяЗадолженность: return КредиторскаяЗадолженность;
				case ВидыАктивовИОбязательств.КурсовыеРазницыПоРасчетамВУЕ: return КурсовыеРазницыПоРасчетамВУЕ;
				case ВидыАктивовИОбязательств.Материалы: return Материалы;
				case ВидыАктивовИОбязательств.НедостачиПотери: return НедостачиПотери;
				case ВидыАктивовИОбязательств.НезавершенноеПроизводство: return НезавершенноеПроизводство;
				case ВидыАктивовИОбязательств.НематериальныеАктивы: return НематериальныеАктивы;
				case ВидыАктивовИОбязательств.Оборудование: return Оборудование;
				case ВидыАктивовИОбязательств.ОсновныеСредства: return ОсновныеСредства;
				case ВидыАктивовИОбязательств.ОценочныеОбязательства: return ОценочныеОбязательства;
				case ВидыАктивовИОбязательств.Полуфабрикаты: return Полуфабрикаты;
				case ВидыАктивовИОбязательств.РасходыБудущихПериодов: return РасходыБудущихПериодов;
				case ВидыАктивовИОбязательств.РезервыСомнительныхДолгов: return РезервыСомнительныхДолгов;
				case ВидыАктивовИОбязательств.Товары: return Товары;
				case ВидыАктивовИОбязательств.ТоварыОтгруженные: return ТоварыОтгруженные;
				case ВидыАктивовИОбязательств.УбытокТекущегоПериода: return УбытокТекущегоПериода;
				case ВидыАктивовИОбязательств.ФинансовыеВложения: return ФинансовыеВложения;
			}
			return Guid.Empty;
		}
	}
}
