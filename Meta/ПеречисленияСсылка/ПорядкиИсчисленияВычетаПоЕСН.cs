
using System;
using System.Runtime.Serialization;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	[DataContract]
	public enum ПорядкиИсчисленияВычетаПоЕСН
	{
		[NonSerialized]
		ПустаяСсылка = - 1,
		[EnumMember(Value = "{\"Ссылка\":\"1f16bf9e-d17e-4b2d-8863-4601b47ac003\", \"Представление\":\"ПоСуммеСтраховыхВзносов\"}")]
		ПоСуммеСтраховыхВзносов = 0,//По сумме страховых взносов
		[EnumMember(Value = "{\"Ссылка\":\"9b2399cd-3aad-4bb9-b5f6-07ac1cbaf1a1\", \"Представление\":\"ПоСуммеЕСН\"}")]
		ПоСуммеЕСН = 1,//По сумме ЕСН
	}
	public static partial class ПорядкиИсчисленияВычетаПоЕСН_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid ПоСуммеСтраховыхВзносов = new Guid("01466388-7ab4-03c0-4b2d-d17e1f16bf9e");//По сумме страховых взносов
		public static readonly Guid ПоСуммеЕСН = new Guid("ac07f6b5-ba1c-a1f1-4bb9-3aad9b2399cd");//По сумме ЕСН
		public static ПорядкиИсчисленияВычетаПоЕСН Получить(this ПорядкиИсчисленияВычетаПоЕСН Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ПорядкиИсчисленияВычетаПоЕСН Получить(this ПорядкиИсчисленияВычетаПоЕСН Значение, Guid Ссылка)
		{
			if(Ссылка == ПоСуммеСтраховыхВзносов)
			{
				return ПорядкиИсчисленияВычетаПоЕСН.ПоСуммеСтраховыхВзносов;
			}
			else if(Ссылка == ПоСуммеЕСН)
			{
				return ПорядкиИсчисленияВычетаПоЕСН.ПоСуммеЕСН;
			}
			return ПорядкиИсчисленияВычетаПоЕСН.ПустаяСсылка;
		}
		public static byte[] Ключ(this ПорядкиИсчисленияВычетаПоЕСН Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ПорядкиИсчисленияВычетаПоЕСН Значение)
		{
			switch (Значение)
			{
				case ПорядкиИсчисленияВычетаПоЕСН.ПоСуммеСтраховыхВзносов: return ПоСуммеСтраховыхВзносов;
				case ПорядкиИсчисленияВычетаПоЕСН.ПоСуммеЕСН: return ПоСуммеЕСН;
			}
			return Guid.Empty;
		}
	}
}