
using System;
using System.Runtime.Serialization;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	[DataContract]
	public enum ТипДетализацииСтандартныхОтчетов
	{
		[NonSerialized]
		ПустаяСсылка = - 1,
		[EnumMember(Value = "{\"Ссылка\":\"1dfba230-1ff9-44ca-bb5a-10aa8d01c581\", \"Представление\":\"Элементы\"}")]
		Элементы = 0,
		[EnumMember(Value = "{\"Ссылка\":\"80fb3b30-22a4-4864-a3c6-ffa5a3fbf872\", \"Представление\":\"Иерархия\"}")]
		Иерархия = 1,
		[EnumMember(Value = "{\"Ссылка\":\"4ba0446e-891e-42ac-846b-3e50710b5ebe\", \"Представление\":\"ТолькоИерархия\"}")]
		ТолькоИерархия = 2,//Только иерархия
	}
	public static partial class ТипДетализацииСтандартныхОтчетов_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid Элементы = new Guid("aa105abb-018d-81c5-44ca-1ff91dfba230");
		public static readonly Guid Иерархия = new Guid("a5ffc6a3-fba3-72f8-4864-22a480fb3b30");
		public static readonly Guid ТолькоИерархия = new Guid("503e6b84-0b71-be5e-42ac-891e4ba0446e");//Только иерархия
		public static ТипДетализацииСтандартныхОтчетов Получить(this ТипДетализацииСтандартныхОтчетов Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ТипДетализацииСтандартныхОтчетов Получить(this ТипДетализацииСтандартныхОтчетов Значение, Guid Ссылка)
		{
			if(Ссылка == Элементы)
			{
				return ТипДетализацииСтандартныхОтчетов.Элементы;
			}
			else if(Ссылка == Иерархия)
			{
				return ТипДетализацииСтандартныхОтчетов.Иерархия;
			}
			else if(Ссылка == ТолькоИерархия)
			{
				return ТипДетализацииСтандартныхОтчетов.ТолькоИерархия;
			}
			return ТипДетализацииСтандартныхОтчетов.ПустаяСсылка;
		}
		public static byte[] Ключ(this ТипДетализацииСтандартныхОтчетов Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ТипДетализацииСтандартныхОтчетов Значение)
		{
			switch (Значение)
			{
				case ТипДетализацииСтандартныхОтчетов.Элементы: return Элементы;
				case ТипДетализацииСтандартныхОтчетов.Иерархия: return Иерархия;
				case ТипДетализацииСтандартныхОтчетов.ТолькоИерархия: return ТолькоИерархия;
			}
			return Guid.Empty;
		}
	}
}