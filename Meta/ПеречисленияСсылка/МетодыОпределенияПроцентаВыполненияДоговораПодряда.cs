
using System;
using System.Runtime.Serialization;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	///<summary>
	///(Упр)
	///</summary>
	[DataContract]
	public enum МетодыОпределенияПроцентаВыполненияДоговораПодряда
	{
		[NonSerialized]
		ПустаяСсылка = - 1,
		[EnumMember(Value = "{\"Ссылка\":\"9daf512e-5267-4c05-b4c0-872a49b5788f\", \"Представление\":\"ИзОтношенияЗатрат\"}")]
		ИзОтношенияЗатрат = 0,//Из отношения затрат к общей величине затрат
		[EnumMember(Value = "{\"Ссылка\":\"7390bca8-1c78-4692-9a6c-57655cb91a55\", \"Представление\":\"ИзДанныхТехническогоНадзора\"}")]
		ИзДанныхТехническогоНадзора = 1,//Из данных технического надзора
		[EnumMember(Value = "{\"Ссылка\":\"b89e848e-d986-4a82-9cdf-4f71c81276e3\", \"Представление\":\"ИзДолиВыполненногоОбъемаРабот\"}")]
		ИзДолиВыполненногоОбъемаРабот = 2,//Из доли выполненного объема работ
	}
	public static partial class МетодыОпределенияПроцентаВыполненияДоговораПодряда_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid ИзОтношенияЗатрат = new Guid("2a87c0b4-b549-8f78-4c05-52679daf512e");//Из отношения затрат к общей величине затрат
		public static readonly Guid ИзДанныхТехническогоНадзора = new Guid("65576c9a-b95c-551a-4692-1c787390bca8");//Из данных технического надзора
		public static readonly Guid ИзДолиВыполненногоОбъемаРабот = new Guid("714fdf9c-12c8-e376-4a82-d986b89e848e");//Из доли выполненного объема работ
		public static МетодыОпределенияПроцентаВыполненияДоговораПодряда Получить(this МетодыОпределенияПроцентаВыполненияДоговораПодряда Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static МетодыОпределенияПроцентаВыполненияДоговораПодряда Получить(this МетодыОпределенияПроцентаВыполненияДоговораПодряда Значение, Guid Ссылка)
		{
			if(Ссылка == ИзОтношенияЗатрат)
			{
				return МетодыОпределенияПроцентаВыполненияДоговораПодряда.ИзОтношенияЗатрат;
			}
			else if(Ссылка == ИзДанныхТехническогоНадзора)
			{
				return МетодыОпределенияПроцентаВыполненияДоговораПодряда.ИзДанныхТехническогоНадзора;
			}
			else if(Ссылка == ИзДолиВыполненногоОбъемаРабот)
			{
				return МетодыОпределенияПроцентаВыполненияДоговораПодряда.ИзДолиВыполненногоОбъемаРабот;
			}
			return МетодыОпределенияПроцентаВыполненияДоговораПодряда.ПустаяСсылка;
		}
		public static byte[] Ключ(this МетодыОпределенияПроцентаВыполненияДоговораПодряда Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this МетодыОпределенияПроцентаВыполненияДоговораПодряда Значение)
		{
			switch (Значение)
			{
				case МетодыОпределенияПроцентаВыполненияДоговораПодряда.ИзОтношенияЗатрат: return ИзОтношенияЗатрат;
				case МетодыОпределенияПроцентаВыполненияДоговораПодряда.ИзДанныхТехническогоНадзора: return ИзДанныхТехническогоНадзора;
				case МетодыОпределенияПроцентаВыполненияДоговораПодряда.ИзДолиВыполненногоОбъемаРабот: return ИзДолиВыполненногоОбъемаРабот;
			}
			return Guid.Empty;
		}
	}
}