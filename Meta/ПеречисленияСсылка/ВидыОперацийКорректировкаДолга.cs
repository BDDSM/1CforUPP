
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
		///<summary>
		///(Общ)
		///</summary>
	public enum ВидыОперацийКорректировкаДолга
	{
		ПустаяСсылка = - 1,
	///<summary>
	///(Общ)
	///</summary>
		ПроведениеВзаимозачета = 0,//проведение взаимозачета
	///<summary>
	///(Общ)
	///</summary>
		ПереносЗадолженности = 1,//перенос задолженности
		СписаниеЗадолженности = 2,//списание задолженности
	}
	public static partial class ВидыОперацийКорректировкаДолга_Значения//:ПеречислениеСсылка
	{
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid ПроведениеВзаимозачета = new Guid("52dcfe85-bf9a-3008-4d05-da580aa40ea0");//проведение взаимозачета
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid ПереносЗадолженности = new Guid("6dc7ad94-4f08-08b3-487d-946134128848");//перенос задолженности
		public static readonly Guid СписаниеЗадолженности = new Guid("2a418aa7-7e61-8235-403a-cc7201cce27d");//списание задолженности
		public static ВидыОперацийКорректировкаДолга Получить(this ВидыОперацийКорректировкаДолга Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ВидыОперацийКорректировкаДолга Получить(this ВидыОперацийКорректировкаДолга Значение, Guid Ссылка)
		{
			if(Ссылка == ПроведениеВзаимозачета)
			{
				return ВидыОперацийКорректировкаДолга.ПроведениеВзаимозачета;
			}
			else if(Ссылка == ПереносЗадолженности)
			{
				return ВидыОперацийКорректировкаДолга.ПереносЗадолженности;
			}
			else if(Ссылка == СписаниеЗадолженности)
			{
				return ВидыОперацийКорректировкаДолга.СписаниеЗадолженности;
			}
			return ВидыОперацийКорректировкаДолга.ПустаяСсылка;
		}
		public static byte[] Ключ(this ВидыОперацийКорректировкаДолга Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ВидыОперацийКорректировкаДолга Значение)
		{
			switch (Значение)
			{
				case ВидыОперацийКорректировкаДолга.ПроведениеВзаимозачета: return ПроведениеВзаимозачета;
				case ВидыОперацийКорректировкаДолга.ПереносЗадолженности: return ПереносЗадолженности;
				case ВидыОперацийКорректировкаДолга.СписаниеЗадолженности: return СписаниеЗадолженности;
			}
			return Guid.Empty;
		}
	}
}
