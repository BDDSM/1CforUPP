
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	public enum СпособыПогашенияСтоимости
	{
		ПустаяСсылка = - 1,
		Линейный = 0,
		ПогашатьСтоимостьПриПередачеВЭксплуатацию = 1,//Погашать стоимость при передаче в эксплуатацию
	}
	public static partial class СпособыПогашенияСтоимости_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid Линейный = new Guid("7c3d5f96-11a6-d536-4d20-205207114ce3");
		public static readonly Guid ПогашатьСтоимостьПриПередачеВЭксплуатацию = new Guid("69e9d6be-a667-c06e-4fa0-de527ae7000d");//Погашать стоимость при передаче в эксплуатацию
		public static СпособыПогашенияСтоимости Получить(this СпособыПогашенияСтоимости Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static СпособыПогашенияСтоимости Получить(this СпособыПогашенияСтоимости Значение, Guid Ссылка)
		{
			if(Ссылка == Линейный)
			{
				return СпособыПогашенияСтоимости.Линейный;
			}
			else if(Ссылка == ПогашатьСтоимостьПриПередачеВЭксплуатацию)
			{
				return СпособыПогашенияСтоимости.ПогашатьСтоимостьПриПередачеВЭксплуатацию;
			}
			return СпособыПогашенияСтоимости.ПустаяСсылка;
		}
		public static byte[] Ключ(this СпособыПогашенияСтоимости Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this СпособыПогашенияСтоимости Значение)
		{
			switch (Значение)
			{
				case СпособыПогашенияСтоимости.Линейный: return Линейный;
				case СпособыПогашенияСтоимости.ПогашатьСтоимостьПриПередачеВЭксплуатацию: return ПогашатьСтоимостьПриПередачеВЭксплуатацию;
			}
			return Guid.Empty;
		}
	}
}
