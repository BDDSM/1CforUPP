
using System;
using System.Runtime.Serialization;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	///<summary>
	///(Регл)
	///</summary>
	[DataContract]
	public enum СпособыФинансированияПособийСоцстрахования
	{
		[NonSerialized]
		ПустаяСсылка = - 1,
		[EnumMember(Value = "{\"Ссылка\":\"b1a96b6b-a53d-4ae6-be9c-f445fd237384\", \"Представление\":\"ЗаСчетФСС\"}")]
		ЗаСчетФСС = 0,//За счет ФСС
		[EnumMember(Value = "{\"Ссылка\":\"48d7fb13-f12d-4be6-8849-73c6c3548f9f\", \"Представление\":\"ЗаСчетРаботодателя\"}")]
		ЗаСчетРаботодателя = 1,//За счет работодателя
	}
	public static partial class СпособыФинансированияПособийСоцстрахования_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid ЗаСчетФСС = new Guid("45f49cbe-23fd-8473-4ae6-a53db1a96b6b");//За счет ФСС
		public static readonly Guid ЗаСчетРаботодателя = new Guid("c6734988-54c3-9f8f-4be6-f12d48d7fb13");//За счет работодателя
		public static СпособыФинансированияПособийСоцстрахования Получить(this СпособыФинансированияПособийСоцстрахования Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static СпособыФинансированияПособийСоцстрахования Получить(this СпособыФинансированияПособийСоцстрахования Значение, Guid Ссылка)
		{
			if(Ссылка == ЗаСчетФСС)
			{
				return СпособыФинансированияПособийСоцстрахования.ЗаСчетФСС;
			}
			else if(Ссылка == ЗаСчетРаботодателя)
			{
				return СпособыФинансированияПособийСоцстрахования.ЗаСчетРаботодателя;
			}
			return СпособыФинансированияПособийСоцстрахования.ПустаяСсылка;
		}
		public static byte[] Ключ(this СпособыФинансированияПособийСоцстрахования Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this СпособыФинансированияПособийСоцстрахования Значение)
		{
			switch (Значение)
			{
				case СпособыФинансированияПособийСоцстрахования.ЗаСчетФСС: return ЗаСчетФСС;
				case СпособыФинансированияПособийСоцстрахования.ЗаСчетРаботодателя: return ЗаСчетРаботодателя;
			}
			return Guid.Empty;
		}
	}
}