
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
		///<summary>
		///(Упр)
		///</summary>
	public enum ХарактерУчастияВМероприятиях
	{
		ПустаяСсылка = - 1,
		Слушатель = 0,
		Участник = 1,
		Ответственный = 2,
	}
	public static partial class ХарактерУчастияВМероприятиях_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid Слушатель = new Guid("2c98ab92-9a83-8321-46e0-155db3d3f83c");
		public static readonly Guid Участник = new Guid("c54f35bf-4840-8741-456c-57a07e4fa0fc");
		public static readonly Guid Ответственный = new Guid("351a97bb-6520-ae6e-4b78-aaf0b55ac461");
		public static ХарактерУчастияВМероприятиях Получить(this ХарактерУчастияВМероприятиях Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ХарактерУчастияВМероприятиях Получить(this ХарактерУчастияВМероприятиях Значение, Guid Ссылка)
		{
			if(Ссылка == Слушатель)
			{
				return ХарактерУчастияВМероприятиях.Слушатель;
			}
			else if(Ссылка == Участник)
			{
				return ХарактерУчастияВМероприятиях.Участник;
			}
			else if(Ссылка == Ответственный)
			{
				return ХарактерУчастияВМероприятиях.Ответственный;
			}
			return ХарактерУчастияВМероприятиях.ПустаяСсылка;
		}
		public static byte[] Ключ(this ХарактерУчастияВМероприятиях Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ХарактерУчастияВМероприятиях Значение)
		{
			switch (Значение)
			{
				case ХарактерУчастияВМероприятиях.Слушатель: return Слушатель;
				case ХарактерУчастияВМероприятиях.Участник: return Участник;
				case ХарактерУчастияВМероприятиях.Ответственный: return Ответственный;
			}
			return Guid.Empty;
		}
	}
}