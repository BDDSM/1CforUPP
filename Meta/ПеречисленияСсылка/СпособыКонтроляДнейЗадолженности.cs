
using System;
using System.Runtime.Serialization;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	[DataContract]
	public enum СпособыКонтроляДнейЗадолженности
	{
		[NonSerialized]
		ПустаяСсылка = - 1,
		[EnumMember(Value = "{\"Ссылка\":\"7059a823-02a6-43cb-95b9-22a5671ccb31\", \"Представление\":\"ПоКалендарнымДням\"}")]
		ПоКалендарнымДням = 0,//По календарным дням
		[EnumMember(Value = "{\"Ссылка\":\"543ae558-5045-4b6a-88fc-0e758ff9c1c3\", \"Представление\":\"ПоРабочимДням\"}")]
		ПоРабочимДням = 1,//По рабочим дням
	}
	public static partial class СпособыКонтроляДнейЗадолженности_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid ПоКалендарнымДням = new Guid("a522b995-1c67-31cb-43cb-02a67059a823");//По календарным дням
		public static readonly Guid ПоРабочимДням = new Guid("750efc88-f98f-c3c1-4b6a-5045543ae558");//По рабочим дням
		public static СпособыКонтроляДнейЗадолженности Получить(this СпособыКонтроляДнейЗадолженности Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static СпособыКонтроляДнейЗадолженности Получить(this СпособыКонтроляДнейЗадолженности Значение, Guid Ссылка)
		{
			if(Ссылка == ПоКалендарнымДням)
			{
				return СпособыКонтроляДнейЗадолженности.ПоКалендарнымДням;
			}
			else if(Ссылка == ПоРабочимДням)
			{
				return СпособыКонтроляДнейЗадолженности.ПоРабочимДням;
			}
			return СпособыКонтроляДнейЗадолженности.ПустаяСсылка;
		}
		public static byte[] Ключ(this СпособыКонтроляДнейЗадолженности Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this СпособыКонтроляДнейЗадолженности Значение)
		{
			switch (Значение)
			{
				case СпособыКонтроляДнейЗадолженности.ПоКалендарнымДням: return ПоКалендарнымДням;
				case СпособыКонтроляДнейЗадолженности.ПоРабочимДням: return ПоРабочимДням;
			}
			return Guid.Empty;
		}
	}
}