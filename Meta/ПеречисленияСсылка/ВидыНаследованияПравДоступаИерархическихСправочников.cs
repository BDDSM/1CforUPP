
using System;
using V82;
using V82.ѕеречислени€;//—сылка;
namespace V82.ѕеречислени€//—сылка
{
	public enum ¬идыЌаследовани€ѕравƒоступа»ерархических—правочников
	{
		ѕуста€—сылка = - 1,
		Ќаследуетс€ќт–одител€ = 0,//Ќаследуетс€ от родител€
		–аспространитьЌаѕодчиненных = 1,//–аспространить на подчиненных
		“олькоƒл€“екущегоѕрава = 2,//“олько дл€ текущего права
		”наследованоќтƒочернего = 3,//”наследовано от дочернего
	}
	public static partial class ¬идыЌаследовани€ѕравƒоступа»ерархических—правочников_«начени€//:ѕеречисление—сылка
	{
		public static readonly Guid Ќаследуетс€ќт–одител€ = new Guid("480cbd81-110b-6da5-474d-1ca56aad266f");//Ќаследуетс€ от родител€
		public static readonly Guid –аспространитьЌаѕодчиненных = new Guid("7d101da8-d52c-4627-4b0b-52dd00fd3053");//–аспространить на подчиненных
		public static readonly Guid “олькоƒл€“екущегоѕрава = new Guid("f14b959a-bd7d-cbb8-4efc-891a7cfa0a17");//“олько дл€ текущего права
		public static readonly Guid ”наследованоќтƒочернего = new Guid("56653699-77b3-97d4-4a45-5665a10e3b42");//”наследовано от дочернего
		public static ¬идыЌаследовани€ѕравƒоступа»ерархических—правочников ѕолучить(this ¬идыЌаследовани€ѕравƒоступа»ерархических—правочников «начение, byte[] —сылка)
		{
			return ѕолучить(«начение, new Guid(—сылка));
		}
		public static ¬идыЌаследовани€ѕравƒоступа»ерархических—правочников ѕолучить(this ¬идыЌаследовани€ѕравƒоступа»ерархических—правочников «начение, Guid —сылка)
		{
			if(—сылка == Ќаследуетс€ќт–одител€)
			{
				return ¬идыЌаследовани€ѕравƒоступа»ерархических—правочников.Ќаследуетс€ќт–одител€;
			}
			else if(—сылка == –аспространитьЌаѕодчиненных)
			{
				return ¬идыЌаследовани€ѕравƒоступа»ерархических—правочников.–аспространитьЌаѕодчиненных;
			}
			else if(—сылка == “олькоƒл€“екущегоѕрава)
			{
				return ¬идыЌаследовани€ѕравƒоступа»ерархических—правочников.“олькоƒл€“екущегоѕрава;
			}
			else if(—сылка == ”наследованоќтƒочернего)
			{
				return ¬идыЌаследовани€ѕравƒоступа»ерархических—правочников.”наследованоќтƒочернего;
			}
			return ¬идыЌаследовани€ѕравƒоступа»ерархических—правочников.ѕуста€—сылка;
		}
		public static byte[]  люч(this ¬идыЌаследовани€ѕравƒоступа»ерархических—правочников «начение)
		{
			return —сылка(«начение).ToByteArray();
		}
		public static Guid —сылка(this ¬идыЌаследовани€ѕравƒоступа»ерархических—правочников «начение)
		{
			switch («начение)
			{
				case ¬идыЌаследовани€ѕравƒоступа»ерархических—правочников.Ќаследуетс€ќт–одител€: return Ќаследуетс€ќт–одител€;
				case ¬идыЌаследовани€ѕравƒоступа»ерархических—правочников.–аспространитьЌаѕодчиненных: return –аспространитьЌаѕодчиненных;
				case ¬идыЌаследовани€ѕравƒоступа»ерархических—правочников.“олькоƒл€“екущегоѕрава: return “олькоƒл€“екущегоѕрава;
				case ¬идыЌаследовани€ѕравƒоступа»ерархических—правочников.”наследованоќтƒочернего: return ”наследованоќтƒочернего;
			}
			return Guid.Empty;
		}
	}
}
