
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
		///<summary>
		///(Общ)
		///</summary>
	public enum ПорядокПогашенияЗаймаПроцентов
	{
		ПустаяСсылка = - 1,
		Ежемесячно = 0,
		ПоОкончанииСрока = 1,//По окончании срока
	}
	public static partial class ПорядокПогашенияЗаймаПроцентов_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid Ежемесячно = new Guid("83acb797-2c60-97b7-42c1-0decb634b956");
		public static readonly Guid ПоОкончанииСрока = new Guid("6eab3fbc-6937-7443-422c-e907d91b3353");//По окончании срока
		public static ПорядокПогашенияЗаймаПроцентов Получить(this ПорядокПогашенияЗаймаПроцентов Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ПорядокПогашенияЗаймаПроцентов Получить(this ПорядокПогашенияЗаймаПроцентов Значение, Guid Ссылка)
		{
			if(Ссылка == Ежемесячно)
			{
				return ПорядокПогашенияЗаймаПроцентов.Ежемесячно;
			}
			else if(Ссылка == ПоОкончанииСрока)
			{
				return ПорядокПогашенияЗаймаПроцентов.ПоОкончанииСрока;
			}
			return ПорядокПогашенияЗаймаПроцентов.ПустаяСсылка;
		}
		public static byte[] Ключ(this ПорядокПогашенияЗаймаПроцентов Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ПорядокПогашенияЗаймаПроцентов Значение)
		{
			switch (Значение)
			{
				case ПорядокПогашенияЗаймаПроцентов.Ежемесячно: return Ежемесячно;
				case ПорядокПогашенияЗаймаПроцентов.ПоОкончанииСрока: return ПоОкончанииСрока;
			}
			return Guid.Empty;
		}
	}
}