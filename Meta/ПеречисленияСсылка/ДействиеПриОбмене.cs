
using System;
using System.Runtime.Serialization;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	[DataContract]
	public enum ДействиеПриОбмене
	{
		[NonSerialized]
		ПустаяСсылка = - 1,
		[EnumMember(Value = "{\"Ссылка\":\"b1bad895-623f-48bd-beee-a9236dd72707\", \"Представление\":\"ЗагрузкаДанных\"}")]
		ЗагрузкаДанных = 0,//Загрузка данных
		[EnumMember(Value = "{\"Ссылка\":\"2afbf282-a6f0-4f7f-b4bb-72a3cd7e896f\", \"Представление\":\"ОтложенныеДвижения\"}")]
		ОтложенныеДвижения = 1,//Отложенные движения
		[EnumMember(Value = "{\"Ссылка\":\"28988e10-438f-4160-b1d4-420b22750bfe\", \"Представление\":\"ВыгрузкаДанных\"}")]
		ВыгрузкаДанных = 2,//Выгрузка данных
	}
	public static partial class ДействиеПриОбмене_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid ЗагрузкаДанных = new Guid("23a9eebe-d76d-0727-48bd-623fb1bad895");//Загрузка данных
		public static readonly Guid ОтложенныеДвижения = new Guid("a372bbb4-7ecd-6f89-4f7f-a6f02afbf282");//Отложенные движения
		public static readonly Guid ВыгрузкаДанных = new Guid("0b42d4b1-7522-fe0b-4160-438f28988e10");//Выгрузка данных
		public static ДействиеПриОбмене Получить(this ДействиеПриОбмене Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ДействиеПриОбмене Получить(this ДействиеПриОбмене Значение, Guid Ссылка)
		{
			if(Ссылка == ЗагрузкаДанных)
			{
				return ДействиеПриОбмене.ЗагрузкаДанных;
			}
			else if(Ссылка == ОтложенныеДвижения)
			{
				return ДействиеПриОбмене.ОтложенныеДвижения;
			}
			else if(Ссылка == ВыгрузкаДанных)
			{
				return ДействиеПриОбмене.ВыгрузкаДанных;
			}
			return ДействиеПриОбмене.ПустаяСсылка;
		}
		public static byte[] Ключ(this ДействиеПриОбмене Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ДействиеПриОбмене Значение)
		{
			switch (Значение)
			{
				case ДействиеПриОбмене.ЗагрузкаДанных: return ЗагрузкаДанных;
				case ДействиеПриОбмене.ОтложенныеДвижения: return ОтложенныеДвижения;
				case ДействиеПриОбмене.ВыгрузкаДанных: return ВыгрузкаДанных;
			}
			return Guid.Empty;
		}
	}
}