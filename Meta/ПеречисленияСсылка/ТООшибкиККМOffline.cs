
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	public enum ТООшибкиККМOffline
	{
		ПустаяСсылка = - 1,
	///<summary>
	///Необходимо проверить параметры настройки и подключения ККМ и повторить попытку выгрузки товаров.
	///</summary>
		ОшибкаВыгрузкиТоваров = 0,//При попытке выгрузки товаров в ККМ, подключаемую в режиме Off-Line, произошла ошибка. Товары не были выгружены.
	///<summary>
	///Необходимо проверить параметры настройки и подключения ККМ и повторить попытку загрузки отчёта.
	///</summary>
		ОшибкаЗагрузкиОтчета = 1,//При попытке загрузки отчёта о продажах из ККМ, подключаемой в режиме Off-Line, произошла ошибка. Отчёт не был загружен.
	}
	public static partial class ТООшибкиККМOffline_Значения//:ПеречислениеСсылка
	{
		///<summary>
		///Необходимо проверить параметры настройки и подключения ККМ и повторить попытку выгрузки товаров.
		///</summary>
		public static readonly Guid ОшибкаВыгрузкиТоваров = new Guid("6e850b98-409c-e050-471e-15e009205440");//При попытке выгрузки товаров в ККМ, подключаемую в режиме Off-Line, произошла ошибка. Товары не были выгружены.
		///<summary>
		///Необходимо проверить параметры настройки и подключения ККМ и повторить попытку загрузки отчёта.
		///</summary>
		public static readonly Guid ОшибкаЗагрузкиОтчета = new Guid("153a31bd-f7d5-d35b-46f7-56cc990cb8da");//При попытке загрузки отчёта о продажах из ККМ, подключаемой в режиме Off-Line, произошла ошибка. Отчёт не был загружен.
		public static ТООшибкиККМOffline Получить(this ТООшибкиККМOffline Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ТООшибкиККМOffline Получить(this ТООшибкиККМOffline Значение, Guid Ссылка)
		{
			if(Ссылка == ОшибкаВыгрузкиТоваров)
			{
				return ТООшибкиККМOffline.ОшибкаВыгрузкиТоваров;
			}
			else if(Ссылка == ОшибкаЗагрузкиОтчета)
			{
				return ТООшибкиККМOffline.ОшибкаЗагрузкиОтчета;
			}
			return ТООшибкиККМOffline.ПустаяСсылка;
		}
		public static byte[] Ключ(this ТООшибкиККМOffline Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ТООшибкиККМOffline Значение)
		{
			switch (Значение)
			{
				case ТООшибкиККМOffline.ОшибкаВыгрузкиТоваров: return ОшибкаВыгрузкиТоваров;
				case ТООшибкиККМOffline.ОшибкаЗагрузкиОтчета: return ОшибкаЗагрузкиОтчета;
			}
			return Guid.Empty;
		}
	}
}
