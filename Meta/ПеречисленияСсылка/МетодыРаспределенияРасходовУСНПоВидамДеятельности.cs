
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	public enum МетодыРаспределенияРасходовУСНПоВидамДеятельности
	{
		ПустаяСсылка = - 1,
		ЗаКвартал = 0,//За квартал
		НарастающимИтогомСНачалаГода = 1,//Нарастающим итогом с начала года
	}
	public static partial class МетодыРаспределенияРасходовУСНПоВидамДеятельности_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid ЗаКвартал = new Guid("b9f40da9-ba68-a44b-4d33-ffffcc8abd8e");//За квартал
		public static readonly Guid НарастающимИтогомСНачалаГода = new Guid("5d3fac85-bba1-2b81-4c44-2a0413d9d47e");//Нарастающим итогом с начала года
		public static МетодыРаспределенияРасходовУСНПоВидамДеятельности Получить(this МетодыРаспределенияРасходовУСНПоВидамДеятельности Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static МетодыРаспределенияРасходовУСНПоВидамДеятельности Получить(this МетодыРаспределенияРасходовУСНПоВидамДеятельности Значение, Guid Ссылка)
		{
			if(Ссылка == ЗаКвартал)
			{
				return МетодыРаспределенияРасходовУСНПоВидамДеятельности.ЗаКвартал;
			}
			else if(Ссылка == НарастающимИтогомСНачалаГода)
			{
				return МетодыРаспределенияРасходовУСНПоВидамДеятельности.НарастающимИтогомСНачалаГода;
			}
			return МетодыРаспределенияРасходовУСНПоВидамДеятельности.ПустаяСсылка;
		}
		public static byte[] Ключ(this МетодыРаспределенияРасходовУСНПоВидамДеятельности Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this МетодыРаспределенияРасходовУСНПоВидамДеятельности Значение)
		{
			switch (Значение)
			{
				case МетодыРаспределенияРасходовУСНПоВидамДеятельности.ЗаКвартал: return ЗаКвартал;
				case МетодыРаспределенияРасходовУСНПоВидамДеятельности.НарастающимИтогомСНачалаГода: return НарастающимИтогомСНачалаГода;
			}
			return Guid.Empty;
		}
	}
}
