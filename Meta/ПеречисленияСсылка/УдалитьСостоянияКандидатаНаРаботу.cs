
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	public enum УдалитьСостоянияКандидатаНаРаботу
	{
		ПустаяСсылка = - 1,
		ПринятКРассмотрению = 0,//Принят к рассмотрению
		Отложен = 1,
	///<summary>
	///переведен в "черный" список
	///</summary>
		Отклонен = 2,
	///<summary>
	///Кандидат зачислен в "короткий список"
	///</summary>
		ВКороткомСпискеНаВакансию = 3,//В коротком списке на вакансию
	///<summary>
	///Положительное решение
	///</summary>
		ПредложилиРаботу = 4,//Предложили работать
		ПринятНаИспытательныйСрок = 5,//Принят на испытательный срок
		ВОбработке = 6,//В обработке
		НеПрошелИспытательныйСрок = 7,//Не прошел испытательный срок
		ПринятНаРаботу = 8,//Принят на работу
	}
	public static partial class УдалитьСостоянияКандидатаНаРаботу_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid ПринятКРассмотрению = new Guid("6a3fdc84-f3ec-5fc8-4284-838ec6986fb3");//Принят к рассмотрению
		public static readonly Guid Отложен = new Guid("9c4a969c-3076-0e68-4c22-5bfa1e4314e0");
		///<summary>
		///переведен в "черный" список
		///</summary>
		public static readonly Guid Отклонен = new Guid("6dc47e84-9a82-5b61-4857-32a7ae629d46");
		///<summary>
		///Кандидат зачислен в "короткий список"
		///</summary>
		public static readonly Guid ВКороткомСпискеНаВакансию = new Guid("98fd1c91-ee21-e9ed-40b2-e8b61d8f909c");//В коротком списке на вакансию
		///<summary>
		///Положительное решение
		///</summary>
		public static readonly Guid ПредложилиРаботу = new Guid("72cb41a0-45ec-52c1-4711-653e5df06a13");//Предложили работать
		public static readonly Guid ПринятНаИспытательныйСрок = new Guid("fe8678bd-e828-e8c3-4932-bc9c096b7f96");//Принят на испытательный срок
		public static readonly Guid ВОбработке = new Guid("550b53a5-134a-e5c4-43d0-f82ef92d4970");//В обработке
		public static readonly Guid НеПрошелИспытательныйСрок = new Guid("b13e2e81-7163-feca-43b0-efdde325f706");//Не прошел испытательный срок
		public static readonly Guid ПринятНаРаботу = new Guid("95f91d81-9e3b-a63e-4c4b-9c3c28e1604f");//Принят на работу
		public static УдалитьСостоянияКандидатаНаРаботу Получить(this УдалитьСостоянияКандидатаНаРаботу Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static УдалитьСостоянияКандидатаНаРаботу Получить(this УдалитьСостоянияКандидатаНаРаботу Значение, Guid Ссылка)
		{
			if(Ссылка == ПринятКРассмотрению)
			{
				return УдалитьСостоянияКандидатаНаРаботу.ПринятКРассмотрению;
			}
			else if(Ссылка == Отложен)
			{
				return УдалитьСостоянияКандидатаНаРаботу.Отложен;
			}
			else if(Ссылка == Отклонен)
			{
				return УдалитьСостоянияКандидатаНаРаботу.Отклонен;
			}
			else if(Ссылка == ВКороткомСпискеНаВакансию)
			{
				return УдалитьСостоянияКандидатаНаРаботу.ВКороткомСпискеНаВакансию;
			}
			else if(Ссылка == ПредложилиРаботу)
			{
				return УдалитьСостоянияКандидатаНаРаботу.ПредложилиРаботу;
			}
			else if(Ссылка == ПринятНаИспытательныйСрок)
			{
				return УдалитьСостоянияКандидатаНаРаботу.ПринятНаИспытательныйСрок;
			}
			else if(Ссылка == ВОбработке)
			{
				return УдалитьСостоянияКандидатаНаРаботу.ВОбработке;
			}
			else if(Ссылка == НеПрошелИспытательныйСрок)
			{
				return УдалитьСостоянияКандидатаНаРаботу.НеПрошелИспытательныйСрок;
			}
			else if(Ссылка == ПринятНаРаботу)
			{
				return УдалитьСостоянияКандидатаНаРаботу.ПринятНаРаботу;
			}
			return УдалитьСостоянияКандидатаНаРаботу.ПустаяСсылка;
		}
		public static byte[] Ключ(this УдалитьСостоянияКандидатаНаРаботу Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this УдалитьСостоянияКандидатаНаРаботу Значение)
		{
			switch (Значение)
			{
				case УдалитьСостоянияКандидатаНаРаботу.ПринятКРассмотрению: return ПринятКРассмотрению;
				case УдалитьСостоянияКандидатаНаРаботу.Отложен: return Отложен;
				case УдалитьСостоянияКандидатаНаРаботу.Отклонен: return Отклонен;
				case УдалитьСостоянияКандидатаНаРаботу.ВКороткомСпискеНаВакансию: return ВКороткомСпискеНаВакансию;
				case УдалитьСостоянияКандидатаНаРаботу.ПредложилиРаботу: return ПредложилиРаботу;
				case УдалитьСостоянияКандидатаНаРаботу.ПринятНаИспытательныйСрок: return ПринятНаИспытательныйСрок;
				case УдалитьСостоянияКандидатаНаРаботу.ВОбработке: return ВОбработке;
				case УдалитьСостоянияКандидатаНаРаботу.НеПрошелИспытательныйСрок: return НеПрошелИспытательныйСрок;
				case УдалитьСостоянияКандидатаНаРаботу.ПринятНаРаботу: return ПринятНаРаботу;
			}
			return Guid.Empty;
		}
	}
}