
using System;
using System.Runtime.Serialization;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	[DataContract]
	public enum ВидыАвторскогоДоговора
	{
		[NonSerialized]
		ПустаяСсылка = - 1,
		[EnumMember(Value = "{\"Ссылка\":\"7ee99d38-8850-41d9-9762-b25f12f6ace2\", \"Представление\":\"АвторскогоЗаказа\"}")]
		АвторскогоЗаказа = 0,//Авторского заказа
		[EnumMember(Value = "{\"Ссылка\":\"17d0969d-90f8-4b3d-9624-290851312208\", \"Представление\":\"Лицензионный\"}")]
		Лицензионный = 1,
		[EnumMember(Value = "{\"Ссылка\":\"ff8f3f4f-7aea-4066-a101-6888cd0abd50\", \"Представление\":\"ОбОтчужденииИсключительныхПрав\"}")]
		ОбОтчужденииИсключительныхПрав = 2,//Об отчуждении исключительных прав
	}
	public static partial class ВидыАвторскогоДоговора_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid АвторскогоЗаказа = new Guid("5fb26297-f612-e2ac-41d9-88507ee99d38");//Авторского заказа
		public static readonly Guid Лицензионный = new Guid("08292496-3151-0822-4b3d-90f817d0969d");
		public static readonly Guid ОбОтчужденииИсключительныхПрав = new Guid("886801a1-0acd-50bd-4066-7aeaff8f3f4f");//Об отчуждении исключительных прав
		public static ВидыАвторскогоДоговора Получить(this ВидыАвторскогоДоговора Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ВидыАвторскогоДоговора Получить(this ВидыАвторскогоДоговора Значение, Guid Ссылка)
		{
			if(Ссылка == АвторскогоЗаказа)
			{
				return ВидыАвторскогоДоговора.АвторскогоЗаказа;
			}
			else if(Ссылка == Лицензионный)
			{
				return ВидыАвторскогоДоговора.Лицензионный;
			}
			else if(Ссылка == ОбОтчужденииИсключительныхПрав)
			{
				return ВидыАвторскогоДоговора.ОбОтчужденииИсключительныхПрав;
			}
			return ВидыАвторскогоДоговора.ПустаяСсылка;
		}
		public static byte[] Ключ(this ВидыАвторскогоДоговора Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ВидыАвторскогоДоговора Значение)
		{
			switch (Значение)
			{
				case ВидыАвторскогоДоговора.АвторскогоЗаказа: return АвторскогоЗаказа;
				case ВидыАвторскогоДоговора.Лицензионный: return Лицензионный;
				case ВидыАвторскогоДоговора.ОбОтчужденииИсключительныхПрав: return ОбОтчужденииИсключительныхПрав;
			}
			return Guid.Empty;
		}
	}
}