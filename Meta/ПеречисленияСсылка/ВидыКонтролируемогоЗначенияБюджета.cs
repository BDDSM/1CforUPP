
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
		///<summary>
		///(Упр)
		///</summary>
	public enum ВидыКонтролируемогоЗначенияБюджета
	{
		ПустаяСсылка = - 1,
		Ограничивающее = 0,
		Целевое = 1,
	}
	public static partial class ВидыКонтролируемогоЗначенияБюджета_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid Ограничивающее = new Guid("62563899-6e91-fec9-4f69-ae75c435fd69");
		public static readonly Guid Целевое = new Guid("8aba9a82-9fd4-e124-49c0-078d085b6364");
		public static ВидыКонтролируемогоЗначенияБюджета Получить(this ВидыКонтролируемогоЗначенияБюджета Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ВидыКонтролируемогоЗначенияБюджета Получить(this ВидыКонтролируемогоЗначенияБюджета Значение, Guid Ссылка)
		{
			if(Ссылка == Ограничивающее)
			{
				return ВидыКонтролируемогоЗначенияБюджета.Ограничивающее;
			}
			else if(Ссылка == Целевое)
			{
				return ВидыКонтролируемогоЗначенияБюджета.Целевое;
			}
			return ВидыКонтролируемогоЗначенияБюджета.ПустаяСсылка;
		}
		public static byte[] Ключ(this ВидыКонтролируемогоЗначенияБюджета Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ВидыКонтролируемогоЗначенияБюджета Значение)
		{
			switch (Значение)
			{
				case ВидыКонтролируемогоЗначенияБюджета.Ограничивающее: return Ограничивающее;
				case ВидыКонтролируемогоЗначенияБюджета.Целевое: return Целевое;
			}
			return Guid.Empty;
		}
	}
}