
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	public enum ОсобенностиИсчисленияНДФЛ
	{
		ПустаяСсылка = - 1,
		СтандартныеВычетыНарастающимИтогом = 0,//Стандартные вычеты применяются нарастающим итогом в течение налогового периода
		СтандартныеВычетыВПределахМесячногоДохода = 1,//Стандартные вычеты применяются в пределах месячного дохода налогоплательщика
	}
	public static partial class ОсобенностиИсчисленияНДФЛ_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid СтандартныеВычетыНарастающимИтогом = new Guid("7c963c93-3c28-0546-4bae-58a6c381f54f");//Стандартные вычеты применяются нарастающим итогом в течение налогового периода
		public static readonly Guid СтандартныеВычетыВПределахМесячногоДохода = new Guid("4557a1b9-5e89-c837-43a3-ef69263c2861");//Стандартные вычеты применяются в пределах месячного дохода налогоплательщика
		public static ОсобенностиИсчисленияНДФЛ Получить(this ОсобенностиИсчисленияНДФЛ Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ОсобенностиИсчисленияНДФЛ Получить(this ОсобенностиИсчисленияНДФЛ Значение, Guid Ссылка)
		{
			if(Ссылка == СтандартныеВычетыНарастающимИтогом)
			{
				return ОсобенностиИсчисленияНДФЛ.СтандартныеВычетыНарастающимИтогом;
			}
			else if(Ссылка == СтандартныеВычетыВПределахМесячногоДохода)
			{
				return ОсобенностиИсчисленияНДФЛ.СтандартныеВычетыВПределахМесячногоДохода;
			}
			return ОсобенностиИсчисленияНДФЛ.ПустаяСсылка;
		}
		public static byte[] Ключ(this ОсобенностиИсчисленияНДФЛ Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ОсобенностиИсчисленияНДФЛ Значение)
		{
			switch (Значение)
			{
				case ОсобенностиИсчисленияНДФЛ.СтандартныеВычетыНарастающимИтогом: return СтандартныеВычетыНарастающимИтогом;
				case ОсобенностиИсчисленияНДФЛ.СтандартныеВычетыВПределахМесячногоДохода: return СтандартныеВычетыВПределахМесячногоДохода;
			}
			return Guid.Empty;
		}
	}
}