
using System;
using System.Runtime.Serialization;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	///<summary>
	///(Регл)
	///</summary>
	[DataContract]
	public enum ВидыОбъектовУчетаНМА
	{
		[NonSerialized]
		ПустаяСсылка = - 1,
		[EnumMember(Value = "{\"Ссылка\":\"f00b84d5-28d8-4184-9a1b-0d271ed09d84\", \"Представление\":\"НематериальныйАктив\"}")]
		НематериальныйАктив = 0,//Нематериальный актив
		[EnumMember(Value = "{\"Ссылка\":\"bf5e049e-299d-4b2a-bcbf-d4f0d6bed542\", \"Представление\":\"РасходыНаНИОКР\"}")]
		РасходыНаНИОКР = 1,//Расходы на НИОКР
	}
	public static partial class ВидыОбъектовУчетаНМА_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid НематериальныйАктив = new Guid("270d1b9a-d01e-849d-4184-28d8f00b84d5");//Нематериальный актив
		public static readonly Guid РасходыНаНИОКР = new Guid("f0d4bfbc-bed6-42d5-4b2a-299dbf5e049e");//Расходы на НИОКР
		public static ВидыОбъектовУчетаНМА Получить(this ВидыОбъектовУчетаНМА Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ВидыОбъектовУчетаНМА Получить(this ВидыОбъектовУчетаНМА Значение, Guid Ссылка)
		{
			if(Ссылка == НематериальныйАктив)
			{
				return ВидыОбъектовУчетаНМА.НематериальныйАктив;
			}
			else if(Ссылка == РасходыНаНИОКР)
			{
				return ВидыОбъектовУчетаНМА.РасходыНаНИОКР;
			}
			return ВидыОбъектовУчетаНМА.ПустаяСсылка;
		}
		public static byte[] Ключ(this ВидыОбъектовУчетаНМА Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ВидыОбъектовУчетаНМА Значение)
		{
			switch (Значение)
			{
				case ВидыОбъектовУчетаНМА.НематериальныйАктив: return НематериальныйАктив;
				case ВидыОбъектовУчетаНМА.РасходыНаНИОКР: return РасходыНаНИОКР;
			}
			return Guid.Empty;
		}
	}
}