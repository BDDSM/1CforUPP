
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
		///<summary>
		///(Общ)
		///</summary>
	public enum ВидыУказанияНорматива
	{
		ПустаяСсылка = - 1,
		НаКоличествоПродукции = 0,//На кол-во продукции
		НаКоличествоОсновногоСырья = 1,//На кол-во основного сырья
	}
	public static partial class ВидыУказанияНорматива_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid НаКоличествоПродукции = new Guid("95626eb8-6719-beb9-486d-8e319070002c");//На кол-во продукции
		public static readonly Guid НаКоличествоОсновногоСырья = new Guid("64a8a4a3-8cc7-da19-4d48-0fcf2a95f811");//На кол-во основного сырья
		public static ВидыУказанияНорматива Получить(this ВидыУказанияНорматива Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ВидыУказанияНорматива Получить(this ВидыУказанияНорматива Значение, Guid Ссылка)
		{
			if(Ссылка == НаКоличествоПродукции)
			{
				return ВидыУказанияНорматива.НаКоличествоПродукции;
			}
			else if(Ссылка == НаКоличествоОсновногоСырья)
			{
				return ВидыУказанияНорматива.НаКоличествоОсновногоСырья;
			}
			return ВидыУказанияНорматива.ПустаяСсылка;
		}
		public static byte[] Ключ(this ВидыУказанияНорматива Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ВидыУказанияНорматива Значение)
		{
			switch (Значение)
			{
				case ВидыУказанияНорматива.НаКоличествоПродукции: return НаКоличествоПродукции;
				case ВидыУказанияНорматива.НаКоличествоОсновногоСырья: return НаКоличествоОсновногоСырья;
			}
			return Guid.Empty;
		}
	}
}