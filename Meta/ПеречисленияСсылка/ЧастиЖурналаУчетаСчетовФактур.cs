
using System;
using System.Runtime.Serialization;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	[DataContract]
	public enum ЧастиЖурналаУчетаСчетовФактур
	{
		[NonSerialized]
		ПустаяСсылка = - 1,
		[EnumMember(Value = "{\"Ссылка\":\"8dac430f-740e-4d3d-88d3-f9309889a425\", \"Представление\":\"ПолученныеСчетаФактуры\"}")]
		ПолученныеСчетаФактуры = 0,//Полученные счета-фактуры
		[EnumMember(Value = "{\"Ссылка\":\"f92e2ff8-330a-4007-ad90-eee4ab0a279e\", \"Представление\":\"ВыставленныеСчетаФактуры\"}")]
		ВыставленныеСчетаФактуры = 1,//Выставленные счета-фактуры
	}
	public static partial class ЧастиЖурналаУчетаСчетовФактур_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid ПолученныеСчетаФактуры = new Guid("30f9d388-8998-25a4-4d3d-740e8dac430f");//Полученные счета-фактуры
		public static readonly Guid ВыставленныеСчетаФактуры = new Guid("e4ee90ad-0aab-9e27-4007-330af92e2ff8");//Выставленные счета-фактуры
		public static ЧастиЖурналаУчетаСчетовФактур Получить(this ЧастиЖурналаУчетаСчетовФактур Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ЧастиЖурналаУчетаСчетовФактур Получить(this ЧастиЖурналаУчетаСчетовФактур Значение, Guid Ссылка)
		{
			if(Ссылка == ПолученныеСчетаФактуры)
			{
				return ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры;
			}
			else if(Ссылка == ВыставленныеСчетаФактуры)
			{
				return ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры;
			}
			return ЧастиЖурналаУчетаСчетовФактур.ПустаяСсылка;
		}
		public static byte[] Ключ(this ЧастиЖурналаУчетаСчетовФактур Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ЧастиЖурналаУчетаСчетовФактур Значение)
		{
			switch (Значение)
			{
				case ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры: return ПолученныеСчетаФактуры;
				case ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры: return ВыставленныеСчетаФактуры;
			}
			return Guid.Empty;
		}
	}
}