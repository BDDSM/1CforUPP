
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	public enum БазыРаспределенияКосвенныхРасходовПоВидамДеятельности
	{
		ПустаяСсылка = - 1,
		ДоходыОтРеализации = 0,//Доходы от реализации
		ДоходыОтРеализацииИВнереализационные = 1,//Доходы от реализации и внереализационные
	}
	public static partial class БазыРаспределенияКосвенныхРасходовПоВидамДеятельности_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid ДоходыОтРеализации = new Guid("5d83a195-2304-69f4-4961-b78a98eb9a4c");//Доходы от реализации
		public static readonly Guid ДоходыОтРеализацииИВнереализационные = new Guid("c50344b1-257d-9b62-4501-a56576cffba6");//Доходы от реализации и внереализационные
		public static БазыРаспределенияКосвенныхРасходовПоВидамДеятельности Получить(this БазыРаспределенияКосвенныхРасходовПоВидамДеятельности Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static БазыРаспределенияКосвенныхРасходовПоВидамДеятельности Получить(this БазыРаспределенияКосвенныхРасходовПоВидамДеятельности Значение, Guid Ссылка)
		{
			if(Ссылка == ДоходыОтРеализации)
			{
				return БазыРаспределенияКосвенныхРасходовПоВидамДеятельности.ДоходыОтРеализации;
			}
			else if(Ссылка == ДоходыОтРеализацииИВнереализационные)
			{
				return БазыРаспределенияКосвенныхРасходовПоВидамДеятельности.ДоходыОтРеализацииИВнереализационные;
			}
			return БазыРаспределенияКосвенныхРасходовПоВидамДеятельности.ПустаяСсылка;
		}
		public static byte[] Ключ(this БазыРаспределенияКосвенныхРасходовПоВидамДеятельности Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this БазыРаспределенияКосвенныхРасходовПоВидамДеятельности Значение)
		{
			switch (Значение)
			{
				case БазыРаспределенияКосвенныхРасходовПоВидамДеятельности.ДоходыОтРеализации: return ДоходыОтРеализации;
				case БазыРаспределенияКосвенныхРасходовПоВидамДеятельности.ДоходыОтРеализацииИВнереализационные: return ДоходыОтРеализацииИВнереализационные;
			}
			return Guid.Empty;
		}
	}
}