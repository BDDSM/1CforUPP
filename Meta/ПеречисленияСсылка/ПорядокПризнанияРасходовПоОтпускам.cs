
using System;
using System.Runtime.Serialization;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	[DataContract]
	public enum ПорядокПризнанияРасходовПоОтпускам
	{
		[NonSerialized]
		ПустаяСсылка = - 1,
		[EnumMember(Value = "{\"Ссылка\":\"c2748f96-787e-41dc-b774-a40724f6259e\", \"Представление\":\"ВМесяцеНачисления\"}")]
		ВМесяцеНачисления = 0,//Расходы признаются в месяце начисления отпуска
		[EnumMember(Value = "{\"Ссылка\":\"fbee89f4-7acb-4408-87c5-26c8d676d7f7\", \"Представление\":\"БУМесяцНачисленияНУМесяцОтпуска\"}")]
		БУМесяцНачисленияНУМесяцОтпуска = 1,//БУ в месяце начисления, НУ  в месяце, на который приходится отпуск
		[EnumMember(Value = "{\"Ссылка\":\"976ec756-8dbd-4935-97c4-c6079c4d870a\", \"Представление\":\"ВМесяцеОтпуска\"}")]
		ВМесяцеОтпуска = 2,//Расходы признаются в месяце, на который приходится отпуск
	}
	public static partial class ПорядокПризнанияРасходовПоОтпускам_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid ВМесяцеНачисления = new Guid("07a474b7-f624-9e25-41dc-787ec2748f96");//Расходы признаются в месяце начисления отпуска
		public static readonly Guid БУМесяцНачисленияНУМесяцОтпуска = new Guid("c826c587-76d6-f7d7-4408-7acbfbee89f4");//БУ в месяце начисления, НУ  в месяце, на который приходится отпуск
		public static readonly Guid ВМесяцеОтпуска = new Guid("07c6c497-4d9c-0a87-4935-8dbd976ec756");//Расходы признаются в месяце, на который приходится отпуск
		public static ПорядокПризнанияРасходовПоОтпускам Получить(this ПорядокПризнанияРасходовПоОтпускам Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ПорядокПризнанияРасходовПоОтпускам Получить(this ПорядокПризнанияРасходовПоОтпускам Значение, Guid Ссылка)
		{
			if(Ссылка == ВМесяцеНачисления)
			{
				return ПорядокПризнанияРасходовПоОтпускам.ВМесяцеНачисления;
			}
			else if(Ссылка == БУМесяцНачисленияНУМесяцОтпуска)
			{
				return ПорядокПризнанияРасходовПоОтпускам.БУМесяцНачисленияНУМесяцОтпуска;
			}
			else if(Ссылка == ВМесяцеОтпуска)
			{
				return ПорядокПризнанияРасходовПоОтпускам.ВМесяцеОтпуска;
			}
			return ПорядокПризнанияРасходовПоОтпускам.ПустаяСсылка;
		}
		public static byte[] Ключ(this ПорядокПризнанияРасходовПоОтпускам Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ПорядокПризнанияРасходовПоОтпускам Значение)
		{
			switch (Значение)
			{
				case ПорядокПризнанияРасходовПоОтпускам.ВМесяцеНачисления: return ВМесяцеНачисления;
				case ПорядокПризнанияРасходовПоОтпускам.БУМесяцНачисленияНУМесяцОтпуска: return БУМесяцНачисленияНУМесяцОтпуска;
				case ПорядокПризнанияРасходовПоОтпускам.ВМесяцеОтпуска: return ВМесяцеОтпуска;
			}
			return Guid.Empty;
		}
	}
}