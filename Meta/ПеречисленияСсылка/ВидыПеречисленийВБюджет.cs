
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	public enum ВидыПеречисленийВБюджет
	{
		ПустаяСсылка = - 1,
		НалоговыйПлатеж = 0,//Налоговый платеж
		ТаможенныйПлатеж = 1,//Таможенный платеж
		ИнойПлатеж = 2,//Иной платеж
	}
	public static partial class ВидыПеречисленийВБюджет_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid НалоговыйПлатеж = new Guid("9adc05a6-47a5-e66e-4976-b8090c1444c0");//Налоговый платеж
		public static readonly Guid ТаможенныйПлатеж = new Guid("3a46f5ac-f9cf-4fc0-4a75-553330f993ba");//Таможенный платеж
		public static readonly Guid ИнойПлатеж = new Guid("dcd3bf82-443b-cce1-4892-07ec06871fdf");//Иной платеж
		public static ВидыПеречисленийВБюджет Получить(this ВидыПеречисленийВБюджет Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ВидыПеречисленийВБюджет Получить(this ВидыПеречисленийВБюджет Значение, Guid Ссылка)
		{
			if(Ссылка == НалоговыйПлатеж)
			{
				return ВидыПеречисленийВБюджет.НалоговыйПлатеж;
			}
			else if(Ссылка == ТаможенныйПлатеж)
			{
				return ВидыПеречисленийВБюджет.ТаможенныйПлатеж;
			}
			else if(Ссылка == ИнойПлатеж)
			{
				return ВидыПеречисленийВБюджет.ИнойПлатеж;
			}
			return ВидыПеречисленийВБюджет.ПустаяСсылка;
		}
		public static byte[] Ключ(this ВидыПеречисленийВБюджет Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ВидыПеречисленийВБюджет Значение)
		{
			switch (Значение)
			{
				case ВидыПеречисленийВБюджет.НалоговыйПлатеж: return НалоговыйПлатеж;
				case ВидыПеречисленийВБюджет.ТаможенныйПлатеж: return ТаможенныйПлатеж;
				case ВидыПеречисленийВБюджет.ИнойПлатеж: return ИнойПлатеж;
			}
			return Guid.Empty;
		}
	}
}