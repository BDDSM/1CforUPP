
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
		///<summary>
		///(Общ)
		///</summary>
	public enum ВариантыСписанияКомплектующих
	{
		ПустаяСсылка = - 1,
		Всегда = 0,
		ТолькоВДокументахРаспределения = 1,//В документах распределения
		ЗадаетсяВСвойстве = 2,//Задается в свойстве
	}
	public static partial class ВариантыСписанияКомплектующих_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid Всегда = new Guid("39553a87-2770-da95-4f35-d4784edb5f6f");
		public static readonly Guid ТолькоВДокументахРаспределения = new Guid("ed5ab6b4-8d39-31f5-4d4f-558bde5312df");//В документах распределения
		public static readonly Guid ЗадаетсяВСвойстве = new Guid("fb60d894-35d7-a3e1-44c7-3e1f134cb551");//Задается в свойстве
		public static ВариантыСписанияКомплектующих Получить(this ВариантыСписанияКомплектующих Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ВариантыСписанияКомплектующих Получить(this ВариантыСписанияКомплектующих Значение, Guid Ссылка)
		{
			if(Ссылка == Всегда)
			{
				return ВариантыСписанияКомплектующих.Всегда;
			}
			else if(Ссылка == ТолькоВДокументахРаспределения)
			{
				return ВариантыСписанияКомплектующих.ТолькоВДокументахРаспределения;
			}
			else if(Ссылка == ЗадаетсяВСвойстве)
			{
				return ВариантыСписанияКомплектующих.ЗадаетсяВСвойстве;
			}
			return ВариантыСписанияКомплектующих.ПустаяСсылка;
		}
		public static byte[] Ключ(this ВариантыСписанияКомплектующих Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ВариантыСписанияКомплектующих Значение)
		{
			switch (Значение)
			{
				case ВариантыСписанияКомплектующих.Всегда: return Всегда;
				case ВариантыСписанияКомплектующих.ТолькоВДокументахРаспределения: return ТолькоВДокументахРаспределения;
				case ВариантыСписанияКомплектующих.ЗадаетсяВСвойстве: return ЗадаетсяВСвойстве;
			}
			return Guid.Empty;
		}
	}
}
