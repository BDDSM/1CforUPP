
using System;
using System.Runtime.Serialization;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	[DataContract]
	public enum СпособыЗакрытияПотребностейЗаказовНаПроизводство
	{
		[NonSerialized]
		ПустаяСсылка = - 1,
		[EnumMember(Value = "{\"Ссылка\":\"40a8dae7-8da3-4826-810d-3567022a5cf4\", \"Представление\":\"Явно\"}")]
		Явно = 0,
		[EnumMember(Value = "{\"Ссылка\":\"470b6884-54df-47aa-b3b1-a3bf93c96e2e\", \"Представление\":\"АвтоматическиПриРаспределении\"}")]
		АвтоматическиПриРаспределении = 1,//Автоматически при распределении
	}
	public static partial class СпособыЗакрытияПотребностейЗаказовНаПроизводство_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid Явно = new Guid("67350d81-2a02-f45c-4826-8da340a8dae7");
		public static readonly Guid АвтоматическиПриРаспределении = new Guid("bfa3b1b3-c993-2e6e-47aa-54df470b6884");//Автоматически при распределении
		public static СпособыЗакрытияПотребностейЗаказовНаПроизводство Получить(this СпособыЗакрытияПотребностейЗаказовНаПроизводство Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static СпособыЗакрытияПотребностейЗаказовНаПроизводство Получить(this СпособыЗакрытияПотребностейЗаказовНаПроизводство Значение, Guid Ссылка)
		{
			if(Ссылка == Явно)
			{
				return СпособыЗакрытияПотребностейЗаказовНаПроизводство.Явно;
			}
			else if(Ссылка == АвтоматическиПриРаспределении)
			{
				return СпособыЗакрытияПотребностейЗаказовНаПроизводство.АвтоматическиПриРаспределении;
			}
			return СпособыЗакрытияПотребностейЗаказовНаПроизводство.ПустаяСсылка;
		}
		public static byte[] Ключ(this СпособыЗакрытияПотребностейЗаказовНаПроизводство Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this СпособыЗакрытияПотребностейЗаказовНаПроизводство Значение)
		{
			switch (Значение)
			{
				case СпособыЗакрытияПотребностейЗаказовНаПроизводство.Явно: return Явно;
				case СпособыЗакрытияПотребностейЗаказовНаПроизводство.АвтоматическиПриРаспределении: return АвтоматическиПриРаспределении;
			}
			return Guid.Empty;
		}
	}
}