
using System;
using System.Runtime.Serialization;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	///<summary>
	///(Упр)
	///</summary>
	[DataContract]
	public enum ВидыУсловийДоговоровВзаиморасчетов
	{
		[NonSerialized]
		ПустаяСсылка = - 1,
		[EnumMember(Value = "{\"Ссылка\":\"44e78dd1-1d2e-4cd3-8a37-0a3f1934c4eb\", \"Представление\":\"БезДополнительныхУсловий\"}")]
		БезДополнительныхУсловий = 0,//Без дополнительных условий
		[EnumMember(Value = "{\"Ссылка\":\"885ae3c2-2c4b-4a8e-b5de-753093965cff\", \"Представление\":\"СДополнительнымиУсловиями\"}")]
		СДополнительнымиУсловиями = 1,//С дополнительными условиями
	}
	public static partial class ВидыУсловийДоговоровВзаиморасчетов_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid БезДополнительныхУсловий = new Guid("3f0a378a-3419-ebc4-4cd3-1d2e44e78dd1");//Без дополнительных условий
		public static readonly Guid СДополнительнымиУсловиями = new Guid("3075deb5-9693-ff5c-4a8e-2c4b885ae3c2");//С дополнительными условиями
		public static ВидыУсловийДоговоровВзаиморасчетов Получить(this ВидыУсловийДоговоровВзаиморасчетов Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ВидыУсловийДоговоровВзаиморасчетов Получить(this ВидыУсловийДоговоровВзаиморасчетов Значение, Guid Ссылка)
		{
			if(Ссылка == БезДополнительныхУсловий)
			{
				return ВидыУсловийДоговоровВзаиморасчетов.БезДополнительныхУсловий;
			}
			else if(Ссылка == СДополнительнымиУсловиями)
			{
				return ВидыУсловийДоговоровВзаиморасчетов.СДополнительнымиУсловиями;
			}
			return ВидыУсловийДоговоровВзаиморасчетов.ПустаяСсылка;
		}
		public static byte[] Ключ(this ВидыУсловийДоговоровВзаиморасчетов Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ВидыУсловийДоговоровВзаиморасчетов Значение)
		{
			switch (Значение)
			{
				case ВидыУсловийДоговоровВзаиморасчетов.БезДополнительныхУсловий: return БезДополнительныхУсловий;
				case ВидыУсловийДоговоровВзаиморасчетов.СДополнительнымиУсловиями: return СДополнительнымиУсловиями;
			}
			return Guid.Empty;
		}
	}
}