
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	public enum ВидыОперацийПоступлениеДенежныхДокументов
	{
		ПустаяСсылка = - 1,
		ПоступлениеОтПоставщика = 0,//Поступление от поставщика
		ПоступлениеОтПодотчетногоЛица = 1,//Поступление от подотчетного лица
		ПрочееПоступление = 2,//Прочее поступление
	}
	public static partial class ВидыОперацийПоступлениеДенежныхДокументов_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid ПоступлениеОтПоставщика = new Guid("1815e685-eca0-9cae-497d-79c3c973781a");//Поступление от поставщика
		public static readonly Guid ПоступлениеОтПодотчетногоЛица = new Guid("413bd5a7-bee1-58db-46fe-caac58e151e7");//Поступление от подотчетного лица
		public static readonly Guid ПрочееПоступление = new Guid("93a56ba9-e730-6b94-4540-c65b676bfbde");//Прочее поступление
		public static ВидыОперацийПоступлениеДенежныхДокументов Получить(this ВидыОперацийПоступлениеДенежныхДокументов Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ВидыОперацийПоступлениеДенежныхДокументов Получить(this ВидыОперацийПоступлениеДенежныхДокументов Значение, Guid Ссылка)
		{
			if(Ссылка == ПоступлениеОтПоставщика)
			{
				return ВидыОперацийПоступлениеДенежныхДокументов.ПоступлениеОтПоставщика;
			}
			else if(Ссылка == ПоступлениеОтПодотчетногоЛица)
			{
				return ВидыОперацийПоступлениеДенежныхДокументов.ПоступлениеОтПодотчетногоЛица;
			}
			else if(Ссылка == ПрочееПоступление)
			{
				return ВидыОперацийПоступлениеДенежныхДокументов.ПрочееПоступление;
			}
			return ВидыОперацийПоступлениеДенежныхДокументов.ПустаяСсылка;
		}
		public static byte[] Ключ(this ВидыОперацийПоступлениеДенежныхДокументов Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ВидыОперацийПоступлениеДенежныхДокументов Значение)
		{
			switch (Значение)
			{
				case ВидыОперацийПоступлениеДенежныхДокументов.ПоступлениеОтПоставщика: return ПоступлениеОтПоставщика;
				case ВидыОперацийПоступлениеДенежныхДокументов.ПоступлениеОтПодотчетногоЛица: return ПоступлениеОтПодотчетногоЛица;
				case ВидыОперацийПоступлениеДенежныхДокументов.ПрочееПоступление: return ПрочееПоступление;
			}
			return Guid.Empty;
		}
	}
}