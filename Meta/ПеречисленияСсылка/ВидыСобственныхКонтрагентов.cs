
using System;
using V82;
using V82.ѕеречислени€;//—сылка;
namespace V82.ѕеречислени€//—сылка
{
		///<summary>
		///(”пр)
		///</summary>
	public enum ¬иды—обственных онтрагентов
	{
		ѕуста€—сылка = - 1,
		ќрганизаци€ = 0,
		‘изЋицо = 1,//‘из. лицо
	}
	public static partial class ¬иды—обственных онтрагентов_«начени€//:ѕеречисление—сылка
	{
		public static readonly Guid ќрганизаци€ = new Guid("41d32f95-0bc6-466b-4f04-5b147b2c0a64");
		public static readonly Guid ‘изЋицо = new Guid("64918ebb-97ad-58be-486a-72fce31bff22");//‘из. лицо
		public static ¬иды—обственных онтрагентов ѕолучить(this ¬иды—обственных онтрагентов «начение, byte[] —сылка)
		{
			return ѕолучить(«начение, new Guid(—сылка));
		}
		public static ¬иды—обственных онтрагентов ѕолучить(this ¬иды—обственных онтрагентов «начение, Guid —сылка)
		{
			if(—сылка == ќрганизаци€)
			{
				return ¬иды—обственных онтрагентов.ќрганизаци€;
			}
			else if(—сылка == ‘изЋицо)
			{
				return ¬иды—обственных онтрагентов.‘изЋицо;
			}
			return ¬иды—обственных онтрагентов.ѕуста€—сылка;
		}
		public static byte[]  люч(this ¬иды—обственных онтрагентов «начение)
		{
			return —сылка(«начение).ToByteArray();
		}
		public static Guid —сылка(this ¬иды—обственных онтрагентов «начение)
		{
			switch («начение)
			{
				case ¬иды—обственных онтрагентов.ќрганизаци€: return ќрганизаци€;
				case ¬иды—обственных онтрагентов.‘изЋицо: return ‘изЋицо;
			}
			return Guid.Empty;
		}
	}
}
