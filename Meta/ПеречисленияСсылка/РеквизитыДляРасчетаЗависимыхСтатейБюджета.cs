
using System;
using System.Runtime.Serialization;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	///<summary>
	///(Упр)
	///</summary>
	[DataContract]
	public enum РеквизитыДляРасчетаЗависимыхСтатейБюджета
	{
		[NonSerialized]
		ПустаяСсылка = - 1,
		[EnumMember(Value = "{\"Ссылка\":\"5a7254cd-1bed-4c7c-bce6-9f437722948a\", \"Представление\":\"Количество\"}")]
		Количество = 0,
		[EnumMember(Value = "{\"Ссылка\":\"632ca6f4-a39b-4a49-a4ec-2658f1f8ba8c\", \"Представление\":\"Сумма\"}")]
		Сумма = 1,
	}
	public static partial class РеквизитыДляРасчетаЗависимыхСтатейБюджета_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid Количество = new Guid("439fe6bc-2277-8a94-4c7c-1bed5a7254cd");
		public static readonly Guid Сумма = new Guid("5826eca4-f8f1-8cba-4a49-a39b632ca6f4");
		public static РеквизитыДляРасчетаЗависимыхСтатейБюджета Получить(this РеквизитыДляРасчетаЗависимыхСтатейБюджета Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static РеквизитыДляРасчетаЗависимыхСтатейБюджета Получить(this РеквизитыДляРасчетаЗависимыхСтатейБюджета Значение, Guid Ссылка)
		{
			if(Ссылка == Количество)
			{
				return РеквизитыДляРасчетаЗависимыхСтатейБюджета.Количество;
			}
			else if(Ссылка == Сумма)
			{
				return РеквизитыДляРасчетаЗависимыхСтатейБюджета.Сумма;
			}
			return РеквизитыДляРасчетаЗависимыхСтатейБюджета.ПустаяСсылка;
		}
		public static byte[] Ключ(this РеквизитыДляРасчетаЗависимыхСтатейБюджета Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this РеквизитыДляРасчетаЗависимыхСтатейБюджета Значение)
		{
			switch (Значение)
			{
				case РеквизитыДляРасчетаЗависимыхСтатейБюджета.Количество: return Количество;
				case РеквизитыДляРасчетаЗависимыхСтатейБюджета.Сумма: return Сумма;
			}
			return Guid.Empty;
		}
	}
}