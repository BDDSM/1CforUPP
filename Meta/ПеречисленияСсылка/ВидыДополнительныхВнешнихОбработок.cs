
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	public enum ВидыДополнительныхВнешнихОбработок
	{
		ПустаяСсылка = - 1,
		ПечатнаяФорма = 0,//Печатная форма
		ЗаполнениеТабличныхЧастей = 1,//Заполнение табличных частей
		Обработка = 2,
	///<summary>
	///Внешний отчет
	///</summary>
		Отчет = 3,
		ВнешняяОбработкаПодключаемаяКОтчету = 4,//Внешняя обработка, подключаемая к отчету
	}
	public static partial class ВидыДополнительныхВнешнихОбработок_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid ПечатнаяФорма = new Guid("0b793783-25ba-f273-4dc5-c4f6b0f80827");//Печатная форма
		public static readonly Guid ЗаполнениеТабличныхЧастей = new Guid("3cc2ae96-2d28-dc61-46ec-a9b3d5b7f602");//Заполнение табличных частей
		public static readonly Guid Обработка = new Guid("d5f77683-5292-ddd5-49bc-0d9c0561fea2");
		///<summary>
		///Внешний отчет
		///</summary>
		public static readonly Guid Отчет = new Guid("bb96838b-aa9d-0cc8-4dc8-f88707dd1313");
		public static readonly Guid ВнешняяОбработкаПодключаемаяКОтчету = new Guid("c7f0829a-ac66-b79c-4e75-eb8f22473a51");//Внешняя обработка, подключаемая к отчету
		public static ВидыДополнительныхВнешнихОбработок Получить(this ВидыДополнительныхВнешнихОбработок Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ВидыДополнительныхВнешнихОбработок Получить(this ВидыДополнительныхВнешнихОбработок Значение, Guid Ссылка)
		{
			if(Ссылка == ПечатнаяФорма)
			{
				return ВидыДополнительныхВнешнихОбработок.ПечатнаяФорма;
			}
			else if(Ссылка == ЗаполнениеТабличныхЧастей)
			{
				return ВидыДополнительныхВнешнихОбработок.ЗаполнениеТабличныхЧастей;
			}
			else if(Ссылка == Обработка)
			{
				return ВидыДополнительныхВнешнихОбработок.Обработка;
			}
			else if(Ссылка == Отчет)
			{
				return ВидыДополнительныхВнешнихОбработок.Отчет;
			}
			else if(Ссылка == ВнешняяОбработкаПодключаемаяКОтчету)
			{
				return ВидыДополнительныхВнешнихОбработок.ВнешняяОбработкаПодключаемаяКОтчету;
			}
			return ВидыДополнительныхВнешнихОбработок.ПустаяСсылка;
		}
		public static byte[] Ключ(this ВидыДополнительныхВнешнихОбработок Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ВидыДополнительныхВнешнихОбработок Значение)
		{
			switch (Значение)
			{
				case ВидыДополнительныхВнешнихОбработок.ПечатнаяФорма: return ПечатнаяФорма;
				case ВидыДополнительныхВнешнихОбработок.ЗаполнениеТабличныхЧастей: return ЗаполнениеТабличныхЧастей;
				case ВидыДополнительныхВнешнихОбработок.Обработка: return Обработка;
				case ВидыДополнительныхВнешнихОбработок.Отчет: return Отчет;
				case ВидыДополнительныхВнешнихОбработок.ВнешняяОбработкаПодключаемаяКОтчету: return ВнешняяОбработкаПодключаемаяКОтчету;
			}
			return Guid.Empty;
		}
	}
}