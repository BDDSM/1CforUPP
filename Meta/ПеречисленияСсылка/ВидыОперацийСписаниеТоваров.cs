
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
		///<summary>
		///(Общ)
		///</summary>
	public enum ВидыОперацийСписаниеТоваров
	{
		ПустаяСсылка = - 1,
		ТоварыПродукция = 0,//товары, продукция
		Оборудование = 1,
	}
	public static partial class ВидыОперацийСписаниеТоваров_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid ТоварыПродукция = new Guid("8f56e39a-76d8-e521-48c4-4e8eb140ba26");//товары, продукция
		public static readonly Guid Оборудование = new Guid("b9024cab-1828-6bf0-4eef-a490bfd14844");
		public static ВидыОперацийСписаниеТоваров Получить(this ВидыОперацийСписаниеТоваров Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ВидыОперацийСписаниеТоваров Получить(this ВидыОперацийСписаниеТоваров Значение, Guid Ссылка)
		{
			if(Ссылка == ТоварыПродукция)
			{
				return ВидыОперацийСписаниеТоваров.ТоварыПродукция;
			}
			else if(Ссылка == Оборудование)
			{
				return ВидыОперацийСписаниеТоваров.Оборудование;
			}
			return ВидыОперацийСписаниеТоваров.ПустаяСсылка;
		}
		public static byte[] Ключ(this ВидыОперацийСписаниеТоваров Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ВидыОперацийСписаниеТоваров Значение)
		{
			switch (Значение)
			{
				case ВидыОперацийСписаниеТоваров.ТоварыПродукция: return ТоварыПродукция;
				case ВидыОперацийСписаниеТоваров.Оборудование: return Оборудование;
			}
			return Guid.Empty;
		}
	}
}
