
using System;
using System.Runtime.Serialization;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	[DataContract]
	public enum СпособыРасчетаСуммыПоказателей
	{
		[NonSerialized]
		ПустаяСсылка = - 1,
		[EnumMember(Value = "{\"Ссылка\":\"a7d742a1-6df8-4acc-87ec-e87fdd3f2447\", \"Представление\":\"ПоВсемСотрудникам\"}")]
		ПоВсемСотрудникам = 0,//По всем сотрудникам
		[EnumMember(Value = "{\"Ссылка\":\"9c0c5ebd-2d25-403b-bb4d-67e2ef60fd9d\", \"Представление\":\"ПоОрганизации\"}")]
		ПоОрганизации = 1,//По всем сотрудникам организации
	}
	public static partial class СпособыРасчетаСуммыПоказателей_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid ПоВсемСотрудникам = new Guid("7fe8ec87-3fdd-4724-4acc-6df8a7d742a1");//По всем сотрудникам
		public static readonly Guid ПоОрганизации = new Guid("e2674dbb-60ef-9dfd-403b-2d259c0c5ebd");//По всем сотрудникам организации
		public static СпособыРасчетаСуммыПоказателей Получить(this СпособыРасчетаСуммыПоказателей Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static СпособыРасчетаСуммыПоказателей Получить(this СпособыРасчетаСуммыПоказателей Значение, Guid Ссылка)
		{
			if(Ссылка == ПоВсемСотрудникам)
			{
				return СпособыРасчетаСуммыПоказателей.ПоВсемСотрудникам;
			}
			else if(Ссылка == ПоОрганизации)
			{
				return СпособыРасчетаСуммыПоказателей.ПоОрганизации;
			}
			return СпособыРасчетаСуммыПоказателей.ПустаяСсылка;
		}
		public static byte[] Ключ(this СпособыРасчетаСуммыПоказателей Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this СпособыРасчетаСуммыПоказателей Значение)
		{
			switch (Значение)
			{
				case СпособыРасчетаСуммыПоказателей.ПоВсемСотрудникам: return ПоВсемСотрудникам;
				case СпособыРасчетаСуммыПоказателей.ПоОрганизации: return ПоОрганизации;
			}
			return Guid.Empty;
		}
	}
}