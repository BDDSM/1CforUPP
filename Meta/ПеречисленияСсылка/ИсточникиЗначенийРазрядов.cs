
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	public enum ИсточникиЗначенийРазрядов
	{
		ПустаяСсылка = - 1,
		Значение = 0,
		Организация = 1,
		Подразделение = 2,
		НоменклатурнаяГруппа = 3,//Номенклатурная группа
		Номенклатура = 4,
		УказываетсяПриВыпуске = 5,//Указывается при выпуске
		Счетчик = 6,
		ДатаВремя = 7,//Дата / время
		Разделитель = 8,
	}
	public static partial class ИсточникиЗначенийРазрядов_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid Значение = new Guid("daea65be-4305-b339-41de-8a53656b56df");
		public static readonly Guid Организация = new Guid("5b0b1d81-d08d-b00c-472e-b77ea418f74c");
		public static readonly Guid Подразделение = new Guid("2d717e84-d2fd-eca4-4216-bf16af33a893");
		public static readonly Guid НоменклатурнаяГруппа = new Guid("399eb6a8-ed56-a74c-4396-13a8bc098ef5");//Номенклатурная группа
		public static readonly Guid Номенклатура = new Guid("d7223c84-2821-8a4c-4d47-c1613dbe2dd0");
		public static readonly Guid УказываетсяПриВыпуске = new Guid("ac1a9ca9-12ae-864e-4036-03b9889258cb");//Указывается при выпуске
		public static readonly Guid Счетчик = new Guid("5dbc5fbb-977f-c541-4eda-c228927947dd");
		public static readonly Guid ДатаВремя = new Guid("c257739f-707d-e454-42de-fd0b66ae0522");//Дата / время
		public static readonly Guid Разделитель = new Guid("abb1e0a4-a23e-c95f-4bd8-70ff9cab1321");
		public static ИсточникиЗначенийРазрядов Получить(this ИсточникиЗначенийРазрядов Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ИсточникиЗначенийРазрядов Получить(this ИсточникиЗначенийРазрядов Значение, Guid Ссылка)
		{
			if(Ссылка == Значение)
			{
				return ИсточникиЗначенийРазрядов.Значение;
			}
			else if(Ссылка == Организация)
			{
				return ИсточникиЗначенийРазрядов.Организация;
			}
			else if(Ссылка == Подразделение)
			{
				return ИсточникиЗначенийРазрядов.Подразделение;
			}
			else if(Ссылка == НоменклатурнаяГруппа)
			{
				return ИсточникиЗначенийРазрядов.НоменклатурнаяГруппа;
			}
			else if(Ссылка == Номенклатура)
			{
				return ИсточникиЗначенийРазрядов.Номенклатура;
			}
			else if(Ссылка == УказываетсяПриВыпуске)
			{
				return ИсточникиЗначенийРазрядов.УказываетсяПриВыпуске;
			}
			else if(Ссылка == Счетчик)
			{
				return ИсточникиЗначенийРазрядов.Счетчик;
			}
			else if(Ссылка == ДатаВремя)
			{
				return ИсточникиЗначенийРазрядов.ДатаВремя;
			}
			else if(Ссылка == Разделитель)
			{
				return ИсточникиЗначенийРазрядов.Разделитель;
			}
			return ИсточникиЗначенийРазрядов.ПустаяСсылка;
		}
		public static byte[] Ключ(this ИсточникиЗначенийРазрядов Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ИсточникиЗначенийРазрядов Значение)
		{
			switch (Значение)
			{
				case ИсточникиЗначенийРазрядов.Значение: return Значение;
				case ИсточникиЗначенийРазрядов.Организация: return Организация;
				case ИсточникиЗначенийРазрядов.Подразделение: return Подразделение;
				case ИсточникиЗначенийРазрядов.НоменклатурнаяГруппа: return НоменклатурнаяГруппа;
				case ИсточникиЗначенийРазрядов.Номенклатура: return Номенклатура;
				case ИсточникиЗначенийРазрядов.УказываетсяПриВыпуске: return УказываетсяПриВыпуске;
				case ИсточникиЗначенийРазрядов.Счетчик: return Счетчик;
				case ИсточникиЗначенийРазрядов.ДатаВремя: return ДатаВремя;
				case ИсточникиЗначенийРазрядов.Разделитель: return Разделитель;
			}
			return Guid.Empty;
		}
	}
}
