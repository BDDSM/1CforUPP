
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	public enum РазделителиРазрядовСерийногоНомера
	{
		ПустаяСсылка = - 1,
		Точка = 0,//"."
		Запятая = 1,//","
		Двоеточие = 2,//":"
		ТочкаСЗапятой = 3,//";"
		Пробел = 4,//" "
		Подчеркивание = 5,//"_"
		Тире = 6,//"-"
		КосаяЧерта = 7,//"/"
		ОбратнаяКосаяЧерта = 8,//"\"
	}
	public static partial class РазделителиРазрядовСерийногоНомера_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid Точка = new Guid("25b34896-679e-c88e-462a-a46720d74add");//"."
		public static readonly Guid Запятая = new Guid("34d3c3be-2f56-d8d2-40e1-1aee39483307");//","
		public static readonly Guid Двоеточие = new Guid("f46a4686-f899-c2c0-4086-4c63a231e0bc");//":"
		public static readonly Guid ТочкаСЗапятой = new Guid("eabc879b-e76d-b15a-4706-df8915bbbb75");//";"
		public static readonly Guid Пробел = new Guid("73e181b5-c6b6-ef48-4802-0339c93ffd67");//" "
		public static readonly Guid Подчеркивание = new Guid("a4e27eb7-115b-c4d4-4d9e-8dccda9490da");//"_"
		public static readonly Guid Тире = new Guid("ca34fbb2-14da-bb02-4e63-debaeaafacf6");//"-"
		public static readonly Guid КосаяЧерта = new Guid("7151ac89-5e68-c88e-4c21-4f882b66fd99");//"/"
		public static readonly Guid ОбратнаяКосаяЧерта = new Guid("32a35f8f-42dc-e8dc-41a0-802348a35259");//"\"
		public static РазделителиРазрядовСерийногоНомера Получить(this РазделителиРазрядовСерийногоНомера Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static РазделителиРазрядовСерийногоНомера Получить(this РазделителиРазрядовСерийногоНомера Значение, Guid Ссылка)
		{
			if(Ссылка == Точка)
			{
				return РазделителиРазрядовСерийногоНомера.Точка;
			}
			else if(Ссылка == Запятая)
			{
				return РазделителиРазрядовСерийногоНомера.Запятая;
			}
			else if(Ссылка == Двоеточие)
			{
				return РазделителиРазрядовСерийногоНомера.Двоеточие;
			}
			else if(Ссылка == ТочкаСЗапятой)
			{
				return РазделителиРазрядовСерийногоНомера.ТочкаСЗапятой;
			}
			else if(Ссылка == Пробел)
			{
				return РазделителиРазрядовСерийногоНомера.Пробел;
			}
			else if(Ссылка == Подчеркивание)
			{
				return РазделителиРазрядовСерийногоНомера.Подчеркивание;
			}
			else if(Ссылка == Тире)
			{
				return РазделителиРазрядовСерийногоНомера.Тире;
			}
			else if(Ссылка == КосаяЧерта)
			{
				return РазделителиРазрядовСерийногоНомера.КосаяЧерта;
			}
			else if(Ссылка == ОбратнаяКосаяЧерта)
			{
				return РазделителиРазрядовСерийногоНомера.ОбратнаяКосаяЧерта;
			}
			return РазделителиРазрядовСерийногоНомера.ПустаяСсылка;
		}
		public static byte[] Ключ(this РазделителиРазрядовСерийногоНомера Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this РазделителиРазрядовСерийногоНомера Значение)
		{
			switch (Значение)
			{
				case РазделителиРазрядовСерийногоНомера.Точка: return Точка;
				case РазделителиРазрядовСерийногоНомера.Запятая: return Запятая;
				case РазделителиРазрядовСерийногоНомера.Двоеточие: return Двоеточие;
				case РазделителиРазрядовСерийногоНомера.ТочкаСЗапятой: return ТочкаСЗапятой;
				case РазделителиРазрядовСерийногоНомера.Пробел: return Пробел;
				case РазделителиРазрядовСерийногоНомера.Подчеркивание: return Подчеркивание;
				case РазделителиРазрядовСерийногоНомера.Тире: return Тире;
				case РазделителиРазрядовСерийногоНомера.КосаяЧерта: return КосаяЧерта;
				case РазделителиРазрядовСерийногоНомера.ОбратнаяКосаяЧерта: return ОбратнаяКосаяЧерта;
			}
			return Guid.Empty;
		}
	}
}
