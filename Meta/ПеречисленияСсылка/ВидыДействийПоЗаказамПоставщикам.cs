
using System;
using System.Runtime.Serialization;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	///<summary>
	///(Упр)
	///</summary>
	[DataContract]
	public enum ВидыДействийПоЗаказамПоставщикам
	{
		[NonSerialized]
		ПустаяСсылка = - 1,
		[EnumMember(Value = "{\"Ссылка\":\"9ea43b4e-43c6-4122-9a83-1286470cbb73\", \"Представление\":\"ПоступлениеПоЗаказу\"}")]
		ПоступлениеПоЗаказу = 0,//Поступление по заказу
		[EnumMember(Value = "{\"Ссылка\":\"9cc2be09-6525-4106-a25c-01dae7d650a7\", \"Представление\":\"ОплатаПоЗаказу\"}")]
		ОплатаПоЗаказу = 1,//Оплата по заказу
	}
	public static partial class ВидыДействийПоЗаказамПоставщикам_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid ПоступлениеПоЗаказу = new Guid("8612839a-0c47-73bb-4122-43c69ea43b4e");//Поступление по заказу
		public static readonly Guid ОплатаПоЗаказу = new Guid("da015ca2-d6e7-a750-4106-65259cc2be09");//Оплата по заказу
		public static ВидыДействийПоЗаказамПоставщикам Получить(this ВидыДействийПоЗаказамПоставщикам Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ВидыДействийПоЗаказамПоставщикам Получить(this ВидыДействийПоЗаказамПоставщикам Значение, Guid Ссылка)
		{
			if(Ссылка == ПоступлениеПоЗаказу)
			{
				return ВидыДействийПоЗаказамПоставщикам.ПоступлениеПоЗаказу;
			}
			else if(Ссылка == ОплатаПоЗаказу)
			{
				return ВидыДействийПоЗаказамПоставщикам.ОплатаПоЗаказу;
			}
			return ВидыДействийПоЗаказамПоставщикам.ПустаяСсылка;
		}
		public static byte[] Ключ(this ВидыДействийПоЗаказамПоставщикам Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ВидыДействийПоЗаказамПоставщикам Значение)
		{
			switch (Значение)
			{
				case ВидыДействийПоЗаказамПоставщикам.ПоступлениеПоЗаказу: return ПоступлениеПоЗаказу;
				case ВидыДействийПоЗаказамПоставщикам.ОплатаПоЗаказу: return ОплатаПоЗаказу;
			}
			return Guid.Empty;
		}
	}
}