
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	public enum ТООшибкиСШК
	{
		ПустаяСсылка = - 1,
	///<summary>
	///Необходимо убедиться, что данный штрихкод зарегистрирован в информационной базе и может быть обработан в данной форме.
	///</summary>
		ОшибкаНеизвестныйШтрихкод = 0,//Считанный штрихкод не может быть обработан
	}
	public static partial class ТООшибкиСШК_Значения//:ПеречислениеСсылка
	{
		///<summary>
		///Необходимо убедиться, что данный штрихкод зарегистрирован в информационной базе и может быть обработан в данной форме.
		///</summary>
		public static readonly Guid ОшибкаНеизвестныйШтрихкод = new Guid("8a581bab-b5b8-941b-4414-2baabe56fdc4");//Считанный штрихкод не может быть обработан
		public static ТООшибкиСШК Получить(this ТООшибкиСШК Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ТООшибкиСШК Получить(this ТООшибкиСШК Значение, Guid Ссылка)
		{
			if(Ссылка == ОшибкаНеизвестныйШтрихкод)
			{
				return ТООшибкиСШК.ОшибкаНеизвестныйШтрихкод;
			}
			return ТООшибкиСШК.ПустаяСсылка;
		}
		public static byte[] Ключ(this ТООшибкиСШК Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ТООшибкиСШК Значение)
		{
			switch (Значение)
			{
				case ТООшибкиСШК.ОшибкаНеизвестныйШтрихкод: return ОшибкаНеизвестныйШтрихкод;
			}
			return Guid.Empty;
		}
	}
}