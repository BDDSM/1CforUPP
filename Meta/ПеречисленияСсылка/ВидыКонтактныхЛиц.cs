
using System;
using V82;
using V82.ѕеречислени€;//—сылка;
namespace V82.ѕеречислени€//—сылка
{
	public enum ¬иды онтактныхЋиц
	{
		ѕуста€—сылка = - 1,
		 онтактноеЋицо онтрагента = 0,// онтактное лицо контрагента
		ѕрочее онтактноеЋицо = 1,//ѕрочее контактное лицо
		Ћичный онтакт = 2,//Ћичный контакт
	}
	public static partial class ¬иды онтактныхЋиц_«начени€//:ѕеречисление—сылка
	{
		public static readonly Guid  онтактноеЋицо онтрагента = new Guid("2482eca6-3511-1b4b-4df1-efa77d07649c");// онтактное лицо контрагента
		public static readonly Guid ѕрочее онтактноеЋицо = new Guid("37ce0795-01eb-f177-4ab4-ac8de9f6b899");//ѕрочее контактное лицо
		public static readonly Guid Ћичный онтакт = new Guid("0f3f5392-ce6d-ebdb-4895-1e610106b669");//Ћичный контакт
		public static ¬иды онтактныхЋиц ѕолучить(this ¬иды онтактныхЋиц «начение, byte[] —сылка)
		{
			return ѕолучить(«начение, new Guid(—сылка));
		}
		public static ¬иды онтактныхЋиц ѕолучить(this ¬иды онтактныхЋиц «начение, Guid —сылка)
		{
			if(—сылка ==  онтактноеЋицо онтрагента)
			{
				return ¬иды онтактныхЋиц. онтактноеЋицо онтрагента;
			}
			else if(—сылка == ѕрочее онтактноеЋицо)
			{
				return ¬иды онтактныхЋиц.ѕрочее онтактноеЋицо;
			}
			else if(—сылка == Ћичный онтакт)
			{
				return ¬иды онтактныхЋиц.Ћичный онтакт;
			}
			return ¬иды онтактныхЋиц.ѕуста€—сылка;
		}
		public static byte[]  люч(this ¬иды онтактныхЋиц «начение)
		{
			return —сылка(«начение).ToByteArray();
		}
		public static Guid —сылка(this ¬иды онтактныхЋиц «начение)
		{
			switch («начение)
			{
				case ¬иды онтактныхЋиц. онтактноеЋицо онтрагента: return  онтактноеЋицо онтрагента;
				case ¬иды онтактныхЋиц.ѕрочее онтактноеЋицо: return ѕрочее онтактноеЋицо;
				case ¬иды онтактныхЋиц.Ћичный онтакт: return Ћичный онтакт;
			}
			return Guid.Empty;
		}
	}
}
