
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	public enum ТООшибкиСМК
	{
		ПустаяСсылка = - 1,
	///<summary>
	///Необходимо убедиться, что данная карта зарегистрирована в информационной базе и может быть обработана в данной форме.
	///</summary>
		ОшибкаНеизвестнаяКарта = 0,//Считанная карта не может быть обработана
	}
	public static partial class ТООшибкиСМК_Значения//:ПеречислениеСсылка
	{
		///<summary>
		///Необходимо убедиться, что данная карта зарегистрирована в информационной базе и может быть обработана в данной форме.
		///</summary>
		public static readonly Guid ОшибкаНеизвестнаяКарта = new Guid("27ea97ae-aff2-d058-4a5f-a593357f5ab4");//Считанная карта не может быть обработана
		public static ТООшибкиСМК Получить(this ТООшибкиСМК Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ТООшибкиСМК Получить(this ТООшибкиСМК Значение, Guid Ссылка)
		{
			if(Ссылка == ОшибкаНеизвестнаяКарта)
			{
				return ТООшибкиСМК.ОшибкаНеизвестнаяКарта;
			}
			return ТООшибкиСМК.ПустаяСсылка;
		}
		public static byte[] Ключ(this ТООшибкиСМК Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ТООшибкиСМК Значение)
		{
			switch (Значение)
			{
				case ТООшибкиСМК.ОшибкаНеизвестнаяКарта: return ОшибкаНеизвестнаяКарта;
			}
			return Guid.Empty;
		}
	}
}
