
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
		///<summary>
		///(Упр)
		///</summary>
	public enum ВидыОперацийЗаявкиНаРасходование
	{
		ПустаяСсылка = - 1,
		ОплатаПоставщику = 0,//оплата поставщику
		ВозвратДенежныхСредствПокупателю = 1,//возврат покупателю
		ВыдачаДенежныхСредствПодотчетнику = 2,//выдача подотчетному лицу
		ВыдачаДенежныхСредствКассеККМ = 3,//выдача в кассу ККМ
		РасчетыПоКредитамИЗаймамСКонтрагентами = 4,//расчеты по кредитам и займам с контрагентами
		РасчетыПоКредитамИЗаймамСРаботниками = 5,//расчеты по кредитам и займам с работниками
	///<summary>
	///(Общ)
	///</summary>
		ПеречислениеНалога = 6,//перечисление налога
	///<summary>
	///(Общ)
	///</summary>
		ПеречислениеЗП = 7,//выплата заработной платы
		ПрочийРасходДенежныхСредств = 8,//прочий расход
		ПрочиеРасчетыСКонтрагентами = 9,//прочие расчеты с контрагентами
	}
	public static partial class ВидыОперацийЗаявкиНаРасходование_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid ОплатаПоставщику = new Guid("db125094-3652-79a6-4d64-b72cea38777a");//оплата поставщику
		public static readonly Guid ВозвратДенежныхСредствПокупателю = new Guid("07881cbe-a74c-ad24-4978-2e15f3906bdf");//возврат покупателю
		public static readonly Guid ВыдачаДенежныхСредствПодотчетнику = new Guid("f3138084-c967-9bb1-40be-684494b3b20c");//выдача подотчетному лицу
		public static readonly Guid ВыдачаДенежныхСредствКассеККМ = new Guid("425f2197-ac7c-bc63-4751-7d4ebcff634a");//выдача в кассу ККМ
		public static readonly Guid РасчетыПоКредитамИЗаймамСКонтрагентами = new Guid("83011ea7-90be-2abc-48d2-59193465f2bc");//расчеты по кредитам и займам с контрагентами
		public static readonly Guid РасчетыПоКредитамИЗаймамСРаботниками = new Guid("e5538786-3593-44ca-41ae-6b3153443006");//расчеты по кредитам и займам с работниками
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid ПеречислениеНалога = new Guid("59d04d88-8ca0-ac69-408f-84eec834073a");//перечисление налога
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid ПеречислениеЗП = new Guid("ea6f0d9a-3da4-a2e5-4b9a-9c5b201eb1e7");//выплата заработной платы
		public static readonly Guid ПрочийРасходДенежныхСредств = new Guid("80128b9b-b064-14cf-4838-d93b79dae7ba");//прочий расход
		public static readonly Guid ПрочиеРасчетыСКонтрагентами = new Guid("d398b78e-e2d1-1d00-48b6-dded8786a296");//прочие расчеты с контрагентами
		public static ВидыОперацийЗаявкиНаРасходование Получить(this ВидыОперацийЗаявкиНаРасходование Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ВидыОперацийЗаявкиНаРасходование Получить(this ВидыОперацийЗаявкиНаРасходование Значение, Guid Ссылка)
		{
			if(Ссылка == ОплатаПоставщику)
			{
				return ВидыОперацийЗаявкиНаРасходование.ОплатаПоставщику;
			}
			else if(Ссылка == ВозвратДенежныхСредствПокупателю)
			{
				return ВидыОперацийЗаявкиНаРасходование.ВозвратДенежныхСредствПокупателю;
			}
			else if(Ссылка == ВыдачаДенежныхСредствПодотчетнику)
			{
				return ВидыОперацийЗаявкиНаРасходование.ВыдачаДенежныхСредствПодотчетнику;
			}
			else if(Ссылка == ВыдачаДенежныхСредствКассеККМ)
			{
				return ВидыОперацийЗаявкиНаРасходование.ВыдачаДенежныхСредствКассеККМ;
			}
			else if(Ссылка == РасчетыПоКредитамИЗаймамСКонтрагентами)
			{
				return ВидыОперацийЗаявкиНаРасходование.РасчетыПоКредитамИЗаймамСКонтрагентами;
			}
			else if(Ссылка == РасчетыПоКредитамИЗаймамСРаботниками)
			{
				return ВидыОперацийЗаявкиНаРасходование.РасчетыПоКредитамИЗаймамСРаботниками;
			}
			else if(Ссылка == ПеречислениеНалога)
			{
				return ВидыОперацийЗаявкиНаРасходование.ПеречислениеНалога;
			}
			else if(Ссылка == ПеречислениеЗП)
			{
				return ВидыОперацийЗаявкиНаРасходование.ПеречислениеЗП;
			}
			else if(Ссылка == ПрочийРасходДенежныхСредств)
			{
				return ВидыОперацийЗаявкиНаРасходование.ПрочийРасходДенежныхСредств;
			}
			else if(Ссылка == ПрочиеРасчетыСКонтрагентами)
			{
				return ВидыОперацийЗаявкиНаРасходование.ПрочиеРасчетыСКонтрагентами;
			}
			return ВидыОперацийЗаявкиНаРасходование.ПустаяСсылка;
		}
		public static byte[] Ключ(this ВидыОперацийЗаявкиНаРасходование Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ВидыОперацийЗаявкиНаРасходование Значение)
		{
			switch (Значение)
			{
				case ВидыОперацийЗаявкиНаРасходование.ОплатаПоставщику: return ОплатаПоставщику;
				case ВидыОперацийЗаявкиНаРасходование.ВозвратДенежныхСредствПокупателю: return ВозвратДенежныхСредствПокупателю;
				case ВидыОперацийЗаявкиНаРасходование.ВыдачаДенежныхСредствПодотчетнику: return ВыдачаДенежныхСредствПодотчетнику;
				case ВидыОперацийЗаявкиНаРасходование.ВыдачаДенежныхСредствКассеККМ: return ВыдачаДенежныхСредствКассеККМ;
				case ВидыОперацийЗаявкиНаРасходование.РасчетыПоКредитамИЗаймамСКонтрагентами: return РасчетыПоКредитамИЗаймамСКонтрагентами;
				case ВидыОперацийЗаявкиНаРасходование.РасчетыПоКредитамИЗаймамСРаботниками: return РасчетыПоКредитамИЗаймамСРаботниками;
				case ВидыОперацийЗаявкиНаРасходование.ПеречислениеНалога: return ПеречислениеНалога;
				case ВидыОперацийЗаявкиНаРасходование.ПеречислениеЗП: return ПеречислениеЗП;
				case ВидыОперацийЗаявкиНаРасходование.ПрочийРасходДенежныхСредств: return ПрочийРасходДенежныхСредств;
				case ВидыОперацийЗаявкиНаРасходование.ПрочиеРасчетыСКонтрагентами: return ПрочиеРасчетыСКонтрагентами;
			}
			return Guid.Empty;
		}
	}
}
