
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	public enum РежимыИспользованияРасширеннойАналитики
	{
		ПустаяСсылка = - 1,
		РегламентированныйУчет = 0,//Регламентированный учет
		РегламентированныйУчетСДополнительнойАналитикой = 1,//Регламентированный учет с дополнительной аналитикой
		УправленческийИРегламентированныйУчет = 2,//Управленческий и регламентированный учет
	}
	public static partial class РежимыИспользованияРасширеннойАналитики_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid РегламентированныйУчет = new Guid("64ad11aa-14cf-646a-45ba-308b8f435249");//Регламентированный учет
		public static readonly Guid РегламентированныйУчетСДополнительнойАналитикой = new Guid("e6e20c8e-0869-9427-46c6-424ca1bfa5cc");//Регламентированный учет с дополнительной аналитикой
		public static readonly Guid УправленческийИРегламентированныйУчет = new Guid("7efad496-b4d8-6336-4403-8ff6ea6ecd9e");//Управленческий и регламентированный учет
		public static РежимыИспользованияРасширеннойАналитики Получить(this РежимыИспользованияРасширеннойАналитики Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static РежимыИспользованияРасширеннойАналитики Получить(this РежимыИспользованияРасширеннойАналитики Значение, Guid Ссылка)
		{
			if(Ссылка == РегламентированныйУчет)
			{
				return РежимыИспользованияРасширеннойАналитики.РегламентированныйУчет;
			}
			else if(Ссылка == РегламентированныйУчетСДополнительнойАналитикой)
			{
				return РежимыИспользованияРасширеннойАналитики.РегламентированныйУчетСДополнительнойАналитикой;
			}
			else if(Ссылка == УправленческийИРегламентированныйУчет)
			{
				return РежимыИспользованияРасширеннойАналитики.УправленческийИРегламентированныйУчет;
			}
			return РежимыИспользованияРасширеннойАналитики.ПустаяСсылка;
		}
		public static byte[] Ключ(this РежимыИспользованияРасширеннойАналитики Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this РежимыИспользованияРасширеннойАналитики Значение)
		{
			switch (Значение)
			{
				case РежимыИспользованияРасширеннойАналитики.РегламентированныйУчет: return РегламентированныйУчет;
				case РежимыИспользованияРасширеннойАналитики.РегламентированныйУчетСДополнительнойАналитикой: return РегламентированныйУчетСДополнительнойАналитикой;
				case РежимыИспользованияРасширеннойАналитики.УправленческийИРегламентированныйУчет: return УправленческийИРегламентированныйУчет;
			}
			return Guid.Empty;
		}
	}
}