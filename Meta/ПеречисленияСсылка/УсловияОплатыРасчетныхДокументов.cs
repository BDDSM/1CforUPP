
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
		///<summary>
		///(Общ)
		///</summary>
	public enum УсловияОплатыРасчетныхДокументов
	{
		ПустаяСсылка = - 1,
	///<summary>
	///(Общ)
	///</summary>
		САкцептом = 0,//С акцептом
	///<summary>
	///(Общ)
	///</summary>
		БезАкцепта = 1,//Без акцепта
	}
	public static partial class УсловияОплатыРасчетныхДокументов_Значения//:ПеречислениеСсылка
	{
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid САкцептом = new Guid("53ab1eb5-17a3-9695-4064-0b079e3d9385");//С акцептом
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid БезАкцепта = new Guid("c183d59a-14e2-fb85-4d57-70f56e69cac4");//Без акцепта
		public static УсловияОплатыРасчетныхДокументов Получить(this УсловияОплатыРасчетныхДокументов Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static УсловияОплатыРасчетныхДокументов Получить(this УсловияОплатыРасчетныхДокументов Значение, Guid Ссылка)
		{
			if(Ссылка == САкцептом)
			{
				return УсловияОплатыРасчетныхДокументов.САкцептом;
			}
			else if(Ссылка == БезАкцепта)
			{
				return УсловияОплатыРасчетныхДокументов.БезАкцепта;
			}
			return УсловияОплатыРасчетныхДокументов.ПустаяСсылка;
		}
		public static byte[] Ключ(this УсловияОплатыРасчетныхДокументов Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this УсловияОплатыРасчетныхДокументов Значение)
		{
			switch (Значение)
			{
				case УсловияОплатыРасчетныхДокументов.САкцептом: return САкцептом;
				case УсловияОплатыРасчетныхДокументов.БезАкцепта: return БезАкцепта;
			}
			return Guid.Empty;
		}
	}
}
