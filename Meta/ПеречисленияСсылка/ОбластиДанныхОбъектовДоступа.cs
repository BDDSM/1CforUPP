
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	public enum ОбластиДанныхОбъектовДоступа
	{
		ПустаяСсылка = - 1,
		ФизическиеЛицаСписок = 0,//Физические лица (список)
		ФизическиеЛицаДанные = 1,//Физические лица (данные)
		КонтрагентыСписок = 2,//Контрагенты (список)
		КонтрагентыДанные = 3,//Контрагенты (данные)
		КонтрагентыДопИнформация = 4,//Контрагенты (доп. информация)
		ЦеныНоменклатуры = 5,//Цены номенклатуры
		ЦеныНоменклатурыКонтрагентов = 6,//Цены номенклатуры контрагентов
	}
	public static partial class ОбластиДанныхОбъектовДоступа_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid ФизическиеЛицаСписок = new Guid("9720e7b2-ee6f-9dfe-41ef-fb19c2592f79");//Физические лица (список)
		public static readonly Guid ФизическиеЛицаДанные = new Guid("efe62194-548c-6ddd-4f9f-4776265938b3");//Физические лица (данные)
		public static readonly Guid КонтрагентыСписок = new Guid("668bbd86-acb4-69a8-4f93-383a6d272adb");//Контрагенты (список)
		public static readonly Guid КонтрагентыДанные = new Guid("6cf2278a-51ae-cb27-43a9-011e0c63721d");//Контрагенты (данные)
		public static readonly Guid КонтрагентыДопИнформация = new Guid("c6e15e94-cc29-3a68-48f0-6881d44a773a");//Контрагенты (доп. информация)
		public static readonly Guid ЦеныНоменклатуры = new Guid("46fd5ab9-4ce7-99ee-4559-a56530b34671");//Цены номенклатуры
		public static readonly Guid ЦеныНоменклатурыКонтрагентов = new Guid("bf7825a6-2138-99cc-4dee-740a73b78ac7");//Цены номенклатуры контрагентов
		public static ОбластиДанныхОбъектовДоступа Получить(this ОбластиДанныхОбъектовДоступа Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ОбластиДанныхОбъектовДоступа Получить(this ОбластиДанныхОбъектовДоступа Значение, Guid Ссылка)
		{
			if(Ссылка == ФизическиеЛицаСписок)
			{
				return ОбластиДанныхОбъектовДоступа.ФизическиеЛицаСписок;
			}
			else if(Ссылка == ФизическиеЛицаДанные)
			{
				return ОбластиДанныхОбъектовДоступа.ФизическиеЛицаДанные;
			}
			else if(Ссылка == КонтрагентыСписок)
			{
				return ОбластиДанныхОбъектовДоступа.КонтрагентыСписок;
			}
			else if(Ссылка == КонтрагентыДанные)
			{
				return ОбластиДанныхОбъектовДоступа.КонтрагентыДанные;
			}
			else if(Ссылка == КонтрагентыДопИнформация)
			{
				return ОбластиДанныхОбъектовДоступа.КонтрагентыДопИнформация;
			}
			else if(Ссылка == ЦеныНоменклатуры)
			{
				return ОбластиДанныхОбъектовДоступа.ЦеныНоменклатуры;
			}
			else if(Ссылка == ЦеныНоменклатурыКонтрагентов)
			{
				return ОбластиДанныхОбъектовДоступа.ЦеныНоменклатурыКонтрагентов;
			}
			return ОбластиДанныхОбъектовДоступа.ПустаяСсылка;
		}
		public static byte[] Ключ(this ОбластиДанныхОбъектовДоступа Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ОбластиДанныхОбъектовДоступа Значение)
		{
			switch (Значение)
			{
				case ОбластиДанныхОбъектовДоступа.ФизическиеЛицаСписок: return ФизическиеЛицаСписок;
				case ОбластиДанныхОбъектовДоступа.ФизическиеЛицаДанные: return ФизическиеЛицаДанные;
				case ОбластиДанныхОбъектовДоступа.КонтрагентыСписок: return КонтрагентыСписок;
				case ОбластиДанныхОбъектовДоступа.КонтрагентыДанные: return КонтрагентыДанные;
				case ОбластиДанныхОбъектовДоступа.КонтрагентыДопИнформация: return КонтрагентыДопИнформация;
				case ОбластиДанныхОбъектовДоступа.ЦеныНоменклатуры: return ЦеныНоменклатуры;
				case ОбластиДанныхОбъектовДоступа.ЦеныНоменклатурыКонтрагентов: return ЦеныНоменклатурыКонтрагентов;
			}
			return Guid.Empty;
		}
	}
}