
using System;
using System.Runtime.Serialization;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	///<summary>
	///Варианты учета транспортно-заготовительных расходов
	///</summary>
	[DataContract]
	public enum ВариантыУчетаТЗР
	{
		[NonSerialized]
		ПустаяСсылка = - 1,
		[EnumMember(Value = "{\"Ссылка\":\"5cf9d807-2b27-41f4-a91f-e978f0e8c8e3\", \"Представление\":\"ОтнесениеНаОтдельныйСчет\"}")]
		ОтнесениеНаОтдельныйСчет = 0,//Отнесение ТЗР на отдельный счет
		[EnumMember(Value = "{\"Ссылка\":\"32c86ad1-89f4-42d4-97d2-4ac7cedfaec3\", \"Представление\":\"ВключениеВФактическуюСтоимость\"}")]
		ВключениеВФактическуюСтоимость = 1,//Включение ТЗР в фактическую стоимость
	}
	public static partial class ВариантыУчетаТЗР_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid ОтнесениеНаОтдельныйСчет = new Guid("78e91fa9-e8f0-e3c8-41f4-2b275cf9d807");//Отнесение ТЗР на отдельный счет
		public static readonly Guid ВключениеВФактическуюСтоимость = new Guid("c74ad297-dfce-c3ae-42d4-89f432c86ad1");//Включение ТЗР в фактическую стоимость
		public static ВариантыУчетаТЗР Получить(this ВариантыУчетаТЗР Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ВариантыУчетаТЗР Получить(this ВариантыУчетаТЗР Значение, Guid Ссылка)
		{
			if(Ссылка == ОтнесениеНаОтдельныйСчет)
			{
				return ВариантыУчетаТЗР.ОтнесениеНаОтдельныйСчет;
			}
			else if(Ссылка == ВключениеВФактическуюСтоимость)
			{
				return ВариантыУчетаТЗР.ВключениеВФактическуюСтоимость;
			}
			return ВариантыУчетаТЗР.ПустаяСсылка;
		}
		public static byte[] Ключ(this ВариантыУчетаТЗР Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ВариантыУчетаТЗР Значение)
		{
			switch (Значение)
			{
				case ВариантыУчетаТЗР.ОтнесениеНаОтдельныйСчет: return ОтнесениеНаОтдельныйСчет;
				case ВариантыУчетаТЗР.ВключениеВФактическуюСтоимость: return ВключениеВФактическуюСтоимость;
			}
			return Guid.Empty;
		}
	}
}