
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
		///<summary>
		///(Упр)
		///</summary>
	public enum СпособыРасчетаЦены
	{
		ПустаяСсылка = - 1,
		ПоПроцентнойНаценкеНаБазовыйТип = 0,//По процентной наценке на базовый тип
		ПоВхождениюБазовойЦеныВДиапазон = 1,//По вхождению базовой цены в диапазон
	}
	public static partial class СпособыРасчетаЦены_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid ПоПроцентнойНаценкеНаБазовыйТип = new Guid("9b5b9982-7cea-1b1d-4582-748fab05418b");//По процентной наценке на базовый тип
		public static readonly Guid ПоВхождениюБазовойЦеныВДиапазон = new Guid("6930e986-5d35-6e28-4ce6-58793c146cad");//По вхождению базовой цены в диапазон
		public static СпособыРасчетаЦены Получить(this СпособыРасчетаЦены Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static СпособыРасчетаЦены Получить(this СпособыРасчетаЦены Значение, Guid Ссылка)
		{
			if(Ссылка == ПоПроцентнойНаценкеНаБазовыйТип)
			{
				return СпособыРасчетаЦены.ПоПроцентнойНаценкеНаБазовыйТип;
			}
			else if(Ссылка == ПоВхождениюБазовойЦеныВДиапазон)
			{
				return СпособыРасчетаЦены.ПоВхождениюБазовойЦеныВДиапазон;
			}
			return СпособыРасчетаЦены.ПустаяСсылка;
		}
		public static byte[] Ключ(this СпособыРасчетаЦены Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this СпособыРасчетаЦены Значение)
		{
			switch (Значение)
			{
				case СпособыРасчетаЦены.ПоПроцентнойНаценкеНаБазовыйТип: return ПоПроцентнойНаценкеНаБазовыйТип;
				case СпособыРасчетаЦены.ПоВхождениюБазовойЦеныВДиапазон: return ПоВхождениюБазовойЦеныВДиапазон;
			}
			return Guid.Empty;
		}
	}
}