
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	public enum СостоянияСоглашенийЭД
	{
		ПустаяСсылка = - 1,
		Действует = 0,
		Закрыто = 1,
		ОжидаетсяСогласование = 2,//Ожидается согласование
	}
	public static partial class СостоянияСоглашенийЭД_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid Действует = new Guid("f27247a0-afa0-1f8a-4a11-2e44d184530c");
		public static readonly Guid Закрыто = new Guid("068877ac-ac8d-4229-4d92-69a819b40538");
		public static readonly Guid ОжидаетсяСогласование = new Guid("86bb3186-5f4b-6870-4e5c-826ea4c5b9c9");//Ожидается согласование
		public static СостоянияСоглашенийЭД Получить(this СостоянияСоглашенийЭД Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static СостоянияСоглашенийЭД Получить(this СостоянияСоглашенийЭД Значение, Guid Ссылка)
		{
			if(Ссылка == Действует)
			{
				return СостоянияСоглашенийЭД.Действует;
			}
			else if(Ссылка == Закрыто)
			{
				return СостоянияСоглашенийЭД.Закрыто;
			}
			else if(Ссылка == ОжидаетсяСогласование)
			{
				return СостоянияСоглашенийЭД.ОжидаетсяСогласование;
			}
			return СостоянияСоглашенийЭД.ПустаяСсылка;
		}
		public static byte[] Ключ(this СостоянияСоглашенийЭД Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this СостоянияСоглашенийЭД Значение)
		{
			switch (Значение)
			{
				case СостоянияСоглашенийЭД.Действует: return Действует;
				case СостоянияСоглашенийЭД.Закрыто: return Закрыто;
				case СостоянияСоглашенийЭД.ОжидаетсяСогласование: return ОжидаетсяСогласование;
			}
			return Guid.Empty;
		}
	}
}
