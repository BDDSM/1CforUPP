
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
		///<summary>
		///(Упр) По первоначальной либо по справедливой стоимости
		///</summary>
	public enum МетодыОценкиАктивов
	{
		ПустаяСсылка = - 1,
		ПоПервоначальнойСтоимости = 0,//По первоначальной стоимости
		ПоСправедливойСтоимости = 1,//По справедливой стоимости
	}
	public static partial class МетодыОценкиАктивов_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid ПоПервоначальнойСтоимости = new Guid("c1d14785-4661-555b-4a37-60504d6eafe0");//По первоначальной стоимости
		public static readonly Guid ПоСправедливойСтоимости = new Guid("8c4035ba-8c68-18ae-42ca-a0e3e2646212");//По справедливой стоимости
		public static МетодыОценкиАктивов Получить(this МетодыОценкиАктивов Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static МетодыОценкиАктивов Получить(this МетодыОценкиАктивов Значение, Guid Ссылка)
		{
			if(Ссылка == ПоПервоначальнойСтоимости)
			{
				return МетодыОценкиАктивов.ПоПервоначальнойСтоимости;
			}
			else if(Ссылка == ПоСправедливойСтоимости)
			{
				return МетодыОценкиАктивов.ПоСправедливойСтоимости;
			}
			return МетодыОценкиАктивов.ПустаяСсылка;
		}
		public static byte[] Ключ(this МетодыОценкиАктивов Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this МетодыОценкиАктивов Значение)
		{
			switch (Значение)
			{
				case МетодыОценкиАктивов.ПоПервоначальнойСтоимости: return ПоПервоначальнойСтоимости;
				case МетодыОценкиАктивов.ПоСправедливойСтоимости: return ПоСправедливойСтоимости;
			}
			return Guid.Empty;
		}
	}
}
