
using System;
using System.Runtime.Serialization;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	///<summary>
	///(Упр)
	///</summary>
	[DataContract]
	public enum ВидыРаспределенийПоИзмерениямБюджетирования
	{
		[NonSerialized]
		ПустаяСсылка = - 1,
		[EnumMember(Value = "{\"Ссылка\":\"63b6648a-a77f-435e-b7c0-0dd82572045e\", \"Представление\":\"Фиксированное\"}")]
		Фиксированное = 0,
		[EnumMember(Value = "{\"Ссылка\":\"973dff9a-6578-4b17-8bb8-2806b7f875b7\", \"Представление\":\"ПоПоказателюИсточника\"}")]
		ПоПоказателюИсточника = 1,//По показателю источника
	}
	public static partial class ВидыРаспределенийПоИзмерениямБюджетирования_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid Фиксированное = new Guid("d80dc0b7-7225-5e04-435e-a77f63b6648a");
		public static readonly Guid ПоПоказателюИсточника = new Guid("0628b88b-f8b7-b775-4b17-6578973dff9a");//По показателю источника
		public static ВидыРаспределенийПоИзмерениямБюджетирования Получить(this ВидыРаспределенийПоИзмерениямБюджетирования Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ВидыРаспределенийПоИзмерениямБюджетирования Получить(this ВидыРаспределенийПоИзмерениямБюджетирования Значение, Guid Ссылка)
		{
			if(Ссылка == Фиксированное)
			{
				return ВидыРаспределенийПоИзмерениямБюджетирования.Фиксированное;
			}
			else if(Ссылка == ПоПоказателюИсточника)
			{
				return ВидыРаспределенийПоИзмерениямБюджетирования.ПоПоказателюИсточника;
			}
			return ВидыРаспределенийПоИзмерениямБюджетирования.ПустаяСсылка;
		}
		public static byte[] Ключ(this ВидыРаспределенийПоИзмерениямБюджетирования Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ВидыРаспределенийПоИзмерениямБюджетирования Значение)
		{
			switch (Значение)
			{
				case ВидыРаспределенийПоИзмерениямБюджетирования.Фиксированное: return Фиксированное;
				case ВидыРаспределенийПоИзмерениямБюджетирования.ПоПоказателюИсточника: return ПоПоказателюИсточника;
			}
			return Guid.Empty;
		}
	}
}