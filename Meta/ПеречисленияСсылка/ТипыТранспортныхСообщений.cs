
using System;
using System.Runtime.Serialization;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	[DataContract]
	public enum ТипыТранспортныхСообщений
	{
		[NonSerialized]
		ПустаяСсылка = - 1,
		[EnumMember(Value = "{\"Ссылка\":\"8adf76a6-c04d-44de-9c5b-2f262ad61467\", \"Представление\":\"ПервичноеСообщениеСодержащееОтчетность\"}")]
		ПервичноеСообщениеСодержащееОтчетность = 0,//Первичное сообщение, содержащее файл отчетности
		[EnumMember(Value = "{\"Ссылка\":\"7691546f-4bc0-46fc-a593-605fdefa67f4\", \"Представление\":\"ПодтверждениеОтправкиОтчетности\"}")]
		ПодтверждениеОтправкиОтчетности = 1,//Подтверждение отправки файла отчетности
		[EnumMember(Value = "{\"Ссылка\":\"1bb4bde4-8fe0-4407-baf6-1a6ec4f4f99e\", \"Представление\":\"ПереподписанноеПодтверждениеОтправкиОтчетности\"}")]
		ПереподписанноеПодтверждениеОтправкиОтчетности = 2,//Переподписанное налогоплательщиком подтверждение отправки файла отчетности
		[EnumMember(Value = "{\"Ссылка\":\"52e24200-d92e-45b1-967c-74e5a4b9b63b\", \"Представление\":\"КвитанцияОПриемеФайлаОтчетности\"}")]
		КвитанцияОПриемеФайлаОтчетности = 3,//Квитанция о приеме файла отчетности налоговым органом
		[EnumMember(Value = "{\"Ссылка\":\"2a09efe2-214d-4695-bb13-ab5de884784d\", \"Представление\":\"ПротоколВходногоКонтроляОтчетности\"}")]
		ПротоколВходногоКонтроляОтчетности = 4,//Протокол входного контроля файла отчетности
		[EnumMember(Value = "{\"Ссылка\":\"af29a7be-9cb3-49d2-ab77-691957cc5bdc\", \"Представление\":\"ПереподписанныйПротоколВходногоКонтроляОтчетности\"}")]
		ПереподписанныйПротоколВходногоКонтроляОтчетности = 5,//Переподписанный протокол входного контроля отчетности
		[EnumMember(Value = "{\"Ссылка\":\"412fa4ec-9ece-4df1-b783-76d2af0d2b41\", \"Представление\":\"УведомлениеОбУточненииНБО\"}")]
		УведомлениеОбУточненииНБО = 6,//Уведомление об уточнении НБО
		[EnumMember(Value = "{\"Ссылка\":\"1f6ffac0-8305-42fc-ba3b-b38f4c87e1a4\", \"Представление\":\"Протокол2НДФЛ\"}")]
		Протокол2НДФЛ = 7,//Протокол приема 2- НДФЛ
		[EnumMember(Value = "{\"Ссылка\":\"b225ef64-a610-41ea-b768-9ce410d289d7\", \"Представление\":\"НеформализованныйДокументНО\"}")]
		НеформализованныйДокументНО = 8,//Документ налогового органа
		[EnumMember(Value = "{\"Ссылка\":\"ced91b5c-614d-497c-a801-a745a495b5b2\", \"Представление\":\"ПодтверждениеНаНеформализованныйДокументНО\"}")]
		ПодтверждениеНаНеформализованныйДокументНО = 9,//Подтверждение приема документа налогового органа
		[EnumMember(Value = "{\"Ссылка\":\"c7dd0066-9724-4e84-b4bb-227344794246\", \"Представление\":\"НеформализованныйДокументНалогоплательщика\"}")]
		НеформализованныйДокументНалогоплательщика = 10,//Документ налогоплательщика
		[EnumMember(Value = "{\"Ссылка\":\"f769856a-7a3f-44e8-905c-c7daaf43fe05\", \"Представление\":\"ПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика\"}")]
		ПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика = 11,//Подтверждение отправки документа налогоплательщика
		[EnumMember(Value = "{\"Ссылка\":\"1f2d0722-6a7a-4b85-8112-5473f54017ae\", \"Представление\":\"ПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика\"}")]
		ПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика = 12,//Переподписанное налогоплательщиком подтверждение отправки документа налогоплательщика
		[EnumMember(Value = "{\"Ссылка\":\"72018062-82a2-49b6-afdb-3b62f702c20a\", \"Представление\":\"ПодтверждениеДоставкиНеформализованногоДокументаНалогоплательщика\"}")]
		ПодтверждениеДоставкиНеформализованногоДокументаНалогоплательщика = 13,//Квитанция о доставке документа налогоплательщика в налоговый орган
		[EnumMember(Value = "{\"Ссылка\":\"88209331-a5b4-4dbe-babe-204a168e993f\", \"Представление\":\"ЗапросИОН\"}")]
		ЗапросИОН = 14,//Запрос на информационное обслуживание налогоплательщика
		[EnumMember(Value = "{\"Ссылка\":\"72b1cd2b-ce9d-42b0-aad7-ac2c6f6eb562\", \"Представление\":\"ПодтверждениеОтправкиЗапросаИОН\"}")]
		ПодтверждениеОтправкиЗапросаИОН = 15,//Подтверждение отправки запроса на информационное обслуживание налогоплательщика
		[EnumMember(Value = "{\"Ссылка\":\"7a95fac0-e022-49f1-8985-64b21ae1bcb6\", \"Представление\":\"ПереподписанноеПодтверждениеОтправкиЗапросаИОН\"}")]
		ПереподписанноеПодтверждениеОтправкиЗапросаИОН = 16,//Переподписанное налогоплательщиком подтверждение отправки запроса на информационное обслуживание
		[EnumMember(Value = "{\"Ссылка\":\"3ead2c93-d4f8-4b71-8897-0f37058e83fb\", \"Представление\":\"КвитанцияОПриемеЗапросаИОН\"}")]
		КвитанцияОПриемеЗапросаИОН = 17,//Квитанция о приеме запроса на информационное обслуживание налоговым органом
		[EnumMember(Value = "{\"Ссылка\":\"0012019f-3afe-4468-989f-5e2fdb81631c\", \"Представление\":\"ПротоколВходногоКонтроляЗапросаИОН\"}")]
		ПротоколВходногоКонтроляЗапросаИОН = 18,//Протокол входного контроля запроса на информационное обслуживание
		[EnumMember(Value = "{\"Ссылка\":\"afae1612-4e03-40a9-8b67-9c235a305854\", \"Представление\":\"ПереподписанныйПротоколВходногоКонтроляЗапросаИОН\"}")]
		ПереподписанныйПротоколВходногоКонтроляЗапросаИОН = 19,//Переподписанный налогоплательщиком протокол входного контроля запроса на информационное обслуживание
		[EnumMember(Value = "{\"Ссылка\":\"a096d25e-c82e-4623-9e38-d026e3326f5a\", \"Представление\":\"ОтветНаЗапросИОН\"}")]
		ОтветНаЗапросИОН = 20,//Ответ налогового органа на запрос на информационное обслуживание
		[EnumMember(Value = "{\"Ссылка\":\"2e41786f-eb80-44e6-9db9-540e6863f871\", \"Представление\":\"ПереподписанныйОтветНаЗапросИОН\"}")]
		ПереподписанныйОтветНаЗапросИОН = 21,//Переподписанный налогоплательщиком ответ на запрос на информационное обслуживание
		[EnumMember(Value = "{\"Ссылка\":\"828fa3f4-25e7-4232-a56e-a18a25e633d8\", \"Представление\":\"КритическаяОшибка\"}")]
		КритическаяОшибка = 22,//Критическая ошибка
		[EnumMember(Value = "{\"Ссылка\":\"a8d8b9fa-5cd7-403b-ba65-31f00e8257d8\", \"Представление\":\"Прочее\"}")]
		Прочее = 23,
		[EnumMember(Value = "{\"Ссылка\":\"65ea13bb-ac6b-479c-a400-6500eba6d71a\", \"Представление\":\"ПервичноеСообщениеСодержащееОтчетностьПФР\"}")]
		ПервичноеСообщениеСодержащееОтчетностьПФР = 24,//Первичное сообщение, содержащее файл отчетности для ПФР
		[EnumMember(Value = "{\"Ссылка\":\"94c3dc20-6364-4b99-92e8-3a3af93e9dcf\", \"Представление\":\"ПодтверждениеПолученияОтчетностиПФР\"}")]
		ПодтверждениеПолученияОтчетностиПФР = 25,//Подтверждение получения отчетности
		[EnumMember(Value = "{\"Ссылка\":\"de111461-c906-4342-881f-e35be0129c49\", \"Представление\":\"ПротоколПФР\"}")]
		ПротоколПФР = 26,//Протокол
		[EnumMember(Value = "{\"Ссылка\":\"22eadd12-fdf0-42bb-8b85-da18c501e7b4\", \"Представление\":\"ПротоколКвитанцияПФР\"}")]
		ПротоколКвитанцияПФР = 27,//Квитанция на протокол
		[EnumMember(Value = "{\"Ссылка\":\"079387aa-74c5-4f55-bd3d-d356f34867d7\", \"Представление\":\"УведомлениеОбОшибкеПФР\"}")]
		УведомлениеОбОшибкеПФР = 28,//Уведомление об ошибке при обмене с ПФР
		[EnumMember(Value = "{\"Ссылка\":\"d21d5cc7-2da4-48c9-96c9-d25322866096\", \"Представление\":\"ПисьмоВходящееПФР\"}")]
		ПисьмоВходящееПФР = 29,//Входящее письмо
		[EnumMember(Value = "{\"Ссылка\":\"358861c7-f9e5-4a32-a363-176705a0e835\", \"Представление\":\"ПисьмоВходящееКвитанцияПФР\"}")]
		ПисьмоВходящееКвитанцияПФР = 30,//Квитанция на входящее письмо
		[EnumMember(Value = "{\"Ссылка\":\"bae15718-e8ea-4b72-af24-bd522569e84c\", \"Представление\":\"ПисьмоИсходящееПФР\"}")]
		ПисьмоИсходящееПФР = 31,//Исходящее письмо
		[EnumMember(Value = "{\"Ссылка\":\"c3a479cd-fb1a-4408-956e-0c8a9e395196\", \"Представление\":\"ПисьмоИсходящееКвитанцияПФР\"}")]
		ПисьмоИсходящееКвитанцияПФР = 32,//Квитанция на исходящее письмо
		[EnumMember(Value = "{\"Ссылка\":\"c71c352d-75d6-4ff4-9f61-3100bdea2cbd\", \"Представление\":\"ДекларацияНП\"}")]
		ДекларацияНП = 33,//Первичное сообщение, содержащее отчетность
		[EnumMember(Value = "{\"Ссылка\":\"402cf865-7676-4cb7-b4bd-3a8187ab0f49\", \"Представление\":\"ПодтверждениеДекларацияНО\"}")]
		ПодтверждениеДекларацияНО = 34,//Подтверждение даты отправки
		[EnumMember(Value = "{\"Ссылка\":\"fec3fd61-55a8-435f-ba95-1e776b1bf5cb\", \"Представление\":\"ИзвещениеПодтверждениеНП\"}")]
		ИзвещениеПодтверждениеНП = 35,//Извещение о получении подтверждения даты отправки
		[EnumMember(Value = "{\"Ссылка\":\"22c51983-b066-4067-9076-e4639a97d55f\", \"Представление\":\"ИзвещениеДекларацияНО\"}")]
		ИзвещениеДекларацияНО = 36,//Извещение о получении декларации
		[EnumMember(Value = "{\"Ссылка\":\"8360ee19-868c-4fa0-bf11-9dad9841daa8\", \"Представление\":\"РезультатПриемаДекларацияНО\"}")]
		РезультатПриемаДекларацияНО = 37,//Результат приема декларации
		[EnumMember(Value = "{\"Ссылка\":\"34d7b52e-6592-48c9-97f6-f0b67f2673a8\", \"Представление\":\"ИзвещениеРезультатПриемаНП\"}")]
		ИзвещениеРезультатПриемаНП = 38,//Извещение о получении результата приема
		[EnumMember(Value = "{\"Ссылка\":\"7682c5c2-75cc-4085-8548-d4e585f694b4\", \"Представление\":\"РезультатОбработкиДекларацияНО\"}")]
		РезультатОбработкиДекларацияНО = 39,//Результат обработки декларации
		[EnumMember(Value = "{\"Ссылка\":\"2c99fbab-2006-433a-9f25-8379a1441436\", \"Представление\":\"ИзвещениеРезультатОбработкиНП\"}")]
		ИзвещениеРезультатОбработкиНП = 40,//Извещение о получении результата обработки
		[EnumMember(Value = "{\"Ссылка\":\"ed87194e-0d8c-4522-857d-0c643b869c27\", \"Представление\":\"УведомлениеОбОшибкеФНС\"}")]
		УведомлениеОбОшибкеФНС = 41,//Уведомление об ошибке при обмене с ФНС
		[EnumMember(Value = "{\"Ссылка\":\"9315bed2-065a-4660-89b9-70778c0ca051\", \"Представление\":\"Форма2НДФЛНП\"}")]
		Форма2НДФЛНП = 42,//Форма 2-НДФЛ
		[EnumMember(Value = "{\"Ссылка\":\"c13dc950-34e2-4b7c-b2cd-6290d857591b\", \"Представление\":\"ПодтверждениеФорма2НДФЛНО\"}")]
		ПодтверждениеФорма2НДФЛНО = 43,//Подтверждение даты отправки 2-НДФЛ
		[EnumMember(Value = "{\"Ссылка\":\"55171a58-8d62-401a-83d8-693aadb7023a\", \"Представление\":\"ИзвещениеФорма2НДФЛНО\"}")]
		ИзвещениеФорма2НДФЛНО = 44,//Извещение о получении формы 2-НДФЛ
		[EnumMember(Value = "{\"Ссылка\":\"a248b5e2-7e99-43a3-bd41-f0903b21444e\", \"Представление\":\"РезультатПриемаФорма2НДФЛНО\"}")]
		РезультатПриемаФорма2НДФЛНО = 45,//Результат приема формы 2-НДФЛ
		[EnumMember(Value = "{\"Ссылка\":\"eaa515fb-da02-4ead-a3ed-82de86ec6239\", \"Представление\":\"ОбращениеНП\"}")]
		ОбращениеНП = 46,//Обращение налогоплательщика
		[EnumMember(Value = "{\"Ссылка\":\"3fb33b43-656a-4d32-a59f-6ebaf6ba48cb\", \"Представление\":\"ИзвещениеОбращениеНО\"}")]
		ИзвещениеОбращениеНО = 47,//Извещение о получении обращения налогоплательщика
		[EnumMember(Value = "{\"Ссылка\":\"843cec52-6aa5-4ac6-bb93-303b12607576\", \"Представление\":\"РезультатПриемаОбращениеНО\"}")]
		РезультатПриемаОбращениеНО = 48,//Результат приема обращения налогоплательщика
		[EnumMember(Value = "{\"Ссылка\":\"4cdda0fd-65f4-4f1e-b3eb-2d75788ba9ea\", \"Представление\":\"ПодтверждениеОбращениеНО\"}")]
		ПодтверждениеОбращениеНО = 49,//Подтверждение даты отправки обращения налогоплательщика
		[EnumMember(Value = "{\"Ссылка\":\"d43abd92-09d1-4cf9-803e-2ce5399a349d\", \"Представление\":\"ПисьмоНО\"}")]
		ПисьмоНО = 50,//Письмо налогового органа
		[EnumMember(Value = "{\"Ссылка\":\"b058e944-b1fb-4db7-8070-38ba2b0e5e08\", \"Представление\":\"РассылкаНО\"}")]
		РассылкаНО = 51,//Рассылка налогового органа
		[EnumMember(Value = "{\"Ссылка\":\"1e2d2377-000e-4eea-a6a4-d8b950816c8a\", \"Представление\":\"ИзвещениеПисьмоНП\"}")]
		ИзвещениеПисьмоНП = 52,//Извещение о получении письма налогового органа
		[EnumMember(Value = "{\"Ссылка\":\"7f4ae751-9313-4839-8a41-253c6e9cc519\", \"Представление\":\"ИзвещениеРассылкаНП\"}")]
		ИзвещениеРассылкаНП = 53,//Извещение о получении рассылки налогового органа
		[EnumMember(Value = "{\"Ссылка\":\"15d54f5a-0259-4a40-9d9e-59ba36670dda\", \"Представление\":\"ЗапросНП\"}")]
		ЗапросНП = 54,//Запрос на информационное обслуживание налогоплательщика
		[EnumMember(Value = "{\"Ссылка\":\"7791a9af-2ee9-4818-a90e-c667dedb8ca7\", \"Представление\":\"ПодтверждениеЗапросНО\"}")]
		ПодтверждениеЗапросНО = 55,//Подтверждение даты отправки запроса налогоплательщика
		[EnumMember(Value = "{\"Ссылка\":\"411fc231-1b12-4e03-8ed3-01110646ce67\", \"Представление\":\"ИзвещениеЗапросНО\"}")]
		ИзвещениеЗапросНО = 56,//Извещение о получении запроса налогоплательщика
		[EnumMember(Value = "{\"Ссылка\":\"e6d94b03-1c2d-4c1c-a8cc-5647cb068ad3\", \"Представление\":\"РезультатПриемаЗапросНО\"}")]
		РезультатПриемаЗапросНО = 57,//Результат приема запрос налогоплательщика
		[EnumMember(Value = "{\"Ссылка\":\"b84d1620-fb97-4ab5-adca-58cb44d1b835\", \"Представление\":\"РезультатОбработкиЗапросНО\"}")]
		РезультатОбработкиЗапросНО = 58,//Результат обработки запрос налогоплательщика
	///<summary>
	///Отчет
	///</summary>
		[EnumMember(Value = "{\"Ссылка\":\"c5e3c137-be01-4621-bba4-149dcee19839\", \"Представление\":\"ПервичноеСообщениеСодержащееОтчетностьФСГС\"}")]
		ПервичноеСообщениеСодержащееОтчетностьФСГС = 59,//Первичное сообщение, содержащее файл отчетности
	///<summary>
	///Подтверждение
	///</summary>
		[EnumMember(Value = "{\"Ссылка\":\"c14c472c-0895-40ef-94ed-d23ccf658fa7\", \"Представление\":\"ПодтверждениеДатыОтправкиФСГС\"}")]
		ПодтверждениеДатыОтправкиФСГС = 60,//Подтверждение даты отправки документа
	///<summary>
	///ПодтверждениеКвитанция
	///</summary>
		[EnumMember(Value = "{\"Ссылка\":\"a283ccd3-4105-4050-8228-af43faaa2ad7\", \"Представление\":\"ИзвещениеПодтверждениеДатыОтправкиФСГС\"}")]
		ИзвещениеПодтверждениеДатыОтправкиФСГС = 61,//Извещение о получении респондентом подтверждения даты отправки документа
		[EnumMember(Value = "{\"Ссылка\":\"d4e548f6-bc13-4b8f-9fb0-5c7c6140b2f7\", \"Представление\":\"ПереподписанноеПодтверждениеОтправкиОтчетностиФСГС\"}")]
		ПереподписанноеПодтверждениеОтправкиОтчетностиФСГС = 62,//Переподписанное подтверждение отправки файла отчетности
	///<summary>
	///ОтчетИзвещение
	///</summary>
		[EnumMember(Value = "{\"Ссылка\":\"3f84f457-14ac-4d6a-9086-280ce25d3b75\", \"Представление\":\"ИзвещениеОПолученииОтчетностиФСГС\"}")]
		ИзвещениеОПолученииОтчетностиФСГС = 63,//Извещение о получении файла отчетности
	///<summary>
	///Протокол
	///</summary>
		[EnumMember(Value = "{\"Ссылка\":\"fec3cfc8-2ac8-4500-a4eb-f347a463a5de\", \"Представление\":\"ПротоколВходногоКонтроляОтчетностиФСГС\"}")]
		ПротоколВходногоКонтроляОтчетностиФСГС = 64,//Протокол входного контроля отчетности
	///<summary>
	///ПротоколИзвещение
	///</summary>
		[EnumMember(Value = "{\"Ссылка\":\"e0f957ee-f4cf-49f5-a3b5-849fd3f50013\", \"Представление\":\"ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС\"}")]
		ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС = 65,//Извещение о получении респондентом протокола входного контроля отчетности
	///<summary>
	///Письмо
	///</summary>
		[EnumMember(Value = "{\"Ссылка\":\"2d35e700-e8ed-4f2a-a949-ed578c4e1522\", \"Представление\":\"ПисьмоВходящееФСГС\"}")]
		ПисьмоВходящееФСГС = 66,//Входящее письмо
	///<summary>
	///Извещение
	///</summary>
		[EnumMember(Value = "{\"Ссылка\":\"eb178dc6-ac40-4920-a0a2-c66f66132e46\", \"Представление\":\"ИзвещениеПисьмоВходящееФСГС\"}")]
		ИзвещениеПисьмоВходящееФСГС = 67,//Извещение о получении письма респондентом
	///<summary>
	///Письмо
	///</summary>
		[EnumMember(Value = "{\"Ссылка\":\"f8f34ede-2ee2-4979-85db-983b85a4c1e3\", \"Представление\":\"ПисьмоИсходящееФСГС\"}")]
		ПисьмоИсходящееФСГС = 68,//Исходящее письмо
	///<summary>
	///Извещение
	///</summary>
		[EnumMember(Value = "{\"Ссылка\":\"2c5a50fa-d2a2-49f6-9389-4f648007ea6e\", \"Представление\":\"ИзвещениеПисьмоИсходящееФСГС\"}")]
		ИзвещениеПисьмоИсходящееФСГС = 69,//Извещение о получении письма органом ФСГС
		[EnumMember(Value = "{\"Ссылка\":\"7840ba0a-f0d6-4011-8a73-9ac902d8b562\", \"Представление\":\"УведомлениеОбОшибкеФСГС\"}")]
		УведомлениеОбОшибкеФСГС = 70,//Уведомление об ошибке при обмене с Росстатом
		[EnumMember(Value = "{\"Ссылка\":\"b8008219-cdc0-4c1c-ab68-a0e8a0ffab40\", \"Представление\":\"РассылкаФСГС\"}")]
		РассылкаФСГС = 71,//Рассылка органа ФСГС
		[EnumMember(Value = "{\"Ссылка\":\"2976e270-ff13-423d-b876-9c5dd9f60ffd\", \"Представление\":\"ЗаявлениеНП\"}")]
		ЗаявлениеНП = 72,//Заявление налогоплательщика
		[EnumMember(Value = "{\"Ссылка\":\"d9138813-8bad-4aef-97aa-64d6449a4d47\", \"Представление\":\"ИзвещениеЗаявлениеНО\"}")]
		ИзвещениеЗаявлениеНО = 73,//Извещение о получении заявления
		[EnumMember(Value = "{\"Ссылка\":\"197f64cc-596a-4dc3-a51f-2e30812f1f9e\", \"Представление\":\"РезультатПриемаЗаявлениеНО\"}")]
		РезультатПриемаЗаявлениеНО = 74,//Результат приема заявления
		[EnumMember(Value = "{\"Ссылка\":\"c8ca353b-46b0-46d5-8f77-8e3e1c938b12\", \"Представление\":\"РезультатОбработкиЗаявлениеРФНО\"}")]
		РезультатОбработкиЗаявлениеРФНО = 75,//Результат обработки заявления
		[EnumMember(Value = "{\"Ссылка\":\"7ad0e0b6-7692-4bdf-a9b2-f629461c01cb\", \"Представление\":\"ИзвещениеРезультатОбработкиРФНП\"}")]
		ИзвещениеРезультатОбработкиРФНП = 76,//Извещение о получении результата обработки заявления
		[EnumMember(Value = "{\"Ссылка\":\"ce6d93d0-ff3b-4c05-9050-54ee9082f86d\", \"Представление\":\"СообщениеОбОтзывеЗаявлениеРФНО\"}")]
		СообщениеОбОтзывеЗаявлениеРФНО = 77,//Сообщение об отзыве заявления
		[EnumMember(Value = "{\"Ссылка\":\"beeabd4f-ea90-4edd-b20d-b00f3d75bfa3\", \"Представление\":\"ИзвещениеОбОтзывеЗаявлениеРФНП\"}")]
		ИзвещениеОбОтзывеЗаявлениеРФНП = 78,//Извещение о получении отзыва заявления
		[EnumMember(Value = "{\"Ссылка\":\"fd383c98-ab54-4377-8514-9f565b44d96f\", \"Представление\":\"РезультатОбработкиЗаявлениеТСНО\"}")]
		РезультатОбработкиЗаявлениеТСНО = 79,//Сообщение о несоответствиях
		[EnumMember(Value = "{\"Ссылка\":\"c21a9aec-7b0e-4a77-b1cb-3ab17c10f257\", \"Представление\":\"ИзвещениеРезультатОбработкиТСНП\"}")]
		ИзвещениеРезультатОбработкиТСНП = 80,//Извещение о получении сообщения о  несоответствиях
		[EnumMember(Value = "{\"Ссылка\":\"a2dfd0dd-6510-4ff6-ade3-8456fbaf8e27\", \"Представление\":\"ПодтверждениеЗаявлениеНО\"}")]
		ПодтверждениеЗаявлениеНО = 81,//Подтверждение даты отправки заявления
		[EnumMember(Value = "{\"Ссылка\":\"e5817b59-c98a-4276-872a-38516e275492\", \"Представление\":\"ДокументНО\"}")]
		ДокументНО = 82,//Документ налогового органа
		[EnumMember(Value = "{\"Ссылка\":\"98a12771-ab3a-4fa0-aeac-8304b835c8e4\", \"Представление\":\"ИзвещениеДокументНП\"}")]
		ИзвещениеДокументНП = 83,//Извещение о получении документа налогоплательщиком
		[EnumMember(Value = "{\"Ссылка\":\"9fc43156-0dc2-499f-9d2d-d4959fc7347e\", \"Представление\":\"РезультатПриемаДокументНП\"}")]
		РезультатПриемаДокументНП = 84,//Результат приема документа налогоплательщиком
		[EnumMember(Value = "{\"Ссылка\":\"536f24d5-9406-4862-92e4-9f631b090d48\", \"Представление\":\"ИзвещениеРезультатПриемаНО\"}")]
		ИзвещениеРезультатПриемаНО = 85,//Извещение о получении результата приема налоговым органом
	}
	public static partial class ТипыТранспортныхСообщений_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid ПервичноеСообщениеСодержащееОтчетность = new Guid("262f5b9c-d62a-6714-44de-c04d8adf76a6");//Первичное сообщение, содержащее файл отчетности
		public static readonly Guid ПодтверждениеОтправкиОтчетности = new Guid("5f6093a5-fade-f467-46fc-4bc07691546f");//Подтверждение отправки файла отчетности
		public static readonly Guid ПереподписанноеПодтверждениеОтправкиОтчетности = new Guid("6e1af6ba-f4c4-9ef9-4407-8fe01bb4bde4");//Переподписанное налогоплательщиком подтверждение отправки файла отчетности
		public static readonly Guid КвитанцияОПриемеФайлаОтчетности = new Guid("e5747c96-b9a4-3bb6-45b1-d92e52e24200");//Квитанция о приеме файла отчетности налоговым органом
		public static readonly Guid ПротоколВходногоКонтроляОтчетности = new Guid("5dab13bb-84e8-4d78-4695-214d2a09efe2");//Протокол входного контроля файла отчетности
		public static readonly Guid ПереподписанныйПротоколВходногоКонтроляОтчетности = new Guid("196977ab-cc57-dc5b-49d2-9cb3af29a7be");//Переподписанный протокол входного контроля отчетности
		public static readonly Guid УведомлениеОбУточненииНБО = new Guid("d27683b7-0daf-412b-4df1-9ece412fa4ec");//Уведомление об уточнении НБО
		public static readonly Guid Протокол2НДФЛ = new Guid("8fb33bba-874c-a4e1-42fc-83051f6ffac0");//Протокол приема 2- НДФЛ
		public static readonly Guid НеформализованныйДокументНО = new Guid("e49c68b7-d210-d789-41ea-a610b225ef64");//Документ налогового органа
		public static readonly Guid ПодтверждениеНаНеформализованныйДокументНО = new Guid("45a701a8-95a4-b2b5-497c-614dced91b5c");//Подтверждение приема документа налогового органа
		public static readonly Guid НеформализованныйДокументНалогоплательщика = new Guid("7322bbb4-7944-4642-4e84-9724c7dd0066");//Документ налогоплательщика
		public static readonly Guid ПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика = new Guid("dac75c90-43af-05fe-44e8-7a3ff769856a");//Подтверждение отправки документа налогоплательщика
		public static readonly Guid ПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика = new Guid("73541281-40f5-ae17-4b85-6a7a1f2d0722");//Переподписанное налогоплательщиком подтверждение отправки документа налогоплательщика
		public static readonly Guid ПодтверждениеДоставкиНеформализованногоДокументаНалогоплательщика = new Guid("623bdbaf-02f7-0ac2-49b6-82a272018062");//Квитанция о доставке документа налогоплательщика в налоговый орган
		public static readonly Guid ЗапросИОН = new Guid("4a20beba-8e16-3f99-4dbe-a5b488209331");//Запрос на информационное обслуживание налогоплательщика
		public static readonly Guid ПодтверждениеОтправкиЗапросаИОН = new Guid("2cacd7aa-6e6f-62b5-42b0-ce9d72b1cd2b");//Подтверждение отправки запроса на информационное обслуживание налогоплательщика
		public static readonly Guid ПереподписанноеПодтверждениеОтправкиЗапросаИОН = new Guid("b2648589-e11a-b6bc-49f1-e0227a95fac0");//Переподписанное налогоплательщиком подтверждение отправки запроса на информационное обслуживание
		public static readonly Guid КвитанцияОПриемеЗапросаИОН = new Guid("370f9788-8e05-fb83-4b71-d4f83ead2c93");//Квитанция о приеме запроса на информационное обслуживание налоговым органом
		public static readonly Guid ПротоколВходногоКонтроляЗапросаИОН = new Guid("2f5e9f98-81db-1c63-4468-3afe0012019f");//Протокол входного контроля запроса на информационное обслуживание
		public static readonly Guid ПереподписанныйПротоколВходногоКонтроляЗапросаИОН = new Guid("239c678b-305a-5458-40a9-4e03afae1612");//Переподписанный налогоплательщиком протокол входного контроля запроса на информационное обслуживание
		public static readonly Guid ОтветНаЗапросИОН = new Guid("26d0389e-32e3-5a6f-4623-c82ea096d25e");//Ответ налогового органа на запрос на информационное обслуживание
		public static readonly Guid ПереподписанныйОтветНаЗапросИОН = new Guid("0e54b99d-6368-71f8-44e6-eb802e41786f");//Переподписанный налогоплательщиком ответ на запрос на информационное обслуживание
		public static readonly Guid КритическаяОшибка = new Guid("8aa16ea5-e625-d833-4232-25e7828fa3f4");//Критическая ошибка
		public static readonly Guid Прочее = new Guid("f03165ba-820e-d857-403b-5cd7a8d8b9fa");
		public static readonly Guid ПервичноеСообщениеСодержащееОтчетностьПФР = new Guid("006500a4-a6eb-1ad7-479c-ac6b65ea13bb");//Первичное сообщение, содержащее файл отчетности для ПФР
		public static readonly Guid ПодтверждениеПолученияОтчетностиПФР = new Guid("3a3ae892-3ef9-cf9d-4b99-636494c3dc20");//Подтверждение получения отчетности
		public static readonly Guid ПротоколПФР = new Guid("5be31f88-12e0-499c-4342-c906de111461");//Протокол
		public static readonly Guid ПротоколКвитанцияПФР = new Guid("18da858b-01c5-b4e7-42bb-fdf022eadd12");//Квитанция на протокол
		public static readonly Guid УведомлениеОбОшибкеПФР = new Guid("56d33dbd-48f3-d767-4f55-74c5079387aa");//Уведомление об ошибке при обмене с ПФР
		public static readonly Guid ПисьмоВходящееПФР = new Guid("53d2c996-8622-9660-48c9-2da4d21d5cc7");//Входящее письмо
		public static readonly Guid ПисьмоВходящееКвитанцияПФР = new Guid("671763a3-a005-35e8-4a32-f9e5358861c7");//Квитанция на входящее письмо
		public static readonly Guid ПисьмоИсходящееПФР = new Guid("52bd24af-6925-4ce8-4b72-e8eabae15718");//Исходящее письмо
		public static readonly Guid ПисьмоИсходящееКвитанцияПФР = new Guid("8a0c6e95-399e-9651-4408-fb1ac3a479cd");//Квитанция на исходящее письмо
		public static readonly Guid ДекларацияНП = new Guid("0031619f-eabd-bd2c-4ff4-75d6c71c352d");//Первичное сообщение, содержащее отчетность
		public static readonly Guid ПодтверждениеДекларацияНО = new Guid("813abdb4-ab87-490f-4cb7-7676402cf865");//Подтверждение даты отправки
		public static readonly Guid ИзвещениеПодтверждениеНП = new Guid("771e95ba-1b6b-cbf5-435f-55a8fec3fd61");//Извещение о получении подтверждения даты отправки
		public static readonly Guid ИзвещениеДекларацияНО = new Guid("63e47690-979a-5fd5-4067-b06622c51983");//Извещение о получении декларации
		public static readonly Guid РезультатПриемаДекларацияНО = new Guid("ad9d11bf-4198-a8da-4fa0-868c8360ee19");//Результат приема декларации
		public static readonly Guid ИзвещениеРезультатПриемаНП = new Guid("b6f0f697-267f-a873-48c9-659234d7b52e");//Извещение о получении результата приема
		public static readonly Guid РезультатОбработкиДекларацияНО = new Guid("e5d44885-f685-b494-4085-75cc7682c5c2");//Результат обработки декларации
		public static readonly Guid ИзвещениеРезультатОбработкиНП = new Guid("7983259f-44a1-3614-433a-20062c99fbab");//Извещение о получении результата обработки
		public static readonly Guid УведомлениеОбОшибкеФНС = new Guid("640c7d85-863b-279c-4522-0d8ced87194e");//Уведомление об ошибке при обмене с ФНС
		public static readonly Guid Форма2НДФЛНП = new Guid("7770b989-0c8c-51a0-4660-065a9315bed2");//Форма 2-НДФЛ
		public static readonly Guid ПодтверждениеФорма2НДФЛНО = new Guid("9062cdb2-57d8-1b59-4b7c-34e2c13dc950");//Подтверждение даты отправки 2-НДФЛ
		public static readonly Guid ИзвещениеФорма2НДФЛНО = new Guid("3a69d883-b7ad-3a02-401a-8d6255171a58");//Извещение о получении формы 2-НДФЛ
		public static readonly Guid РезультатПриемаФорма2НДФЛНО = new Guid("90f041bd-213b-4e44-43a3-7e99a248b5e2");//Результат приема формы 2-НДФЛ
		public static readonly Guid ОбращениеНП = new Guid("de82eda3-ec86-3962-4ead-da02eaa515fb");//Обращение налогоплательщика
		public static readonly Guid ИзвещениеОбращениеНО = new Guid("ba6e9fa5-baf6-cb48-4d32-656a3fb33b43");//Извещение о получении обращения налогоплательщика
		public static readonly Guid РезультатПриемаОбращениеНО = new Guid("3b3093bb-6012-7675-4ac6-6aa5843cec52");//Результат приема обращения налогоплательщика
		public static readonly Guid ПодтверждениеОбращениеНО = new Guid("752debb3-8b78-eaa9-4f1e-65f44cdda0fd");//Подтверждение даты отправки обращения налогоплательщика
		public static readonly Guid ПисьмоНО = new Guid("e52c3e80-9a39-9d34-4cf9-09d1d43abd92");//Письмо налогового органа
		public static readonly Guid РассылкаНО = new Guid("ba387080-0e2b-085e-4db7-b1fbb058e944");//Рассылка налогового органа
		public static readonly Guid ИзвещениеПисьмоНП = new Guid("b9d8a4a6-8150-8a6c-4eea-000e1e2d2377");//Извещение о получении письма налогового органа
		public static readonly Guid ИзвещениеРассылкаНП = new Guid("3c25418a-9c6e-19c5-4839-93137f4ae751");//Извещение о получении рассылки налогового органа
		public static readonly Guid ЗапросНП = new Guid("ba599e9d-6736-da0d-4a40-025915d54f5a");//Запрос на информационное обслуживание налогоплательщика
		public static readonly Guid ПодтверждениеЗапросНО = new Guid("67c60ea9-dbde-a78c-4818-2ee97791a9af");//Подтверждение даты отправки запроса налогоплательщика
		public static readonly Guid ИзвещениеЗапросНО = new Guid("1101d38e-4606-67ce-4e03-1b12411fc231");//Извещение о получении запроса налогоплательщика
		public static readonly Guid РезультатПриемаЗапросНО = new Guid("4756cca8-06cb-d38a-4c1c-1c2de6d94b03");//Результат приема запрос налогоплательщика
		public static readonly Guid РезультатОбработкиЗапросНО = new Guid("cb58caad-d144-35b8-4ab5-fb97b84d1620");//Результат обработки запрос налогоплательщика
		///<summary>
		///Отчет
		///</summary>
		public static readonly Guid ПервичноеСообщениеСодержащееОтчетностьФСГС = new Guid("9d14a4bb-e1ce-3998-4621-be01c5e3c137");//Первичное сообщение, содержащее файл отчетности
		///<summary>
		///Подтверждение
		///</summary>
		public static readonly Guid ПодтверждениеДатыОтправкиФСГС = new Guid("3cd2ed94-65cf-a78f-40ef-0895c14c472c");//Подтверждение даты отправки документа
		///<summary>
		///ПодтверждениеКвитанция
		///</summary>
		public static readonly Guid ИзвещениеПодтверждениеДатыОтправкиФСГС = new Guid("43af2882-aafa-d72a-4050-4105a283ccd3");//Извещение о получении респондентом подтверждения даты отправки документа
		public static readonly Guid ПереподписанноеПодтверждениеОтправкиОтчетностиФСГС = new Guid("7c5cb09f-4061-f7b2-4b8f-bc13d4e548f6");//Переподписанное подтверждение отправки файла отчетности
		///<summary>
		///ОтчетИзвещение
		///</summary>
		public static readonly Guid ИзвещениеОПолученииОтчетностиФСГС = new Guid("0c288690-5de2-753b-4d6a-14ac3f84f457");//Извещение о получении файла отчетности
		///<summary>
		///Протокол
		///</summary>
		public static readonly Guid ПротоколВходногоКонтроляОтчетностиФСГС = new Guid("47f3eba4-63a4-dea5-4500-2ac8fec3cfc8");//Протокол входного контроля отчетности
		///<summary>
		///ПротоколИзвещение
		///</summary>
		public static readonly Guid ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС = new Guid("9f84b5a3-f5d3-1300-49f5-f4cfe0f957ee");//Извещение о получении респондентом протокола входного контроля отчетности
		///<summary>
		///Письмо
		///</summary>
		public static readonly Guid ПисьмоВходящееФСГС = new Guid("57ed49a9-4e8c-2215-4f2a-e8ed2d35e700");//Входящее письмо
		///<summary>
		///Извещение
		///</summary>
		public static readonly Guid ИзвещениеПисьмоВходящееФСГС = new Guid("6fc6a2a0-1366-462e-4920-ac40eb178dc6");//Извещение о получении письма респондентом
		///<summary>
		///Письмо
		///</summary>
		public static readonly Guid ПисьмоИсходящееФСГС = new Guid("3b98db85-a485-e3c1-4979-2ee2f8f34ede");//Исходящее письмо
		///<summary>
		///Извещение
		///</summary>
		public static readonly Guid ИзвещениеПисьмоИсходящееФСГС = new Guid("644f8993-0780-6eea-49f6-d2a22c5a50fa");//Извещение о получении письма органом ФСГС
		public static readonly Guid УведомлениеОбОшибкеФСГС = new Guid("c99a738a-d802-62b5-4011-f0d67840ba0a");//Уведомление об ошибке при обмене с Росстатом
		public static readonly Guid РассылкаФСГС = new Guid("e8a068ab-ffa0-40ab-4c1c-cdc0b8008219");//Рассылка органа ФСГС
		public static readonly Guid ЗаявлениеНП = new Guid("5d9c76b8-f6d9-fd0f-423d-ff132976e270");//Заявление налогоплательщика
		public static readonly Guid ИзвещениеЗаявлениеНО = new Guid("d664aa97-9a44-474d-4aef-8badd9138813");//Извещение о получении заявления
		public static readonly Guid РезультатПриемаЗаявлениеНО = new Guid("302e1fa5-2f81-9e1f-4dc3-596a197f64cc");//Результат приема заявления
		public static readonly Guid РезультатОбработкиЗаявлениеРФНО = new Guid("3e8e778f-931c-128b-46d5-46b0c8ca353b");//Результат обработки заявления
		public static readonly Guid ИзвещениеРезультатОбработкиРФНП = new Guid("29f6b2a9-1c46-cb01-4bdf-76927ad0e0b6");//Извещение о получении результата обработки заявления
		public static readonly Guid СообщениеОбОтзывеЗаявлениеРФНО = new Guid("ee545090-8290-6df8-4c05-ff3bce6d93d0");//Сообщение об отзыве заявления
		public static readonly Guid ИзвещениеОбОтзывеЗаявлениеРФНП = new Guid("0fb00db2-753d-a3bf-4edd-ea90beeabd4f");//Извещение о получении отзыва заявления
		public static readonly Guid РезультатОбработкиЗаявлениеТСНО = new Guid("569f1485-445b-6fd9-4377-ab54fd383c98");//Сообщение о несоответствиях
		public static readonly Guid ИзвещениеРезультатОбработкиТСНП = new Guid("b13acbb1-107c-57f2-4a77-7b0ec21a9aec");//Извещение о получении сообщения о  несоответствиях
		public static readonly Guid ПодтверждениеЗаявлениеНО = new Guid("5684e3ad-affb-278e-4ff6-6510a2dfd0dd");//Подтверждение даты отправки заявления
		public static readonly Guid ДокументНО = new Guid("51382a87-276e-9254-4276-c98ae5817b59");//Документ налогового органа
		public static readonly Guid ИзвещениеДокументНП = new Guid("0483acae-35b8-e4c8-4fa0-ab3a98a12771");//Извещение о получении документа налогоплательщиком
		public static readonly Guid РезультатПриемаДокументНП = new Guid("95d42d9d-c79f-7e34-499f-0dc29fc43156");//Результат приема документа налогоплательщиком
		public static readonly Guid ИзвещениеРезультатПриемаНО = new Guid("639fe492-091b-480d-4862-9406536f24d5");//Извещение о получении результата приема налоговым органом
		public static ТипыТранспортныхСообщений Получить(this ТипыТранспортныхСообщений Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ТипыТранспортныхСообщений Получить(this ТипыТранспортныхСообщений Значение, Guid Ссылка)
		{
			if(Ссылка == ПервичноеСообщениеСодержащееОтчетность)
			{
				return ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетность;
			}
			else if(Ссылка == ПодтверждениеОтправкиОтчетности)
			{
				return ТипыТранспортныхСообщений.ПодтверждениеОтправкиОтчетности;
			}
			else if(Ссылка == ПереподписанноеПодтверждениеОтправкиОтчетности)
			{
				return ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиОтчетности;
			}
			else if(Ссылка == КвитанцияОПриемеФайлаОтчетности)
			{
				return ТипыТранспортныхСообщений.КвитанцияОПриемеФайлаОтчетности;
			}
			else if(Ссылка == ПротоколВходногоКонтроляОтчетности)
			{
				return ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетности;
			}
			else if(Ссылка == ПереподписанныйПротоколВходногоКонтроляОтчетности)
			{
				return ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляОтчетности;
			}
			else if(Ссылка == УведомлениеОбУточненииНБО)
			{
				return ТипыТранспортныхСообщений.УведомлениеОбУточненииНБО;
			}
			else if(Ссылка == Протокол2НДФЛ)
			{
				return ТипыТранспортныхСообщений.Протокол2НДФЛ;
			}
			else if(Ссылка == НеформализованныйДокументНО)
			{
				return ТипыТранспортныхСообщений.НеформализованныйДокументНО;
			}
			else if(Ссылка == ПодтверждениеНаНеформализованныйДокументНО)
			{
				return ТипыТранспортныхСообщений.ПодтверждениеНаНеформализованныйДокументНО;
			}
			else if(Ссылка == НеформализованныйДокументНалогоплательщика)
			{
				return ТипыТранспортныхСообщений.НеформализованныйДокументНалогоплательщика;
			}
			else if(Ссылка == ПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика)
			{
				return ТипыТранспортныхСообщений.ПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика;
			}
			else if(Ссылка == ПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика)
			{
				return ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика;
			}
			else if(Ссылка == ПодтверждениеДоставкиНеформализованногоДокументаНалогоплательщика)
			{
				return ТипыТранспортныхСообщений.ПодтверждениеДоставкиНеформализованногоДокументаНалогоплательщика;
			}
			else if(Ссылка == ЗапросИОН)
			{
				return ТипыТранспортныхСообщений.ЗапросИОН;
			}
			else if(Ссылка == ПодтверждениеОтправкиЗапросаИОН)
			{
				return ТипыТранспортныхСообщений.ПодтверждениеОтправкиЗапросаИОН;
			}
			else if(Ссылка == ПереподписанноеПодтверждениеОтправкиЗапросаИОН)
			{
				return ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиЗапросаИОН;
			}
			else if(Ссылка == КвитанцияОПриемеЗапросаИОН)
			{
				return ТипыТранспортныхСообщений.КвитанцияОПриемеЗапросаИОН;
			}
			else if(Ссылка == ПротоколВходногоКонтроляЗапросаИОН)
			{
				return ТипыТранспортныхСообщений.ПротоколВходногоКонтроляЗапросаИОН;
			}
			else if(Ссылка == ПереподписанныйПротоколВходногоКонтроляЗапросаИОН)
			{
				return ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляЗапросаИОН;
			}
			else if(Ссылка == ОтветНаЗапросИОН)
			{
				return ТипыТранспортныхСообщений.ОтветНаЗапросИОН;
			}
			else if(Ссылка == ПереподписанныйОтветНаЗапросИОН)
			{
				return ТипыТранспортныхСообщений.ПереподписанныйОтветНаЗапросИОН;
			}
			else if(Ссылка == КритическаяОшибка)
			{
				return ТипыТранспортныхСообщений.КритическаяОшибка;
			}
			else if(Ссылка == Прочее)
			{
				return ТипыТранспортныхСообщений.Прочее;
			}
			else if(Ссылка == ПервичноеСообщениеСодержащееОтчетностьПФР)
			{
				return ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьПФР;
			}
			else if(Ссылка == ПодтверждениеПолученияОтчетностиПФР)
			{
				return ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР;
			}
			else if(Ссылка == ПротоколПФР)
			{
				return ТипыТранспортныхСообщений.ПротоколПФР;
			}
			else if(Ссылка == ПротоколКвитанцияПФР)
			{
				return ТипыТранспортныхСообщений.ПротоколКвитанцияПФР;
			}
			else if(Ссылка == УведомлениеОбОшибкеПФР)
			{
				return ТипыТранспортныхСообщений.УведомлениеОбОшибкеПФР;
			}
			else if(Ссылка == ПисьмоВходящееПФР)
			{
				return ТипыТранспортныхСообщений.ПисьмоВходящееПФР;
			}
			else if(Ссылка == ПисьмоВходящееКвитанцияПФР)
			{
				return ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР;
			}
			else if(Ссылка == ПисьмоИсходящееПФР)
			{
				return ТипыТранспортныхСообщений.ПисьмоИсходящееПФР;
			}
			else if(Ссылка == ПисьмоИсходящееКвитанцияПФР)
			{
				return ТипыТранспортныхСообщений.ПисьмоИсходящееКвитанцияПФР;
			}
			else if(Ссылка == ДекларацияНП)
			{
				return ТипыТранспортныхСообщений.ДекларацияНП;
			}
			else if(Ссылка == ПодтверждениеДекларацияНО)
			{
				return ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО;
			}
			else if(Ссылка == ИзвещениеПодтверждениеНП)
			{
				return ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП;
			}
			else if(Ссылка == ИзвещениеДекларацияНО)
			{
				return ТипыТранспортныхСообщений.ИзвещениеДекларацияНО;
			}
			else if(Ссылка == РезультатПриемаДекларацияНО)
			{
				return ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО;
			}
			else if(Ссылка == ИзвещениеРезультатПриемаНП)
			{
				return ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП;
			}
			else if(Ссылка == РезультатОбработкиДекларацияНО)
			{
				return ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО;
			}
			else if(Ссылка == ИзвещениеРезультатОбработкиНП)
			{
				return ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП;
			}
			else if(Ссылка == УведомлениеОбОшибкеФНС)
			{
				return ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС;
			}
			else if(Ссылка == Форма2НДФЛНП)
			{
				return ТипыТранспортныхСообщений.Форма2НДФЛНП;
			}
			else if(Ссылка == ПодтверждениеФорма2НДФЛНО)
			{
				return ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО;
			}
			else if(Ссылка == ИзвещениеФорма2НДФЛНО)
			{
				return ТипыТранспортныхСообщений.ИзвещениеФорма2НДФЛНО;
			}
			else if(Ссылка == РезультатПриемаФорма2НДФЛНО)
			{
				return ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО;
			}
			else if(Ссылка == ОбращениеНП)
			{
				return ТипыТранспортныхСообщений.ОбращениеНП;
			}
			else if(Ссылка == ИзвещениеОбращениеНО)
			{
				return ТипыТранспортныхСообщений.ИзвещениеОбращениеНО;
			}
			else if(Ссылка == РезультатПриемаОбращениеНО)
			{
				return ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО;
			}
			else if(Ссылка == ПодтверждениеОбращениеНО)
			{
				return ТипыТранспортныхСообщений.ПодтверждениеОбращениеНО;
			}
			else if(Ссылка == ПисьмоНО)
			{
				return ТипыТранспортныхСообщений.ПисьмоНО;
			}
			else if(Ссылка == РассылкаНО)
			{
				return ТипыТранспортныхСообщений.РассылкаНО;
			}
			else if(Ссылка == ИзвещениеПисьмоНП)
			{
				return ТипыТранспортныхСообщений.ИзвещениеПисьмоНП;
			}
			else if(Ссылка == ИзвещениеРассылкаНП)
			{
				return ТипыТранспортныхСообщений.ИзвещениеРассылкаНП;
			}
			else if(Ссылка == ЗапросНП)
			{
				return ТипыТранспортныхСообщений.ЗапросНП;
			}
			else if(Ссылка == ПодтверждениеЗапросНО)
			{
				return ТипыТранспортныхСообщений.ПодтверждениеЗапросНО;
			}
			else if(Ссылка == ИзвещениеЗапросНО)
			{
				return ТипыТранспортныхСообщений.ИзвещениеЗапросНО;
			}
			else if(Ссылка == РезультатПриемаЗапросНО)
			{
				return ТипыТранспортныхСообщений.РезультатПриемаЗапросНО;
			}
			else if(Ссылка == РезультатОбработкиЗапросНО)
			{
				return ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО;
			}
			else if(Ссылка == ПервичноеСообщениеСодержащееОтчетностьФСГС)
			{
				return ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьФСГС;
			}
			else if(Ссылка == ПодтверждениеДатыОтправкиФСГС)
			{
				return ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС;
			}
			else if(Ссылка == ИзвещениеПодтверждениеДатыОтправкиФСГС)
			{
				return ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС;
			}
			else if(Ссылка == ПереподписанноеПодтверждениеОтправкиОтчетностиФСГС)
			{
				return ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиОтчетностиФСГС;
			}
			else if(Ссылка == ИзвещениеОПолученииОтчетностиФСГС)
			{
				return ТипыТранспортныхСообщений.ИзвещениеОПолученииОтчетностиФСГС;
			}
			else if(Ссылка == ПротоколВходногоКонтроляОтчетностиФСГС)
			{
				return ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетностиФСГС;
			}
			else if(Ссылка == ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС)
			{
				return ТипыТранспортныхСообщений.ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС;
			}
			else if(Ссылка == ПисьмоВходящееФСГС)
			{
				return ТипыТранспортныхСообщений.ПисьмоВходящееФСГС;
			}
			else if(Ссылка == ИзвещениеПисьмоВходящееФСГС)
			{
				return ТипыТранспортныхСообщений.ИзвещениеПисьмоВходящееФСГС;
			}
			else if(Ссылка == ПисьмоИсходящееФСГС)
			{
				return ТипыТранспортныхСообщений.ПисьмоИсходящееФСГС;
			}
			else if(Ссылка == ИзвещениеПисьмоИсходящееФСГС)
			{
				return ТипыТранспортныхСообщений.ИзвещениеПисьмоИсходящееФСГС;
			}
			else if(Ссылка == УведомлениеОбОшибкеФСГС)
			{
				return ТипыТранспортныхСообщений.УведомлениеОбОшибкеФСГС;
			}
			else if(Ссылка == РассылкаФСГС)
			{
				return ТипыТранспортныхСообщений.РассылкаФСГС;
			}
			else if(Ссылка == ЗаявлениеНП)
			{
				return ТипыТранспортныхСообщений.ЗаявлениеНП;
			}
			else if(Ссылка == ИзвещениеЗаявлениеНО)
			{
				return ТипыТранспортныхСообщений.ИзвещениеЗаявлениеНО;
			}
			else if(Ссылка == РезультатПриемаЗаявлениеНО)
			{
				return ТипыТранспортныхСообщений.РезультатПриемаЗаявлениеНО;
			}
			else if(Ссылка == РезультатОбработкиЗаявлениеРФНО)
			{
				return ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеРФНО;
			}
			else if(Ссылка == ИзвещениеРезультатОбработкиРФНП)
			{
				return ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиРФНП;
			}
			else if(Ссылка == СообщениеОбОтзывеЗаявлениеРФНО)
			{
				return ТипыТранспортныхСообщений.СообщениеОбОтзывеЗаявлениеРФНО;
			}
			else if(Ссылка == ИзвещениеОбОтзывеЗаявлениеРФНП)
			{
				return ТипыТранспортныхСообщений.ИзвещениеОбОтзывеЗаявлениеРФНП;
			}
			else if(Ссылка == РезультатОбработкиЗаявлениеТСНО)
			{
				return ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеТСНО;
			}
			else if(Ссылка == ИзвещениеРезультатОбработкиТСНП)
			{
				return ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиТСНП;
			}
			else if(Ссылка == ПодтверждениеЗаявлениеНО)
			{
				return ТипыТранспортныхСообщений.ПодтверждениеЗаявлениеНО;
			}
			else if(Ссылка == ДокументНО)
			{
				return ТипыТранспортныхСообщений.ДокументНО;
			}
			else if(Ссылка == ИзвещениеДокументНП)
			{
				return ТипыТранспортныхСообщений.ИзвещениеДокументНП;
			}
			else if(Ссылка == РезультатПриемаДокументНП)
			{
				return ТипыТранспортныхСообщений.РезультатПриемаДокументНП;
			}
			else if(Ссылка == ИзвещениеРезультатПриемаНО)
			{
				return ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНО;
			}
			return ТипыТранспортныхСообщений.ПустаяСсылка;
		}
		public static byte[] Ключ(this ТипыТранспортныхСообщений Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ТипыТранспортныхСообщений Значение)
		{
			switch (Значение)
			{
				case ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетность: return ПервичноеСообщениеСодержащееОтчетность;
				case ТипыТранспортныхСообщений.ПодтверждениеОтправкиОтчетности: return ПодтверждениеОтправкиОтчетности;
				case ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиОтчетности: return ПереподписанноеПодтверждениеОтправкиОтчетности;
				case ТипыТранспортныхСообщений.КвитанцияОПриемеФайлаОтчетности: return КвитанцияОПриемеФайлаОтчетности;
				case ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетности: return ПротоколВходногоКонтроляОтчетности;
				case ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляОтчетности: return ПереподписанныйПротоколВходногоКонтроляОтчетности;
				case ТипыТранспортныхСообщений.УведомлениеОбУточненииНБО: return УведомлениеОбУточненииНБО;
				case ТипыТранспортныхСообщений.Протокол2НДФЛ: return Протокол2НДФЛ;
				case ТипыТранспортныхСообщений.НеформализованныйДокументНО: return НеформализованныйДокументНО;
				case ТипыТранспортныхСообщений.ПодтверждениеНаНеформализованныйДокументНО: return ПодтверждениеНаНеформализованныйДокументНО;
				case ТипыТранспортныхСообщений.НеформализованныйДокументНалогоплательщика: return НеформализованныйДокументНалогоплательщика;
				case ТипыТранспортныхСообщений.ПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика: return ПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика;
				case ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика: return ПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика;
				case ТипыТранспортныхСообщений.ПодтверждениеДоставкиНеформализованногоДокументаНалогоплательщика: return ПодтверждениеДоставкиНеформализованногоДокументаНалогоплательщика;
				case ТипыТранспортныхСообщений.ЗапросИОН: return ЗапросИОН;
				case ТипыТранспортныхСообщений.ПодтверждениеОтправкиЗапросаИОН: return ПодтверждениеОтправкиЗапросаИОН;
				case ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиЗапросаИОН: return ПереподписанноеПодтверждениеОтправкиЗапросаИОН;
				case ТипыТранспортныхСообщений.КвитанцияОПриемеЗапросаИОН: return КвитанцияОПриемеЗапросаИОН;
				case ТипыТранспортныхСообщений.ПротоколВходногоКонтроляЗапросаИОН: return ПротоколВходногоКонтроляЗапросаИОН;
				case ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляЗапросаИОН: return ПереподписанныйПротоколВходногоКонтроляЗапросаИОН;
				case ТипыТранспортныхСообщений.ОтветНаЗапросИОН: return ОтветНаЗапросИОН;
				case ТипыТранспортныхСообщений.ПереподписанныйОтветНаЗапросИОН: return ПереподписанныйОтветНаЗапросИОН;
				case ТипыТранспортныхСообщений.КритическаяОшибка: return КритическаяОшибка;
				case ТипыТранспортныхСообщений.Прочее: return Прочее;
				case ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьПФР: return ПервичноеСообщениеСодержащееОтчетностьПФР;
				case ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР: return ПодтверждениеПолученияОтчетностиПФР;
				case ТипыТранспортныхСообщений.ПротоколПФР: return ПротоколПФР;
				case ТипыТранспортныхСообщений.ПротоколКвитанцияПФР: return ПротоколКвитанцияПФР;
				case ТипыТранспортныхСообщений.УведомлениеОбОшибкеПФР: return УведомлениеОбОшибкеПФР;
				case ТипыТранспортныхСообщений.ПисьмоВходящееПФР: return ПисьмоВходящееПФР;
				case ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР: return ПисьмоВходящееКвитанцияПФР;
				case ТипыТранспортныхСообщений.ПисьмоИсходящееПФР: return ПисьмоИсходящееПФР;
				case ТипыТранспортныхСообщений.ПисьмоИсходящееКвитанцияПФР: return ПисьмоИсходящееКвитанцияПФР;
				case ТипыТранспортныхСообщений.ДекларацияНП: return ДекларацияНП;
				case ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО: return ПодтверждениеДекларацияНО;
				case ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП: return ИзвещениеПодтверждениеНП;
				case ТипыТранспортныхСообщений.ИзвещениеДекларацияНО: return ИзвещениеДекларацияНО;
				case ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО: return РезультатПриемаДекларацияНО;
				case ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП: return ИзвещениеРезультатПриемаНП;
				case ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО: return РезультатОбработкиДекларацияНО;
				case ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП: return ИзвещениеРезультатОбработкиНП;
				case ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС: return УведомлениеОбОшибкеФНС;
				case ТипыТранспортныхСообщений.Форма2НДФЛНП: return Форма2НДФЛНП;
				case ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО: return ПодтверждениеФорма2НДФЛНО;
				case ТипыТранспортныхСообщений.ИзвещениеФорма2НДФЛНО: return ИзвещениеФорма2НДФЛНО;
				case ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО: return РезультатПриемаФорма2НДФЛНО;
				case ТипыТранспортныхСообщений.ОбращениеНП: return ОбращениеНП;
				case ТипыТранспортныхСообщений.ИзвещениеОбращениеНО: return ИзвещениеОбращениеНО;
				case ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО: return РезультатПриемаОбращениеНО;
				case ТипыТранспортныхСообщений.ПодтверждениеОбращениеНО: return ПодтверждениеОбращениеНО;
				case ТипыТранспортныхСообщений.ПисьмоНО: return ПисьмоНО;
				case ТипыТранспортныхСообщений.РассылкаНО: return РассылкаНО;
				case ТипыТранспортныхСообщений.ИзвещениеПисьмоНП: return ИзвещениеПисьмоНП;
				case ТипыТранспортныхСообщений.ИзвещениеРассылкаНП: return ИзвещениеРассылкаНП;
				case ТипыТранспортныхСообщений.ЗапросНП: return ЗапросНП;
				case ТипыТранспортныхСообщений.ПодтверждениеЗапросНО: return ПодтверждениеЗапросНО;
				case ТипыТранспортныхСообщений.ИзвещениеЗапросНО: return ИзвещениеЗапросНО;
				case ТипыТранспортныхСообщений.РезультатПриемаЗапросНО: return РезультатПриемаЗапросНО;
				case ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО: return РезультатОбработкиЗапросНО;
				case ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьФСГС: return ПервичноеСообщениеСодержащееОтчетностьФСГС;
				case ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС: return ПодтверждениеДатыОтправкиФСГС;
				case ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС: return ИзвещениеПодтверждениеДатыОтправкиФСГС;
				case ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиОтчетностиФСГС: return ПереподписанноеПодтверждениеОтправкиОтчетностиФСГС;
				case ТипыТранспортныхСообщений.ИзвещениеОПолученииОтчетностиФСГС: return ИзвещениеОПолученииОтчетностиФСГС;
				case ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетностиФСГС: return ПротоколВходногоКонтроляОтчетностиФСГС;
				case ТипыТранспортныхСообщений.ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС: return ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС;
				case ТипыТранспортныхСообщений.ПисьмоВходящееФСГС: return ПисьмоВходящееФСГС;
				case ТипыТранспортныхСообщений.ИзвещениеПисьмоВходящееФСГС: return ИзвещениеПисьмоВходящееФСГС;
				case ТипыТранспортныхСообщений.ПисьмоИсходящееФСГС: return ПисьмоИсходящееФСГС;
				case ТипыТранспортныхСообщений.ИзвещениеПисьмоИсходящееФСГС: return ИзвещениеПисьмоИсходящееФСГС;
				case ТипыТранспортныхСообщений.УведомлениеОбОшибкеФСГС: return УведомлениеОбОшибкеФСГС;
				case ТипыТранспортныхСообщений.РассылкаФСГС: return РассылкаФСГС;
				case ТипыТранспортныхСообщений.ЗаявлениеНП: return ЗаявлениеНП;
				case ТипыТранспортныхСообщений.ИзвещениеЗаявлениеНО: return ИзвещениеЗаявлениеНО;
				case ТипыТранспортныхСообщений.РезультатПриемаЗаявлениеНО: return РезультатПриемаЗаявлениеНО;
				case ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеРФНО: return РезультатОбработкиЗаявлениеРФНО;
				case ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиРФНП: return ИзвещениеРезультатОбработкиРФНП;
				case ТипыТранспортныхСообщений.СообщениеОбОтзывеЗаявлениеРФНО: return СообщениеОбОтзывеЗаявлениеРФНО;
				case ТипыТранспортныхСообщений.ИзвещениеОбОтзывеЗаявлениеРФНП: return ИзвещениеОбОтзывеЗаявлениеРФНП;
				case ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеТСНО: return РезультатОбработкиЗаявлениеТСНО;
				case ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиТСНП: return ИзвещениеРезультатОбработкиТСНП;
				case ТипыТранспортныхСообщений.ПодтверждениеЗаявлениеНО: return ПодтверждениеЗаявлениеНО;
				case ТипыТранспортныхСообщений.ДокументНО: return ДокументНО;
				case ТипыТранспортныхСообщений.ИзвещениеДокументНП: return ИзвещениеДокументНП;
				case ТипыТранспортныхСообщений.РезультатПриемаДокументНП: return РезультатПриемаДокументНП;
				case ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНО: return ИзвещениеРезультатПриемаНО;
			}
			return Guid.Empty;
		}
	}
}