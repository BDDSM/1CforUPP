
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
		///<summary>
		///(Упр)
		///</summary>
	public enum УсловияСкидкиНаценки
	{
		ПустаяСсылка = - 1,
		ПоВидуОплаты = 0,//По виду оплаты
		ПоДисконтнойКарте = 1,//По дисконтной карте
		ПоКоличествуТовара = 2,//Количество одного товара в документе превысило
		ПоСуммеДокумента = 3,//Сумма документа продажи превысила 
		РучнаяСкидка = 4,//Ручная скидка
		БезУсловий = 5,//Без условий
		СпецПредложение = 6,//Спец. предложение
		ПоВидуДисконтныхКарт = 7,//По виду дисконтных карт
	}
	public static partial class УсловияСкидкиНаценки_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid ПоВидуОплаты = new Guid("44e8fc96-b18c-8865-48cc-88e32b905dc2");//По виду оплаты
		public static readonly Guid ПоДисконтнойКарте = new Guid("0ca3588b-45dd-7669-4ef9-464b23aa1388");//По дисконтной карте
		public static readonly Guid ПоКоличествуТовара = new Guid("8bf4869a-19da-bd9f-4363-afec94e9657e");//Количество одного товара в документе превысило
		public static readonly Guid ПоСуммеДокумента = new Guid("b4f2ae85-4d03-301f-410e-7c20de06e028");//Сумма документа продажи превысила 
		public static readonly Guid РучнаяСкидка = new Guid("e6f61e8c-a929-88b3-4ae4-e139f53a0b12");//Ручная скидка
		public static readonly Guid БезУсловий = new Guid("133a22a3-b307-4d93-48e3-b7594ff94537");//Без условий
		public static readonly Guid СпецПредложение = new Guid("850c318e-b126-c3ee-4059-855164acff1d");//Спец. предложение
		public static readonly Guid ПоВидуДисконтныхКарт = new Guid("3114f6a6-e9ec-46ed-46ec-aa3a735174ed");//По виду дисконтных карт
		public static УсловияСкидкиНаценки Получить(this УсловияСкидкиНаценки Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static УсловияСкидкиНаценки Получить(this УсловияСкидкиНаценки Значение, Guid Ссылка)
		{
			if(Ссылка == ПоВидуОплаты)
			{
				return УсловияСкидкиНаценки.ПоВидуОплаты;
			}
			else if(Ссылка == ПоДисконтнойКарте)
			{
				return УсловияСкидкиНаценки.ПоДисконтнойКарте;
			}
			else if(Ссылка == ПоКоличествуТовара)
			{
				return УсловияСкидкиНаценки.ПоКоличествуТовара;
			}
			else if(Ссылка == ПоСуммеДокумента)
			{
				return УсловияСкидкиНаценки.ПоСуммеДокумента;
			}
			else if(Ссылка == РучнаяСкидка)
			{
				return УсловияСкидкиНаценки.РучнаяСкидка;
			}
			else if(Ссылка == БезУсловий)
			{
				return УсловияСкидкиНаценки.БезУсловий;
			}
			else if(Ссылка == СпецПредложение)
			{
				return УсловияСкидкиНаценки.СпецПредложение;
			}
			else if(Ссылка == ПоВидуДисконтныхКарт)
			{
				return УсловияСкидкиНаценки.ПоВидуДисконтныхКарт;
			}
			return УсловияСкидкиНаценки.ПустаяСсылка;
		}
		public static byte[] Ключ(this УсловияСкидкиНаценки Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this УсловияСкидкиНаценки Значение)
		{
			switch (Значение)
			{
				case УсловияСкидкиНаценки.ПоВидуОплаты: return ПоВидуОплаты;
				case УсловияСкидкиНаценки.ПоДисконтнойКарте: return ПоДисконтнойКарте;
				case УсловияСкидкиНаценки.ПоКоличествуТовара: return ПоКоличествуТовара;
				case УсловияСкидкиНаценки.ПоСуммеДокумента: return ПоСуммеДокумента;
				case УсловияСкидкиНаценки.РучнаяСкидка: return РучнаяСкидка;
				case УсловияСкидкиНаценки.БезУсловий: return БезУсловий;
				case УсловияСкидкиНаценки.СпецПредложение: return СпецПредложение;
				case УсловияСкидкиНаценки.ПоВидуДисконтныхКарт: return ПоВидуДисконтныхКарт;
			}
			return Guid.Empty;
		}
	}
}