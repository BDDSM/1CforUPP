
using System;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
		///<summary>
		///(Общ)
		///</summary>
	public enum ВидыПодразделений
	{
		ПустаяСсылка = - 1,
	///<summary>
	///(Общ)
	///</summary>
		ОсновноеПроизводство = 0,//Основное производство
	///<summary>
	///(Общ)
	///</summary>
		ВспомогательноеПроизводство = 1,//Вспомогательное производство
	///<summary>
	///(Общ)
	///</summary>
		Прочее = 2,
	}
	public static partial class ВидыПодразделений_Значения//:ПеречислениеСсылка
	{
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid ОсновноеПроизводство = new Guid("00c29f92-fa38-59bf-483c-c1e0460be683");//Основное производство
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid ВспомогательноеПроизводство = new Guid("68f1ee99-848f-be3b-47f1-fad3128f49f2");//Вспомогательное производство
		///<summary>
		///(Общ)
		///</summary>
		public static readonly Guid Прочее = new Guid("17d854a4-995e-6ca2-4f63-e3f58ff35b5c");
		public static ВидыПодразделений Получить(this ВидыПодразделений Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ВидыПодразделений Получить(this ВидыПодразделений Значение, Guid Ссылка)
		{
			if(Ссылка == ОсновноеПроизводство)
			{
				return ВидыПодразделений.ОсновноеПроизводство;
			}
			else if(Ссылка == ВспомогательноеПроизводство)
			{
				return ВидыПодразделений.ВспомогательноеПроизводство;
			}
			else if(Ссылка == Прочее)
			{
				return ВидыПодразделений.Прочее;
			}
			return ВидыПодразделений.ПустаяСсылка;
		}
		public static byte[] Ключ(this ВидыПодразделений Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ВидыПодразделений Значение)
		{
			switch (Значение)
			{
				case ВидыПодразделений.ОсновноеПроизводство: return ОсновноеПроизводство;
				case ВидыПодразделений.ВспомогательноеПроизводство: return ВспомогательноеПроизводство;
				case ВидыПодразделений.Прочее: return Прочее;
			}
			return Guid.Empty;
		}
	}
}