
using System;
using System.Runtime.Serialization;
using V82;
using V82.Перечисления;//Ссылка;
namespace V82.Перечисления//Ссылка
{
	///<summary>
	///(Упр)
	///</summary>
	[DataContract]
	public enum ВидыКонсолидированныхОтчетов
	{
		[NonSerialized]
		ПустаяСсылка = - 1,
		[EnumMember(Value = "{\"Ссылка\":\"4f48d6f9-9d91-4116-9c93-435a2959d425\", \"Представление\":\"НеКонсолидированный\"}")]
		НеКонсолидированный = 0,//Индивидуальный
		[EnumMember(Value = "{\"Ссылка\":\"1ecc81b2-9588-4d25-9d70-6938a291a1a6\", \"Представление\":\"КонсолидированныйПоИБ\"}")]
		КонсолидированныйПоИБ = 1,//Консолидированный по данным ИБ
		[EnumMember(Value = "{\"Ссылка\":\"999dca65-34b1-4c30-980a-47ce73306e7f\", \"Представление\":\"КонсолидированныйПоОтчетности\"}")]
		КонсолидированныйПоОтчетности = 2,//Консолидированный по данным отчетности
	}
	public static partial class ВидыКонсолидированныхОтчетов_Значения//:ПеречислениеСсылка
	{
		public static readonly Guid НеКонсолидированный = new Guid("5a43939c-5929-25d4-4116-9d914f48d6f9");//Индивидуальный
		public static readonly Guid КонсолидированныйПоИБ = new Guid("3869709d-91a2-a6a1-4d25-95881ecc81b2");//Консолидированный по данным ИБ
		public static readonly Guid КонсолидированныйПоОтчетности = new Guid("ce470a98-3073-7f6e-4c30-34b1999dca65");//Консолидированный по данным отчетности
		public static ВидыКонсолидированныхОтчетов Получить(this ВидыКонсолидированныхОтчетов Значение, byte[] Ссылка)
		{
			return Получить(Значение, new Guid(Ссылка));
		}
		public static ВидыКонсолидированныхОтчетов Получить(this ВидыКонсолидированныхОтчетов Значение, Guid Ссылка)
		{
			if(Ссылка == НеКонсолидированный)
			{
				return ВидыКонсолидированныхОтчетов.НеКонсолидированный;
			}
			else if(Ссылка == КонсолидированныйПоИБ)
			{
				return ВидыКонсолидированныхОтчетов.КонсолидированныйПоИБ;
			}
			else if(Ссылка == КонсолидированныйПоОтчетности)
			{
				return ВидыКонсолидированныхОтчетов.КонсолидированныйПоОтчетности;
			}
			return ВидыКонсолидированныхОтчетов.ПустаяСсылка;
		}
		public static byte[] Ключ(this ВидыКонсолидированныхОтчетов Значение)
		{
			return Ссылка(Значение).ToByteArray();
		}
		public static Guid Ссылка(this ВидыКонсолидированныхОтчетов Значение)
		{
			switch (Значение)
			{
				case ВидыКонсолидированныхОтчетов.НеКонсолидированный: return НеКонсолидированный;
				case ВидыКонсолидированныхОтчетов.КонсолидированныйПоИБ: return КонсолидированныйПоИБ;
				case ВидыКонсолидированныхОтчетов.КонсолидированныйПоОтчетности: return КонсолидированныйПоОтчетности;
			}
			return Guid.Empty;
		}
	}
}