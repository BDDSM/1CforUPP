Ext.define('Справочники.РасходыБудущихПериодов.ФормаВыбораСобытия',
{
	ПередатьСсылку: function (строкаЗначений)
	{
		var ссылка = строкаЗначений.Ссылка;
		var хранилище = Ext.create('Ext.data.Store',
		{
			autoLoad: true,
			fields: ['Код','Наименование','Родитель','Родитель.Ссылка','Родитель.Представление','ВидРБП','ВидРБП.Ссылка','ВидРБП.Представление','ДатаНачалаСписания','ДатаОкончанияСписания','НоменклатурнаяГруппа','НоменклатурнаяГруппа.Ссылка','НоменклатурнаяГруппа.Представление','ОбъектСтроительства','ОбъектСтроительства.Ссылка','ОбъектСтроительства.Представление','Подразделение','Подразделение.Ссылка','Подразделение.Представление','ПодразделениеОрганизации','ПодразделениеОрганизации.Ссылка','ПодразделениеОрганизации.Представление','Продукция','Продукция.Ссылка','Продукция.Представление','СерияПродукции','СерияПродукции.Ссылка','СерияПродукции.Представление','СтатьяЗатрат','СтатьяЗатрат.Ссылка','СтатьяЗатрат.Представление','СчетБУ','СчетБУ.Ссылка','СчетБУ.Представление','СубконтоБУ1','СубконтоБУ1.Ссылка','СубконтоБУ1.Представление','СубконтоБУ2','СубконтоБУ2.Ссылка','СубконтоБУ2.Представление','СубконтоБУ3','СубконтоБУ3.Ссылка','СубконтоБУ3.Представление','СчетНУ','СчетНУ.Ссылка','СчетНУ.Представление','СубконтоНУ1','СубконтоНУ1.Ссылка','СубконтоНУ1.Представление','СубконтоНУ2','СубконтоНУ2.Ссылка','СубконтоНУ2.Представление','СубконтоНУ3','СубконтоНУ3.Ссылка','СубконтоНУ3.Представление','Сумма','ХарактеристикаПродукции','ХарактеристикаПродукции.Ссылка','ХарактеристикаПродукции.Представление','СпособПризнанияРасходов','СпособПризнанияРасходов.Ссылка','СпособПризнанияРасходов.Представление','СпособРаспределенияЗатратНаВыпуск','СпособРаспределенияЗатратНаВыпуск.Ссылка','СпособРаспределенияЗатратНаВыпуск.Представление','СпособСтроительства','СпособСтроительства.Ссылка','СпособСтроительства.Представление','ВидАктива','ВидАктива.Ссылка','ВидАктива.Представление',],
			proxy: new Ext.data.ScriptTagProxy({ url: 'https://as-msk-n7077:1337/Справочники/РасходыБудущихПериодов/НайтиПоСсылке/' + ссылка, timeout:200}),
		});
		хранилище.load(
		{
			callback: function (records, operation, success)
			{
				Ext.require(['Справочники.РасходыБудущихПериодов.ФормаЭлемента'], function ()
				{
					var количество = хранилище.getCount();
					if (количество == 0)
					{
						var массивЗначений = строкаЗначений;
					}
					else
					{
						var массивЗначений = хранилище.data.items[0].data;
					};
					var окно = Ext.create('Справочники.РасходыБудущихПериодов.ФормаЭлемента',
					{
						Хранилище: массивЗначений.Родитель,
					});
					var форма = окно.down('form');
					форма.getForm().setValues(массивЗначений);
					if (окно)
					{
						окно.show();
						return окно;
					}
				});
			},
			scope: this
		});
	}
});