
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//PogashenieZadolzhennostiPodotchetnykhLic
	[Маршрут("Документы/ПогашениеЗадолженностиПодотчетныхЛиц","")]
	public class ПогашениеЗадолженностиПодотчетныхЛицЗапрос: V82.ДокументыСсылка.ПогашениеЗадолженностиПодотчетныхЛиц,IReturn<ПогашениеЗадолженностиПодотчетныхЛицЗапрос>
	{
	}
	[Маршрут("Документы/ПогашениеЗадолженностиПодотчетныхЛиц/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ПогашениеЗадолженностиПодотчетныхЛиц/ПоСсылке","{Ссылка}")]
	public class ПогашениеЗадолженностиПодотчетныхЛицНайтиПоСсылке: V82.ДокументыСсылка.ПогашениеЗадолженностиПодотчетныхЛиц,IReturn<ПогашениеЗадолженностиПодотчетныхЛицНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ПогашениеЗадолженностиПодотчетныхЛиц/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ПогашениеЗадолженностиПодотчетныхЛиц/ПоНомеру","{Номер}")]
	public class ПогашениеЗадолженностиПодотчетныхЛицНайтиПоНомеру: V82.ДокументыСсылка.ПогашениеЗадолженностиПодотчетныхЛиц,IReturn<ПогашениеЗадолженностиПодотчетныхЛицНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ПогашениеЗадолженностиПодотчетныхЛиц/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ПогашениеЗадолженностиПодотчетныхЛиц/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПогашениеЗадолженностиПодотчетныхЛиц/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ПогашениеЗадолженностиПодотчетныхЛицВыбратьПоСсылке: V82.ДокументыСсылка.ПогашениеЗадолженностиПодотчетныхЛиц,IReturn<ПогашениеЗадолженностиПодотчетныхЛицВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ПогашениеЗадолженностиПодотчетныхЛиц/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ПогашениеЗадолженностиПодотчетныхЛиц/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПогашениеЗадолженностиПодотчетныхЛиц/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ПогашениеЗадолженностиПодотчетныхЛицВыбратьПоНомеру: V82.ДокументыСсылка.ПогашениеЗадолженностиПодотчетныхЛиц,IReturn<ПогашениеЗадолженностиПодотчетныхЛицВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ПогашениеЗадолженностиПодотчетныхЛиц/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ПогашениеЗадолженностиПодотчетныхЛицСтраницаПоСсылке: V82.ДокументыСсылка.ПогашениеЗадолженностиПодотчетныхЛиц,IReturn<ПогашениеЗадолженностиПодотчетныхЛицСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ПогашениеЗадолженностиПодотчетныхЛиц/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ПогашениеЗадолженностиПодотчетныхЛицСтраницаПоНомеру: V82.ДокументыСсылка.ПогашениеЗадолженностиПодотчетныхЛиц,IReturn<ПогашениеЗадолженностиПодотчетныхЛицСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ПогашениеЗадолженностиПодотчетныхЛицОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ПогашениеЗадолженностиПодотчетныхЛицСервис : Service
	{
		
		public object Get(ПогашениеЗадолженностиПодотчетныхЛицЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ПогашениеЗадолженностиПодотчетныхЛицНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ПогашениеЗадолженностиПодотчетныхЛиц.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ПогашениеЗадолженностиПодотчетныхЛицОтвет() { Ответ = "ПогашениеЗадолженностиПодотчетныхЛиц c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПогашениеЗадолженностиПодотчетныхЛицНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ПогашениеЗадолженностиПодотчетныхЛиц.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ПогашениеЗадолженностиПодотчетныхЛицОтвет() {Ответ = "ПогашениеЗадолженностиПодотчетныхЛиц c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПогашениеЗадолженностиПодотчетныхЛицВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ПогашениеЗадолженностиПодотчетныхЛиц.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ПогашениеЗадолженностиПодотчетныхЛицВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ПогашениеЗадолженностиПодотчетныхЛицСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ПогашениеЗадолженностиПодотчетныхЛицСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ПогашениеЗадолженностиПодотчетныхЛицЗапрос Запрос)
		{
			return new ПогашениеЗадолженностиПодотчетныхЛицОтвет {Ответ = "ПогашениеЗадолженностиПодотчетныхЛиц, "};
		}

		public object Post(ПогашениеЗадолженностиПодотчетныхЛицЗапрос ЗапросПогашениеЗадолженностиПодотчетныхЛиц)
		{
			var Ссылка = (ДокументыСсылка.ПогашениеЗадолженностиПодотчетныхЛиц)ЗапросПогашениеЗадолженностиПодотчетныхЛиц;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}