
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//UstanovkaPorogovNakopitelnykhSkidok
	[Маршрут("Документы/УстановкаПороговНакопительныхСкидок","")]
	public class УстановкаПороговНакопительныхСкидокЗапрос: V82.ДокументыСсылка.УстановкаПороговНакопительныхСкидок,IReturn<УстановкаПороговНакопительныхСкидокЗапрос>
	{
	}
	[Маршрут("Документы/УстановкаПороговНакопительныхСкидок/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/УстановкаПороговНакопительныхСкидок/ПоСсылке","{Ссылка}")]
	public class УстановкаПороговНакопительныхСкидокНайтиПоСсылке: V82.ДокументыСсылка.УстановкаПороговНакопительныхСкидок,IReturn<УстановкаПороговНакопительныхСкидокНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/УстановкаПороговНакопительныхСкидок/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/УстановкаПороговНакопительныхСкидок/ПоНомеру","{Номер}")]
	public class УстановкаПороговНакопительныхСкидокНайтиПоНомеру: V82.ДокументыСсылка.УстановкаПороговНакопительныхСкидок,IReturn<УстановкаПороговНакопительныхСкидокНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/УстановкаПороговНакопительныхСкидок/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/УстановкаПороговНакопительныхСкидок/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/УстановкаПороговНакопительныхСкидок/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class УстановкаПороговНакопительныхСкидокВыбратьПоСсылке: V82.ДокументыСсылка.УстановкаПороговНакопительныхСкидок,IReturn<УстановкаПороговНакопительныхСкидокВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/УстановкаПороговНакопительныхСкидок/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/УстановкаПороговНакопительныхСкидок/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/УстановкаПороговНакопительныхСкидок/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class УстановкаПороговНакопительныхСкидокВыбратьПоНомеру: V82.ДокументыСсылка.УстановкаПороговНакопительныхСкидок,IReturn<УстановкаПороговНакопительныхСкидокВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/УстановкаПороговНакопительныхСкидок/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class УстановкаПороговНакопительныхСкидокСтраницаПоСсылке: V82.ДокументыСсылка.УстановкаПороговНакопительныхСкидок,IReturn<УстановкаПороговНакопительныхСкидокСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/УстановкаПороговНакопительныхСкидок/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class УстановкаПороговНакопительныхСкидокСтраницаПоНомеру: V82.ДокументыСсылка.УстановкаПороговНакопительныхСкидок,IReturn<УстановкаПороговНакопительныхСкидокСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class УстановкаПороговНакопительныхСкидокОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class УстановкаПороговНакопительныхСкидокСервис : Service
	{
		
		public object Get(УстановкаПороговНакопительныхСкидокЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(УстановкаПороговНакопительныхСкидокНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.УстановкаПороговНакопительныхСкидок.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new УстановкаПороговНакопительныхСкидокОтвет() { Ответ = "УстановкаПороговНакопительныхСкидок c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(УстановкаПороговНакопительныхСкидокНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.УстановкаПороговНакопительныхСкидок.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new УстановкаПороговНакопительныхСкидокОтвет() {Ответ = "УстановкаПороговНакопительныхСкидок c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(УстановкаПороговНакопительныхСкидокВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.УстановкаПороговНакопительныхСкидок.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(УстановкаПороговНакопительныхСкидокВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(УстановкаПороговНакопительныхСкидокСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(УстановкаПороговНакопительныхСкидокСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(УстановкаПороговНакопительныхСкидокЗапрос Запрос)
		{
			return new УстановкаПороговНакопительныхСкидокОтвет {Ответ = "УстановкаПороговНакопительныхСкидок, "};
		}

		public object Post(УстановкаПороговНакопительныхСкидокЗапрос ЗапросУстановкаПороговНакопительныхСкидок)
		{
			var Ссылка = (ДокументыСсылка.УстановкаПороговНакопительныхСкидок)ЗапросУстановкаПороговНакопительныхСкидок;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}