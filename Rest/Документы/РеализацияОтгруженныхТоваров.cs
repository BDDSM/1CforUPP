
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//RealizaciyaOtgruzhennykhTovarov
	[Маршрут("Документы/РеализацияОтгруженныхТоваров","")]
	public class РеализацияОтгруженныхТоваровЗапрос: V82.ДокументыСсылка.РеализацияОтгруженныхТоваров,IReturn<РеализацияОтгруженныхТоваровЗапрос>
	{
	}
	[Маршрут("Документы/РеализацияОтгруженныхТоваров/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/РеализацияОтгруженныхТоваров/ПоСсылке","{Ссылка}")]
	public class РеализацияОтгруженныхТоваровНайтиПоСсылке: V82.ДокументыСсылка.РеализацияОтгруженныхТоваров,IReturn<РеализацияОтгруженныхТоваровНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/РеализацияОтгруженныхТоваров/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/РеализацияОтгруженныхТоваров/ПоНомеру","{Номер}")]
	public class РеализацияОтгруженныхТоваровНайтиПоНомеру: V82.ДокументыСсылка.РеализацияОтгруженныхТоваров,IReturn<РеализацияОтгруженныхТоваровНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/РеализацияОтгруженныхТоваров/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/РеализацияОтгруженныхТоваров/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/РеализацияОтгруженныхТоваров/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class РеализацияОтгруженныхТоваровВыбратьПоСсылке: V82.ДокументыСсылка.РеализацияОтгруженныхТоваров,IReturn<РеализацияОтгруженныхТоваровВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/РеализацияОтгруженныхТоваров/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/РеализацияОтгруженныхТоваров/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/РеализацияОтгруженныхТоваров/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class РеализацияОтгруженныхТоваровВыбратьПоНомеру: V82.ДокументыСсылка.РеализацияОтгруженныхТоваров,IReturn<РеализацияОтгруженныхТоваровВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/РеализацияОтгруженныхТоваров/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class РеализацияОтгруженныхТоваровСтраницаПоСсылке: V82.ДокументыСсылка.РеализацияОтгруженныхТоваров,IReturn<РеализацияОтгруженныхТоваровСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/РеализацияОтгруженныхТоваров/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class РеализацияОтгруженныхТоваровСтраницаПоНомеру: V82.ДокументыСсылка.РеализацияОтгруженныхТоваров,IReturn<РеализацияОтгруженныхТоваровСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class РеализацияОтгруженныхТоваровОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class РеализацияОтгруженныхТоваровСервис : Service
	{
		
		public object Get(РеализацияОтгруженныхТоваровЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(РеализацияОтгруженныхТоваровНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.РеализацияОтгруженныхТоваров.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new РеализацияОтгруженныхТоваровОтвет() { Ответ = "РеализацияОтгруженныхТоваров c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(РеализацияОтгруженныхТоваровНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.РеализацияОтгруженныхТоваров.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new РеализацияОтгруженныхТоваровОтвет() {Ответ = "РеализацияОтгруженныхТоваров c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(РеализацияОтгруженныхТоваровВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.РеализацияОтгруженныхТоваров.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(РеализацияОтгруженныхТоваровВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(РеализацияОтгруженныхТоваровСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(РеализацияОтгруженныхТоваровСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(РеализацияОтгруженныхТоваровЗапрос Запрос)
		{
			return new РеализацияОтгруженныхТоваровОтвет {Ответ = "РеализацияОтгруженныхТоваров, "};
		}

		public object Post(РеализацияОтгруженныхТоваровЗапрос ЗапросРеализацияОтгруженныхТоваров)
		{
			var Ссылка = (ДокументыСсылка.РеализацияОтгруженныхТоваров)ЗапросРеализацияОтгруженныхТоваров;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}