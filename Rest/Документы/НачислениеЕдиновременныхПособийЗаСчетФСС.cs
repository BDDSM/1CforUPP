
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//NachislenieEdinovremennykhPosobijjZaSchetFSS
	[Маршрут("Документы/НачислениеЕдиновременныхПособийЗаСчетФСС","")]
	public class НачислениеЕдиновременныхПособийЗаСчетФССЗапрос: V82.ДокументыСсылка.НачислениеЕдиновременныхПособийЗаСчетФСС,IReturn<НачислениеЕдиновременныхПособийЗаСчетФССЗапрос>
	{
	}
	[Маршрут("Документы/НачислениеЕдиновременныхПособийЗаСчетФСС/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/НачислениеЕдиновременныхПособийЗаСчетФСС/ПоСсылке","{Ссылка}")]
	public class НачислениеЕдиновременныхПособийЗаСчетФССНайтиПоСсылке: V82.ДокументыСсылка.НачислениеЕдиновременныхПособийЗаСчетФСС,IReturn<НачислениеЕдиновременныхПособийЗаСчетФССНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/НачислениеЕдиновременныхПособийЗаСчетФСС/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/НачислениеЕдиновременныхПособийЗаСчетФСС/ПоНомеру","{Номер}")]
	public class НачислениеЕдиновременныхПособийЗаСчетФССНайтиПоНомеру: V82.ДокументыСсылка.НачислениеЕдиновременныхПособийЗаСчетФСС,IReturn<НачислениеЕдиновременныхПособийЗаСчетФССНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/НачислениеЕдиновременныхПособийЗаСчетФСС/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/НачислениеЕдиновременныхПособийЗаСчетФСС/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/НачислениеЕдиновременныхПособийЗаСчетФСС/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class НачислениеЕдиновременныхПособийЗаСчетФССВыбратьПоСсылке: V82.ДокументыСсылка.НачислениеЕдиновременныхПособийЗаСчетФСС,IReturn<НачислениеЕдиновременныхПособийЗаСчетФССВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/НачислениеЕдиновременныхПособийЗаСчетФСС/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/НачислениеЕдиновременныхПособийЗаСчетФСС/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/НачислениеЕдиновременныхПособийЗаСчетФСС/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class НачислениеЕдиновременныхПособийЗаСчетФССВыбратьПоНомеру: V82.ДокументыСсылка.НачислениеЕдиновременныхПособийЗаСчетФСС,IReturn<НачислениеЕдиновременныхПособийЗаСчетФССВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/НачислениеЕдиновременныхПособийЗаСчетФСС/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class НачислениеЕдиновременныхПособийЗаСчетФСССтраницаПоСсылке: V82.ДокументыСсылка.НачислениеЕдиновременныхПособийЗаСчетФСС,IReturn<НачислениеЕдиновременныхПособийЗаСчетФСССтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/НачислениеЕдиновременныхПособийЗаСчетФСС/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class НачислениеЕдиновременныхПособийЗаСчетФСССтраницаПоНомеру: V82.ДокументыСсылка.НачислениеЕдиновременныхПособийЗаСчетФСС,IReturn<НачислениеЕдиновременныхПособийЗаСчетФСССтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class НачислениеЕдиновременныхПособийЗаСчетФССОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class НачислениеЕдиновременныхПособийЗаСчетФСССервис : Service
	{
		
		public object Get(НачислениеЕдиновременныхПособийЗаСчетФССЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(НачислениеЕдиновременныхПособийЗаСчетФССНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.НачислениеЕдиновременныхПособийЗаСчетФСС.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new НачислениеЕдиновременныхПособийЗаСчетФССОтвет() { Ответ = "НачислениеЕдиновременныхПособийЗаСчетФСС c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(НачислениеЕдиновременныхПособийЗаСчетФССНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.НачислениеЕдиновременныхПособийЗаСчетФСС.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new НачислениеЕдиновременныхПособийЗаСчетФССОтвет() {Ответ = "НачислениеЕдиновременныхПособийЗаСчетФСС c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(НачислениеЕдиновременныхПособийЗаСчетФССВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.НачислениеЕдиновременныхПособийЗаСчетФСС.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(НачислениеЕдиновременныхПособийЗаСчетФССВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(НачислениеЕдиновременныхПособийЗаСчетФСССтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(НачислениеЕдиновременныхПособийЗаСчетФСССтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(НачислениеЕдиновременныхПособийЗаСчетФССЗапрос Запрос)
		{
			return new НачислениеЕдиновременныхПособийЗаСчетФССОтвет {Ответ = "НачислениеЕдиновременныхПособийЗаСчетФСС, "};
		}

		public object Post(НачислениеЕдиновременныхПособийЗаСчетФССЗапрос ЗапросНачислениеЕдиновременныхПособийЗаСчетФСС)
		{
			var Ссылка = (ДокументыСсылка.НачислениеЕдиновременныхПособийЗаСчетФСС)ЗапросНачислениеЕдиновременныхПособийЗаСчетФСС;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}