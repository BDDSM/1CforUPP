
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//RaskhodnyjjKassovyjjOrder
	[Маршрут("Документы/РасходныйКассовыйОрдер","")]
	public class РасходныйКассовыйОрдерЗапрос: V82.ДокументыСсылка.РасходныйКассовыйОрдер,IReturn<РасходныйКассовыйОрдерЗапрос>
	{
	}
	[Маршрут("Документы/РасходныйКассовыйОрдер/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/РасходныйКассовыйОрдер/ПоСсылке","{Ссылка}")]
	public class РасходныйКассовыйОрдерНайтиПоСсылке: V82.ДокументыСсылка.РасходныйКассовыйОрдер,IReturn<РасходныйКассовыйОрдерНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/РасходныйКассовыйОрдер/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/РасходныйКассовыйОрдер/ПоНомеру","{Номер}")]
	public class РасходныйКассовыйОрдерНайтиПоНомеру: V82.ДокументыСсылка.РасходныйКассовыйОрдер,IReturn<РасходныйКассовыйОрдерНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/РасходныйКассовыйОрдер/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/РасходныйКассовыйОрдер/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/РасходныйКассовыйОрдер/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class РасходныйКассовыйОрдерВыбратьПоСсылке: V82.ДокументыСсылка.РасходныйКассовыйОрдер,IReturn<РасходныйКассовыйОрдерВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/РасходныйКассовыйОрдер/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/РасходныйКассовыйОрдер/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/РасходныйКассовыйОрдер/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class РасходныйКассовыйОрдерВыбратьПоНомеру: V82.ДокументыСсылка.РасходныйКассовыйОрдер,IReturn<РасходныйКассовыйОрдерВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/РасходныйКассовыйОрдер/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class РасходныйКассовыйОрдерСтраницаПоСсылке: V82.ДокументыСсылка.РасходныйКассовыйОрдер,IReturn<РасходныйКассовыйОрдерСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/РасходныйКассовыйОрдер/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class РасходныйКассовыйОрдерСтраницаПоНомеру: V82.ДокументыСсылка.РасходныйКассовыйОрдер,IReturn<РасходныйКассовыйОрдерСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class РасходныйКассовыйОрдерОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class РасходныйКассовыйОрдерСервис : Service
	{
		
		public object Get(РасходныйКассовыйОрдерЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(РасходныйКассовыйОрдерНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.РасходныйКассовыйОрдер.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new РасходныйКассовыйОрдерОтвет() { Ответ = "РасходныйКассовыйОрдер c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(РасходныйКассовыйОрдерНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.РасходныйКассовыйОрдер.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new РасходныйКассовыйОрдерОтвет() {Ответ = "РасходныйКассовыйОрдер c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(РасходныйКассовыйОрдерВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.РасходныйКассовыйОрдер.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(РасходныйКассовыйОрдерВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(РасходныйКассовыйОрдерСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(РасходныйКассовыйОрдерСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(РасходныйКассовыйОрдерЗапрос Запрос)
		{
			return new РасходныйКассовыйОрдерОтвет {Ответ = "РасходныйКассовыйОрдер, "};
		}

		public object Post(РасходныйКассовыйОрдерЗапрос ЗапросРасходныйКассовыйОрдер)
		{
			var Ссылка = (ДокументыСсылка.РасходныйКассовыйОрдер)ЗапросРасходныйКассовыйОрдер;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}