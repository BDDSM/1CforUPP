
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//PerenosDannykh
	[Маршрут("Документы/ПереносДанных","")]
	public class ПереносДанныхЗапрос: V82.ДокументыСсылка.ПереносДанных,IReturn<ПереносДанныхЗапрос>
	{
	}
	[Маршрут("Документы/ПереносДанных/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ПереносДанных/ПоСсылке","{Ссылка}")]
	public class ПереносДанныхНайтиПоСсылке: V82.ДокументыСсылка.ПереносДанных,IReturn<ПереносДанныхНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ПереносДанных/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ПереносДанных/ПоНомеру","{Номер}")]
	public class ПереносДанныхНайтиПоНомеру: V82.ДокументыСсылка.ПереносДанных,IReturn<ПереносДанныхНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ПереносДанных/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ПереносДанных/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПереносДанных/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ПереносДанныхВыбратьПоСсылке: V82.ДокументыСсылка.ПереносДанных,IReturn<ПереносДанныхВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ПереносДанных/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ПереносДанных/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПереносДанных/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ПереносДанныхВыбратьПоНомеру: V82.ДокументыСсылка.ПереносДанных,IReturn<ПереносДанныхВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ПереносДанных/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ПереносДанныхСтраницаПоСсылке: V82.ДокументыСсылка.ПереносДанных,IReturn<ПереносДанныхСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ПереносДанных/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ПереносДанныхСтраницаПоНомеру: V82.ДокументыСсылка.ПереносДанных,IReturn<ПереносДанныхСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ПереносДанныхОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ПереносДанныхСервис : Service
	{
		
		public object Get(ПереносДанныхЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ПереносДанныхНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ПереносДанных.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ПереносДанныхОтвет() { Ответ = "ПереносДанных c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПереносДанныхНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ПереносДанных.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ПереносДанныхОтвет() {Ответ = "ПереносДанных c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПереносДанныхВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ПереносДанных.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ПереносДанныхВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ПереносДанныхСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ПереносДанныхСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ПереносДанныхЗапрос Запрос)
		{
			return new ПереносДанныхОтвет {Ответ = "ПереносДанных, "};
		}

		public object Post(ПереносДанныхЗапрос ЗапросПереносДанных)
		{
			var Ссылка = (ДокументыСсылка.ПереносДанных)ЗапросПереносДанных;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}