
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//AkkreditivPeredannyjj
	[Маршрут("Документы/АккредитивПереданный","")]
	public class АккредитивПереданныйЗапрос: V82.ДокументыСсылка.АккредитивПереданный,IReturn<АккредитивПереданныйЗапрос>
	{
	}
	[Маршрут("Документы/АккредитивПереданный/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/АккредитивПереданный/ПоСсылке","{Ссылка}")]
	public class АккредитивПереданныйНайтиПоСсылке: V82.ДокументыСсылка.АккредитивПереданный,IReturn<АккредитивПереданныйНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/АккредитивПереданный/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/АккредитивПереданный/ПоНомеру","{Номер}")]
	public class АккредитивПереданныйНайтиПоНомеру: V82.ДокументыСсылка.АккредитивПереданный,IReturn<АккредитивПереданныйНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/АккредитивПереданный/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/АккредитивПереданный/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/АккредитивПереданный/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class АккредитивПереданныйВыбратьПоСсылке: V82.ДокументыСсылка.АккредитивПереданный,IReturn<АккредитивПереданныйВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/АккредитивПереданный/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/АккредитивПереданный/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/АккредитивПереданный/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class АккредитивПереданныйВыбратьПоНомеру: V82.ДокументыСсылка.АккредитивПереданный,IReturn<АккредитивПереданныйВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/АккредитивПереданный/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class АккредитивПереданныйСтраницаПоСсылке: V82.ДокументыСсылка.АккредитивПереданный,IReturn<АккредитивПереданныйСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/АккредитивПереданный/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class АккредитивПереданныйСтраницаПоНомеру: V82.ДокументыСсылка.АккредитивПереданный,IReturn<АккредитивПереданныйСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class АккредитивПереданныйОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class АккредитивПереданныйСервис : Service
	{
		
		public object Get(АккредитивПереданныйЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(АккредитивПереданныйНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.АккредитивПереданный.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new АккредитивПереданныйОтвет() { Ответ = "АккредитивПереданный c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(АккредитивПереданныйНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.АккредитивПереданный.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new АккредитивПереданныйОтвет() {Ответ = "АккредитивПереданный c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(АккредитивПереданныйВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.АккредитивПереданный.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(АккредитивПереданныйВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(АккредитивПереданныйСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(АккредитивПереданныйСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(АккредитивПереданныйЗапрос Запрос)
		{
			return new АккредитивПереданныйОтвет {Ответ = "АккредитивПереданный, "};
		}

		public object Post(АккредитивПереданныйЗапрос ЗапросАккредитивПереданный)
		{
			var Ссылка = (ДокументыСсылка.АккредитивПереданный)ЗапросАккредитивПереданный;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}