
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//VvodPostoyannogoNachisleniyaIliUderzhaniya
	[Маршрут("Документы/ВводПостоянногоНачисленияИлиУдержания","")]
	public class ВводПостоянногоНачисленияИлиУдержанияЗапрос: V82.ДокументыСсылка.ВводПостоянногоНачисленияИлиУдержания,IReturn<ВводПостоянногоНачисленияИлиУдержанияЗапрос>
	{
	}
	[Маршрут("Документы/ВводПостоянногоНачисленияИлиУдержания/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ВводПостоянногоНачисленияИлиУдержания/ПоСсылке","{Ссылка}")]
	public class ВводПостоянногоНачисленияИлиУдержанияНайтиПоСсылке: V82.ДокументыСсылка.ВводПостоянногоНачисленияИлиУдержания,IReturn<ВводПостоянногоНачисленияИлиУдержанияНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ВводПостоянногоНачисленияИлиУдержания/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ВводПостоянногоНачисленияИлиУдержания/ПоНомеру","{Номер}")]
	public class ВводПостоянногоНачисленияИлиУдержанияНайтиПоНомеру: V82.ДокументыСсылка.ВводПостоянногоНачисленияИлиУдержания,IReturn<ВводПостоянногоНачисленияИлиУдержанияНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ВводПостоянногоНачисленияИлиУдержания/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ВводПостоянногоНачисленияИлиУдержания/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ВводПостоянногоНачисленияИлиУдержания/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ВводПостоянногоНачисленияИлиУдержанияВыбратьПоСсылке: V82.ДокументыСсылка.ВводПостоянногоНачисленияИлиУдержания,IReturn<ВводПостоянногоНачисленияИлиУдержанияВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ВводПостоянногоНачисленияИлиУдержания/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ВводПостоянногоНачисленияИлиУдержания/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ВводПостоянногоНачисленияИлиУдержания/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ВводПостоянногоНачисленияИлиУдержанияВыбратьПоНомеру: V82.ДокументыСсылка.ВводПостоянногоНачисленияИлиУдержания,IReturn<ВводПостоянногоНачисленияИлиУдержанияВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ВводПостоянногоНачисленияИлиУдержания/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ВводПостоянногоНачисленияИлиУдержанияСтраницаПоСсылке: V82.ДокументыСсылка.ВводПостоянногоНачисленияИлиУдержания,IReturn<ВводПостоянногоНачисленияИлиУдержанияСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ВводПостоянногоНачисленияИлиУдержания/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ВводПостоянногоНачисленияИлиУдержанияСтраницаПоНомеру: V82.ДокументыСсылка.ВводПостоянногоНачисленияИлиУдержания,IReturn<ВводПостоянногоНачисленияИлиУдержанияСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ВводПостоянногоНачисленияИлиУдержанияОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ВводПостоянногоНачисленияИлиУдержанияСервис : Service
	{
		
		public object Get(ВводПостоянногоНачисленияИлиУдержанияЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ВводПостоянногоНачисленияИлиУдержанияНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ВводПостоянногоНачисленияИлиУдержания.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ВводПостоянногоНачисленияИлиУдержанияОтвет() { Ответ = "ВводПостоянногоНачисленияИлиУдержания c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ВводПостоянногоНачисленияИлиУдержанияНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ВводПостоянногоНачисленияИлиУдержания.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ВводПостоянногоНачисленияИлиУдержанияОтвет() {Ответ = "ВводПостоянногоНачисленияИлиУдержания c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ВводПостоянногоНачисленияИлиУдержанияВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ВводПостоянногоНачисленияИлиУдержания.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ВводПостоянногоНачисленияИлиУдержанияВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ВводПостоянногоНачисленияИлиУдержанияСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ВводПостоянногоНачисленияИлиУдержанияСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ВводПостоянногоНачисленияИлиУдержанияЗапрос Запрос)
		{
			return new ВводПостоянногоНачисленияИлиУдержанияОтвет {Ответ = "ВводПостоянногоНачисленияИлиУдержания, "};
		}

		public object Post(ВводПостоянногоНачисленияИлиУдержанияЗапрос ЗапросВводПостоянногоНачисленияИлиУдержания)
		{
			var Ссылка = (ДокументыСсылка.ВводПостоянногоНачисленияИлиУдержания)ЗапросВводПостоянногоНачисленияИлиУдержания;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}