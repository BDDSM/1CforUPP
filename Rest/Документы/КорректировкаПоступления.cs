
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//KorrektirovkaPostupleniya
	[Маршрут("Документы/КорректировкаПоступления","")]
	public class КорректировкаПоступленияЗапрос: V82.ДокументыСсылка.КорректировкаПоступления,IReturn<КорректировкаПоступленияЗапрос>
	{
	}
	[Маршрут("Документы/КорректировкаПоступления/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/КорректировкаПоступления/ПоСсылке","{Ссылка}")]
	public class КорректировкаПоступленияНайтиПоСсылке: V82.ДокументыСсылка.КорректировкаПоступления,IReturn<КорректировкаПоступленияНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/КорректировкаПоступления/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/КорректировкаПоступления/ПоНомеру","{Номер}")]
	public class КорректировкаПоступленияНайтиПоНомеру: V82.ДокументыСсылка.КорректировкаПоступления,IReturn<КорректировкаПоступленияНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/КорректировкаПоступления/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/КорректировкаПоступления/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/КорректировкаПоступления/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class КорректировкаПоступленияВыбратьПоСсылке: V82.ДокументыСсылка.КорректировкаПоступления,IReturn<КорректировкаПоступленияВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/КорректировкаПоступления/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/КорректировкаПоступления/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/КорректировкаПоступления/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class КорректировкаПоступленияВыбратьПоНомеру: V82.ДокументыСсылка.КорректировкаПоступления,IReturn<КорректировкаПоступленияВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/КорректировкаПоступления/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class КорректировкаПоступленияСтраницаПоСсылке: V82.ДокументыСсылка.КорректировкаПоступления,IReturn<КорректировкаПоступленияСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/КорректировкаПоступления/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class КорректировкаПоступленияСтраницаПоНомеру: V82.ДокументыСсылка.КорректировкаПоступления,IReturn<КорректировкаПоступленияСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class КорректировкаПоступленияОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class КорректировкаПоступленияСервис : Service
	{
		
		public object Get(КорректировкаПоступленияЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(КорректировкаПоступленияНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.КорректировкаПоступления.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new КорректировкаПоступленияОтвет() { Ответ = "КорректировкаПоступления c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(КорректировкаПоступленияНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.КорректировкаПоступления.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new КорректировкаПоступленияОтвет() {Ответ = "КорректировкаПоступления c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(КорректировкаПоступленияВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.КорректировкаПоступления.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(КорректировкаПоступленияВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(КорректировкаПоступленияСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(КорректировкаПоступленияСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(КорректировкаПоступленияЗапрос Запрос)
		{
			return new КорректировкаПоступленияОтвет {Ответ = "КорректировкаПоступления, "};
		}

		public object Post(КорректировкаПоступленияЗапрос ЗапросКорректировкаПоступления)
		{
			var Ссылка = (ДокументыСсылка.КорректировкаПоступления)ЗапросКорректировкаПоступления;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}