
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//VvodIndividualnykhGrafikovRabotyOrganizacii
	[Маршрут("Документы/ВводИндивидуальныхГрафиковРаботыОрганизации","")]
	public class ВводИндивидуальныхГрафиковРаботыОрганизацииЗапрос: V82.ДокументыСсылка.ВводИндивидуальныхГрафиковРаботыОрганизации,IReturn<ВводИндивидуальныхГрафиковРаботыОрганизацииЗапрос>
	{
	}
	[Маршрут("Документы/ВводИндивидуальныхГрафиковРаботыОрганизации/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ВводИндивидуальныхГрафиковРаботыОрганизации/ПоСсылке","{Ссылка}")]
	public class ВводИндивидуальныхГрафиковРаботыОрганизацииНайтиПоСсылке: V82.ДокументыСсылка.ВводИндивидуальныхГрафиковРаботыОрганизации,IReturn<ВводИндивидуальныхГрафиковРаботыОрганизацииНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ВводИндивидуальныхГрафиковРаботыОрганизации/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ВводИндивидуальныхГрафиковРаботыОрганизации/ПоНомеру","{Номер}")]
	public class ВводИндивидуальныхГрафиковРаботыОрганизацииНайтиПоНомеру: V82.ДокументыСсылка.ВводИндивидуальныхГрафиковРаботыОрганизации,IReturn<ВводИндивидуальныхГрафиковРаботыОрганизацииНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ВводИндивидуальныхГрафиковРаботыОрганизации/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ВводИндивидуальныхГрафиковРаботыОрганизации/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ВводИндивидуальныхГрафиковРаботыОрганизации/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ВводИндивидуальныхГрафиковРаботыОрганизацииВыбратьПоСсылке: V82.ДокументыСсылка.ВводИндивидуальныхГрафиковРаботыОрганизации,IReturn<ВводИндивидуальныхГрафиковРаботыОрганизацииВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ВводИндивидуальныхГрафиковРаботыОрганизации/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ВводИндивидуальныхГрафиковРаботыОрганизации/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ВводИндивидуальныхГрафиковРаботыОрганизации/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ВводИндивидуальныхГрафиковРаботыОрганизацииВыбратьПоНомеру: V82.ДокументыСсылка.ВводИндивидуальныхГрафиковРаботыОрганизации,IReturn<ВводИндивидуальныхГрафиковРаботыОрганизацииВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ВводИндивидуальныхГрафиковРаботыОрганизации/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ВводИндивидуальныхГрафиковРаботыОрганизацииСтраницаПоСсылке: V82.ДокументыСсылка.ВводИндивидуальныхГрафиковРаботыОрганизации,IReturn<ВводИндивидуальныхГрафиковРаботыОрганизацииСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ВводИндивидуальныхГрафиковРаботыОрганизации/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ВводИндивидуальныхГрафиковРаботыОрганизацииСтраницаПоНомеру: V82.ДокументыСсылка.ВводИндивидуальныхГрафиковРаботыОрганизации,IReturn<ВводИндивидуальныхГрафиковРаботыОрганизацииСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ВводИндивидуальныхГрафиковРаботыОрганизацииОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ВводИндивидуальныхГрафиковРаботыОрганизацииСервис : Service
	{
		
		public object Get(ВводИндивидуальныхГрафиковРаботыОрганизацииЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ВводИндивидуальныхГрафиковРаботыОрганизацииНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ВводИндивидуальныхГрафиковРаботыОрганизации.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ВводИндивидуальныхГрафиковРаботыОрганизацииОтвет() { Ответ = "ВводИндивидуальныхГрафиковРаботыОрганизации c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ВводИндивидуальныхГрафиковРаботыОрганизацииНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ВводИндивидуальныхГрафиковРаботыОрганизации.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ВводИндивидуальныхГрафиковРаботыОрганизацииОтвет() {Ответ = "ВводИндивидуальныхГрафиковРаботыОрганизации c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ВводИндивидуальныхГрафиковРаботыОрганизацииВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ВводИндивидуальныхГрафиковРаботыОрганизации.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ВводИндивидуальныхГрафиковРаботыОрганизацииВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ВводИндивидуальныхГрафиковРаботыОрганизацииСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ВводИндивидуальныхГрафиковРаботыОрганизацииСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ВводИндивидуальныхГрафиковРаботыОрганизацииЗапрос Запрос)
		{
			return new ВводИндивидуальныхГрафиковРаботыОрганизацииОтвет {Ответ = "ВводИндивидуальныхГрафиковРаботыОрганизации, "};
		}

		public object Post(ВводИндивидуальныхГрафиковРаботыОрганизацииЗапрос ЗапросВводИндивидуальныхГрафиковРаботыОрганизации)
		{
			var Ссылка = (ДокументыСсылка.ВводИндивидуальныхГрафиковРаботыОрганизации)ЗапросВводИндивидуальныхГрафиковРаботыОрганизации;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}