
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//VvodInformaciiOSotrudnikakh
	[Маршрут("Документы/ВводИнформацииОСотрудниках","")]
	public class ВводИнформацииОСотрудникахЗапрос: V82.ДокументыСсылка.ВводИнформацииОСотрудниках,IReturn<ВводИнформацииОСотрудникахЗапрос>
	{
	}
	[Маршрут("Документы/ВводИнформацииОСотрудниках/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ВводИнформацииОСотрудниках/ПоСсылке","{Ссылка}")]
	public class ВводИнформацииОСотрудникахНайтиПоСсылке: V82.ДокументыСсылка.ВводИнформацииОСотрудниках,IReturn<ВводИнформацииОСотрудникахНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ВводИнформацииОСотрудниках/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ВводИнформацииОСотрудниках/ПоНомеру","{Номер}")]
	public class ВводИнформацииОСотрудникахНайтиПоНомеру: V82.ДокументыСсылка.ВводИнформацииОСотрудниках,IReturn<ВводИнформацииОСотрудникахНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ВводИнформацииОСотрудниках/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ВводИнформацииОСотрудниках/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ВводИнформацииОСотрудниках/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ВводИнформацииОСотрудникахВыбратьПоСсылке: V82.ДокументыСсылка.ВводИнформацииОСотрудниках,IReturn<ВводИнформацииОСотрудникахВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ВводИнформацииОСотрудниках/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ВводИнформацииОСотрудниках/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ВводИнформацииОСотрудниках/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ВводИнформацииОСотрудникахВыбратьПоНомеру: V82.ДокументыСсылка.ВводИнформацииОСотрудниках,IReturn<ВводИнформацииОСотрудникахВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ВводИнформацииОСотрудниках/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ВводИнформацииОСотрудникахСтраницаПоСсылке: V82.ДокументыСсылка.ВводИнформацииОСотрудниках,IReturn<ВводИнформацииОСотрудникахСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ВводИнформацииОСотрудниках/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ВводИнформацииОСотрудникахСтраницаПоНомеру: V82.ДокументыСсылка.ВводИнформацииОСотрудниках,IReturn<ВводИнформацииОСотрудникахСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ВводИнформацииОСотрудникахОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ВводИнформацииОСотрудникахСервис : Service
	{
		
		public object Get(ВводИнформацииОСотрудникахЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ВводИнформацииОСотрудникахНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ВводИнформацииОСотрудниках.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ВводИнформацииОСотрудникахОтвет() { Ответ = "ВводИнформацииОСотрудниках c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ВводИнформацииОСотрудникахНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ВводИнформацииОСотрудниках.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ВводИнформацииОСотрудникахОтвет() {Ответ = "ВводИнформацииОСотрудниках c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ВводИнформацииОСотрудникахВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ВводИнформацииОСотрудниках.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ВводИнформацииОСотрудникахВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ВводИнформацииОСотрудникахСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ВводИнформацииОСотрудникахСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ВводИнформацииОСотрудникахЗапрос Запрос)
		{
			return new ВводИнформацииОСотрудникахОтвет {Ответ = "ВводИнформацииОСотрудниках, "};
		}

		public object Post(ВводИнформацииОСотрудникахЗапрос ЗапросВводИнформацииОСотрудниках)
		{
			var Ссылка = (ДокументыСсылка.ВводИнформацииОСотрудниках)ЗапросВводИнформацииОСотрудниках;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}