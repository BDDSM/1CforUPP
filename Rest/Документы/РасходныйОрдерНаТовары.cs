
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//RaskhodnyjjOrderNaTovary
	[Маршрут("Документы/РасходныйОрдерНаТовары","")]
	public class РасходныйОрдерНаТоварыЗапрос: V82.ДокументыСсылка.РасходныйОрдерНаТовары,IReturn<РасходныйОрдерНаТоварыЗапрос>
	{
	}
	[Маршрут("Документы/РасходныйОрдерНаТовары/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/РасходныйОрдерНаТовары/ПоСсылке","{Ссылка}")]
	public class РасходныйОрдерНаТоварыНайтиПоСсылке: V82.ДокументыСсылка.РасходныйОрдерНаТовары,IReturn<РасходныйОрдерНаТоварыНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/РасходныйОрдерНаТовары/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/РасходныйОрдерНаТовары/ПоНомеру","{Номер}")]
	public class РасходныйОрдерНаТоварыНайтиПоНомеру: V82.ДокументыСсылка.РасходныйОрдерНаТовары,IReturn<РасходныйОрдерНаТоварыНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/РасходныйОрдерНаТовары/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/РасходныйОрдерНаТовары/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/РасходныйОрдерНаТовары/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class РасходныйОрдерНаТоварыВыбратьПоСсылке: V82.ДокументыСсылка.РасходныйОрдерНаТовары,IReturn<РасходныйОрдерНаТоварыВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/РасходныйОрдерНаТовары/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/РасходныйОрдерНаТовары/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/РасходныйОрдерНаТовары/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class РасходныйОрдерНаТоварыВыбратьПоНомеру: V82.ДокументыСсылка.РасходныйОрдерНаТовары,IReturn<РасходныйОрдерНаТоварыВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/РасходныйОрдерНаТовары/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class РасходныйОрдерНаТоварыСтраницаПоСсылке: V82.ДокументыСсылка.РасходныйОрдерНаТовары,IReturn<РасходныйОрдерНаТоварыСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/РасходныйОрдерНаТовары/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class РасходныйОрдерНаТоварыСтраницаПоНомеру: V82.ДокументыСсылка.РасходныйОрдерНаТовары,IReturn<РасходныйОрдерНаТоварыСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class РасходныйОрдерНаТоварыОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class РасходныйОрдерНаТоварыСервис : Service
	{
		
		public object Get(РасходныйОрдерНаТоварыЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(РасходныйОрдерНаТоварыНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.РасходныйОрдерНаТовары.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new РасходныйОрдерНаТоварыОтвет() { Ответ = "РасходныйОрдерНаТовары c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(РасходныйОрдерНаТоварыНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.РасходныйОрдерНаТовары.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new РасходныйОрдерНаТоварыОтвет() {Ответ = "РасходныйОрдерНаТовары c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(РасходныйОрдерНаТоварыВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.РасходныйОрдерНаТовары.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(РасходныйОрдерНаТоварыВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(РасходныйОрдерНаТоварыСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(РасходныйОрдерНаТоварыСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(РасходныйОрдерНаТоварыЗапрос Запрос)
		{
			return new РасходныйОрдерНаТоварыОтвет {Ответ = "РасходныйОрдерНаТовары, "};
		}

		public object Post(РасходныйОрдерНаТоварыЗапрос ЗапросРасходныйОрдерНаТовары)
		{
			var Ссылка = (ДокументыСсылка.РасходныйОрдерНаТовары)ЗапросРасходныйОрдерНаТовары;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}