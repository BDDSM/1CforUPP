
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//UstanovkaPoryadkaZakrytiyaPodrazdelenijj
	[Маршрут("Документы/УстановкаПорядкаЗакрытияПодразделений","")]
	public class УстановкаПорядкаЗакрытияПодразделенийЗапрос: V82.ДокументыСсылка.УстановкаПорядкаЗакрытияПодразделений,IReturn<УстановкаПорядкаЗакрытияПодразделенийЗапрос>
	{
	}
	[Маршрут("Документы/УстановкаПорядкаЗакрытияПодразделений/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/УстановкаПорядкаЗакрытияПодразделений/ПоСсылке","{Ссылка}")]
	public class УстановкаПорядкаЗакрытияПодразделенийНайтиПоСсылке: V82.ДокументыСсылка.УстановкаПорядкаЗакрытияПодразделений,IReturn<УстановкаПорядкаЗакрытияПодразделенийНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/УстановкаПорядкаЗакрытияПодразделений/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/УстановкаПорядкаЗакрытияПодразделений/ПоНомеру","{Номер}")]
	public class УстановкаПорядкаЗакрытияПодразделенийНайтиПоНомеру: V82.ДокументыСсылка.УстановкаПорядкаЗакрытияПодразделений,IReturn<УстановкаПорядкаЗакрытияПодразделенийНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/УстановкаПорядкаЗакрытияПодразделений/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/УстановкаПорядкаЗакрытияПодразделений/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/УстановкаПорядкаЗакрытияПодразделений/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class УстановкаПорядкаЗакрытияПодразделенийВыбратьПоСсылке: V82.ДокументыСсылка.УстановкаПорядкаЗакрытияПодразделений,IReturn<УстановкаПорядкаЗакрытияПодразделенийВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/УстановкаПорядкаЗакрытияПодразделений/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/УстановкаПорядкаЗакрытияПодразделений/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/УстановкаПорядкаЗакрытияПодразделений/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class УстановкаПорядкаЗакрытияПодразделенийВыбратьПоНомеру: V82.ДокументыСсылка.УстановкаПорядкаЗакрытияПодразделений,IReturn<УстановкаПорядкаЗакрытияПодразделенийВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/УстановкаПорядкаЗакрытияПодразделений/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class УстановкаПорядкаЗакрытияПодразделенийСтраницаПоСсылке: V82.ДокументыСсылка.УстановкаПорядкаЗакрытияПодразделений,IReturn<УстановкаПорядкаЗакрытияПодразделенийСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/УстановкаПорядкаЗакрытияПодразделений/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class УстановкаПорядкаЗакрытияПодразделенийСтраницаПоНомеру: V82.ДокументыСсылка.УстановкаПорядкаЗакрытияПодразделений,IReturn<УстановкаПорядкаЗакрытияПодразделенийСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class УстановкаПорядкаЗакрытияПодразделенийОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class УстановкаПорядкаЗакрытияПодразделенийСервис : Service
	{
		
		public object Get(УстановкаПорядкаЗакрытияПодразделенийЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(УстановкаПорядкаЗакрытияПодразделенийНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.УстановкаПорядкаЗакрытияПодразделений.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new УстановкаПорядкаЗакрытияПодразделенийОтвет() { Ответ = "УстановкаПорядкаЗакрытияПодразделений c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(УстановкаПорядкаЗакрытияПодразделенийНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.УстановкаПорядкаЗакрытияПодразделений.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new УстановкаПорядкаЗакрытияПодразделенийОтвет() {Ответ = "УстановкаПорядкаЗакрытияПодразделений c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(УстановкаПорядкаЗакрытияПодразделенийВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.УстановкаПорядкаЗакрытияПодразделений.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(УстановкаПорядкаЗакрытияПодразделенийВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(УстановкаПорядкаЗакрытияПодразделенийСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(УстановкаПорядкаЗакрытияПодразделенийСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(УстановкаПорядкаЗакрытияПодразделенийЗапрос Запрос)
		{
			return new УстановкаПорядкаЗакрытияПодразделенийОтвет {Ответ = "УстановкаПорядкаЗакрытияПодразделений, "};
		}

		public object Post(УстановкаПорядкаЗакрытияПодразделенийЗапрос ЗапросУстановкаПорядкаЗакрытияПодразделений)
		{
			var Ссылка = (ДокументыСсылка.УстановкаПорядкаЗакрытияПодразделений)ЗапросУстановкаПорядкаЗакрытияПодразделений;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}