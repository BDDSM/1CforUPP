
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//SchetFakturaPoluchennyjj
	[Маршрут("Документы/СчетФактураПолученный","")]
	public class СчетФактураПолученныйЗапрос: V82.ДокументыСсылка.СчетФактураПолученный,IReturn<СчетФактураПолученныйЗапрос>
	{
	}
	[Маршрут("Документы/СчетФактураПолученный/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/СчетФактураПолученный/ПоСсылке","{Ссылка}")]
	public class СчетФактураПолученныйНайтиПоСсылке: V82.ДокументыСсылка.СчетФактураПолученный,IReturn<СчетФактураПолученныйНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/СчетФактураПолученный/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/СчетФактураПолученный/ПоНомеру","{Номер}")]
	public class СчетФактураПолученныйНайтиПоНомеру: V82.ДокументыСсылка.СчетФактураПолученный,IReturn<СчетФактураПолученныйНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/СчетФактураПолученный/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/СчетФактураПолученный/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/СчетФактураПолученный/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class СчетФактураПолученныйВыбратьПоСсылке: V82.ДокументыСсылка.СчетФактураПолученный,IReturn<СчетФактураПолученныйВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/СчетФактураПолученный/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/СчетФактураПолученный/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/СчетФактураПолученный/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class СчетФактураПолученныйВыбратьПоНомеру: V82.ДокументыСсылка.СчетФактураПолученный,IReturn<СчетФактураПолученныйВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/СчетФактураПолученный/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class СчетФактураПолученныйСтраницаПоСсылке: V82.ДокументыСсылка.СчетФактураПолученный,IReturn<СчетФактураПолученныйСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/СчетФактураПолученный/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class СчетФактураПолученныйСтраницаПоНомеру: V82.ДокументыСсылка.СчетФактураПолученный,IReturn<СчетФактураПолученныйСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class СчетФактураПолученныйОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class СчетФактураПолученныйСервис : Service
	{
		
		public object Get(СчетФактураПолученныйЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(СчетФактураПолученныйНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.СчетФактураПолученный.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new СчетФактураПолученныйОтвет() { Ответ = "СчетФактураПолученный c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(СчетФактураПолученныйНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.СчетФактураПолученный.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new СчетФактураПолученныйОтвет() {Ответ = "СчетФактураПолученный c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(СчетФактураПолученныйВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.СчетФактураПолученный.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(СчетФактураПолученныйВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(СчетФактураПолученныйСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(СчетФактураПолученныйСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(СчетФактураПолученныйЗапрос Запрос)
		{
			return new СчетФактураПолученныйОтвет {Ответ = "СчетФактураПолученный, "};
		}

		public object Post(СчетФактураПолученныйЗапрос ЗапросСчетФактураПолученный)
		{
			var Ссылка = (ДокументыСсылка.СчетФактураПолученный)ЗапросСчетФактураПолученный;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}