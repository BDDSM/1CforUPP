
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//SchetNaOplatuPokupatelyu
	[Маршрут("Документы/СчетНаОплатуПокупателю","")]
	public class СчетНаОплатуПокупателюЗапрос: V82.ДокументыСсылка.СчетНаОплатуПокупателю,IReturn<СчетНаОплатуПокупателюЗапрос>
	{
	}
	[Маршрут("Документы/СчетНаОплатуПокупателю/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/СчетНаОплатуПокупателю/ПоСсылке","{Ссылка}")]
	public class СчетНаОплатуПокупателюНайтиПоСсылке: V82.ДокументыСсылка.СчетНаОплатуПокупателю,IReturn<СчетНаОплатуПокупателюНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/СчетНаОплатуПокупателю/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/СчетНаОплатуПокупателю/ПоНомеру","{Номер}")]
	public class СчетНаОплатуПокупателюНайтиПоНомеру: V82.ДокументыСсылка.СчетНаОплатуПокупателю,IReturn<СчетНаОплатуПокупателюНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/СчетНаОплатуПокупателю/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/СчетНаОплатуПокупателю/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/СчетНаОплатуПокупателю/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class СчетНаОплатуПокупателюВыбратьПоСсылке: V82.ДокументыСсылка.СчетНаОплатуПокупателю,IReturn<СчетНаОплатуПокупателюВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/СчетНаОплатуПокупателю/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/СчетНаОплатуПокупателю/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/СчетНаОплатуПокупателю/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class СчетНаОплатуПокупателюВыбратьПоНомеру: V82.ДокументыСсылка.СчетНаОплатуПокупателю,IReturn<СчетНаОплатуПокупателюВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/СчетНаОплатуПокупателю/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class СчетНаОплатуПокупателюСтраницаПоСсылке: V82.ДокументыСсылка.СчетНаОплатуПокупателю,IReturn<СчетНаОплатуПокупателюСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/СчетНаОплатуПокупателю/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class СчетНаОплатуПокупателюСтраницаПоНомеру: V82.ДокументыСсылка.СчетНаОплатуПокупателю,IReturn<СчетНаОплатуПокупателюСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class СчетНаОплатуПокупателюОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class СчетНаОплатуПокупателюСервис : Service
	{
		
		public object Get(СчетНаОплатуПокупателюЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(СчетНаОплатуПокупателюНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.СчетНаОплатуПокупателю.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new СчетНаОплатуПокупателюОтвет() { Ответ = "СчетНаОплатуПокупателю c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(СчетНаОплатуПокупателюНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.СчетНаОплатуПокупателю.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new СчетНаОплатуПокупателюОтвет() {Ответ = "СчетНаОплатуПокупателю c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(СчетНаОплатуПокупателюВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.СчетНаОплатуПокупателю.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(СчетНаОплатуПокупателюВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(СчетНаОплатуПокупателюСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(СчетНаОплатуПокупателюСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(СчетНаОплатуПокупателюЗапрос Запрос)
		{
			return new СчетНаОплатуПокупателюОтвет {Ответ = "СчетНаОплатуПокупателю, "};
		}

		public object Post(СчетНаОплатуПокупателюЗапрос ЗапросСчетНаОплатуПокупателю)
		{
			var Ссылка = (ДокументыСсылка.СчетНаОплатуПокупателю)ЗапросСчетНаОплатуПокупателю;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}