
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//ZaprosVPFROZarabotkeSotrudnika
	[Маршрут("Документы/ЗапросВПФРОЗаработкеСотрудника","")]
	public class ЗапросВПФРОЗаработкеСотрудникаЗапрос: V82.ДокументыСсылка.ЗапросВПФРОЗаработкеСотрудника,IReturn<ЗапросВПФРОЗаработкеСотрудникаЗапрос>
	{
	}
	[Маршрут("Документы/ЗапросВПФРОЗаработкеСотрудника/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ЗапросВПФРОЗаработкеСотрудника/ПоСсылке","{Ссылка}")]
	public class ЗапросВПФРОЗаработкеСотрудникаНайтиПоСсылке: V82.ДокументыСсылка.ЗапросВПФРОЗаработкеСотрудника,IReturn<ЗапросВПФРОЗаработкеСотрудникаНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ЗапросВПФРОЗаработкеСотрудника/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ЗапросВПФРОЗаработкеСотрудника/ПоНомеру","{Номер}")]
	public class ЗапросВПФРОЗаработкеСотрудникаНайтиПоНомеру: V82.ДокументыСсылка.ЗапросВПФРОЗаработкеСотрудника,IReturn<ЗапросВПФРОЗаработкеСотрудникаНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ЗапросВПФРОЗаработкеСотрудника/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ЗапросВПФРОЗаработкеСотрудника/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ЗапросВПФРОЗаработкеСотрудника/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ЗапросВПФРОЗаработкеСотрудникаВыбратьПоСсылке: V82.ДокументыСсылка.ЗапросВПФРОЗаработкеСотрудника,IReturn<ЗапросВПФРОЗаработкеСотрудникаВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ЗапросВПФРОЗаработкеСотрудника/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ЗапросВПФРОЗаработкеСотрудника/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ЗапросВПФРОЗаработкеСотрудника/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ЗапросВПФРОЗаработкеСотрудникаВыбратьПоНомеру: V82.ДокументыСсылка.ЗапросВПФРОЗаработкеСотрудника,IReturn<ЗапросВПФРОЗаработкеСотрудникаВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ЗапросВПФРОЗаработкеСотрудника/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ЗапросВПФРОЗаработкеСотрудникаСтраницаПоСсылке: V82.ДокументыСсылка.ЗапросВПФРОЗаработкеСотрудника,IReturn<ЗапросВПФРОЗаработкеСотрудникаСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ЗапросВПФРОЗаработкеСотрудника/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ЗапросВПФРОЗаработкеСотрудникаСтраницаПоНомеру: V82.ДокументыСсылка.ЗапросВПФРОЗаработкеСотрудника,IReturn<ЗапросВПФРОЗаработкеСотрудникаСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ЗапросВПФРОЗаработкеСотрудникаОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ЗапросВПФРОЗаработкеСотрудникаСервис : Service
	{
		
		public object Get(ЗапросВПФРОЗаработкеСотрудникаЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ЗапросВПФРОЗаработкеСотрудникаНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ЗапросВПФРОЗаработкеСотрудника.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ЗапросВПФРОЗаработкеСотрудникаОтвет() { Ответ = "ЗапросВПФРОЗаработкеСотрудника c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ЗапросВПФРОЗаработкеСотрудникаНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ЗапросВПФРОЗаработкеСотрудника.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ЗапросВПФРОЗаработкеСотрудникаОтвет() {Ответ = "ЗапросВПФРОЗаработкеСотрудника c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ЗапросВПФРОЗаработкеСотрудникаВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ЗапросВПФРОЗаработкеСотрудника.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ЗапросВПФРОЗаработкеСотрудникаВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ЗапросВПФРОЗаработкеСотрудникаСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ЗапросВПФРОЗаработкеСотрудникаСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ЗапросВПФРОЗаработкеСотрудникаЗапрос Запрос)
		{
			return new ЗапросВПФРОЗаработкеСотрудникаОтвет {Ответ = "ЗапросВПФРОЗаработкеСотрудника, "};
		}

		public object Post(ЗапросВПФРОЗаработкеСотрудникаЗапрос ЗапросЗапросВПФРОЗаработкеСотрудника)
		{
			var Ссылка = (ДокументыСсылка.ЗапросВПФРОЗаработкеСотрудника)ЗапросЗапросВПФРОЗаработкеСотрудника;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}