
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//ZakazPokupatelya
	[Маршрут("Документы/ЗаказПокупателя","")]
	public class ЗаказПокупателяЗапрос: V82.ДокументыСсылка.ЗаказПокупателя,IReturn<ЗаказПокупателяЗапрос>
	{
	}
	[Маршрут("Документы/ЗаказПокупателя/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ЗаказПокупателя/ПоСсылке","{Ссылка}")]
	public class ЗаказПокупателяНайтиПоСсылке: V82.ДокументыСсылка.ЗаказПокупателя,IReturn<ЗаказПокупателяНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ЗаказПокупателя/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ЗаказПокупателя/ПоНомеру","{Номер}")]
	public class ЗаказПокупателяНайтиПоНомеру: V82.ДокументыСсылка.ЗаказПокупателя,IReturn<ЗаказПокупателяНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ЗаказПокупателя/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ЗаказПокупателя/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ЗаказПокупателя/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ЗаказПокупателяВыбратьПоСсылке: V82.ДокументыСсылка.ЗаказПокупателя,IReturn<ЗаказПокупателяВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ЗаказПокупателя/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ЗаказПокупателя/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ЗаказПокупателя/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ЗаказПокупателяВыбратьПоНомеру: V82.ДокументыСсылка.ЗаказПокупателя,IReturn<ЗаказПокупателяВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ЗаказПокупателя/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ЗаказПокупателяСтраницаПоСсылке: V82.ДокументыСсылка.ЗаказПокупателя,IReturn<ЗаказПокупателяСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ЗаказПокупателя/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ЗаказПокупателяСтраницаПоНомеру: V82.ДокументыСсылка.ЗаказПокупателя,IReturn<ЗаказПокупателяСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ЗаказПокупателяОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ЗаказПокупателяСервис : Service
	{
		
		public object Get(ЗаказПокупателяЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ЗаказПокупателяНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ЗаказПокупателя.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ЗаказПокупателяОтвет() { Ответ = "ЗаказПокупателя c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ЗаказПокупателяНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ЗаказПокупателя.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ЗаказПокупателяОтвет() {Ответ = "ЗаказПокупателя c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ЗаказПокупателяВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ЗаказПокупателя.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ЗаказПокупателяВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ЗаказПокупателяСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ЗаказПокупателяСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ЗаказПокупателяЗапрос Запрос)
		{
			return new ЗаказПокупателяОтвет {Ответ = "ЗаказПокупателя, "};
		}

		public object Post(ЗаказПокупателяЗапрос ЗапросЗаказПокупателя)
		{
			var Ссылка = (ДокументыСсылка.ЗаказПокупателя)ЗапросЗаказПокупателя;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}