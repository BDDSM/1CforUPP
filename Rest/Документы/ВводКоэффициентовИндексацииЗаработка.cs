
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//VvodKoehfficientovIndeksaciiZarabotka
	[Маршрут("Документы/ВводКоэффициентовИндексацииЗаработка","")]
	public class ВводКоэффициентовИндексацииЗаработкаЗапрос: V82.ДокументыСсылка.ВводКоэффициентовИндексацииЗаработка,IReturn<ВводКоэффициентовИндексацииЗаработкаЗапрос>
	{
	}
	[Маршрут("Документы/ВводКоэффициентовИндексацииЗаработка/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ВводКоэффициентовИндексацииЗаработка/ПоСсылке","{Ссылка}")]
	public class ВводКоэффициентовИндексацииЗаработкаНайтиПоСсылке: V82.ДокументыСсылка.ВводКоэффициентовИндексацииЗаработка,IReturn<ВводКоэффициентовИндексацииЗаработкаНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ВводКоэффициентовИндексацииЗаработка/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ВводКоэффициентовИндексацииЗаработка/ПоНомеру","{Номер}")]
	public class ВводКоэффициентовИндексацииЗаработкаНайтиПоНомеру: V82.ДокументыСсылка.ВводКоэффициентовИндексацииЗаработка,IReturn<ВводКоэффициентовИндексацииЗаработкаНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ВводКоэффициентовИндексацииЗаработка/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ВводКоэффициентовИндексацииЗаработка/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ВводКоэффициентовИндексацииЗаработка/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ВводКоэффициентовИндексацииЗаработкаВыбратьПоСсылке: V82.ДокументыСсылка.ВводКоэффициентовИндексацииЗаработка,IReturn<ВводКоэффициентовИндексацииЗаработкаВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ВводКоэффициентовИндексацииЗаработка/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ВводКоэффициентовИндексацииЗаработка/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ВводКоэффициентовИндексацииЗаработка/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ВводКоэффициентовИндексацииЗаработкаВыбратьПоНомеру: V82.ДокументыСсылка.ВводКоэффициентовИндексацииЗаработка,IReturn<ВводКоэффициентовИндексацииЗаработкаВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ВводКоэффициентовИндексацииЗаработка/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ВводКоэффициентовИндексацииЗаработкаСтраницаПоСсылке: V82.ДокументыСсылка.ВводКоэффициентовИндексацииЗаработка,IReturn<ВводКоэффициентовИндексацииЗаработкаСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ВводКоэффициентовИндексацииЗаработка/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ВводКоэффициентовИндексацииЗаработкаСтраницаПоНомеру: V82.ДокументыСсылка.ВводКоэффициентовИндексацииЗаработка,IReturn<ВводКоэффициентовИндексацииЗаработкаСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ВводКоэффициентовИндексацииЗаработкаОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ВводКоэффициентовИндексацииЗаработкаСервис : Service
	{
		
		public object Get(ВводКоэффициентовИндексацииЗаработкаЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ВводКоэффициентовИндексацииЗаработкаНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ВводКоэффициентовИндексацииЗаработка.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ВводКоэффициентовИндексацииЗаработкаОтвет() { Ответ = "ВводКоэффициентовИндексацииЗаработка c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ВводКоэффициентовИндексацииЗаработкаНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ВводКоэффициентовИндексацииЗаработка.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ВводКоэффициентовИндексацииЗаработкаОтвет() {Ответ = "ВводКоэффициентовИндексацииЗаработка c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ВводКоэффициентовИндексацииЗаработкаВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ВводКоэффициентовИндексацииЗаработка.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ВводКоэффициентовИндексацииЗаработкаВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ВводКоэффициентовИндексацииЗаработкаСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ВводКоэффициентовИндексацииЗаработкаСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ВводКоэффициентовИндексацииЗаработкаЗапрос Запрос)
		{
			return new ВводКоэффициентовИндексацииЗаработкаОтвет {Ответ = "ВводКоэффициентовИндексацииЗаработка, "};
		}

		public object Post(ВводКоэффициентовИндексацииЗаработкаЗапрос ЗапросВводКоэффициентовИндексацииЗаработка)
		{
			var Ссылка = (ДокументыСсылка.ВводКоэффициентовИндексацииЗаработка)ЗапросВводКоэффициентовИндексацииЗаработка;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}