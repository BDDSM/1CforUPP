
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//UdalitKorrektirovochnyjjSchetFakturaVydannyjj
	[Маршрут("Документы/УдалитьКорректировочныйСчетФактураВыданный","")]
	public class УдалитьКорректировочныйСчетФактураВыданныйЗапрос: V82.ДокументыСсылка.УдалитьКорректировочныйСчетФактураВыданный,IReturn<УдалитьКорректировочныйСчетФактураВыданныйЗапрос>
	{
	}
	[Маршрут("Документы/УдалитьКорректировочныйСчетФактураВыданный/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/УдалитьКорректировочныйСчетФактураВыданный/ПоСсылке","{Ссылка}")]
	public class УдалитьКорректировочныйСчетФактураВыданныйНайтиПоСсылке: V82.ДокументыСсылка.УдалитьКорректировочныйСчетФактураВыданный,IReturn<УдалитьКорректировочныйСчетФактураВыданныйНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/УдалитьКорректировочныйСчетФактураВыданный/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/УдалитьКорректировочныйСчетФактураВыданный/ПоНомеру","{Номер}")]
	public class УдалитьКорректировочныйСчетФактураВыданныйНайтиПоНомеру: V82.ДокументыСсылка.УдалитьКорректировочныйСчетФактураВыданный,IReturn<УдалитьКорректировочныйСчетФактураВыданныйНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/УдалитьКорректировочныйСчетФактураВыданный/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/УдалитьКорректировочныйСчетФактураВыданный/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/УдалитьКорректировочныйСчетФактураВыданный/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class УдалитьКорректировочныйСчетФактураВыданныйВыбратьПоСсылке: V82.ДокументыСсылка.УдалитьКорректировочныйСчетФактураВыданный,IReturn<УдалитьКорректировочныйСчетФактураВыданныйВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/УдалитьКорректировочныйСчетФактураВыданный/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/УдалитьКорректировочныйСчетФактураВыданный/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/УдалитьКорректировочныйСчетФактураВыданный/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class УдалитьКорректировочныйСчетФактураВыданныйВыбратьПоНомеру: V82.ДокументыСсылка.УдалитьКорректировочныйСчетФактураВыданный,IReturn<УдалитьКорректировочныйСчетФактураВыданныйВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/УдалитьКорректировочныйСчетФактураВыданный/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class УдалитьКорректировочныйСчетФактураВыданныйСтраницаПоСсылке: V82.ДокументыСсылка.УдалитьКорректировочныйСчетФактураВыданный,IReturn<УдалитьКорректировочныйСчетФактураВыданныйСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/УдалитьКорректировочныйСчетФактураВыданный/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class УдалитьКорректировочныйСчетФактураВыданныйСтраницаПоНомеру: V82.ДокументыСсылка.УдалитьКорректировочныйСчетФактураВыданный,IReturn<УдалитьКорректировочныйСчетФактураВыданныйСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class УдалитьКорректировочныйСчетФактураВыданныйОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class УдалитьКорректировочныйСчетФактураВыданныйСервис : Service
	{
		
		public object Get(УдалитьКорректировочныйСчетФактураВыданныйЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(УдалитьКорректировочныйСчетФактураВыданныйНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.УдалитьКорректировочныйСчетФактураВыданный.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new УдалитьКорректировочныйСчетФактураВыданныйОтвет() { Ответ = "УдалитьКорректировочныйСчетФактураВыданный c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(УдалитьКорректировочныйСчетФактураВыданныйНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.УдалитьКорректировочныйСчетФактураВыданный.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new УдалитьКорректировочныйСчетФактураВыданныйОтвет() {Ответ = "УдалитьКорректировочныйСчетФактураВыданный c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(УдалитьКорректировочныйСчетФактураВыданныйВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.УдалитьКорректировочныйСчетФактураВыданный.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(УдалитьКорректировочныйСчетФактураВыданныйВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(УдалитьКорректировочныйСчетФактураВыданныйСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(УдалитьКорректировочныйСчетФактураВыданныйСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(УдалитьКорректировочныйСчетФактураВыданныйЗапрос Запрос)
		{
			return new УдалитьКорректировочныйСчетФактураВыданныйОтвет {Ответ = "УдалитьКорректировочныйСчетФактураВыданный, "};
		}

		public object Post(УдалитьКорректировочныйСчетФактураВыданныйЗапрос ЗапросУдалитьКорректировочныйСчетФактураВыданный)
		{
			var Ссылка = (ДокументыСсылка.УдалитьКорректировочныйСчетФактураВыданный)ЗапросУдалитьКорректировочныйСчетФактураВыданный;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}