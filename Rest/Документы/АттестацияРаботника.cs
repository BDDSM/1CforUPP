
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//AttestaciyaRabotnika
	[Маршрут("Документы/АттестацияРаботника","")]
	public class АттестацияРаботникаЗапрос: V82.ДокументыСсылка.АттестацияРаботника,IReturn<АттестацияРаботникаЗапрос>
	{
	}
	[Маршрут("Документы/АттестацияРаботника/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/АттестацияРаботника/ПоСсылке","{Ссылка}")]
	public class АттестацияРаботникаНайтиПоСсылке: V82.ДокументыСсылка.АттестацияРаботника,IReturn<АттестацияРаботникаНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/АттестацияРаботника/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/АттестацияРаботника/ПоНомеру","{Номер}")]
	public class АттестацияРаботникаНайтиПоНомеру: V82.ДокументыСсылка.АттестацияРаботника,IReturn<АттестацияРаботникаНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/АттестацияРаботника/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/АттестацияРаботника/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/АттестацияРаботника/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class АттестацияРаботникаВыбратьПоСсылке: V82.ДокументыСсылка.АттестацияРаботника,IReturn<АттестацияРаботникаВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/АттестацияРаботника/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/АттестацияРаботника/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/АттестацияРаботника/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class АттестацияРаботникаВыбратьПоНомеру: V82.ДокументыСсылка.АттестацияРаботника,IReturn<АттестацияРаботникаВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/АттестацияРаботника/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class АттестацияРаботникаСтраницаПоСсылке: V82.ДокументыСсылка.АттестацияРаботника,IReturn<АттестацияРаботникаСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/АттестацияРаботника/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class АттестацияРаботникаСтраницаПоНомеру: V82.ДокументыСсылка.АттестацияРаботника,IReturn<АттестацияРаботникаСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class АттестацияРаботникаОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class АттестацияРаботникаСервис : Service
	{
		
		public object Get(АттестацияРаботникаЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(АттестацияРаботникаНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.АттестацияРаботника.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new АттестацияРаботникаОтвет() { Ответ = "АттестацияРаботника c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(АттестацияРаботникаНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.АттестацияРаботника.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new АттестацияРаботникаОтвет() {Ответ = "АттестацияРаботника c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(АттестацияРаботникаВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.АттестацияРаботника.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(АттестацияРаботникаВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(АттестацияРаботникаСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(АттестацияРаботникаСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(АттестацияРаботникаЗапрос Запрос)
		{
			return new АттестацияРаботникаОтвет {Ответ = "АттестацияРаботника, "};
		}

		public object Post(АттестацияРаботникаЗапрос ЗапросАттестацияРаботника)
		{
			var Ссылка = (ДокументыСсылка.АттестацияРаботника)ЗапросАттестацияРаботника;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}