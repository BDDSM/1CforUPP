
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//KorrektirovkaZakazaPostavshhiku
	[Маршрут("Документы/КорректировкаЗаказаПоставщику","")]
	public class КорректировкаЗаказаПоставщикуЗапрос: V82.ДокументыСсылка.КорректировкаЗаказаПоставщику,IReturn<КорректировкаЗаказаПоставщикуЗапрос>
	{
	}
	[Маршрут("Документы/КорректировкаЗаказаПоставщику/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/КорректировкаЗаказаПоставщику/ПоСсылке","{Ссылка}")]
	public class КорректировкаЗаказаПоставщикуНайтиПоСсылке: V82.ДокументыСсылка.КорректировкаЗаказаПоставщику,IReturn<КорректировкаЗаказаПоставщикуНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/КорректировкаЗаказаПоставщику/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/КорректировкаЗаказаПоставщику/ПоНомеру","{Номер}")]
	public class КорректировкаЗаказаПоставщикуНайтиПоНомеру: V82.ДокументыСсылка.КорректировкаЗаказаПоставщику,IReturn<КорректировкаЗаказаПоставщикуНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/КорректировкаЗаказаПоставщику/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/КорректировкаЗаказаПоставщику/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/КорректировкаЗаказаПоставщику/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class КорректировкаЗаказаПоставщикуВыбратьПоСсылке: V82.ДокументыСсылка.КорректировкаЗаказаПоставщику,IReturn<КорректировкаЗаказаПоставщикуВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/КорректировкаЗаказаПоставщику/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/КорректировкаЗаказаПоставщику/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/КорректировкаЗаказаПоставщику/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class КорректировкаЗаказаПоставщикуВыбратьПоНомеру: V82.ДокументыСсылка.КорректировкаЗаказаПоставщику,IReturn<КорректировкаЗаказаПоставщикуВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/КорректировкаЗаказаПоставщику/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class КорректировкаЗаказаПоставщикуСтраницаПоСсылке: V82.ДокументыСсылка.КорректировкаЗаказаПоставщику,IReturn<КорректировкаЗаказаПоставщикуСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/КорректировкаЗаказаПоставщику/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class КорректировкаЗаказаПоставщикуСтраницаПоНомеру: V82.ДокументыСсылка.КорректировкаЗаказаПоставщику,IReturn<КорректировкаЗаказаПоставщикуСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class КорректировкаЗаказаПоставщикуОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class КорректировкаЗаказаПоставщикуСервис : Service
	{
		
		public object Get(КорректировкаЗаказаПоставщикуЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(КорректировкаЗаказаПоставщикуНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.КорректировкаЗаказаПоставщику.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new КорректировкаЗаказаПоставщикуОтвет() { Ответ = "КорректировкаЗаказаПоставщику c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(КорректировкаЗаказаПоставщикуНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.КорректировкаЗаказаПоставщику.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new КорректировкаЗаказаПоставщикуОтвет() {Ответ = "КорректировкаЗаказаПоставщику c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(КорректировкаЗаказаПоставщикуВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.КорректировкаЗаказаПоставщику.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(КорректировкаЗаказаПоставщикуВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(КорректировкаЗаказаПоставщикуСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(КорректировкаЗаказаПоставщикуСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(КорректировкаЗаказаПоставщикуЗапрос Запрос)
		{
			return new КорректировкаЗаказаПоставщикуОтвет {Ответ = "КорректировкаЗаказаПоставщику, "};
		}

		public object Post(КорректировкаЗаказаПоставщикуЗапрос ЗапросКорректировкаЗаказаПоставщику)
		{
			var Ссылка = (ДокументыСсылка.КорректировкаЗаказаПоставщику)ЗапросКорректировкаЗаказаПоставщику;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}