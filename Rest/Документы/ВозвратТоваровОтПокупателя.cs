
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//VozvratTovarovOtPokupatelya
	[Маршрут("Документы/ВозвратТоваровОтПокупателя","")]
	public class ВозвратТоваровОтПокупателяЗапрос: V82.ДокументыСсылка.ВозвратТоваровОтПокупателя,IReturn<ВозвратТоваровОтПокупателяЗапрос>
	{
	}
	[Маршрут("Документы/ВозвратТоваровОтПокупателя/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ВозвратТоваровОтПокупателя/ПоСсылке","{Ссылка}")]
	public class ВозвратТоваровОтПокупателяНайтиПоСсылке: V82.ДокументыСсылка.ВозвратТоваровОтПокупателя,IReturn<ВозвратТоваровОтПокупателяНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ВозвратТоваровОтПокупателя/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ВозвратТоваровОтПокупателя/ПоНомеру","{Номер}")]
	public class ВозвратТоваровОтПокупателяНайтиПоНомеру: V82.ДокументыСсылка.ВозвратТоваровОтПокупателя,IReturn<ВозвратТоваровОтПокупателяНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ВозвратТоваровОтПокупателя/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ВозвратТоваровОтПокупателя/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ВозвратТоваровОтПокупателя/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ВозвратТоваровОтПокупателяВыбратьПоСсылке: V82.ДокументыСсылка.ВозвратТоваровОтПокупателя,IReturn<ВозвратТоваровОтПокупателяВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ВозвратТоваровОтПокупателя/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ВозвратТоваровОтПокупателя/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ВозвратТоваровОтПокупателя/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ВозвратТоваровОтПокупателяВыбратьПоНомеру: V82.ДокументыСсылка.ВозвратТоваровОтПокупателя,IReturn<ВозвратТоваровОтПокупателяВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ВозвратТоваровОтПокупателя/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ВозвратТоваровОтПокупателяСтраницаПоСсылке: V82.ДокументыСсылка.ВозвратТоваровОтПокупателя,IReturn<ВозвратТоваровОтПокупателяСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ВозвратТоваровОтПокупателя/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ВозвратТоваровОтПокупателяСтраницаПоНомеру: V82.ДокументыСсылка.ВозвратТоваровОтПокупателя,IReturn<ВозвратТоваровОтПокупателяСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ВозвратТоваровОтПокупателяОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ВозвратТоваровОтПокупателяСервис : Service
	{
		
		public object Get(ВозвратТоваровОтПокупателяЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ВозвратТоваровОтПокупателяНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ВозвратТоваровОтПокупателя.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ВозвратТоваровОтПокупателяОтвет() { Ответ = "ВозвратТоваровОтПокупателя c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ВозвратТоваровОтПокупателяНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ВозвратТоваровОтПокупателя.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ВозвратТоваровОтПокупателяОтвет() {Ответ = "ВозвратТоваровОтПокупателя c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ВозвратТоваровОтПокупателяВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ВозвратТоваровОтПокупателя.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ВозвратТоваровОтПокупателяВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ВозвратТоваровОтПокупателяСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ВозвратТоваровОтПокупателяСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ВозвратТоваровОтПокупателяЗапрос Запрос)
		{
			return new ВозвратТоваровОтПокупателяОтвет {Ответ = "ВозвратТоваровОтПокупателя, "};
		}

		public object Post(ВозвратТоваровОтПокупателяЗапрос ЗапросВозвратТоваровОтПокупателя)
		{
			var Ссылка = (ДокументыСсылка.ВозвратТоваровОтПокупателя)ЗапросВозвратТоваровОтПокупателя;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}