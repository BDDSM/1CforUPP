
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//NachislenieZarplatyRabotnikam
	[Маршрут("Документы/НачислениеЗарплатыРаботникам","")]
	public class НачислениеЗарплатыРаботникамЗапрос: V82.ДокументыСсылка.НачислениеЗарплатыРаботникам,IReturn<НачислениеЗарплатыРаботникамЗапрос>
	{
	}
	[Маршрут("Документы/НачислениеЗарплатыРаботникам/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/НачислениеЗарплатыРаботникам/ПоСсылке","{Ссылка}")]
	public class НачислениеЗарплатыРаботникамНайтиПоСсылке: V82.ДокументыСсылка.НачислениеЗарплатыРаботникам,IReturn<НачислениеЗарплатыРаботникамНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/НачислениеЗарплатыРаботникам/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/НачислениеЗарплатыРаботникам/ПоНомеру","{Номер}")]
	public class НачислениеЗарплатыРаботникамНайтиПоНомеру: V82.ДокументыСсылка.НачислениеЗарплатыРаботникам,IReturn<НачислениеЗарплатыРаботникамНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/НачислениеЗарплатыРаботникам/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/НачислениеЗарплатыРаботникам/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/НачислениеЗарплатыРаботникам/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class НачислениеЗарплатыРаботникамВыбратьПоСсылке: V82.ДокументыСсылка.НачислениеЗарплатыРаботникам,IReturn<НачислениеЗарплатыРаботникамВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/НачислениеЗарплатыРаботникам/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/НачислениеЗарплатыРаботникам/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/НачислениеЗарплатыРаботникам/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class НачислениеЗарплатыРаботникамВыбратьПоНомеру: V82.ДокументыСсылка.НачислениеЗарплатыРаботникам,IReturn<НачислениеЗарплатыРаботникамВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/НачислениеЗарплатыРаботникам/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class НачислениеЗарплатыРаботникамСтраницаПоСсылке: V82.ДокументыСсылка.НачислениеЗарплатыРаботникам,IReturn<НачислениеЗарплатыРаботникамСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/НачислениеЗарплатыРаботникам/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class НачислениеЗарплатыРаботникамСтраницаПоНомеру: V82.ДокументыСсылка.НачислениеЗарплатыРаботникам,IReturn<НачислениеЗарплатыРаботникамСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class НачислениеЗарплатыРаботникамОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class НачислениеЗарплатыРаботникамСервис : Service
	{
		
		public object Get(НачислениеЗарплатыРаботникамЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(НачислениеЗарплатыРаботникамНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.НачислениеЗарплатыРаботникам.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new НачислениеЗарплатыРаботникамОтвет() { Ответ = "НачислениеЗарплатыРаботникам c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(НачислениеЗарплатыРаботникамНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.НачислениеЗарплатыРаботникам.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new НачислениеЗарплатыРаботникамОтвет() {Ответ = "НачислениеЗарплатыРаботникам c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(НачислениеЗарплатыРаботникамВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.НачислениеЗарплатыРаботникам.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(НачислениеЗарплатыРаботникамВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(НачислениеЗарплатыРаботникамСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(НачислениеЗарплатыРаботникамСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(НачислениеЗарплатыРаботникамЗапрос Запрос)
		{
			return new НачислениеЗарплатыРаботникамОтвет {Ответ = "НачислениеЗарплатыРаботникам, "};
		}

		public object Post(НачислениеЗарплатыРаботникамЗапрос ЗапросНачислениеЗарплатыРаботникам)
		{
			var Ссылка = (ДокументыСсылка.НачислениеЗарплатыРаботникам)ЗапросНачислениеЗарплатыРаботникам;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}