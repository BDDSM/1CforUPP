
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//UstanovkaDolejjRaspredeleniyaPoProektam
	[Маршрут("Документы/УстановкаДолейРаспределенияПоПроектам","")]
	public class УстановкаДолейРаспределенияПоПроектамЗапрос: V82.ДокументыСсылка.УстановкаДолейРаспределенияПоПроектам,IReturn<УстановкаДолейРаспределенияПоПроектамЗапрос>
	{
	}
	[Маршрут("Документы/УстановкаДолейРаспределенияПоПроектам/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/УстановкаДолейРаспределенияПоПроектам/ПоСсылке","{Ссылка}")]
	public class УстановкаДолейРаспределенияПоПроектамНайтиПоСсылке: V82.ДокументыСсылка.УстановкаДолейРаспределенияПоПроектам,IReturn<УстановкаДолейРаспределенияПоПроектамНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/УстановкаДолейРаспределенияПоПроектам/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/УстановкаДолейРаспределенияПоПроектам/ПоНомеру","{Номер}")]
	public class УстановкаДолейРаспределенияПоПроектамНайтиПоНомеру: V82.ДокументыСсылка.УстановкаДолейРаспределенияПоПроектам,IReturn<УстановкаДолейРаспределенияПоПроектамНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/УстановкаДолейРаспределенияПоПроектам/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/УстановкаДолейРаспределенияПоПроектам/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/УстановкаДолейРаспределенияПоПроектам/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class УстановкаДолейРаспределенияПоПроектамВыбратьПоСсылке: V82.ДокументыСсылка.УстановкаДолейРаспределенияПоПроектам,IReturn<УстановкаДолейРаспределенияПоПроектамВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/УстановкаДолейРаспределенияПоПроектам/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/УстановкаДолейРаспределенияПоПроектам/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/УстановкаДолейРаспределенияПоПроектам/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class УстановкаДолейРаспределенияПоПроектамВыбратьПоНомеру: V82.ДокументыСсылка.УстановкаДолейРаспределенияПоПроектам,IReturn<УстановкаДолейРаспределенияПоПроектамВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/УстановкаДолейРаспределенияПоПроектам/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class УстановкаДолейРаспределенияПоПроектамСтраницаПоСсылке: V82.ДокументыСсылка.УстановкаДолейРаспределенияПоПроектам,IReturn<УстановкаДолейРаспределенияПоПроектамСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/УстановкаДолейРаспределенияПоПроектам/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class УстановкаДолейРаспределенияПоПроектамСтраницаПоНомеру: V82.ДокументыСсылка.УстановкаДолейРаспределенияПоПроектам,IReturn<УстановкаДолейРаспределенияПоПроектамСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class УстановкаДолейРаспределенияПоПроектамОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class УстановкаДолейРаспределенияПоПроектамСервис : Service
	{
		
		public object Get(УстановкаДолейРаспределенияПоПроектамЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(УстановкаДолейРаспределенияПоПроектамНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.УстановкаДолейРаспределенияПоПроектам.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new УстановкаДолейРаспределенияПоПроектамОтвет() { Ответ = "УстановкаДолейРаспределенияПоПроектам c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(УстановкаДолейРаспределенияПоПроектамНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.УстановкаДолейРаспределенияПоПроектам.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new УстановкаДолейРаспределенияПоПроектамОтвет() {Ответ = "УстановкаДолейРаспределенияПоПроектам c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(УстановкаДолейРаспределенияПоПроектамВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.УстановкаДолейРаспределенияПоПроектам.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(УстановкаДолейРаспределенияПоПроектамВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(УстановкаДолейРаспределенияПоПроектамСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(УстановкаДолейРаспределенияПоПроектамСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(УстановкаДолейРаспределенияПоПроектамЗапрос Запрос)
		{
			return new УстановкаДолейРаспределенияПоПроектамОтвет {Ответ = "УстановкаДолейРаспределенияПоПроектам, "};
		}

		public object Post(УстановкаДолейРаспределенияПоПроектамЗапрос ЗапросУстановкаДолейРаспределенияПоПроектам)
		{
			var Ссылка = (ДокументыСсылка.УстановкаДолейРаспределенияПоПроектам)ЗапросУстановкаДолейРаспределенияПоПроектам;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}