
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//RazmeshhenieZakaza
	[Маршрут("Документы/РазмещениеЗаказа","")]
	public class РазмещениеЗаказаЗапрос: V82.ДокументыСсылка.РазмещениеЗаказа,IReturn<РазмещениеЗаказаЗапрос>
	{
	}
	[Маршрут("Документы/РазмещениеЗаказа/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/РазмещениеЗаказа/ПоСсылке","{Ссылка}")]
	public class РазмещениеЗаказаНайтиПоСсылке: V82.ДокументыСсылка.РазмещениеЗаказа,IReturn<РазмещениеЗаказаНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/РазмещениеЗаказа/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/РазмещениеЗаказа/ПоНомеру","{Номер}")]
	public class РазмещениеЗаказаНайтиПоНомеру: V82.ДокументыСсылка.РазмещениеЗаказа,IReturn<РазмещениеЗаказаНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/РазмещениеЗаказа/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/РазмещениеЗаказа/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/РазмещениеЗаказа/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class РазмещениеЗаказаВыбратьПоСсылке: V82.ДокументыСсылка.РазмещениеЗаказа,IReturn<РазмещениеЗаказаВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/РазмещениеЗаказа/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/РазмещениеЗаказа/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/РазмещениеЗаказа/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class РазмещениеЗаказаВыбратьПоНомеру: V82.ДокументыСсылка.РазмещениеЗаказа,IReturn<РазмещениеЗаказаВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/РазмещениеЗаказа/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class РазмещениеЗаказаСтраницаПоСсылке: V82.ДокументыСсылка.РазмещениеЗаказа,IReturn<РазмещениеЗаказаСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/РазмещениеЗаказа/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class РазмещениеЗаказаСтраницаПоНомеру: V82.ДокументыСсылка.РазмещениеЗаказа,IReturn<РазмещениеЗаказаСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class РазмещениеЗаказаОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class РазмещениеЗаказаСервис : Service
	{
		
		public object Get(РазмещениеЗаказаЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(РазмещениеЗаказаНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.РазмещениеЗаказа.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new РазмещениеЗаказаОтвет() { Ответ = "РазмещениеЗаказа c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(РазмещениеЗаказаНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.РазмещениеЗаказа.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new РазмещениеЗаказаОтвет() {Ответ = "РазмещениеЗаказа c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(РазмещениеЗаказаВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.РазмещениеЗаказа.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(РазмещениеЗаказаВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(РазмещениеЗаказаСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(РазмещениеЗаказаСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(РазмещениеЗаказаЗапрос Запрос)
		{
			return new РазмещениеЗаказаОтвет {Ответ = "РазмещениеЗаказа, "};
		}

		public object Post(РазмещениеЗаказаЗапрос ЗапросРазмещениеЗаказа)
		{
			var Ссылка = (ДокументыСсылка.РазмещениеЗаказа)ЗапросРазмещениеЗаказа;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}