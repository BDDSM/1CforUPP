
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//KorrektirovkaZakazaNaProizvodstvo
	[Маршрут("Документы/КорректировкаЗаказаНаПроизводство","")]
	public class КорректировкаЗаказаНаПроизводствоЗапрос: V82.ДокументыСсылка.КорректировкаЗаказаНаПроизводство,IReturn<КорректировкаЗаказаНаПроизводствоЗапрос>
	{
	}
	[Маршрут("Документы/КорректировкаЗаказаНаПроизводство/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/КорректировкаЗаказаНаПроизводство/ПоСсылке","{Ссылка}")]
	public class КорректировкаЗаказаНаПроизводствоНайтиПоСсылке: V82.ДокументыСсылка.КорректировкаЗаказаНаПроизводство,IReturn<КорректировкаЗаказаНаПроизводствоНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/КорректировкаЗаказаНаПроизводство/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/КорректировкаЗаказаНаПроизводство/ПоНомеру","{Номер}")]
	public class КорректировкаЗаказаНаПроизводствоНайтиПоНомеру: V82.ДокументыСсылка.КорректировкаЗаказаНаПроизводство,IReturn<КорректировкаЗаказаНаПроизводствоНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/КорректировкаЗаказаНаПроизводство/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/КорректировкаЗаказаНаПроизводство/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/КорректировкаЗаказаНаПроизводство/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class КорректировкаЗаказаНаПроизводствоВыбратьПоСсылке: V82.ДокументыСсылка.КорректировкаЗаказаНаПроизводство,IReturn<КорректировкаЗаказаНаПроизводствоВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/КорректировкаЗаказаНаПроизводство/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/КорректировкаЗаказаНаПроизводство/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/КорректировкаЗаказаНаПроизводство/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class КорректировкаЗаказаНаПроизводствоВыбратьПоНомеру: V82.ДокументыСсылка.КорректировкаЗаказаНаПроизводство,IReturn<КорректировкаЗаказаНаПроизводствоВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/КорректировкаЗаказаНаПроизводство/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class КорректировкаЗаказаНаПроизводствоСтраницаПоСсылке: V82.ДокументыСсылка.КорректировкаЗаказаНаПроизводство,IReturn<КорректировкаЗаказаНаПроизводствоСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/КорректировкаЗаказаНаПроизводство/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class КорректировкаЗаказаНаПроизводствоСтраницаПоНомеру: V82.ДокументыСсылка.КорректировкаЗаказаНаПроизводство,IReturn<КорректировкаЗаказаНаПроизводствоСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class КорректировкаЗаказаНаПроизводствоОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class КорректировкаЗаказаНаПроизводствоСервис : Service
	{
		
		public object Get(КорректировкаЗаказаНаПроизводствоЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(КорректировкаЗаказаНаПроизводствоНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.КорректировкаЗаказаНаПроизводство.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new КорректировкаЗаказаНаПроизводствоОтвет() { Ответ = "КорректировкаЗаказаНаПроизводство c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(КорректировкаЗаказаНаПроизводствоНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.КорректировкаЗаказаНаПроизводство.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new КорректировкаЗаказаНаПроизводствоОтвет() {Ответ = "КорректировкаЗаказаНаПроизводство c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(КорректировкаЗаказаНаПроизводствоВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.КорректировкаЗаказаНаПроизводство.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(КорректировкаЗаказаНаПроизводствоВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(КорректировкаЗаказаНаПроизводствоСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(КорректировкаЗаказаНаПроизводствоСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(КорректировкаЗаказаНаПроизводствоЗапрос Запрос)
		{
			return new КорректировкаЗаказаНаПроизводствоОтвет {Ответ = "КорректировкаЗаказаНаПроизводство, "};
		}

		public object Post(КорректировкаЗаказаНаПроизводствоЗапрос ЗапросКорректировкаЗаказаНаПроизводство)
		{
			var Ссылка = (ДокументыСсылка.КорректировкаЗаказаНаПроизводство)ЗапросКорректировкаЗаказаНаПроизводство;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}