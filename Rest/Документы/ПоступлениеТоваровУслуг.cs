
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//PostuplenieTovarovUslug
	[Маршрут("Документы/ПоступлениеТоваровУслуг","")]
	public class ПоступлениеТоваровУслугЗапрос: V82.ДокументыСсылка.ПоступлениеТоваровУслуг,IReturn<ПоступлениеТоваровУслугЗапрос>
	{
	}
	[Маршрут("Документы/ПоступлениеТоваровУслуг/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ПоступлениеТоваровУслуг/ПоСсылке","{Ссылка}")]
	public class ПоступлениеТоваровУслугНайтиПоСсылке: V82.ДокументыСсылка.ПоступлениеТоваровУслуг,IReturn<ПоступлениеТоваровУслугНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ПоступлениеТоваровУслуг/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ПоступлениеТоваровУслуг/ПоНомеру","{Номер}")]
	public class ПоступлениеТоваровУслугНайтиПоНомеру: V82.ДокументыСсылка.ПоступлениеТоваровУслуг,IReturn<ПоступлениеТоваровУслугНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ПоступлениеТоваровУслуг/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ПоступлениеТоваровУслуг/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПоступлениеТоваровУслуг/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ПоступлениеТоваровУслугВыбратьПоСсылке: V82.ДокументыСсылка.ПоступлениеТоваровУслуг,IReturn<ПоступлениеТоваровУслугВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ПоступлениеТоваровУслуг/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ПоступлениеТоваровУслуг/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПоступлениеТоваровУслуг/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ПоступлениеТоваровУслугВыбратьПоНомеру: V82.ДокументыСсылка.ПоступлениеТоваровУслуг,IReturn<ПоступлениеТоваровУслугВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ПоступлениеТоваровУслуг/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ПоступлениеТоваровУслугСтраницаПоСсылке: V82.ДокументыСсылка.ПоступлениеТоваровУслуг,IReturn<ПоступлениеТоваровУслугСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ПоступлениеТоваровУслуг/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ПоступлениеТоваровУслугСтраницаПоНомеру: V82.ДокументыСсылка.ПоступлениеТоваровУслуг,IReturn<ПоступлениеТоваровУслугСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ПоступлениеТоваровУслугОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ПоступлениеТоваровУслугСервис : Service
	{
		
		public object Get(ПоступлениеТоваровУслугЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ПоступлениеТоваровУслугНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ПоступлениеТоваровУслуг.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ПоступлениеТоваровУслугОтвет() { Ответ = "ПоступлениеТоваровУслуг c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПоступлениеТоваровУслугНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ПоступлениеТоваровУслуг.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ПоступлениеТоваровУслугОтвет() {Ответ = "ПоступлениеТоваровУслуг c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПоступлениеТоваровУслугВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ПоступлениеТоваровУслуг.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ПоступлениеТоваровУслугВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ПоступлениеТоваровУслугСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ПоступлениеТоваровУслугСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ПоступлениеТоваровУслугЗапрос Запрос)
		{
			return new ПоступлениеТоваровУслугОтвет {Ответ = "ПоступлениеТоваровУслуг, "};
		}

		public object Post(ПоступлениеТоваровУслугЗапрос ЗапросПоступлениеТоваровУслуг)
		{
			var Ссылка = (ДокументыСсылка.ПоступлениеТоваровУслуг)ЗапросПоступлениеТоваровУслуг;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}