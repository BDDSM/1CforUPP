
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//UchetZatratNaIstochnikiPersonala
	[Маршрут("Документы/УчетЗатратНаИсточникиПерсонала","")]
	public class УчетЗатратНаИсточникиПерсоналаЗапрос: V82.ДокументыСсылка.УчетЗатратНаИсточникиПерсонала,IReturn<УчетЗатратНаИсточникиПерсоналаЗапрос>
	{
	}
	[Маршрут("Документы/УчетЗатратНаИсточникиПерсонала/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/УчетЗатратНаИсточникиПерсонала/ПоСсылке","{Ссылка}")]
	public class УчетЗатратНаИсточникиПерсоналаНайтиПоСсылке: V82.ДокументыСсылка.УчетЗатратНаИсточникиПерсонала,IReturn<УчетЗатратНаИсточникиПерсоналаНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/УчетЗатратНаИсточникиПерсонала/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/УчетЗатратНаИсточникиПерсонала/ПоНомеру","{Номер}")]
	public class УчетЗатратНаИсточникиПерсоналаНайтиПоНомеру: V82.ДокументыСсылка.УчетЗатратНаИсточникиПерсонала,IReturn<УчетЗатратНаИсточникиПерсоналаНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/УчетЗатратНаИсточникиПерсонала/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/УчетЗатратНаИсточникиПерсонала/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/УчетЗатратНаИсточникиПерсонала/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class УчетЗатратНаИсточникиПерсоналаВыбратьПоСсылке: V82.ДокументыСсылка.УчетЗатратНаИсточникиПерсонала,IReturn<УчетЗатратНаИсточникиПерсоналаВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/УчетЗатратНаИсточникиПерсонала/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/УчетЗатратНаИсточникиПерсонала/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/УчетЗатратНаИсточникиПерсонала/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class УчетЗатратНаИсточникиПерсоналаВыбратьПоНомеру: V82.ДокументыСсылка.УчетЗатратНаИсточникиПерсонала,IReturn<УчетЗатратНаИсточникиПерсоналаВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/УчетЗатратНаИсточникиПерсонала/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class УчетЗатратНаИсточникиПерсоналаСтраницаПоСсылке: V82.ДокументыСсылка.УчетЗатратНаИсточникиПерсонала,IReturn<УчетЗатратНаИсточникиПерсоналаСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/УчетЗатратНаИсточникиПерсонала/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class УчетЗатратНаИсточникиПерсоналаСтраницаПоНомеру: V82.ДокументыСсылка.УчетЗатратНаИсточникиПерсонала,IReturn<УчетЗатратНаИсточникиПерсоналаСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class УчетЗатратНаИсточникиПерсоналаОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class УчетЗатратНаИсточникиПерсоналаСервис : Service
	{
		
		public object Get(УчетЗатратНаИсточникиПерсоналаЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(УчетЗатратНаИсточникиПерсоналаНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.УчетЗатратНаИсточникиПерсонала.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new УчетЗатратНаИсточникиПерсоналаОтвет() { Ответ = "УчетЗатратНаИсточникиПерсонала c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(УчетЗатратНаИсточникиПерсоналаНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.УчетЗатратНаИсточникиПерсонала.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new УчетЗатратНаИсточникиПерсоналаОтвет() {Ответ = "УчетЗатратНаИсточникиПерсонала c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(УчетЗатратНаИсточникиПерсоналаВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.УчетЗатратНаИсточникиПерсонала.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(УчетЗатратНаИсточникиПерсоналаВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(УчетЗатратНаИсточникиПерсоналаСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(УчетЗатратНаИсточникиПерсоналаСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(УчетЗатратНаИсточникиПерсоналаЗапрос Запрос)
		{
			return new УчетЗатратНаИсточникиПерсоналаОтвет {Ответ = "УчетЗатратНаИсточникиПерсонала, "};
		}

		public object Post(УчетЗатратНаИсточникиПерсоналаЗапрос ЗапросУчетЗатратНаИсточникиПерсонала)
		{
			var Ссылка = (ДокументыСсылка.УчетЗатратНаИсточникиПерсонала)ЗапросУчетЗатратНаИсточникиПерсонала;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}