
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//AktOtboraProbNomenklatury
	[Маршрут("Документы/АктОтбораПробНоменклатуры","")]
	public class АктОтбораПробНоменклатурыЗапрос: V82.ДокументыСсылка.АктОтбораПробНоменклатуры,IReturn<АктОтбораПробНоменклатурыЗапрос>
	{
	}
	[Маршрут("Документы/АктОтбораПробНоменклатуры/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/АктОтбораПробНоменклатуры/ПоСсылке","{Ссылка}")]
	public class АктОтбораПробНоменклатурыНайтиПоСсылке: V82.ДокументыСсылка.АктОтбораПробНоменклатуры,IReturn<АктОтбораПробНоменклатурыНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/АктОтбораПробНоменклатуры/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/АктОтбораПробНоменклатуры/ПоНомеру","{Номер}")]
	public class АктОтбораПробНоменклатурыНайтиПоНомеру: V82.ДокументыСсылка.АктОтбораПробНоменклатуры,IReturn<АктОтбораПробНоменклатурыНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/АктОтбораПробНоменклатуры/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/АктОтбораПробНоменклатуры/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/АктОтбораПробНоменклатуры/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class АктОтбораПробНоменклатурыВыбратьПоСсылке: V82.ДокументыСсылка.АктОтбораПробНоменклатуры,IReturn<АктОтбораПробНоменклатурыВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/АктОтбораПробНоменклатуры/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/АктОтбораПробНоменклатуры/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/АктОтбораПробНоменклатуры/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class АктОтбораПробНоменклатурыВыбратьПоНомеру: V82.ДокументыСсылка.АктОтбораПробНоменклатуры,IReturn<АктОтбораПробНоменклатурыВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/АктОтбораПробНоменклатуры/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class АктОтбораПробНоменклатурыСтраницаПоСсылке: V82.ДокументыСсылка.АктОтбораПробНоменклатуры,IReturn<АктОтбораПробНоменклатурыСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/АктОтбораПробНоменклатуры/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class АктОтбораПробНоменклатурыСтраницаПоНомеру: V82.ДокументыСсылка.АктОтбораПробНоменклатуры,IReturn<АктОтбораПробНоменклатурыСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class АктОтбораПробНоменклатурыОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class АктОтбораПробНоменклатурыСервис : Service
	{
		
		public object Get(АктОтбораПробНоменклатурыЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(АктОтбораПробНоменклатурыНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.АктОтбораПробНоменклатуры.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new АктОтбораПробНоменклатурыОтвет() { Ответ = "АктОтбораПробНоменклатуры c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(АктОтбораПробНоменклатурыНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.АктОтбораПробНоменклатуры.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new АктОтбораПробНоменклатурыОтвет() {Ответ = "АктОтбораПробНоменклатуры c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(АктОтбораПробНоменклатурыВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.АктОтбораПробНоменклатуры.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(АктОтбораПробНоменклатурыВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(АктОтбораПробНоменклатурыСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(АктОтбораПробНоменклатурыСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(АктОтбораПробНоменклатурыЗапрос Запрос)
		{
			return new АктОтбораПробНоменклатурыОтвет {Ответ = "АктОтбораПробНоменклатуры, "};
		}

		public object Post(АктОтбораПробНоменклатурыЗапрос ЗапросАктОтбораПробНоменклатуры)
		{
			var Ссылка = (ДокументыСсылка.АктОтбораПробНоменклатуры)ЗапросАктОтбораПробНоменклатуры;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}