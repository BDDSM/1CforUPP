
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//PodgotovkaKPeredacheOS
	[Маршрут("Документы/ПодготовкаКПередачеОС","")]
	public class ПодготовкаКПередачеОСЗапрос: V82.ДокументыСсылка.ПодготовкаКПередачеОС,IReturn<ПодготовкаКПередачеОСЗапрос>
	{
	}
	[Маршрут("Документы/ПодготовкаКПередачеОС/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ПодготовкаКПередачеОС/ПоСсылке","{Ссылка}")]
	public class ПодготовкаКПередачеОСНайтиПоСсылке: V82.ДокументыСсылка.ПодготовкаКПередачеОС,IReturn<ПодготовкаКПередачеОСНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ПодготовкаКПередачеОС/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ПодготовкаКПередачеОС/ПоНомеру","{Номер}")]
	public class ПодготовкаКПередачеОСНайтиПоНомеру: V82.ДокументыСсылка.ПодготовкаКПередачеОС,IReturn<ПодготовкаКПередачеОСНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ПодготовкаКПередачеОС/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ПодготовкаКПередачеОС/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПодготовкаКПередачеОС/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ПодготовкаКПередачеОСВыбратьПоСсылке: V82.ДокументыСсылка.ПодготовкаКПередачеОС,IReturn<ПодготовкаКПередачеОСВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ПодготовкаКПередачеОС/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ПодготовкаКПередачеОС/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПодготовкаКПередачеОС/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ПодготовкаКПередачеОСВыбратьПоНомеру: V82.ДокументыСсылка.ПодготовкаКПередачеОС,IReturn<ПодготовкаКПередачеОСВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ПодготовкаКПередачеОС/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ПодготовкаКПередачеОССтраницаПоСсылке: V82.ДокументыСсылка.ПодготовкаКПередачеОС,IReturn<ПодготовкаКПередачеОССтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ПодготовкаКПередачеОС/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ПодготовкаКПередачеОССтраницаПоНомеру: V82.ДокументыСсылка.ПодготовкаКПередачеОС,IReturn<ПодготовкаКПередачеОССтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ПодготовкаКПередачеОСОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ПодготовкаКПередачеОССервис : Service
	{
		
		public object Get(ПодготовкаКПередачеОСЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ПодготовкаКПередачеОСНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ПодготовкаКПередачеОС.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ПодготовкаКПередачеОСОтвет() { Ответ = "ПодготовкаКПередачеОС c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПодготовкаКПередачеОСНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ПодготовкаКПередачеОС.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ПодготовкаКПередачеОСОтвет() {Ответ = "ПодготовкаКПередачеОС c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПодготовкаКПередачеОСВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ПодготовкаКПередачеОС.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ПодготовкаКПередачеОСВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ПодготовкаКПередачеОССтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ПодготовкаКПередачеОССтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ПодготовкаКПередачеОСЗапрос Запрос)
		{
			return new ПодготовкаКПередачеОСОтвет {Ответ = "ПодготовкаКПередачеОС, "};
		}

		public object Post(ПодготовкаКПередачеОСЗапрос ЗапросПодготовкаКПередачеОС)
		{
			var Ссылка = (ДокументыСсылка.ПодготовкаКПередачеОС)ЗапросПодготовкаКПередачеОС;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}