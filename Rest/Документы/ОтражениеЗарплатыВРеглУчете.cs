
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//OtrazhenieZarplatyVReglUchete
	[Маршрут("Документы/ОтражениеЗарплатыВРеглУчете","")]
	public class ОтражениеЗарплатыВРеглУчетеЗапрос: V82.ДокументыСсылка.ОтражениеЗарплатыВРеглУчете,IReturn<ОтражениеЗарплатыВРеглУчетеЗапрос>
	{
	}
	[Маршрут("Документы/ОтражениеЗарплатыВРеглУчете/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ОтражениеЗарплатыВРеглУчете/ПоСсылке","{Ссылка}")]
	public class ОтражениеЗарплатыВРеглУчетеНайтиПоСсылке: V82.ДокументыСсылка.ОтражениеЗарплатыВРеглУчете,IReturn<ОтражениеЗарплатыВРеглУчетеНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ОтражениеЗарплатыВРеглУчете/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ОтражениеЗарплатыВРеглУчете/ПоНомеру","{Номер}")]
	public class ОтражениеЗарплатыВРеглУчетеНайтиПоНомеру: V82.ДокументыСсылка.ОтражениеЗарплатыВРеглУчете,IReturn<ОтражениеЗарплатыВРеглУчетеНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ОтражениеЗарплатыВРеглУчете/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ОтражениеЗарплатыВРеглУчете/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ОтражениеЗарплатыВРеглУчете/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ОтражениеЗарплатыВРеглУчетеВыбратьПоСсылке: V82.ДокументыСсылка.ОтражениеЗарплатыВРеглУчете,IReturn<ОтражениеЗарплатыВРеглУчетеВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ОтражениеЗарплатыВРеглУчете/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ОтражениеЗарплатыВРеглУчете/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ОтражениеЗарплатыВРеглУчете/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ОтражениеЗарплатыВРеглУчетеВыбратьПоНомеру: V82.ДокументыСсылка.ОтражениеЗарплатыВРеглУчете,IReturn<ОтражениеЗарплатыВРеглУчетеВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ОтражениеЗарплатыВРеглУчете/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ОтражениеЗарплатыВРеглУчетеСтраницаПоСсылке: V82.ДокументыСсылка.ОтражениеЗарплатыВРеглУчете,IReturn<ОтражениеЗарплатыВРеглУчетеСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ОтражениеЗарплатыВРеглУчете/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ОтражениеЗарплатыВРеглУчетеСтраницаПоНомеру: V82.ДокументыСсылка.ОтражениеЗарплатыВРеглУчете,IReturn<ОтражениеЗарплатыВРеглУчетеСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ОтражениеЗарплатыВРеглУчетеОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ОтражениеЗарплатыВРеглУчетеСервис : Service
	{
		
		public object Get(ОтражениеЗарплатыВРеглУчетеЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ОтражениеЗарплатыВРеглУчетеНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ОтражениеЗарплатыВРеглУчете.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ОтражениеЗарплатыВРеглУчетеОтвет() { Ответ = "ОтражениеЗарплатыВРеглУчете c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ОтражениеЗарплатыВРеглУчетеНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ОтражениеЗарплатыВРеглУчете.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ОтражениеЗарплатыВРеглУчетеОтвет() {Ответ = "ОтражениеЗарплатыВРеглУчете c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ОтражениеЗарплатыВРеглУчетеВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ОтражениеЗарплатыВРеглУчете.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ОтражениеЗарплатыВРеглУчетеВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ОтражениеЗарплатыВРеглУчетеСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ОтражениеЗарплатыВРеглУчетеСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ОтражениеЗарплатыВРеглУчетеЗапрос Запрос)
		{
			return new ОтражениеЗарплатыВРеглУчетеОтвет {Ответ = "ОтражениеЗарплатыВРеглУчете, "};
		}

		public object Post(ОтражениеЗарплатыВРеглУчетеЗапрос ЗапросОтражениеЗарплатыВРеглУчете)
		{
			var Ссылка = (ДокументыСсылка.ОтражениеЗарплатыВРеглУчете)ЗапросОтражениеЗарплатыВРеглУчете;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}