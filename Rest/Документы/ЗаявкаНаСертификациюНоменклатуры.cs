
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//ZayavkaNaSertifikaciyuNomenklatury
	[Маршрут("Документы/ЗаявкаНаСертификациюНоменклатуры","")]
	public class ЗаявкаНаСертификациюНоменклатурыЗапрос: V82.ДокументыСсылка.ЗаявкаНаСертификациюНоменклатуры,IReturn<ЗаявкаНаСертификациюНоменклатурыЗапрос>
	{
	}
	[Маршрут("Документы/ЗаявкаНаСертификациюНоменклатуры/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ЗаявкаНаСертификациюНоменклатуры/ПоСсылке","{Ссылка}")]
	public class ЗаявкаНаСертификациюНоменклатурыНайтиПоСсылке: V82.ДокументыСсылка.ЗаявкаНаСертификациюНоменклатуры,IReturn<ЗаявкаНаСертификациюНоменклатурыНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ЗаявкаНаСертификациюНоменклатуры/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ЗаявкаНаСертификациюНоменклатуры/ПоНомеру","{Номер}")]
	public class ЗаявкаНаСертификациюНоменклатурыНайтиПоНомеру: V82.ДокументыСсылка.ЗаявкаНаСертификациюНоменклатуры,IReturn<ЗаявкаНаСертификациюНоменклатурыНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ЗаявкаНаСертификациюНоменклатуры/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ЗаявкаНаСертификациюНоменклатуры/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ЗаявкаНаСертификациюНоменклатуры/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ЗаявкаНаСертификациюНоменклатурыВыбратьПоСсылке: V82.ДокументыСсылка.ЗаявкаНаСертификациюНоменклатуры,IReturn<ЗаявкаНаСертификациюНоменклатурыВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ЗаявкаНаСертификациюНоменклатуры/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ЗаявкаНаСертификациюНоменклатуры/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ЗаявкаНаСертификациюНоменклатуры/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ЗаявкаНаСертификациюНоменклатурыВыбратьПоНомеру: V82.ДокументыСсылка.ЗаявкаНаСертификациюНоменклатуры,IReturn<ЗаявкаНаСертификациюНоменклатурыВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ЗаявкаНаСертификациюНоменклатуры/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ЗаявкаНаСертификациюНоменклатурыСтраницаПоСсылке: V82.ДокументыСсылка.ЗаявкаНаСертификациюНоменклатуры,IReturn<ЗаявкаНаСертификациюНоменклатурыСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ЗаявкаНаСертификациюНоменклатуры/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ЗаявкаНаСертификациюНоменклатурыСтраницаПоНомеру: V82.ДокументыСсылка.ЗаявкаНаСертификациюНоменклатуры,IReturn<ЗаявкаНаСертификациюНоменклатурыСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ЗаявкаНаСертификациюНоменклатурыОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ЗаявкаНаСертификациюНоменклатурыСервис : Service
	{
		
		public object Get(ЗаявкаНаСертификациюНоменклатурыЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ЗаявкаНаСертификациюНоменклатурыНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ЗаявкаНаСертификациюНоменклатуры.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ЗаявкаНаСертификациюНоменклатурыОтвет() { Ответ = "ЗаявкаНаСертификациюНоменклатуры c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ЗаявкаНаСертификациюНоменклатурыНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ЗаявкаНаСертификациюНоменклатуры.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ЗаявкаНаСертификациюНоменклатурыОтвет() {Ответ = "ЗаявкаНаСертификациюНоменклатуры c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ЗаявкаНаСертификациюНоменклатурыВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ЗаявкаНаСертификациюНоменклатуры.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ЗаявкаНаСертификациюНоменклатурыВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ЗаявкаНаСертификациюНоменклатурыСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ЗаявкаНаСертификациюНоменклатурыСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ЗаявкаНаСертификациюНоменклатурыЗапрос Запрос)
		{
			return new ЗаявкаНаСертификациюНоменклатурыОтвет {Ответ = "ЗаявкаНаСертификациюНоменклатуры, "};
		}

		public object Post(ЗаявкаНаСертификациюНоменклатурыЗапрос ЗапросЗаявкаНаСертификациюНоменклатуры)
		{
			var Ссылка = (ДокументыСсылка.ЗаявкаНаСертификациюНоменклатуры)ЗапросЗаявкаНаСертификациюНоменклатуры;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}