
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//InventarizaciyaTovarovNaSklade
	[Маршрут("Документы/ИнвентаризацияТоваровНаСкладе","")]
	public class ИнвентаризацияТоваровНаСкладеЗапрос: V82.ДокументыСсылка.ИнвентаризацияТоваровНаСкладе,IReturn<ИнвентаризацияТоваровНаСкладеЗапрос>
	{
	}
	[Маршрут("Документы/ИнвентаризацияТоваровНаСкладе/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ИнвентаризацияТоваровНаСкладе/ПоСсылке","{Ссылка}")]
	public class ИнвентаризацияТоваровНаСкладеНайтиПоСсылке: V82.ДокументыСсылка.ИнвентаризацияТоваровНаСкладе,IReturn<ИнвентаризацияТоваровНаСкладеНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ИнвентаризацияТоваровНаСкладе/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ИнвентаризацияТоваровНаСкладе/ПоНомеру","{Номер}")]
	public class ИнвентаризацияТоваровНаСкладеНайтиПоНомеру: V82.ДокументыСсылка.ИнвентаризацияТоваровНаСкладе,IReturn<ИнвентаризацияТоваровНаСкладеНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ИнвентаризацияТоваровНаСкладе/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ИнвентаризацияТоваровНаСкладе/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ИнвентаризацияТоваровНаСкладе/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ИнвентаризацияТоваровНаСкладеВыбратьПоСсылке: V82.ДокументыСсылка.ИнвентаризацияТоваровНаСкладе,IReturn<ИнвентаризацияТоваровНаСкладеВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ИнвентаризацияТоваровНаСкладе/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ИнвентаризацияТоваровНаСкладе/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ИнвентаризацияТоваровНаСкладе/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ИнвентаризацияТоваровНаСкладеВыбратьПоНомеру: V82.ДокументыСсылка.ИнвентаризацияТоваровНаСкладе,IReturn<ИнвентаризацияТоваровНаСкладеВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ИнвентаризацияТоваровНаСкладе/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ИнвентаризацияТоваровНаСкладеСтраницаПоСсылке: V82.ДокументыСсылка.ИнвентаризацияТоваровНаСкладе,IReturn<ИнвентаризацияТоваровНаСкладеСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ИнвентаризацияТоваровНаСкладе/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ИнвентаризацияТоваровНаСкладеСтраницаПоНомеру: V82.ДокументыСсылка.ИнвентаризацияТоваровНаСкладе,IReturn<ИнвентаризацияТоваровНаСкладеСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ИнвентаризацияТоваровНаСкладеОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ИнвентаризацияТоваровНаСкладеСервис : Service
	{
		
		public object Get(ИнвентаризацияТоваровНаСкладеЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ИнвентаризацияТоваровНаСкладеНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ИнвентаризацияТоваровНаСкладе.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ИнвентаризацияТоваровНаСкладеОтвет() { Ответ = "ИнвентаризацияТоваровНаСкладе c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ИнвентаризацияТоваровНаСкладеНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ИнвентаризацияТоваровНаСкладе.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ИнвентаризацияТоваровНаСкладеОтвет() {Ответ = "ИнвентаризацияТоваровНаСкладе c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ИнвентаризацияТоваровНаСкладеВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ИнвентаризацияТоваровНаСкладе.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ИнвентаризацияТоваровНаСкладеВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ИнвентаризацияТоваровНаСкладеСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ИнвентаризацияТоваровНаСкладеСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ИнвентаризацияТоваровНаСкладеЗапрос Запрос)
		{
			return new ИнвентаризацияТоваровНаСкладеОтвет {Ответ = "ИнвентаризацияТоваровНаСкладе, "};
		}

		public object Post(ИнвентаризацияТоваровНаСкладеЗапрос ЗапросИнвентаризацияТоваровНаСкладе)
		{
			var Ссылка = (ДокументыСсылка.ИнвентаризацияТоваровНаСкладе)ЗапросИнвентаризацияТоваровНаСкладе;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}