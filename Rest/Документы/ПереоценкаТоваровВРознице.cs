
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//PereocenkaTovarovVRoznice
	[Маршрут("Документы/ПереоценкаТоваровВРознице","")]
	public class ПереоценкаТоваровВРозницеЗапрос: V82.ДокументыСсылка.ПереоценкаТоваровВРознице,IReturn<ПереоценкаТоваровВРозницеЗапрос>
	{
	}
	[Маршрут("Документы/ПереоценкаТоваровВРознице/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ПереоценкаТоваровВРознице/ПоСсылке","{Ссылка}")]
	public class ПереоценкаТоваровВРозницеНайтиПоСсылке: V82.ДокументыСсылка.ПереоценкаТоваровВРознице,IReturn<ПереоценкаТоваровВРозницеНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ПереоценкаТоваровВРознице/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ПереоценкаТоваровВРознице/ПоНомеру","{Номер}")]
	public class ПереоценкаТоваровВРозницеНайтиПоНомеру: V82.ДокументыСсылка.ПереоценкаТоваровВРознице,IReturn<ПереоценкаТоваровВРозницеНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ПереоценкаТоваровВРознице/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ПереоценкаТоваровВРознице/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПереоценкаТоваровВРознице/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ПереоценкаТоваровВРозницеВыбратьПоСсылке: V82.ДокументыСсылка.ПереоценкаТоваровВРознице,IReturn<ПереоценкаТоваровВРозницеВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ПереоценкаТоваровВРознице/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ПереоценкаТоваровВРознице/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПереоценкаТоваровВРознице/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ПереоценкаТоваровВРозницеВыбратьПоНомеру: V82.ДокументыСсылка.ПереоценкаТоваровВРознице,IReturn<ПереоценкаТоваровВРозницеВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ПереоценкаТоваровВРознице/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ПереоценкаТоваровВРозницеСтраницаПоСсылке: V82.ДокументыСсылка.ПереоценкаТоваровВРознице,IReturn<ПереоценкаТоваровВРозницеСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ПереоценкаТоваровВРознице/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ПереоценкаТоваровВРозницеСтраницаПоНомеру: V82.ДокументыСсылка.ПереоценкаТоваровВРознице,IReturn<ПереоценкаТоваровВРозницеСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ПереоценкаТоваровВРозницеОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ПереоценкаТоваровВРозницеСервис : Service
	{
		
		public object Get(ПереоценкаТоваровВРозницеЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ПереоценкаТоваровВРозницеНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ПереоценкаТоваровВРознице.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ПереоценкаТоваровВРозницеОтвет() { Ответ = "ПереоценкаТоваровВРознице c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПереоценкаТоваровВРозницеНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ПереоценкаТоваровВРознице.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ПереоценкаТоваровВРозницеОтвет() {Ответ = "ПереоценкаТоваровВРознице c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПереоценкаТоваровВРозницеВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ПереоценкаТоваровВРознице.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ПереоценкаТоваровВРозницеВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ПереоценкаТоваровВРозницеСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ПереоценкаТоваровВРозницеСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ПереоценкаТоваровВРозницеЗапрос Запрос)
		{
			return new ПереоценкаТоваровВРозницеОтвет {Ответ = "ПереоценкаТоваровВРознице, "};
		}

		public object Post(ПереоценкаТоваровВРозницеЗапрос ЗапросПереоценкаТоваровВРознице)
		{
			var Ссылка = (ДокументыСсылка.ПереоценкаТоваровВРознице)ЗапросПереоценкаТоваровВРознице;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}