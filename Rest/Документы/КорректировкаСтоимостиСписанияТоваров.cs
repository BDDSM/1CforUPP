
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//KorrektirovkaStoimostiSpisaniyaTovarov
	[Маршрут("Документы/КорректировкаСтоимостиСписанияТоваров","")]
	public class КорректировкаСтоимостиСписанияТоваровЗапрос: V82.ДокументыСсылка.КорректировкаСтоимостиСписанияТоваров,IReturn<КорректировкаСтоимостиСписанияТоваровЗапрос>
	{
	}
	[Маршрут("Документы/КорректировкаСтоимостиСписанияТоваров/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/КорректировкаСтоимостиСписанияТоваров/ПоСсылке","{Ссылка}")]
	public class КорректировкаСтоимостиСписанияТоваровНайтиПоСсылке: V82.ДокументыСсылка.КорректировкаСтоимостиСписанияТоваров,IReturn<КорректировкаСтоимостиСписанияТоваровНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/КорректировкаСтоимостиСписанияТоваров/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/КорректировкаСтоимостиСписанияТоваров/ПоНомеру","{Номер}")]
	public class КорректировкаСтоимостиСписанияТоваровНайтиПоНомеру: V82.ДокументыСсылка.КорректировкаСтоимостиСписанияТоваров,IReturn<КорректировкаСтоимостиСписанияТоваровНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/КорректировкаСтоимостиСписанияТоваров/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/КорректировкаСтоимостиСписанияТоваров/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/КорректировкаСтоимостиСписанияТоваров/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class КорректировкаСтоимостиСписанияТоваровВыбратьПоСсылке: V82.ДокументыСсылка.КорректировкаСтоимостиСписанияТоваров,IReturn<КорректировкаСтоимостиСписанияТоваровВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/КорректировкаСтоимостиСписанияТоваров/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/КорректировкаСтоимостиСписанияТоваров/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/КорректировкаСтоимостиСписанияТоваров/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class КорректировкаСтоимостиСписанияТоваровВыбратьПоНомеру: V82.ДокументыСсылка.КорректировкаСтоимостиСписанияТоваров,IReturn<КорректировкаСтоимостиСписанияТоваровВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/КорректировкаСтоимостиСписанияТоваров/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class КорректировкаСтоимостиСписанияТоваровСтраницаПоСсылке: V82.ДокументыСсылка.КорректировкаСтоимостиСписанияТоваров,IReturn<КорректировкаСтоимостиСписанияТоваровСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/КорректировкаСтоимостиСписанияТоваров/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class КорректировкаСтоимостиСписанияТоваровСтраницаПоНомеру: V82.ДокументыСсылка.КорректировкаСтоимостиСписанияТоваров,IReturn<КорректировкаСтоимостиСписанияТоваровСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class КорректировкаСтоимостиСписанияТоваровОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class КорректировкаСтоимостиСписанияТоваровСервис : Service
	{
		
		public object Get(КорректировкаСтоимостиСписанияТоваровЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(КорректировкаСтоимостиСписанияТоваровНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.КорректировкаСтоимостиСписанияТоваров.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new КорректировкаСтоимостиСписанияТоваровОтвет() { Ответ = "КорректировкаСтоимостиСписанияТоваров c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(КорректировкаСтоимостиСписанияТоваровНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.КорректировкаСтоимостиСписанияТоваров.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new КорректировкаСтоимостиСписанияТоваровОтвет() {Ответ = "КорректировкаСтоимостиСписанияТоваров c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(КорректировкаСтоимостиСписанияТоваровВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.КорректировкаСтоимостиСписанияТоваров.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(КорректировкаСтоимостиСписанияТоваровВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(КорректировкаСтоимостиСписанияТоваровСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(КорректировкаСтоимостиСписанияТоваровСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(КорректировкаСтоимостиСписанияТоваровЗапрос Запрос)
		{
			return new КорректировкаСтоимостиСписанияТоваровОтвет {Ответ = "КорректировкаСтоимостиСписанияТоваров, "};
		}

		public object Post(КорректировкаСтоимостиСписанияТоваровЗапрос ЗапросКорректировкаСтоимостиСписанияТоваров)
		{
			var Ссылка = (ДокументыСсылка.КорректировкаСтоимостиСписанияТоваров)ЗапросКорректировкаСтоимостиСписанияТоваров;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}