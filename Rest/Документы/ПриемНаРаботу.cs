
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//PriemNaRabotu
	[Маршрут("Документы/ПриемНаРаботу","")]
	public class ПриемНаРаботуЗапрос: V82.ДокументыСсылка.ПриемНаРаботу,IReturn<ПриемНаРаботуЗапрос>
	{
	}
	[Маршрут("Документы/ПриемНаРаботу/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ПриемНаРаботу/ПоСсылке","{Ссылка}")]
	public class ПриемНаРаботуНайтиПоСсылке: V82.ДокументыСсылка.ПриемНаРаботу,IReturn<ПриемНаРаботуНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ПриемНаРаботу/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ПриемНаРаботу/ПоНомеру","{Номер}")]
	public class ПриемНаРаботуНайтиПоНомеру: V82.ДокументыСсылка.ПриемНаРаботу,IReturn<ПриемНаРаботуНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ПриемНаРаботу/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ПриемНаРаботу/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПриемНаРаботу/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ПриемНаРаботуВыбратьПоСсылке: V82.ДокументыСсылка.ПриемНаРаботу,IReturn<ПриемНаРаботуВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ПриемНаРаботу/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ПриемНаРаботу/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПриемНаРаботу/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ПриемНаРаботуВыбратьПоНомеру: V82.ДокументыСсылка.ПриемНаРаботу,IReturn<ПриемНаРаботуВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ПриемНаРаботу/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ПриемНаРаботуСтраницаПоСсылке: V82.ДокументыСсылка.ПриемНаРаботу,IReturn<ПриемНаРаботуСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ПриемНаРаботу/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ПриемНаРаботуСтраницаПоНомеру: V82.ДокументыСсылка.ПриемНаРаботу,IReturn<ПриемНаРаботуСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ПриемНаРаботуОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ПриемНаРаботуСервис : Service
	{
		
		public object Get(ПриемНаРаботуЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ПриемНаРаботуНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ПриемНаРаботу.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ПриемНаРаботуОтвет() { Ответ = "ПриемНаРаботу c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПриемНаРаботуНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ПриемНаРаботу.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ПриемНаРаботуОтвет() {Ответ = "ПриемНаРаботу c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПриемНаРаботуВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ПриемНаРаботу.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ПриемНаРаботуВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ПриемНаРаботуСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ПриемНаРаботуСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ПриемНаРаботуЗапрос Запрос)
		{
			return new ПриемНаРаботуОтвет {Ответ = "ПриемНаРаботу, "};
		}

		public object Post(ПриемНаРаботуЗапрос ЗапросПриемНаРаботу)
		{
			var Ссылка = (ДокументыСсылка.ПриемНаРаботу)ЗапросПриемНаРаботу;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}