
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//VvodRaspredeleniyaZarabotkaRabotnikov
	[Маршрут("Документы/ВводРаспределенияЗаработкаРаботников","")]
	public class ВводРаспределенияЗаработкаРаботниковЗапрос: V82.ДокументыСсылка.ВводРаспределенияЗаработкаРаботников,IReturn<ВводРаспределенияЗаработкаРаботниковЗапрос>
	{
	}
	[Маршрут("Документы/ВводРаспределенияЗаработкаРаботников/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ВводРаспределенияЗаработкаРаботников/ПоСсылке","{Ссылка}")]
	public class ВводРаспределенияЗаработкаРаботниковНайтиПоСсылке: V82.ДокументыСсылка.ВводРаспределенияЗаработкаРаботников,IReturn<ВводРаспределенияЗаработкаРаботниковНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ВводРаспределенияЗаработкаРаботников/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ВводРаспределенияЗаработкаРаботников/ПоНомеру","{Номер}")]
	public class ВводРаспределенияЗаработкаРаботниковНайтиПоНомеру: V82.ДокументыСсылка.ВводРаспределенияЗаработкаРаботников,IReturn<ВводРаспределенияЗаработкаРаботниковНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ВводРаспределенияЗаработкаРаботников/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ВводРаспределенияЗаработкаРаботников/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ВводРаспределенияЗаработкаРаботников/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ВводРаспределенияЗаработкаРаботниковВыбратьПоСсылке: V82.ДокументыСсылка.ВводРаспределенияЗаработкаРаботников,IReturn<ВводРаспределенияЗаработкаРаботниковВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ВводРаспределенияЗаработкаРаботников/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ВводРаспределенияЗаработкаРаботников/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ВводРаспределенияЗаработкаРаботников/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ВводРаспределенияЗаработкаРаботниковВыбратьПоНомеру: V82.ДокументыСсылка.ВводРаспределенияЗаработкаРаботников,IReturn<ВводРаспределенияЗаработкаРаботниковВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ВводРаспределенияЗаработкаРаботников/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ВводРаспределенияЗаработкаРаботниковСтраницаПоСсылке: V82.ДокументыСсылка.ВводРаспределенияЗаработкаРаботников,IReturn<ВводРаспределенияЗаработкаРаботниковСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ВводРаспределенияЗаработкаРаботников/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ВводРаспределенияЗаработкаРаботниковСтраницаПоНомеру: V82.ДокументыСсылка.ВводРаспределенияЗаработкаРаботников,IReturn<ВводРаспределенияЗаработкаРаботниковСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ВводРаспределенияЗаработкаРаботниковОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ВводРаспределенияЗаработкаРаботниковСервис : Service
	{
		
		public object Get(ВводРаспределенияЗаработкаРаботниковЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ВводРаспределенияЗаработкаРаботниковНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ВводРаспределенияЗаработкаРаботников.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ВводРаспределенияЗаработкаРаботниковОтвет() { Ответ = "ВводРаспределенияЗаработкаРаботников c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ВводРаспределенияЗаработкаРаботниковНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ВводРаспределенияЗаработкаРаботников.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ВводРаспределенияЗаработкаРаботниковОтвет() {Ответ = "ВводРаспределенияЗаработкаРаботников c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ВводРаспределенияЗаработкаРаботниковВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ВводРаспределенияЗаработкаРаботников.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ВводРаспределенияЗаработкаРаботниковВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ВводРаспределенияЗаработкаРаботниковСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ВводРаспределенияЗаработкаРаботниковСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ВводРаспределенияЗаработкаРаботниковЗапрос Запрос)
		{
			return new ВводРаспределенияЗаработкаРаботниковОтвет {Ответ = "ВводРаспределенияЗаработкаРаботников, "};
		}

		public object Post(ВводРаспределенияЗаработкаРаботниковЗапрос ЗапросВводРаспределенияЗаработкаРаботников)
		{
			var Ссылка = (ДокументыСсылка.ВводРаспределенияЗаработкаРаботников)ЗапросВводРаспределенияЗаработкаРаботников;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}