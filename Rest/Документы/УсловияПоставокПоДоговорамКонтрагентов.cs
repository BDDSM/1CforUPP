
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//UsloviyaPostavokPoDogovoramKontragentov
	[Маршрут("Документы/УсловияПоставокПоДоговорамКонтрагентов","")]
	public class УсловияПоставокПоДоговорамКонтрагентовЗапрос: V82.ДокументыСсылка.УсловияПоставокПоДоговорамКонтрагентов,IReturn<УсловияПоставокПоДоговорамКонтрагентовЗапрос>
	{
	}
	[Маршрут("Документы/УсловияПоставокПоДоговорамКонтрагентов/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/УсловияПоставокПоДоговорамКонтрагентов/ПоСсылке","{Ссылка}")]
	public class УсловияПоставокПоДоговорамКонтрагентовНайтиПоСсылке: V82.ДокументыСсылка.УсловияПоставокПоДоговорамКонтрагентов,IReturn<УсловияПоставокПоДоговорамКонтрагентовНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/УсловияПоставокПоДоговорамКонтрагентов/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/УсловияПоставокПоДоговорамКонтрагентов/ПоНомеру","{Номер}")]
	public class УсловияПоставокПоДоговорамКонтрагентовНайтиПоНомеру: V82.ДокументыСсылка.УсловияПоставокПоДоговорамКонтрагентов,IReturn<УсловияПоставокПоДоговорамКонтрагентовНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/УсловияПоставокПоДоговорамКонтрагентов/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/УсловияПоставокПоДоговорамКонтрагентов/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/УсловияПоставокПоДоговорамКонтрагентов/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class УсловияПоставокПоДоговорамКонтрагентовВыбратьПоСсылке: V82.ДокументыСсылка.УсловияПоставокПоДоговорамКонтрагентов,IReturn<УсловияПоставокПоДоговорамКонтрагентовВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/УсловияПоставокПоДоговорамКонтрагентов/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/УсловияПоставокПоДоговорамКонтрагентов/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/УсловияПоставокПоДоговорамКонтрагентов/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class УсловияПоставокПоДоговорамКонтрагентовВыбратьПоНомеру: V82.ДокументыСсылка.УсловияПоставокПоДоговорамКонтрагентов,IReturn<УсловияПоставокПоДоговорамКонтрагентовВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/УсловияПоставокПоДоговорамКонтрагентов/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class УсловияПоставокПоДоговорамКонтрагентовСтраницаПоСсылке: V82.ДокументыСсылка.УсловияПоставокПоДоговорамКонтрагентов,IReturn<УсловияПоставокПоДоговорамКонтрагентовСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/УсловияПоставокПоДоговорамКонтрагентов/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class УсловияПоставокПоДоговорамКонтрагентовСтраницаПоНомеру: V82.ДокументыСсылка.УсловияПоставокПоДоговорамКонтрагентов,IReturn<УсловияПоставокПоДоговорамКонтрагентовСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class УсловияПоставокПоДоговорамКонтрагентовОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class УсловияПоставокПоДоговорамКонтрагентовСервис : Service
	{
		
		public object Get(УсловияПоставокПоДоговорамКонтрагентовЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(УсловияПоставокПоДоговорамКонтрагентовНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.УсловияПоставокПоДоговорамКонтрагентов.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new УсловияПоставокПоДоговорамКонтрагентовОтвет() { Ответ = "УсловияПоставокПоДоговорамКонтрагентов c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(УсловияПоставокПоДоговорамКонтрагентовНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.УсловияПоставокПоДоговорамКонтрагентов.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new УсловияПоставокПоДоговорамКонтрагентовОтвет() {Ответ = "УсловияПоставокПоДоговорамКонтрагентов c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(УсловияПоставокПоДоговорамКонтрагентовВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.УсловияПоставокПоДоговорамКонтрагентов.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(УсловияПоставокПоДоговорамКонтрагентовВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(УсловияПоставокПоДоговорамКонтрагентовСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(УсловияПоставокПоДоговорамКонтрагентовСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(УсловияПоставокПоДоговорамКонтрагентовЗапрос Запрос)
		{
			return new УсловияПоставокПоДоговорамКонтрагентовОтвет {Ответ = "УсловияПоставокПоДоговорамКонтрагентов, "};
		}

		public object Post(УсловияПоставокПоДоговорамКонтрагентовЗапрос ЗапросУсловияПоставокПоДоговорамКонтрагентов)
		{
			var Ссылка = (ДокументыСсылка.УсловияПоставокПоДоговорамКонтрагентов)ЗапросУсловияПоставокПоДоговорамКонтрагентов;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}