
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//TabelUchetaRabochegoVremeniOrganizacii
	[Маршрут("Документы/ТабельУчетаРабочегоВремениОрганизации","")]
	public class ТабельУчетаРабочегоВремениОрганизацииЗапрос: V82.ДокументыСсылка.ТабельУчетаРабочегоВремениОрганизации,IReturn<ТабельУчетаРабочегоВремениОрганизацииЗапрос>
	{
	}
	[Маршрут("Документы/ТабельУчетаРабочегоВремениОрганизации/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ТабельУчетаРабочегоВремениОрганизации/ПоСсылке","{Ссылка}")]
	public class ТабельУчетаРабочегоВремениОрганизацииНайтиПоСсылке: V82.ДокументыСсылка.ТабельУчетаРабочегоВремениОрганизации,IReturn<ТабельУчетаРабочегоВремениОрганизацииНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ТабельУчетаРабочегоВремениОрганизации/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ТабельУчетаРабочегоВремениОрганизации/ПоНомеру","{Номер}")]
	public class ТабельУчетаРабочегоВремениОрганизацииНайтиПоНомеру: V82.ДокументыСсылка.ТабельУчетаРабочегоВремениОрганизации,IReturn<ТабельУчетаРабочегоВремениОрганизацииНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ТабельУчетаРабочегоВремениОрганизации/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ТабельУчетаРабочегоВремениОрганизации/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ТабельУчетаРабочегоВремениОрганизации/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ТабельУчетаРабочегоВремениОрганизацииВыбратьПоСсылке: V82.ДокументыСсылка.ТабельУчетаРабочегоВремениОрганизации,IReturn<ТабельУчетаРабочегоВремениОрганизацииВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ТабельУчетаРабочегоВремениОрганизации/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ТабельУчетаРабочегоВремениОрганизации/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ТабельУчетаРабочегоВремениОрганизации/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ТабельУчетаРабочегоВремениОрганизацииВыбратьПоНомеру: V82.ДокументыСсылка.ТабельУчетаРабочегоВремениОрганизации,IReturn<ТабельУчетаРабочегоВремениОрганизацииВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ТабельУчетаРабочегоВремениОрганизации/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ТабельУчетаРабочегоВремениОрганизацииСтраницаПоСсылке: V82.ДокументыСсылка.ТабельУчетаРабочегоВремениОрганизации,IReturn<ТабельУчетаРабочегоВремениОрганизацииСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ТабельУчетаРабочегоВремениОрганизации/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ТабельУчетаРабочегоВремениОрганизацииСтраницаПоНомеру: V82.ДокументыСсылка.ТабельУчетаРабочегоВремениОрганизации,IReturn<ТабельУчетаРабочегоВремениОрганизацииСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ТабельУчетаРабочегоВремениОрганизацииОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ТабельУчетаРабочегоВремениОрганизацииСервис : Service
	{
		
		public object Get(ТабельУчетаРабочегоВремениОрганизацииЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ТабельУчетаРабочегоВремениОрганизацииНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ТабельУчетаРабочегоВремениОрганизации.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ТабельУчетаРабочегоВремениОрганизацииОтвет() { Ответ = "ТабельУчетаРабочегоВремениОрганизации c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ТабельУчетаРабочегоВремениОрганизацииНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ТабельУчетаРабочегоВремениОрганизации.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ТабельУчетаРабочегоВремениОрганизацииОтвет() {Ответ = "ТабельУчетаРабочегоВремениОрганизации c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ТабельУчетаРабочегоВремениОрганизацииВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ТабельУчетаРабочегоВремениОрганизации.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ТабельУчетаРабочегоВремениОрганизацииВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ТабельУчетаРабочегоВремениОрганизацииСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ТабельУчетаРабочегоВремениОрганизацииСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ТабельУчетаРабочегоВремениОрганизацииЗапрос Запрос)
		{
			return new ТабельУчетаРабочегоВремениОрганизацииОтвет {Ответ = "ТабельУчетаРабочегоВремениОрганизации, "};
		}

		public object Post(ТабельУчетаРабочегоВремениОрганизацииЗапрос ЗапросТабельУчетаРабочегоВремениОрганизации)
		{
			var Ссылка = (ДокументыСсылка.ТабельУчетаРабочегоВремениОрганизации)ЗапросТабельУчетаРабочегоВремениОрганизации;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}