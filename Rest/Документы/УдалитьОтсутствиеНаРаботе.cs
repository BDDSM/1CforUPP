
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//UdalitOtsutstvieNaRabote
	[Маршрут("Документы/УдалитьОтсутствиеНаРаботе","")]
	public class УдалитьОтсутствиеНаРаботеЗапрос: V82.ДокументыСсылка.УдалитьОтсутствиеНаРаботе,IReturn<УдалитьОтсутствиеНаРаботеЗапрос>
	{
	}
	[Маршрут("Документы/УдалитьОтсутствиеНаРаботе/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/УдалитьОтсутствиеНаРаботе/ПоСсылке","{Ссылка}")]
	public class УдалитьОтсутствиеНаРаботеНайтиПоСсылке: V82.ДокументыСсылка.УдалитьОтсутствиеНаРаботе,IReturn<УдалитьОтсутствиеНаРаботеНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/УдалитьОтсутствиеНаРаботе/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/УдалитьОтсутствиеНаРаботе/ПоНомеру","{Номер}")]
	public class УдалитьОтсутствиеНаРаботеНайтиПоНомеру: V82.ДокументыСсылка.УдалитьОтсутствиеНаРаботе,IReturn<УдалитьОтсутствиеНаРаботеНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/УдалитьОтсутствиеНаРаботе/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/УдалитьОтсутствиеНаРаботе/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/УдалитьОтсутствиеНаРаботе/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class УдалитьОтсутствиеНаРаботеВыбратьПоСсылке: V82.ДокументыСсылка.УдалитьОтсутствиеНаРаботе,IReturn<УдалитьОтсутствиеНаРаботеВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/УдалитьОтсутствиеНаРаботе/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/УдалитьОтсутствиеНаРаботе/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/УдалитьОтсутствиеНаРаботе/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class УдалитьОтсутствиеНаРаботеВыбратьПоНомеру: V82.ДокументыСсылка.УдалитьОтсутствиеНаРаботе,IReturn<УдалитьОтсутствиеНаРаботеВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/УдалитьОтсутствиеНаРаботе/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class УдалитьОтсутствиеНаРаботеСтраницаПоСсылке: V82.ДокументыСсылка.УдалитьОтсутствиеНаРаботе,IReturn<УдалитьОтсутствиеНаРаботеСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/УдалитьОтсутствиеНаРаботе/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class УдалитьОтсутствиеНаРаботеСтраницаПоНомеру: V82.ДокументыСсылка.УдалитьОтсутствиеНаРаботе,IReturn<УдалитьОтсутствиеНаРаботеСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class УдалитьОтсутствиеНаРаботеОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class УдалитьОтсутствиеНаРаботеСервис : Service
	{
		
		public object Get(УдалитьОтсутствиеНаРаботеЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(УдалитьОтсутствиеНаРаботеНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.УдалитьОтсутствиеНаРаботе.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new УдалитьОтсутствиеНаРаботеОтвет() { Ответ = "УдалитьОтсутствиеНаРаботе c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(УдалитьОтсутствиеНаРаботеНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.УдалитьОтсутствиеНаРаботе.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new УдалитьОтсутствиеНаРаботеОтвет() {Ответ = "УдалитьОтсутствиеНаРаботе c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(УдалитьОтсутствиеНаРаботеВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.УдалитьОтсутствиеНаРаботе.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(УдалитьОтсутствиеНаРаботеВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(УдалитьОтсутствиеНаРаботеСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(УдалитьОтсутствиеНаРаботеСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(УдалитьОтсутствиеНаРаботеЗапрос Запрос)
		{
			return new УдалитьОтсутствиеНаРаботеОтвет {Ответ = "УдалитьОтсутствиеНаРаботе, "};
		}

		public object Post(УдалитьОтсутствиеНаРаботеЗапрос ЗапросУдалитьОтсутствиеНаРаботе)
		{
			var Ссылка = (ДокументыСсылка.УдалитьОтсутствиеНаРаботе)ЗапросУдалитьОтсутствиеНаРаботе;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}