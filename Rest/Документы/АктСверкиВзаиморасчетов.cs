
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//AktSverkiVzaimoraschetov
	[Маршрут("Документы/АктСверкиВзаиморасчетов","")]
	public class АктСверкиВзаиморасчетовЗапрос: V82.ДокументыСсылка.АктСверкиВзаиморасчетов,IReturn<АктСверкиВзаиморасчетовЗапрос>
	{
	}
	[Маршрут("Документы/АктСверкиВзаиморасчетов/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/АктСверкиВзаиморасчетов/ПоСсылке","{Ссылка}")]
	public class АктСверкиВзаиморасчетовНайтиПоСсылке: V82.ДокументыСсылка.АктСверкиВзаиморасчетов,IReturn<АктСверкиВзаиморасчетовНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/АктСверкиВзаиморасчетов/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/АктСверкиВзаиморасчетов/ПоНомеру","{Номер}")]
	public class АктСверкиВзаиморасчетовНайтиПоНомеру: V82.ДокументыСсылка.АктСверкиВзаиморасчетов,IReturn<АктСверкиВзаиморасчетовНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/АктСверкиВзаиморасчетов/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/АктСверкиВзаиморасчетов/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/АктСверкиВзаиморасчетов/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class АктСверкиВзаиморасчетовВыбратьПоСсылке: V82.ДокументыСсылка.АктСверкиВзаиморасчетов,IReturn<АктСверкиВзаиморасчетовВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/АктСверкиВзаиморасчетов/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/АктСверкиВзаиморасчетов/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/АктСверкиВзаиморасчетов/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class АктСверкиВзаиморасчетовВыбратьПоНомеру: V82.ДокументыСсылка.АктСверкиВзаиморасчетов,IReturn<АктСверкиВзаиморасчетовВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/АктСверкиВзаиморасчетов/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class АктСверкиВзаиморасчетовСтраницаПоСсылке: V82.ДокументыСсылка.АктСверкиВзаиморасчетов,IReturn<АктСверкиВзаиморасчетовСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/АктСверкиВзаиморасчетов/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class АктСверкиВзаиморасчетовСтраницаПоНомеру: V82.ДокументыСсылка.АктСверкиВзаиморасчетов,IReturn<АктСверкиВзаиморасчетовСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class АктСверкиВзаиморасчетовОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class АктСверкиВзаиморасчетовСервис : Service
	{
		
		public object Get(АктСверкиВзаиморасчетовЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(АктСверкиВзаиморасчетовНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.АктСверкиВзаиморасчетов.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new АктСверкиВзаиморасчетовОтвет() { Ответ = "АктСверкиВзаиморасчетов c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(АктСверкиВзаиморасчетовНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.АктСверкиВзаиморасчетов.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new АктСверкиВзаиморасчетовОтвет() {Ответ = "АктСверкиВзаиморасчетов c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(АктСверкиВзаиморасчетовВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.АктСверкиВзаиморасчетов.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(АктСверкиВзаиморасчетовВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(АктСверкиВзаиморасчетовСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(АктСверкиВзаиморасчетовСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(АктСверкиВзаиморасчетовЗапрос Запрос)
		{
			return new АктСверкиВзаиморасчетовОтвет {Ответ = "АктСверкиВзаиморасчетов, "};
		}

		public object Post(АктСверкиВзаиморасчетовЗапрос ЗапросАктСверкиВзаиморасчетов)
		{
			var Ссылка = (ДокументыСсылка.АктСверкиВзаиморасчетов)ЗапросАктСверкиВзаиморасчетов;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}