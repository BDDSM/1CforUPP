
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//IzmenenieUslovijjIspolnitelnogoLista
	[Маршрут("Документы/ИзменениеУсловийИсполнительногоЛиста","")]
	public class ИзменениеУсловийИсполнительногоЛистаЗапрос: V82.ДокументыСсылка.ИзменениеУсловийИсполнительногоЛиста,IReturn<ИзменениеУсловийИсполнительногоЛистаЗапрос>
	{
	}
	[Маршрут("Документы/ИзменениеУсловийИсполнительногоЛиста/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ИзменениеУсловийИсполнительногоЛиста/ПоСсылке","{Ссылка}")]
	public class ИзменениеУсловийИсполнительногоЛистаНайтиПоСсылке: V82.ДокументыСсылка.ИзменениеУсловийИсполнительногоЛиста,IReturn<ИзменениеУсловийИсполнительногоЛистаНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ИзменениеУсловийИсполнительногоЛиста/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ИзменениеУсловийИсполнительногоЛиста/ПоНомеру","{Номер}")]
	public class ИзменениеУсловийИсполнительногоЛистаНайтиПоНомеру: V82.ДокументыСсылка.ИзменениеУсловийИсполнительногоЛиста,IReturn<ИзменениеУсловийИсполнительногоЛистаНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ИзменениеУсловийИсполнительногоЛиста/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ИзменениеУсловийИсполнительногоЛиста/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ИзменениеУсловийИсполнительногоЛиста/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ИзменениеУсловийИсполнительногоЛистаВыбратьПоСсылке: V82.ДокументыСсылка.ИзменениеУсловийИсполнительногоЛиста,IReturn<ИзменениеУсловийИсполнительногоЛистаВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ИзменениеУсловийИсполнительногоЛиста/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ИзменениеУсловийИсполнительногоЛиста/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ИзменениеУсловийИсполнительногоЛиста/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ИзменениеУсловийИсполнительногоЛистаВыбратьПоНомеру: V82.ДокументыСсылка.ИзменениеУсловийИсполнительногоЛиста,IReturn<ИзменениеУсловийИсполнительногоЛистаВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ИзменениеУсловийИсполнительногоЛиста/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ИзменениеУсловийИсполнительногоЛистаСтраницаПоСсылке: V82.ДокументыСсылка.ИзменениеУсловийИсполнительногоЛиста,IReturn<ИзменениеУсловийИсполнительногоЛистаСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ИзменениеУсловийИсполнительногоЛиста/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ИзменениеУсловийИсполнительногоЛистаСтраницаПоНомеру: V82.ДокументыСсылка.ИзменениеУсловийИсполнительногоЛиста,IReturn<ИзменениеУсловийИсполнительногоЛистаСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ИзменениеУсловийИсполнительногоЛистаОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ИзменениеУсловийИсполнительногоЛистаСервис : Service
	{
		
		public object Get(ИзменениеУсловийИсполнительногоЛистаЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ИзменениеУсловийИсполнительногоЛистаНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ИзменениеУсловийИсполнительногоЛиста.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ИзменениеУсловийИсполнительногоЛистаОтвет() { Ответ = "ИзменениеУсловийИсполнительногоЛиста c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ИзменениеУсловийИсполнительногоЛистаНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ИзменениеУсловийИсполнительногоЛиста.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ИзменениеУсловийИсполнительногоЛистаОтвет() {Ответ = "ИзменениеУсловийИсполнительногоЛиста c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ИзменениеУсловийИсполнительногоЛистаВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ИзменениеУсловийИсполнительногоЛиста.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ИзменениеУсловийИсполнительногоЛистаВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ИзменениеУсловийИсполнительногоЛистаСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ИзменениеУсловийИсполнительногоЛистаСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ИзменениеУсловийИсполнительногоЛистаЗапрос Запрос)
		{
			return new ИзменениеУсловийИсполнительногоЛистаОтвет {Ответ = "ИзменениеУсловийИсполнительногоЛиста, "};
		}

		public object Post(ИзменениеУсловийИсполнительногоЛистаЗапрос ЗапросИзменениеУсловийИсполнительногоЛиста)
		{
			var Ссылка = (ДокументыСсылка.ИзменениеУсловийИсполнительногоЛиста)ЗапросИзменениеУсловийИсполнительногоЛиста;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}