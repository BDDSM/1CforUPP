
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//NachislenieDividendovOrganizacijj
	[Маршрут("Документы/НачислениеДивидендовОрганизаций","")]
	public class НачислениеДивидендовОрганизацийЗапрос: V82.ДокументыСсылка.НачислениеДивидендовОрганизаций,IReturn<НачислениеДивидендовОрганизацийЗапрос>
	{
	}
	[Маршрут("Документы/НачислениеДивидендовОрганизаций/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/НачислениеДивидендовОрганизаций/ПоСсылке","{Ссылка}")]
	public class НачислениеДивидендовОрганизацийНайтиПоСсылке: V82.ДокументыСсылка.НачислениеДивидендовОрганизаций,IReturn<НачислениеДивидендовОрганизацийНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/НачислениеДивидендовОрганизаций/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/НачислениеДивидендовОрганизаций/ПоНомеру","{Номер}")]
	public class НачислениеДивидендовОрганизацийНайтиПоНомеру: V82.ДокументыСсылка.НачислениеДивидендовОрганизаций,IReturn<НачислениеДивидендовОрганизацийНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/НачислениеДивидендовОрганизаций/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/НачислениеДивидендовОрганизаций/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/НачислениеДивидендовОрганизаций/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class НачислениеДивидендовОрганизацийВыбратьПоСсылке: V82.ДокументыСсылка.НачислениеДивидендовОрганизаций,IReturn<НачислениеДивидендовОрганизацийВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/НачислениеДивидендовОрганизаций/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/НачислениеДивидендовОрганизаций/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/НачислениеДивидендовОрганизаций/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class НачислениеДивидендовОрганизацийВыбратьПоНомеру: V82.ДокументыСсылка.НачислениеДивидендовОрганизаций,IReturn<НачислениеДивидендовОрганизацийВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/НачислениеДивидендовОрганизаций/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class НачислениеДивидендовОрганизацийСтраницаПоСсылке: V82.ДокументыСсылка.НачислениеДивидендовОрганизаций,IReturn<НачислениеДивидендовОрганизацийСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/НачислениеДивидендовОрганизаций/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class НачислениеДивидендовОрганизацийСтраницаПоНомеру: V82.ДокументыСсылка.НачислениеДивидендовОрганизаций,IReturn<НачислениеДивидендовОрганизацийСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class НачислениеДивидендовОрганизацийОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class НачислениеДивидендовОрганизацийСервис : Service
	{
		
		public object Get(НачислениеДивидендовОрганизацийЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(НачислениеДивидендовОрганизацийНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.НачислениеДивидендовОрганизаций.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new НачислениеДивидендовОрганизацийОтвет() { Ответ = "НачислениеДивидендовОрганизаций c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(НачислениеДивидендовОрганизацийНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.НачислениеДивидендовОрганизаций.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new НачислениеДивидендовОрганизацийОтвет() {Ответ = "НачислениеДивидендовОрганизаций c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(НачислениеДивидендовОрганизацийВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.НачислениеДивидендовОрганизаций.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(НачислениеДивидендовОрганизацийВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(НачислениеДивидендовОрганизацийСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(НачислениеДивидендовОрганизацийСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(НачислениеДивидендовОрганизацийЗапрос Запрос)
		{
			return new НачислениеДивидендовОрганизацийОтвет {Ответ = "НачислениеДивидендовОрганизаций, "};
		}

		public object Post(НачислениеДивидендовОрганизацийЗапрос ЗапросНачислениеДивидендовОрганизаций)
		{
			var Ссылка = (ДокументыСсылка.НачислениеДивидендовОрганизаций)ЗапросНачислениеДивидендовОрганизаций;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}