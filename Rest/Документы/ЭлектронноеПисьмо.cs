
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//EHlektronnoePismo
	[Маршрут("Документы/ЭлектронноеПисьмо","")]
	public class ЭлектронноеПисьмоЗапрос: V82.ДокументыСсылка.ЭлектронноеПисьмо,IReturn<ЭлектронноеПисьмоЗапрос>
	{
	}
	[Маршрут("Документы/ЭлектронноеПисьмо/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ЭлектронноеПисьмо/ПоСсылке","{Ссылка}")]
	public class ЭлектронноеПисьмоНайтиПоСсылке: V82.ДокументыСсылка.ЭлектронноеПисьмо,IReturn<ЭлектронноеПисьмоНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ЭлектронноеПисьмо/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ЭлектронноеПисьмо/ПоНомеру","{Номер}")]
	public class ЭлектронноеПисьмоНайтиПоНомеру: V82.ДокументыСсылка.ЭлектронноеПисьмо,IReturn<ЭлектронноеПисьмоНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ЭлектронноеПисьмо/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ЭлектронноеПисьмо/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ЭлектронноеПисьмо/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ЭлектронноеПисьмоВыбратьПоСсылке: V82.ДокументыСсылка.ЭлектронноеПисьмо,IReturn<ЭлектронноеПисьмоВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ЭлектронноеПисьмо/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ЭлектронноеПисьмо/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ЭлектронноеПисьмо/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ЭлектронноеПисьмоВыбратьПоНомеру: V82.ДокументыСсылка.ЭлектронноеПисьмо,IReturn<ЭлектронноеПисьмоВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ЭлектронноеПисьмо/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ЭлектронноеПисьмоСтраницаПоСсылке: V82.ДокументыСсылка.ЭлектронноеПисьмо,IReturn<ЭлектронноеПисьмоСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ЭлектронноеПисьмо/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ЭлектронноеПисьмоСтраницаПоНомеру: V82.ДокументыСсылка.ЭлектронноеПисьмо,IReturn<ЭлектронноеПисьмоСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ЭлектронноеПисьмоОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ЭлектронноеПисьмоСервис : Service
	{
		
		public object Get(ЭлектронноеПисьмоЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ЭлектронноеПисьмоНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ЭлектронноеПисьмо.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ЭлектронноеПисьмоОтвет() { Ответ = "ЭлектронноеПисьмо c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ЭлектронноеПисьмоНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ЭлектронноеПисьмо.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ЭлектронноеПисьмоОтвет() {Ответ = "ЭлектронноеПисьмо c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ЭлектронноеПисьмоВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ЭлектронноеПисьмо.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ЭлектронноеПисьмоВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ЭлектронноеПисьмоСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ЭлектронноеПисьмоСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ЭлектронноеПисьмоЗапрос Запрос)
		{
			return new ЭлектронноеПисьмоОтвет {Ответ = "ЭлектронноеПисьмо, "};
		}

		public object Post(ЭлектронноеПисьмоЗапрос ЗапросЭлектронноеПисьмо)
		{
			var Ссылка = (ДокументыСсылка.ЭлектронноеПисьмо)ЗапросЭлектронноеПисьмо;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}