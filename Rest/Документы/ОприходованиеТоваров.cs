
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//OprikhodovanieTovarov
	[Маршрут("Документы/ОприходованиеТоваров","")]
	public class ОприходованиеТоваровЗапрос: V82.ДокументыСсылка.ОприходованиеТоваров,IReturn<ОприходованиеТоваровЗапрос>
	{
	}
	[Маршрут("Документы/ОприходованиеТоваров/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ОприходованиеТоваров/ПоСсылке","{Ссылка}")]
	public class ОприходованиеТоваровНайтиПоСсылке: V82.ДокументыСсылка.ОприходованиеТоваров,IReturn<ОприходованиеТоваровНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ОприходованиеТоваров/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ОприходованиеТоваров/ПоНомеру","{Номер}")]
	public class ОприходованиеТоваровНайтиПоНомеру: V82.ДокументыСсылка.ОприходованиеТоваров,IReturn<ОприходованиеТоваровНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ОприходованиеТоваров/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ОприходованиеТоваров/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ОприходованиеТоваров/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ОприходованиеТоваровВыбратьПоСсылке: V82.ДокументыСсылка.ОприходованиеТоваров,IReturn<ОприходованиеТоваровВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ОприходованиеТоваров/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ОприходованиеТоваров/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ОприходованиеТоваров/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ОприходованиеТоваровВыбратьПоНомеру: V82.ДокументыСсылка.ОприходованиеТоваров,IReturn<ОприходованиеТоваровВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ОприходованиеТоваров/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ОприходованиеТоваровСтраницаПоСсылке: V82.ДокументыСсылка.ОприходованиеТоваров,IReturn<ОприходованиеТоваровСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ОприходованиеТоваров/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ОприходованиеТоваровСтраницаПоНомеру: V82.ДокументыСсылка.ОприходованиеТоваров,IReturn<ОприходованиеТоваровСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ОприходованиеТоваровОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ОприходованиеТоваровСервис : Service
	{
		
		public object Get(ОприходованиеТоваровЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ОприходованиеТоваровНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ОприходованиеТоваров.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ОприходованиеТоваровОтвет() { Ответ = "ОприходованиеТоваров c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ОприходованиеТоваровНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ОприходованиеТоваров.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ОприходованиеТоваровОтвет() {Ответ = "ОприходованиеТоваров c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ОприходованиеТоваровВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ОприходованиеТоваров.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ОприходованиеТоваровВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ОприходованиеТоваровСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ОприходованиеТоваровСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ОприходованиеТоваровЗапрос Запрос)
		{
			return new ОприходованиеТоваровОтвет {Ответ = "ОприходованиеТоваров, "};
		}

		public object Post(ОприходованиеТоваровЗапрос ЗапросОприходованиеТоваров)
		{
			var Ссылка = (ДокументыСсылка.ОприходованиеТоваров)ЗапросОприходованиеТоваров;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}