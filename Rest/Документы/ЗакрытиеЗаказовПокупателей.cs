
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//ZakrytieZakazovPokupatelejj
	[Маршрут("Документы/ЗакрытиеЗаказовПокупателей","")]
	public class ЗакрытиеЗаказовПокупателейЗапрос: V82.ДокументыСсылка.ЗакрытиеЗаказовПокупателей,IReturn<ЗакрытиеЗаказовПокупателейЗапрос>
	{
	}
	[Маршрут("Документы/ЗакрытиеЗаказовПокупателей/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ЗакрытиеЗаказовПокупателей/ПоСсылке","{Ссылка}")]
	public class ЗакрытиеЗаказовПокупателейНайтиПоСсылке: V82.ДокументыСсылка.ЗакрытиеЗаказовПокупателей,IReturn<ЗакрытиеЗаказовПокупателейНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ЗакрытиеЗаказовПокупателей/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ЗакрытиеЗаказовПокупателей/ПоНомеру","{Номер}")]
	public class ЗакрытиеЗаказовПокупателейНайтиПоНомеру: V82.ДокументыСсылка.ЗакрытиеЗаказовПокупателей,IReturn<ЗакрытиеЗаказовПокупателейНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ЗакрытиеЗаказовПокупателей/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ЗакрытиеЗаказовПокупателей/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ЗакрытиеЗаказовПокупателей/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ЗакрытиеЗаказовПокупателейВыбратьПоСсылке: V82.ДокументыСсылка.ЗакрытиеЗаказовПокупателей,IReturn<ЗакрытиеЗаказовПокупателейВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ЗакрытиеЗаказовПокупателей/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ЗакрытиеЗаказовПокупателей/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ЗакрытиеЗаказовПокупателей/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ЗакрытиеЗаказовПокупателейВыбратьПоНомеру: V82.ДокументыСсылка.ЗакрытиеЗаказовПокупателей,IReturn<ЗакрытиеЗаказовПокупателейВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ЗакрытиеЗаказовПокупателей/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ЗакрытиеЗаказовПокупателейСтраницаПоСсылке: V82.ДокументыСсылка.ЗакрытиеЗаказовПокупателей,IReturn<ЗакрытиеЗаказовПокупателейСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ЗакрытиеЗаказовПокупателей/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ЗакрытиеЗаказовПокупателейСтраницаПоНомеру: V82.ДокументыСсылка.ЗакрытиеЗаказовПокупателей,IReturn<ЗакрытиеЗаказовПокупателейСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ЗакрытиеЗаказовПокупателейОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ЗакрытиеЗаказовПокупателейСервис : Service
	{
		
		public object Get(ЗакрытиеЗаказовПокупателейЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ЗакрытиеЗаказовПокупателейНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ЗакрытиеЗаказовПокупателей.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ЗакрытиеЗаказовПокупателейОтвет() { Ответ = "ЗакрытиеЗаказовПокупателей c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ЗакрытиеЗаказовПокупателейНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ЗакрытиеЗаказовПокупателей.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ЗакрытиеЗаказовПокупателейОтвет() {Ответ = "ЗакрытиеЗаказовПокупателей c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ЗакрытиеЗаказовПокупателейВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ЗакрытиеЗаказовПокупателей.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ЗакрытиеЗаказовПокупателейВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ЗакрытиеЗаказовПокупателейСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ЗакрытиеЗаказовПокупателейСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ЗакрытиеЗаказовПокупателейЗапрос Запрос)
		{
			return new ЗакрытиеЗаказовПокупателейОтвет {Ответ = "ЗакрытиеЗаказовПокупателей, "};
		}

		public object Post(ЗакрытиеЗаказовПокупателейЗапрос ЗапросЗакрытиеЗаказовПокупателей)
		{
			var Ссылка = (ДокументыСсылка.ЗакрытиеЗаказовПокупателей)ЗапросЗакрытиеЗаказовПокупателей;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}