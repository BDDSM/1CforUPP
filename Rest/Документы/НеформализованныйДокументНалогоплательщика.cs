
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//NeformalizovannyjjDokumentNalogoplatelshhika
	[Маршрут("Документы/НеформализованныйДокументНалогоплательщика","")]
	public class НеформализованныйДокументНалогоплательщикаЗапрос: V82.ДокументыСсылка.НеформализованныйДокументНалогоплательщика,IReturn<НеформализованныйДокументНалогоплательщикаЗапрос>
	{
	}
	[Маршрут("Документы/НеформализованныйДокументНалогоплательщика/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/НеформализованныйДокументНалогоплательщика/ПоСсылке","{Ссылка}")]
	public class НеформализованныйДокументНалогоплательщикаНайтиПоСсылке: V82.ДокументыСсылка.НеформализованныйДокументНалогоплательщика,IReturn<НеформализованныйДокументНалогоплательщикаНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/НеформализованныйДокументНалогоплательщика/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/НеформализованныйДокументНалогоплательщика/ПоНомеру","{Номер}")]
	public class НеформализованныйДокументНалогоплательщикаНайтиПоНомеру: V82.ДокументыСсылка.НеформализованныйДокументНалогоплательщика,IReturn<НеформализованныйДокументНалогоплательщикаНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/НеформализованныйДокументНалогоплательщика/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/НеформализованныйДокументНалогоплательщика/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/НеформализованныйДокументНалогоплательщика/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class НеформализованныйДокументНалогоплательщикаВыбратьПоСсылке: V82.ДокументыСсылка.НеформализованныйДокументНалогоплательщика,IReturn<НеформализованныйДокументНалогоплательщикаВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/НеформализованныйДокументНалогоплательщика/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/НеформализованныйДокументНалогоплательщика/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/НеформализованныйДокументНалогоплательщика/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class НеформализованныйДокументНалогоплательщикаВыбратьПоНомеру: V82.ДокументыСсылка.НеформализованныйДокументНалогоплательщика,IReturn<НеформализованныйДокументНалогоплательщикаВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/НеформализованныйДокументНалогоплательщика/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class НеформализованныйДокументНалогоплательщикаСтраницаПоСсылке: V82.ДокументыСсылка.НеформализованныйДокументНалогоплательщика,IReturn<НеформализованныйДокументНалогоплательщикаСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/НеформализованныйДокументНалогоплательщика/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class НеформализованныйДокументНалогоплательщикаСтраницаПоНомеру: V82.ДокументыСсылка.НеформализованныйДокументНалогоплательщика,IReturn<НеформализованныйДокументНалогоплательщикаСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class НеформализованныйДокументНалогоплательщикаОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class НеформализованныйДокументНалогоплательщикаСервис : Service
	{
		
		public object Get(НеформализованныйДокументНалогоплательщикаЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(НеформализованныйДокументНалогоплательщикаНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.НеформализованныйДокументНалогоплательщика.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new НеформализованныйДокументНалогоплательщикаОтвет() { Ответ = "НеформализованныйДокументНалогоплательщика c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(НеформализованныйДокументНалогоплательщикаНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.НеформализованныйДокументНалогоплательщика.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new НеформализованныйДокументНалогоплательщикаОтвет() {Ответ = "НеформализованныйДокументНалогоплательщика c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(НеформализованныйДокументНалогоплательщикаВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.НеформализованныйДокументНалогоплательщика.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(НеформализованныйДокументНалогоплательщикаВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(НеформализованныйДокументНалогоплательщикаСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(НеформализованныйДокументНалогоплательщикаСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(НеформализованныйДокументНалогоплательщикаЗапрос Запрос)
		{
			return new НеформализованныйДокументНалогоплательщикаОтвет {Ответ = "НеформализованныйДокументНалогоплательщика, "};
		}

		public object Post(НеформализованныйДокументНалогоплательщикаЗапрос ЗапросНеформализованныйДокументНалогоплательщика)
		{
			var Ссылка = (ДокументыСсылка.НеформализованныйДокументНалогоплательщика)ЗапросНеформализованныйДокументНалогоплательщика;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}