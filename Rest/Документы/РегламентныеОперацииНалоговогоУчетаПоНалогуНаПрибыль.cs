
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//ReglamentnyeOperaciiNalogovogoUchetaPoNaloguNaPribyl
	[Маршрут("Документы/РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль","")]
	public class РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльЗапрос: V82.ДокументыСсылка.РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль,IReturn<РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльЗапрос>
	{
	}
	[Маршрут("Документы/РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль/ПоСсылке","{Ссылка}")]
	public class РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльНайтиПоСсылке: V82.ДокументыСсылка.РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль,IReturn<РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль/ПоНомеру","{Номер}")]
	public class РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльНайтиПоНомеру: V82.ДокументыСсылка.РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль,IReturn<РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльВыбратьПоСсылке: V82.ДокументыСсылка.РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль,IReturn<РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльВыбратьПоНомеру: V82.ДокументыСсылка.РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль,IReturn<РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльСтраницаПоСсылке: V82.ДокументыСсылка.РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль,IReturn<РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльСтраницаПоНомеру: V82.ДокументыСсылка.РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль,IReturn<РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльСервис : Service
	{
		
		public object Get(РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльОтвет() { Ответ = "РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльОтвет() {Ответ = "РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльЗапрос Запрос)
		{
			return new РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльОтвет {Ответ = "РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль, "};
		}

		public object Post(РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыльЗапрос ЗапросРегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль)
		{
			var Ссылка = (ДокументыСсылка.РегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль)ЗапросРегламентныеОперацииНалоговогоУчетаПоНалогуНаПрибыль;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}