
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//RealizaciyaUslugPoPererabotke
	[Маршрут("Документы/РеализацияУслугПоПереработке","")]
	public class РеализацияУслугПоПереработкеЗапрос: V82.ДокументыСсылка.РеализацияУслугПоПереработке,IReturn<РеализацияУслугПоПереработкеЗапрос>
	{
	}
	[Маршрут("Документы/РеализацияУслугПоПереработке/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/РеализацияУслугПоПереработке/ПоСсылке","{Ссылка}")]
	public class РеализацияУслугПоПереработкеНайтиПоСсылке: V82.ДокументыСсылка.РеализацияУслугПоПереработке,IReturn<РеализацияУслугПоПереработкеНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/РеализацияУслугПоПереработке/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/РеализацияУслугПоПереработке/ПоНомеру","{Номер}")]
	public class РеализацияУслугПоПереработкеНайтиПоНомеру: V82.ДокументыСсылка.РеализацияУслугПоПереработке,IReturn<РеализацияУслугПоПереработкеНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/РеализацияУслугПоПереработке/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/РеализацияУслугПоПереработке/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/РеализацияУслугПоПереработке/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class РеализацияУслугПоПереработкеВыбратьПоСсылке: V82.ДокументыСсылка.РеализацияУслугПоПереработке,IReturn<РеализацияУслугПоПереработкеВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/РеализацияУслугПоПереработке/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/РеализацияУслугПоПереработке/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/РеализацияУслугПоПереработке/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class РеализацияУслугПоПереработкеВыбратьПоНомеру: V82.ДокументыСсылка.РеализацияУслугПоПереработке,IReturn<РеализацияУслугПоПереработкеВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/РеализацияУслугПоПереработке/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class РеализацияУслугПоПереработкеСтраницаПоСсылке: V82.ДокументыСсылка.РеализацияУслугПоПереработке,IReturn<РеализацияУслугПоПереработкеСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/РеализацияУслугПоПереработке/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class РеализацияУслугПоПереработкеСтраницаПоНомеру: V82.ДокументыСсылка.РеализацияУслугПоПереработке,IReturn<РеализацияУслугПоПереработкеСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class РеализацияУслугПоПереработкеОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class РеализацияУслугПоПереработкеСервис : Service
	{
		
		public object Get(РеализацияУслугПоПереработкеЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(РеализацияУслугПоПереработкеНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.РеализацияУслугПоПереработке.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new РеализацияУслугПоПереработкеОтвет() { Ответ = "РеализацияУслугПоПереработке c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(РеализацияУслугПоПереработкеНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.РеализацияУслугПоПереработке.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new РеализацияУслугПоПереработкеОтвет() {Ответ = "РеализацияУслугПоПереработке c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(РеализацияУслугПоПереработкеВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.РеализацияУслугПоПереработке.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(РеализацияУслугПоПереработкеВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(РеализацияУслугПоПереработкеСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(РеализацияУслугПоПереработкеСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(РеализацияУслугПоПереработкеЗапрос Запрос)
		{
			return new РеализацияУслугПоПереработкеОтвет {Ответ = "РеализацияУслугПоПереработке, "};
		}

		public object Post(РеализацияУслугПоПереработкеЗапрос ЗапросРеализацияУслугПоПереработке)
		{
			var Ссылка = (ДокументыСсылка.РеализацияУслугПоПереработке)ЗапросРеализацияУслугПоПереработке;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}