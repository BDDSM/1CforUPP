
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//UchetZarabotkaRabotnikov
	[Маршрут("Документы/УчетЗаработкаРаботников","")]
	public class УчетЗаработкаРаботниковЗапрос: V82.ДокументыСсылка.УчетЗаработкаРаботников,IReturn<УчетЗаработкаРаботниковЗапрос>
	{
	}
	[Маршрут("Документы/УчетЗаработкаРаботников/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/УчетЗаработкаРаботников/ПоСсылке","{Ссылка}")]
	public class УчетЗаработкаРаботниковНайтиПоСсылке: V82.ДокументыСсылка.УчетЗаработкаРаботников,IReturn<УчетЗаработкаРаботниковНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/УчетЗаработкаРаботников/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/УчетЗаработкаРаботников/ПоНомеру","{Номер}")]
	public class УчетЗаработкаРаботниковНайтиПоНомеру: V82.ДокументыСсылка.УчетЗаработкаРаботников,IReturn<УчетЗаработкаРаботниковНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/УчетЗаработкаРаботников/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/УчетЗаработкаРаботников/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/УчетЗаработкаРаботников/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class УчетЗаработкаРаботниковВыбратьПоСсылке: V82.ДокументыСсылка.УчетЗаработкаРаботников,IReturn<УчетЗаработкаРаботниковВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/УчетЗаработкаРаботников/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/УчетЗаработкаРаботников/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/УчетЗаработкаРаботников/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class УчетЗаработкаРаботниковВыбратьПоНомеру: V82.ДокументыСсылка.УчетЗаработкаРаботников,IReturn<УчетЗаработкаРаботниковВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/УчетЗаработкаРаботников/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class УчетЗаработкаРаботниковСтраницаПоСсылке: V82.ДокументыСсылка.УчетЗаработкаРаботников,IReturn<УчетЗаработкаРаботниковСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/УчетЗаработкаРаботников/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class УчетЗаработкаРаботниковСтраницаПоНомеру: V82.ДокументыСсылка.УчетЗаработкаРаботников,IReturn<УчетЗаработкаРаботниковСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class УчетЗаработкаРаботниковОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class УчетЗаработкаРаботниковСервис : Service
	{
		
		public object Get(УчетЗаработкаРаботниковЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(УчетЗаработкаРаботниковНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.УчетЗаработкаРаботников.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new УчетЗаработкаРаботниковОтвет() { Ответ = "УчетЗаработкаРаботников c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(УчетЗаработкаРаботниковНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.УчетЗаработкаРаботников.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new УчетЗаработкаРаботниковОтвет() {Ответ = "УчетЗаработкаРаботников c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(УчетЗаработкаРаботниковВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.УчетЗаработкаРаботников.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(УчетЗаработкаРаботниковВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(УчетЗаработкаРаботниковСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(УчетЗаработкаРаботниковСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(УчетЗаработкаРаботниковЗапрос Запрос)
		{
			return new УчетЗаработкаРаботниковОтвет {Ответ = "УчетЗаработкаРаботников, "};
		}

		public object Post(УчетЗаработкаРаботниковЗапрос ЗапросУчетЗаработкаРаботников)
		{
			var Ссылка = (ДокументыСсылка.УчетЗаработкаРаботников)ЗапросУчетЗаработкаРаботников;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}