
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//PlanProdazh
	[Маршрут("Документы/ПланПродаж","")]
	public class ПланПродажЗапрос: V82.ДокументыСсылка.ПланПродаж,IReturn<ПланПродажЗапрос>
	{
	}
	[Маршрут("Документы/ПланПродаж/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ПланПродаж/ПоСсылке","{Ссылка}")]
	public class ПланПродажНайтиПоСсылке: V82.ДокументыСсылка.ПланПродаж,IReturn<ПланПродажНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ПланПродаж/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ПланПродаж/ПоНомеру","{Номер}")]
	public class ПланПродажНайтиПоНомеру: V82.ДокументыСсылка.ПланПродаж,IReturn<ПланПродажНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ПланПродаж/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ПланПродаж/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПланПродаж/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ПланПродажВыбратьПоСсылке: V82.ДокументыСсылка.ПланПродаж,IReturn<ПланПродажВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ПланПродаж/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ПланПродаж/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПланПродаж/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ПланПродажВыбратьПоНомеру: V82.ДокументыСсылка.ПланПродаж,IReturn<ПланПродажВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ПланПродаж/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ПланПродажСтраницаПоСсылке: V82.ДокументыСсылка.ПланПродаж,IReturn<ПланПродажСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ПланПродаж/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ПланПродажСтраницаПоНомеру: V82.ДокументыСсылка.ПланПродаж,IReturn<ПланПродажСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ПланПродажОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ПланПродажСервис : Service
	{
		
		public object Get(ПланПродажЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ПланПродажНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ПланПродаж.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ПланПродажОтвет() { Ответ = "ПланПродаж c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПланПродажНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ПланПродаж.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ПланПродажОтвет() {Ответ = "ПланПродаж c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПланПродажВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ПланПродаж.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ПланПродажВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ПланПродажСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ПланПродажСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ПланПродажЗапрос Запрос)
		{
			return new ПланПродажОтвет {Ответ = "ПланПродаж, "};
		}

		public object Post(ПланПродажЗапрос ЗапросПланПродаж)
		{
			var Ссылка = (ДокументыСсылка.ПланПродаж)ЗапросПланПродаж;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}