
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//OplataSverkhurochnykhCHasov
	[Маршрут("Документы/ОплатаСверхурочныхЧасов","")]
	public class ОплатаСверхурочныхЧасовЗапрос: V82.ДокументыСсылка.ОплатаСверхурочныхЧасов,IReturn<ОплатаСверхурочныхЧасовЗапрос>
	{
	}
	[Маршрут("Документы/ОплатаСверхурочныхЧасов/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ОплатаСверхурочныхЧасов/ПоСсылке","{Ссылка}")]
	public class ОплатаСверхурочныхЧасовНайтиПоСсылке: V82.ДокументыСсылка.ОплатаСверхурочныхЧасов,IReturn<ОплатаСверхурочныхЧасовНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ОплатаСверхурочныхЧасов/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ОплатаСверхурочныхЧасов/ПоНомеру","{Номер}")]
	public class ОплатаСверхурочныхЧасовНайтиПоНомеру: V82.ДокументыСсылка.ОплатаСверхурочныхЧасов,IReturn<ОплатаСверхурочныхЧасовНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ОплатаСверхурочныхЧасов/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ОплатаСверхурочныхЧасов/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ОплатаСверхурочныхЧасов/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ОплатаСверхурочныхЧасовВыбратьПоСсылке: V82.ДокументыСсылка.ОплатаСверхурочныхЧасов,IReturn<ОплатаСверхурочныхЧасовВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ОплатаСверхурочныхЧасов/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ОплатаСверхурочныхЧасов/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ОплатаСверхурочныхЧасов/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ОплатаСверхурочныхЧасовВыбратьПоНомеру: V82.ДокументыСсылка.ОплатаСверхурочныхЧасов,IReturn<ОплатаСверхурочныхЧасовВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ОплатаСверхурочныхЧасов/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ОплатаСверхурочныхЧасовСтраницаПоСсылке: V82.ДокументыСсылка.ОплатаСверхурочныхЧасов,IReturn<ОплатаСверхурочныхЧасовСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ОплатаСверхурочныхЧасов/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ОплатаСверхурочныхЧасовСтраницаПоНомеру: V82.ДокументыСсылка.ОплатаСверхурочныхЧасов,IReturn<ОплатаСверхурочныхЧасовСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ОплатаСверхурочныхЧасовОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ОплатаСверхурочныхЧасовСервис : Service
	{
		
		public object Get(ОплатаСверхурочныхЧасовЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ОплатаСверхурочныхЧасовНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ОплатаСверхурочныхЧасов.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ОплатаСверхурочныхЧасовОтвет() { Ответ = "ОплатаСверхурочныхЧасов c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ОплатаСверхурочныхЧасовНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ОплатаСверхурочныхЧасов.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ОплатаСверхурочныхЧасовОтвет() {Ответ = "ОплатаСверхурочныхЧасов c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ОплатаСверхурочныхЧасовВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ОплатаСверхурочныхЧасов.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ОплатаСверхурочныхЧасовВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ОплатаСверхурочныхЧасовСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ОплатаСверхурочныхЧасовСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ОплатаСверхурочныхЧасовЗапрос Запрос)
		{
			return new ОплатаСверхурочныхЧасовОтвет {Ответ = "ОплатаСверхурочныхЧасов, "};
		}

		public object Post(ОплатаСверхурочныхЧасовЗапрос ЗапросОплатаСверхурочныхЧасов)
		{
			var Ссылка = (ДокументыСсылка.ОплатаСверхурочныхЧасов)ЗапросОплатаСверхурочныхЧасов;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}