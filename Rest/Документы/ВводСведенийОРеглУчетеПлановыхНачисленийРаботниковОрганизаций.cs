
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//VvodSvedenijjOReglUchetePlanovykhNachislenijjRabotnikovOrganizacijj
	[Маршрут("Документы/ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций","")]
	public class ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийЗапрос: V82.ДокументыСсылка.ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций,IReturn<ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийЗапрос>
	{
	}
	[Маршрут("Документы/ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций/ПоСсылке","{Ссылка}")]
	public class ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийНайтиПоСсылке: V82.ДокументыСсылка.ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций,IReturn<ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций/ПоНомеру","{Номер}")]
	public class ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийНайтиПоНомеру: V82.ДокументыСсылка.ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций,IReturn<ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийВыбратьПоСсылке: V82.ДокументыСсылка.ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций,IReturn<ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийВыбратьПоНомеру: V82.ДокументыСсылка.ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций,IReturn<ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийСтраницаПоСсылке: V82.ДокументыСсылка.ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций,IReturn<ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийСтраницаПоНомеру: V82.ДокументыСсылка.ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций,IReturn<ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийСервис : Service
	{
		
		public object Get(ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийОтвет() { Ответ = "ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийОтвет() {Ответ = "ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийЗапрос Запрос)
		{
			return new ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийОтвет {Ответ = "ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций, "};
		}

		public object Post(ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизацийЗапрос ЗапросВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций)
		{
			var Ссылка = (ДокументыСсылка.ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций)ЗапросВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}