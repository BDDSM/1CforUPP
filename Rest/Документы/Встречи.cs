
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//Vstrechi
	[Маршрут("Документы/Встречи","")]
	public class ВстречиЗапрос: V82.ДокументыСсылка.Встречи,IReturn<ВстречиЗапрос>
	{
	}
	[Маршрут("Документы/Встречи/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/Встречи/ПоСсылке","{Ссылка}")]
	public class ВстречиНайтиПоСсылке: V82.ДокументыСсылка.Встречи,IReturn<ВстречиНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/Встречи/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/Встречи/ПоНомеру","{Номер}")]
	public class ВстречиНайтиПоНомеру: V82.ДокументыСсылка.Встречи,IReturn<ВстречиНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/Встречи/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/Встречи/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/Встречи/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ВстречиВыбратьПоСсылке: V82.ДокументыСсылка.Встречи,IReturn<ВстречиВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/Встречи/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/Встречи/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/Встречи/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ВстречиВыбратьПоНомеру: V82.ДокументыСсылка.Встречи,IReturn<ВстречиВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/Встречи/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ВстречиСтраницаПоСсылке: V82.ДокументыСсылка.Встречи,IReturn<ВстречиСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/Встречи/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ВстречиСтраницаПоНомеру: V82.ДокументыСсылка.Встречи,IReturn<ВстречиСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ВстречиОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ВстречиСервис : Service
	{
		
		public object Get(ВстречиЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ВстречиНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.Встречи.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ВстречиОтвет() { Ответ = "Встречи c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ВстречиНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.Встречи.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ВстречиОтвет() {Ответ = "Встречи c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ВстречиВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.Встречи.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ВстречиВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ВстречиСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ВстречиСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ВстречиЗапрос Запрос)
		{
			return new ВстречиОтвет {Ответ = "Встречи, "};
		}

		public object Post(ВстречиЗапрос ЗапросВстречи)
		{
			var Ссылка = (ДокументыСсылка.Встречи)ЗапросВстречи;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}