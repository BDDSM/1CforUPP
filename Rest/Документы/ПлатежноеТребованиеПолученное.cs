
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//PlatezhnoeTrebovaniePoluchennoe
	[Маршрут("Документы/ПлатежноеТребованиеПолученное","")]
	public class ПлатежноеТребованиеПолученноеЗапрос: V82.ДокументыСсылка.ПлатежноеТребованиеПолученное,IReturn<ПлатежноеТребованиеПолученноеЗапрос>
	{
	}
	[Маршрут("Документы/ПлатежноеТребованиеПолученное/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ПлатежноеТребованиеПолученное/ПоСсылке","{Ссылка}")]
	public class ПлатежноеТребованиеПолученноеНайтиПоСсылке: V82.ДокументыСсылка.ПлатежноеТребованиеПолученное,IReturn<ПлатежноеТребованиеПолученноеНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ПлатежноеТребованиеПолученное/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ПлатежноеТребованиеПолученное/ПоНомеру","{Номер}")]
	public class ПлатежноеТребованиеПолученноеНайтиПоНомеру: V82.ДокументыСсылка.ПлатежноеТребованиеПолученное,IReturn<ПлатежноеТребованиеПолученноеНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ПлатежноеТребованиеПолученное/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ПлатежноеТребованиеПолученное/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПлатежноеТребованиеПолученное/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ПлатежноеТребованиеПолученноеВыбратьПоСсылке: V82.ДокументыСсылка.ПлатежноеТребованиеПолученное,IReturn<ПлатежноеТребованиеПолученноеВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ПлатежноеТребованиеПолученное/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ПлатежноеТребованиеПолученное/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПлатежноеТребованиеПолученное/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ПлатежноеТребованиеПолученноеВыбратьПоНомеру: V82.ДокументыСсылка.ПлатежноеТребованиеПолученное,IReturn<ПлатежноеТребованиеПолученноеВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ПлатежноеТребованиеПолученное/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ПлатежноеТребованиеПолученноеСтраницаПоСсылке: V82.ДокументыСсылка.ПлатежноеТребованиеПолученное,IReturn<ПлатежноеТребованиеПолученноеСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ПлатежноеТребованиеПолученное/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ПлатежноеТребованиеПолученноеСтраницаПоНомеру: V82.ДокументыСсылка.ПлатежноеТребованиеПолученное,IReturn<ПлатежноеТребованиеПолученноеСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ПлатежноеТребованиеПолученноеОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ПлатежноеТребованиеПолученноеСервис : Service
	{
		
		public object Get(ПлатежноеТребованиеПолученноеЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ПлатежноеТребованиеПолученноеНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ПлатежноеТребованиеПолученное.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ПлатежноеТребованиеПолученноеОтвет() { Ответ = "ПлатежноеТребованиеПолученное c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПлатежноеТребованиеПолученноеНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ПлатежноеТребованиеПолученное.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ПлатежноеТребованиеПолученноеОтвет() {Ответ = "ПлатежноеТребованиеПолученное c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПлатежноеТребованиеПолученноеВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ПлатежноеТребованиеПолученное.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ПлатежноеТребованиеПолученноеВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ПлатежноеТребованиеПолученноеСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ПлатежноеТребованиеПолученноеСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ПлатежноеТребованиеПолученноеЗапрос Запрос)
		{
			return new ПлатежноеТребованиеПолученноеОтвет {Ответ = "ПлатежноеТребованиеПолученное, "};
		}

		public object Post(ПлатежноеТребованиеПолученноеЗапрос ЗапросПлатежноеТребованиеПолученное)
		{
			var Ссылка = (ДокументыСсылка.ПлатежноеТребованиеПолученное)ЗапросПлатежноеТребованиеПолученное;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}