
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//OcenkaNezavershennogoProizvodstva
	[Маршрут("Документы/ОценкаНезавершенногоПроизводства","")]
	public class ОценкаНезавершенногоПроизводстваЗапрос: V82.ДокументыСсылка.ОценкаНезавершенногоПроизводства,IReturn<ОценкаНезавершенногоПроизводстваЗапрос>
	{
	}
	[Маршрут("Документы/ОценкаНезавершенногоПроизводства/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ОценкаНезавершенногоПроизводства/ПоСсылке","{Ссылка}")]
	public class ОценкаНезавершенногоПроизводстваНайтиПоСсылке: V82.ДокументыСсылка.ОценкаНезавершенногоПроизводства,IReturn<ОценкаНезавершенногоПроизводстваНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ОценкаНезавершенногоПроизводства/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ОценкаНезавершенногоПроизводства/ПоНомеру","{Номер}")]
	public class ОценкаНезавершенногоПроизводстваНайтиПоНомеру: V82.ДокументыСсылка.ОценкаНезавершенногоПроизводства,IReturn<ОценкаНезавершенногоПроизводстваНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ОценкаНезавершенногоПроизводства/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ОценкаНезавершенногоПроизводства/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ОценкаНезавершенногоПроизводства/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ОценкаНезавершенногоПроизводстваВыбратьПоСсылке: V82.ДокументыСсылка.ОценкаНезавершенногоПроизводства,IReturn<ОценкаНезавершенногоПроизводстваВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ОценкаНезавершенногоПроизводства/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ОценкаНезавершенногоПроизводства/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ОценкаНезавершенногоПроизводства/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ОценкаНезавершенногоПроизводстваВыбратьПоНомеру: V82.ДокументыСсылка.ОценкаНезавершенногоПроизводства,IReturn<ОценкаНезавершенногоПроизводстваВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ОценкаНезавершенногоПроизводства/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ОценкаНезавершенногоПроизводстваСтраницаПоСсылке: V82.ДокументыСсылка.ОценкаНезавершенногоПроизводства,IReturn<ОценкаНезавершенногоПроизводстваСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ОценкаНезавершенногоПроизводства/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ОценкаНезавершенногоПроизводстваСтраницаПоНомеру: V82.ДокументыСсылка.ОценкаНезавершенногоПроизводства,IReturn<ОценкаНезавершенногоПроизводстваСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ОценкаНезавершенногоПроизводстваОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ОценкаНезавершенногоПроизводстваСервис : Service
	{
		
		public object Get(ОценкаНезавершенногоПроизводстваЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ОценкаНезавершенногоПроизводстваНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ОценкаНезавершенногоПроизводства.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ОценкаНезавершенногоПроизводстваОтвет() { Ответ = "ОценкаНезавершенногоПроизводства c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ОценкаНезавершенногоПроизводстваНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ОценкаНезавершенногоПроизводства.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ОценкаНезавершенногоПроизводстваОтвет() {Ответ = "ОценкаНезавершенногоПроизводства c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ОценкаНезавершенногоПроизводстваВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ОценкаНезавершенногоПроизводства.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ОценкаНезавершенногоПроизводстваВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ОценкаНезавершенногоПроизводстваСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ОценкаНезавершенногоПроизводстваСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ОценкаНезавершенногоПроизводстваЗапрос Запрос)
		{
			return new ОценкаНезавершенногоПроизводстваОтвет {Ответ = "ОценкаНезавершенногоПроизводства, "};
		}

		public object Post(ОценкаНезавершенногоПроизводстваЗапрос ЗапросОценкаНезавершенногоПроизводства)
		{
			var Ссылка = (ДокументыСсылка.ОценкаНезавершенногоПроизводства)ЗапросОценкаНезавершенногоПроизводства;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}