
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//Sobytie
	[Маршрут("Документы/Событие","")]
	public class СобытиеЗапрос: V82.ДокументыСсылка.Событие,IReturn<СобытиеЗапрос>
	{
	}
	[Маршрут("Документы/Событие/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/Событие/ПоСсылке","{Ссылка}")]
	public class СобытиеНайтиПоСсылке: V82.ДокументыСсылка.Событие,IReturn<СобытиеНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/Событие/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/Событие/ПоНомеру","{Номер}")]
	public class СобытиеНайтиПоНомеру: V82.ДокументыСсылка.Событие,IReturn<СобытиеНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/Событие/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/Событие/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/Событие/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class СобытиеВыбратьПоСсылке: V82.ДокументыСсылка.Событие,IReturn<СобытиеВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/Событие/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/Событие/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/Событие/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class СобытиеВыбратьПоНомеру: V82.ДокументыСсылка.Событие,IReturn<СобытиеВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/Событие/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class СобытиеСтраницаПоСсылке: V82.ДокументыСсылка.Событие,IReturn<СобытиеСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/Событие/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class СобытиеСтраницаПоНомеру: V82.ДокументыСсылка.Событие,IReturn<СобытиеСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class СобытиеОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class СобытиеСервис : Service
	{
		
		public object Get(СобытиеЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(СобытиеНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.Событие.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new СобытиеОтвет() { Ответ = "Событие c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(СобытиеНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.Событие.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new СобытиеОтвет() {Ответ = "Событие c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(СобытиеВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.Событие.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(СобытиеВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(СобытиеСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(СобытиеСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(СобытиеЗапрос Запрос)
		{
			return new СобытиеОтвет {Ответ = "Событие, "};
		}

		public object Post(СобытиеЗапрос ЗапросСобытие)
		{
			var Ссылка = (ДокументыСсылка.Событие)ЗапросСобытие;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}