
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//SchetFakturaVydannyjj
	[Маршрут("Документы/СчетФактураВыданный","")]
	public class СчетФактураВыданныйЗапрос: V82.ДокументыСсылка.СчетФактураВыданный,IReturn<СчетФактураВыданныйЗапрос>
	{
	}
	[Маршрут("Документы/СчетФактураВыданный/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/СчетФактураВыданный/ПоСсылке","{Ссылка}")]
	public class СчетФактураВыданныйНайтиПоСсылке: V82.ДокументыСсылка.СчетФактураВыданный,IReturn<СчетФактураВыданныйНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/СчетФактураВыданный/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/СчетФактураВыданный/ПоНомеру","{Номер}")]
	public class СчетФактураВыданныйНайтиПоНомеру: V82.ДокументыСсылка.СчетФактураВыданный,IReturn<СчетФактураВыданныйНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/СчетФактураВыданный/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/СчетФактураВыданный/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/СчетФактураВыданный/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class СчетФактураВыданныйВыбратьПоСсылке: V82.ДокументыСсылка.СчетФактураВыданный,IReturn<СчетФактураВыданныйВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/СчетФактураВыданный/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/СчетФактураВыданный/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/СчетФактураВыданный/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class СчетФактураВыданныйВыбратьПоНомеру: V82.ДокументыСсылка.СчетФактураВыданный,IReturn<СчетФактураВыданныйВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/СчетФактураВыданный/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class СчетФактураВыданныйСтраницаПоСсылке: V82.ДокументыСсылка.СчетФактураВыданный,IReturn<СчетФактураВыданныйСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/СчетФактураВыданный/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class СчетФактураВыданныйСтраницаПоНомеру: V82.ДокументыСсылка.СчетФактураВыданный,IReturn<СчетФактураВыданныйСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class СчетФактураВыданныйОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class СчетФактураВыданныйСервис : Service
	{
		
		public object Get(СчетФактураВыданныйЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(СчетФактураВыданныйНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.СчетФактураВыданный.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new СчетФактураВыданныйОтвет() { Ответ = "СчетФактураВыданный c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(СчетФактураВыданныйНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.СчетФактураВыданный.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new СчетФактураВыданныйОтвет() {Ответ = "СчетФактураВыданный c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(СчетФактураВыданныйВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.СчетФактураВыданный.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(СчетФактураВыданныйВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(СчетФактураВыданныйСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(СчетФактураВыданныйСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(СчетФактураВыданныйЗапрос Запрос)
		{
			return new СчетФактураВыданныйОтвет {Ответ = "СчетФактураВыданный, "};
		}

		public object Post(СчетФактураВыданныйЗапрос ЗапросСчетФактураВыданный)
		{
			var Ссылка = (ДокументыСсылка.СчетФактураВыданный)ЗапросСчетФактураВыданный;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}