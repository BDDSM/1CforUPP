
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//VygruzkaReglamentirovannykhOtchetov
	[Маршрут("Документы/ВыгрузкаРегламентированныхОтчетов","")]
	public class ВыгрузкаРегламентированныхОтчетовЗапрос: V82.ДокументыСсылка.ВыгрузкаРегламентированныхОтчетов,IReturn<ВыгрузкаРегламентированныхОтчетовЗапрос>
	{
	}
	[Маршрут("Документы/ВыгрузкаРегламентированныхОтчетов/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ВыгрузкаРегламентированныхОтчетов/ПоСсылке","{Ссылка}")]
	public class ВыгрузкаРегламентированныхОтчетовНайтиПоСсылке: V82.ДокументыСсылка.ВыгрузкаРегламентированныхОтчетов,IReturn<ВыгрузкаРегламентированныхОтчетовНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ВыгрузкаРегламентированныхОтчетов/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ВыгрузкаРегламентированныхОтчетов/ПоНомеру","{Номер}")]
	public class ВыгрузкаРегламентированныхОтчетовНайтиПоНомеру: V82.ДокументыСсылка.ВыгрузкаРегламентированныхОтчетов,IReturn<ВыгрузкаРегламентированныхОтчетовНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ВыгрузкаРегламентированныхОтчетов/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ВыгрузкаРегламентированныхОтчетов/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ВыгрузкаРегламентированныхОтчетов/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ВыгрузкаРегламентированныхОтчетовВыбратьПоСсылке: V82.ДокументыСсылка.ВыгрузкаРегламентированныхОтчетов,IReturn<ВыгрузкаРегламентированныхОтчетовВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ВыгрузкаРегламентированныхОтчетов/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ВыгрузкаРегламентированныхОтчетов/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ВыгрузкаРегламентированныхОтчетов/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ВыгрузкаРегламентированныхОтчетовВыбратьПоНомеру: V82.ДокументыСсылка.ВыгрузкаРегламентированныхОтчетов,IReturn<ВыгрузкаРегламентированныхОтчетовВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ВыгрузкаРегламентированныхОтчетов/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ВыгрузкаРегламентированныхОтчетовСтраницаПоСсылке: V82.ДокументыСсылка.ВыгрузкаРегламентированныхОтчетов,IReturn<ВыгрузкаРегламентированныхОтчетовСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ВыгрузкаРегламентированныхОтчетов/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ВыгрузкаРегламентированныхОтчетовСтраницаПоНомеру: V82.ДокументыСсылка.ВыгрузкаРегламентированныхОтчетов,IReturn<ВыгрузкаРегламентированныхОтчетовСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ВыгрузкаРегламентированныхОтчетовОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ВыгрузкаРегламентированныхОтчетовСервис : Service
	{
		
		public object Get(ВыгрузкаРегламентированныхОтчетовЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ВыгрузкаРегламентированныхОтчетовНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ВыгрузкаРегламентированныхОтчетов.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ВыгрузкаРегламентированныхОтчетовОтвет() { Ответ = "ВыгрузкаРегламентированныхОтчетов c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ВыгрузкаРегламентированныхОтчетовНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ВыгрузкаРегламентированныхОтчетов.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ВыгрузкаРегламентированныхОтчетовОтвет() {Ответ = "ВыгрузкаРегламентированныхОтчетов c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ВыгрузкаРегламентированныхОтчетовВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ВыгрузкаРегламентированныхОтчетов.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ВыгрузкаРегламентированныхОтчетовВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ВыгрузкаРегламентированныхОтчетовСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ВыгрузкаРегламентированныхОтчетовСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ВыгрузкаРегламентированныхОтчетовЗапрос Запрос)
		{
			return new ВыгрузкаРегламентированныхОтчетовОтвет {Ответ = "ВыгрузкаРегламентированныхОтчетов, "};
		}

		public object Post(ВыгрузкаРегламентированныхОтчетовЗапрос ЗапросВыгрузкаРегламентированныхОтчетов)
		{
			var Ссылка = (ДокументыСсылка.ВыгрузкаРегламентированныхОтчетов)ЗапросВыгрузкаРегламентированныхОтчетов;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}