
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//AkkreditivPoluchennyjj
	[Маршрут("Документы/АккредитивПолученный","")]
	public class АккредитивПолученныйЗапрос: V82.ДокументыСсылка.АккредитивПолученный,IReturn<АккредитивПолученныйЗапрос>
	{
	}
	[Маршрут("Документы/АккредитивПолученный/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/АккредитивПолученный/ПоСсылке","{Ссылка}")]
	public class АккредитивПолученныйНайтиПоСсылке: V82.ДокументыСсылка.АккредитивПолученный,IReturn<АккредитивПолученныйНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/АккредитивПолученный/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/АккредитивПолученный/ПоНомеру","{Номер}")]
	public class АккредитивПолученныйНайтиПоНомеру: V82.ДокументыСсылка.АккредитивПолученный,IReturn<АккредитивПолученныйНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/АккредитивПолученный/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/АккредитивПолученный/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/АккредитивПолученный/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class АккредитивПолученныйВыбратьПоСсылке: V82.ДокументыСсылка.АккредитивПолученный,IReturn<АккредитивПолученныйВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/АккредитивПолученный/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/АккредитивПолученный/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/АккредитивПолученный/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class АккредитивПолученныйВыбратьПоНомеру: V82.ДокументыСсылка.АккредитивПолученный,IReturn<АккредитивПолученныйВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/АккредитивПолученный/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class АккредитивПолученныйСтраницаПоСсылке: V82.ДокументыСсылка.АккредитивПолученный,IReturn<АккредитивПолученныйСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/АккредитивПолученный/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class АккредитивПолученныйСтраницаПоНомеру: V82.ДокументыСсылка.АккредитивПолученный,IReturn<АккредитивПолученныйСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class АккредитивПолученныйОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class АккредитивПолученныйСервис : Service
	{
		
		public object Get(АккредитивПолученныйЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(АккредитивПолученныйНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.АккредитивПолученный.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new АккредитивПолученныйОтвет() { Ответ = "АккредитивПолученный c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(АккредитивПолученныйНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.АккредитивПолученный.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new АккредитивПолученныйОтвет() {Ответ = "АккредитивПолученный c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(АккредитивПолученныйВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.АккредитивПолученный.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(АккредитивПолученныйВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(АккредитивПолученныйСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(АккредитивПолученныйСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(АккредитивПолученныйЗапрос Запрос)
		{
			return new АккредитивПолученныйОтвет {Ответ = "АккредитивПолученный, "};
		}

		public object Post(АккредитивПолученныйЗапрос ЗапросАккредитивПолученный)
		{
			var Ссылка = (ДокументыСсылка.АккредитивПолученный)ЗапросАккредитивПолученный;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}