
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//PereocenkaTovarovOtdannykhNaKomissiyu
	[Маршрут("Документы/ПереоценкаТоваровОтданныхНаКомиссию","")]
	public class ПереоценкаТоваровОтданныхНаКомиссиюЗапрос: V82.ДокументыСсылка.ПереоценкаТоваровОтданныхНаКомиссию,IReturn<ПереоценкаТоваровОтданныхНаКомиссиюЗапрос>
	{
	}
	[Маршрут("Документы/ПереоценкаТоваровОтданныхНаКомиссию/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ПереоценкаТоваровОтданныхНаКомиссию/ПоСсылке","{Ссылка}")]
	public class ПереоценкаТоваровОтданныхНаКомиссиюНайтиПоСсылке: V82.ДокументыСсылка.ПереоценкаТоваровОтданныхНаКомиссию,IReturn<ПереоценкаТоваровОтданныхНаКомиссиюНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ПереоценкаТоваровОтданныхНаКомиссию/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ПереоценкаТоваровОтданныхНаКомиссию/ПоНомеру","{Номер}")]
	public class ПереоценкаТоваровОтданныхНаКомиссиюНайтиПоНомеру: V82.ДокументыСсылка.ПереоценкаТоваровОтданныхНаКомиссию,IReturn<ПереоценкаТоваровОтданныхНаКомиссиюНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ПереоценкаТоваровОтданныхНаКомиссию/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ПереоценкаТоваровОтданныхНаКомиссию/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПереоценкаТоваровОтданныхНаКомиссию/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ПереоценкаТоваровОтданныхНаКомиссиюВыбратьПоСсылке: V82.ДокументыСсылка.ПереоценкаТоваровОтданныхНаКомиссию,IReturn<ПереоценкаТоваровОтданныхНаКомиссиюВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ПереоценкаТоваровОтданныхНаКомиссию/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ПереоценкаТоваровОтданныхНаКомиссию/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПереоценкаТоваровОтданныхНаКомиссию/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ПереоценкаТоваровОтданныхНаКомиссиюВыбратьПоНомеру: V82.ДокументыСсылка.ПереоценкаТоваровОтданныхНаКомиссию,IReturn<ПереоценкаТоваровОтданныхНаКомиссиюВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ПереоценкаТоваровОтданныхНаКомиссию/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ПереоценкаТоваровОтданныхНаКомиссиюСтраницаПоСсылке: V82.ДокументыСсылка.ПереоценкаТоваровОтданныхНаКомиссию,IReturn<ПереоценкаТоваровОтданныхНаКомиссиюСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ПереоценкаТоваровОтданныхНаКомиссию/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ПереоценкаТоваровОтданныхНаКомиссиюСтраницаПоНомеру: V82.ДокументыСсылка.ПереоценкаТоваровОтданныхНаКомиссию,IReturn<ПереоценкаТоваровОтданныхНаКомиссиюСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ПереоценкаТоваровОтданныхНаКомиссиюОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ПереоценкаТоваровОтданныхНаКомиссиюСервис : Service
	{
		
		public object Get(ПереоценкаТоваровОтданныхНаКомиссиюЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ПереоценкаТоваровОтданныхНаКомиссиюНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ПереоценкаТоваровОтданныхНаКомиссию.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ПереоценкаТоваровОтданныхНаКомиссиюОтвет() { Ответ = "ПереоценкаТоваровОтданныхНаКомиссию c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПереоценкаТоваровОтданныхНаКомиссиюНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ПереоценкаТоваровОтданныхНаКомиссию.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ПереоценкаТоваровОтданныхНаКомиссиюОтвет() {Ответ = "ПереоценкаТоваровОтданныхНаКомиссию c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПереоценкаТоваровОтданныхНаКомиссиюВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ПереоценкаТоваровОтданныхНаКомиссию.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ПереоценкаТоваровОтданныхНаКомиссиюВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ПереоценкаТоваровОтданныхНаКомиссиюСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ПереоценкаТоваровОтданныхНаКомиссиюСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ПереоценкаТоваровОтданныхНаКомиссиюЗапрос Запрос)
		{
			return new ПереоценкаТоваровОтданныхНаКомиссиюОтвет {Ответ = "ПереоценкаТоваровОтданныхНаКомиссию, "};
		}

		public object Post(ПереоценкаТоваровОтданныхНаКомиссиюЗапрос ЗапросПереоценкаТоваровОтданныхНаКомиссию)
		{
			var Ссылка = (ДокументыСсылка.ПереоценкаТоваровОтданныхНаКомиссию)ЗапросПереоценкаТоваровОтданныхНаКомиссию;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}