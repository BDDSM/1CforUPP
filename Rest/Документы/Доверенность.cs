
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//Doverennost
	[Маршрут("Документы/Доверенность","")]
	public class ДоверенностьЗапрос: V82.ДокументыСсылка.Доверенность,IReturn<ДоверенностьЗапрос>
	{
	}
	[Маршрут("Документы/Доверенность/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/Доверенность/ПоСсылке","{Ссылка}")]
	public class ДоверенностьНайтиПоСсылке: V82.ДокументыСсылка.Доверенность,IReturn<ДоверенностьНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/Доверенность/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/Доверенность/ПоНомеру","{Номер}")]
	public class ДоверенностьНайтиПоНомеру: V82.ДокументыСсылка.Доверенность,IReturn<ДоверенностьНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/Доверенность/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/Доверенность/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/Доверенность/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ДоверенностьВыбратьПоСсылке: V82.ДокументыСсылка.Доверенность,IReturn<ДоверенностьВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/Доверенность/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/Доверенность/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/Доверенность/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ДоверенностьВыбратьПоНомеру: V82.ДокументыСсылка.Доверенность,IReturn<ДоверенностьВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/Доверенность/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ДоверенностьСтраницаПоСсылке: V82.ДокументыСсылка.Доверенность,IReturn<ДоверенностьСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/Доверенность/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ДоверенностьСтраницаПоНомеру: V82.ДокументыСсылка.Доверенность,IReturn<ДоверенностьСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ДоверенностьОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ДоверенностьСервис : Service
	{
		
		public object Get(ДоверенностьЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ДоверенностьНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.Доверенность.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ДоверенностьОтвет() { Ответ = "Доверенность c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ДоверенностьНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.Доверенность.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ДоверенностьОтвет() {Ответ = "Доверенность c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ДоверенностьВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.Доверенность.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ДоверенностьВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ДоверенностьСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ДоверенностьСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ДоверенностьЗапрос Запрос)
		{
			return new ДоверенностьОтвет {Ответ = "Доверенность, "};
		}

		public object Post(ДоверенностьЗапрос ЗапросДоверенность)
		{
			var Ссылка = (ДокументыСсылка.Доверенность)ЗапросДоверенность;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}