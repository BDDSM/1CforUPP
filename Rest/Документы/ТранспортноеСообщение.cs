
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//TransportnoeSoobshhenie
	[Маршрут("Документы/ТранспортноеСообщение","")]
	public class ТранспортноеСообщениеЗапрос: V82.ДокументыСсылка.ТранспортноеСообщение,IReturn<ТранспортноеСообщениеЗапрос>
	{
	}
	[Маршрут("Документы/ТранспортноеСообщение/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ТранспортноеСообщение/ПоСсылке","{Ссылка}")]
	public class ТранспортноеСообщениеНайтиПоСсылке: V82.ДокументыСсылка.ТранспортноеСообщение,IReturn<ТранспортноеСообщениеНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ТранспортноеСообщение/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ТранспортноеСообщение/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ТранспортноеСообщение/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ТранспортноеСообщениеВыбратьПоСсылке: V82.ДокументыСсылка.ТранспортноеСообщение,IReturn<ТранспортноеСообщениеВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ТранспортноеСообщение/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ТранспортноеСообщение/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ТранспортноеСообщение/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ТранспортноеСообщениеВыбратьПоНомеру: V82.ДокументыСсылка.ТранспортноеСообщение,IReturn<ТранспортноеСообщениеВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ТранспортноеСообщение/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ТранспортноеСообщениеСтраницаПоСсылке: V82.ДокументыСсылка.ТранспортноеСообщение,IReturn<ТранспортноеСообщениеСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ТранспортноеСообщениеОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ТранспортноеСообщениеСервис : Service
	{
		
		public object Get(ТранспортноеСообщениеЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ТранспортноеСообщениеНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ТранспортноеСообщение.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ТранспортноеСообщениеОтвет() { Ответ = "ТранспортноеСообщение c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ТранспортноеСообщениеВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ТранспортноеСообщение.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ТранспортноеСообщениеСтраницаПоСсылке Запрос)
		{
			return null;
		}

		public object Any(ТранспортноеСообщениеЗапрос Запрос)
		{
			return new ТранспортноеСообщениеОтвет {Ответ = "ТранспортноеСообщение, "};
		}

		public object Post(ТранспортноеСообщениеЗапрос ЗапросТранспортноеСообщение)
		{
			var Ссылка = (ДокументыСсылка.ТранспортноеСообщение)ЗапросТранспортноеСообщение;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}