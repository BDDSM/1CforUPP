
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//InventarizaciyaBrakaVProizvodstve
	[Маршрут("Документы/ИнвентаризацияБракаВПроизводстве","")]
	public class ИнвентаризацияБракаВПроизводствеЗапрос: V82.ДокументыСсылка.ИнвентаризацияБракаВПроизводстве,IReturn<ИнвентаризацияБракаВПроизводствеЗапрос>
	{
	}
	[Маршрут("Документы/ИнвентаризацияБракаВПроизводстве/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ИнвентаризацияБракаВПроизводстве/ПоСсылке","{Ссылка}")]
	public class ИнвентаризацияБракаВПроизводствеНайтиПоСсылке: V82.ДокументыСсылка.ИнвентаризацияБракаВПроизводстве,IReturn<ИнвентаризацияБракаВПроизводствеНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ИнвентаризацияБракаВПроизводстве/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ИнвентаризацияБракаВПроизводстве/ПоНомеру","{Номер}")]
	public class ИнвентаризацияБракаВПроизводствеНайтиПоНомеру: V82.ДокументыСсылка.ИнвентаризацияБракаВПроизводстве,IReturn<ИнвентаризацияБракаВПроизводствеНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ИнвентаризацияБракаВПроизводстве/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ИнвентаризацияБракаВПроизводстве/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ИнвентаризацияБракаВПроизводстве/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ИнвентаризацияБракаВПроизводствеВыбратьПоСсылке: V82.ДокументыСсылка.ИнвентаризацияБракаВПроизводстве,IReturn<ИнвентаризацияБракаВПроизводствеВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ИнвентаризацияБракаВПроизводстве/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ИнвентаризацияБракаВПроизводстве/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ИнвентаризацияБракаВПроизводстве/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ИнвентаризацияБракаВПроизводствеВыбратьПоНомеру: V82.ДокументыСсылка.ИнвентаризацияБракаВПроизводстве,IReturn<ИнвентаризацияБракаВПроизводствеВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ИнвентаризацияБракаВПроизводстве/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ИнвентаризацияБракаВПроизводствеСтраницаПоСсылке: V82.ДокументыСсылка.ИнвентаризацияБракаВПроизводстве,IReturn<ИнвентаризацияБракаВПроизводствеСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ИнвентаризацияБракаВПроизводстве/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ИнвентаризацияБракаВПроизводствеСтраницаПоНомеру: V82.ДокументыСсылка.ИнвентаризацияБракаВПроизводстве,IReturn<ИнвентаризацияБракаВПроизводствеСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ИнвентаризацияБракаВПроизводствеОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ИнвентаризацияБракаВПроизводствеСервис : Service
	{
		
		public object Get(ИнвентаризацияБракаВПроизводствеЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ИнвентаризацияБракаВПроизводствеНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ИнвентаризацияБракаВПроизводстве.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ИнвентаризацияБракаВПроизводствеОтвет() { Ответ = "ИнвентаризацияБракаВПроизводстве c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ИнвентаризацияБракаВПроизводствеНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ИнвентаризацияБракаВПроизводстве.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ИнвентаризацияБракаВПроизводствеОтвет() {Ответ = "ИнвентаризацияБракаВПроизводстве c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ИнвентаризацияБракаВПроизводствеВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ИнвентаризацияБракаВПроизводстве.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ИнвентаризацияБракаВПроизводствеВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ИнвентаризацияБракаВПроизводствеСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ИнвентаризацияБракаВПроизводствеСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ИнвентаризацияБракаВПроизводствеЗапрос Запрос)
		{
			return new ИнвентаризацияБракаВПроизводствеОтвет {Ответ = "ИнвентаризацияБракаВПроизводстве, "};
		}

		public object Post(ИнвентаризацияБракаВПроизводствеЗапрос ЗапросИнвентаризацияБракаВПроизводстве)
		{
			var Ссылка = (ДокументыСсылка.ИнвентаризацияБракаВПроизводстве)ЗапросИнвентаризацияБракаВПроизводстве;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}