
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//PlatezhnoePoruchenieIskhodyashhee
	[Маршрут("Документы/ПлатежноеПоручениеИсходящее","")]
	public class ПлатежноеПоручениеИсходящееЗапрос: V82.ДокументыСсылка.ПлатежноеПоручениеИсходящее,IReturn<ПлатежноеПоручениеИсходящееЗапрос>
	{
	}
	[Маршрут("Документы/ПлатежноеПоручениеИсходящее/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ПлатежноеПоручениеИсходящее/ПоСсылке","{Ссылка}")]
	public class ПлатежноеПоручениеИсходящееНайтиПоСсылке: V82.ДокументыСсылка.ПлатежноеПоручениеИсходящее,IReturn<ПлатежноеПоручениеИсходящееНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ПлатежноеПоручениеИсходящее/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ПлатежноеПоручениеИсходящее/ПоНомеру","{Номер}")]
	public class ПлатежноеПоручениеИсходящееНайтиПоНомеру: V82.ДокументыСсылка.ПлатежноеПоручениеИсходящее,IReturn<ПлатежноеПоручениеИсходящееНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ПлатежноеПоручениеИсходящее/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ПлатежноеПоручениеИсходящее/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПлатежноеПоручениеИсходящее/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ПлатежноеПоручениеИсходящееВыбратьПоСсылке: V82.ДокументыСсылка.ПлатежноеПоручениеИсходящее,IReturn<ПлатежноеПоручениеИсходящееВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ПлатежноеПоручениеИсходящее/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ПлатежноеПоручениеИсходящее/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПлатежноеПоручениеИсходящее/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ПлатежноеПоручениеИсходящееВыбратьПоНомеру: V82.ДокументыСсылка.ПлатежноеПоручениеИсходящее,IReturn<ПлатежноеПоручениеИсходящееВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ПлатежноеПоручениеИсходящее/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ПлатежноеПоручениеИсходящееСтраницаПоСсылке: V82.ДокументыСсылка.ПлатежноеПоручениеИсходящее,IReturn<ПлатежноеПоручениеИсходящееСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ПлатежноеПоручениеИсходящее/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ПлатежноеПоручениеИсходящееСтраницаПоНомеру: V82.ДокументыСсылка.ПлатежноеПоручениеИсходящее,IReturn<ПлатежноеПоручениеИсходящееСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ПлатежноеПоручениеИсходящееОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ПлатежноеПоручениеИсходящееСервис : Service
	{
		
		public object Get(ПлатежноеПоручениеИсходящееЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ПлатежноеПоручениеИсходящееНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ПлатежноеПоручениеИсходящее.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ПлатежноеПоручениеИсходящееОтвет() { Ответ = "ПлатежноеПоручениеИсходящее c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПлатежноеПоручениеИсходящееНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ПлатежноеПоручениеИсходящее.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ПлатежноеПоручениеИсходящееОтвет() {Ответ = "ПлатежноеПоручениеИсходящее c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПлатежноеПоручениеИсходящееВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ПлатежноеПоручениеИсходящее.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ПлатежноеПоручениеИсходящееВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ПлатежноеПоручениеИсходящееСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ПлатежноеПоручениеИсходящееСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ПлатежноеПоручениеИсходящееЗапрос Запрос)
		{
			return new ПлатежноеПоручениеИсходящееОтвет {Ответ = "ПлатежноеПоручениеИсходящее, "};
		}

		public object Post(ПлатежноеПоручениеИсходящееЗапрос ЗапросПлатежноеПоручениеИсходящее)
		{
			var Ссылка = (ДокументыСсылка.ПлатежноеПоручениеИсходящее)ЗапросПлатежноеПоручениеИсходящее;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}