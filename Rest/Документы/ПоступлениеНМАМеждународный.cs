
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//PostuplenieNMAMezhdunarodnyjj
	[Маршрут("Документы/ПоступлениеНМАМеждународный","")]
	public class ПоступлениеНМАМеждународныйЗапрос: V82.ДокументыСсылка.ПоступлениеНМАМеждународный,IReturn<ПоступлениеНМАМеждународныйЗапрос>
	{
	}
	[Маршрут("Документы/ПоступлениеНМАМеждународный/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ПоступлениеНМАМеждународный/ПоСсылке","{Ссылка}")]
	public class ПоступлениеНМАМеждународныйНайтиПоСсылке: V82.ДокументыСсылка.ПоступлениеНМАМеждународный,IReturn<ПоступлениеНМАМеждународныйНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ПоступлениеНМАМеждународный/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ПоступлениеНМАМеждународный/ПоНомеру","{Номер}")]
	public class ПоступлениеНМАМеждународныйНайтиПоНомеру: V82.ДокументыСсылка.ПоступлениеНМАМеждународный,IReturn<ПоступлениеНМАМеждународныйНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ПоступлениеНМАМеждународный/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ПоступлениеНМАМеждународный/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПоступлениеНМАМеждународный/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ПоступлениеНМАМеждународныйВыбратьПоСсылке: V82.ДокументыСсылка.ПоступлениеНМАМеждународный,IReturn<ПоступлениеНМАМеждународныйВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ПоступлениеНМАМеждународный/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ПоступлениеНМАМеждународный/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПоступлениеНМАМеждународный/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ПоступлениеНМАМеждународныйВыбратьПоНомеру: V82.ДокументыСсылка.ПоступлениеНМАМеждународный,IReturn<ПоступлениеНМАМеждународныйВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ПоступлениеНМАМеждународный/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ПоступлениеНМАМеждународныйСтраницаПоСсылке: V82.ДокументыСсылка.ПоступлениеНМАМеждународный,IReturn<ПоступлениеНМАМеждународныйСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ПоступлениеНМАМеждународный/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ПоступлениеНМАМеждународныйСтраницаПоНомеру: V82.ДокументыСсылка.ПоступлениеНМАМеждународный,IReturn<ПоступлениеНМАМеждународныйСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ПоступлениеНМАМеждународныйОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ПоступлениеНМАМеждународныйСервис : Service
	{
		
		public object Get(ПоступлениеНМАМеждународныйЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ПоступлениеНМАМеждународныйНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ПоступлениеНМАМеждународный.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ПоступлениеНМАМеждународныйОтвет() { Ответ = "ПоступлениеНМАМеждународный c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПоступлениеНМАМеждународныйНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ПоступлениеНМАМеждународный.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ПоступлениеНМАМеждународныйОтвет() {Ответ = "ПоступлениеНМАМеждународный c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПоступлениеНМАМеждународныйВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ПоступлениеНМАМеждународный.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ПоступлениеНМАМеждународныйВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ПоступлениеНМАМеждународныйСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ПоступлениеНМАМеждународныйСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ПоступлениеНМАМеждународныйЗапрос Запрос)
		{
			return new ПоступлениеНМАМеждународныйОтвет {Ответ = "ПоступлениеНМАМеждународный, "};
		}

		public object Post(ПоступлениеНМАМеждународныйЗапрос ЗапросПоступлениеНМАМеждународный)
		{
			var Ссылка = (ДокументыСсылка.ПоступлениеНМАМеждународный)ЗапросПоступлениеНМАМеждународный;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}