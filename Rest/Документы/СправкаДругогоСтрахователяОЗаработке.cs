
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//SpravkaDrugogoStrakhovatelyaOZarabotke
	[Маршрут("Документы/СправкаДругогоСтрахователяОЗаработке","")]
	public class СправкаДругогоСтрахователяОЗаработкеЗапрос: V82.ДокументыСсылка.СправкаДругогоСтрахователяОЗаработке,IReturn<СправкаДругогоСтрахователяОЗаработкеЗапрос>
	{
	}
	[Маршрут("Документы/СправкаДругогоСтрахователяОЗаработке/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/СправкаДругогоСтрахователяОЗаработке/ПоСсылке","{Ссылка}")]
	public class СправкаДругогоСтрахователяОЗаработкеНайтиПоСсылке: V82.ДокументыСсылка.СправкаДругогоСтрахователяОЗаработке,IReturn<СправкаДругогоСтрахователяОЗаработкеНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/СправкаДругогоСтрахователяОЗаработке/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/СправкаДругогоСтрахователяОЗаработке/ПоНомеру","{Номер}")]
	public class СправкаДругогоСтрахователяОЗаработкеНайтиПоНомеру: V82.ДокументыСсылка.СправкаДругогоСтрахователяОЗаработке,IReturn<СправкаДругогоСтрахователяОЗаработкеНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/СправкаДругогоСтрахователяОЗаработке/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/СправкаДругогоСтрахователяОЗаработке/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/СправкаДругогоСтрахователяОЗаработке/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class СправкаДругогоСтрахователяОЗаработкеВыбратьПоСсылке: V82.ДокументыСсылка.СправкаДругогоСтрахователяОЗаработке,IReturn<СправкаДругогоСтрахователяОЗаработкеВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/СправкаДругогоСтрахователяОЗаработке/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/СправкаДругогоСтрахователяОЗаработке/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/СправкаДругогоСтрахователяОЗаработке/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class СправкаДругогоСтрахователяОЗаработкеВыбратьПоНомеру: V82.ДокументыСсылка.СправкаДругогоСтрахователяОЗаработке,IReturn<СправкаДругогоСтрахователяОЗаработкеВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/СправкаДругогоСтрахователяОЗаработке/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class СправкаДругогоСтрахователяОЗаработкеСтраницаПоСсылке: V82.ДокументыСсылка.СправкаДругогоСтрахователяОЗаработке,IReturn<СправкаДругогоСтрахователяОЗаработкеСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/СправкаДругогоСтрахователяОЗаработке/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class СправкаДругогоСтрахователяОЗаработкеСтраницаПоНомеру: V82.ДокументыСсылка.СправкаДругогоСтрахователяОЗаработке,IReturn<СправкаДругогоСтрахователяОЗаработкеСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class СправкаДругогоСтрахователяОЗаработкеОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class СправкаДругогоСтрахователяОЗаработкеСервис : Service
	{
		
		public object Get(СправкаДругогоСтрахователяОЗаработкеЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(СправкаДругогоСтрахователяОЗаработкеНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.СправкаДругогоСтрахователяОЗаработке.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new СправкаДругогоСтрахователяОЗаработкеОтвет() { Ответ = "СправкаДругогоСтрахователяОЗаработке c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(СправкаДругогоСтрахователяОЗаработкеНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.СправкаДругогоСтрахователяОЗаработке.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new СправкаДругогоСтрахователяОЗаработкеОтвет() {Ответ = "СправкаДругогоСтрахователяОЗаработке c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(СправкаДругогоСтрахователяОЗаработкеВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.СправкаДругогоСтрахователяОЗаработке.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(СправкаДругогоСтрахователяОЗаработкеВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(СправкаДругогоСтрахователяОЗаработкеСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(СправкаДругогоСтрахователяОЗаработкеСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(СправкаДругогоСтрахователяОЗаработкеЗапрос Запрос)
		{
			return new СправкаДругогоСтрахователяОЗаработкеОтвет {Ответ = "СправкаДругогоСтрахователяОЗаработке, "};
		}

		public object Post(СправкаДругогоСтрахователяОЗаработкеЗапрос ЗапросСправкаДругогоСтрахователяОЗаработке)
		{
			var Ссылка = (ДокументыСсылка.СправкаДругогоСтрахователяОЗаработке)ЗапросСправкаДругогоСтрахователяОЗаработке;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}