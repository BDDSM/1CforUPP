
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//PereocenkaValyutnykhStatejjPriByudzhetirovanii
	[Маршрут("Документы/ПереоценкаВалютныхСтатейПриБюджетировании","")]
	public class ПереоценкаВалютныхСтатейПриБюджетированииЗапрос: V82.ДокументыСсылка.ПереоценкаВалютныхСтатейПриБюджетировании,IReturn<ПереоценкаВалютныхСтатейПриБюджетированииЗапрос>
	{
	}
	[Маршрут("Документы/ПереоценкаВалютныхСтатейПриБюджетировании/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ПереоценкаВалютныхСтатейПриБюджетировании/ПоСсылке","{Ссылка}")]
	public class ПереоценкаВалютныхСтатейПриБюджетированииНайтиПоСсылке: V82.ДокументыСсылка.ПереоценкаВалютныхСтатейПриБюджетировании,IReturn<ПереоценкаВалютныхСтатейПриБюджетированииНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ПереоценкаВалютныхСтатейПриБюджетировании/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ПереоценкаВалютныхСтатейПриБюджетировании/ПоНомеру","{Номер}")]
	public class ПереоценкаВалютныхСтатейПриБюджетированииНайтиПоНомеру: V82.ДокументыСсылка.ПереоценкаВалютныхСтатейПриБюджетировании,IReturn<ПереоценкаВалютныхСтатейПриБюджетированииНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ПереоценкаВалютныхСтатейПриБюджетировании/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ПереоценкаВалютныхСтатейПриБюджетировании/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПереоценкаВалютныхСтатейПриБюджетировании/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ПереоценкаВалютныхСтатейПриБюджетированииВыбратьПоСсылке: V82.ДокументыСсылка.ПереоценкаВалютныхСтатейПриБюджетировании,IReturn<ПереоценкаВалютныхСтатейПриБюджетированииВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ПереоценкаВалютныхСтатейПриБюджетировании/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ПереоценкаВалютныхСтатейПриБюджетировании/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПереоценкаВалютныхСтатейПриБюджетировании/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ПереоценкаВалютныхСтатейПриБюджетированииВыбратьПоНомеру: V82.ДокументыСсылка.ПереоценкаВалютныхСтатейПриБюджетировании,IReturn<ПереоценкаВалютныхСтатейПриБюджетированииВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ПереоценкаВалютныхСтатейПриБюджетировании/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ПереоценкаВалютныхСтатейПриБюджетированииСтраницаПоСсылке: V82.ДокументыСсылка.ПереоценкаВалютныхСтатейПриБюджетировании,IReturn<ПереоценкаВалютныхСтатейПриБюджетированииСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ПереоценкаВалютныхСтатейПриБюджетировании/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ПереоценкаВалютныхСтатейПриБюджетированииСтраницаПоНомеру: V82.ДокументыСсылка.ПереоценкаВалютныхСтатейПриБюджетировании,IReturn<ПереоценкаВалютныхСтатейПриБюджетированииСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ПереоценкаВалютныхСтатейПриБюджетированииОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ПереоценкаВалютныхСтатейПриБюджетированииСервис : Service
	{
		
		public object Get(ПереоценкаВалютныхСтатейПриБюджетированииЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ПереоценкаВалютныхСтатейПриБюджетированииНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ПереоценкаВалютныхСтатейПриБюджетировании.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ПереоценкаВалютныхСтатейПриБюджетированииОтвет() { Ответ = "ПереоценкаВалютныхСтатейПриБюджетировании c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПереоценкаВалютныхСтатейПриБюджетированииНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ПереоценкаВалютныхСтатейПриБюджетировании.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ПереоценкаВалютныхСтатейПриБюджетированииОтвет() {Ответ = "ПереоценкаВалютныхСтатейПриБюджетировании c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПереоценкаВалютныхСтатейПриБюджетированииВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ПереоценкаВалютныхСтатейПриБюджетировании.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ПереоценкаВалютныхСтатейПриБюджетированииВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ПереоценкаВалютныхСтатейПриБюджетированииСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ПереоценкаВалютныхСтатейПриБюджетированииСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ПереоценкаВалютныхСтатейПриБюджетированииЗапрос Запрос)
		{
			return new ПереоценкаВалютныхСтатейПриБюджетированииОтвет {Ответ = "ПереоценкаВалютныхСтатейПриБюджетировании, "};
		}

		public object Post(ПереоценкаВалютныхСтатейПриБюджетированииЗапрос ЗапросПереоценкаВалютныхСтатейПриБюджетировании)
		{
			var Ссылка = (ДокументыСсылка.ПереоценкаВалютныхСтатейПриБюджетировании)ЗапросПереоценкаВалютныхСтатейПриБюджетировании;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}