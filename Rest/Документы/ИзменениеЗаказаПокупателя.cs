
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//IzmenenieZakazaPokupatelya
	[Маршрут("Документы/ИзменениеЗаказаПокупателя","")]
	public class ИзменениеЗаказаПокупателяЗапрос: V82.ДокументыСсылка.ИзменениеЗаказаПокупателя,IReturn<ИзменениеЗаказаПокупателяЗапрос>
	{
	}
	[Маршрут("Документы/ИзменениеЗаказаПокупателя/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ИзменениеЗаказаПокупателя/ПоСсылке","{Ссылка}")]
	public class ИзменениеЗаказаПокупателяНайтиПоСсылке: V82.ДокументыСсылка.ИзменениеЗаказаПокупателя,IReturn<ИзменениеЗаказаПокупателяНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ИзменениеЗаказаПокупателя/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ИзменениеЗаказаПокупателя/ПоНомеру","{Номер}")]
	public class ИзменениеЗаказаПокупателяНайтиПоНомеру: V82.ДокументыСсылка.ИзменениеЗаказаПокупателя,IReturn<ИзменениеЗаказаПокупателяНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ИзменениеЗаказаПокупателя/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ИзменениеЗаказаПокупателя/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ИзменениеЗаказаПокупателя/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ИзменениеЗаказаПокупателяВыбратьПоСсылке: V82.ДокументыСсылка.ИзменениеЗаказаПокупателя,IReturn<ИзменениеЗаказаПокупателяВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ИзменениеЗаказаПокупателя/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ИзменениеЗаказаПокупателя/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ИзменениеЗаказаПокупателя/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ИзменениеЗаказаПокупателяВыбратьПоНомеру: V82.ДокументыСсылка.ИзменениеЗаказаПокупателя,IReturn<ИзменениеЗаказаПокупателяВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ИзменениеЗаказаПокупателя/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ИзменениеЗаказаПокупателяСтраницаПоСсылке: V82.ДокументыСсылка.ИзменениеЗаказаПокупателя,IReturn<ИзменениеЗаказаПокупателяСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ИзменениеЗаказаПокупателя/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ИзменениеЗаказаПокупателяСтраницаПоНомеру: V82.ДокументыСсылка.ИзменениеЗаказаПокупателя,IReturn<ИзменениеЗаказаПокупателяСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ИзменениеЗаказаПокупателяОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ИзменениеЗаказаПокупателяСервис : Service
	{
		
		public object Get(ИзменениеЗаказаПокупателяЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ИзменениеЗаказаПокупателяНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ИзменениеЗаказаПокупателя.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ИзменениеЗаказаПокупателяОтвет() { Ответ = "ИзменениеЗаказаПокупателя c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ИзменениеЗаказаПокупателяНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ИзменениеЗаказаПокупателя.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ИзменениеЗаказаПокупателяОтвет() {Ответ = "ИзменениеЗаказаПокупателя c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ИзменениеЗаказаПокупателяВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ИзменениеЗаказаПокупателя.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ИзменениеЗаказаПокупателяВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ИзменениеЗаказаПокупателяСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ИзменениеЗаказаПокупателяСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ИзменениеЗаказаПокупателяЗапрос Запрос)
		{
			return new ИзменениеЗаказаПокупателяОтвет {Ответ = "ИзменениеЗаказаПокупателя, "};
		}

		public object Post(ИзменениеЗаказаПокупателяЗапрос ЗапросИзменениеЗаказаПокупателя)
		{
			var Ссылка = (ДокументыСсылка.ИзменениеЗаказаПокупателя)ЗапросИзменениеЗаказаПокупателя;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}