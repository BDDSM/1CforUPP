
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//ZakazNaObsluzhivanieOS
	[Маршрут("Документы/ЗаказНаОбслуживаниеОС","")]
	public class ЗаказНаОбслуживаниеОСЗапрос: V82.ДокументыСсылка.ЗаказНаОбслуживаниеОС,IReturn<ЗаказНаОбслуживаниеОСЗапрос>
	{
	}
	[Маршрут("Документы/ЗаказНаОбслуживаниеОС/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ЗаказНаОбслуживаниеОС/ПоСсылке","{Ссылка}")]
	public class ЗаказНаОбслуживаниеОСНайтиПоСсылке: V82.ДокументыСсылка.ЗаказНаОбслуживаниеОС,IReturn<ЗаказНаОбслуживаниеОСНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ЗаказНаОбслуживаниеОС/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ЗаказНаОбслуживаниеОС/ПоНомеру","{Номер}")]
	public class ЗаказНаОбслуживаниеОСНайтиПоНомеру: V82.ДокументыСсылка.ЗаказНаОбслуживаниеОС,IReturn<ЗаказНаОбслуживаниеОСНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ЗаказНаОбслуживаниеОС/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ЗаказНаОбслуживаниеОС/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ЗаказНаОбслуживаниеОС/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ЗаказНаОбслуживаниеОСВыбратьПоСсылке: V82.ДокументыСсылка.ЗаказНаОбслуживаниеОС,IReturn<ЗаказНаОбслуживаниеОСВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ЗаказНаОбслуживаниеОС/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ЗаказНаОбслуживаниеОС/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ЗаказНаОбслуживаниеОС/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ЗаказНаОбслуживаниеОСВыбратьПоНомеру: V82.ДокументыСсылка.ЗаказНаОбслуживаниеОС,IReturn<ЗаказНаОбслуживаниеОСВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ЗаказНаОбслуживаниеОС/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ЗаказНаОбслуживаниеОССтраницаПоСсылке: V82.ДокументыСсылка.ЗаказНаОбслуживаниеОС,IReturn<ЗаказНаОбслуживаниеОССтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ЗаказНаОбслуживаниеОС/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ЗаказНаОбслуживаниеОССтраницаПоНомеру: V82.ДокументыСсылка.ЗаказНаОбслуживаниеОС,IReturn<ЗаказНаОбслуживаниеОССтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ЗаказНаОбслуживаниеОСОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ЗаказНаОбслуживаниеОССервис : Service
	{
		
		public object Get(ЗаказНаОбслуживаниеОСЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ЗаказНаОбслуживаниеОСНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ЗаказНаОбслуживаниеОС.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ЗаказНаОбслуживаниеОСОтвет() { Ответ = "ЗаказНаОбслуживаниеОС c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ЗаказНаОбслуживаниеОСНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ЗаказНаОбслуживаниеОС.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ЗаказНаОбслуживаниеОСОтвет() {Ответ = "ЗаказНаОбслуживаниеОС c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ЗаказНаОбслуживаниеОСВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ЗаказНаОбслуживаниеОС.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ЗаказНаОбслуживаниеОСВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ЗаказНаОбслуживаниеОССтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ЗаказНаОбслуживаниеОССтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ЗаказНаОбслуживаниеОСЗапрос Запрос)
		{
			return new ЗаказНаОбслуживаниеОСОтвет {Ответ = "ЗаказНаОбслуживаниеОС, "};
		}

		public object Post(ЗаказНаОбслуживаниеОСЗапрос ЗапросЗаказНаОбслуживаниеОС)
		{
			var Ссылка = (ДокументыСсылка.ЗаказНаОбслуживаниеОС)ЗапросЗаказНаОбслуживаниеОС;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}