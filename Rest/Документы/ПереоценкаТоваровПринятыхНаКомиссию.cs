
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//PereocenkaTovarovPrinyatykhNaKomissiyu
	[Маршрут("Документы/ПереоценкаТоваровПринятыхНаКомиссию","")]
	public class ПереоценкаТоваровПринятыхНаКомиссиюЗапрос: V82.ДокументыСсылка.ПереоценкаТоваровПринятыхНаКомиссию,IReturn<ПереоценкаТоваровПринятыхНаКомиссиюЗапрос>
	{
	}
	[Маршрут("Документы/ПереоценкаТоваровПринятыхНаКомиссию/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ПереоценкаТоваровПринятыхНаКомиссию/ПоСсылке","{Ссылка}")]
	public class ПереоценкаТоваровПринятыхНаКомиссиюНайтиПоСсылке: V82.ДокументыСсылка.ПереоценкаТоваровПринятыхНаКомиссию,IReturn<ПереоценкаТоваровПринятыхНаКомиссиюНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ПереоценкаТоваровПринятыхНаКомиссию/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ПереоценкаТоваровПринятыхНаКомиссию/ПоНомеру","{Номер}")]
	public class ПереоценкаТоваровПринятыхНаКомиссиюНайтиПоНомеру: V82.ДокументыСсылка.ПереоценкаТоваровПринятыхНаКомиссию,IReturn<ПереоценкаТоваровПринятыхНаКомиссиюНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ПереоценкаТоваровПринятыхНаКомиссию/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ПереоценкаТоваровПринятыхНаКомиссию/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПереоценкаТоваровПринятыхНаКомиссию/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ПереоценкаТоваровПринятыхНаКомиссиюВыбратьПоСсылке: V82.ДокументыСсылка.ПереоценкаТоваровПринятыхНаКомиссию,IReturn<ПереоценкаТоваровПринятыхНаКомиссиюВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ПереоценкаТоваровПринятыхНаКомиссию/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ПереоценкаТоваровПринятыхНаКомиссию/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПереоценкаТоваровПринятыхНаКомиссию/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ПереоценкаТоваровПринятыхНаКомиссиюВыбратьПоНомеру: V82.ДокументыСсылка.ПереоценкаТоваровПринятыхНаКомиссию,IReturn<ПереоценкаТоваровПринятыхНаКомиссиюВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ПереоценкаТоваровПринятыхНаКомиссию/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ПереоценкаТоваровПринятыхНаКомиссиюСтраницаПоСсылке: V82.ДокументыСсылка.ПереоценкаТоваровПринятыхНаКомиссию,IReturn<ПереоценкаТоваровПринятыхНаКомиссиюСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ПереоценкаТоваровПринятыхНаКомиссию/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ПереоценкаТоваровПринятыхНаКомиссиюСтраницаПоНомеру: V82.ДокументыСсылка.ПереоценкаТоваровПринятыхНаКомиссию,IReturn<ПереоценкаТоваровПринятыхНаКомиссиюСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ПереоценкаТоваровПринятыхНаКомиссиюОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ПереоценкаТоваровПринятыхНаКомиссиюСервис : Service
	{
		
		public object Get(ПереоценкаТоваровПринятыхНаКомиссиюЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ПереоценкаТоваровПринятыхНаКомиссиюНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ПереоценкаТоваровПринятыхНаКомиссию.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ПереоценкаТоваровПринятыхНаКомиссиюОтвет() { Ответ = "ПереоценкаТоваровПринятыхНаКомиссию c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПереоценкаТоваровПринятыхНаКомиссиюНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ПереоценкаТоваровПринятыхНаКомиссию.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ПереоценкаТоваровПринятыхНаКомиссиюОтвет() {Ответ = "ПереоценкаТоваровПринятыхНаКомиссию c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПереоценкаТоваровПринятыхНаКомиссиюВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ПереоценкаТоваровПринятыхНаКомиссию.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ПереоценкаТоваровПринятыхНаКомиссиюВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ПереоценкаТоваровПринятыхНаКомиссиюСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ПереоценкаТоваровПринятыхНаКомиссиюСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ПереоценкаТоваровПринятыхНаКомиссиюЗапрос Запрос)
		{
			return new ПереоценкаТоваровПринятыхНаКомиссиюОтвет {Ответ = "ПереоценкаТоваровПринятыхНаКомиссию, "};
		}

		public object Post(ПереоценкаТоваровПринятыхНаКомиссиюЗапрос ЗапросПереоценкаТоваровПринятыхНаКомиссию)
		{
			var Ссылка = (ДокументыСсылка.ПереоценкаТоваровПринятыхНаКомиссию)ЗапросПереоценкаТоваровПринятыхНаКомиссию;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}