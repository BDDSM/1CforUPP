
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//PoluchenieUslugPoPererabotke
	[Маршрут("Документы/ПолучениеУслугПоПереработке","")]
	public class ПолучениеУслугПоПереработкеЗапрос: V82.ДокументыСсылка.ПолучениеУслугПоПереработке,IReturn<ПолучениеУслугПоПереработкеЗапрос>
	{
	}
	[Маршрут("Документы/ПолучениеУслугПоПереработке/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ПолучениеУслугПоПереработке/ПоСсылке","{Ссылка}")]
	public class ПолучениеУслугПоПереработкеНайтиПоСсылке: V82.ДокументыСсылка.ПолучениеУслугПоПереработке,IReturn<ПолучениеУслугПоПереработкеНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ПолучениеУслугПоПереработке/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ПолучениеУслугПоПереработке/ПоНомеру","{Номер}")]
	public class ПолучениеУслугПоПереработкеНайтиПоНомеру: V82.ДокументыСсылка.ПолучениеУслугПоПереработке,IReturn<ПолучениеУслугПоПереработкеНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ПолучениеУслугПоПереработке/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ПолучениеУслугПоПереработке/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПолучениеУслугПоПереработке/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ПолучениеУслугПоПереработкеВыбратьПоСсылке: V82.ДокументыСсылка.ПолучениеУслугПоПереработке,IReturn<ПолучениеУслугПоПереработкеВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ПолучениеУслугПоПереработке/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ПолучениеУслугПоПереработке/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПолучениеУслугПоПереработке/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ПолучениеУслугПоПереработкеВыбратьПоНомеру: V82.ДокументыСсылка.ПолучениеУслугПоПереработке,IReturn<ПолучениеУслугПоПереработкеВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ПолучениеУслугПоПереработке/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ПолучениеУслугПоПереработкеСтраницаПоСсылке: V82.ДокументыСсылка.ПолучениеУслугПоПереработке,IReturn<ПолучениеУслугПоПереработкеСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ПолучениеУслугПоПереработке/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ПолучениеУслугПоПереработкеСтраницаПоНомеру: V82.ДокументыСсылка.ПолучениеУслугПоПереработке,IReturn<ПолучениеУслугПоПереработкеСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ПолучениеУслугПоПереработкеОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ПолучениеУслугПоПереработкеСервис : Service
	{
		
		public object Get(ПолучениеУслугПоПереработкеЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ПолучениеУслугПоПереработкеНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ПолучениеУслугПоПереработке.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ПолучениеУслугПоПереработкеОтвет() { Ответ = "ПолучениеУслугПоПереработке c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПолучениеУслугПоПереработкеНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ПолучениеУслугПоПереработке.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ПолучениеУслугПоПереработкеОтвет() {Ответ = "ПолучениеУслугПоПереработке c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПолучениеУслугПоПереработкеВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ПолучениеУслугПоПереработке.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ПолучениеУслугПоПереработкеВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ПолучениеУслугПоПереработкеСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ПолучениеУслугПоПереработкеСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ПолучениеУслугПоПереработкеЗапрос Запрос)
		{
			return new ПолучениеУслугПоПереработкеОтвет {Ответ = "ПолучениеУслугПоПереработке, "};
		}

		public object Post(ПолучениеУслугПоПереработкеЗапрос ЗапросПолучениеУслугПоПереработке)
		{
			var Ссылка = (ДокументыСсылка.ПолучениеУслугПоПереработке)ЗапросПолучениеУслугПоПереработке;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}