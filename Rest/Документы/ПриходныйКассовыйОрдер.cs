
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//PrikhodnyjjKassovyjjOrder
	[Маршрут("Документы/ПриходныйКассовыйОрдер","")]
	public class ПриходныйКассовыйОрдерЗапрос: V82.ДокументыСсылка.ПриходныйКассовыйОрдер,IReturn<ПриходныйКассовыйОрдерЗапрос>
	{
	}
	[Маршрут("Документы/ПриходныйКассовыйОрдер/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ПриходныйКассовыйОрдер/ПоСсылке","{Ссылка}")]
	public class ПриходныйКассовыйОрдерНайтиПоСсылке: V82.ДокументыСсылка.ПриходныйКассовыйОрдер,IReturn<ПриходныйКассовыйОрдерНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ПриходныйКассовыйОрдер/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ПриходныйКассовыйОрдер/ПоНомеру","{Номер}")]
	public class ПриходныйКассовыйОрдерНайтиПоНомеру: V82.ДокументыСсылка.ПриходныйКассовыйОрдер,IReturn<ПриходныйКассовыйОрдерНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ПриходныйКассовыйОрдер/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ПриходныйКассовыйОрдер/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПриходныйКассовыйОрдер/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ПриходныйКассовыйОрдерВыбратьПоСсылке: V82.ДокументыСсылка.ПриходныйКассовыйОрдер,IReturn<ПриходныйКассовыйОрдерВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ПриходныйКассовыйОрдер/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ПриходныйКассовыйОрдер/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПриходныйКассовыйОрдер/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ПриходныйКассовыйОрдерВыбратьПоНомеру: V82.ДокументыСсылка.ПриходныйКассовыйОрдер,IReturn<ПриходныйКассовыйОрдерВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ПриходныйКассовыйОрдер/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ПриходныйКассовыйОрдерСтраницаПоСсылке: V82.ДокументыСсылка.ПриходныйКассовыйОрдер,IReturn<ПриходныйКассовыйОрдерСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ПриходныйКассовыйОрдер/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ПриходныйКассовыйОрдерСтраницаПоНомеру: V82.ДокументыСсылка.ПриходныйКассовыйОрдер,IReturn<ПриходныйКассовыйОрдерСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ПриходныйКассовыйОрдерОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ПриходныйКассовыйОрдерСервис : Service
	{
		
		public object Get(ПриходныйКассовыйОрдерЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ПриходныйКассовыйОрдерНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ПриходныйКассовыйОрдер.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ПриходныйКассовыйОрдерОтвет() { Ответ = "ПриходныйКассовыйОрдер c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПриходныйКассовыйОрдерНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ПриходныйКассовыйОрдер.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ПриходныйКассовыйОрдерОтвет() {Ответ = "ПриходныйКассовыйОрдер c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПриходныйКассовыйОрдерВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ПриходныйКассовыйОрдер.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ПриходныйКассовыйОрдерВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ПриходныйКассовыйОрдерСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ПриходныйКассовыйОрдерСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ПриходныйКассовыйОрдерЗапрос Запрос)
		{
			return new ПриходныйКассовыйОрдерОтвет {Ответ = "ПриходныйКассовыйОрдер, "};
		}

		public object Post(ПриходныйКассовыйОрдерЗапрос ЗапросПриходныйКассовыйОрдер)
		{
			var Ссылка = (ДокументыСсылка.ПриходныйКассовыйОрдер)ЗапросПриходныйКассовыйОрдер;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}