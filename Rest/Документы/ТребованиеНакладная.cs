
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//TrebovanieNakladnaya
	[Маршрут("Документы/ТребованиеНакладная","")]
	public class ТребованиеНакладнаяЗапрос: V82.ДокументыСсылка.ТребованиеНакладная,IReturn<ТребованиеНакладнаяЗапрос>
	{
	}
	[Маршрут("Документы/ТребованиеНакладная/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ТребованиеНакладная/ПоСсылке","{Ссылка}")]
	public class ТребованиеНакладнаяНайтиПоСсылке: V82.ДокументыСсылка.ТребованиеНакладная,IReturn<ТребованиеНакладнаяНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ТребованиеНакладная/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ТребованиеНакладная/ПоНомеру","{Номер}")]
	public class ТребованиеНакладнаяНайтиПоНомеру: V82.ДокументыСсылка.ТребованиеНакладная,IReturn<ТребованиеНакладнаяНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ТребованиеНакладная/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ТребованиеНакладная/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ТребованиеНакладная/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ТребованиеНакладнаяВыбратьПоСсылке: V82.ДокументыСсылка.ТребованиеНакладная,IReturn<ТребованиеНакладнаяВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ТребованиеНакладная/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ТребованиеНакладная/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ТребованиеНакладная/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ТребованиеНакладнаяВыбратьПоНомеру: V82.ДокументыСсылка.ТребованиеНакладная,IReturn<ТребованиеНакладнаяВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ТребованиеНакладная/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ТребованиеНакладнаяСтраницаПоСсылке: V82.ДокументыСсылка.ТребованиеНакладная,IReturn<ТребованиеНакладнаяСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ТребованиеНакладная/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ТребованиеНакладнаяСтраницаПоНомеру: V82.ДокументыСсылка.ТребованиеНакладная,IReturn<ТребованиеНакладнаяСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ТребованиеНакладнаяОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ТребованиеНакладнаяСервис : Service
	{
		
		public object Get(ТребованиеНакладнаяЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ТребованиеНакладнаяНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ТребованиеНакладная.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ТребованиеНакладнаяОтвет() { Ответ = "ТребованиеНакладная c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ТребованиеНакладнаяНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ТребованиеНакладная.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ТребованиеНакладнаяОтвет() {Ответ = "ТребованиеНакладная c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ТребованиеНакладнаяВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ТребованиеНакладная.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ТребованиеНакладнаяВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ТребованиеНакладнаяСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ТребованиеНакладнаяСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ТребованиеНакладнаяЗапрос Запрос)
		{
			return new ТребованиеНакладнаяОтвет {Ответ = "ТребованиеНакладная, "};
		}

		public object Post(ТребованиеНакладнаяЗапрос ЗапросТребованиеНакладная)
		{
			var Ссылка = (ДокументыСсылка.ТребованиеНакладная)ЗапросТребованиеНакладная;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}