
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//ZayavkaNaObuchenie
	[Маршрут("Документы/ЗаявкаНаОбучение","")]
	public class ЗаявкаНаОбучениеЗапрос: V82.ДокументыСсылка.ЗаявкаНаОбучение,IReturn<ЗаявкаНаОбучениеЗапрос>
	{
	}
	[Маршрут("Документы/ЗаявкаНаОбучение/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ЗаявкаНаОбучение/ПоСсылке","{Ссылка}")]
	public class ЗаявкаНаОбучениеНайтиПоСсылке: V82.ДокументыСсылка.ЗаявкаНаОбучение,IReturn<ЗаявкаНаОбучениеНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ЗаявкаНаОбучение/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ЗаявкаНаОбучение/ПоНомеру","{Номер}")]
	public class ЗаявкаНаОбучениеНайтиПоНомеру: V82.ДокументыСсылка.ЗаявкаНаОбучение,IReturn<ЗаявкаНаОбучениеНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ЗаявкаНаОбучение/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ЗаявкаНаОбучение/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ЗаявкаНаОбучение/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ЗаявкаНаОбучениеВыбратьПоСсылке: V82.ДокументыСсылка.ЗаявкаНаОбучение,IReturn<ЗаявкаНаОбучениеВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ЗаявкаНаОбучение/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ЗаявкаНаОбучение/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ЗаявкаНаОбучение/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ЗаявкаНаОбучениеВыбратьПоНомеру: V82.ДокументыСсылка.ЗаявкаНаОбучение,IReturn<ЗаявкаНаОбучениеВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ЗаявкаНаОбучение/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ЗаявкаНаОбучениеСтраницаПоСсылке: V82.ДокументыСсылка.ЗаявкаНаОбучение,IReturn<ЗаявкаНаОбучениеСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ЗаявкаНаОбучение/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ЗаявкаНаОбучениеСтраницаПоНомеру: V82.ДокументыСсылка.ЗаявкаНаОбучение,IReturn<ЗаявкаНаОбучениеСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ЗаявкаНаОбучениеОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ЗаявкаНаОбучениеСервис : Service
	{
		
		public object Get(ЗаявкаНаОбучениеЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ЗаявкаНаОбучениеНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ЗаявкаНаОбучение.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ЗаявкаНаОбучениеОтвет() { Ответ = "ЗаявкаНаОбучение c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ЗаявкаНаОбучениеНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ЗаявкаНаОбучение.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ЗаявкаНаОбучениеОтвет() {Ответ = "ЗаявкаНаОбучение c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ЗаявкаНаОбучениеВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ЗаявкаНаОбучение.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ЗаявкаНаОбучениеВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ЗаявкаНаОбучениеСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ЗаявкаНаОбучениеСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ЗаявкаНаОбучениеЗапрос Запрос)
		{
			return new ЗаявкаНаОбучениеОтвет {Ответ = "ЗаявкаНаОбучение, "};
		}

		public object Post(ЗаявкаНаОбучениеЗапрос ЗапросЗаявкаНаОбучение)
		{
			var Ссылка = (ДокументыСсылка.ЗаявкаНаОбучение)ЗапросЗаявкаНаОбучение;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}