
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//OtrazheniePostupleniyaTovarovIUslugNDS
	[Маршрут("Документы/ОтражениеПоступленияТоваровИУслугНДС","")]
	public class ОтражениеПоступленияТоваровИУслугНДСЗапрос: V82.ДокументыСсылка.ОтражениеПоступленияТоваровИУслугНДС,IReturn<ОтражениеПоступленияТоваровИУслугНДСЗапрос>
	{
	}
	[Маршрут("Документы/ОтражениеПоступленияТоваровИУслугНДС/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ОтражениеПоступленияТоваровИУслугНДС/ПоСсылке","{Ссылка}")]
	public class ОтражениеПоступленияТоваровИУслугНДСНайтиПоСсылке: V82.ДокументыСсылка.ОтражениеПоступленияТоваровИУслугНДС,IReturn<ОтражениеПоступленияТоваровИУслугНДСНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ОтражениеПоступленияТоваровИУслугНДС/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ОтражениеПоступленияТоваровИУслугНДС/ПоНомеру","{Номер}")]
	public class ОтражениеПоступленияТоваровИУслугНДСНайтиПоНомеру: V82.ДокументыСсылка.ОтражениеПоступленияТоваровИУслугНДС,IReturn<ОтражениеПоступленияТоваровИУслугНДСНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ОтражениеПоступленияТоваровИУслугНДС/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ОтражениеПоступленияТоваровИУслугНДС/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ОтражениеПоступленияТоваровИУслугНДС/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ОтражениеПоступленияТоваровИУслугНДСВыбратьПоСсылке: V82.ДокументыСсылка.ОтражениеПоступленияТоваровИУслугНДС,IReturn<ОтражениеПоступленияТоваровИУслугНДСВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ОтражениеПоступленияТоваровИУслугНДС/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ОтражениеПоступленияТоваровИУслугНДС/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ОтражениеПоступленияТоваровИУслугНДС/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ОтражениеПоступленияТоваровИУслугНДСВыбратьПоНомеру: V82.ДокументыСсылка.ОтражениеПоступленияТоваровИУслугНДС,IReturn<ОтражениеПоступленияТоваровИУслугНДСВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ОтражениеПоступленияТоваровИУслугНДС/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ОтражениеПоступленияТоваровИУслугНДССтраницаПоСсылке: V82.ДокументыСсылка.ОтражениеПоступленияТоваровИУслугНДС,IReturn<ОтражениеПоступленияТоваровИУслугНДССтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ОтражениеПоступленияТоваровИУслугНДС/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ОтражениеПоступленияТоваровИУслугНДССтраницаПоНомеру: V82.ДокументыСсылка.ОтражениеПоступленияТоваровИУслугНДС,IReturn<ОтражениеПоступленияТоваровИУслугНДССтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ОтражениеПоступленияТоваровИУслугНДСОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ОтражениеПоступленияТоваровИУслугНДССервис : Service
	{
		
		public object Get(ОтражениеПоступленияТоваровИУслугНДСЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ОтражениеПоступленияТоваровИУслугНДСНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ОтражениеПоступленияТоваровИУслугНДС.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ОтражениеПоступленияТоваровИУслугНДСОтвет() { Ответ = "ОтражениеПоступленияТоваровИУслугНДС c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ОтражениеПоступленияТоваровИУслугНДСНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ОтражениеПоступленияТоваровИУслугНДС.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ОтражениеПоступленияТоваровИУслугНДСОтвет() {Ответ = "ОтражениеПоступленияТоваровИУслугНДС c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ОтражениеПоступленияТоваровИУслугНДСВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ОтражениеПоступленияТоваровИУслугНДС.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ОтражениеПоступленияТоваровИУслугНДСВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ОтражениеПоступленияТоваровИУслугНДССтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ОтражениеПоступленияТоваровИУслугНДССтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ОтражениеПоступленияТоваровИУслугНДСЗапрос Запрос)
		{
			return new ОтражениеПоступленияТоваровИУслугНДСОтвет {Ответ = "ОтражениеПоступленияТоваровИУслугНДС, "};
		}

		public object Post(ОтражениеПоступленияТоваровИУслугНДСЗапрос ЗапросОтражениеПоступленияТоваровИУслугНДС)
		{
			var Ссылка = (ДокументыСсылка.ОтражениеПоступленияТоваровИУслугНДС)ЗапросОтражениеПоступленияТоваровИУслугНДС;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}