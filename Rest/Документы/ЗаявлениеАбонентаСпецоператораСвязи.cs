
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//ZayavlenieAbonentaSpecoperatoraSvyazi
	[Маршрут("Документы/ЗаявлениеАбонентаСпецоператораСвязи","")]
	public class ЗаявлениеАбонентаСпецоператораСвязиЗапрос: V82.ДокументыСсылка.ЗаявлениеАбонентаСпецоператораСвязи,IReturn<ЗаявлениеАбонентаСпецоператораСвязиЗапрос>
	{
	}
	[Маршрут("Документы/ЗаявлениеАбонентаСпецоператораСвязи/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ЗаявлениеАбонентаСпецоператораСвязи/ПоСсылке","{Ссылка}")]
	public class ЗаявлениеАбонентаСпецоператораСвязиНайтиПоСсылке: V82.ДокументыСсылка.ЗаявлениеАбонентаСпецоператораСвязи,IReturn<ЗаявлениеАбонентаСпецоператораСвязиНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ЗаявлениеАбонентаСпецоператораСвязи/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ЗаявлениеАбонентаСпецоператораСвязи/ПоНомеру","{Номер}")]
	public class ЗаявлениеАбонентаСпецоператораСвязиНайтиПоНомеру: V82.ДокументыСсылка.ЗаявлениеАбонентаСпецоператораСвязи,IReturn<ЗаявлениеАбонентаСпецоператораСвязиНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ЗаявлениеАбонентаСпецоператораСвязи/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ЗаявлениеАбонентаСпецоператораСвязи/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ЗаявлениеАбонентаСпецоператораСвязи/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ЗаявлениеАбонентаСпецоператораСвязиВыбратьПоСсылке: V82.ДокументыСсылка.ЗаявлениеАбонентаСпецоператораСвязи,IReturn<ЗаявлениеАбонентаСпецоператораСвязиВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ЗаявлениеАбонентаСпецоператораСвязи/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ЗаявлениеАбонентаСпецоператораСвязи/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ЗаявлениеАбонентаСпецоператораСвязи/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ЗаявлениеАбонентаСпецоператораСвязиВыбратьПоНомеру: V82.ДокументыСсылка.ЗаявлениеАбонентаСпецоператораСвязи,IReturn<ЗаявлениеАбонентаСпецоператораСвязиВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ЗаявлениеАбонентаСпецоператораСвязи/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ЗаявлениеАбонентаСпецоператораСвязиСтраницаПоСсылке: V82.ДокументыСсылка.ЗаявлениеАбонентаСпецоператораСвязи,IReturn<ЗаявлениеАбонентаСпецоператораСвязиСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ЗаявлениеАбонентаСпецоператораСвязи/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ЗаявлениеАбонентаСпецоператораСвязиСтраницаПоНомеру: V82.ДокументыСсылка.ЗаявлениеАбонентаСпецоператораСвязи,IReturn<ЗаявлениеАбонентаСпецоператораСвязиСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ЗаявлениеАбонентаСпецоператораСвязиОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ЗаявлениеАбонентаСпецоператораСвязиСервис : Service
	{
		
		public object Get(ЗаявлениеАбонентаСпецоператораСвязиЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ЗаявлениеАбонентаСпецоператораСвязиНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ЗаявлениеАбонентаСпецоператораСвязи.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ЗаявлениеАбонентаСпецоператораСвязиОтвет() { Ответ = "ЗаявлениеАбонентаСпецоператораСвязи c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ЗаявлениеАбонентаСпецоператораСвязиНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ЗаявлениеАбонентаСпецоператораСвязи.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ЗаявлениеАбонентаСпецоператораСвязиОтвет() {Ответ = "ЗаявлениеАбонентаСпецоператораСвязи c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ЗаявлениеАбонентаСпецоператораСвязиВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ЗаявлениеАбонентаСпецоператораСвязи.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ЗаявлениеАбонентаСпецоператораСвязиВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ЗаявлениеАбонентаСпецоператораСвязиСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ЗаявлениеАбонентаСпецоператораСвязиСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ЗаявлениеАбонентаСпецоператораСвязиЗапрос Запрос)
		{
			return new ЗаявлениеАбонентаСпецоператораСвязиОтвет {Ответ = "ЗаявлениеАбонентаСпецоператораСвязи, "};
		}

		public object Post(ЗаявлениеАбонентаСпецоператораСвязиЗапрос ЗапросЗаявлениеАбонентаСпецоператораСвязи)
		{
			var Ссылка = (ДокументыСсылка.ЗаявлениеАбонентаСпецоператораСвязи)ЗапросЗаявлениеАбонентаСпецоператораСвязи;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}