
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//SpisanieRaskhodovBudushhikhPeriodov
	[Маршрут("Документы/СписаниеРасходовБудущихПериодов","")]
	public class СписаниеРасходовБудущихПериодовЗапрос: V82.ДокументыСсылка.СписаниеРасходовБудущихПериодов,IReturn<СписаниеРасходовБудущихПериодовЗапрос>
	{
	}
	[Маршрут("Документы/СписаниеРасходовБудущихПериодов/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/СписаниеРасходовБудущихПериодов/ПоСсылке","{Ссылка}")]
	public class СписаниеРасходовБудущихПериодовНайтиПоСсылке: V82.ДокументыСсылка.СписаниеРасходовБудущихПериодов,IReturn<СписаниеРасходовБудущихПериодовНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/СписаниеРасходовБудущихПериодов/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/СписаниеРасходовБудущихПериодов/ПоНомеру","{Номер}")]
	public class СписаниеРасходовБудущихПериодовНайтиПоНомеру: V82.ДокументыСсылка.СписаниеРасходовБудущихПериодов,IReturn<СписаниеРасходовБудущихПериодовНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/СписаниеРасходовБудущихПериодов/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/СписаниеРасходовБудущихПериодов/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/СписаниеРасходовБудущихПериодов/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class СписаниеРасходовБудущихПериодовВыбратьПоСсылке: V82.ДокументыСсылка.СписаниеРасходовБудущихПериодов,IReturn<СписаниеРасходовБудущихПериодовВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/СписаниеРасходовБудущихПериодов/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/СписаниеРасходовБудущихПериодов/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/СписаниеРасходовБудущихПериодов/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class СписаниеРасходовБудущихПериодовВыбратьПоНомеру: V82.ДокументыСсылка.СписаниеРасходовБудущихПериодов,IReturn<СписаниеРасходовБудущихПериодовВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/СписаниеРасходовБудущихПериодов/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class СписаниеРасходовБудущихПериодовСтраницаПоСсылке: V82.ДокументыСсылка.СписаниеРасходовБудущихПериодов,IReturn<СписаниеРасходовБудущихПериодовСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/СписаниеРасходовБудущихПериодов/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class СписаниеРасходовБудущихПериодовСтраницаПоНомеру: V82.ДокументыСсылка.СписаниеРасходовБудущихПериодов,IReturn<СписаниеРасходовБудущихПериодовСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class СписаниеРасходовБудущихПериодовОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class СписаниеРасходовБудущихПериодовСервис : Service
	{
		
		public object Get(СписаниеРасходовБудущихПериодовЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(СписаниеРасходовБудущихПериодовНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.СписаниеРасходовБудущихПериодов.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new СписаниеРасходовБудущихПериодовОтвет() { Ответ = "СписаниеРасходовБудущихПериодов c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(СписаниеРасходовБудущихПериодовНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.СписаниеРасходовБудущихПериодов.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new СписаниеРасходовБудущихПериодовОтвет() {Ответ = "СписаниеРасходовБудущихПериодов c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(СписаниеРасходовБудущихПериодовВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.СписаниеРасходовБудущихПериодов.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(СписаниеРасходовБудущихПериодовВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(СписаниеРасходовБудущихПериодовСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(СписаниеРасходовБудущихПериодовСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(СписаниеРасходовБудущихПериодовЗапрос Запрос)
		{
			return new СписаниеРасходовБудущихПериодовОтвет {Ответ = "СписаниеРасходовБудущихПериодов, "};
		}

		public object Post(СписаниеРасходовБудущихПериодовЗапрос ЗапросСписаниеРасходовБудущихПериодов)
		{
			var Ссылка = (ДокументыСсылка.СписаниеРасходовБудущихПериодов)ЗапросСписаниеРасходовБудущихПериодов;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}