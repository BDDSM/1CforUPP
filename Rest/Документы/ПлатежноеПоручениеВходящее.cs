
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//PlatezhnoePoruchenieVkhodyashhee
	[Маршрут("Документы/ПлатежноеПоручениеВходящее","")]
	public class ПлатежноеПоручениеВходящееЗапрос: V82.ДокументыСсылка.ПлатежноеПоручениеВходящее,IReturn<ПлатежноеПоручениеВходящееЗапрос>
	{
	}
	[Маршрут("Документы/ПлатежноеПоручениеВходящее/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ПлатежноеПоручениеВходящее/ПоСсылке","{Ссылка}")]
	public class ПлатежноеПоручениеВходящееНайтиПоСсылке: V82.ДокументыСсылка.ПлатежноеПоручениеВходящее,IReturn<ПлатежноеПоручениеВходящееНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ПлатежноеПоручениеВходящее/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ПлатежноеПоручениеВходящее/ПоНомеру","{Номер}")]
	public class ПлатежноеПоручениеВходящееНайтиПоНомеру: V82.ДокументыСсылка.ПлатежноеПоручениеВходящее,IReturn<ПлатежноеПоручениеВходящееНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ПлатежноеПоручениеВходящее/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ПлатежноеПоручениеВходящее/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПлатежноеПоручениеВходящее/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ПлатежноеПоручениеВходящееВыбратьПоСсылке: V82.ДокументыСсылка.ПлатежноеПоручениеВходящее,IReturn<ПлатежноеПоручениеВходящееВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ПлатежноеПоручениеВходящее/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ПлатежноеПоручениеВходящее/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПлатежноеПоручениеВходящее/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ПлатежноеПоручениеВходящееВыбратьПоНомеру: V82.ДокументыСсылка.ПлатежноеПоручениеВходящее,IReturn<ПлатежноеПоручениеВходящееВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ПлатежноеПоручениеВходящее/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ПлатежноеПоручениеВходящееСтраницаПоСсылке: V82.ДокументыСсылка.ПлатежноеПоручениеВходящее,IReturn<ПлатежноеПоручениеВходящееСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ПлатежноеПоручениеВходящее/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ПлатежноеПоручениеВходящееСтраницаПоНомеру: V82.ДокументыСсылка.ПлатежноеПоручениеВходящее,IReturn<ПлатежноеПоручениеВходящееСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ПлатежноеПоручениеВходящееОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ПлатежноеПоручениеВходящееСервис : Service
	{
		
		public object Get(ПлатежноеПоручениеВходящееЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ПлатежноеПоручениеВходящееНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ПлатежноеПоручениеВходящее.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ПлатежноеПоручениеВходящееОтвет() { Ответ = "ПлатежноеПоручениеВходящее c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПлатежноеПоручениеВходящееНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ПлатежноеПоручениеВходящее.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ПлатежноеПоручениеВходящееОтвет() {Ответ = "ПлатежноеПоручениеВходящее c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПлатежноеПоручениеВходящееВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ПлатежноеПоручениеВходящее.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ПлатежноеПоручениеВходящееВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ПлатежноеПоручениеВходящееСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ПлатежноеПоручениеВходящееСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ПлатежноеПоручениеВходящееЗапрос Запрос)
		{
			return new ПлатежноеПоручениеВходящееОтвет {Ответ = "ПлатежноеПоручениеВходящее, "};
		}

		public object Post(ПлатежноеПоручениеВходящееЗапрос ЗапросПлатежноеПоручениеВходящее)
		{
			var Ссылка = (ДокументыСсылка.ПлатежноеПоручениеВходящее)ЗапросПлатежноеПоручениеВходящее;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}