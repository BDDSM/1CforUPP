
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//KorrektirovkaZapisejjRegistrov
	[Маршрут("Документы/КорректировкаЗаписейРегистров","")]
	public class КорректировкаЗаписейРегистровЗапрос: V82.ДокументыСсылка.КорректировкаЗаписейРегистров,IReturn<КорректировкаЗаписейРегистровЗапрос>
	{
	}
	[Маршрут("Документы/КорректировкаЗаписейРегистров/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/КорректировкаЗаписейРегистров/ПоСсылке","{Ссылка}")]
	public class КорректировкаЗаписейРегистровНайтиПоСсылке: V82.ДокументыСсылка.КорректировкаЗаписейРегистров,IReturn<КорректировкаЗаписейРегистровНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/КорректировкаЗаписейРегистров/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/КорректировкаЗаписейРегистров/ПоНомеру","{Номер}")]
	public class КорректировкаЗаписейРегистровНайтиПоНомеру: V82.ДокументыСсылка.КорректировкаЗаписейРегистров,IReturn<КорректировкаЗаписейРегистровНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/КорректировкаЗаписейРегистров/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/КорректировкаЗаписейРегистров/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/КорректировкаЗаписейРегистров/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class КорректировкаЗаписейРегистровВыбратьПоСсылке: V82.ДокументыСсылка.КорректировкаЗаписейРегистров,IReturn<КорректировкаЗаписейРегистровВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/КорректировкаЗаписейРегистров/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/КорректировкаЗаписейРегистров/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/КорректировкаЗаписейРегистров/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class КорректировкаЗаписейРегистровВыбратьПоНомеру: V82.ДокументыСсылка.КорректировкаЗаписейРегистров,IReturn<КорректировкаЗаписейРегистровВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/КорректировкаЗаписейРегистров/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class КорректировкаЗаписейРегистровСтраницаПоСсылке: V82.ДокументыСсылка.КорректировкаЗаписейРегистров,IReturn<КорректировкаЗаписейРегистровСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/КорректировкаЗаписейРегистров/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class КорректировкаЗаписейРегистровСтраницаПоНомеру: V82.ДокументыСсылка.КорректировкаЗаписейРегистров,IReturn<КорректировкаЗаписейРегистровСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class КорректировкаЗаписейРегистровОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class КорректировкаЗаписейРегистровСервис : Service
	{
		
		public object Get(КорректировкаЗаписейРегистровЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(КорректировкаЗаписейРегистровНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.КорректировкаЗаписейРегистров.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new КорректировкаЗаписейРегистровОтвет() { Ответ = "КорректировкаЗаписейРегистров c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(КорректировкаЗаписейРегистровНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.КорректировкаЗаписейРегистров.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new КорректировкаЗаписейРегистровОтвет() {Ответ = "КорректировкаЗаписейРегистров c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(КорректировкаЗаписейРегистровВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.КорректировкаЗаписейРегистров.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(КорректировкаЗаписейРегистровВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(КорректировкаЗаписейРегистровСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(КорректировкаЗаписейРегистровСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(КорректировкаЗаписейРегистровЗапрос Запрос)
		{
			return new КорректировкаЗаписейРегистровОтвет {Ответ = "КорректировкаЗаписейРегистров, "};
		}

		public object Post(КорректировкаЗаписейРегистровЗапрос ЗапросКорректировкаЗаписейРегистров)
		{
			var Ссылка = (ДокументыСсылка.КорректировкаЗаписейРегистров)ЗапросКорректировкаЗаписейРегистров;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}