
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//RezultatIspytatelnogoSroka
	[Маршрут("Документы/РезультатИспытательногоСрока","")]
	public class РезультатИспытательногоСрокаЗапрос: V82.ДокументыСсылка.РезультатИспытательногоСрока,IReturn<РезультатИспытательногоСрокаЗапрос>
	{
	}
	[Маршрут("Документы/РезультатИспытательногоСрока/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/РезультатИспытательногоСрока/ПоСсылке","{Ссылка}")]
	public class РезультатИспытательногоСрокаНайтиПоСсылке: V82.ДокументыСсылка.РезультатИспытательногоСрока,IReturn<РезультатИспытательногоСрокаНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/РезультатИспытательногоСрока/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/РезультатИспытательногоСрока/ПоНомеру","{Номер}")]
	public class РезультатИспытательногоСрокаНайтиПоНомеру: V82.ДокументыСсылка.РезультатИспытательногоСрока,IReturn<РезультатИспытательногоСрокаНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/РезультатИспытательногоСрока/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/РезультатИспытательногоСрока/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/РезультатИспытательногоСрока/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class РезультатИспытательногоСрокаВыбратьПоСсылке: V82.ДокументыСсылка.РезультатИспытательногоСрока,IReturn<РезультатИспытательногоСрокаВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/РезультатИспытательногоСрока/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/РезультатИспытательногоСрока/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/РезультатИспытательногоСрока/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class РезультатИспытательногоСрокаВыбратьПоНомеру: V82.ДокументыСсылка.РезультатИспытательногоСрока,IReturn<РезультатИспытательногоСрокаВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/РезультатИспытательногоСрока/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class РезультатИспытательногоСрокаСтраницаПоСсылке: V82.ДокументыСсылка.РезультатИспытательногоСрока,IReturn<РезультатИспытательногоСрокаСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/РезультатИспытательногоСрока/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class РезультатИспытательногоСрокаСтраницаПоНомеру: V82.ДокументыСсылка.РезультатИспытательногоСрока,IReturn<РезультатИспытательногоСрокаСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class РезультатИспытательногоСрокаОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class РезультатИспытательногоСрокаСервис : Service
	{
		
		public object Get(РезультатИспытательногоСрокаЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(РезультатИспытательногоСрокаНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.РезультатИспытательногоСрока.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new РезультатИспытательногоСрокаОтвет() { Ответ = "РезультатИспытательногоСрока c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(РезультатИспытательногоСрокаНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.РезультатИспытательногоСрока.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new РезультатИспытательногоСрокаОтвет() {Ответ = "РезультатИспытательногоСрока c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(РезультатИспытательногоСрокаВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.РезультатИспытательногоСрока.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(РезультатИспытательногоСрокаВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(РезультатИспытательногоСрокаСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(РезультатИспытательногоСрокаСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(РезультатИспытательногоСрокаЗапрос Запрос)
		{
			return new РезультатИспытательногоСрокаОтвет {Ответ = "РезультатИспытательногоСрока, "};
		}

		public object Post(РезультатИспытательногоСрокаЗапрос ЗапросРезультатИспытательногоСрока)
		{
			var Ссылка = (ДокументыСсылка.РезультатИспытательногоСрока)ЗапросРезультатИспытательногоСрока;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}