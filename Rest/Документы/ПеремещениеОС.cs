
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//PeremeshhenieOS
	[Маршрут("Документы/ПеремещениеОС","")]
	public class ПеремещениеОСЗапрос: V82.ДокументыСсылка.ПеремещениеОС,IReturn<ПеремещениеОСЗапрос>
	{
	}
	[Маршрут("Документы/ПеремещениеОС/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ПеремещениеОС/ПоСсылке","{Ссылка}")]
	public class ПеремещениеОСНайтиПоСсылке: V82.ДокументыСсылка.ПеремещениеОС,IReturn<ПеремещениеОСНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ПеремещениеОС/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ПеремещениеОС/ПоНомеру","{Номер}")]
	public class ПеремещениеОСНайтиПоНомеру: V82.ДокументыСсылка.ПеремещениеОС,IReturn<ПеремещениеОСНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ПеремещениеОС/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ПеремещениеОС/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПеремещениеОС/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ПеремещениеОСВыбратьПоСсылке: V82.ДокументыСсылка.ПеремещениеОС,IReturn<ПеремещениеОСВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ПеремещениеОС/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ПеремещениеОС/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПеремещениеОС/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ПеремещениеОСВыбратьПоНомеру: V82.ДокументыСсылка.ПеремещениеОС,IReturn<ПеремещениеОСВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ПеремещениеОС/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ПеремещениеОССтраницаПоСсылке: V82.ДокументыСсылка.ПеремещениеОС,IReturn<ПеремещениеОССтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ПеремещениеОС/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ПеремещениеОССтраницаПоНомеру: V82.ДокументыСсылка.ПеремещениеОС,IReturn<ПеремещениеОССтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ПеремещениеОСОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ПеремещениеОССервис : Service
	{
		
		public object Get(ПеремещениеОСЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ПеремещениеОСНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ПеремещениеОС.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ПеремещениеОСОтвет() { Ответ = "ПеремещениеОС c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПеремещениеОСНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ПеремещениеОС.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ПеремещениеОСОтвет() {Ответ = "ПеремещениеОС c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПеремещениеОСВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ПеремещениеОС.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ПеремещениеОСВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ПеремещениеОССтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ПеремещениеОССтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ПеремещениеОСЗапрос Запрос)
		{
			return new ПеремещениеОСОтвет {Ответ = "ПеремещениеОС, "};
		}

		public object Post(ПеремещениеОСЗапрос ЗапросПеремещениеОС)
		{
			var Ссылка = (ДокументыСсылка.ПеремещениеОС)ЗапросПеремещениеОС;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}