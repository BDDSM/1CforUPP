
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//RaschetPlanovojjSebestoimostiProdukcii
	[Маршрут("Документы/РасчетПлановойСебестоимостиПродукции","")]
	public class РасчетПлановойСебестоимостиПродукцииЗапрос: V82.ДокументыСсылка.РасчетПлановойСебестоимостиПродукции,IReturn<РасчетПлановойСебестоимостиПродукцииЗапрос>
	{
	}
	[Маршрут("Документы/РасчетПлановойСебестоимостиПродукции/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/РасчетПлановойСебестоимостиПродукции/ПоСсылке","{Ссылка}")]
	public class РасчетПлановойСебестоимостиПродукцииНайтиПоСсылке: V82.ДокументыСсылка.РасчетПлановойСебестоимостиПродукции,IReturn<РасчетПлановойСебестоимостиПродукцииНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/РасчетПлановойСебестоимостиПродукции/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/РасчетПлановойСебестоимостиПродукции/ПоНомеру","{Номер}")]
	public class РасчетПлановойСебестоимостиПродукцииНайтиПоНомеру: V82.ДокументыСсылка.РасчетПлановойСебестоимостиПродукции,IReturn<РасчетПлановойСебестоимостиПродукцииНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/РасчетПлановойСебестоимостиПродукции/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/РасчетПлановойСебестоимостиПродукции/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/РасчетПлановойСебестоимостиПродукции/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class РасчетПлановойСебестоимостиПродукцииВыбратьПоСсылке: V82.ДокументыСсылка.РасчетПлановойСебестоимостиПродукции,IReturn<РасчетПлановойСебестоимостиПродукцииВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/РасчетПлановойСебестоимостиПродукции/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/РасчетПлановойСебестоимостиПродукции/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/РасчетПлановойСебестоимостиПродукции/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class РасчетПлановойСебестоимостиПродукцииВыбратьПоНомеру: V82.ДокументыСсылка.РасчетПлановойСебестоимостиПродукции,IReturn<РасчетПлановойСебестоимостиПродукцииВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/РасчетПлановойСебестоимостиПродукции/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class РасчетПлановойСебестоимостиПродукцииСтраницаПоСсылке: V82.ДокументыСсылка.РасчетПлановойСебестоимостиПродукции,IReturn<РасчетПлановойСебестоимостиПродукцииСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/РасчетПлановойСебестоимостиПродукции/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class РасчетПлановойСебестоимостиПродукцииСтраницаПоНомеру: V82.ДокументыСсылка.РасчетПлановойСебестоимостиПродукции,IReturn<РасчетПлановойСебестоимостиПродукцииСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class РасчетПлановойСебестоимостиПродукцииОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class РасчетПлановойСебестоимостиПродукцииСервис : Service
	{
		
		public object Get(РасчетПлановойСебестоимостиПродукцииЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(РасчетПлановойСебестоимостиПродукцииНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.РасчетПлановойСебестоимостиПродукции.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new РасчетПлановойСебестоимостиПродукцииОтвет() { Ответ = "РасчетПлановойСебестоимостиПродукции c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(РасчетПлановойСебестоимостиПродукцииНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.РасчетПлановойСебестоимостиПродукции.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new РасчетПлановойСебестоимостиПродукцииОтвет() {Ответ = "РасчетПлановойСебестоимостиПродукции c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(РасчетПлановойСебестоимостиПродукцииВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.РасчетПлановойСебестоимостиПродукции.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(РасчетПлановойСебестоимостиПродукцииВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(РасчетПлановойСебестоимостиПродукцииСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(РасчетПлановойСебестоимостиПродукцииСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(РасчетПлановойСебестоимостиПродукцииЗапрос Запрос)
		{
			return new РасчетПлановойСебестоимостиПродукцииОтвет {Ответ = "РасчетПлановойСебестоимостиПродукции, "};
		}

		public object Post(РасчетПлановойСебестоимостиПродукцииЗапрос ЗапросРасчетПлановойСебестоимостиПродукции)
		{
			var Ссылка = (ДокументыСсылка.РасчетПлановойСебестоимостиПродукции)ЗапросРасчетПлановойСебестоимостиПродукции;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}