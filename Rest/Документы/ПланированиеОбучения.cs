
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//PlanirovanieObucheniya
	[Маршрут("Документы/ПланированиеОбучения","")]
	public class ПланированиеОбученияЗапрос: V82.ДокументыСсылка.ПланированиеОбучения,IReturn<ПланированиеОбученияЗапрос>
	{
	}
	[Маршрут("Документы/ПланированиеОбучения/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ПланированиеОбучения/ПоСсылке","{Ссылка}")]
	public class ПланированиеОбученияНайтиПоСсылке: V82.ДокументыСсылка.ПланированиеОбучения,IReturn<ПланированиеОбученияНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ПланированиеОбучения/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ПланированиеОбучения/ПоНомеру","{Номер}")]
	public class ПланированиеОбученияНайтиПоНомеру: V82.ДокументыСсылка.ПланированиеОбучения,IReturn<ПланированиеОбученияНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ПланированиеОбучения/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ПланированиеОбучения/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПланированиеОбучения/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ПланированиеОбученияВыбратьПоСсылке: V82.ДокументыСсылка.ПланированиеОбучения,IReturn<ПланированиеОбученияВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ПланированиеОбучения/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ПланированиеОбучения/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПланированиеОбучения/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ПланированиеОбученияВыбратьПоНомеру: V82.ДокументыСсылка.ПланированиеОбучения,IReturn<ПланированиеОбученияВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ПланированиеОбучения/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ПланированиеОбученияСтраницаПоСсылке: V82.ДокументыСсылка.ПланированиеОбучения,IReturn<ПланированиеОбученияСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ПланированиеОбучения/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ПланированиеОбученияСтраницаПоНомеру: V82.ДокументыСсылка.ПланированиеОбучения,IReturn<ПланированиеОбученияСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ПланированиеОбученияОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ПланированиеОбученияСервис : Service
	{
		
		public object Get(ПланированиеОбученияЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ПланированиеОбученияНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ПланированиеОбучения.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ПланированиеОбученияОтвет() { Ответ = "ПланированиеОбучения c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПланированиеОбученияНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ПланированиеОбучения.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ПланированиеОбученияОтвет() {Ответ = "ПланированиеОбучения c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПланированиеОбученияВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ПланированиеОбучения.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ПланированиеОбученияВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ПланированиеОбученияСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ПланированиеОбученияСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ПланированиеОбученияЗапрос Запрос)
		{
			return new ПланированиеОбученияОтвет {Ответ = "ПланированиеОбучения, "};
		}

		public object Post(ПланированиеОбученияЗапрос ЗапросПланированиеОбучения)
		{
			var Ссылка = (ДокументыСсылка.ПланированиеОбучения)ЗапросПланированиеОбучения;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}