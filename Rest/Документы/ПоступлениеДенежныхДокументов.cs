
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//PostuplenieDenezhnykhDokumentov
	[Маршрут("Документы/ПоступлениеДенежныхДокументов","")]
	public class ПоступлениеДенежныхДокументовЗапрос: V82.ДокументыСсылка.ПоступлениеДенежныхДокументов,IReturn<ПоступлениеДенежныхДокументовЗапрос>
	{
	}
	[Маршрут("Документы/ПоступлениеДенежныхДокументов/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ПоступлениеДенежныхДокументов/ПоСсылке","{Ссылка}")]
	public class ПоступлениеДенежныхДокументовНайтиПоСсылке: V82.ДокументыСсылка.ПоступлениеДенежныхДокументов,IReturn<ПоступлениеДенежныхДокументовНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ПоступлениеДенежныхДокументов/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ПоступлениеДенежныхДокументов/ПоНомеру","{Номер}")]
	public class ПоступлениеДенежныхДокументовНайтиПоНомеру: V82.ДокументыСсылка.ПоступлениеДенежныхДокументов,IReturn<ПоступлениеДенежныхДокументовНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ПоступлениеДенежныхДокументов/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ПоступлениеДенежныхДокументов/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПоступлениеДенежныхДокументов/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ПоступлениеДенежныхДокументовВыбратьПоСсылке: V82.ДокументыСсылка.ПоступлениеДенежныхДокументов,IReturn<ПоступлениеДенежныхДокументовВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ПоступлениеДенежныхДокументов/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ПоступлениеДенежныхДокументов/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ПоступлениеДенежныхДокументов/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ПоступлениеДенежныхДокументовВыбратьПоНомеру: V82.ДокументыСсылка.ПоступлениеДенежныхДокументов,IReturn<ПоступлениеДенежныхДокументовВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ПоступлениеДенежныхДокументов/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ПоступлениеДенежныхДокументовСтраницаПоСсылке: V82.ДокументыСсылка.ПоступлениеДенежныхДокументов,IReturn<ПоступлениеДенежныхДокументовСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ПоступлениеДенежныхДокументов/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ПоступлениеДенежныхДокументовСтраницаПоНомеру: V82.ДокументыСсылка.ПоступлениеДенежныхДокументов,IReturn<ПоступлениеДенежныхДокументовСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ПоступлениеДенежныхДокументовОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ПоступлениеДенежныхДокументовСервис : Service
	{
		
		public object Get(ПоступлениеДенежныхДокументовЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ПоступлениеДенежныхДокументовНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ПоступлениеДенежныхДокументов.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ПоступлениеДенежныхДокументовОтвет() { Ответ = "ПоступлениеДенежныхДокументов c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПоступлениеДенежныхДокументовНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ПоступлениеДенежныхДокументов.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ПоступлениеДенежныхДокументовОтвет() {Ответ = "ПоступлениеДенежныхДокументов c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПоступлениеДенежныхДокументовВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ПоступлениеДенежныхДокументов.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ПоступлениеДенежныхДокументовВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ПоступлениеДенежныхДокументовСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ПоступлениеДенежныхДокументовСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ПоступлениеДенежныхДокументовЗапрос Запрос)
		{
			return new ПоступлениеДенежныхДокументовОтвет {Ответ = "ПоступлениеДенежныхДокументов, "};
		}

		public object Post(ПоступлениеДенежныхДокументовЗапрос ЗапросПоступлениеДенежныхДокументов)
		{
			var Ссылка = (ДокументыСсылка.ПоступлениеДенежныхДокументов)ЗапросПоступлениеДенежныхДокументов;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}