
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//KorrektirovkaSerijjIKHarakteristikTovarov
	[Маршрут("Документы/КорректировкаСерийИХарактеристикТоваров","")]
	public class КорректировкаСерийИХарактеристикТоваровЗапрос: V82.ДокументыСсылка.КорректировкаСерийИХарактеристикТоваров,IReturn<КорректировкаСерийИХарактеристикТоваровЗапрос>
	{
	}
	[Маршрут("Документы/КорректировкаСерийИХарактеристикТоваров/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/КорректировкаСерийИХарактеристикТоваров/ПоСсылке","{Ссылка}")]
	public class КорректировкаСерийИХарактеристикТоваровНайтиПоСсылке: V82.ДокументыСсылка.КорректировкаСерийИХарактеристикТоваров,IReturn<КорректировкаСерийИХарактеристикТоваровНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/КорректировкаСерийИХарактеристикТоваров/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/КорректировкаСерийИХарактеристикТоваров/ПоНомеру","{Номер}")]
	public class КорректировкаСерийИХарактеристикТоваровНайтиПоНомеру: V82.ДокументыСсылка.КорректировкаСерийИХарактеристикТоваров,IReturn<КорректировкаСерийИХарактеристикТоваровНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/КорректировкаСерийИХарактеристикТоваров/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/КорректировкаСерийИХарактеристикТоваров/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/КорректировкаСерийИХарактеристикТоваров/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class КорректировкаСерийИХарактеристикТоваровВыбратьПоСсылке: V82.ДокументыСсылка.КорректировкаСерийИХарактеристикТоваров,IReturn<КорректировкаСерийИХарактеристикТоваровВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/КорректировкаСерийИХарактеристикТоваров/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/КорректировкаСерийИХарактеристикТоваров/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/КорректировкаСерийИХарактеристикТоваров/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class КорректировкаСерийИХарактеристикТоваровВыбратьПоНомеру: V82.ДокументыСсылка.КорректировкаСерийИХарактеристикТоваров,IReturn<КорректировкаСерийИХарактеристикТоваровВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/КорректировкаСерийИХарактеристикТоваров/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class КорректировкаСерийИХарактеристикТоваровСтраницаПоСсылке: V82.ДокументыСсылка.КорректировкаСерийИХарактеристикТоваров,IReturn<КорректировкаСерийИХарактеристикТоваровСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/КорректировкаСерийИХарактеристикТоваров/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class КорректировкаСерийИХарактеристикТоваровСтраницаПоНомеру: V82.ДокументыСсылка.КорректировкаСерийИХарактеристикТоваров,IReturn<КорректировкаСерийИХарактеристикТоваровСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class КорректировкаСерийИХарактеристикТоваровОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class КорректировкаСерийИХарактеристикТоваровСервис : Service
	{
		
		public object Get(КорректировкаСерийИХарактеристикТоваровЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(КорректировкаСерийИХарактеристикТоваровНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.КорректировкаСерийИХарактеристикТоваров.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new КорректировкаСерийИХарактеристикТоваровОтвет() { Ответ = "КорректировкаСерийИХарактеристикТоваров c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(КорректировкаСерийИХарактеристикТоваровНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.КорректировкаСерийИХарактеристикТоваров.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new КорректировкаСерийИХарактеристикТоваровОтвет() {Ответ = "КорректировкаСерийИХарактеристикТоваров c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(КорректировкаСерийИХарактеристикТоваровВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.КорректировкаСерийИХарактеристикТоваров.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(КорректировкаСерийИХарактеристикТоваровВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(КорректировкаСерийИХарактеристикТоваровСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(КорректировкаСерийИХарактеристикТоваровСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(КорректировкаСерийИХарактеристикТоваровЗапрос Запрос)
		{
			return new КорректировкаСерийИХарактеристикТоваровОтвет {Ответ = "КорректировкаСерийИХарактеристикТоваров, "};
		}

		public object Post(КорректировкаСерийИХарактеристикТоваровЗапрос ЗапросКорректировкаСерийИХарактеристикТоваров)
		{
			var Ссылка = (ДокументыСсылка.КорректировкаСерийИХарактеристикТоваров)ЗапросКорректировкаСерийИХарактеристикТоваров;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}