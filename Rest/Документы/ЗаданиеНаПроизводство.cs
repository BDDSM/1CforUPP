
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//ZadanieNaProizvodstvo
	[Маршрут("Документы/ЗаданиеНаПроизводство","")]
	public class ЗаданиеНаПроизводствоЗапрос: V82.ДокументыСсылка.ЗаданиеНаПроизводство,IReturn<ЗаданиеНаПроизводствоЗапрос>
	{
	}
	[Маршрут("Документы/ЗаданиеНаПроизводство/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ЗаданиеНаПроизводство/ПоСсылке","{Ссылка}")]
	public class ЗаданиеНаПроизводствоНайтиПоСсылке: V82.ДокументыСсылка.ЗаданиеНаПроизводство,IReturn<ЗаданиеНаПроизводствоНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ЗаданиеНаПроизводство/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ЗаданиеНаПроизводство/ПоНомеру","{Номер}")]
	public class ЗаданиеНаПроизводствоНайтиПоНомеру: V82.ДокументыСсылка.ЗаданиеНаПроизводство,IReturn<ЗаданиеНаПроизводствоНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ЗаданиеНаПроизводство/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ЗаданиеНаПроизводство/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ЗаданиеНаПроизводство/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ЗаданиеНаПроизводствоВыбратьПоСсылке: V82.ДокументыСсылка.ЗаданиеНаПроизводство,IReturn<ЗаданиеНаПроизводствоВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ЗаданиеНаПроизводство/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ЗаданиеНаПроизводство/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ЗаданиеНаПроизводство/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ЗаданиеНаПроизводствоВыбратьПоНомеру: V82.ДокументыСсылка.ЗаданиеНаПроизводство,IReturn<ЗаданиеНаПроизводствоВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ЗаданиеНаПроизводство/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ЗаданиеНаПроизводствоСтраницаПоСсылке: V82.ДокументыСсылка.ЗаданиеНаПроизводство,IReturn<ЗаданиеНаПроизводствоСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ЗаданиеНаПроизводство/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ЗаданиеНаПроизводствоСтраницаПоНомеру: V82.ДокументыСсылка.ЗаданиеНаПроизводство,IReturn<ЗаданиеНаПроизводствоСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ЗаданиеНаПроизводствоОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ЗаданиеНаПроизводствоСервис : Service
	{
		
		public object Get(ЗаданиеНаПроизводствоЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ЗаданиеНаПроизводствоНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ЗаданиеНаПроизводство.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ЗаданиеНаПроизводствоОтвет() { Ответ = "ЗаданиеНаПроизводство c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ЗаданиеНаПроизводствоНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ЗаданиеНаПроизводство.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ЗаданиеНаПроизводствоОтвет() {Ответ = "ЗаданиеНаПроизводство c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ЗаданиеНаПроизводствоВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ЗаданиеНаПроизводство.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ЗаданиеНаПроизводствоВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ЗаданиеНаПроизводствоСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ЗаданиеНаПроизводствоСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ЗаданиеНаПроизводствоЗапрос Запрос)
		{
			return new ЗаданиеНаПроизводствоОтвет {Ответ = "ЗаданиеНаПроизводство, "};
		}

		public object Post(ЗаданиеНаПроизводствоЗапрос ЗапросЗаданиеНаПроизводство)
		{
			var Ссылка = (ДокументыСсылка.ЗаданиеНаПроизводство)ЗапросЗаданиеНаПроизводство;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}