
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Документы
{
	//ZakrytieZakazovNaProizvodstvo
	[Маршрут("Документы/ЗакрытиеЗаказовНаПроизводство","")]
	public class ЗакрытиеЗаказовНаПроизводствоЗапрос: V82.ДокументыСсылка.ЗакрытиеЗаказовНаПроизводство,IReturn<ЗакрытиеЗаказовНаПроизводствоЗапрос>
	{
	}
	[Маршрут("Документы/ЗакрытиеЗаказовНаПроизводство/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Документы/ЗакрытиеЗаказовНаПроизводство/ПоСсылке","{Ссылка}")]
	public class ЗакрытиеЗаказовНаПроизводствоНайтиПоСсылке: V82.ДокументыСсылка.ЗакрытиеЗаказовНаПроизводство,IReturn<ЗакрытиеЗаказовНаПроизводствоНайтиПоСсылке>
	{
	}
	[Маршрут("Документы/ЗакрытиеЗаказовНаПроизводство/НайтиПоНомеру","{Номер}")]
	[Маршрут("Документы/ЗакрытиеЗаказовНаПроизводство/ПоНомеру","{Номер}")]
	public class ЗакрытиеЗаказовНаПроизводствоНайтиПоНомеру: V82.ДокументыСсылка.ЗакрытиеЗаказовНаПроизводство,IReturn<ЗакрытиеЗаказовНаПроизводствоНайтиПоНомеру>
	{
	}
	[Маршрут("Документы/ЗакрытиеЗаказовНаПроизводство/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Документы/ЗакрытиеЗаказовНаПроизводство/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ЗакрытиеЗаказовНаПроизводство/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ЗакрытиеЗаказовНаПроизводствоВыбратьПоСсылке: V82.ДокументыСсылка.ЗакрытиеЗаказовНаПроизводство,IReturn<ЗакрытиеЗаказовНаПроизводствоВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Документы/ЗакрытиеЗаказовНаПроизводство/ВыбратьПоНомеру","{___Первые}")]
	[Маршрут("Документы/ЗакрытиеЗаказовНаПроизводство/ВыбратьПоНомеру","{___Первые}/{___Мин}")]
	[Маршрут("Документы/ЗакрытиеЗаказовНаПроизводство/ВыбратьПоНомеру","{___Первые}/{___Мин}/{___Макс}")]
	public class ЗакрытиеЗаказовНаПроизводствоВыбратьПоНомеру: V82.ДокументыСсылка.ЗакрытиеЗаказовНаПроизводство,IReturn<ЗакрытиеЗаказовНаПроизводствоВыбратьПоНомеру>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Документы/ЗакрытиеЗаказовНаПроизводство/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ЗакрытиеЗаказовНаПроизводствоСтраницаПоСсылке: V82.ДокументыСсылка.ЗакрытиеЗаказовНаПроизводство,IReturn<ЗакрытиеЗаказовНаПроизводствоСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Документы/ЗакрытиеЗаказовНаПроизводство/СтраницаПоНомеру","{___Размер}/{___Номер}")]
	public class ЗакрытиеЗаказовНаПроизводствоСтраницаПоНомеру: V82.ДокументыСсылка.ЗакрытиеЗаказовНаПроизводство,IReturn<ЗакрытиеЗаказовНаПроизводствоСтраницаПоНомеру>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ЗакрытиеЗаказовНаПроизводствоОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ЗакрытиеЗаказовНаПроизводствоСервис : Service
	{
		
		public object Get(ЗакрытиеЗаказовНаПроизводствоЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ЗакрытиеЗаказовНаПроизводствоНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Документы.ЗакрытиеЗаказовНаПроизводство.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ЗакрытиеЗаказовНаПроизводствоОтвет() { Ответ = "ЗакрытиеЗаказовНаПроизводство c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ЗакрытиеЗаказовНаПроизводствоНайтиПоНомеру Запрос)
		{
			if(Запрос.Номер == null)
			{
				return null;
			}
			var СтрокаНомер = System.Uri.UnescapeDataString(Запрос.Номер);
			var Ссылка = V82.Документы.ЗакрытиеЗаказовНаПроизводство.НайтиПоНомеру(СтрокаНомер);
			if (Ссылка == null)
			{
				return new ЗакрытиеЗаказовНаПроизводствоОтвет() {Ответ = "ЗакрытиеЗаказовНаПроизводство c номером '" + Запрос.Номер + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ЗакрытиеЗаказовНаПроизводствоВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Документы.ЗакрытиеЗаказовНаПроизводство.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ЗакрытиеЗаказовНаПроизводствоВыбратьПоНомеру Запрос)
		{
			return null;
		}
		
		public object Get(ЗакрытиеЗаказовНаПроизводствоСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ЗакрытиеЗаказовНаПроизводствоСтраницаПоНомеру Запрос)
		{
			return null;
		}

		public object Any(ЗакрытиеЗаказовНаПроизводствоЗапрос Запрос)
		{
			return new ЗакрытиеЗаказовНаПроизводствоОтвет {Ответ = "ЗакрытиеЗаказовНаПроизводство, "};
		}

		public object Post(ЗакрытиеЗаказовНаПроизводствоЗапрос ЗапросЗакрытиеЗаказовНаПроизводство)
		{
			var Ссылка = (ДокументыСсылка.ЗакрытиеЗаказовНаПроизводство)ЗапросЗакрытиеЗаказовНаПроизводство;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}