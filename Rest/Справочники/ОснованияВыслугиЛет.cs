
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//OsnovaniyaVyslugiLet
	[Маршрут("Справочники/ОснованияВыслугиЛет","")]
	public class ОснованияВыслугиЛетЗапрос: V82.СправочникиСсылка.ОснованияВыслугиЛет,IReturn<ОснованияВыслугиЛетЗапрос>
	{
	}
	[Маршрут("Справочники/ОснованияВыслугиЛет/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/ОснованияВыслугиЛет/ПоСсылке","{Ссылка}")]
	public class ОснованияВыслугиЛетНайтиПоСсылке: V82.СправочникиСсылка.ОснованияВыслугиЛет,IReturn<ОснованияВыслугиЛетНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/ОснованияВыслугиЛет/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/ОснованияВыслугиЛет/ПоКоду","{Код}")]
	public class ОснованияВыслугиЛетНайтиПоКоду: V82.СправочникиСсылка.ОснованияВыслугиЛет,IReturn<ОснованияВыслугиЛетНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/ОснованияВыслугиЛет/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/ОснованияВыслугиЛет/ПоНаименованию","{Наименование}")]
	public class ОснованияВыслугиЛетНайтиПоНаименованию: V82.СправочникиСсылка.ОснованияВыслугиЛет,IReturn<ОснованияВыслугиЛетНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/ОснованияВыслугиЛет/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ОснованияВыслугиЛетВыбратьПоСсылке: V82.СправочникиСсылка.ОснованияВыслугиЛет,IReturn<ОснованияВыслугиЛетВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ОснованияВыслугиЛет/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class ОснованияВыслугиЛетВыбратьПоКоду: V82.СправочникиСсылка.ОснованияВыслугиЛет,IReturn<ОснованияВыслугиЛетВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ОснованияВыслугиЛет/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class ОснованияВыслугиЛетВыбратьПоНаименованию: V82.СправочникиСсылка.ОснованияВыслугиЛет,IReturn<ОснованияВыслугиЛетВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}

	public class ОснованияВыслугиЛетОтвет
	{
		public string Ответ {get;set;}
	}

	public class ОснованияВыслугиЛетСервис : Service
	{
		
		public object Get(ОснованияВыслугиЛетНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ОснованияВыслугиЛетНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			string СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.ОснованияВыслугиЛет.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new ОснованияВыслугиЛетОтвет() {Ответ = "ОснованияВыслугиЛет c кодом '" + Запрос.Код+"' не найдено."};
			}
			return Ссылка;
		}
		
		public object Get(ОснованияВыслугиЛетНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ОснованияВыслугиЛетВыбратьПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ОснованияВыслугиЛетВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ОснованияВыслугиЛетВыбратьПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(ОснованияВыслугиЛетЗапрос Запрос)
		{
			return new ОснованияВыслугиЛетОтвет {Ответ = "ОснованияВыслугиЛет, "};
		}

		public object Post(ОснованияВыслугиЛетЗапрос ЗапросОснованияВыслугиЛет)
		{
			var Ссылка = (СправочникиСсылка.ОснованияВыслугиЛет)ЗапросОснованияВыслугиЛет;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}