
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//KontaktnyeLica
	[Маршрут("Справочники/КонтактныеЛица","")]
	public class КонтактныеЛицаЗапрос: V82.СправочникиСсылка.КонтактныеЛица,IReturn<КонтактныеЛицаЗапрос>
	{
	}
	[Маршрут("Справочники/КонтактныеЛица/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/КонтактныеЛица/ПоСсылке","{Ссылка}")]
	public class КонтактныеЛицаНайтиПоСсылке: V82.СправочникиСсылка.КонтактныеЛица,IReturn<КонтактныеЛицаНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/КонтактныеЛица/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/КонтактныеЛица/ПоКоду","{Код}")]
	public class КонтактныеЛицаНайтиПоКоду: V82.СправочникиСсылка.КонтактныеЛица,IReturn<КонтактныеЛицаНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/КонтактныеЛица/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/КонтактныеЛица/ПоНаименованию","{Наименование}")]
	public class КонтактныеЛицаНайтиПоНаименованию: V82.СправочникиСсылка.КонтактныеЛица,IReturn<КонтактныеЛицаНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/КонтактныеЛица/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/КонтактныеЛица/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/КонтактныеЛица/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class КонтактныеЛицаВыбратьПоСсылке: V82.СправочникиСсылка.КонтактныеЛица,IReturn<КонтактныеЛицаВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/КонтактныеЛица/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/КонтактныеЛица/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/КонтактныеЛица/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class КонтактныеЛицаВыбратьПоКоду: V82.СправочникиСсылка.КонтактныеЛица,IReturn<КонтактныеЛицаВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/КонтактныеЛица/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/КонтактныеЛица/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/КонтактныеЛица/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class КонтактныеЛицаВыбратьПоНаименованию: V82.СправочникиСсылка.КонтактныеЛица,IReturn<КонтактныеЛицаВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/КонтактныеЛица/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class КонтактныеЛицаСтраницаПоСсылке: V82.СправочникиСсылка.КонтактныеЛица,IReturn<КонтактныеЛицаСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/КонтактныеЛица/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class КонтактныеЛицаСтраницаПоКоду: V82.СправочникиСсылка.КонтактныеЛица,IReturn<КонтактныеЛицаСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/КонтактныеЛица/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class КонтактныеЛицаСтраницаПоНаименованию: V82.СправочникиСсылка.КонтактныеЛица,IReturn<КонтактныеЛицаСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class КонтактныеЛицаОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class КонтактныеЛицаСервис : Service
	{
		
		public object Get(КонтактныеЛицаЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(КонтактныеЛицаНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Справочники.КонтактныеЛица.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new КонтактныеЛицаОтвет() { Ответ = "КонтактныеЛица c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(КонтактныеЛицаНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			var СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.КонтактныеЛица.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new КонтактныеЛицаОтвет() {Ответ = "КонтактныеЛица c кодом '" + Запрос.Код + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(КонтактныеЛицаНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(КонтактныеЛицаВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.КонтактныеЛица.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(КонтактныеЛицаВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(КонтактныеЛицаВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(КонтактныеЛицаСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(КонтактныеЛицаСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(КонтактныеЛицаСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(КонтактныеЛицаЗапрос Запрос)
		{
			return new КонтактныеЛицаОтвет {Ответ = "КонтактныеЛица, "};
		}

		public object Post(КонтактныеЛицаЗапрос ЗапросКонтактныеЛица)
		{
			var Ссылка = (СправочникиСсылка.КонтактныеЛица)ЗапросКонтактныеЛица;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}