
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//NastrojjkiFormirovaniyaDokumentovPoOrderam
	[Маршрут("Справочники/НастройкиФормированияДокументовПоОрдерам","")]
	public class НастройкиФормированияДокументовПоОрдерамЗапрос: V82.СправочникиСсылка.НастройкиФормированияДокументовПоОрдерам,IReturn<НастройкиФормированияДокументовПоОрдерамЗапрос>
	{
	}
	[Маршрут("Справочники/НастройкиФормированияДокументовПоОрдерам/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/НастройкиФормированияДокументовПоОрдерам/ПоСсылке","{Ссылка}")]
	public class НастройкиФормированияДокументовПоОрдерамНайтиПоСсылке: V82.СправочникиСсылка.НастройкиФормированияДокументовПоОрдерам,IReturn<НастройкиФормированияДокументовПоОрдерамНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/НастройкиФормированияДокументовПоОрдерам/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/НастройкиФормированияДокументовПоОрдерам/ПоНаименованию","{Наименование}")]
	public class НастройкиФормированияДокументовПоОрдерамНайтиПоНаименованию: V82.СправочникиСсылка.НастройкиФормированияДокументовПоОрдерам,IReturn<НастройкиФормированияДокументовПоОрдерамНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/НастройкиФормированияДокументовПоОрдерам/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/НастройкиФормированияДокументовПоОрдерам/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/НастройкиФормированияДокументовПоОрдерам/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class НастройкиФормированияДокументовПоОрдерамВыбратьПоСсылке: V82.СправочникиСсылка.НастройкиФормированияДокументовПоОрдерам,IReturn<НастройкиФормированияДокументовПоОрдерамВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/НастройкиФормированияДокументовПоОрдерам/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/НастройкиФормированияДокументовПоОрдерам/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/НастройкиФормированияДокументовПоОрдерам/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class НастройкиФормированияДокументовПоОрдерамВыбратьПоНаименованию: V82.СправочникиСсылка.НастройкиФормированияДокументовПоОрдерам,IReturn<НастройкиФормированияДокументовПоОрдерамВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/НастройкиФормированияДокументовПоОрдерам/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class НастройкиФормированияДокументовПоОрдерамСтраницаПоСсылке: V82.СправочникиСсылка.НастройкиФормированияДокументовПоОрдерам,IReturn<НастройкиФормированияДокументовПоОрдерамСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/НастройкиФормированияДокументовПоОрдерам/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class НастройкиФормированияДокументовПоОрдерамСтраницаПоНаименованию: V82.СправочникиСсылка.НастройкиФормированияДокументовПоОрдерам,IReturn<НастройкиФормированияДокументовПоОрдерамСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/НастройкиФормированияДокументовПоОрдерам/ИерархияВыбратьПоСсылке","{___Родитель}/{___Режим}/{___Первые}")]
	[Маршрут("Справочники/НастройкиФормированияДокументовПоОрдерам/ИерархияВыбратьПоСсылке","{___Родитель}/{___Режим}/{___Первые}/{___Мин}")]
	[Маршрут("Справочники/НастройкиФормированияДокументовПоОрдерам/ИерархияВыбратьПоСсылке","{___Родитель}/{___Режим}/{___Первые}/{___Мин}/{___Макс}")]
	public class НастройкиФормированияДокументовПоОрдерамИерархияВыбратьПоСсылке: V82.СправочникиСсылка.НастройкиФормированияДокументовПоОрдерам,IReturn<НастройкиФормированияДокументовПоОрдерамИерархияВыбратьПоСсылке>
	{
		public Guid ___Родитель {get; set;}
		public int ___Режим {get; set;}
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/НастройкиФормированияДокументовПоОрдерам/ИерархияСтраницаПоСсылке","{___Родитель}/{___Режим}/{___Размер}/{___Номер}")]
	public class НастройкиФормированияДокументовПоОрдерамИерархияСтраницаПоСсылке: V82.СправочникиСсылка.НастройкиФормированияДокументовПоОрдерам,IReturn<НастройкиФормированияДокументовПоОрдерамИерархияСтраницаПоСсылке>
	{
		public Guid ___Родитель {get; set;}
		public int ___Режим {get; set;}
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class НастройкиФормированияДокументовПоОрдерамОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class НастройкиФормированияДокументовПоОрдерамСервис : Service
	{
		
		public object Get(НастройкиФормированияДокументовПоОрдерамЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(НастройкиФормированияДокументовПоОрдерамНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Справочники.НастройкиФормированияДокументовПоОрдерам.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new НастройкиФормированияДокументовПоОрдерамОтвет() { Ответ = "НастройкиФормированияДокументовПоОрдерам c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(НастройкиФормированияДокументовПоОрдерамНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(НастройкиФормированияДокументовПоОрдерамВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.НастройкиФормированияДокументовПоОрдерам.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(НастройкиФормированияДокументовПоОрдерамВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(НастройкиФормированияДокументовПоОрдерамСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(НастройкиФормированияДокументовПоОрдерамСтраницаПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(НастройкиФормированияДокументовПоОрдерамИерархияВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.НастройкиФормированияДокументовПоОрдерам.ИерархияВыбратьПоСсылке(Запрос.___Родитель,Запрос.___Режим,Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(НастройкиФормированияДокументовПоОрдерамИерархияСтраницаПоСсылке Запрос)
		{
			return null;
		}

		public object Any(НастройкиФормированияДокументовПоОрдерамЗапрос Запрос)
		{
			return new НастройкиФормированияДокументовПоОрдерамОтвет {Ответ = "НастройкиФормированияДокументовПоОрдерам, "};
		}

		public object Post(НастройкиФормированияДокументовПоОрдерамЗапрос ЗапросНастройкиФормированияДокументовПоОрдерам)
		{
			var Ссылка = (СправочникиСсылка.НастройкиФормированияДокументовПоОрдерам)ЗапросНастройкиФормированияДокументовПоОрдерам;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}