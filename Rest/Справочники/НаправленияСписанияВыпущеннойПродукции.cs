
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//NapravleniyaSpisaniyaVypushhennojjProdukcii
	[Маршрут("Справочники/НаправленияСписанияВыпущеннойПродукции","")]
	public class НаправленияСписанияВыпущеннойПродукцииЗапрос: V82.СправочникиСсылка.НаправленияСписанияВыпущеннойПродукции,IReturn<НаправленияСписанияВыпущеннойПродукцииЗапрос>
	{
	}
	[Маршрут("Справочники/НаправленияСписанияВыпущеннойПродукции/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/НаправленияСписанияВыпущеннойПродукции/ПоСсылке","{Ссылка}")]
	public class НаправленияСписанияВыпущеннойПродукцииНайтиПоСсылке: V82.СправочникиСсылка.НаправленияСписанияВыпущеннойПродукции,IReturn<НаправленияСписанияВыпущеннойПродукцииНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/НаправленияСписанияВыпущеннойПродукции/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/НаправленияСписанияВыпущеннойПродукции/ПоКоду","{Код}")]
	public class НаправленияСписанияВыпущеннойПродукцииНайтиПоКоду: V82.СправочникиСсылка.НаправленияСписанияВыпущеннойПродукции,IReturn<НаправленияСписанияВыпущеннойПродукцииНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/НаправленияСписанияВыпущеннойПродукции/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/НаправленияСписанияВыпущеннойПродукции/ПоНаименованию","{Наименование}")]
	public class НаправленияСписанияВыпущеннойПродукцииНайтиПоНаименованию: V82.СправочникиСсылка.НаправленияСписанияВыпущеннойПродукции,IReturn<НаправленияСписанияВыпущеннойПродукцииНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/НаправленияСписанияВыпущеннойПродукции/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/НаправленияСписанияВыпущеннойПродукции/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/НаправленияСписанияВыпущеннойПродукции/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class НаправленияСписанияВыпущеннойПродукцииВыбратьПоСсылке: V82.СправочникиСсылка.НаправленияСписанияВыпущеннойПродукции,IReturn<НаправленияСписанияВыпущеннойПродукцииВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/НаправленияСписанияВыпущеннойПродукции/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/НаправленияСписанияВыпущеннойПродукции/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/НаправленияСписанияВыпущеннойПродукции/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class НаправленияСписанияВыпущеннойПродукцииВыбратьПоКоду: V82.СправочникиСсылка.НаправленияСписанияВыпущеннойПродукции,IReturn<НаправленияСписанияВыпущеннойПродукцииВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/НаправленияСписанияВыпущеннойПродукции/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/НаправленияСписанияВыпущеннойПродукции/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/НаправленияСписанияВыпущеннойПродукции/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class НаправленияСписанияВыпущеннойПродукцииВыбратьПоНаименованию: V82.СправочникиСсылка.НаправленияСписанияВыпущеннойПродукции,IReturn<НаправленияСписанияВыпущеннойПродукцииВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/НаправленияСписанияВыпущеннойПродукции/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class НаправленияСписанияВыпущеннойПродукцииСтраницаПоСсылке: V82.СправочникиСсылка.НаправленияСписанияВыпущеннойПродукции,IReturn<НаправленияСписанияВыпущеннойПродукцииСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/НаправленияСписанияВыпущеннойПродукции/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class НаправленияСписанияВыпущеннойПродукцииСтраницаПоКоду: V82.СправочникиСсылка.НаправленияСписанияВыпущеннойПродукции,IReturn<НаправленияСписанияВыпущеннойПродукцииСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/НаправленияСписанияВыпущеннойПродукции/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class НаправленияСписанияВыпущеннойПродукцииСтраницаПоНаименованию: V82.СправочникиСсылка.НаправленияСписанияВыпущеннойПродукции,IReturn<НаправленияСписанияВыпущеннойПродукцииСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class НаправленияСписанияВыпущеннойПродукцииОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class НаправленияСписанияВыпущеннойПродукцииСервис : Service
	{
		
		public object Get(НаправленияСписанияВыпущеннойПродукцииЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(НаправленияСписанияВыпущеннойПродукцииНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Справочники.НаправленияСписанияВыпущеннойПродукции.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new НаправленияСписанияВыпущеннойПродукцииОтвет() { Ответ = "НаправленияСписанияВыпущеннойПродукции c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(НаправленияСписанияВыпущеннойПродукцииНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			var СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.НаправленияСписанияВыпущеннойПродукции.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new НаправленияСписанияВыпущеннойПродукцииОтвет() {Ответ = "НаправленияСписанияВыпущеннойПродукции c кодом '" + Запрос.Код + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(НаправленияСписанияВыпущеннойПродукцииНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(НаправленияСписанияВыпущеннойПродукцииВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.НаправленияСписанияВыпущеннойПродукции.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(НаправленияСписанияВыпущеннойПродукцииВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(НаправленияСписанияВыпущеннойПродукцииВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(НаправленияСписанияВыпущеннойПродукцииСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(НаправленияСписанияВыпущеннойПродукцииСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(НаправленияСписанияВыпущеннойПродукцииСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(НаправленияСписанияВыпущеннойПродукцииЗапрос Запрос)
		{
			return new НаправленияСписанияВыпущеннойПродукцииОтвет {Ответ = "НаправленияСписанияВыпущеннойПродукции, "};
		}

		public object Post(НаправленияСписанияВыпущеннойПродукцииЗапрос ЗапросНаправленияСписанияВыпущеннойПродукции)
		{
			var Ссылка = (СправочникиСсылка.НаправленияСписанияВыпущеннойПродукции)ЗапросНаправленияСписанияВыпущеннойПродукции;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}