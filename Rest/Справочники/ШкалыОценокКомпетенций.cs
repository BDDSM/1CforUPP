
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//SHkalyOcenokKompetencijj
	[Маршрут("Справочники/ШкалыОценокКомпетенций","")]
	public class ШкалыОценокКомпетенцийЗапрос: V82.СправочникиСсылка.ШкалыОценокКомпетенций,IReturn<ШкалыОценокКомпетенцийЗапрос>
	{
	}
	[Маршрут("Справочники/ШкалыОценокКомпетенций/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/ШкалыОценокКомпетенций/ПоСсылке","{Ссылка}")]
	public class ШкалыОценокКомпетенцийНайтиПоСсылке: V82.СправочникиСсылка.ШкалыОценокКомпетенций,IReturn<ШкалыОценокКомпетенцийНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/ШкалыОценокКомпетенций/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/ШкалыОценокКомпетенций/ПоКоду","{Код}")]
	public class ШкалыОценокКомпетенцийНайтиПоКоду: V82.СправочникиСсылка.ШкалыОценокКомпетенций,IReturn<ШкалыОценокКомпетенцийНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/ШкалыОценокКомпетенций/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/ШкалыОценокКомпетенций/ПоНаименованию","{Наименование}")]
	public class ШкалыОценокКомпетенцийНайтиПоНаименованию: V82.СправочникиСсылка.ШкалыОценокКомпетенций,IReturn<ШкалыОценокКомпетенцийНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/ШкалыОценокКомпетенций/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/ШкалыОценокКомпетенций/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ШкалыОценокКомпетенций/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ШкалыОценокКомпетенцийВыбратьПоСсылке: V82.СправочникиСсылка.ШкалыОценокКомпетенций,IReturn<ШкалыОценокКомпетенцийВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ШкалыОценокКомпетенций/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/ШкалыОценокКомпетенций/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ШкалыОценокКомпетенций/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class ШкалыОценокКомпетенцийВыбратьПоКоду: V82.СправочникиСсылка.ШкалыОценокКомпетенций,IReturn<ШкалыОценокКомпетенцийВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ШкалыОценокКомпетенций/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/ШкалыОценокКомпетенций/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ШкалыОценокКомпетенций/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class ШкалыОценокКомпетенцийВыбратьПоНаименованию: V82.СправочникиСсылка.ШкалыОценокКомпетенций,IReturn<ШкалыОценокКомпетенцийВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ШкалыОценокКомпетенций/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ШкалыОценокКомпетенцийСтраницаПоСсылке: V82.СправочникиСсылка.ШкалыОценокКомпетенций,IReturn<ШкалыОценокКомпетенцийСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ШкалыОценокКомпетенций/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class ШкалыОценокКомпетенцийСтраницаПоКоду: V82.СправочникиСсылка.ШкалыОценокКомпетенций,IReturn<ШкалыОценокКомпетенцийСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ШкалыОценокКомпетенций/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class ШкалыОценокКомпетенцийСтраницаПоНаименованию: V82.СправочникиСсылка.ШкалыОценокКомпетенций,IReturn<ШкалыОценокКомпетенцийСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ШкалыОценокКомпетенцийОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ШкалыОценокКомпетенцийСервис : Service
	{
		
		public object Get(ШкалыОценокКомпетенцийЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ШкалыОценокКомпетенцийНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ШкалыОценокКомпетенцийНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			var СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.ШкалыОценокКомпетенций.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new ШкалыОценокКомпетенцийОтвет() {Ответ = "ШкалыОценокКомпетенций c кодом '" + Запрос.Код + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ШкалыОценокКомпетенцийНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ШкалыОценокКомпетенцийВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.ШкалыОценокКомпетенций.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ШкалыОценокКомпетенцийВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ШкалыОценокКомпетенцийВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ШкалыОценокКомпетенцийСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ШкалыОценокКомпетенцийСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ШкалыОценокКомпетенцийСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(ШкалыОценокКомпетенцийЗапрос Запрос)
		{
			return new ШкалыОценокКомпетенцийОтвет {Ответ = "ШкалыОценокКомпетенций, "};
		}

		public object Post(ШкалыОценокКомпетенцийЗапрос ЗапросШкалыОценокКомпетенций)
		{
			var Ссылка = (СправочникиСсылка.ШкалыОценокКомпетенций)ЗапросШкалыОценокКомпетенций;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}