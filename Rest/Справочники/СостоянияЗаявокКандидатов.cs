
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//SostoyaniyaZayavokKandidatov
	[Маршрут("Справочники/СостоянияЗаявокКандидатов","")]
	public class СостоянияЗаявокКандидатовЗапрос: V82.СправочникиСсылка.СостоянияЗаявокКандидатов,IReturn<СостоянияЗаявокКандидатовЗапрос>
	{
	}
	[Маршрут("Справочники/СостоянияЗаявокКандидатов/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/СостоянияЗаявокКандидатов/ПоСсылке","{Ссылка}")]
	public class СостоянияЗаявокКандидатовНайтиПоСсылке: V82.СправочникиСсылка.СостоянияЗаявокКандидатов,IReturn<СостоянияЗаявокКандидатовНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/СостоянияЗаявокКандидатов/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/СостоянияЗаявокКандидатов/ПоКоду","{Код}")]
	public class СостоянияЗаявокКандидатовНайтиПоКоду: V82.СправочникиСсылка.СостоянияЗаявокКандидатов,IReturn<СостоянияЗаявокКандидатовНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/СостоянияЗаявокКандидатов/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/СостоянияЗаявокКандидатов/ПоНаименованию","{Наименование}")]
	public class СостоянияЗаявокКандидатовНайтиПоНаименованию: V82.СправочникиСсылка.СостоянияЗаявокКандидатов,IReturn<СостоянияЗаявокКандидатовНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/СостоянияЗаявокКандидатов/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/СостоянияЗаявокКандидатов/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/СостоянияЗаявокКандидатов/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class СостоянияЗаявокКандидатовВыбратьПоСсылке: V82.СправочникиСсылка.СостоянияЗаявокКандидатов,IReturn<СостоянияЗаявокКандидатовВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/СостоянияЗаявокКандидатов/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/СостоянияЗаявокКандидатов/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/СостоянияЗаявокКандидатов/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class СостоянияЗаявокКандидатовВыбратьПоКоду: V82.СправочникиСсылка.СостоянияЗаявокКандидатов,IReturn<СостоянияЗаявокКандидатовВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/СостоянияЗаявокКандидатов/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/СостоянияЗаявокКандидатов/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/СостоянияЗаявокКандидатов/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class СостоянияЗаявокКандидатовВыбратьПоНаименованию: V82.СправочникиСсылка.СостоянияЗаявокКандидатов,IReturn<СостоянияЗаявокКандидатовВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/СостоянияЗаявокКандидатов/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class СостоянияЗаявокКандидатовСтраницаПоСсылке: V82.СправочникиСсылка.СостоянияЗаявокКандидатов,IReturn<СостоянияЗаявокКандидатовСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/СостоянияЗаявокКандидатов/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class СостоянияЗаявокКандидатовСтраницаПоКоду: V82.СправочникиСсылка.СостоянияЗаявокКандидатов,IReturn<СостоянияЗаявокКандидатовСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/СостоянияЗаявокКандидатов/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class СостоянияЗаявокКандидатовСтраницаПоНаименованию: V82.СправочникиСсылка.СостоянияЗаявокКандидатов,IReturn<СостоянияЗаявокКандидатовСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class СостоянияЗаявокКандидатовОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class СостоянияЗаявокКандидатовСервис : Service
	{
		
		public object Get(СостоянияЗаявокКандидатовЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(СостоянияЗаявокКандидатовНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(СостоянияЗаявокКандидатовНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			var СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.СостоянияЗаявокКандидатов.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new СостоянияЗаявокКандидатовОтвет() {Ответ = "СостоянияЗаявокКандидатов c кодом '" + Запрос.Код + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(СостоянияЗаявокКандидатовНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(СостоянияЗаявокКандидатовВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.СостоянияЗаявокКандидатов.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(СостоянияЗаявокКандидатовВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(СостоянияЗаявокКандидатовВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(СостоянияЗаявокКандидатовСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(СостоянияЗаявокКандидатовСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(СостоянияЗаявокКандидатовСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(СостоянияЗаявокКандидатовЗапрос Запрос)
		{
			return new СостоянияЗаявокКандидатовОтвет {Ответ = "СостоянияЗаявокКандидатов, "};
		}

		public object Post(СостоянияЗаявокКандидатовЗапрос ЗапросСостоянияЗаявокКандидатов)
		{
			var Ссылка = (СправочникиСсылка.СостоянияЗаявокКандидатов)ЗапросСостоянияЗаявокКандидатов;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}