
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//VidyKontaktnojjInformacii
	[Маршрут("Справочники/ВидыКонтактнойИнформации","")]
	public class ВидыКонтактнойИнформацииЗапрос: V82.СправочникиСсылка.ВидыКонтактнойИнформации,IReturn<ВидыКонтактнойИнформацииЗапрос>
	{
	}
	[Маршрут("Справочники/ВидыКонтактнойИнформации/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/ВидыКонтактнойИнформации/ПоСсылке","{Ссылка}")]
	public class ВидыКонтактнойИнформацииНайтиПоСсылке: V82.СправочникиСсылка.ВидыКонтактнойИнформации,IReturn<ВидыКонтактнойИнформацииНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/ВидыКонтактнойИнформации/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/ВидыКонтактнойИнформации/ПоКоду","{Код}")]
	public class ВидыКонтактнойИнформацииНайтиПоКоду: V82.СправочникиСсылка.ВидыКонтактнойИнформации,IReturn<ВидыКонтактнойИнформацииНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/ВидыКонтактнойИнформации/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/ВидыКонтактнойИнформации/ПоНаименованию","{Наименование}")]
	public class ВидыКонтактнойИнформацииНайтиПоНаименованию: V82.СправочникиСсылка.ВидыКонтактнойИнформации,IReturn<ВидыКонтактнойИнформацииНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/ВидыКонтактнойИнформации/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/ВидыКонтактнойИнформации/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ВидыКонтактнойИнформации/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ВидыКонтактнойИнформацииВыбратьПоСсылке: V82.СправочникиСсылка.ВидыКонтактнойИнформации,IReturn<ВидыКонтактнойИнформацииВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ВидыКонтактнойИнформации/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/ВидыКонтактнойИнформации/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ВидыКонтактнойИнформации/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class ВидыКонтактнойИнформацииВыбратьПоКоду: V82.СправочникиСсылка.ВидыКонтактнойИнформации,IReturn<ВидыКонтактнойИнформацииВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ВидыКонтактнойИнформации/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/ВидыКонтактнойИнформации/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ВидыКонтактнойИнформации/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class ВидыКонтактнойИнформацииВыбратьПоНаименованию: V82.СправочникиСсылка.ВидыКонтактнойИнформации,IReturn<ВидыКонтактнойИнформацииВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ВидыКонтактнойИнформации/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ВидыКонтактнойИнформацииСтраницаПоСсылке: V82.СправочникиСсылка.ВидыКонтактнойИнформации,IReturn<ВидыКонтактнойИнформацииСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ВидыКонтактнойИнформации/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class ВидыКонтактнойИнформацииСтраницаПоКоду: V82.СправочникиСсылка.ВидыКонтактнойИнформации,IReturn<ВидыКонтактнойИнформацииСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ВидыКонтактнойИнформации/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class ВидыКонтактнойИнформацииСтраницаПоНаименованию: V82.СправочникиСсылка.ВидыКонтактнойИнформации,IReturn<ВидыКонтактнойИнформацииСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ВидыКонтактнойИнформацииОтвет
	{
		public string Ответ {get;set;}
	}

	public class ВидыКонтактнойИнформацииСервис : Service
	{
		
		public object Get(ВидыКонтактнойИнформацииНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ВидыКонтактнойИнформацииНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			string СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.ВидыКонтактнойИнформации.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new ВидыКонтактнойИнформацииОтвет() {Ответ = "ВидыКонтактнойИнформации c кодом '" + Запрос.Код+"' не найдено."};
			}
			return Ссылка;
		}
		
		public object Get(ВидыКонтактнойИнформацииНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ВидыКонтактнойИнформацииВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			return V82.Справочники.ВидыКонтактнойИнформации.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс);
		}
		
		public object Get(ВидыКонтактнойИнформацииВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ВидыКонтактнойИнформацииВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ВидыКонтактнойИнформацииСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ВидыКонтактнойИнформацииСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ВидыКонтактнойИнформацииСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(ВидыКонтактнойИнформацииЗапрос Запрос)
		{
			return new ВидыКонтактнойИнформацииОтвет {Ответ = "ВидыКонтактнойИнформации, "};
		}

		public object Post(ВидыКонтактнойИнформацииЗапрос ЗапросВидыКонтактнойИнформации)
		{
			var Ссылка = (СправочникиСсылка.ВидыКонтактнойИнформации)ЗапросВидыКонтактнойИнформации;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}