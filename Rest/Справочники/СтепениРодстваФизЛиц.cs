
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//StepeniRodstvaFizLic
	[Маршрут("Справочники/СтепениРодстваФизЛиц","")]
	public class СтепениРодстваФизЛицЗапрос: V82.СправочникиСсылка.СтепениРодстваФизЛиц,IReturn<СтепениРодстваФизЛицЗапрос>
	{
	}
	[Маршрут("Справочники/СтепениРодстваФизЛиц/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/СтепениРодстваФизЛиц/ПоСсылке","{Ссылка}")]
	public class СтепениРодстваФизЛицНайтиПоСсылке: V82.СправочникиСсылка.СтепениРодстваФизЛиц,IReturn<СтепениРодстваФизЛицНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/СтепениРодстваФизЛиц/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/СтепениРодстваФизЛиц/ПоКоду","{Код}")]
	public class СтепениРодстваФизЛицНайтиПоКоду: V82.СправочникиСсылка.СтепениРодстваФизЛиц,IReturn<СтепениРодстваФизЛицНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/СтепениРодстваФизЛиц/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/СтепениРодстваФизЛиц/ПоНаименованию","{Наименование}")]
	public class СтепениРодстваФизЛицНайтиПоНаименованию: V82.СправочникиСсылка.СтепениРодстваФизЛиц,IReturn<СтепениРодстваФизЛицНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/СтепениРодстваФизЛиц/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/СтепениРодстваФизЛиц/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/СтепениРодстваФизЛиц/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class СтепениРодстваФизЛицВыбратьПоСсылке: V82.СправочникиСсылка.СтепениРодстваФизЛиц,IReturn<СтепениРодстваФизЛицВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/СтепениРодстваФизЛиц/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/СтепениРодстваФизЛиц/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/СтепениРодстваФизЛиц/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class СтепениРодстваФизЛицВыбратьПоКоду: V82.СправочникиСсылка.СтепениРодстваФизЛиц,IReturn<СтепениРодстваФизЛицВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/СтепениРодстваФизЛиц/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/СтепениРодстваФизЛиц/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/СтепениРодстваФизЛиц/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class СтепениРодстваФизЛицВыбратьПоНаименованию: V82.СправочникиСсылка.СтепениРодстваФизЛиц,IReturn<СтепениРодстваФизЛицВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/СтепениРодстваФизЛиц/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class СтепениРодстваФизЛицСтраницаПоСсылке: V82.СправочникиСсылка.СтепениРодстваФизЛиц,IReturn<СтепениРодстваФизЛицСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/СтепениРодстваФизЛиц/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class СтепениРодстваФизЛицСтраницаПоКоду: V82.СправочникиСсылка.СтепениРодстваФизЛиц,IReturn<СтепениРодстваФизЛицСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/СтепениРодстваФизЛиц/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class СтепениРодстваФизЛицСтраницаПоНаименованию: V82.СправочникиСсылка.СтепениРодстваФизЛиц,IReturn<СтепениРодстваФизЛицСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class СтепениРодстваФизЛицОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class СтепениРодстваФизЛицСервис : Service
	{
		
		public object Get(СтепениРодстваФизЛицЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(СтепениРодстваФизЛицНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Справочники.СтепениРодстваФизЛиц.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new СтепениРодстваФизЛицОтвет() { Ответ = "СтепениРодстваФизЛиц c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(СтепениРодстваФизЛицНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			var СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.СтепениРодстваФизЛиц.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new СтепениРодстваФизЛицОтвет() {Ответ = "СтепениРодстваФизЛиц c кодом '" + Запрос.Код + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(СтепениРодстваФизЛицНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(СтепениРодстваФизЛицВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.СтепениРодстваФизЛиц.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(СтепениРодстваФизЛицВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(СтепениРодстваФизЛицВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(СтепениРодстваФизЛицСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(СтепениРодстваФизЛицСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(СтепениРодстваФизЛицСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(СтепениРодстваФизЛицЗапрос Запрос)
		{
			return new СтепениРодстваФизЛицОтвет {Ответ = "СтепениРодстваФизЛиц, "};
		}

		public object Post(СтепениРодстваФизЛицЗапрос ЗапросСтепениРодстваФизЛиц)
		{
			var Ссылка = (СправочникиСсылка.СтепениРодстваФизЛиц)ЗапросСтепениРодстваФизЛиц;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}