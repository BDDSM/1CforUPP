
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//PrichinySpisaniya
	[Маршрут("Справочники/ПричиныСписания","")]
	public class ПричиныСписанияЗапрос: V82.СправочникиСсылка.ПричиныСписания,IReturn<ПричиныСписанияЗапрос>
	{
	}
	[Маршрут("Справочники/ПричиныСписания/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/ПричиныСписания/ПоСсылке","{Ссылка}")]
	public class ПричиныСписанияНайтиПоСсылке: V82.СправочникиСсылка.ПричиныСписания,IReturn<ПричиныСписанияНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/ПричиныСписания/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/ПричиныСписания/ПоКоду","{Код}")]
	public class ПричиныСписанияНайтиПоКоду: V82.СправочникиСсылка.ПричиныСписания,IReturn<ПричиныСписанияНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/ПричиныСписания/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/ПричиныСписания/ПоНаименованию","{Наименование}")]
	public class ПричиныСписанияНайтиПоНаименованию: V82.СправочникиСсылка.ПричиныСписания,IReturn<ПричиныСписанияНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/ПричиныСписания/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/ПричиныСписания/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ПричиныСписания/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ПричиныСписанияВыбратьПоСсылке: V82.СправочникиСсылка.ПричиныСписания,IReturn<ПричиныСписанияВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ПричиныСписания/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/ПричиныСписания/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ПричиныСписания/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class ПричиныСписанияВыбратьПоКоду: V82.СправочникиСсылка.ПричиныСписания,IReturn<ПричиныСписанияВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ПричиныСписания/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/ПричиныСписания/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ПричиныСписания/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class ПричиныСписанияВыбратьПоНаименованию: V82.СправочникиСсылка.ПричиныСписания,IReturn<ПричиныСписанияВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ПричиныСписания/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ПричиныСписанияСтраницаПоСсылке: V82.СправочникиСсылка.ПричиныСписания,IReturn<ПричиныСписанияСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ПричиныСписания/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class ПричиныСписанияСтраницаПоКоду: V82.СправочникиСсылка.ПричиныСписания,IReturn<ПричиныСписанияСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ПричиныСписания/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class ПричиныСписанияСтраницаПоНаименованию: V82.СправочникиСсылка.ПричиныСписания,IReturn<ПричиныСписанияСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ПричиныСписанияОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ПричиныСписанияСервис : Service
	{
		
		public object Get(ПричиныСписанияЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ПричиныСписанияНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Справочники.ПричиныСписания.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ПричиныСписанияОтвет() { Ответ = "ПричиныСписания c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПричиныСписанияНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			var СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.ПричиныСписания.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new ПричиныСписанияОтвет() {Ответ = "ПричиныСписания c кодом '" + Запрос.Код + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПричиныСписанияНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ПричиныСписанияВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.ПричиныСписания.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ПричиныСписанияВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ПричиныСписанияВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ПричиныСписанияСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ПричиныСписанияСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ПричиныСписанияСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(ПричиныСписанияЗапрос Запрос)
		{
			return new ПричиныСписанияОтвет {Ответ = "ПричиныСписания, "};
		}

		public object Post(ПричиныСписанияЗапрос ЗапросПричиныСписания)
		{
			var Ссылка = (СправочникиСсылка.ПричиныСписания)ЗапросПричиныСписания;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}