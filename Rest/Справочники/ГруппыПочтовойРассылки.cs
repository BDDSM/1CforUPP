
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//GruppyPochtovojjRassylki
	[Маршрут("Справочники/ГруппыПочтовойРассылки","")]
	public class ГруппыПочтовойРассылкиЗапрос: V82.СправочникиСсылка.ГруппыПочтовойРассылки,IReturn<ГруппыПочтовойРассылкиЗапрос>
	{
	}
	[Маршрут("Справочники/ГруппыПочтовойРассылки/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/ГруппыПочтовойРассылки/ПоСсылке","{Ссылка}")]
	public class ГруппыПочтовойРассылкиНайтиПоСсылке: V82.СправочникиСсылка.ГруппыПочтовойРассылки,IReturn<ГруппыПочтовойРассылкиНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/ГруппыПочтовойРассылки/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/ГруппыПочтовойРассылки/ПоКоду","{Код}")]
	public class ГруппыПочтовойРассылкиНайтиПоКоду: V82.СправочникиСсылка.ГруппыПочтовойРассылки,IReturn<ГруппыПочтовойРассылкиНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/ГруппыПочтовойРассылки/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/ГруппыПочтовойРассылки/ПоНаименованию","{Наименование}")]
	public class ГруппыПочтовойРассылкиНайтиПоНаименованию: V82.СправочникиСсылка.ГруппыПочтовойРассылки,IReturn<ГруппыПочтовойРассылкиНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/ГруппыПочтовойРассылки/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ГруппыПочтовойРассылкиВыбратьПоСсылке: V82.СправочникиСсылка.ГруппыПочтовойРассылки,IReturn<ГруппыПочтовойРассылкиВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ГруппыПочтовойРассылки/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class ГруппыПочтовойРассылкиВыбратьПоКоду: V82.СправочникиСсылка.ГруппыПочтовойРассылки,IReturn<ГруппыПочтовойРассылкиВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ГруппыПочтовойРассылки/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class ГруппыПочтовойРассылкиВыбратьПоНаименованию: V82.СправочникиСсылка.ГруппыПочтовойРассылки,IReturn<ГруппыПочтовойРассылкиВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}

	public class ГруппыПочтовойРассылкиОтвет
	{
		public string Ответ {get;set;}
	}

	public class ГруппыПочтовойРассылкиСервис : Service
	{
		
		public object Get(ГруппыПочтовойРассылкиНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ГруппыПочтовойРассылкиНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			string СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.ГруппыПочтовойРассылки.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new ГруппыПочтовойРассылкиОтвет() {Ответ = "ГруппыПочтовойРассылки c кодом '" + Запрос.Код+"' не найдено."};
			}
			return Ссылка;
		}
		
		public object Get(ГруппыПочтовойРассылкиНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ГруппыПочтовойРассылкиВыбратьПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ГруппыПочтовойРассылкиВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ГруппыПочтовойРассылкиВыбратьПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(ГруппыПочтовойРассылкиЗапрос Запрос)
		{
			return new ГруппыПочтовойРассылкиОтвет {Ответ = "ГруппыПочтовойРассылки, "};
		}

		public object Post(ГруппыПочтовойРассылкиЗапрос ЗапросГруппыПочтовойРассылки)
		{
			var Ссылка = (СправочникиСсылка.ГруппыПочтовойРассылки)ЗапросГруппыПочтовойРассылки;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}