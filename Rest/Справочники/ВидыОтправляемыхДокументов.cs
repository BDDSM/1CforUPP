
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//VidyOtpravlyaemykhDokumentov
	[Маршрут("Справочники/ВидыОтправляемыхДокументов","")]
	public class ВидыОтправляемыхДокументовЗапрос: V82.СправочникиСсылка.ВидыОтправляемыхДокументов,IReturn<ВидыОтправляемыхДокументовЗапрос>
	{
	}
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/ПоСсылке","{Ссылка}")]
	public class ВидыОтправляемыхДокументовНайтиПоСсылке: V82.СправочникиСсылка.ВидыОтправляемыхДокументов,IReturn<ВидыОтправляемыхДокументовНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/ПоКоду","{Код}")]
	public class ВидыОтправляемыхДокументовНайтиПоКоду: V82.СправочникиСсылка.ВидыОтправляемыхДокументов,IReturn<ВидыОтправляемыхДокументовНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/ПоНаименованию","{Наименование}")]
	public class ВидыОтправляемыхДокументовНайтиПоНаименованию: V82.СправочникиСсылка.ВидыОтправляемыхДокументов,IReturn<ВидыОтправляемыхДокументовНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ВидыОтправляемыхДокументовВыбратьПоСсылке: V82.СправочникиСсылка.ВидыОтправляемыхДокументов,IReturn<ВидыОтправляемыхДокументовВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class ВидыОтправляемыхДокументовВыбратьПоКоду: V82.СправочникиСсылка.ВидыОтправляемыхДокументов,IReturn<ВидыОтправляемыхДокументовВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class ВидыОтправляемыхДокументовВыбратьПоНаименованию: V82.СправочникиСсылка.ВидыОтправляемыхДокументов,IReturn<ВидыОтправляемыхДокументовВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}

	public class ВидыОтправляемыхДокументовОтвет
	{
		public string Ответ {get;set;}
	}

	public class ВидыОтправляемыхДокументовСервис : Service
	{
		
		public object Get(ВидыОтправляемыхДокументовНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ВидыОтправляемыхДокументовНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			string СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.ВидыОтправляемыхДокументов.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new ВидыОтправляемыхДокументовОтвет() {Ответ = "ВидыОтправляемыхДокументов c кодом '" + Запрос.Код+"' не найдено."};
			}
			return Ссылка;
		}
		
		public object Get(ВидыОтправляемыхДокументовНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ВидыОтправляемыхДокументовВыбратьПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ВидыОтправляемыхДокументовВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ВидыОтправляемыхДокументовВыбратьПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(ВидыОтправляемыхДокументовЗапрос Запрос)
		{
			return new ВидыОтправляемыхДокументовОтвет {Ответ = "ВидыОтправляемыхДокументов, "};
		}

		public object Post(ВидыОтправляемыхДокументовЗапрос ЗапросВидыОтправляемыхДокументов)
		{
			var Ссылка = (СправочникиСсылка.ВидыОтправляемыхДокументов)ЗапросВидыОтправляемыхДокументов;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}