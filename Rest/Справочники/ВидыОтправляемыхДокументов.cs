
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//VidyOtpravlyaemykhDokumentov
	[Маршрут("Справочники/ВидыОтправляемыхДокументов","")]
	public class ВидыОтправляемыхДокументовЗапрос: V82.СправочникиСсылка.ВидыОтправляемыхДокументов,IReturn<ВидыОтправляемыхДокументовЗапрос>
	{
	}
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/ПоСсылке","{Ссылка}")]
	public class ВидыОтправляемыхДокументовНайтиПоСсылке: V82.СправочникиСсылка.ВидыОтправляемыхДокументов,IReturn<ВидыОтправляемыхДокументовНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/ПоКоду","{Код}")]
	public class ВидыОтправляемыхДокументовНайтиПоКоду: V82.СправочникиСсылка.ВидыОтправляемыхДокументов,IReturn<ВидыОтправляемыхДокументовНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/ПоНаименованию","{Наименование}")]
	public class ВидыОтправляемыхДокументовНайтиПоНаименованию: V82.СправочникиСсылка.ВидыОтправляемыхДокументов,IReturn<ВидыОтправляемыхДокументовНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ВидыОтправляемыхДокументовВыбратьПоСсылке: V82.СправочникиСсылка.ВидыОтправляемыхДокументов,IReturn<ВидыОтправляемыхДокументовВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class ВидыОтправляемыхДокументовВыбратьПоКоду: V82.СправочникиСсылка.ВидыОтправляемыхДокументов,IReturn<ВидыОтправляемыхДокументовВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class ВидыОтправляемыхДокументовВыбратьПоНаименованию: V82.СправочникиСсылка.ВидыОтправляемыхДокументов,IReturn<ВидыОтправляемыхДокументовВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ВидыОтправляемыхДокументовСтраницаПоСсылке: V82.СправочникиСсылка.ВидыОтправляемыхДокументов,IReturn<ВидыОтправляемыхДокументовСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class ВидыОтправляемыхДокументовСтраницаПоКоду: V82.СправочникиСсылка.ВидыОтправляемыхДокументов,IReturn<ВидыОтправляемыхДокументовСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class ВидыОтправляемыхДокументовСтраницаПоНаименованию: V82.СправочникиСсылка.ВидыОтправляемыхДокументов,IReturn<ВидыОтправляемыхДокументовСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/ИерархияВыбратьПоСсылке","{___Родитель}/{___Режим}/{___Первые}")]
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/ИерархияВыбратьПоСсылке","{___Родитель}/{___Режим}/{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/ИерархияВыбратьПоСсылке","{___Родитель}/{___Режим}/{___Первые}/{___Мин}/{___Макс}")]
	public class ВидыОтправляемыхДокументовИерархияВыбратьПоСсылке: V82.СправочникиСсылка.ВидыОтправляемыхДокументов,IReturn<ВидыОтправляемыхДокументовИерархияВыбратьПоСсылке>
	{
		public Guid ___Родитель {get; set;}
		public int ___Режим {get; set;}
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ВидыОтправляемыхДокументов/ИерархияСтраницаПоСсылке","{___Родитель}/{___Режим}/{___Размер}/{___Номер}")]
	public class ВидыОтправляемыхДокументовИерархияСтраницаПоСсылке: V82.СправочникиСсылка.ВидыОтправляемыхДокументов,IReturn<ВидыОтправляемыхДокументовИерархияСтраницаПоСсылке>
	{
		public Guid ___Родитель {get; set;}
		public int ___Режим {get; set;}
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ВидыОтправляемыхДокументовОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ВидыОтправляемыхДокументовСервис : Service
	{
		
		public object Get(ВидыОтправляемыхДокументовЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ВидыОтправляемыхДокументовНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Справочники.ВидыОтправляемыхДокументов.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ВидыОтправляемыхДокументовОтвет() { Ответ = "ВидыОтправляемыхДокументов c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ВидыОтправляемыхДокументовНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			var СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.ВидыОтправляемыхДокументов.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new ВидыОтправляемыхДокументовОтвет() {Ответ = "ВидыОтправляемыхДокументов c кодом '" + Запрос.Код + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ВидыОтправляемыхДокументовНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ВидыОтправляемыхДокументовВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.ВидыОтправляемыхДокументов.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ВидыОтправляемыхДокументовВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ВидыОтправляемыхДокументовВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ВидыОтправляемыхДокументовСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ВидыОтправляемыхДокументовСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ВидыОтправляемыхДокументовСтраницаПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ВидыОтправляемыхДокументовИерархияВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.ВидыОтправляемыхДокументов.ИерархияВыбратьПоСсылке(Запрос.___Родитель,Запрос.___Режим,Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ВидыОтправляемыхДокументовИерархияСтраницаПоСсылке Запрос)
		{
			return null;
		}

		public object Any(ВидыОтправляемыхДокументовЗапрос Запрос)
		{
			return new ВидыОтправляемыхДокументовОтвет {Ответ = "ВидыОтправляемыхДокументов, "};
		}

		public object Post(ВидыОтправляемыхДокументовЗапрос ЗапросВидыОтправляемыхДокументов)
		{
			var Ссылка = (СправочникиСсылка.ВидыОтправляемыхДокументов)ЗапросВидыОтправляемыхДокументов;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}