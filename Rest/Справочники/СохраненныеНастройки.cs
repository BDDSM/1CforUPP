
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//SokhranennyeNastrojjki
	[Маршрут("Справочники/СохраненныеНастройки","")]
	public class СохраненныеНастройкиЗапрос: V82.СправочникиСсылка.СохраненныеНастройки,IReturn<СохраненныеНастройкиЗапрос>
	{
	}
	[Маршрут("Справочники/СохраненныеНастройки/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/СохраненныеНастройки/ПоСсылке","{Ссылка}")]
	public class СохраненныеНастройкиНайтиПоСсылке: V82.СправочникиСсылка.СохраненныеНастройки,IReturn<СохраненныеНастройкиНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/СохраненныеНастройки/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/СохраненныеНастройки/ПоНаименованию","{Наименование}")]
	public class СохраненныеНастройкиНайтиПоНаименованию: V82.СправочникиСсылка.СохраненныеНастройки,IReturn<СохраненныеНастройкиНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/СохраненныеНастройки/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/СохраненныеНастройки/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/СохраненныеНастройки/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class СохраненныеНастройкиВыбратьПоСсылке: V82.СправочникиСсылка.СохраненныеНастройки,IReturn<СохраненныеНастройкиВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/СохраненныеНастройки/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/СохраненныеНастройки/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/СохраненныеНастройки/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class СохраненныеНастройкиВыбратьПоНаименованию: V82.СправочникиСсылка.СохраненныеНастройки,IReturn<СохраненныеНастройкиВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/СохраненныеНастройки/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class СохраненныеНастройкиСтраницаПоСсылке: V82.СправочникиСсылка.СохраненныеНастройки,IReturn<СохраненныеНастройкиСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/СохраненныеНастройки/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class СохраненныеНастройкиСтраницаПоНаименованию: V82.СправочникиСсылка.СохраненныеНастройки,IReturn<СохраненныеНастройкиСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class СохраненныеНастройкиОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class СохраненныеНастройкиСервис : Service
	{
		
		public object Get(СохраненныеНастройкиЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(СохраненныеНастройкиНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(СохраненныеНастройкиНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(СохраненныеНастройкиВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			return V82.Справочники.СохраненныеНастройки.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс);
		}
		
		public object Get(СохраненныеНастройкиВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(СохраненныеНастройкиСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(СохраненныеНастройкиСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(СохраненныеНастройкиЗапрос Запрос)
		{
			return new СохраненныеНастройкиОтвет {Ответ = "СохраненныеНастройки, "};
		}

		public object Post(СохраненныеНастройкиЗапрос ЗапросСохраненныеНастройки)
		{
			var Ссылка = (СправочникиСсылка.СохраненныеНастройки)ЗапросСохраненныеНастройки;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}