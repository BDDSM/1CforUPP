
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//CiklyObmena
	[Маршрут("Справочники/ЦиклыОбмена","")]
	public class ЦиклыОбменаЗапрос: V82.СправочникиСсылка.ЦиклыОбмена,IReturn<ЦиклыОбменаЗапрос>
	{
	}
	[Маршрут("Справочники/ЦиклыОбмена/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/ЦиклыОбмена/ПоСсылке","{Ссылка}")]
	public class ЦиклыОбменаНайтиПоСсылке: V82.СправочникиСсылка.ЦиклыОбмена,IReturn<ЦиклыОбменаНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/ЦиклыОбмена/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/ЦиклыОбмена/ПоКоду","{Код}")]
	public class ЦиклыОбменаНайтиПоКоду: V82.СправочникиСсылка.ЦиклыОбмена,IReturn<ЦиклыОбменаНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/ЦиклыОбмена/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/ЦиклыОбмена/ПоНаименованию","{Наименование}")]
	public class ЦиклыОбменаНайтиПоНаименованию: V82.СправочникиСсылка.ЦиклыОбмена,IReturn<ЦиклыОбменаНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/ЦиклыОбмена/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ЦиклыОбменаВыбратьПоСсылке: V82.СправочникиСсылка.ЦиклыОбмена,IReturn<ЦиклыОбменаВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ЦиклыОбмена/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class ЦиклыОбменаВыбратьПоКоду: V82.СправочникиСсылка.ЦиклыОбмена,IReturn<ЦиклыОбменаВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ЦиклыОбмена/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class ЦиклыОбменаВыбратьПоНаименованию: V82.СправочникиСсылка.ЦиклыОбмена,IReturn<ЦиклыОбменаВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}

	public class ЦиклыОбменаОтвет
	{
		public string Ответ {get;set;}
	}

	public class ЦиклыОбменаСервис : Service
	{
		
		public object Get(ЦиклыОбменаНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ЦиклыОбменаНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			string СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.ЦиклыОбмена.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new ЦиклыОбменаОтвет() {Ответ = "ЦиклыОбмена c кодом '" + Запрос.Код+"' не найдено."};
			}
			return Ссылка;
		}
		
		public object Get(ЦиклыОбменаНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ЦиклыОбменаВыбратьПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ЦиклыОбменаВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ЦиклыОбменаВыбратьПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(ЦиклыОбменаЗапрос Запрос)
		{
			return new ЦиклыОбменаОтвет {Ответ = "ЦиклыОбмена, "};
		}

		public object Post(ЦиклыОбменаЗапрос ЗапросЦиклыОбмена)
		{
			var Ссылка = (СправочникиСсылка.ЦиклыОбмена)ЗапросЦиклыОбмена;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}