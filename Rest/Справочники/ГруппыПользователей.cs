
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//GruppyPolzovatelejj
	[Маршрут("Справочники/ГруппыПользователей","")]
	public class ГруппыПользователейЗапрос: V82.СправочникиСсылка.ГруппыПользователей,IReturn<ГруппыПользователейЗапрос>
	{
	}
	[Маршрут("Справочники/ГруппыПользователей/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/ГруппыПользователей/ПоСсылке","{Ссылка}")]
	public class ГруппыПользователейНайтиПоСсылке: V82.СправочникиСсылка.ГруппыПользователей,IReturn<ГруппыПользователейНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/ГруппыПользователей/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/ГруппыПользователей/ПоКоду","{Код}")]
	public class ГруппыПользователейНайтиПоКоду: V82.СправочникиСсылка.ГруппыПользователей,IReturn<ГруппыПользователейНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/ГруппыПользователей/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/ГруппыПользователей/ПоНаименованию","{Наименование}")]
	public class ГруппыПользователейНайтиПоНаименованию: V82.СправочникиСсылка.ГруппыПользователей,IReturn<ГруппыПользователейНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/ГруппыПользователей/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/ГруппыПользователей/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ГруппыПользователей/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ГруппыПользователейВыбратьПоСсылке: V82.СправочникиСсылка.ГруппыПользователей,IReturn<ГруппыПользователейВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ГруппыПользователей/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/ГруппыПользователей/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ГруппыПользователей/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class ГруппыПользователейВыбратьПоКоду: V82.СправочникиСсылка.ГруппыПользователей,IReturn<ГруппыПользователейВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ГруппыПользователей/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/ГруппыПользователей/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ГруппыПользователей/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class ГруппыПользователейВыбратьПоНаименованию: V82.СправочникиСсылка.ГруппыПользователей,IReturn<ГруппыПользователейВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ГруппыПользователей/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ГруппыПользователейСтраницаПоСсылке: V82.СправочникиСсылка.ГруппыПользователей,IReturn<ГруппыПользователейСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ГруппыПользователей/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class ГруппыПользователейСтраницаПоКоду: V82.СправочникиСсылка.ГруппыПользователей,IReturn<ГруппыПользователейСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ГруппыПользователей/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class ГруппыПользователейСтраницаПоНаименованию: V82.СправочникиСсылка.ГруппыПользователей,IReturn<ГруппыПользователейСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ГруппыПользователей/ИерархияВыбратьПоСсылке","{___Родитель}/{___Режим}/{___Первые}")]
	[Маршрут("Справочники/ГруппыПользователей/ИерархияВыбратьПоСсылке","{___Родитель}/{___Режим}/{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ГруппыПользователей/ИерархияВыбратьПоСсылке","{___Родитель}/{___Режим}/{___Первые}/{___Мин}/{___Макс}")]
	public class ГруппыПользователейИерархияВыбратьПоСсылке: V82.СправочникиСсылка.ГруппыПользователей,IReturn<ГруппыПользователейИерархияВыбратьПоСсылке>
	{
		public Guid ___Родитель {get; set;}
		public int ___Режим {get; set;}
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ГруппыПользователей/ИерархияСтраницаПоСсылке","{___Родитель}/{___Режим}/{___Размер}/{___Номер}")]
	public class ГруппыПользователейИерархияСтраницаПоСсылке: V82.СправочникиСсылка.ГруппыПользователей,IReturn<ГруппыПользователейИерархияСтраницаПоСсылке>
	{
		public Guid ___Родитель {get; set;}
		public int ___Режим {get; set;}
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ГруппыПользователейОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ГруппыПользователейСервис : Service
	{
		
		public object Get(ГруппыПользователейЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ГруппыПользователейНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Справочники.ГруппыПользователей.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ГруппыПользователейОтвет() { Ответ = "ГруппыПользователей c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ГруппыПользователейНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			var СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.ГруппыПользователей.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new ГруппыПользователейОтвет() {Ответ = "ГруппыПользователей c кодом '" + Запрос.Код + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ГруппыПользователейНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ГруппыПользователейВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.ГруппыПользователей.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ГруппыПользователейВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ГруппыПользователейВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ГруппыПользователейСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ГруппыПользователейСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ГруппыПользователейСтраницаПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ГруппыПользователейИерархияВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.ГруппыПользователей.ИерархияВыбратьПоСсылке(Запрос.___Родитель,Запрос.___Режим,Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ГруппыПользователейИерархияСтраницаПоСсылке Запрос)
		{
			return null;
		}

		public object Any(ГруппыПользователейЗапрос Запрос)
		{
			return new ГруппыПользователейОтвет {Ответ = "ГруппыПользователей, "};
		}

		public object Post(ГруппыПользователейЗапрос ЗапросГруппыПользователей)
		{
			var Ссылка = (СправочникиСсылка.ГруппыПользователей)ЗапросГруппыПользователей;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}