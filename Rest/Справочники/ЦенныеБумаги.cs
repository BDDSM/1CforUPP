
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//CennyeBumagi
	[Маршрут("Справочники/ЦенныеБумаги","")]
	public class ЦенныеБумагиЗапрос: V82.СправочникиСсылка.ЦенныеБумаги,IReturn<ЦенныеБумагиЗапрос>
	{
	}
	[Маршрут("Справочники/ЦенныеБумаги/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/ЦенныеБумаги/ПоСсылке","{Ссылка}")]
	public class ЦенныеБумагиНайтиПоСсылке: V82.СправочникиСсылка.ЦенныеБумаги,IReturn<ЦенныеБумагиНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/ЦенныеБумаги/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/ЦенныеБумаги/ПоКоду","{Код}")]
	public class ЦенныеБумагиНайтиПоКоду: V82.СправочникиСсылка.ЦенныеБумаги,IReturn<ЦенныеБумагиНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/ЦенныеБумаги/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/ЦенныеБумаги/ПоНаименованию","{Наименование}")]
	public class ЦенныеБумагиНайтиПоНаименованию: V82.СправочникиСсылка.ЦенныеБумаги,IReturn<ЦенныеБумагиНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/ЦенныеБумаги/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/ЦенныеБумаги/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ЦенныеБумаги/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ЦенныеБумагиВыбратьПоСсылке: V82.СправочникиСсылка.ЦенныеБумаги,IReturn<ЦенныеБумагиВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ЦенныеБумаги/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/ЦенныеБумаги/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ЦенныеБумаги/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class ЦенныеБумагиВыбратьПоКоду: V82.СправочникиСсылка.ЦенныеБумаги,IReturn<ЦенныеБумагиВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ЦенныеБумаги/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/ЦенныеБумаги/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ЦенныеБумаги/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class ЦенныеБумагиВыбратьПоНаименованию: V82.СправочникиСсылка.ЦенныеБумаги,IReturn<ЦенныеБумагиВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ЦенныеБумаги/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ЦенныеБумагиСтраницаПоСсылке: V82.СправочникиСсылка.ЦенныеБумаги,IReturn<ЦенныеБумагиСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ЦенныеБумаги/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class ЦенныеБумагиСтраницаПоКоду: V82.СправочникиСсылка.ЦенныеБумаги,IReturn<ЦенныеБумагиСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ЦенныеБумаги/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class ЦенныеБумагиСтраницаПоНаименованию: V82.СправочникиСсылка.ЦенныеБумаги,IReturn<ЦенныеБумагиСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ЦенныеБумагиОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ЦенныеБумагиСервис : Service
	{
		
		public object Get(ЦенныеБумагиЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ЦенныеБумагиНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ЦенныеБумагиНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			var СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.ЦенныеБумаги.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new ЦенныеБумагиОтвет() {Ответ = "ЦенныеБумаги c кодом '" + Запрос.Код + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ЦенныеБумагиНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ЦенныеБумагиВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.ЦенныеБумаги.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ЦенныеБумагиВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ЦенныеБумагиВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ЦенныеБумагиСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ЦенныеБумагиСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ЦенныеБумагиСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(ЦенныеБумагиЗапрос Запрос)
		{
			return new ЦенныеБумагиОтвет {Ответ = "ЦенныеБумаги, "};
		}

		public object Post(ЦенныеБумагиЗапрос ЗапросЦенныеБумаги)
		{
			var Ссылка = (СправочникиСсылка.ЦенныеБумаги)ЗапросЦенныеБумаги;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}