
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//VidyAnalizovNomenklatury
	[Маршрут("Справочники/ВидыАнализовНоменклатуры","")]
	public class ВидыАнализовНоменклатурыЗапрос: V82.СправочникиСсылка.ВидыАнализовНоменклатуры,IReturn<ВидыАнализовНоменклатурыЗапрос>
	{
	}
	[Маршрут("Справочники/ВидыАнализовНоменклатуры/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/ВидыАнализовНоменклатуры/ПоСсылке","{Ссылка}")]
	public class ВидыАнализовНоменклатурыНайтиПоСсылке: V82.СправочникиСсылка.ВидыАнализовНоменклатуры,IReturn<ВидыАнализовНоменклатурыНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/ВидыАнализовНоменклатуры/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/ВидыАнализовНоменклатуры/ПоКоду","{Код}")]
	public class ВидыАнализовНоменклатурыНайтиПоКоду: V82.СправочникиСсылка.ВидыАнализовНоменклатуры,IReturn<ВидыАнализовНоменклатурыНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/ВидыАнализовНоменклатуры/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/ВидыАнализовНоменклатуры/ПоНаименованию","{Наименование}")]
	public class ВидыАнализовНоменклатурыНайтиПоНаименованию: V82.СправочникиСсылка.ВидыАнализовНоменклатуры,IReturn<ВидыАнализовНоменклатурыНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/ВидыАнализовНоменклатуры/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/ВидыАнализовНоменклатуры/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ВидыАнализовНоменклатуры/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ВидыАнализовНоменклатурыВыбратьПоСсылке: V82.СправочникиСсылка.ВидыАнализовНоменклатуры,IReturn<ВидыАнализовНоменклатурыВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ВидыАнализовНоменклатуры/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/ВидыАнализовНоменклатуры/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ВидыАнализовНоменклатуры/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class ВидыАнализовНоменклатурыВыбратьПоКоду: V82.СправочникиСсылка.ВидыАнализовНоменклатуры,IReturn<ВидыАнализовНоменклатурыВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ВидыАнализовНоменклатуры/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/ВидыАнализовНоменклатуры/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ВидыАнализовНоменклатуры/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class ВидыАнализовНоменклатурыВыбратьПоНаименованию: V82.СправочникиСсылка.ВидыАнализовНоменклатуры,IReturn<ВидыАнализовНоменклатурыВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ВидыАнализовНоменклатуры/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ВидыАнализовНоменклатурыСтраницаПоСсылке: V82.СправочникиСсылка.ВидыАнализовНоменклатуры,IReturn<ВидыАнализовНоменклатурыСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ВидыАнализовНоменклатуры/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class ВидыАнализовНоменклатурыСтраницаПоКоду: V82.СправочникиСсылка.ВидыАнализовНоменклатуры,IReturn<ВидыАнализовНоменклатурыСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ВидыАнализовНоменклатуры/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class ВидыАнализовНоменклатурыСтраницаПоНаименованию: V82.СправочникиСсылка.ВидыАнализовНоменклатуры,IReturn<ВидыАнализовНоменклатурыСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ВидыАнализовНоменклатурыОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ВидыАнализовНоменклатурыСервис : Service
	{
		
		public object Get(ВидыАнализовНоменклатурыЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ВидыАнализовНоменклатурыНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ВидыАнализовНоменклатурыНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			var СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.ВидыАнализовНоменклатуры.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new ВидыАнализовНоменклатурыОтвет() {Ответ = "ВидыАнализовНоменклатуры c кодом '" + Запрос.Код + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ВидыАнализовНоменклатурыНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ВидыАнализовНоменклатурыВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.ВидыАнализовНоменклатуры.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ВидыАнализовНоменклатурыВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ВидыАнализовНоменклатурыВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ВидыАнализовНоменклатурыСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ВидыАнализовНоменклатурыСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ВидыАнализовНоменклатурыСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(ВидыАнализовНоменклатурыЗапрос Запрос)
		{
			return new ВидыАнализовНоменклатурыОтвет {Ответ = "ВидыАнализовНоменклатуры, "};
		}

		public object Post(ВидыАнализовНоменклатурыЗапрос ЗапросВидыАнализовНоменклатуры)
		{
			var Ссылка = (СправочникиСсылка.ВидыАнализовНоменклатуры)ЗапросВидыАнализовНоменклатуры;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}