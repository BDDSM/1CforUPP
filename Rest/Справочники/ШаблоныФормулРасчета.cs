
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//SHablonyFormulRascheta
	[Маршрут("Справочники/ШаблоныФормулРасчета","")]
	public class ШаблоныФормулРасчетаЗапрос: V82.СправочникиСсылка.ШаблоныФормулРасчета,IReturn<ШаблоныФормулРасчетаЗапрос>
	{
	}
	[Маршрут("Справочники/ШаблоныФормулРасчета/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/ШаблоныФормулРасчета/ПоСсылке","{Ссылка}")]
	public class ШаблоныФормулРасчетаНайтиПоСсылке: V82.СправочникиСсылка.ШаблоныФормулРасчета,IReturn<ШаблоныФормулРасчетаНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/ШаблоныФормулРасчета/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/ШаблоныФормулРасчета/ПоКоду","{Код}")]
	public class ШаблоныФормулРасчетаНайтиПоКоду: V82.СправочникиСсылка.ШаблоныФормулРасчета,IReturn<ШаблоныФормулРасчетаНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/ШаблоныФормулРасчета/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/ШаблоныФормулРасчета/ПоНаименованию","{Наименование}")]
	public class ШаблоныФормулРасчетаНайтиПоНаименованию: V82.СправочникиСсылка.ШаблоныФормулРасчета,IReturn<ШаблоныФормулРасчетаНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/ШаблоныФормулРасчета/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/ШаблоныФормулРасчета/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ШаблоныФормулРасчета/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ШаблоныФормулРасчетаВыбратьПоСсылке: V82.СправочникиСсылка.ШаблоныФормулРасчета,IReturn<ШаблоныФормулРасчетаВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ШаблоныФормулРасчета/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/ШаблоныФормулРасчета/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ШаблоныФормулРасчета/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class ШаблоныФормулРасчетаВыбратьПоКоду: V82.СправочникиСсылка.ШаблоныФормулРасчета,IReturn<ШаблоныФормулРасчетаВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ШаблоныФормулРасчета/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/ШаблоныФормулРасчета/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ШаблоныФормулРасчета/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class ШаблоныФормулРасчетаВыбратьПоНаименованию: V82.СправочникиСсылка.ШаблоныФормулРасчета,IReturn<ШаблоныФормулРасчетаВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ШаблоныФормулРасчета/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ШаблоныФормулРасчетаСтраницаПоСсылке: V82.СправочникиСсылка.ШаблоныФормулРасчета,IReturn<ШаблоныФормулРасчетаСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ШаблоныФормулРасчета/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class ШаблоныФормулРасчетаСтраницаПоКоду: V82.СправочникиСсылка.ШаблоныФормулРасчета,IReturn<ШаблоныФормулРасчетаСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ШаблоныФормулРасчета/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class ШаблоныФормулРасчетаСтраницаПоНаименованию: V82.СправочникиСсылка.ШаблоныФормулРасчета,IReturn<ШаблоныФормулРасчетаСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ШаблоныФормулРасчетаОтвет
	{
		public string Ответ {get;set;}
	}

	public class ШаблоныФормулРасчетаСервис : Service
	{
		
		public object Get(ШаблоныФормулРасчетаНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ШаблоныФормулРасчетаНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			string СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.ШаблоныФормулРасчета.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new ШаблоныФормулРасчетаОтвет() {Ответ = "ШаблоныФормулРасчета c кодом '" + Запрос.Код+"' не найдено."};
			}
			return Ссылка;
		}
		
		public object Get(ШаблоныФормулРасчетаНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ШаблоныФормулРасчетаВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			return V82.Справочники.ШаблоныФормулРасчета.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс);
		}
		
		public object Get(ШаблоныФормулРасчетаВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ШаблоныФормулРасчетаВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ШаблоныФормулРасчетаСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ШаблоныФормулРасчетаСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ШаблоныФормулРасчетаСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(ШаблоныФормулРасчетаЗапрос Запрос)
		{
			return new ШаблоныФормулРасчетаОтвет {Ответ = "ШаблоныФормулРасчета, "};
		}

		public object Post(ШаблоныФормулРасчетаЗапрос ЗапросШаблоныФормулРасчета)
		{
			var Ссылка = (СправочникиСсылка.ШаблоныФормулРасчета)ЗапросШаблоныФормулРасчета;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}