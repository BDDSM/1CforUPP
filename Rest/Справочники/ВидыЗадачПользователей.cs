
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//VidyZadachPolzovatelejj
	[Маршрут("Справочники/ВидыЗадачПользователей","")]
	public class ВидыЗадачПользователейЗапрос: V82.СправочникиСсылка.ВидыЗадачПользователей,IReturn<ВидыЗадачПользователейЗапрос>
	{
	}
	[Маршрут("Справочники/ВидыЗадачПользователей/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/ВидыЗадачПользователей/ПоСсылке","{Ссылка}")]
	public class ВидыЗадачПользователейНайтиПоСсылке: V82.СправочникиСсылка.ВидыЗадачПользователей,IReturn<ВидыЗадачПользователейНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/ВидыЗадачПользователей/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/ВидыЗадачПользователей/ПоКоду","{Код}")]
	public class ВидыЗадачПользователейНайтиПоКоду: V82.СправочникиСсылка.ВидыЗадачПользователей,IReturn<ВидыЗадачПользователейНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/ВидыЗадачПользователей/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/ВидыЗадачПользователей/ПоНаименованию","{Наименование}")]
	public class ВидыЗадачПользователейНайтиПоНаименованию: V82.СправочникиСсылка.ВидыЗадачПользователей,IReturn<ВидыЗадачПользователейНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/ВидыЗадачПользователей/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ВидыЗадачПользователейВыбратьПоСсылке: V82.СправочникиСсылка.ВидыЗадачПользователей,IReturn<ВидыЗадачПользователейВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ВидыЗадачПользователей/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class ВидыЗадачПользователейВыбратьПоКоду: V82.СправочникиСсылка.ВидыЗадачПользователей,IReturn<ВидыЗадачПользователейВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ВидыЗадачПользователей/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class ВидыЗадачПользователейВыбратьПоНаименованию: V82.СправочникиСсылка.ВидыЗадачПользователей,IReturn<ВидыЗадачПользователейВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}

	public class ВидыЗадачПользователейОтвет
	{
		public string Ответ {get;set;}
	}

	public class ВидыЗадачПользователейСервис : Service
	{
		
		public object Get(ВидыЗадачПользователейНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ВидыЗадачПользователейНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			string СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.ВидыЗадачПользователей.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new ВидыЗадачПользователейОтвет() {Ответ = "ВидыЗадачПользователей c кодом '" + Запрос.Код+"' не найдено."};
			}
			return Ссылка;
		}
		
		public object Get(ВидыЗадачПользователейНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ВидыЗадачПользователейВыбратьПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ВидыЗадачПользователейВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ВидыЗадачПользователейВыбратьПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(ВидыЗадачПользователейЗапрос Запрос)
		{
			return new ВидыЗадачПользователейОтвет {Ответ = "ВидыЗадачПользователей, "};
		}

		public object Post(ВидыЗадачПользователейЗапрос ЗапросВидыЗадачПользователей)
		{
			var Ссылка = (СправочникиСсылка.ВидыЗадачПользователей)ЗапросВидыЗадачПользователей;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}