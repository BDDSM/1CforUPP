
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//RoliIspolnitelejj
	[Маршрут("Справочники/РолиИсполнителей","")]
	public class РолиИсполнителейЗапрос: V82.СправочникиСсылка.РолиИсполнителей,IReturn<РолиИсполнителейЗапрос>
	{
	}
	[Маршрут("Справочники/РолиИсполнителей/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/РолиИсполнителей/ПоСсылке","{Ссылка}")]
	public class РолиИсполнителейНайтиПоСсылке: V82.СправочникиСсылка.РолиИсполнителей,IReturn<РолиИсполнителейНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/РолиИсполнителей/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/РолиИсполнителей/ПоКоду","{Код}")]
	public class РолиИсполнителейНайтиПоКоду: V82.СправочникиСсылка.РолиИсполнителей,IReturn<РолиИсполнителейНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/РолиИсполнителей/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/РолиИсполнителей/ПоНаименованию","{Наименование}")]
	public class РолиИсполнителейНайтиПоНаименованию: V82.СправочникиСсылка.РолиИсполнителей,IReturn<РолиИсполнителейНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/РолиИсполнителей/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/РолиИсполнителей/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/РолиИсполнителей/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class РолиИсполнителейВыбратьПоСсылке: V82.СправочникиСсылка.РолиИсполнителей,IReturn<РолиИсполнителейВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/РолиИсполнителей/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/РолиИсполнителей/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/РолиИсполнителей/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class РолиИсполнителейВыбратьПоКоду: V82.СправочникиСсылка.РолиИсполнителей,IReturn<РолиИсполнителейВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/РолиИсполнителей/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/РолиИсполнителей/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/РолиИсполнителей/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class РолиИсполнителейВыбратьПоНаименованию: V82.СправочникиСсылка.РолиИсполнителей,IReturn<РолиИсполнителейВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/РолиИсполнителей/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class РолиИсполнителейСтраницаПоСсылке: V82.СправочникиСсылка.РолиИсполнителей,IReturn<РолиИсполнителейСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/РолиИсполнителей/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class РолиИсполнителейСтраницаПоКоду: V82.СправочникиСсылка.РолиИсполнителей,IReturn<РолиИсполнителейСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/РолиИсполнителей/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class РолиИсполнителейСтраницаПоНаименованию: V82.СправочникиСсылка.РолиИсполнителей,IReturn<РолиИсполнителейСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class РолиИсполнителейОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class РолиИсполнителейСервис : Service
	{
		
		public object Get(РолиИсполнителейЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(РолиИсполнителейНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(РолиИсполнителейНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			var СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.РолиИсполнителей.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new РолиИсполнителейОтвет() {Ответ = "РолиИсполнителей c кодом '" + Запрос.Код + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(РолиИсполнителейНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(РолиИсполнителейВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.РолиИсполнителей.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(РолиИсполнителейВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(РолиИсполнителейВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(РолиИсполнителейСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(РолиИсполнителейСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(РолиИсполнителейСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(РолиИсполнителейЗапрос Запрос)
		{
			return new РолиИсполнителейОтвет {Ответ = "РолиИсполнителей, "};
		}

		public object Post(РолиИсполнителейЗапрос ЗапросРолиИсполнителей)
		{
			var Ссылка = (СправочникиСсылка.РолиИсполнителей)ЗапросРолиИсполнителей;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}