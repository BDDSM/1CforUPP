
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//EHDPrisoedinennyeFajjly
	[Маршрут("Справочники/ЭДПрисоединенныеФайлы","")]
	public class ЭДПрисоединенныеФайлыЗапрос: V82.СправочникиСсылка.ЭДПрисоединенныеФайлы,IReturn<ЭДПрисоединенныеФайлыЗапрос>
	{
	}
	[Маршрут("Справочники/ЭДПрисоединенныеФайлы/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/ЭДПрисоединенныеФайлы/ПоСсылке","{Ссылка}")]
	public class ЭДПрисоединенныеФайлыНайтиПоСсылке: V82.СправочникиСсылка.ЭДПрисоединенныеФайлы,IReturn<ЭДПрисоединенныеФайлыНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/ЭДПрисоединенныеФайлы/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/ЭДПрисоединенныеФайлы/ПоНаименованию","{Наименование}")]
	public class ЭДПрисоединенныеФайлыНайтиПоНаименованию: V82.СправочникиСсылка.ЭДПрисоединенныеФайлы,IReturn<ЭДПрисоединенныеФайлыНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/ЭДПрисоединенныеФайлы/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/ЭДПрисоединенныеФайлы/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ЭДПрисоединенныеФайлы/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ЭДПрисоединенныеФайлыВыбратьПоСсылке: V82.СправочникиСсылка.ЭДПрисоединенныеФайлы,IReturn<ЭДПрисоединенныеФайлыВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ЭДПрисоединенныеФайлы/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/ЭДПрисоединенныеФайлы/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ЭДПрисоединенныеФайлы/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class ЭДПрисоединенныеФайлыВыбратьПоНаименованию: V82.СправочникиСсылка.ЭДПрисоединенныеФайлы,IReturn<ЭДПрисоединенныеФайлыВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ЭДПрисоединенныеФайлы/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ЭДПрисоединенныеФайлыСтраницаПоСсылке: V82.СправочникиСсылка.ЭДПрисоединенныеФайлы,IReturn<ЭДПрисоединенныеФайлыСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ЭДПрисоединенныеФайлы/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class ЭДПрисоединенныеФайлыСтраницаПоНаименованию: V82.СправочникиСсылка.ЭДПрисоединенныеФайлы,IReturn<ЭДПрисоединенныеФайлыСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ЭДПрисоединенныеФайлыОтвет
	{
		public string Ответ {get;set;}
	}

	public class ЭДПрисоединенныеФайлыСервис : Service
	{
		
		public object Get(ЭДПрисоединенныеФайлыНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ЭДПрисоединенныеФайлыНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ЭДПрисоединенныеФайлыВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			return V82.Справочники.ЭДПрисоединенныеФайлы.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс);
		}
		
		public object Get(ЭДПрисоединенныеФайлыВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ЭДПрисоединенныеФайлыСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ЭДПрисоединенныеФайлыСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(ЭДПрисоединенныеФайлыЗапрос Запрос)
		{
			return new ЭДПрисоединенныеФайлыОтвет {Ответ = "ЭДПрисоединенныеФайлы, "};
		}

		public object Post(ЭДПрисоединенныеФайлыЗапрос ЗапросЭДПрисоединенныеФайлы)
		{
			var Ссылка = (СправочникиСсылка.ЭДПрисоединенныеФайлы)ЗапросЭДПрисоединенныеФайлы;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}