
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//DokumentyUdostoveryayushhieLichnost
	[Маршрут("Справочники/ДокументыУдостоверяющиеЛичность","")]
	public class ДокументыУдостоверяющиеЛичностьЗапрос: V82.СправочникиСсылка.ДокументыУдостоверяющиеЛичность,IReturn<ДокументыУдостоверяющиеЛичностьЗапрос>
	{
	}
	[Маршрут("Справочники/ДокументыУдостоверяющиеЛичность/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/ДокументыУдостоверяющиеЛичность/ПоСсылке","{Ссылка}")]
	public class ДокументыУдостоверяющиеЛичностьНайтиПоСсылке: V82.СправочникиСсылка.ДокументыУдостоверяющиеЛичность,IReturn<ДокументыУдостоверяющиеЛичностьНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/ДокументыУдостоверяющиеЛичность/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/ДокументыУдостоверяющиеЛичность/ПоНаименованию","{Наименование}")]
	public class ДокументыУдостоверяющиеЛичностьНайтиПоНаименованию: V82.СправочникиСсылка.ДокументыУдостоверяющиеЛичность,IReturn<ДокументыУдостоверяющиеЛичностьНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/ДокументыУдостоверяющиеЛичность/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/ДокументыУдостоверяющиеЛичность/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ДокументыУдостоверяющиеЛичность/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ДокументыУдостоверяющиеЛичностьВыбратьПоСсылке: V82.СправочникиСсылка.ДокументыУдостоверяющиеЛичность,IReturn<ДокументыУдостоверяющиеЛичностьВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ДокументыУдостоверяющиеЛичность/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/ДокументыУдостоверяющиеЛичность/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ДокументыУдостоверяющиеЛичность/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class ДокументыУдостоверяющиеЛичностьВыбратьПоНаименованию: V82.СправочникиСсылка.ДокументыУдостоверяющиеЛичность,IReturn<ДокументыУдостоверяющиеЛичностьВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ДокументыУдостоверяющиеЛичность/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ДокументыУдостоверяющиеЛичностьСтраницаПоСсылке: V82.СправочникиСсылка.ДокументыУдостоверяющиеЛичность,IReturn<ДокументыУдостоверяющиеЛичностьСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ДокументыУдостоверяющиеЛичность/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class ДокументыУдостоверяющиеЛичностьСтраницаПоНаименованию: V82.СправочникиСсылка.ДокументыУдостоверяющиеЛичность,IReturn<ДокументыУдостоверяющиеЛичностьСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ДокументыУдостоверяющиеЛичностьОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ДокументыУдостоверяющиеЛичностьСервис : Service
	{
		
		public object Get(ДокументыУдостоверяющиеЛичностьЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ДокументыУдостоверяющиеЛичностьНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ДокументыУдостоверяющиеЛичностьНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ДокументыУдостоверяющиеЛичностьВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			return V82.Справочники.ДокументыУдостоверяющиеЛичность.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс);
		}
		
		public object Get(ДокументыУдостоверяющиеЛичностьВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ДокументыУдостоверяющиеЛичностьСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ДокументыУдостоверяющиеЛичностьСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(ДокументыУдостоверяющиеЛичностьЗапрос Запрос)
		{
			return new ДокументыУдостоверяющиеЛичностьОтвет {Ответ = "ДокументыУдостоверяющиеЛичность, "};
		}

		public object Post(ДокументыУдостоверяющиеЛичностьЗапрос ЗапросДокументыУдостоверяющиеЛичность)
		{
			var Ссылка = (СправочникиСсылка.ДокументыУдостоверяющиеЛичность)ЗапросДокументыУдостоверяющиеЛичность;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}