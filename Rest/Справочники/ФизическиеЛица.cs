
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//FizicheskieLica
	[Маршрут("Справочники/ФизическиеЛица","")]
	public class ФизическиеЛицаЗапрос: V82.СправочникиСсылка.ФизическиеЛица,IReturn<ФизическиеЛицаЗапрос>
	{
	}
	[Маршрут("Справочники/ФизическиеЛица/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/ФизическиеЛица/ПоСсылке","{Ссылка}")]
	public class ФизическиеЛицаНайтиПоСсылке: V82.СправочникиСсылка.ФизическиеЛица,IReturn<ФизическиеЛицаНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/ФизическиеЛица/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/ФизическиеЛица/ПоКоду","{Код}")]
	public class ФизическиеЛицаНайтиПоКоду: V82.СправочникиСсылка.ФизическиеЛица,IReturn<ФизическиеЛицаНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/ФизическиеЛица/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/ФизическиеЛица/ПоНаименованию","{Наименование}")]
	public class ФизическиеЛицаНайтиПоНаименованию: V82.СправочникиСсылка.ФизическиеЛица,IReturn<ФизическиеЛицаНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/ФизическиеЛица/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/ФизическиеЛица/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ФизическиеЛица/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ФизическиеЛицаВыбратьПоСсылке: V82.СправочникиСсылка.ФизическиеЛица,IReturn<ФизическиеЛицаВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ФизическиеЛица/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/ФизическиеЛица/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ФизическиеЛица/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class ФизическиеЛицаВыбратьПоКоду: V82.СправочникиСсылка.ФизическиеЛица,IReturn<ФизическиеЛицаВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ФизическиеЛица/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/ФизическиеЛица/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ФизическиеЛица/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class ФизическиеЛицаВыбратьПоНаименованию: V82.СправочникиСсылка.ФизическиеЛица,IReturn<ФизическиеЛицаВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ФизическиеЛица/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ФизическиеЛицаСтраницаПоСсылке: V82.СправочникиСсылка.ФизическиеЛица,IReturn<ФизическиеЛицаСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ФизическиеЛица/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class ФизическиеЛицаСтраницаПоКоду: V82.СправочникиСсылка.ФизическиеЛица,IReturn<ФизическиеЛицаСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ФизическиеЛица/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class ФизическиеЛицаСтраницаПоНаименованию: V82.СправочникиСсылка.ФизическиеЛица,IReturn<ФизическиеЛицаСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ФизическиеЛица/ИерархияВыбратьПоСсылке","{___Родитель}/{___Режим}/{___Первые}")]
	[Маршрут("Справочники/ФизическиеЛица/ИерархияВыбратьПоСсылке","{___Родитель}/{___Режим}/{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ФизическиеЛица/ИерархияВыбратьПоСсылке","{___Родитель}/{___Режим}/{___Первые}/{___Мин}/{___Макс}")]
	public class ФизическиеЛицаИерархияВыбратьПоСсылке: V82.СправочникиСсылка.ФизическиеЛица,IReturn<ФизическиеЛицаИерархияВыбратьПоСсылке>
	{
		public Guid ___Родитель {get; set;}
		public int ___Режим {get; set;}
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ФизическиеЛица/ИерархияСтраницаПоСсылке","{___Родитель}/{___Режим}/{___Размер}/{___Номер}")]
	public class ФизическиеЛицаИерархияСтраницаПоСсылке: V82.СправочникиСсылка.ФизическиеЛица,IReturn<ФизическиеЛицаИерархияСтраницаПоСсылке>
	{
		public Guid ___Родитель {get; set;}
		public int ___Режим {get; set;}
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ФизическиеЛицаОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ФизическиеЛицаСервис : Service
	{
		
		public object Get(ФизическиеЛицаЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ФизическиеЛицаНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Справочники.ФизическиеЛица.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ФизическиеЛицаОтвет() { Ответ = "ФизическиеЛица c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ФизическиеЛицаНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			var СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.ФизическиеЛица.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new ФизическиеЛицаОтвет() {Ответ = "ФизическиеЛица c кодом '" + Запрос.Код + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ФизическиеЛицаНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ФизическиеЛицаВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.ФизическиеЛица.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ФизическиеЛицаВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ФизическиеЛицаВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ФизическиеЛицаСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ФизическиеЛицаСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ФизическиеЛицаСтраницаПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ФизическиеЛицаИерархияВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.ФизическиеЛица.ИерархияВыбратьПоСсылке(Запрос.___Родитель,Запрос.___Режим,Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ФизическиеЛицаИерархияСтраницаПоСсылке Запрос)
		{
			return null;
		}

		public object Any(ФизическиеЛицаЗапрос Запрос)
		{
			return new ФизическиеЛицаОтвет {Ответ = "ФизическиеЛица, "};
		}

		public object Post(ФизическиеЛицаЗапрос ЗапросФизическиеЛица)
		{
			var Ссылка = (СправочникиСсылка.ФизическиеЛица)ЗапросФизическиеЛица;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}