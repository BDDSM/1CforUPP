
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//NaznacheniyaSertifikatovEHCP
	[Маршрут("Справочники/НазначенияСертификатовЭЦП","")]
	public class НазначенияСертификатовЭЦПЗапрос: V82.СправочникиСсылка.НазначенияСертификатовЭЦП,IReturn<НазначенияСертификатовЭЦПЗапрос>
	{
	}
	[Маршрут("Справочники/НазначенияСертификатовЭЦП/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/НазначенияСертификатовЭЦП/ПоСсылке","{Ссылка}")]
	public class НазначенияСертификатовЭЦПНайтиПоСсылке: V82.СправочникиСсылка.НазначенияСертификатовЭЦП,IReturn<НазначенияСертификатовЭЦПНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/НазначенияСертификатовЭЦП/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/НазначенияСертификатовЭЦП/ПоКоду","{Код}")]
	public class НазначенияСертификатовЭЦПНайтиПоКоду: V82.СправочникиСсылка.НазначенияСертификатовЭЦП,IReturn<НазначенияСертификатовЭЦПНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/НазначенияСертификатовЭЦП/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/НазначенияСертификатовЭЦП/ПоНаименованию","{Наименование}")]
	public class НазначенияСертификатовЭЦПНайтиПоНаименованию: V82.СправочникиСсылка.НазначенияСертификатовЭЦП,IReturn<НазначенияСертификатовЭЦПНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/НазначенияСертификатовЭЦП/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/НазначенияСертификатовЭЦП/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/НазначенияСертификатовЭЦП/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class НазначенияСертификатовЭЦПВыбратьПоСсылке: V82.СправочникиСсылка.НазначенияСертификатовЭЦП,IReturn<НазначенияСертификатовЭЦПВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/НазначенияСертификатовЭЦП/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/НазначенияСертификатовЭЦП/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/НазначенияСертификатовЭЦП/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class НазначенияСертификатовЭЦПВыбратьПоКоду: V82.СправочникиСсылка.НазначенияСертификатовЭЦП,IReturn<НазначенияСертификатовЭЦПВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/НазначенияСертификатовЭЦП/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/НазначенияСертификатовЭЦП/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/НазначенияСертификатовЭЦП/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class НазначенияСертификатовЭЦПВыбратьПоНаименованию: V82.СправочникиСсылка.НазначенияСертификатовЭЦП,IReturn<НазначенияСертификатовЭЦПВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/НазначенияСертификатовЭЦП/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class НазначенияСертификатовЭЦПСтраницаПоСсылке: V82.СправочникиСсылка.НазначенияСертификатовЭЦП,IReturn<НазначенияСертификатовЭЦПСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/НазначенияСертификатовЭЦП/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class НазначенияСертификатовЭЦПСтраницаПоКоду: V82.СправочникиСсылка.НазначенияСертификатовЭЦП,IReturn<НазначенияСертификатовЭЦПСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/НазначенияСертификатовЭЦП/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class НазначенияСертификатовЭЦПСтраницаПоНаименованию: V82.СправочникиСсылка.НазначенияСертификатовЭЦП,IReturn<НазначенияСертификатовЭЦПСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class НазначенияСертификатовЭЦПОтвет
	{
		public string Ответ {get;set;}
	}

	public class НазначенияСертификатовЭЦПСервис : Service
	{
		
		public object Get(НазначенияСертификатовЭЦПНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(НазначенияСертификатовЭЦПНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			string СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.НазначенияСертификатовЭЦП.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new НазначенияСертификатовЭЦПОтвет() {Ответ = "НазначенияСертификатовЭЦП c кодом '" + Запрос.Код+"' не найдено."};
			}
			return Ссылка;
		}
		
		public object Get(НазначенияСертификатовЭЦПНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(НазначенияСертификатовЭЦПВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			return V82.Справочники.НазначенияСертификатовЭЦП.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс);
		}
		
		public object Get(НазначенияСертификатовЭЦПВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(НазначенияСертификатовЭЦПВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(НазначенияСертификатовЭЦПСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(НазначенияСертификатовЭЦПСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(НазначенияСертификатовЭЦПСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(НазначенияСертификатовЭЦПЗапрос Запрос)
		{
			return new НазначенияСертификатовЭЦПОтвет {Ответ = "НазначенияСертификатовЭЦП, "};
		}

		public object Post(НазначенияСертификатовЭЦПЗапрос ЗапросНазначенияСертификатовЭЦП)
		{
			var Ссылка = (СправочникиСсылка.НазначенияСертификатовЭЦП)ЗапросНазначенияСертификатовЭЦП;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}