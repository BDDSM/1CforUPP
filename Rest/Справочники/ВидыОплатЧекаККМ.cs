
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//VidyOplatCHekaKKM
	[Маршрут("Справочники/ВидыОплатЧекаККМ","")]
	public class ВидыОплатЧекаККМЗапрос: V82.СправочникиСсылка.ВидыОплатЧекаККМ,IReturn<ВидыОплатЧекаККМЗапрос>
	{
	}
	[Маршрут("Справочники/ВидыОплатЧекаККМ/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/ВидыОплатЧекаККМ/ПоСсылке","{Ссылка}")]
	public class ВидыОплатЧекаККМНайтиПоСсылке: V82.СправочникиСсылка.ВидыОплатЧекаККМ,IReturn<ВидыОплатЧекаККМНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/ВидыОплатЧекаККМ/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/ВидыОплатЧекаККМ/ПоКоду","{Код}")]
	public class ВидыОплатЧекаККМНайтиПоКоду: V82.СправочникиСсылка.ВидыОплатЧекаККМ,IReturn<ВидыОплатЧекаККМНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/ВидыОплатЧекаККМ/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/ВидыОплатЧекаККМ/ПоНаименованию","{Наименование}")]
	public class ВидыОплатЧекаККМНайтиПоНаименованию: V82.СправочникиСсылка.ВидыОплатЧекаККМ,IReturn<ВидыОплатЧекаККМНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/ВидыОплатЧекаККМ/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/ВидыОплатЧекаККМ/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ВидыОплатЧекаККМ/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ВидыОплатЧекаККМВыбратьПоСсылке: V82.СправочникиСсылка.ВидыОплатЧекаККМ,IReturn<ВидыОплатЧекаККМВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ВидыОплатЧекаККМ/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/ВидыОплатЧекаККМ/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ВидыОплатЧекаККМ/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class ВидыОплатЧекаККМВыбратьПоКоду: V82.СправочникиСсылка.ВидыОплатЧекаККМ,IReturn<ВидыОплатЧекаККМВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ВидыОплатЧекаККМ/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/ВидыОплатЧекаККМ/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ВидыОплатЧекаККМ/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class ВидыОплатЧекаККМВыбратьПоНаименованию: V82.СправочникиСсылка.ВидыОплатЧекаККМ,IReturn<ВидыОплатЧекаККМВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ВидыОплатЧекаККМ/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ВидыОплатЧекаККМСтраницаПоСсылке: V82.СправочникиСсылка.ВидыОплатЧекаККМ,IReturn<ВидыОплатЧекаККМСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ВидыОплатЧекаККМ/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class ВидыОплатЧекаККМСтраницаПоКоду: V82.СправочникиСсылка.ВидыОплатЧекаККМ,IReturn<ВидыОплатЧекаККМСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ВидыОплатЧекаККМ/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class ВидыОплатЧекаККМСтраницаПоНаименованию: V82.СправочникиСсылка.ВидыОплатЧекаККМ,IReturn<ВидыОплатЧекаККМСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ВидыОплатЧекаККМОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ВидыОплатЧекаККМСервис : Service
	{
		
		public object Get(ВидыОплатЧекаККМЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ВидыОплатЧекаККМНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ВидыОплатЧекаККМНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			var СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.ВидыОплатЧекаККМ.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new ВидыОплатЧекаККМОтвет() {Ответ = "ВидыОплатЧекаККМ c кодом '" + Запрос.Код + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ВидыОплатЧекаККМНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ВидыОплатЧекаККМВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.ВидыОплатЧекаККМ.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ВидыОплатЧекаККМВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ВидыОплатЧекаККМВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ВидыОплатЧекаККМСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ВидыОплатЧекаККМСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ВидыОплатЧекаККМСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(ВидыОплатЧекаККМЗапрос Запрос)
		{
			return new ВидыОплатЧекаККМОтвет {Ответ = "ВидыОплатЧекаККМ, "};
		}

		public object Post(ВидыОплатЧекаККМЗапрос ЗапросВидыОплатЧекаККМ)
		{
			var Ссылка = (СправочникиСсылка.ВидыОплатЧекаККМ)ЗапросВидыОплатЧекаККМ;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}