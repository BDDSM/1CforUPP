
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//PerepiskaSKontroliruyushhimiOrganami
	[Маршрут("Справочники/ПерепискаСКонтролирующимиОрганами","")]
	public class ПерепискаСКонтролирующимиОрганамиЗапрос: V82.СправочникиСсылка.ПерепискаСКонтролирующимиОрганами,IReturn<ПерепискаСКонтролирующимиОрганамиЗапрос>
	{
	}
	[Маршрут("Справочники/ПерепискаСКонтролирующимиОрганами/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/ПерепискаСКонтролирующимиОрганами/ПоСсылке","{Ссылка}")]
	public class ПерепискаСКонтролирующимиОрганамиНайтиПоСсылке: V82.СправочникиСсылка.ПерепискаСКонтролирующимиОрганами,IReturn<ПерепискаСКонтролирующимиОрганамиНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/ПерепискаСКонтролирующимиОрганами/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/ПерепискаСКонтролирующимиОрганами/ПоКоду","{Код}")]
	public class ПерепискаСКонтролирующимиОрганамиНайтиПоКоду: V82.СправочникиСсылка.ПерепискаСКонтролирующимиОрганами,IReturn<ПерепискаСКонтролирующимиОрганамиНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/ПерепискаСКонтролирующимиОрганами/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/ПерепискаСКонтролирующимиОрганами/ПоНаименованию","{Наименование}")]
	public class ПерепискаСКонтролирующимиОрганамиНайтиПоНаименованию: V82.СправочникиСсылка.ПерепискаСКонтролирующимиОрганами,IReturn<ПерепискаСКонтролирующимиОрганамиНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/ПерепискаСКонтролирующимиОрганами/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/ПерепискаСКонтролирующимиОрганами/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ПерепискаСКонтролирующимиОрганами/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ПерепискаСКонтролирующимиОрганамиВыбратьПоСсылке: V82.СправочникиСсылка.ПерепискаСКонтролирующимиОрганами,IReturn<ПерепискаСКонтролирующимиОрганамиВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ПерепискаСКонтролирующимиОрганами/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/ПерепискаСКонтролирующимиОрганами/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ПерепискаСКонтролирующимиОрганами/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class ПерепискаСКонтролирующимиОрганамиВыбратьПоКоду: V82.СправочникиСсылка.ПерепискаСКонтролирующимиОрганами,IReturn<ПерепискаСКонтролирующимиОрганамиВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ПерепискаСКонтролирующимиОрганами/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/ПерепискаСКонтролирующимиОрганами/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ПерепискаСКонтролирующимиОрганами/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class ПерепискаСКонтролирующимиОрганамиВыбратьПоНаименованию: V82.СправочникиСсылка.ПерепискаСКонтролирующимиОрганами,IReturn<ПерепискаСКонтролирующимиОрганамиВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ПерепискаСКонтролирующимиОрганами/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ПерепискаСКонтролирующимиОрганамиСтраницаПоСсылке: V82.СправочникиСсылка.ПерепискаСКонтролирующимиОрганами,IReturn<ПерепискаСКонтролирующимиОрганамиСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ПерепискаСКонтролирующимиОрганами/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class ПерепискаСКонтролирующимиОрганамиСтраницаПоКоду: V82.СправочникиСсылка.ПерепискаСКонтролирующимиОрганами,IReturn<ПерепискаСКонтролирующимиОрганамиСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ПерепискаСКонтролирующимиОрганами/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class ПерепискаСКонтролирующимиОрганамиСтраницаПоНаименованию: V82.СправочникиСсылка.ПерепискаСКонтролирующимиОрганами,IReturn<ПерепискаСКонтролирующимиОрганамиСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ПерепискаСКонтролирующимиОрганамиОтвет
	{
		public string Ответ {get;set;}
	}

	public class ПерепискаСКонтролирующимиОрганамиСервис : Service
	{
		
		public object Get(ПерепискаСКонтролирующимиОрганамиНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ПерепискаСКонтролирующимиОрганамиНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			string СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.ПерепискаСКонтролирующимиОрганами.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new ПерепискаСКонтролирующимиОрганамиОтвет() {Ответ = "ПерепискаСКонтролирующимиОрганами c кодом '" + Запрос.Код+"' не найдено."};
			}
			return Ссылка;
		}
		
		public object Get(ПерепискаСКонтролирующимиОрганамиНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ПерепискаСКонтролирующимиОрганамиВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			return V82.Справочники.ПерепискаСКонтролирующимиОрганами.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс);
		}
		
		public object Get(ПерепискаСКонтролирующимиОрганамиВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ПерепискаСКонтролирующимиОрганамиВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ПерепискаСКонтролирующимиОрганамиСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ПерепискаСКонтролирующимиОрганамиСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ПерепискаСКонтролирующимиОрганамиСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(ПерепискаСКонтролирующимиОрганамиЗапрос Запрос)
		{
			return new ПерепискаСКонтролирующимиОрганамиОтвет {Ответ = "ПерепискаСКонтролирующимиОрганами, "};
		}

		public object Post(ПерепискаСКонтролирующимиОрганамиЗапрос ЗапросПерепискаСКонтролирующимиОрганами)
		{
			var Ссылка = (СправочникиСсылка.ПерепискаСКонтролирующимиОрганами)ЗапросПерепискаСКонтролирующимиОрганами;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}