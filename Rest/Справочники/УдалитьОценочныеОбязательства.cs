
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//UdalitOcenochnyeObyazatelstva
	[Маршрут("Справочники/УдалитьОценочныеОбязательства","")]
	public class УдалитьОценочныеОбязательстваЗапрос: V82.СправочникиСсылка.УдалитьОценочныеОбязательства,IReturn<УдалитьОценочныеОбязательстваЗапрос>
	{
	}
	[Маршрут("Справочники/УдалитьОценочныеОбязательства/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/УдалитьОценочныеОбязательства/ПоСсылке","{Ссылка}")]
	public class УдалитьОценочныеОбязательстваНайтиПоСсылке: V82.СправочникиСсылка.УдалитьОценочныеОбязательства,IReturn<УдалитьОценочныеОбязательстваНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/УдалитьОценочныеОбязательства/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/УдалитьОценочныеОбязательства/ПоКоду","{Код}")]
	public class УдалитьОценочныеОбязательстваНайтиПоКоду: V82.СправочникиСсылка.УдалитьОценочныеОбязательства,IReturn<УдалитьОценочныеОбязательстваНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/УдалитьОценочныеОбязательства/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/УдалитьОценочныеОбязательства/ПоНаименованию","{Наименование}")]
	public class УдалитьОценочныеОбязательстваНайтиПоНаименованию: V82.СправочникиСсылка.УдалитьОценочныеОбязательства,IReturn<УдалитьОценочныеОбязательстваНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/УдалитьОценочныеОбязательства/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class УдалитьОценочныеОбязательстваВыбратьПоСсылке: V82.СправочникиСсылка.УдалитьОценочныеОбязательства,IReturn<УдалитьОценочныеОбязательстваВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/УдалитьОценочныеОбязательства/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class УдалитьОценочныеОбязательстваВыбратьПоКоду: V82.СправочникиСсылка.УдалитьОценочныеОбязательства,IReturn<УдалитьОценочныеОбязательстваВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/УдалитьОценочныеОбязательства/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class УдалитьОценочныеОбязательстваВыбратьПоНаименованию: V82.СправочникиСсылка.УдалитьОценочныеОбязательства,IReturn<УдалитьОценочныеОбязательстваВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}

	public class УдалитьОценочныеОбязательстваОтвет
	{
		public string Ответ {get;set;}
	}

	public class УдалитьОценочныеОбязательстваСервис : Service
	{
		
		public object Get(УдалитьОценочныеОбязательстваНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(УдалитьОценочныеОбязательстваНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			string СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.УдалитьОценочныеОбязательства.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new УдалитьОценочныеОбязательстваОтвет() {Ответ = "УдалитьОценочныеОбязательства c кодом '" + Запрос.Код+"' не найдено."};
			}
			return Ссылка;
		}
		
		public object Get(УдалитьОценочныеОбязательстваНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(УдалитьОценочныеОбязательстваВыбратьПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(УдалитьОценочныеОбязательстваВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(УдалитьОценочныеОбязательстваВыбратьПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(УдалитьОценочныеОбязательстваЗапрос Запрос)
		{
			return new УдалитьОценочныеОбязательстваОтвет {Ответ = "УдалитьОценочныеОбязательства, "};
		}

		public object Post(УдалитьОценочныеОбязательстваЗапрос ЗапросУдалитьОценочныеОбязательства)
		{
			var Ссылка = (СправочникиСсылка.УдалитьОценочныеОбязательства)ЗапросУдалитьОценочныеОбязательства;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}