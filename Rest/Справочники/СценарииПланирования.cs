
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//ScenariiPlanirovaniya
	[Маршрут("Справочники/СценарииПланирования","")]
	public class СценарииПланированияЗапрос: V82.СправочникиСсылка.СценарииПланирования,IReturn<СценарииПланированияЗапрос>
	{
	}
	[Маршрут("Справочники/СценарииПланирования/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/СценарииПланирования/ПоСсылке","{Ссылка}")]
	public class СценарииПланированияНайтиПоСсылке: V82.СправочникиСсылка.СценарииПланирования,IReturn<СценарииПланированияНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/СценарииПланирования/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/СценарииПланирования/ПоКоду","{Код}")]
	public class СценарииПланированияНайтиПоКоду: V82.СправочникиСсылка.СценарииПланирования,IReturn<СценарииПланированияНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/СценарииПланирования/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/СценарииПланирования/ПоНаименованию","{Наименование}")]
	public class СценарииПланированияНайтиПоНаименованию: V82.СправочникиСсылка.СценарииПланирования,IReturn<СценарииПланированияНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/СценарииПланирования/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/СценарииПланирования/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/СценарииПланирования/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class СценарииПланированияВыбратьПоСсылке: V82.СправочникиСсылка.СценарииПланирования,IReturn<СценарииПланированияВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/СценарииПланирования/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/СценарииПланирования/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/СценарииПланирования/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class СценарииПланированияВыбратьПоКоду: V82.СправочникиСсылка.СценарииПланирования,IReturn<СценарииПланированияВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/СценарииПланирования/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/СценарииПланирования/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/СценарииПланирования/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class СценарииПланированияВыбратьПоНаименованию: V82.СправочникиСсылка.СценарииПланирования,IReturn<СценарииПланированияВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/СценарииПланирования/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class СценарииПланированияСтраницаПоСсылке: V82.СправочникиСсылка.СценарииПланирования,IReturn<СценарииПланированияСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/СценарииПланирования/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class СценарииПланированияСтраницаПоКоду: V82.СправочникиСсылка.СценарииПланирования,IReturn<СценарииПланированияСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/СценарииПланирования/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class СценарииПланированияСтраницаПоНаименованию: V82.СправочникиСсылка.СценарииПланирования,IReturn<СценарииПланированияСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class СценарииПланированияОтвет
	{
		public string Ответ {get;set;}
	}

	public class СценарииПланированияСервис : Service
	{
		
		public object Get(СценарииПланированияНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(СценарииПланированияНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			string СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.СценарииПланирования.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new СценарииПланированияОтвет() {Ответ = "СценарииПланирования c кодом '" + Запрос.Код+"' не найдено."};
			}
			return Ссылка;
		}
		
		public object Get(СценарииПланированияНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(СценарииПланированияВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			return V82.Справочники.СценарииПланирования.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс);
		}
		
		public object Get(СценарииПланированияВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(СценарииПланированияВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(СценарииПланированияСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(СценарииПланированияСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(СценарииПланированияСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(СценарииПланированияЗапрос Запрос)
		{
			return new СценарииПланированияОтвет {Ответ = "СценарииПланирования, "};
		}

		public object Post(СценарииПланированияЗапрос ЗапросСценарииПланирования)
		{
			var Ссылка = (СправочникиСсылка.СценарииПланирования)ЗапросСценарииПланирования;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}