
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//KlyuchiAnalitikiUchetaProchikhZatrat
	[Маршрут("Справочники/КлючиАналитикиУчетаПрочихЗатрат","")]
	public class КлючиАналитикиУчетаПрочихЗатратЗапрос: V82.СправочникиСсылка.КлючиАналитикиУчетаПрочихЗатрат,IReturn<КлючиАналитикиУчетаПрочихЗатратЗапрос>
	{
	}
	[Маршрут("Справочники/КлючиАналитикиУчетаПрочихЗатрат/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/КлючиАналитикиУчетаПрочихЗатрат/ПоСсылке","{Ссылка}")]
	public class КлючиАналитикиУчетаПрочихЗатратНайтиПоСсылке: V82.СправочникиСсылка.КлючиАналитикиУчетаПрочихЗатрат,IReturn<КлючиАналитикиУчетаПрочихЗатратНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/КлючиАналитикиУчетаПрочихЗатрат/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/КлючиАналитикиУчетаПрочихЗатрат/ПоНаименованию","{Наименование}")]
	public class КлючиАналитикиУчетаПрочихЗатратНайтиПоНаименованию: V82.СправочникиСсылка.КлючиАналитикиУчетаПрочихЗатрат,IReturn<КлючиАналитикиУчетаПрочихЗатратНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/КлючиАналитикиУчетаПрочихЗатрат/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/КлючиАналитикиУчетаПрочихЗатрат/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/КлючиАналитикиУчетаПрочихЗатрат/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class КлючиАналитикиУчетаПрочихЗатратВыбратьПоСсылке: V82.СправочникиСсылка.КлючиАналитикиУчетаПрочихЗатрат,IReturn<КлючиАналитикиУчетаПрочихЗатратВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/КлючиАналитикиУчетаПрочихЗатрат/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/КлючиАналитикиУчетаПрочихЗатрат/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/КлючиАналитикиУчетаПрочихЗатрат/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class КлючиАналитикиУчетаПрочихЗатратВыбратьПоНаименованию: V82.СправочникиСсылка.КлючиАналитикиУчетаПрочихЗатрат,IReturn<КлючиАналитикиУчетаПрочихЗатратВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/КлючиАналитикиУчетаПрочихЗатрат/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class КлючиАналитикиУчетаПрочихЗатратСтраницаПоСсылке: V82.СправочникиСсылка.КлючиАналитикиУчетаПрочихЗатрат,IReturn<КлючиАналитикиУчетаПрочихЗатратСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/КлючиАналитикиУчетаПрочихЗатрат/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class КлючиАналитикиУчетаПрочихЗатратСтраницаПоНаименованию: V82.СправочникиСсылка.КлючиАналитикиУчетаПрочихЗатрат,IReturn<КлючиАналитикиУчетаПрочихЗатратСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class КлючиАналитикиУчетаПрочихЗатратОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class КлючиАналитикиУчетаПрочихЗатратСервис : Service
	{
		
		public object Get(КлючиАналитикиУчетаПрочихЗатратЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(КлючиАналитикиУчетаПрочихЗатратНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Справочники.КлючиАналитикиУчетаПрочихЗатрат.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new КлючиАналитикиУчетаПрочихЗатратОтвет() { Ответ = "КлючиАналитикиУчетаПрочихЗатрат c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(КлючиАналитикиУчетаПрочихЗатратНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(КлючиАналитикиУчетаПрочихЗатратВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.КлючиАналитикиУчетаПрочихЗатрат.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(КлючиАналитикиУчетаПрочихЗатратВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(КлючиАналитикиУчетаПрочихЗатратСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(КлючиАналитикиУчетаПрочихЗатратСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(КлючиАналитикиУчетаПрочихЗатратЗапрос Запрос)
		{
			return new КлючиАналитикиУчетаПрочихЗатратОтвет {Ответ = "КлючиАналитикиУчетаПрочихЗатрат, "};
		}

		public object Post(КлючиАналитикиУчетаПрочихЗатратЗапрос ЗапросКлючиАналитикиУчетаПрочихЗатрат)
		{
			var Ссылка = (СправочникиСсылка.КлючиАналитикиУчетаПрочихЗатрат)ЗапросКлючиАналитикиУчетаПрочихЗатрат;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}