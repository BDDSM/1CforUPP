
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//TomaKHraneniyaFajjlov
	[Маршрут("Справочники/ТомаХраненияФайлов","")]
	public class ТомаХраненияФайловЗапрос: V82.СправочникиСсылка.ТомаХраненияФайлов,IReturn<ТомаХраненияФайловЗапрос>
	{
	}
	[Маршрут("Справочники/ТомаХраненияФайлов/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/ТомаХраненияФайлов/ПоСсылке","{Ссылка}")]
	public class ТомаХраненияФайловНайтиПоСсылке: V82.СправочникиСсылка.ТомаХраненияФайлов,IReturn<ТомаХраненияФайловНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/ТомаХраненияФайлов/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/ТомаХраненияФайлов/ПоКоду","{Код}")]
	public class ТомаХраненияФайловНайтиПоКоду: V82.СправочникиСсылка.ТомаХраненияФайлов,IReturn<ТомаХраненияФайловНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/ТомаХраненияФайлов/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/ТомаХраненияФайлов/ПоНаименованию","{Наименование}")]
	public class ТомаХраненияФайловНайтиПоНаименованию: V82.СправочникиСсылка.ТомаХраненияФайлов,IReturn<ТомаХраненияФайловНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/ТомаХраненияФайлов/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/ТомаХраненияФайлов/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ТомаХраненияФайлов/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ТомаХраненияФайловВыбратьПоСсылке: V82.СправочникиСсылка.ТомаХраненияФайлов,IReturn<ТомаХраненияФайловВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ТомаХраненияФайлов/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/ТомаХраненияФайлов/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ТомаХраненияФайлов/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class ТомаХраненияФайловВыбратьПоКоду: V82.СправочникиСсылка.ТомаХраненияФайлов,IReturn<ТомаХраненияФайловВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ТомаХраненияФайлов/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/ТомаХраненияФайлов/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ТомаХраненияФайлов/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class ТомаХраненияФайловВыбратьПоНаименованию: V82.СправочникиСсылка.ТомаХраненияФайлов,IReturn<ТомаХраненияФайловВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ТомаХраненияФайлов/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ТомаХраненияФайловСтраницаПоСсылке: V82.СправочникиСсылка.ТомаХраненияФайлов,IReturn<ТомаХраненияФайловСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ТомаХраненияФайлов/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class ТомаХраненияФайловСтраницаПоКоду: V82.СправочникиСсылка.ТомаХраненияФайлов,IReturn<ТомаХраненияФайловСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ТомаХраненияФайлов/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class ТомаХраненияФайловСтраницаПоНаименованию: V82.СправочникиСсылка.ТомаХраненияФайлов,IReturn<ТомаХраненияФайловСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ТомаХраненияФайловОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ТомаХраненияФайловСервис : Service
	{
		
		public object Get(ТомаХраненияФайловЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ТомаХраненияФайловНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Справочники.ТомаХраненияФайлов.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ТомаХраненияФайловОтвет() { Ответ = "ТомаХраненияФайлов c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ТомаХраненияФайловНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			var СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.ТомаХраненияФайлов.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new ТомаХраненияФайловОтвет() {Ответ = "ТомаХраненияФайлов c кодом '" + Запрос.Код + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ТомаХраненияФайловНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ТомаХраненияФайловВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.ТомаХраненияФайлов.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ТомаХраненияФайловВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ТомаХраненияФайловВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ТомаХраненияФайловСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ТомаХраненияФайловСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ТомаХраненияФайловСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(ТомаХраненияФайловЗапрос Запрос)
		{
			return new ТомаХраненияФайловОтвет {Ответ = "ТомаХраненияФайлов, "};
		}

		public object Post(ТомаХраненияФайловЗапрос ЗапросТомаХраненияФайлов)
		{
			var Ссылка = (СправочникиСсылка.ТомаХраненияФайлов)ЗапросТомаХраненияФайлов;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}