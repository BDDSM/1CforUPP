
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//GruppyPisemEHlektronnojjPochty
	[Маршрут("Справочники/ГруппыПисемЭлектроннойПочты","")]
	public class ГруппыПисемЭлектроннойПочтыЗапрос: V82.СправочникиСсылка.ГруппыПисемЭлектроннойПочты,IReturn<ГруппыПисемЭлектроннойПочтыЗапрос>
	{
	}
	[Маршрут("Справочники/ГруппыПисемЭлектроннойПочты/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/ГруппыПисемЭлектроннойПочты/ПоСсылке","{Ссылка}")]
	public class ГруппыПисемЭлектроннойПочтыНайтиПоСсылке: V82.СправочникиСсылка.ГруппыПисемЭлектроннойПочты,IReturn<ГруппыПисемЭлектроннойПочтыНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/ГруппыПисемЭлектроннойПочты/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/ГруппыПисемЭлектроннойПочты/ПоКоду","{Код}")]
	public class ГруппыПисемЭлектроннойПочтыНайтиПоКоду: V82.СправочникиСсылка.ГруппыПисемЭлектроннойПочты,IReturn<ГруппыПисемЭлектроннойПочтыНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/ГруппыПисемЭлектроннойПочты/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/ГруппыПисемЭлектроннойПочты/ПоНаименованию","{Наименование}")]
	public class ГруппыПисемЭлектроннойПочтыНайтиПоНаименованию: V82.СправочникиСсылка.ГруппыПисемЭлектроннойПочты,IReturn<ГруппыПисемЭлектроннойПочтыНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/ГруппыПисемЭлектроннойПочты/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/ГруппыПисемЭлектроннойПочты/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ГруппыПисемЭлектроннойПочты/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ГруппыПисемЭлектроннойПочтыВыбратьПоСсылке: V82.СправочникиСсылка.ГруппыПисемЭлектроннойПочты,IReturn<ГруппыПисемЭлектроннойПочтыВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ГруппыПисемЭлектроннойПочты/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/ГруппыПисемЭлектроннойПочты/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ГруппыПисемЭлектроннойПочты/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class ГруппыПисемЭлектроннойПочтыВыбратьПоКоду: V82.СправочникиСсылка.ГруппыПисемЭлектроннойПочты,IReturn<ГруппыПисемЭлектроннойПочтыВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ГруппыПисемЭлектроннойПочты/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/ГруппыПисемЭлектроннойПочты/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ГруппыПисемЭлектроннойПочты/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class ГруппыПисемЭлектроннойПочтыВыбратьПоНаименованию: V82.СправочникиСсылка.ГруппыПисемЭлектроннойПочты,IReturn<ГруппыПисемЭлектроннойПочтыВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ГруппыПисемЭлектроннойПочты/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ГруппыПисемЭлектроннойПочтыСтраницаПоСсылке: V82.СправочникиСсылка.ГруппыПисемЭлектроннойПочты,IReturn<ГруппыПисемЭлектроннойПочтыСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ГруппыПисемЭлектроннойПочты/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class ГруппыПисемЭлектроннойПочтыСтраницаПоКоду: V82.СправочникиСсылка.ГруппыПисемЭлектроннойПочты,IReturn<ГруппыПисемЭлектроннойПочтыСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ГруппыПисемЭлектроннойПочты/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class ГруппыПисемЭлектроннойПочтыСтраницаПоНаименованию: V82.СправочникиСсылка.ГруппыПисемЭлектроннойПочты,IReturn<ГруппыПисемЭлектроннойПочтыСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ГруппыПисемЭлектроннойПочтыОтвет
	{
		public string Ответ {get;set;}
	}

	public class ГруппыПисемЭлектроннойПочтыСервис : Service
	{
		
		public object Get(ГруппыПисемЭлектроннойПочтыНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ГруппыПисемЭлектроннойПочтыНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			string СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.ГруппыПисемЭлектроннойПочты.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new ГруппыПисемЭлектроннойПочтыОтвет() {Ответ = "ГруппыПисемЭлектроннойПочты c кодом '" + Запрос.Код+"' не найдено."};
			}
			return Ссылка;
		}
		
		public object Get(ГруппыПисемЭлектроннойПочтыНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ГруппыПисемЭлектроннойПочтыВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			return V82.Справочники.ГруппыПисемЭлектроннойПочты.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс);
		}
		
		public object Get(ГруппыПисемЭлектроннойПочтыВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ГруппыПисемЭлектроннойПочтыВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ГруппыПисемЭлектроннойПочтыСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ГруппыПисемЭлектроннойПочтыСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ГруппыПисемЭлектроннойПочтыСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(ГруппыПисемЭлектроннойПочтыЗапрос Запрос)
		{
			return new ГруппыПисемЭлектроннойПочтыОтвет {Ответ = "ГруппыПисемЭлектроннойПочты, "};
		}

		public object Post(ГруппыПисемЭлектроннойПочтыЗапрос ЗапросГруппыПисемЭлектроннойПочты)
		{
			var Ссылка = (СправочникиСсылка.ГруппыПисемЭлектроннойПочты)ЗапросГруппыПисемЭлектроннойПочты;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}