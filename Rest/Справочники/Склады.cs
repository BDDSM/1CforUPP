
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//Sklady
	[Маршрут("Справочники/Склады","")]
	public class СкладыЗапрос: V82.СправочникиСсылка.Склады,IReturn<СкладыЗапрос>
	{
	}
	[Маршрут("Справочники/Склады/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/Склады/ПоСсылке","{Ссылка}")]
	public class СкладыНайтиПоСсылке: V82.СправочникиСсылка.Склады,IReturn<СкладыНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/Склады/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/Склады/ПоКоду","{Код}")]
	public class СкладыНайтиПоКоду: V82.СправочникиСсылка.Склады,IReturn<СкладыНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/Склады/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/Склады/ПоНаименованию","{Наименование}")]
	public class СкладыНайтиПоНаименованию: V82.СправочникиСсылка.Склады,IReturn<СкладыНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/Склады/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/Склады/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/Склады/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class СкладыВыбратьПоСсылке: V82.СправочникиСсылка.Склады,IReturn<СкладыВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/Склады/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/Склады/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/Склады/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class СкладыВыбратьПоКоду: V82.СправочникиСсылка.Склады,IReturn<СкладыВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/Склады/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/Склады/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/Склады/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class СкладыВыбратьПоНаименованию: V82.СправочникиСсылка.Склады,IReturn<СкладыВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/Склады/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class СкладыСтраницаПоСсылке: V82.СправочникиСсылка.Склады,IReturn<СкладыСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/Склады/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class СкладыСтраницаПоКоду: V82.СправочникиСсылка.Склады,IReturn<СкладыСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/Склады/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class СкладыСтраницаПоНаименованию: V82.СправочникиСсылка.Склады,IReturn<СкладыСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class СкладыОтвет
	{
		public string Ответ {get;set;}
	}

	public class СкладыСервис : Service
	{
		
		public object Get(СкладыНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(СкладыНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			string СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.Склады.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new СкладыОтвет() {Ответ = "Склады c кодом '" + Запрос.Код+"' не найдено."};
			}
			return Ссылка;
		}
		
		public object Get(СкладыНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(СкладыВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			return V82.Справочники.Склады.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс);
		}
		
		public object Get(СкладыВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(СкладыВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(СкладыСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(СкладыСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(СкладыСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(СкладыЗапрос Запрос)
		{
			return new СкладыОтвет {Ответ = "Склады, "};
		}

		public object Post(СкладыЗапрос ЗапросСклады)
		{
			var Ссылка = (СправочникиСсылка.Склады)ЗапросСклады;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}