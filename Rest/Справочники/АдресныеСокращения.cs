
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//AdresnyeSokrashheniya
	[Маршрут("Справочники/АдресныеСокращения","")]
	public class АдресныеСокращенияЗапрос: V82.СправочникиСсылка.АдресныеСокращения,IReturn<АдресныеСокращенияЗапрос>
	{
	}
	[Маршрут("Справочники/АдресныеСокращения/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/АдресныеСокращения/ПоСсылке","{Ссылка}")]
	public class АдресныеСокращенияНайтиПоСсылке: V82.СправочникиСсылка.АдресныеСокращения,IReturn<АдресныеСокращенияНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/АдресныеСокращения/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/АдресныеСокращения/ПоКоду","{Код}")]
	public class АдресныеСокращенияНайтиПоКоду: V82.СправочникиСсылка.АдресныеСокращения,IReturn<АдресныеСокращенияНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/АдресныеСокращения/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/АдресныеСокращения/ПоНаименованию","{Наименование}")]
	public class АдресныеСокращенияНайтиПоНаименованию: V82.СправочникиСсылка.АдресныеСокращения,IReturn<АдресныеСокращенияНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/АдресныеСокращения/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class АдресныеСокращенияВыбратьПоСсылке: V82.СправочникиСсылка.АдресныеСокращения,IReturn<АдресныеСокращенияВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/АдресныеСокращения/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class АдресныеСокращенияВыбратьПоКоду: V82.СправочникиСсылка.АдресныеСокращения,IReturn<АдресныеСокращенияВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public decimal ___Мин {get; set;}
		public decimal ___Макс {get; set;}
	}
	[Маршрут("Справочники/АдресныеСокращения/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class АдресныеСокращенияВыбратьПоНаименованию: V82.СправочникиСсылка.АдресныеСокращения,IReturn<АдресныеСокращенияВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}

	public class АдресныеСокращенияОтвет
	{
		public string Ответ {get;set;}
	}

	public class АдресныеСокращенияСервис : Service
	{
		
		public object Get(АдресныеСокращенияНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(АдресныеСокращенияНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			decimal СтрокаКод = Запрос.Код;
			var Ссылка = V82.Справочники.АдресныеСокращения.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new АдресныеСокращенияОтвет() {Ответ = "АдресныеСокращения c кодом '" + Запрос.Код+"' не найдено."};
			}
			return Ссылка;
		}
		
		public object Get(АдресныеСокращенияНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(АдресныеСокращенияВыбратьПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(АдресныеСокращенияВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(АдресныеСокращенияВыбратьПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(АдресныеСокращенияЗапрос Запрос)
		{
			return new АдресныеСокращенияОтвет {Ответ = "АдресныеСокращения, "};
		}

		public object Post(АдресныеСокращенияЗапрос ЗапросАдресныеСокращения)
		{
			var Ссылка = (СправочникиСсылка.АдресныеСокращения)ЗапросАдресныеСокращения;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}