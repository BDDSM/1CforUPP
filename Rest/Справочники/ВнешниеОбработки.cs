
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//VneshnieObrabotki
	[Маршрут("Справочники/ВнешниеОбработки","")]
	public class ВнешниеОбработкиЗапрос: V82.СправочникиСсылка.ВнешниеОбработки,IReturn<ВнешниеОбработкиЗапрос>
	{
	}
	[Маршрут("Справочники/ВнешниеОбработки/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/ВнешниеОбработки/ПоСсылке","{Ссылка}")]
	public class ВнешниеОбработкиНайтиПоСсылке: V82.СправочникиСсылка.ВнешниеОбработки,IReturn<ВнешниеОбработкиНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/ВнешниеОбработки/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/ВнешниеОбработки/ПоКоду","{Код}")]
	public class ВнешниеОбработкиНайтиПоКоду: V82.СправочникиСсылка.ВнешниеОбработки,IReturn<ВнешниеОбработкиНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/ВнешниеОбработки/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/ВнешниеОбработки/ПоНаименованию","{Наименование}")]
	public class ВнешниеОбработкиНайтиПоНаименованию: V82.СправочникиСсылка.ВнешниеОбработки,IReturn<ВнешниеОбработкиНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/ВнешниеОбработки/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ВнешниеОбработкиВыбратьПоСсылке: V82.СправочникиСсылка.ВнешниеОбработки,IReturn<ВнешниеОбработкиВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ВнешниеОбработки/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class ВнешниеОбработкиВыбратьПоКоду: V82.СправочникиСсылка.ВнешниеОбработки,IReturn<ВнешниеОбработкиВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ВнешниеОбработки/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class ВнешниеОбработкиВыбратьПоНаименованию: V82.СправочникиСсылка.ВнешниеОбработки,IReturn<ВнешниеОбработкиВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}

	public class ВнешниеОбработкиОтвет
	{
		public string Ответ {get;set;}
	}

	public class ВнешниеОбработкиСервис : Service
	{
		
		public object Get(ВнешниеОбработкиНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ВнешниеОбработкиНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			string СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.ВнешниеОбработки.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new ВнешниеОбработкиОтвет() {Ответ = "ВнешниеОбработки c кодом '" + Запрос.Код+"' не найдено."};
			}
			return Ссылка;
		}
		
		public object Get(ВнешниеОбработкиНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ВнешниеОбработкиВыбратьПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ВнешниеОбработкиВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ВнешниеОбработкиВыбратьПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(ВнешниеОбработкиЗапрос Запрос)
		{
			return new ВнешниеОбработкиОтвет {Ответ = "ВнешниеОбработки, "};
		}

		public object Post(ВнешниеОбработкиЗапрос ЗапросВнешниеОбработки)
		{
			var Ссылка = (СправочникиСсылка.ВнешниеОбработки)ЗапросВнешниеОбработки;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}