
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//PodklyuchaemoeOborudovanie
	[Маршрут("Справочники/ПодключаемоеОборудование","")]
	public class ПодключаемоеОборудованиеЗапрос: V82.СправочникиСсылка.ПодключаемоеОборудование,IReturn<ПодключаемоеОборудованиеЗапрос>
	{
	}
	[Маршрут("Справочники/ПодключаемоеОборудование/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/ПодключаемоеОборудование/ПоСсылке","{Ссылка}")]
	public class ПодключаемоеОборудованиеНайтиПоСсылке: V82.СправочникиСсылка.ПодключаемоеОборудование,IReturn<ПодключаемоеОборудованиеНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/ПодключаемоеОборудование/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/ПодключаемоеОборудование/ПоНаименованию","{Наименование}")]
	public class ПодключаемоеОборудованиеНайтиПоНаименованию: V82.СправочникиСсылка.ПодключаемоеОборудование,IReturn<ПодключаемоеОборудованиеНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/ПодключаемоеОборудование/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/ПодключаемоеОборудование/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ПодключаемоеОборудование/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ПодключаемоеОборудованиеВыбратьПоСсылке: V82.СправочникиСсылка.ПодключаемоеОборудование,IReturn<ПодключаемоеОборудованиеВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ПодключаемоеОборудование/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/ПодключаемоеОборудование/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ПодключаемоеОборудование/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class ПодключаемоеОборудованиеВыбратьПоНаименованию: V82.СправочникиСсылка.ПодключаемоеОборудование,IReturn<ПодключаемоеОборудованиеВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ПодключаемоеОборудование/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ПодключаемоеОборудованиеСтраницаПоСсылке: V82.СправочникиСсылка.ПодключаемоеОборудование,IReturn<ПодключаемоеОборудованиеСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ПодключаемоеОборудование/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class ПодключаемоеОборудованиеСтраницаПоНаименованию: V82.СправочникиСсылка.ПодключаемоеОборудование,IReturn<ПодключаемоеОборудованиеСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ПодключаемоеОборудованиеОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ПодключаемоеОборудованиеСервис : Service
	{
		
		public object Get(ПодключаемоеОборудованиеЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ПодключаемоеОборудованиеНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Справочники.ПодключаемоеОборудование.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ПодключаемоеОборудованиеОтвет() { Ответ = "ПодключаемоеОборудование c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ПодключаемоеОборудованиеНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ПодключаемоеОборудованиеВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.ПодключаемоеОборудование.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ПодключаемоеОборудованиеВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ПодключаемоеОборудованиеСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ПодключаемоеОборудованиеСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(ПодключаемоеОборудованиеЗапрос Запрос)
		{
			return new ПодключаемоеОборудованиеОтвет {Ответ = "ПодключаемоеОборудование, "};
		}

		public object Post(ПодключаемоеОборудованиеЗапрос ЗапросПодключаемоеОборудование)
		{
			var Ссылка = (СправочникиСсылка.ПодключаемоеОборудование)ЗапросПодключаемоеОборудование;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}