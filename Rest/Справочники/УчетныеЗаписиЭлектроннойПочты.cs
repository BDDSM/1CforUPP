
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//UchetnyeZapisiEHlektronnojjPochty
	[Маршрут("Справочники/УчетныеЗаписиЭлектроннойПочты","")]
	public class УчетныеЗаписиЭлектроннойПочтыЗапрос: V82.СправочникиСсылка.УчетныеЗаписиЭлектроннойПочты,IReturn<УчетныеЗаписиЭлектроннойПочтыЗапрос>
	{
	}
	[Маршрут("Справочники/УчетныеЗаписиЭлектроннойПочты/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/УчетныеЗаписиЭлектроннойПочты/ПоСсылке","{Ссылка}")]
	public class УчетныеЗаписиЭлектроннойПочтыНайтиПоСсылке: V82.СправочникиСсылка.УчетныеЗаписиЭлектроннойПочты,IReturn<УчетныеЗаписиЭлектроннойПочтыНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/УчетныеЗаписиЭлектроннойПочты/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/УчетныеЗаписиЭлектроннойПочты/ПоКоду","{Код}")]
	public class УчетныеЗаписиЭлектроннойПочтыНайтиПоКоду: V82.СправочникиСсылка.УчетныеЗаписиЭлектроннойПочты,IReturn<УчетныеЗаписиЭлектроннойПочтыНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/УчетныеЗаписиЭлектроннойПочты/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/УчетныеЗаписиЭлектроннойПочты/ПоНаименованию","{Наименование}")]
	public class УчетныеЗаписиЭлектроннойПочтыНайтиПоНаименованию: V82.СправочникиСсылка.УчетныеЗаписиЭлектроннойПочты,IReturn<УчетныеЗаписиЭлектроннойПочтыНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/УчетныеЗаписиЭлектроннойПочты/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/УчетныеЗаписиЭлектроннойПочты/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/УчетныеЗаписиЭлектроннойПочты/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class УчетныеЗаписиЭлектроннойПочтыВыбратьПоСсылке: V82.СправочникиСсылка.УчетныеЗаписиЭлектроннойПочты,IReturn<УчетныеЗаписиЭлектроннойПочтыВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/УчетныеЗаписиЭлектроннойПочты/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/УчетныеЗаписиЭлектроннойПочты/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/УчетныеЗаписиЭлектроннойПочты/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class УчетныеЗаписиЭлектроннойПочтыВыбратьПоКоду: V82.СправочникиСсылка.УчетныеЗаписиЭлектроннойПочты,IReturn<УчетныеЗаписиЭлектроннойПочтыВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/УчетныеЗаписиЭлектроннойПочты/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/УчетныеЗаписиЭлектроннойПочты/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/УчетныеЗаписиЭлектроннойПочты/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class УчетныеЗаписиЭлектроннойПочтыВыбратьПоНаименованию: V82.СправочникиСсылка.УчетныеЗаписиЭлектроннойПочты,IReturn<УчетныеЗаписиЭлектроннойПочтыВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/УчетныеЗаписиЭлектроннойПочты/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class УчетныеЗаписиЭлектроннойПочтыСтраницаПоСсылке: V82.СправочникиСсылка.УчетныеЗаписиЭлектроннойПочты,IReturn<УчетныеЗаписиЭлектроннойПочтыСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/УчетныеЗаписиЭлектроннойПочты/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class УчетныеЗаписиЭлектроннойПочтыСтраницаПоКоду: V82.СправочникиСсылка.УчетныеЗаписиЭлектроннойПочты,IReturn<УчетныеЗаписиЭлектроннойПочтыСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/УчетныеЗаписиЭлектроннойПочты/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class УчетныеЗаписиЭлектроннойПочтыСтраницаПоНаименованию: V82.СправочникиСсылка.УчетныеЗаписиЭлектроннойПочты,IReturn<УчетныеЗаписиЭлектроннойПочтыСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class УчетныеЗаписиЭлектроннойПочтыОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class УчетныеЗаписиЭлектроннойПочтыСервис : Service
	{
		
		public object Get(УчетныеЗаписиЭлектроннойПочтыЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(УчетныеЗаписиЭлектроннойПочтыНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new УчетныеЗаписиЭлектроннойПочтыОтвет() { Ответ = "УчетныеЗаписиЭлектроннойПочты c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(УчетныеЗаписиЭлектроннойПочтыНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			var СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new УчетныеЗаписиЭлектроннойПочтыОтвет() {Ответ = "УчетныеЗаписиЭлектроннойПочты c кодом '" + Запрос.Код + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(УчетныеЗаписиЭлектроннойПочтыНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(УчетныеЗаписиЭлектроннойПочтыВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.УчетныеЗаписиЭлектроннойПочты.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(УчетныеЗаписиЭлектроннойПочтыВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(УчетныеЗаписиЭлектроннойПочтыВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(УчетныеЗаписиЭлектроннойПочтыСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(УчетныеЗаписиЭлектроннойПочтыСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(УчетныеЗаписиЭлектроннойПочтыСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(УчетныеЗаписиЭлектроннойПочтыЗапрос Запрос)
		{
			return new УчетныеЗаписиЭлектроннойПочтыОтвет {Ответ = "УчетныеЗаписиЭлектроннойПочты, "};
		}

		public object Post(УчетныеЗаписиЭлектроннойПочтыЗапрос ЗапросУчетныеЗаписиЭлектроннойПочты)
		{
			var Ссылка = (СправочникиСсылка.УчетныеЗаписиЭлектроннойПочты)ЗапросУчетныеЗаписиЭлектроннойПочты;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}