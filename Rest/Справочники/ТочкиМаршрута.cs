
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//TochkiMarshruta
	[Маршрут("Справочники/ТочкиМаршрута","")]
	public class ТочкиМаршрутаЗапрос: V82.СправочникиСсылка.ТочкиМаршрута,IReturn<ТочкиМаршрутаЗапрос>
	{
	}
	[Маршрут("Справочники/ТочкиМаршрута/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/ТочкиМаршрута/ПоСсылке","{Ссылка}")]
	public class ТочкиМаршрутаНайтиПоСсылке: V82.СправочникиСсылка.ТочкиМаршрута,IReturn<ТочкиМаршрутаНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/ТочкиМаршрута/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/ТочкиМаршрута/ПоКоду","{Код}")]
	public class ТочкиМаршрутаНайтиПоКоду: V82.СправочникиСсылка.ТочкиМаршрута,IReturn<ТочкиМаршрутаНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/ТочкиМаршрута/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/ТочкиМаршрута/ПоНаименованию","{Наименование}")]
	public class ТочкиМаршрутаНайтиПоНаименованию: V82.СправочникиСсылка.ТочкиМаршрута,IReturn<ТочкиМаршрутаНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/ТочкиМаршрута/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/ТочкиМаршрута/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ТочкиМаршрута/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ТочкиМаршрутаВыбратьПоСсылке: V82.СправочникиСсылка.ТочкиМаршрута,IReturn<ТочкиМаршрутаВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ТочкиМаршрута/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/ТочкиМаршрута/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ТочкиМаршрута/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class ТочкиМаршрутаВыбратьПоКоду: V82.СправочникиСсылка.ТочкиМаршрута,IReturn<ТочкиМаршрутаВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ТочкиМаршрута/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/ТочкиМаршрута/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ТочкиМаршрута/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class ТочкиМаршрутаВыбратьПоНаименованию: V82.СправочникиСсылка.ТочкиМаршрута,IReturn<ТочкиМаршрутаВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ТочкиМаршрута/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ТочкиМаршрутаСтраницаПоСсылке: V82.СправочникиСсылка.ТочкиМаршрута,IReturn<ТочкиМаршрутаСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ТочкиМаршрута/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class ТочкиМаршрутаСтраницаПоКоду: V82.СправочникиСсылка.ТочкиМаршрута,IReturn<ТочкиМаршрутаСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ТочкиМаршрута/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class ТочкиМаршрутаСтраницаПоНаименованию: V82.СправочникиСсылка.ТочкиМаршрута,IReturn<ТочкиМаршрутаСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ТочкиМаршрутаОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ТочкиМаршрутаСервис : Service
	{
		
		public object Get(ТочкиМаршрутаЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ТочкиМаршрутаНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Справочники.ТочкиМаршрута.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ТочкиМаршрутаОтвет() { Ответ = "ТочкиМаршрута c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ТочкиМаршрутаНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			var СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.ТочкиМаршрута.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new ТочкиМаршрутаОтвет() {Ответ = "ТочкиМаршрута c кодом '" + Запрос.Код + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ТочкиМаршрутаНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ТочкиМаршрутаВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.ТочкиМаршрута.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ТочкиМаршрутаВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ТочкиМаршрутаВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ТочкиМаршрутаСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ТочкиМаршрутаСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ТочкиМаршрутаСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(ТочкиМаршрутаЗапрос Запрос)
		{
			return new ТочкиМаршрутаОтвет {Ответ = "ТочкиМаршрута, "};
		}

		public object Post(ТочкиМаршрутаЗапрос ЗапросТочкиМаршрута)
		{
			var Ссылка = (СправочникиСсылка.ТочкиМаршрута)ЗапросТочкиМаршрута;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}