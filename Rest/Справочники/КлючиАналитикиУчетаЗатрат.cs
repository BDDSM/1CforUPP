
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//KlyuchiAnalitikiUchetaZatrat
	[Маршрут("Справочники/КлючиАналитикиУчетаЗатрат","")]
	public class КлючиАналитикиУчетаЗатратЗапрос: V82.СправочникиСсылка.КлючиАналитикиУчетаЗатрат,IReturn<КлючиАналитикиУчетаЗатратЗапрос>
	{
	}
	[Маршрут("Справочники/КлючиАналитикиУчетаЗатрат/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/КлючиАналитикиУчетаЗатрат/ПоСсылке","{Ссылка}")]
	public class КлючиАналитикиУчетаЗатратНайтиПоСсылке: V82.СправочникиСсылка.КлючиАналитикиУчетаЗатрат,IReturn<КлючиАналитикиУчетаЗатратНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/КлючиАналитикиУчетаЗатрат/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/КлючиАналитикиУчетаЗатрат/ПоНаименованию","{Наименование}")]
	public class КлючиАналитикиУчетаЗатратНайтиПоНаименованию: V82.СправочникиСсылка.КлючиАналитикиУчетаЗатрат,IReturn<КлючиАналитикиУчетаЗатратНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/КлючиАналитикиУчетаЗатрат/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/КлючиАналитикиУчетаЗатрат/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/КлючиАналитикиУчетаЗатрат/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class КлючиАналитикиУчетаЗатратВыбратьПоСсылке: V82.СправочникиСсылка.КлючиАналитикиУчетаЗатрат,IReturn<КлючиАналитикиУчетаЗатратВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/КлючиАналитикиУчетаЗатрат/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/КлючиАналитикиУчетаЗатрат/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/КлючиАналитикиУчетаЗатрат/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class КлючиАналитикиУчетаЗатратВыбратьПоНаименованию: V82.СправочникиСсылка.КлючиАналитикиУчетаЗатрат,IReturn<КлючиАналитикиУчетаЗатратВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/КлючиАналитикиУчетаЗатрат/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class КлючиАналитикиУчетаЗатратСтраницаПоСсылке: V82.СправочникиСсылка.КлючиАналитикиУчетаЗатрат,IReturn<КлючиАналитикиУчетаЗатратСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/КлючиАналитикиУчетаЗатрат/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class КлючиАналитикиУчетаЗатратСтраницаПоНаименованию: V82.СправочникиСсылка.КлючиАналитикиУчетаЗатрат,IReturn<КлючиАналитикиУчетаЗатратСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class КлючиАналитикиУчетаЗатратОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class КлючиАналитикиУчетаЗатратСервис : Service
	{
		
		public object Get(КлючиАналитикиУчетаЗатратЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(КлючиАналитикиУчетаЗатратНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Справочники.КлючиАналитикиУчетаЗатрат.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new КлючиАналитикиУчетаЗатратОтвет() { Ответ = "КлючиАналитикиУчетаЗатрат c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(КлючиАналитикиУчетаЗатратНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(КлючиАналитикиУчетаЗатратВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.КлючиАналитикиУчетаЗатрат.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(КлючиАналитикиУчетаЗатратВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(КлючиАналитикиУчетаЗатратСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(КлючиАналитикиУчетаЗатратСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(КлючиАналитикиУчетаЗатратЗапрос Запрос)
		{
			return new КлючиАналитикиУчетаЗатратОтвет {Ответ = "КлючиАналитикиУчетаЗатрат, "};
		}

		public object Post(КлючиАналитикиУчетаЗатратЗапрос ЗапросКлючиАналитикиУчетаЗатрат)
		{
			var Ссылка = (СправочникиСсылка.КлючиАналитикиУчетаЗатрат)ЗапросКлючиАналитикиУчетаЗатрат;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}