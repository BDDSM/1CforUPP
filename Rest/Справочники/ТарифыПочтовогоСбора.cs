
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//TarifyPochtovogoSbora
	[Маршрут("Справочники/ТарифыПочтовогоСбора","")]
	public class ТарифыПочтовогоСбораЗапрос: V82.СправочникиСсылка.ТарифыПочтовогоСбора,IReturn<ТарифыПочтовогоСбораЗапрос>
	{
	}
	[Маршрут("Справочники/ТарифыПочтовогоСбора/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/ТарифыПочтовогоСбора/ПоСсылке","{Ссылка}")]
	public class ТарифыПочтовогоСбораНайтиПоСсылке: V82.СправочникиСсылка.ТарифыПочтовогоСбора,IReturn<ТарифыПочтовогоСбораНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/ТарифыПочтовогоСбора/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/ТарифыПочтовогоСбора/ПоКоду","{Код}")]
	public class ТарифыПочтовогоСбораНайтиПоКоду: V82.СправочникиСсылка.ТарифыПочтовогоСбора,IReturn<ТарифыПочтовогоСбораНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/ТарифыПочтовогоСбора/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/ТарифыПочтовогоСбора/ПоНаименованию","{Наименование}")]
	public class ТарифыПочтовогоСбораНайтиПоНаименованию: V82.СправочникиСсылка.ТарифыПочтовогоСбора,IReturn<ТарифыПочтовогоСбораНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/ТарифыПочтовогоСбора/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/ТарифыПочтовогоСбора/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ТарифыПочтовогоСбора/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ТарифыПочтовогоСбораВыбратьПоСсылке: V82.СправочникиСсылка.ТарифыПочтовогоСбора,IReturn<ТарифыПочтовогоСбораВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ТарифыПочтовогоСбора/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/ТарифыПочтовогоСбора/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ТарифыПочтовогоСбора/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class ТарифыПочтовогоСбораВыбратьПоКоду: V82.СправочникиСсылка.ТарифыПочтовогоСбора,IReturn<ТарифыПочтовогоСбораВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ТарифыПочтовогоСбора/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/ТарифыПочтовогоСбора/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ТарифыПочтовогоСбора/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class ТарифыПочтовогоСбораВыбратьПоНаименованию: V82.СправочникиСсылка.ТарифыПочтовогоСбора,IReturn<ТарифыПочтовогоСбораВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ТарифыПочтовогоСбора/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ТарифыПочтовогоСбораСтраницаПоСсылке: V82.СправочникиСсылка.ТарифыПочтовогоСбора,IReturn<ТарифыПочтовогоСбораСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ТарифыПочтовогоСбора/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class ТарифыПочтовогоСбораСтраницаПоКоду: V82.СправочникиСсылка.ТарифыПочтовогоСбора,IReturn<ТарифыПочтовогоСбораСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ТарифыПочтовогоСбора/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class ТарифыПочтовогоСбораСтраницаПоНаименованию: V82.СправочникиСсылка.ТарифыПочтовогоСбора,IReturn<ТарифыПочтовогоСбораСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ТарифыПочтовогоСбораОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ТарифыПочтовогоСбораСервис : Service
	{
		
		public object Get(ТарифыПочтовогоСбораЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ТарифыПочтовогоСбораНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Справочники.ТарифыПочтовогоСбора.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new ТарифыПочтовогоСбораОтвет() { Ответ = "ТарифыПочтовогоСбора c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ТарифыПочтовогоСбораНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			var СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.ТарифыПочтовогоСбора.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new ТарифыПочтовогоСбораОтвет() {Ответ = "ТарифыПочтовогоСбора c кодом '" + Запрос.Код + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ТарифыПочтовогоСбораНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ТарифыПочтовогоСбораВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.ТарифыПочтовогоСбора.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ТарифыПочтовогоСбораВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ТарифыПочтовогоСбораВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ТарифыПочтовогоСбораСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ТарифыПочтовогоСбораСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ТарифыПочтовогоСбораСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(ТарифыПочтовогоСбораЗапрос Запрос)
		{
			return new ТарифыПочтовогоСбораОтвет {Ответ = "ТарифыПочтовогоСбора, "};
		}

		public object Post(ТарифыПочтовогоСбораЗапрос ЗапросТарифыПочтовогоСбора)
		{
			var Ссылка = (СправочникиСсылка.ТарифыПочтовогоСбора)ЗапросТарифыПочтовогоСбора;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}