
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//Regiony
	[Маршрут("Справочники/Регионы","")]
	public class РегионыЗапрос: V82.СправочникиСсылка.Регионы,IReturn<РегионыЗапрос>
	{
	}
	[Маршрут("Справочники/Регионы/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/Регионы/ПоСсылке","{Ссылка}")]
	public class РегионыНайтиПоСсылке: V82.СправочникиСсылка.Регионы,IReturn<РегионыНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/Регионы/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/Регионы/ПоКоду","{Код}")]
	public class РегионыНайтиПоКоду: V82.СправочникиСсылка.Регионы,IReturn<РегионыНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/Регионы/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/Регионы/ПоНаименованию","{Наименование}")]
	public class РегионыНайтиПоНаименованию: V82.СправочникиСсылка.Регионы,IReturn<РегионыНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/Регионы/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/Регионы/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/Регионы/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class РегионыВыбратьПоСсылке: V82.СправочникиСсылка.Регионы,IReturn<РегионыВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/Регионы/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/Регионы/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/Регионы/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class РегионыВыбратьПоКоду: V82.СправочникиСсылка.Регионы,IReturn<РегионыВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/Регионы/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/Регионы/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/Регионы/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class РегионыВыбратьПоНаименованию: V82.СправочникиСсылка.Регионы,IReturn<РегионыВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/Регионы/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class РегионыСтраницаПоСсылке: V82.СправочникиСсылка.Регионы,IReturn<РегионыСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/Регионы/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class РегионыСтраницаПоКоду: V82.СправочникиСсылка.Регионы,IReturn<РегионыСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/Регионы/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class РегионыСтраницаПоНаименованию: V82.СправочникиСсылка.Регионы,IReturn<РегионыСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class РегионыОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class РегионыСервис : Service
	{
		
		public object Get(РегионыЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(РегионыНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Справочники.Регионы.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new РегионыОтвет() { Ответ = "Регионы c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(РегионыНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			var СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.Регионы.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new РегионыОтвет() {Ответ = "Регионы c кодом '" + Запрос.Код + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(РегионыНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(РегионыВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.Регионы.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(РегионыВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(РегионыВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(РегионыСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(РегионыСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(РегионыСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(РегионыЗапрос Запрос)
		{
			return new РегионыОтвет {Ответ = "Регионы, "};
		}

		public object Post(РегионыЗапрос ЗапросРегионы)
		{
			var Ссылка = (СправочникиСсылка.Регионы)ЗапросРегионы;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}