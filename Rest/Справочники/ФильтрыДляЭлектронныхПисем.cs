
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//FiltryDlyaEHlektronnykhPisem
	[Маршрут("Справочники/ФильтрыДляЭлектронныхПисем","")]
	public class ФильтрыДляЭлектронныхПисемЗапрос: V82.СправочникиСсылка.ФильтрыДляЭлектронныхПисем,IReturn<ФильтрыДляЭлектронныхПисемЗапрос>
	{
	}
	[Маршрут("Справочники/ФильтрыДляЭлектронныхПисем/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/ФильтрыДляЭлектронныхПисем/ПоСсылке","{Ссылка}")]
	public class ФильтрыДляЭлектронныхПисемНайтиПоСсылке: V82.СправочникиСсылка.ФильтрыДляЭлектронныхПисем,IReturn<ФильтрыДляЭлектронныхПисемНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/ФильтрыДляЭлектронныхПисем/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/ФильтрыДляЭлектронныхПисем/ПоКоду","{Код}")]
	public class ФильтрыДляЭлектронныхПисемНайтиПоКоду: V82.СправочникиСсылка.ФильтрыДляЭлектронныхПисем,IReturn<ФильтрыДляЭлектронныхПисемНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/ФильтрыДляЭлектронныхПисем/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/ФильтрыДляЭлектронныхПисем/ПоНаименованию","{Наименование}")]
	public class ФильтрыДляЭлектронныхПисемНайтиПоНаименованию: V82.СправочникиСсылка.ФильтрыДляЭлектронныхПисем,IReturn<ФильтрыДляЭлектронныхПисемНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/ФильтрыДляЭлектронныхПисем/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ФильтрыДляЭлектронныхПисемВыбратьПоСсылке: V82.СправочникиСсылка.ФильтрыДляЭлектронныхПисем,IReturn<ФильтрыДляЭлектронныхПисемВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ФильтрыДляЭлектронныхПисем/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class ФильтрыДляЭлектронныхПисемВыбратьПоКоду: V82.СправочникиСсылка.ФильтрыДляЭлектронныхПисем,IReturn<ФильтрыДляЭлектронныхПисемВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ФильтрыДляЭлектронныхПисем/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class ФильтрыДляЭлектронныхПисемВыбратьПоНаименованию: V82.СправочникиСсылка.ФильтрыДляЭлектронныхПисем,IReturn<ФильтрыДляЭлектронныхПисемВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}

	public class ФильтрыДляЭлектронныхПисемОтвет
	{
		public string Ответ {get;set;}
	}

	public class ФильтрыДляЭлектронныхПисемСервис : Service
	{
		
		public object Get(ФильтрыДляЭлектронныхПисемНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ФильтрыДляЭлектронныхПисемНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			string СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.ФильтрыДляЭлектронныхПисем.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new ФильтрыДляЭлектронныхПисемОтвет() {Ответ = "ФильтрыДляЭлектронныхПисем c кодом '" + Запрос.Код+"' не найдено."};
			}
			return Ссылка;
		}
		
		public object Get(ФильтрыДляЭлектронныхПисемНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ФильтрыДляЭлектронныхПисемВыбратьПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ФильтрыДляЭлектронныхПисемВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ФильтрыДляЭлектронныхПисемВыбратьПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(ФильтрыДляЭлектронныхПисемЗапрос Запрос)
		{
			return new ФильтрыДляЭлектронныхПисемОтвет {Ответ = "ФильтрыДляЭлектронныхПисем, "};
		}

		public object Post(ФильтрыДляЭлектронныхПисемЗапрос ЗапросФильтрыДляЭлектронныхПисем)
		{
			var Ссылка = (СправочникиСсылка.ФильтрыДляЭлектронныхПисем)ЗапросФильтрыДляЭлектронныхПисем;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}