
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//GruppySobytijj
	[Маршрут("Справочники/ГруппыСобытий","")]
	public class ГруппыСобытийЗапрос: V82.СправочникиСсылка.ГруппыСобытий,IReturn<ГруппыСобытийЗапрос>
	{
	}
	[Маршрут("Справочники/ГруппыСобытий/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/ГруппыСобытий/ПоСсылке","{Ссылка}")]
	public class ГруппыСобытийНайтиПоСсылке: V82.СправочникиСсылка.ГруппыСобытий,IReturn<ГруппыСобытийНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/ГруппыСобытий/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/ГруппыСобытий/ПоКоду","{Код}")]
	public class ГруппыСобытийНайтиПоКоду: V82.СправочникиСсылка.ГруппыСобытий,IReturn<ГруппыСобытийНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/ГруппыСобытий/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/ГруппыСобытий/ПоНаименованию","{Наименование}")]
	public class ГруппыСобытийНайтиПоНаименованию: V82.СправочникиСсылка.ГруппыСобытий,IReturn<ГруппыСобытийНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/ГруппыСобытий/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/ГруппыСобытий/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ГруппыСобытий/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class ГруппыСобытийВыбратьПоСсылке: V82.СправочникиСсылка.ГруппыСобытий,IReturn<ГруппыСобытийВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/ГруппыСобытий/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/ГруппыСобытий/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ГруппыСобытий/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class ГруппыСобытийВыбратьПоКоду: V82.СправочникиСсылка.ГруппыСобытий,IReturn<ГруппыСобытийВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ГруппыСобытий/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/ГруппыСобытий/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/ГруппыСобытий/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class ГруппыСобытийВыбратьПоНаименованию: V82.СправочникиСсылка.ГруппыСобытий,IReturn<ГруппыСобытийВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/ГруппыСобытий/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class ГруппыСобытийСтраницаПоСсылке: V82.СправочникиСсылка.ГруппыСобытий,IReturn<ГруппыСобытийСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ГруппыСобытий/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class ГруппыСобытийСтраницаПоКоду: V82.СправочникиСсылка.ГруппыСобытий,IReturn<ГруппыСобытийСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/ГруппыСобытий/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class ГруппыСобытийСтраницаПоНаименованию: V82.СправочникиСсылка.ГруппыСобытий,IReturn<ГруппыСобытийСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class ГруппыСобытийОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class ГруппыСобытийСервис : Service
	{
		
		public object Get(ГруппыСобытийЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(ГруппыСобытийНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ГруппыСобытийНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			var СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.ГруппыСобытий.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new ГруппыСобытийОтвет() {Ответ = "ГруппыСобытий c кодом '" + Запрос.Код + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(ГруппыСобытийНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ГруппыСобытийВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.ГруппыСобытий.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(ГруппыСобытийВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ГруппыСобытийВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(ГруппыСобытийСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(ГруппыСобытийСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(ГруппыСобытийСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(ГруппыСобытийЗапрос Запрос)
		{
			return new ГруппыСобытийОтвет {Ответ = "ГруппыСобытий, "};
		}

		public object Post(ГруппыСобытийЗапрос ЗапросГруппыСобытий)
		{
			var Ссылка = (СправочникиСсылка.ГруппыСобытий)ЗапросГруппыСобытий;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}