
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//RoliKontaktnykhLic
	[Маршрут("Справочники/РолиКонтактныхЛиц","")]
	public class РолиКонтактныхЛицЗапрос: V82.СправочникиСсылка.РолиКонтактныхЛиц,IReturn<РолиКонтактныхЛицЗапрос>
	{
	}
	[Маршрут("Справочники/РолиКонтактныхЛиц/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/РолиКонтактныхЛиц/ПоСсылке","{Ссылка}")]
	public class РолиКонтактныхЛицНайтиПоСсылке: V82.СправочникиСсылка.РолиКонтактныхЛиц,IReturn<РолиКонтактныхЛицНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/РолиКонтактныхЛиц/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/РолиКонтактныхЛиц/ПоКоду","{Код}")]
	public class РолиКонтактныхЛицНайтиПоКоду: V82.СправочникиСсылка.РолиКонтактныхЛиц,IReturn<РолиКонтактныхЛицНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/РолиКонтактныхЛиц/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/РолиКонтактныхЛиц/ПоНаименованию","{Наименование}")]
	public class РолиКонтактныхЛицНайтиПоНаименованию: V82.СправочникиСсылка.РолиКонтактныхЛиц,IReturn<РолиКонтактныхЛицНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/РолиКонтактныхЛиц/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/РолиКонтактныхЛиц/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/РолиКонтактныхЛиц/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class РолиКонтактныхЛицВыбратьПоСсылке: V82.СправочникиСсылка.РолиКонтактныхЛиц,IReturn<РолиКонтактныхЛицВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/РолиКонтактныхЛиц/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/РолиКонтактныхЛиц/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/РолиКонтактныхЛиц/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class РолиКонтактныхЛицВыбратьПоКоду: V82.СправочникиСсылка.РолиКонтактныхЛиц,IReturn<РолиКонтактныхЛицВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/РолиКонтактныхЛиц/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/РолиКонтактныхЛиц/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/РолиКонтактныхЛиц/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class РолиКонтактныхЛицВыбратьПоНаименованию: V82.СправочникиСсылка.РолиКонтактныхЛиц,IReturn<РолиКонтактныхЛицВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/РолиКонтактныхЛиц/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class РолиКонтактныхЛицСтраницаПоСсылке: V82.СправочникиСсылка.РолиКонтактныхЛиц,IReturn<РолиКонтактныхЛицСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/РолиКонтактныхЛиц/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class РолиКонтактныхЛицСтраницаПоКоду: V82.СправочникиСсылка.РолиКонтактныхЛиц,IReturn<РолиКонтактныхЛицСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/РолиКонтактныхЛиц/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class РолиКонтактныхЛицСтраницаПоНаименованию: V82.СправочникиСсылка.РолиКонтактныхЛиц,IReturn<РолиКонтактныхЛицСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class РолиКонтактныхЛицОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class РолиКонтактныхЛицСервис : Service
	{
		
		public object Get(РолиКонтактныхЛицЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(РолиКонтактныхЛицНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Справочники.РолиКонтактныхЛиц.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new РолиКонтактныхЛицОтвет() { Ответ = "РолиКонтактныхЛиц c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(РолиКонтактныхЛицНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			var СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.РолиКонтактныхЛиц.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new РолиКонтактныхЛицОтвет() {Ответ = "РолиКонтактныхЛиц c кодом '" + Запрос.Код + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(РолиКонтактныхЛицНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(РолиКонтактныхЛицВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.РолиКонтактныхЛиц.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(РолиКонтактныхЛицВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(РолиКонтактныхЛицВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(РолиКонтактныхЛицСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(РолиКонтактныхЛицСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(РолиКонтактныхЛицСтраницаПоНаименованию Запрос)
		{
			return null;
		}

		public object Any(РолиКонтактныхЛицЗапрос Запрос)
		{
			return new РолиКонтактныхЛицОтвет {Ответ = "РолиКонтактныхЛиц, "};
		}

		public object Post(РолиКонтактныхЛицЗапрос ЗапросРолиКонтактныхЛиц)
		{
			var Ссылка = (СправочникиСсылка.РолиКонтактныхЛиц)ЗапросРолиКонтактныхЛиц;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}