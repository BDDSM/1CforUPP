
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//MestaKHraneniya
	[Маршрут("Справочники/МестаХранения","")]
	public class МестаХраненияЗапрос: V82.СправочникиСсылка.МестаХранения,IReturn<МестаХраненияЗапрос>
	{
	}
	[Маршрут("Справочники/МестаХранения/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/МестаХранения/ПоСсылке","{Ссылка}")]
	public class МестаХраненияНайтиПоСсылке: V82.СправочникиСсылка.МестаХранения,IReturn<МестаХраненияНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/МестаХранения/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/МестаХранения/ПоКоду","{Код}")]
	public class МестаХраненияНайтиПоКоду: V82.СправочникиСсылка.МестаХранения,IReturn<МестаХраненияНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/МестаХранения/НайтиПоНаименованию","{Наименование}")]
	[Маршрут("Справочники/МестаХранения/ПоНаименованию","{Наименование}")]
	public class МестаХраненияНайтиПоНаименованию: V82.СправочникиСсылка.МестаХранения,IReturn<МестаХраненияНайтиПоНаименованию>
	{
	}
	[Маршрут("Справочники/МестаХранения/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/МестаХранения/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/МестаХранения/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class МестаХраненияВыбратьПоСсылке: V82.СправочникиСсылка.МестаХранения,IReturn<МестаХраненияВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/МестаХранения/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/МестаХранения/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/МестаХранения/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class МестаХраненияВыбратьПоКоду: V82.СправочникиСсылка.МестаХранения,IReturn<МестаХраненияВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/МестаХранения/ВыбратьПоНаименованию","{___Первые}")]
	[Маршрут("Справочники/МестаХранения/ВыбратьПоНаименованию","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/МестаХранения/ВыбратьПоНаименованию","{___Первые}/{___Мин}/{___Макс}")]
	public class МестаХраненияВыбратьПоНаименованию: V82.СправочникиСсылка.МестаХранения,IReturn<МестаХраненияВыбратьПоНаименованию>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/МестаХранения/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class МестаХраненияСтраницаПоСсылке: V82.СправочникиСсылка.МестаХранения,IReturn<МестаХраненияСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/МестаХранения/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class МестаХраненияСтраницаПоКоду: V82.СправочникиСсылка.МестаХранения,IReturn<МестаХраненияСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/МестаХранения/СтраницаПоНаименованию","{___Размер}/{___Номер}")]
	public class МестаХраненияСтраницаПоНаименованию: V82.СправочникиСсылка.МестаХранения,IReturn<МестаХраненияСтраницаПоНаименованию>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/МестаХранения/ИерархияВыбратьПоСсылке","{___Родитель}/{___Режим}/{___Первые}")]
	[Маршрут("Справочники/МестаХранения/ИерархияВыбратьПоСсылке","{___Родитель}/{___Режим}/{___Первые}/{___Мин}")]
	[Маршрут("Справочники/МестаХранения/ИерархияВыбратьПоСсылке","{___Родитель}/{___Режим}/{___Первые}/{___Мин}/{___Макс}")]
	public class МестаХраненияИерархияВыбратьПоСсылке: V82.СправочникиСсылка.МестаХранения,IReturn<МестаХраненияИерархияВыбратьПоСсылке>
	{
		public Guid ___Родитель {get; set;}
		public int ___Режим {get; set;}
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/МестаХранения/ИерархияСтраницаПоСсылке","{___Родитель}/{___Режим}/{___Размер}/{___Номер}")]
	public class МестаХраненияИерархияСтраницаПоСсылке: V82.СправочникиСсылка.МестаХранения,IReturn<МестаХраненияИерархияСтраницаПоСсылке>
	{
		public Guid ___Родитель {get; set;}
		public int ___Режим {get; set;}
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class МестаХраненияОтвет
	{
		public string Ответ {get;set;}
	}

	public partial class МестаХраненияСервис : Service
	{
		
		public object Get(МестаХраненияЗапрос Запрос)
		{
			return null;
		}
		
		public object Get(МестаХраненияНайтиПоСсылке Запрос)
		{
			if (Запрос.Ссылка == null)
			{
				return null;
			}
			var Ссылка = V82.Справочники.МестаХранения.НайтиПоСсылке(Запрос.Ссылка);
			if (Ссылка == null)
			{
				return new МестаХраненияОтвет() { Ответ = "МестаХранения c ссылкой '" + Запрос.Ссылка + "' не найден." };
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(МестаХраненияНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			var СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.МестаХранения.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new МестаХраненияОтвет() {Ответ = "МестаХранения c кодом '" + Запрос.Код + "' не найдено."};
			}
			return Ссылка.ПолучитьОбъект();
		}
		
		public object Get(МестаХраненияНайтиПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(МестаХраненияВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.МестаХранения.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(МестаХраненияВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(МестаХраненияВыбратьПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(МестаХраненияСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(МестаХраненияСтраницаПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(МестаХраненияСтраницаПоНаименованию Запрос)
		{
			return null;
		}
		
		public object Get(МестаХраненияИерархияВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			var Коллекция = new List<object>();
			foreach (var Ссылка in V82.Справочники.МестаХранения.ИерархияВыбратьПоСсылке(Запрос.___Родитель,Запрос.___Режим,Запрос.___Первые, Запрос.___Мин, Запрос.___Макс))
			{
				Коллекция.Add(Ссылка.ПолучитьОбъект());
			}
			return Коллекция;
		}
		
		public object Get(МестаХраненияИерархияСтраницаПоСсылке Запрос)
		{
			return null;
		}

		public object Any(МестаХраненияЗапрос Запрос)
		{
			return new МестаХраненияОтвет {Ответ = "МестаХранения, "};
		}

		public object Post(МестаХраненияЗапрос ЗапросМестаХранения)
		{
			var Ссылка = (СправочникиСсылка.МестаХранения)ЗапросМестаХранения;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}