
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//SchetchikDlyaFormirovaniyaSerijjnykhNomerov
	[Маршрут("Справочники/СчетчикДляФормированияСерийныхНомеров","")]
	public class СчетчикДляФормированияСерийныхНомеровЗапрос: V82.СправочникиСсылка.СчетчикДляФормированияСерийныхНомеров,IReturn<СчетчикДляФормированияСерийныхНомеровЗапрос>
	{
	}
	[Маршрут("Справочники/СчетчикДляФормированияСерийныхНомеров/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/СчетчикДляФормированияСерийныхНомеров/ПоСсылке","{Ссылка}")]
	public class СчетчикДляФормированияСерийныхНомеровНайтиПоСсылке: V82.СправочникиСсылка.СчетчикДляФормированияСерийныхНомеров,IReturn<СчетчикДляФормированияСерийныхНомеровНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/СчетчикДляФормированияСерийныхНомеров/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/СчетчикДляФормированияСерийныхНомеров/ПоКоду","{Код}")]
	public class СчетчикДляФормированияСерийныхНомеровНайтиПоКоду: V82.СправочникиСсылка.СчетчикДляФормированияСерийныхНомеров,IReturn<СчетчикДляФормированияСерийныхНомеровНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/СчетчикДляФормированияСерийныхНомеров/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/СчетчикДляФормированияСерийныхНомеров/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/СчетчикДляФормированияСерийныхНомеров/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class СчетчикДляФормированияСерийныхНомеровВыбратьПоСсылке: V82.СправочникиСсылка.СчетчикДляФормированияСерийныхНомеров,IReturn<СчетчикДляФормированияСерийныхНомеровВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/СчетчикДляФормированияСерийныхНомеров/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/СчетчикДляФормированияСерийныхНомеров/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/СчетчикДляФормированияСерийныхНомеров/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class СчетчикДляФормированияСерийныхНомеровВыбратьПоКоду: V82.СправочникиСсылка.СчетчикДляФормированияСерийныхНомеров,IReturn<СчетчикДляФормированияСерийныхНомеровВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public decimal ___Мин {get; set;}
		public decimal ___Макс {get; set;}
	}
	[Маршрут("Справочники/СчетчикДляФормированияСерийныхНомеров/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class СчетчикДляФормированияСерийныхНомеровСтраницаПоСсылке: V82.СправочникиСсылка.СчетчикДляФормированияСерийныхНомеров,IReturn<СчетчикДляФормированияСерийныхНомеровСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/СчетчикДляФормированияСерийныхНомеров/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class СчетчикДляФормированияСерийныхНомеровСтраницаПоКоду: V82.СправочникиСсылка.СчетчикДляФормированияСерийныхНомеров,IReturn<СчетчикДляФормированияСерийныхНомеровСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class СчетчикДляФормированияСерийныхНомеровОтвет
	{
		public string Ответ {get;set;}
	}

	public class СчетчикДляФормированияСерийныхНомеровСервис : Service
	{
		
		public object Get(СчетчикДляФормированияСерийныхНомеровНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(СчетчикДляФормированияСерийныхНомеровНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			decimal СтрокаКод = Запрос.Код;
			var Ссылка = V82.Справочники.СчетчикДляФормированияСерийныхНомеров.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new СчетчикДляФормированияСерийныхНомеровОтвет() {Ответ = "СчетчикДляФормированияСерийныхНомеров c кодом '" + Запрос.Код+"' не найдено."};
			}
			return Ссылка;
		}
		
		public object Get(СчетчикДляФормированияСерийныхНомеровВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			return V82.Справочники.СчетчикДляФормированияСерийныхНомеров.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс);
		}
		
		public object Get(СчетчикДляФормированияСерийныхНомеровВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(СчетчикДляФормированияСерийныхНомеровСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(СчетчикДляФормированияСерийныхНомеровСтраницаПоКоду Запрос)
		{
			return null;
		}

		public object Any(СчетчикДляФормированияСерийныхНомеровЗапрос Запрос)
		{
			return new СчетчикДляФормированияСерийныхНомеровОтвет {Ответ = "СчетчикДляФормированияСерийныхНомеров, "};
		}

		public object Post(СчетчикДляФормированияСерийныхНомеровЗапрос ЗапросСчетчикДляФормированияСерийныхНомеров)
		{
			var Ссылка = (СправочникиСсылка.СчетчикДляФормированияСерийныхНомеров)ЗапросСчетчикДляФормированияСерийныхНомеров;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}