
using System;
using Rest;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;

namespace V82.Справочники
{
	//NomeraGTD
	[Маршрут("Справочники/НомераГТД","")]
	public class НомераГТДЗапрос: V82.СправочникиСсылка.НомераГТД,IReturn<НомераГТДЗапрос>
	{
	}
	[Маршрут("Справочники/НомераГТД/НайтиПоСсылке","{Ссылка}")]
	[Маршрут("Справочники/НомераГТД/ПоСсылке","{Ссылка}")]
	public class НомераГТДНайтиПоСсылке: V82.СправочникиСсылка.НомераГТД,IReturn<НомераГТДНайтиПоСсылке>
	{
	}
	[Маршрут("Справочники/НомераГТД/НайтиПоКоду","{Код}")]
	[Маршрут("Справочники/НомераГТД/ПоКоду","{Код}")]
	public class НомераГТДНайтиПоКоду: V82.СправочникиСсылка.НомераГТД,IReturn<НомераГТДНайтиПоКоду>
	{
	}
	[Маршрут("Справочники/НомераГТД/ВыбратьПоСсылке","{___Первые}")]
	[Маршрут("Справочники/НомераГТД/ВыбратьПоСсылке","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/НомераГТД/ВыбратьПоСсылке","{___Первые}/{___Мин}/{___Макс}")]
	public class НомераГТДВыбратьПоСсылке: V82.СправочникиСсылка.НомераГТД,IReturn<НомераГТДВыбратьПоСсылке>
	{
		public int ___Первые {get; set;}
		public Guid ___Мин {get; set;}
		public Guid ___Макс {get; set;}
	}
	[Маршрут("Справочники/НомераГТД/ВыбратьПоКоду","{___Первые}")]
	[Маршрут("Справочники/НомераГТД/ВыбратьПоКоду","{___Первые}/{___Мин}")]
	[Маршрут("Справочники/НомераГТД/ВыбратьПоКоду","{___Первые}/{___Мин}/{___Макс}")]
	public class НомераГТДВыбратьПоКоду: V82.СправочникиСсылка.НомераГТД,IReturn<НомераГТДВыбратьПоКоду>
	{
		public int ___Первые {get; set;}
		public string ___Мин {get; set;}
		public string ___Макс {get; set;}
	}
	[Маршрут("Справочники/НомераГТД/СтраницаПоСсылке","{___Размер}/{___Номер}")]
	public class НомераГТДСтраницаПоСсылке: V82.СправочникиСсылка.НомераГТД,IReturn<НомераГТДСтраницаПоСсылке>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}
	[Маршрут("Справочники/НомераГТД/СтраницаПоКоду","{___Размер}/{___Номер}")]
	public class НомераГТДСтраницаПоКоду: V82.СправочникиСсылка.НомераГТД,IReturn<НомераГТДСтраницаПоКоду>
	{
		public int ___Размер {get; set;}
		public int ___Номер {get; set;}
	}

	public class НомераГТДОтвет
	{
		public string Ответ {get;set;}
	}

	public class НомераГТДСервис : Service
	{
		
		public object Get(НомераГТДНайтиПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(НомераГТДНайтиПоКоду Запрос)
		{
			if(Запрос.Код == null)
			{
				return null;
			}
			string СтрокаКод = System.Uri.UnescapeDataString(Запрос.Код);
			var Ссылка = V82.Справочники.НомераГТД.НайтиПоКоду(СтрокаКод);
			if (Ссылка == null)
			{
				return new НомераГТДОтвет() {Ответ = "НомераГТД c кодом '" + Запрос.Код+"' не найдено."};
			}
			return Ссылка;
		}
		
		public object Get(НомераГТДВыбратьПоСсылке Запрос)
		{
			if (Запрос.___Макс == Guid.Empty)
			{
				Запрос.___Макс = Guid.Parse("ffffffff-ffff-ffff-ffff-ffffffffffff");
			}
			return V82.Справочники.НомераГТД.ВыбратьПоСсылке(Запрос.___Первые, Запрос.___Мин, Запрос.___Макс);
		}
		
		public object Get(НомераГТДВыбратьПоКоду Запрос)
		{
			return null;
		}
		
		public object Get(НомераГТДСтраницаПоСсылке Запрос)
		{
			return null;
		}
		
		public object Get(НомераГТДСтраницаПоКоду Запрос)
		{
			return null;
		}

		public object Any(НомераГТДЗапрос Запрос)
		{
			return new НомераГТДОтвет {Ответ = "НомераГТД, "};
		}

		public object Post(НомераГТДЗапрос ЗапросНомераГТД)
		{
			var Ссылка = (СправочникиСсылка.НомераГТД)ЗапросНомераГТД;
			var Объект = Ссылка.ПолучитьОбъект();
			Объект.Записать();
			return null;
		}


	}
}