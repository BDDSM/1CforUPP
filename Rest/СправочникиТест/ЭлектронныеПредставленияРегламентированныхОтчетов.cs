
using System;
using System.Globalization;
using System.Collections.Generic;
using ServiceStack.ServiceHost;
using ServiceStack.ServiceInterface;
using ServiceStack.ServiceClient.Web;
using V82.Справочники;

namespace V82.Rest.СправочникиТест
{
	public class ЭлектронныеПредставленияРегламентированныхОтчетов:V82.Rest.СправочникиТест.СправочникТест
	{
		public static ЭлектронныеПредставленияРегламентированныхОтчетовЗапрос НайтиПоУникальномуИдентификатору(Guid УникальныйИдентификатор)//ПолучитьПоСсылке,Взять
		{
			var Урл = "http://localhost:1337/Справочники/ЭлектронныеПредставленияРегламентированныхОтчетов/НайтиПоСсылке/"+УникальныйИдентификатор+"?format=json";
			var Клиент = new JsonServiceClient(Урл);
			ЭлектронныеПредставленияРегламентированныхОтчетовЗапрос ЭлектронныеПредставленияРегламентированныхОтчетовЗапрос = null;
			try
			{
				ЭлектронныеПредставленияРегламентированныхОтчетовЗапрос = Клиент.Get(new ЭлектронныеПредставленияРегламентированныхОтчетовЗапрос());
			}
			catch (Exception)
			{
				return null;
			}
			return ЭлектронныеПредставленияРегламентированныхОтчетовЗапрос;
		}
		public static ЭлектронныеПредставленияРегламентированныхОтчетовЗапрос НайтиПоКоду(string Код)
		{
			var Урл = "http://localhost:1337/Справочники/ЭлектронныеПредставленияРегламентированныхОтчетов/НайтиПоКоду/"+Код+"?format=json";
			var Клиент = new JsonServiceClient(Урл);
			ЭлектронныеПредставленияРегламентированныхОтчетовЗапрос ЭлектронныеПредставленияРегламентированныхОтчетовЗапрос = null;
			try
			{
				ЭлектронныеПредставленияРегламентированныхОтчетовЗапрос = Клиент.Get(new ЭлектронныеПредставленияРегламентированныхОтчетовЗапрос());
			}
			catch (Exception)
			{
				return null;
			}
			return ЭлектронныеПредставленияРегламентированныхОтчетовЗапрос;
		}
		public static ЭлектронныеПредставленияРегламентированныхОтчетовЗапрос НайтиПоНаименованию(string Наименование)//ПолучитьПоНаименованию,Взять
		{
			var Урл = "http://localhost:1337/Справочники/ЭлектронныеПредставленияРегламентированныхОтчетов/НайтиПоНаименованию/"+Наименование+"?format=json";
			var Клиент = new JsonServiceClient(Урл);
			ЭлектронныеПредставленияРегламентированныхОтчетовЗапрос ЭлектронныеПредставленияРегламентированныхОтчетовЗапрос = null;
			try
			{
				ЭлектронныеПредставленияРегламентированныхОтчетовЗапрос = Клиент.Get(new ЭлектронныеПредставленияРегламентированныхОтчетовЗапрос());
			}
			catch (Exception)
			{
				return null;
			}
			return ЭлектронныеПредставленияРегламентированныхОтчетовЗапрос;
		}
		public static void ЗаписатьНовый(ЭлектронныеПредставленияРегламентированныхОтчетовЗапрос ЭлектронныеПредставленияРегламентированныхОтчетовЗапрос)//Положить
		{
			var Урл = "http://localhost:1337/Справочники/ЭлектронныеПредставленияРегламентированныхОтчетов?format=json";
			var Клиент = new JsonServiceClient(Урл);
			var ЭлектронныеПредставленияРегламентированныхОтчетовОтвет = Клиент.Post(ЭлектронныеПредставленияРегламентированныхОтчетовЗапрос);
		}
		public static void Записать(ЭлектронныеПредставленияРегламентированныхОтчетовЗапрос ЭлектронныеПредставленияРегламентированныхОтчетовЗапрос)//Обновить
		{
			var Урл = "http://localhost:1337/Справочники/ЭлектронныеПредставленияРегламентированныхОтчетов?format=json";
			var Клиент = new JsonServiceClient(Урл);
			var ЭлектронныеПредставленияРегламентированныхОтчетовОтвет = Клиент.Put(ЭлектронныеПредставленияРегламентированныхОтчетовЗапрос);
		}
		public static void Удалить(ЭлектронныеПредставленияРегламентированныхОтчетовЗапрос ЭлектронныеПредставленияРегламентированныхОтчетовЗапрос)//
		{
			var Урл = "http://localhost:1337/Справочники/ЭлектронныеПредставленияРегламентированныхОтчетов?format=json";
			var Клиент = new JsonServiceClient(Урл);
			var ЭлектронныеПредставленияРегламентированныхОтчетовОтвет = Клиент.Delete(ЭлектронныеПредставленияРегламентированныхОтчетовЗапрос);
		}
	}
}