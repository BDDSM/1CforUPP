////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем ПериодДействия;

// Валюта
Перем мПоказватьВалютуЕжемесячно;
Перем мПоказватьВалютуПериодически;
Перем мВалютаПоУмолчанию;

Перем мЖирныйШрифт;
Перем ОтображенныеОрганизации;

Перем мПредопределенныеПоказатели;

Перем мПрежняяОрганизацияЕжемесячно;
Перем мПрежняяОрганизацияПериодически;

Перем мОрганизацияНеВыбранаЕжемесячно;
Перем мОрганизацияНеВыбранаПереодически;

Перем СотрудникиПометка;
Перем ПодразделенияПометка;

Перем ВыбранаОрганизация;

Перем УчетнаяПолитикаПоПерсоналу;

Перем мОрганизацииСотрудников;

Перем ИспользуютсяНачисленияВВалюте;

Перем ЕстьВалютныеПоказатели;

Перем мСписокТипов;

////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ПолучитьОрганизацию(Сотрудник)
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Сотрудник", Сотрудник);
	КонецМесяцаПериода =	КонецМесяца(ПериодДействия);
	СтруктураПоиска.Вставить("Дата", КонецМесяцаПериода);
	
	Строки = мОрганизацииСотрудников.НайтиСтроки(СтруктураПоиска);
	Если Строки.Количество() > 0 Тогда
		Возврат Строки[0].Организация;
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
		Запрос.УстановитьПараметр("Дата", КонецМесяцаПериода);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Дата
		|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА РаботникиОрганизацийСрезПоследних.ОбособленноеПодразделениеЗавершения
		|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ОбособленноеПодразделение
		|	КОНЕЦ КАК Организация
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Дата, Сотрудник = &Сотрудник) КАК РаботникиОрганизацийСрезПоследних";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ОрганизацияСотрудника = Выборка.Организация;
		Иначе
			ОрганизацияСотрудника = Сотрудник.Организация;
		КонецЕсли;
		
		НоваяСтрокаОрганизацийСотрудников = мОрганизацииСотрудников.Добавить();
		НоваяСтрокаОрганизацийСотрудников.Сотрудник = Сотрудник;
		НоваяСтрокаОрганизацийСотрудников.Дата = КонецМесяцаПериода;
		НоваяСтрокаОрганизацийСотрудников.Организация = ОрганизацияСотрудника;
		
		Возврат ОрганизацияСотрудника;
		
	КонецЕсли;
	
КонецФункции //ПолучитьОрганизацию

Функция ПустоеПодразделение()
	
	Возврат ?(ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц,
				Справочники.ПодразделенияОрганизаций.ПустаяСсылка(),
				Справочники.Подразделения.ПустаяСсылка());
	
КонецФункции

// Процедура устанавливает видимость колонок "Организация" и "ТабельныйНомер"
//
Процедура УстановитьВидимостьОрганизацииИТН()
	Показывать = ПоПоказателям;
	
	ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.Организация.Видимость = Показывать И Не ПереключательСотрудники И ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц;
	ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.ТабельныйНомер.Видимость = Ложь И Не ПереключательСотрудники;
	
КонецПроцедуры

// Процедура устанавливает отбор по показателям 
//
Процедура УстановитьОтборПоказателей()
	
	Показатели.Отбор.ВидПоказателя.Использование = Истина;
	Если ПереключательСотрудники Тогда
		Показатели.Отбор.ВидПоказателя.ВидСравнения	= ВидСравнения.Равно;
		Показатели.Отбор.ВидПоказателя.Значение	= Перечисления.ВидыПоказателейСхемМотивации.Индивидуальный;
	Иначе
		Показатели.Отбор.ВидПоказателя.ВидСравнения	= ВидСравнения.ВСписке;
		ОтборПоВидуПоказателя = Новый СписокЗначений;
		ОтборПоВидуПоказателя.Добавить(Перечисления.ВидыПоказателейСхемМотивации.ПоПодразделению);
		ОтборПоВидуПоказателя.Добавить(Перечисления.ВидыПоказателейСхемМотивации.Общий);
		Показатели.Отбор.ВидПоказателя.Значение	= ОтборПоВидуПоказателя;
	КонецЕсли;
	
КонецПроцедуры

// Процедура устанавливает видимость валюты при смене организации
//
Процедура ПриСменеОрганизации()
	
	мПоказватьВалютуЕжемесячно = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), ОрганизацияЕжемесячные, "ИспользуютсяНачисленияВВалюте");
	мПоказватьВалютуПериодически = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), ОрганизацияПериодические, "ИспользуютсяНачисленияВВалюте");
	УстановитьВидимостьВалюты();
	
КонецПроцедуры //ПриСменеОрганизации

// Процедура заполняет список предопределенных показателей, по которым потом будет устанавливаться отбор с видом сравнения
//			НеВСписке в форме выбора показателей
//
Процедура ЗапомнитьПредопределенныеПоказатели()
	
	Запрос = Новый Запрос;
	
	мПредопределенныеПоказатели = Новый СписокЗначений;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПоказателиСхемМотивации.Ссылка
	|ИЗ
	|	Справочник.ПоказателиСхемМотивации КАК ПоказателиСхемМотивации
	|ГДЕ
	|	ПоказателиСхемМотивации.Предопределенный
	|	ИЛИ ПоказателиСхемМотивации.ТипПоказателя = Значение(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная)
	|	ИЛИ ПоказателиСхемМотивации.ТипПоказателя = Значение(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая)";
	
		
	Запрос.Текст = ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		мПредопределенныеПоказатели.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	
КонецПроцедуры //ЗапомнитьПредопределенныеПоказатели

// Процедура устанавливает пустую ссылку справочника Подразделения или Подразделения организации
//		в зависимости от вида организационной структуры
//
Процедура УстановитьПустуюСсылкуНаПродразделение()
	
	ПодразделениеЕжемесячные = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	
КонецПроцедуры

// Возвращает первое подразделение выбранной организации или предприятия
//
// Параметры
//
// Возвращаемое значение:
//   СправочникиСсылка.ПодразделенияОрганизаций   – первое подразделение организации.
//   ИЛИ (зависит от заданного режима формирования схем мотивации)
//   СправочникиСсылка.Подразделения   – первое подразделение предприятия.
//
Функция ПервоеПодразделениеОрганизации(Организация = Неопределено)
	
	Запрос = Новый Запрос;
	
	Если Организация = Неопределено Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Подразделения.Ссылка
		|ИЗ
		|	Справочник.Подразделения КАК Подразделения
		|
		|УПОРЯДОЧИТЬ ПО
		|	Подразделения.Наименование ИЕРАРХИЯ";
		
		Выборка = Запрос.Выполнить().Выбрать();
	
		Возврат ?(Выборка.Следующий(), Выборка.Ссылка, Справочники.Подразделения.ПустаяСсылка());
	
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ПодразделенияОрганизаций.Ссылка
		|ИЗ
		|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
		|ГДЕ
		|	ПодразделенияОрганизаций.Владелец = &Организация
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПодразделенияОрганизаций.Наименование ИЕРАРХИЯ";
		
		Запрос.УстановитьПараметр("Организация", Организация);
		
		Выборка = Запрос.Выполнить().Выбрать();
	
		Возврат ?(Выборка.Следующий(), Выборка.Ссылка, Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
		
	КонецЕсли;
	
КонецФункции // ПервоеПодразделениеОрганизации()

// Устанавливает видимость колонок "Валюта" 
// 
Процедура УстановитьВидимостьВалюты()
	
	мПоказватьВалютуЕжемесячно = ЕстьВалютныеПоказатели И ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), ОрганизацияЕжемесячные, "ИспользуютсяНачисленияВВалюте");
	мПоказватьВалютуПериодически = ЕстьВалютныеПоказатели И ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), ОрганизацияПериодические, "ИспользуютсяНачисленияВВалюте");
	
	Если ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Показатели Тогда
		ТекущаяСтрока = ЭлементыФормы.Показатели.ТекущаяСтрока;
		Если ТекущаяСтрока <> Неопределено Тогда
			мПоказватьВалютуЕжемесячно = мПоказватьВалютуЕжемесячно И ТипыПоказателей[ТекущаяСтрока] = Перечисления.ТипыПоказателейСхемМотивации.Денежный И Не ЗначениеЗаполнено(ВалютыПоказателей[ТекущаяСтрока]);
		КонецЕсли;
	КонецЕсли;
	
	Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		ИспользуютсяНачисленияВВалюте			= ЕстьВалютныеПоказатели И ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуВсехОрганизаций(УчетнаяПолитикаПоПерсоналу, "ИспользуютсяНачисленияВВалюте");
		ИспользуютсяНачисленияВВалюте = ?(ИспользуютсяНачисленияВВалюте = NULL, Ложь,ИспользуютсяНачисленияВВалюте);
		
		Если ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Показатели Тогда
			ТекущаяСтрока = ЭлементыФормы.Показатели.ТекущаяСтрока;
			Если ТекущаяСтрока <> Неопределено Тогда
				ИспользуютсяНачисленияВВалюте = ИспользуютсяНачисленияВВалюте И ТипыПоказателей[ТекущаяСтрока] = Перечисления.ТипыПоказателейСхемМотивации.Денежный И Не ЗначениеЗаполнено(ВалютыПоказателей[ТекущаяСтрока])
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ОрганизацияЕжемесячные) Тогда
			ЭлементыФормы.ЕжемесячныеПоказатели.Колонки["Валюта"].Видимость							= мПоказватьВалютуЕжемесячно;
			ЭлементыФормы.ПлановыеЗначенияПоказателейСхемМотивации.Колонки["Валюта"].Видимость		= мПоказватьВалютуПериодически;
		Иначе
			ЭлементыФормы.ЕжемесячныеПоказатели.Колонки["Валюта"].Видимость							= ИспользуютсяНачисленияВВалюте;
			ЭлементыФормы.ПлановыеЗначенияПоказателейСхемМотивации.Колонки["Валюта"].Видимость		= ИспользуютсяНачисленияВВалюте;
		КонецЕсли;
	Иначе
		ИспользуютсяНачисленияВВалюте			= ЕстьВалютныеПоказатели;
		
		Если ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Показатели Тогда
			ТекущаяСтрока = ЭлементыФормы.Показатели.ТекущаяСтрока;
			Если ТекущаяСтрока <> Неопределено Тогда
				ИспользуютсяНачисленияВВалюте = ИспользуютсяНачисленияВВалюте И ТипыПоказателей[ТекущаяСтрока] = Перечисления.ТипыПоказателейСхемМотивации.Денежный И Не ЗначениеЗаполнено(ВалютыПоказателей[ТекущаяСтрока])
			КонецЕсли;
		КонецЕсли;
		
		ЭлементыФормы.ЕжемесячныеПоказатели.Колонки["Валюта"].Видимость		= ИспользуютсяНачисленияВВалюте;
		ЭлементыФормы.ПлановыеЗначенияПоказателейСхемМотивацииОбщие.Колонки["Валюта"].Видимость	= ИспользуютсяНачисленияВВалюте;
		ЭлементыФормы.ПлановыеЗначенияПоказателейСхемМотивации.Колонки["Валюта"].Видимость		= ИспользуютсяНачисленияВВалюте;
		
	КонецЕсли;
	
	ЭлементыФормы.ПлановыеЗначенияПоказателейСхемМотивацииОбщие.Колонки["Валюта"].Видимость	= ИспользуютсяНачисленияВВалюте;
	
КонецПроцедуры //УстановитьВидимостьВалюты

// Устанавливает отбор по периоду действия
//
Процедура УстановитьОтборПоПериодуДействия()
	
	ЕжемесячныеПоказатели.Отбор.ПериодДействия.ВидСравнения	= ВидСравнения.ИнтервалВключаяГраницы;
	ЕжемесячныеПоказатели.Отбор.ПериодДействия.ЗначениеС		= НачалоМесяца(ПериодДействия);
	ЕжемесячныеПоказатели.Отбор.ПериодДействия.ЗначениеПо		= КонецМесяца(ПериодДействия);
	ЕжемесячныеПоказатели.Отбор.ПериодДействия.Использование	= Истина;
	
КонецПроцедуры //УстановитьОтборПоПериодуДействия

// Устанавливает отбор по сотруднику
//
Процедура ОтборПоСотрудникуЕжемесячно()
	
	ЕжемесячныеПоказатели.Отбор.Подразделение.Использование	= Ложь;
	ЕжемесячныеПоказатели.Отбор.Показатель.Использование	= Ложь;
	
	ТекущиеДанные = ЭлементыФормы.Сотрудники.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		Сотрудник = ЭлементыФормы.Сотрудники.ТекущиеДанные.Ссылка;
		ЕжемесячныеПоказатели.Отбор.Сотрудник.Использование	= (ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Сотрудники);
		ЕжемесячныеПоказатели.Отбор.Сотрудник.ВидСравнения	= ВидСравнения.Равно;
		ЕжемесячныеПоказатели.Отбор.Сотрудник.Значение		= Сотрудник;
	КонецЕсли;
	
КонецПроцедуры //ОтборПоСотрудникуЕжемесячно

Процедура УстановитьОтборСотрудников()
	
	ЭлементыФормы.Сотрудники.Колонки["ТекущееПодразделениеОрганизации"].Видимость 
		= ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц;
	ЭлементыФормы.Сотрудники.Колонки["ТекущееПодразделениеКомпании"].Видимость 
		= ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоЦентрамОтветственности;
		
	ЭлементыФормы.ПанельОрганизацияСотрудников.Свертка = ?(ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц,
		РежимСверткиЭлементаУправления.Нет,
		РежимСверткиЭлементаУправления.Верх);
		
	Сотрудники.Отбор.Организация.Установить(Организация);
	Сотрудники.Отбор.Организация.Использование = ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц;
	
	// отбор только работающих или уволенных в текущем месяце
	ИмяПоляДатыУвольнения = ?(ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц,
		"ДатаУвольнения",
		"ДатаУвольненияИзКомпании");

	Сотрудники.Отбор[ИмяПоляДатыУвольнения].Установить(Дата(1, 1, 1));
	
	// отбор по виду договора
	Сотрудники.Отбор.ВидДоговора.Использование	= ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц;
	Сотрудники.Отбор.ВидДоговора.ВидСравнения	= ВидСравнения.НеРавно;
	Сотрудники.Отбор.ВидДоговора.Значение		= Перечисления.ВидыДоговоровСФизЛицами.ДоговорУправленческий;
	
	// отбор сотрудников по управленческому учету
	Сотрудники.Отбор.ДатаПриемаНаРаботуВКомпанию.Использование	= ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоЦентрамОтветственности;
	Сотрудники.Отбор.ДатаПриемаНаРаботуВКомпанию.ВидСравнения	= ВидСравнения.НеРавно;
	Сотрудники.Отбор.ДатаПриемаНаРаботуВКомпанию.Значение		= Дата(1, 1, 1);
	
	// для управленческого учета не показываем внутренних совместителей
	Сотрудники.Отбор.ВидЗанятости.Использование	= ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоЦентрамОтветственности;
	Сотрудники.Отбор.ВидЗанятости.ВидСравнения	= ВидСравнения.НеРавно;
	Сотрудники.Отбор.ВидЗанятости.Значение		= Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство;
	
КонецПроцедуры

// Открывает форму выбора показателей с установленными отборами
//
Процедура ВыборПоказателя(Элемент, СтандартнаяОбработка, ВыбраноПодразделение, ПоСотрудникам = Ложь, ПоПоказателям = "Ежемесячно")
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбора = Справочники.ПоказателиСхемМотивации.ПолучитьФормуВыбора(, Элемент, Элемент.Значение);
	
	ФормаВыбора.Отбор.ВозможностьИзменения.Использование	= Истина;
	ФормаВыбора.Отбор.ВозможностьИзменения.ВидСравнения		= ВидСравнения.Равно;
	Если ПоПоказателям = "Ежемесячно" Тогда
		ФормаВыбора.Отбор.ВозможностьИзменения.Значение		= Перечисления.ИзменениеПоказателейСхемМотивации.Ежемесячно;
	Иначе
		
		ФормаВыбора.Отбор.ВозможностьИзменения.Значение		= Перечисления.ИзменениеПоказателейСхемМотивации.Периодически;
		ВыбранаОрганизация = ПоОрганизации И ЗначениеЗаполнено(ОрганизацияПериодические);
		
	КонецЕсли;
	
	Если мСписокТипов = Неопределено Тогда
		мСписокТипов = Новый СписокЗначений;
		мСписокТипов.Добавить(Перечисления.ТипыПоказателейСхемМотивации.Денежный);
		мСписокТипов.Добавить(Перечисления.ТипыПоказателейСхемМотивации.Числовой);
		мСписокТипов.Добавить(Перечисления.ТипыПоказателейСхемМотивации.Процентный);
	КонецЕсли;
	
	
	ФормаВыбора.Отбор.ТипПоказателя.Использование		= Истина;
	ФормаВыбора.Отбор.ТипПоказателя.ВидСравнения		= ВидСравнения.ВСписке;
	ФормаВыбора.Отбор.ТипПоказателя.Значение			= мСписокТипов;

	ФормаВыбора.Отбор.Ссылка.Использование		= Истина;
	ФормаВыбора.Отбор.Ссылка.ВидСравнения		= ВидСравнения.НеВСписке;
	ФормаВыбора.Отбор.Ссылка.Значение			= мПредопределенныеПоказатели;
	
	ФормаВыбора.Отбор.ВидПоказателя.Использование	= Истина;
	ФормаВыбора.Отбор.ВидПоказателя.ВидСравнения	= ВидСравнения.Равно;
	
	Если ПоСотрудникам Тогда
		ФормаВыбора.Отбор.ВидПоказателя.Значение		= Перечисления.ВидыПоказателейСхемМотивации.Индивидуальный;
	Иначе
		Если ВыбраноПодразделение Тогда
			ФормаВыбора.Отбор.ВидПоказателя.Значение		= Перечисления.ВидыПоказателейСхемМотивации.ПоПодразделению;
		ИначеЕсли ВыбранаОрганизация Тогда
			ФормаВыбора.Отбор.ВидПоказателя.Значение		= Перечисления.ВидыПоказателейСхемМотивации.Общий;
		Иначе
			ФормаВыбора.Отбор.ВидПоказателя.ВидСравнения	= ВидСравнения.ВСписке;
			ФормаВыбора.Отбор.ВидПоказателя.Значение.Добавить(Перечисления.ВидыПоказателейСхемМотивации.ДляВсехОрганизаций);
			ФормаВыбора.Отбор.ВидПоказателя.Значение.Добавить(Перечисления.ВидыПоказателейСхемМотивации.Общий);
		КонецЕсли;
	КонецЕсли;
	
	ФормаВыбора.ЗакрыватьПриЗакрытииВладельца = Истина;
	ФормаВыбора.НачальноеЗначениеВыбора = Элемент.Значение;
	ФормаВыбора.ЗакрыватьПриВыборе = Истина;
	ФормаВыбора.Открыть();

КонецПроцедуры //ВыборПоказателя

// Устанавливает отбор в таблице ежемесячных показателей по подразделению и по организации 
//
Процедура УстановитьОтборПоПодразделениюИОрганизацииЕжемесячно(ОтборПоСотрудникам = Ложь, ОтборПоПодразделению = Истина, ОтборПоОрганизации = Истина)
	
	// если отображение не индивидуальных показателей - установим отбор по пустому сотруднику
	Если Не ОтборПоСотрудникам Тогда
		ЕжемесячныеПоказатели.Отбор.Сотрудник.Установить(Справочники.СотрудникиОрганизаций.ПустаяСсылка());
	КонецЕсли;
	
	ЕжемесячныеПоказатели.Отбор.Показатель.Использование	= Ложь;
	
	ЕжемесячныеПоказатели.Отбор.Подразделение.Использование	= ОтборПоПодразделению;
	ЕжемесячныеПоказатели.Отбор.Подразделение.ВидСравнения	= ВидСравнения.Равно;
	ЕжемесячныеПоказатели.Отбор.Подразделение.Значение		= ПодразделениеЕжемесячные;
	
	ЕжемесячныеПоказатели.Отбор.Организация.Использование	= Истина;
	
	УстановитьВидимостьВалюты();
	
	Если ОтборПоОрганизации Тогда
		ЕжемесячныеПоказатели.Отбор.Организация.ВидСравнения	= ВидСравнения.Равно;
		Если мОрганизацияНеВыбранаЕжемесячно <> Истина Тогда
			ЕжемесячныеПоказатели.Отбор.Организация.Значение		= ОрганизацияЕжемесячные;
		Иначе
			
			ЕжемесячныеПоказатели.Отбор.Организация.ВидСравнения	= ВидСравнения.ВСписке;
			ЕжемесячныеПоказатели.Отбор.Организация.Значение		= Новый СписокЗначений;
		КонецЕсли;
	Иначе
		Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
			ЕжемесячныеПоказатели.Отбор.Организация.ВидСравнения	= ВидСравнения.НеРавно;
		Иначе
			ЕжемесячныеПоказатели.Отбор.Организация.ВидСравнения	= ВидСравнения.Равно;
		КонецЕсли;
		ЕжемесячныеПоказатели.Отбор.Организация.Значение		= Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
	Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоЦентрамОтветственности Тогда
		ЕжемесячныеПоказатели.Отбор.Организация.ВидСравнения= ВидСравнения.Равно;
		ЕжемесячныеПоказатели.Отбор.Организация.Значение	= Справочники.Организации.ПустаяСсылка();
		
		ЕжемесячныеПоказатели.Отбор.Подразделение.Значение		= ПодразделениеЕжемесячные;

	КонецЕсли;	
	
КонецПроцедуры //УстановитьОтборПоПодразделениюИОрганизацииЕжемесячно

// Устанавлевает отбор в таблице переодидческих показателей по подразделению и по организации 
//
Процедура УстановитьОтборПоПодразделениюИОрганизацииПериодически()
	
	ПлановыеЗначенияПоказателейСхемМотивации.Отбор.Подразделение.Установить(ПодразделениеПериодические);
	
	Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		ПлановыеЗначенияПоказателейСхемМотивации.Отбор.Организация.Установить(ОрганизацияПериодические);
		ПлановыеЗначенияПоказателейСхемМотивации.Отбор.Организация.ВидСравнения = ?(ЗначениеЗаполнено(ОрганизацияПериодические), ВидСравнения.Равно, ВидСравнения.НеРавно);
	Иначе
		ПлановыеЗначенияПоказателейСхемМотивации.Отбор.Организация.Установить(Справочники.Организации.ПустаяСсылка());
	КонецЕсли;
	
	УстановитьВидимостьВалюты();
	
КонецПроцедуры //УстановитьОтборПоПодразделениюИОрганизацииПериодически

Процедура УстановитьОтборПоПодразделениюИОрганизацииПериодическиОбщие()
	
	ПлановыеЗначенияПоказателейСхемМотивацииОбщие.Отбор.Подразделение.Использование	= Истина;
	ПлановыеЗначенияПоказателейСхемМотивацииОбщие.Отбор.Подразделение.ВидСравнения	= ВидСравнения.Равно;
	ПлановыеЗначенияПоказателейСхемМотивацииОбщие.Отбор.Подразделение.Значение		= ПодразделениеПериодические;
	
	ПлановыеЗначенияПоказателейСхемМотивацииОбщие.Отбор.Организация.Использование	= Истина;
	ПлановыеЗначенияПоказателейСхемМотивацииОбщие.Отбор.Организация.ВидСравнения	= ВидСравнения.Равно;
	ПлановыеЗначенияПоказателейСхемМотивацииОбщие.Отбор.Организация.Значение		= ОрганизацияПериодические;
	
	УстановитьВидимостьВалюты();
	
КонецПроцедуры //УстановитьОтборПоПодразделениюИОрганизацииПериодически

// Устанавливает заголовок формы
//
Процедура УстановитьЗаголовокФормы()
	
	Заголовок = " Показатели расчета заработной платы";
	
КонецПроцедуры //УстановитьЗаголовокФормы

Процедура ЗаполнитьСвойстваПоказателей()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПоказателиСхемМотивации.Ссылка КАК Показатель,
	|	ПоказателиСхемМотивации.ВидПоказателя,
	|	ПоказателиСхемМотивации.ТипПоказателя,
	|	ПоказателиСхемМотивации.Валюта КАК ВалютаПоказателя
	|ИЗ
	|	Справочник.ПоказателиСхемМотивации КАК ПоказателиСхемМотивации");
	
	ВидыПоказателей = Новый Соответствие;
	ТипыПоказателей = Новый Соответствие;
	ВалютыПоказателей = Новый Соответствие;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ВидыПоказателей.Вставить(Выборка.Показатель, Выборка.ВидПоказателя);
		ТипыПоказателей.Вставить(Выборка.Показатель, Выборка.ТипПоказателя);
		ВалютыПоказателей.Вставить(Выборка.Показатель, Выборка.ВалютаПоказателя);
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьФорматЗначенияПокателя(ТабличноеПоле)
	
	Если ТабличноеПоле.ТекущиеДанные <> Неопределено Тогда
		
		Показатель = ТабличноеПоле.ТекущиеДанные.Показатель;
		
		ДанныеОформления = ДанныеОформленияЗначенийПоказателей[Показатель];
		Если ДанныеОформления = Неопределено Тогда
			ДанныеОформления = РаботаСДиалогамиЗК.ДанныеОформленияЗначенийПоказателя(Показатель);
		КонецЕсли;
		
		Если ДанныеОформления <> Неопределено Тогда
			ТабличноеПоле.Колонки["Значение"].ЭлементУправления.Формат = "ЧДЦ=" + ДанныеОформления.ТочностьПредставления;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьКомандыПереключенияРежимаФормированияСхемМотивации()
	
	ДополнительныеДействия = Новый Действие("ДополнительныеДействия");
	
	КнопкиКоманднойПанели = ЭлементыФормы.КоманднаяПанель.Кнопки;
	МестоВставки = КнопкиКоманднойПанели.Индекс(КнопкиКоманднойПанели.Найти("ДействиеСправка"));
	
	ПодменюПорядокФормированияСМ = КнопкиКоманднойПанели.Вставить(МестоВставки, "РежимФормированияСхемМотивации", ТипКнопкиКоманднойПанели.Подменю, "Режим формирования схем мотивации");
	ПодменюПорядокФормированияСМ.Кнопки.Добавить("ПоСтруктуреЮридическихЛиц", 	ТипКнопкиКоманднойПанели.Действие, "По структуре юридических лиц", 	ДополнительныеДействия);
	ПодменюПорядокФормированияСМ.Кнопки.Добавить("ПоЦентрамОтветственности",	ТипКнопкиКоманднойПанели.Действие, "По центрам ответственности", 	ДополнительныеДействия);
	
	КнопкиКоманднойПанели.Вставить(МестоВставки + 1, "Разделитель15", ТипКнопкиКоманднойПанели.Разделитель); 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	// ВидОрганизационнойСтруктурыПредприятия - может передаваться форме при вызове из меню, поэтому сначала проверим и только если пустой, заполним 
	Если НЕ глЗначениеПеременной("глИспользоватьУправленческийУчетЗарплаты") Тогда
		ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц;
	Иначе
		Если Не ЗначениеЗаполнено(ВидОрганизационнойСтруктурыПредприятия) Тогда
			ВидОрганизационнойСтруктурыПредприятия = ВосстановитьЗначение("ВвоодПоказателейВидОрганизационнойСтруктурыПредприятия");
		КонецЕсли;
	КонецЕсли;
	
	ВосстановленныйРежимВвода = ВосстановитьЗначение("ВводПоказателейРежимВвода");
	Если ВосстановленныйРежимВвода = Неопределено Тогда
		ПоПоказателям = Истина
	Иначе
		ПоПоказателям = ВосстановитьЗначение("ВводПоказателейРежимВвода");
	КонецЕсли;
	
	ВосстановленныйПереключательСотрудники		= ВосстановитьЗначение("ВводПоказателейСотрудникиПометка");
	Если ВосстановленныйПереключательСотрудники = Неопределено Тогда
		ПереключательСотрудники = Истина;
	Иначе
		ПереключательСотрудники = ВосстановитьЗначение("ВводПоказателейСотрудникиПометка");
	КонецЕсли;
	
	ВосстановленныйПоОрганизации = ВосстановитьЗначение("ВводПериодическихПоказателей");
	Если ВосстановленныйПоОрганизации = Неопределено Тогда
		ПоОрганизации = Истина
	Иначе
		ПоОрганизации = ВосстановитьЗначение("ВводПериодическихПоказателей")
	КонецЕсли;
	
	ЗаполнитьСвойстваПоказателей();
	
КонецПроцедуры //ПередОткрытием

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()
	
	ЕстьВалютныеПоказатели = глЗначениеПеременной("глЕстьВалютныеПоказатели");
		
	ПериодДействия = НачалоМесяца(ОбщегоНазначения.ПолучитьРабочуюДату());
	МесяцСтрока = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодДействия);
	
	УчетнаяПолитикаПоПерсоналу						= глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации");
	ВидимостьТН										= ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуВсехОрганизаций(УчетнаяПолитикаПоПерсоналу, "ПоказыватьТабельныеНомераВДокументах");
	ЭлементыФормы.Сотрудники.Колонки.Код.Видимость	= ?(ВидимостьТН = NULL, Ложь, ВидимостьТН);

	УстановитьОтборПоПериодуДействия();
	
	// проставляем организацию пользователя по умолчанию
	Если Не ЗначениеЗаполнено(ОрганизацияЕжемесячные) Тогда
		ОрганизацияЕжемесячные	= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
		ОрганизацияПериодические	= ОрганизацияЕжемесячные;
	КонецЕсли;
	Организация = ОрганизацияЕжемесячные;
	
	ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц;
	Если глЗначениеПеременной("глИспользоватьУправленческийУчетЗарплаты") Тогда
		ДобавитьКомандыПереключенияРежимаФормированияСхемМотивации();
	КонецЕсли;
	
	УстановитьЗаголовокФормы();
	
	УстановитьОтборСотрудников();

	ОтображениеПериодическихПоказателей();
	
	УстановитьВидимостьВалюты();

	Если мПоказватьВалютуЕжемесячно Или мПоказватьВалютуПериодически Тогда
		мВалютаПоУмолчанию = Константы.ВалютаРегламентированногоУчета.Получить();
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ЭлементыФормы.ТабличноеПолеПодразделенияОрганизацийЕжемесячные.ТекущаяСтрока) Тогда
		ЭлементыФормы.ТабличноеПолеПодразделенияОрганизацийЕжемесячные.ТекущаяСтрока = ПервоеПодразделениеОрганизации(ОрганизацияЕжемесячные);
	КонецЕсли;
		
	ТабличноеПолеПодразделенияОрганизацийЕжемесячные.Порядок.Установить("Владелец, Порядок");
	Сотрудники.Порядок.Установить("Наименование Возр");
	
	Если ПереключательСотрудники Тогда
		ОтборыЕжемесячныхПоказателейСотрудники();
	Иначе
		ОтборыЕжемесячныхПоказателейПодразделения();
	КонецЕсли;
	
	ЗапомнитьПредопределенныеПоказатели();

	Показатели.Отбор.ВозможностьИзменения.Установить(Перечисления.ИзменениеПоказателейСхемМотивации.Ежемесячно);
	
	ПлановыеЗначенияПоказателейСхемМотивации.Порядок.Установить("Период");
	
	ПоПоказателямПриИзменении();
		
	ПриСменеОрганизации();

	ОтображениеПериодическихПоказателей();
	
	ОбработатьИзмененияРежимаФормирования();
	
	ЕжемесячныеПоказатели.Порядок.Установить("Показатель, Подразделение, Сотрудник");
	ПлановыеЗначенияПоказателейСхемМотивацииОбщие.Порядок.Установить("Показатель");
	ПлановыеЗначенияПоказателейСхемМотивации.Порядок.Установить("Показатель");
	
	УстановитьОтборПоПодразделениюИОрганизацииПериодически();
	УстановитьОтборПоПодразделениюИОрганизацииПериодическиОбщие();

КонецПроцедуры //ПриОткрытии

// Процедура - обработчик события "ПриЗакрытиии" формы
//
Процедура ПриЗакрытии()
	
	СохранитьЗначение("ВвоодПоказателейВидОрганизационнойСтруктурыПредприятия",ВидОрганизационнойСтруктурыПредприятия);
		
	СохранитьЗначение("ВводПоказателейРежимВвода", ПоПоказателям);
	
	СохранитьЗначение("ВводПоказателейСотрудникиПометка", ПереключательСотрудники);
	
	СохранитьЗначение("ВводПериодическихПоказателей", ПоОрганизации);

КонецПроцедуры //ПриЗакрытии


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНОЙ ПАНЕЛИ ДействияФормы

// Процедура - заполняет регистр по показателям, присутствующим в плановых начислениях 
//
Процедура ДействияФормыЗаполнитьПоРегистру(Кнопка)
	
	СписокНедоступныхВозможностейИзменения = Новый Массив;
	СписокНедоступныхВозможностейИзменения.Добавить(Перечисления.ИзменениеПоказателейСхемМотивации.ПустаяСсылка());
	СписокНедоступныхВозможностейИзменения.Добавить(Перечисления.ИзменениеПоказателейСхемМотивации.НеИзменяется);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПарамВозможностьИзменения", СписокНедоступныхВозможностейИзменения);
	Запрос.УстановитьПараметр("ПарамДата", КонецМесяца(ПериодДействия));
	Запрос.УстановитьПараметр("ПериодДействия", ПериодДействия);
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(ПериодДействия));
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ПоСотрудникам = ПереключательСотрудники И Не ПоПоказателям;
	ПоПодразделениям = Не ПереключательСотрудники И Не ПоПоказателям;
	
	Если ПоПодразделениям Тогда
		Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
			ТекущиеДанные = ЭлементыФормы.ТабличноеПолеПодразделенияОрганизацийЕжемесячные.ТекущиеДанные;
			Если ТекущиеДанные = Неопределено Тогда
				Возврат;
			Иначе
				Запрос.УстановитьПараметр("Подразделение", ТекущиеДанные.Ссылка);
			КонецЕсли;
			Организация = ТекущиеДанные.Владелец;
		Иначе
			ТекущиеДанные = ЭлементыФормы.ТабличноеПолеПодразделенияПоЦФОЕжемесячные.ТекущиеДанные;
			Если ТекущиеДанные = Неопределено Тогда
				Возврат;
			Иначе
				Запрос.УстановитьПараметр("Подразделение", ТекущиеДанные);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ПоСотрудникам Тогда
		ТекущиеДанные = ЭлементыФормы.Сотрудники.ТекущиеДанные;
		Организация = ПолучитьОрганизацию(ЭлементыФормы.Сотрудники.ТекущиеДанные.Ссылка);
	Иначе
		ТекущиеДанные = ЭлементыФормы.Показатели.ТекущиеДанные;
	КонецЕсли;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	
	ПоСотрудникамКнопка = Не ПереключательСотрудники;
	
	Если ПоСотрудникам Тогда
		Запрос.УстановитьПараметр("Сотрудники", ЭлементыФормы.Сотрудники.ТекущаяСтрока);
	КонецЕсли;
	
	Если ПоПоказателям Тогда
		Запрос.УстановитьПараметр("Показатель", ЭлементыФормы.Показатели.ТекущиеДанные.Ссылка);
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗначенияПоказателейСхемМотивации.Показатель,
	|	ЗначенияПоказателейСхемМотивации.Организация,
	|	ЗначенияПоказателейСхемМотивации.Подразделение,
	|	ЗначенияПоказателейСхемМотивации.Сотрудник
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации
	|ГДЕ
	|	ЗначенияПоказателейСхемМотивации.ПериодДействия = &ПериодДействия";
	
	Если ПоПоказателям Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И ЗначенияПоказателейСхемМотивации.Показатель = &Показатель";
	КонецЕсли;
	Если ПоСотрудникам Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И ЗначенияПоказателейСхемМотивации.Сотрудник = &Сотрудники";
	ИначеЕсли ПоПодразделениям Тогда
		Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда

			Запрос.УстановитьПараметр("Организация", Организация);
			Запрос.Текст = Запрос.Текст + "
			|	И ЗначенияПоказателейСхемМотивации.Организация = &Организация";
		Иначе
			Запрос.Текст = Запрос.Текст + "
			|	И ЗначенияПоказателейСхемМотивации.Организация = Значение(Справочник.Организации.ПустаяСсылка)";
		КонецЕсли;
	КонецЕсли;
	Если ПереключательСотрудники Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И ЗначенияПоказателейСхемМотивации.Показатель.ВозможностьИзменения = Значение(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)";
	Иначе
		Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
			Подразделение = ЭлементыФормы.ТабличноеПолеПодразделенияОрганизацийЕжемесячные.ТекущиеДанные;
			
			Если ТекущиеДанные = Неопределено Тогда
				Запрос.Текст = Запрос.Текст + "
				|	И ЗначенияПоказателейСхемМотивации.Показатель.ВозможностьИзменения = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)";
			Иначе
				Запрос.Текст = Запрос.Текст + "
				|	И ЗначенияПоказателейСхемМотивации.Показатель.ВозможностьИзменения = Значение(Перечисление.ВидыПоказателейСхемМотивации.ПоПодразделению)";
			КонецЕсли;
		Иначе
			Подразделение = ЭлементыФормы.ТабличноеПолеПодразделенияПоЦФОЕжемесячные.ТекущиеДанные;
			Если ТекущиеДанные = Неопределено Тогда
				Запрос.Текст = Запрос.Текст + "
				|	И ЗначенияПоказателейСхемМотивации.Показатель.ВозможностьИзменения = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)";
					
			Иначе
				Запрос.Текст = Запрос.Текст + "
				|	И ЗначенияПоказателейСхемМотивации.Показатель.ВозможностьИзменения = Значение(Перечисление.ВидыПоказателейСхемМотивации.ПоПодразделению)";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполненныеПоказатели = Запрос.Выполнить().Выгрузить();
	
	Если ПоПоказателям Тогда
		ТекущиеДанныеПоказателя = ЭлементыФормы.Показатели.ТекущиеДанные;
		Если ТекущиеДанныеПоказателя = Неопределено Тогда
			Запрос.УстановитьПараметр("Показатель", ТекущиеДанныеПоказателя.Ссылка);
		КонецЕсли;
	КонецЕсли;
	
	Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		
		
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
		Запрос.УстановитьПараметр("ОбособленноеПодразделение", Организация);
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	РаботникиОрганизаций.Сотрудник КАК Сотрудник,
		|	РаботникиОрганизаций.ПодразделениеОрганизации КАК Подразделение
		|ПОМЕСТИТЬ ВТСотрудники
		|ИЗ";
		Если ПоСотрудникам Тогда
			Запрос.Текст = Запрос.Текст + "
			|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ПарамДата, Организация = &ГоловнаяОрганизация И Сотрудник В (&Сотрудники)) КАК РаботникиОрганизаций";
		ИначеЕсли ПоПодразделениям Тогда 
			Запрос.Текст = Запрос.Текст + "
			|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ПарамДата, Организация = &ГоловнаяОрганизация И ПодразделениеОрганизации = &Подразделение) КАК РаботникиОрганизаций";
		Иначе
			Запрос.Текст = Запрос.Текст + "
			|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ПарамДата,) КАК РаботникиОрганизаций";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ГДЕ";
		Если ПоСотрудникам Или ПоПодразделениям Тогда
			Запрос.Текст = Запрос.Текст + "
			|	ВЫБОР
			|			КОГДА РаботникиОрганизаций.ПериодЗавершения <= &ПарамДата
			|					И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|				ТОГДА РаботникиОрганизаций.ОбособленноеПодразделениеЗавершения
			|			ИНАЧЕ РаботникиОрганизаций.ОбособленноеПодразделение
			|		КОНЕЦ = &ОбособленноеПодразделение
			|	И";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|		ВЫБОР
		|			КОГДА РаботникиОрганизаций.ПериодЗавершения <= &ПарамДата
		|					И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА РаботникиОрганизаций.ПричинаИзмененияСостоянияЗавершения
		|			ИНАЧЕ РаботникиОрганизаций.ПричинаИзмененияСостояния
		|		КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	РаботникиОрганизаций.Сотрудник,
		|	РаботникиОрганизаций.ПодразделениеОрганизации
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		|ГДЕ
		|	РаботникиОрганизаций.Период > &ПериодДействия
		|	И РаботникиОрганизаций.Период <= &КонецМесяца";
		Если ПоСотрудникам Тогда
			Запрос.Текст = Запрос.Текст + "
			|	И РаботникиОрганизаций.ОбособленноеПодразделение = &ОбособленноеПодразделение
			|	И РаботникиОрганизаций.Организация = &ГоловнаяОрганизация
			|	И РаботникиОрганизаций.Сотрудник В (&Сотрудники)";
		ИначеЕсли ПоПодразделениям Тогда
			Запрос.Текст = Запрос.Текст + "
			|	И РаботникиОрганизаций.ОбособленноеПодразделение = &ОбособленноеПодразделение
			|	И РаботникиОрганизаций.Организация = &ГоловнаяОрганизация
			|	И РаботникиОрганизаций.ПодразделениеОрганизации = &Подразделение";
		КонецЕсли;
		Если ПоСотрудникам Тогда
			Запрос.Текст = Запрос.Текст + "
			|	И РаботникиОрганизаций.Сотрудник В (&Сотрудники)";
		ИначеЕсли ПоПодразделениям Тогда
			Запрос.Текст = Запрос.Текст + "
			|	И РаботникиОрганизаций.ПодразделениеОрганизации = &Подразделение";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник 
		|";
		
		Запрос.Выполнить();
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	Показатели.Ссылка,
		|	Показатели.Показатель,
		|	Показатели.НомерСтроки
		|ПОМЕСТИТЬ ВТПоказатели
		|ИЗ
		|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели
		|ГДЕ
		|	(НЕ Показатели.Показатель.Предопределенный);
		|ВЫБРАТЬ
		|	ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация КАК Организация,
		|	ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|	ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчета,
		|	ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Показатель1,
		|	ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Показатель2,
		|	ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Показатель3,
		|	ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Показатель4,
		|	ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Показатель5,
		|	ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Показатель6,
		|	ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта1,
		|	ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта2,
		|	ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта3,
		|	ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта4,
		|	ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта5,
		|	ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта6
		|ПОМЕСТИТЬ ВТНачисления
		|ИЗ";
		Если ПоСотрудникам Или ПоПодразделениям Тогда
			Запрос.Текст = Запрос.Текст + "	
			|			РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(&ПарамДата, Организация = &ГоловнаяОрганизация И Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ ВТСотрудники)) КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних;";
		Иначе
			Запрос.Текст = Запрос.Текст + "
			|			РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(&ПарамДата, Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ ВТСотрудники)) КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних;";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ВЫБРАТЬ
		|	ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Организация,
		|	ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.ВидРасчета,
		|	ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.ФизЛицо КАК Сотрудник,
		|	ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Показатель1,
		|	ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Показатель2,
		|	ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Показатель3,
		|	ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Показатель4,
		|	ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Показатель5,
		|	ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Показатель6,
		|	ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта1,
		|	ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта2,
		|	ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта3,
		|	ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта4,
		|	ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта5,
		|	ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта6
		|Поместить ВТУдержания
		|	ИЗ";
		Если ПоСотрудникам Или ПоПодразделениям Тогда
			Запрос.Текст = Запрос.Текст + "	
			|				РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(&ПарамДата, Организация = &ГоловнаяОрганизация И ФизЛицо В (ВЫБРАТЬ Сотрудник.ФизЛицо ИЗ ВТСотрудники)) КАК ПлановыеУдержанияРаботниковОрганизацийСрезПоследних";
		Иначе
			Запрос.Текст = Запрос.Текст + "	
			|				РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(&ПарамДата, ФизЛицо В (ВЫБРАТЬ Сотрудник.ФизЛицо ИЗ ВТСотрудники)) КАК ПлановыеУдержанияРаботниковОрганизацийСрезПоследних";
		КонецЕсли;
		
		Запрос.Выполнить();
		
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|		ВложенныйЗапрос.Организация КАК Организация,
		|		Сотрудники.Подразделение КАК Подразделение,
		|		&ПериодДействия КАК ПериодДействия,
		|		ВложенныйЗапрос.Сотрудник КАК Сотрудник,
		|		ВложенныйЗапрос.Показатель КАК Показатель,
		|		СУММА(ЕСТЬNULL(ВложенныйЗапрос.Значение, 0)) КАК Значение,
		|		ВложенныйЗапрос.Валюта КАК Валюта
		|	ПОМЕСТИТЬ ВТПлановыеПоказатели
		|	ИЗ
		|		(ВЫБРАТЬ
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация КАК Организация,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
		|			Показатели.Показатель КАК Показатель,
		|			СУММА(ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Показатель1) КАК Значение,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта1 КАК Валюта
		|		ИЗ	ВТНачисления КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК Показатели
		|		ПО (Показатели.НомерСтроки = 1)
		|			И (Показатели.Ссылка = ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчета)
		|			И ((НЕ Показатели.Показатель.Предопределенный))
		|	ГДЕ
		|		Показатели.Показатель ЕСТЬ НЕ NULL
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|			Показатели.Показатель,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта1
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация КАК Организация,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|			Показатели.Показатель,
		|			СУММА(ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Показатель2),
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта2
		|		ИЗ	ВТНачисления КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК Показатели
		|			ПО (Показатели.НомерСтроки = 2)
		|				И (Показатели.Ссылка = ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчета)
		|				И ((НЕ Показатели.Показатель.Предопределенный))
		|		ГДЕ
		|			Показатели.Показатель ЕСТЬ НЕ NULL 
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|			Показатели.Показатель,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта2
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация КАК Организация,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|			Показатели.Показатель,
		|			СУММА(ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Показатель3),
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта3
		|		ИЗ	ВТНачисления КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК Показатели
		|			ПО (Показатели.НомерСтроки = 3)
		|				И (Показатели.Ссылка = ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчета)
		|				И ((НЕ Показатели.Показатель.Предопределенный))
		|		ГДЕ
		|			Показатели.Показатель ЕСТЬ НЕ NULL 
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|			Показатели.Показатель,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта3
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация КАК Организация,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|			Показатели.Показатель,
		|			СУММА(ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Показатель4),
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта4
		|		ИЗ	ВТНачисления КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК Показатели
		|			ПО (Показатели.НомерСтроки = 4)
		|				И (Показатели.Ссылка = ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчета)
		|				И ((НЕ Показатели.Показатель.Предопределенный))
		|		ГДЕ
		|			Показатели.Показатель ЕСТЬ НЕ NULL 
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|			Показатели.Показатель,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта4
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация КАК Организация,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|			Показатели.Показатель,
		|			СУММА(ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Показатель5),
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта5
		|		ИЗ	ВТНачисления КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК Показатели
		|			ПО (Показатели.НомерСтроки = 5)
		|				И (Показатели.Ссылка = ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчета)
		|				И ((НЕ Показатели.Показатель.Предопределенный))
		|		ГДЕ
		|			Показатели.Показатель ЕСТЬ НЕ NULL 
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта5,
		|			Показатели.Показатель
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация КАК Организация,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|			Показатели.Показатель,
		|			СУММА(ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Показатель6),
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта6
		|		ИЗ	ВТНачисления КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК Показатели
		|			ПО (Показатели.НомерСтроки = 6)
		|				И (Показатели.Ссылка = ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчета)
		|				И ((НЕ Показатели.Показатель.Предопределенный))
		|		ГДЕ
		|			Показатели.Показатель ЕСТЬ НЕ NULL 
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|			Показатели.Показатель,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта6
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			Показатели.Организация КАК Организация,
		|			Сотрудники.Сотрудник,
		|			Показатели.Показатель,
		|			СУММА(Показатели.Значение),
		|			Показатели.Валюта
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Организация,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|				Показатели.Показатель КАК Показатель,
		|				СУММА(ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Показатель1) КАК Значение,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта1 КАК Валюта
		|			ИЗ	ВТУдержания КАК ПлановыеУдержанияРаботниковОрганизацийСрезПоследних
		|					ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели
		|					ПО (Показатели.НомерСтроки = 1)
		|						И (Показатели.Ссылка = ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.ВидРасчета)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Организация,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|				Показатели.Показатель,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта1
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Организация,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|				Показатели.Показатель,
		|				СУММА(ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Показатель2),
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта2
		|			ИЗ	ВТУдержания КАК ПлановыеУдержанияРаботниковОрганизацийСрезПоследних
		|				ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели
		|				ПО (Показатели.НомерСтроки = 2)
		|					И (Показатели.Ссылка = ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.ВидРасчета)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Организация,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|				Показатели.Показатель,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта2
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Организация КАК Организация,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|				Показатели.Показатель,
		|				СУММА(ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Показатель3),
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта3
		|			ИЗ	ВТУдержания КАК ПлановыеУдержанияРаботниковОрганизацийСрезПоследних
		|					ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели
		|					ПО (Показатели.НомерСтроки = 3)
		|						И (Показатели.Ссылка = ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.ВидРасчета)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Организация,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|				Показатели.Показатель,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта3
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Организация КАК Организация,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|				Показатели.Показатель,
		|				СУММА(ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Показатель4),
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта4
		|			ИЗ	ВТУдержания КАК ПлановыеУдержанияРаботниковОрганизацийСрезПоследних
		|					ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели
		|					ПО (Показатели.НомерСтроки = 4)
		|						И (Показатели.Ссылка = ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.ВидРасчета)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Организация,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|				Показатели.Показатель,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта4
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Организация КАК Организация,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|				Показатели.Показатель,
		|				СУММА(ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Показатель5),
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта5
		|			ИЗ	ВТУдержания КАК ПлановыеУдержанияРаботниковОрганизацийСрезПоследних
		|					ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели
		|					ПО (Показатели.НомерСтроки = 5)
		|						И (Показатели.Ссылка = ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.ВидРасчета)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Организация,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|				Показатели.Показатель,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта5
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Организация КАК Организация,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|				Показатели.Показатель,
		|				СУММА(ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Показатель6),
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта6
		|			ИЗ	ВТУдержания КАК ПлановыеУдержанияРаботниковОрганизацийСрезПоследних
		|					ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели
		|					ПО (Показатели.НомерСтроки = 6)
		|						И (Показатели.Ссылка = ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.ВидРасчета)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Организация,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|				Показатели.Показатель,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта6) КАК Показатели
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СписокСотрудников.Сотрудник КАК Сотрудник,
		|					СписокСотрудников.Физлицо КАК Физлицо
		|				ИЗ
		|					(ВЫБРАТЬ
		|						МАКСИМУМ(РаботникиОсновноеМесто.Сотрудник) КАК Сотрудник,
		|						РаботникиОсновноеМесто.Сотрудник.Физлицо КАК Физлицо,
		|						1 КАК Приоритет
		|					ИЗ
		|						РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ПарамДата, Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)) КАК РаботникиОсновноеМесто
		|					ГДЕ
		|						ВЫБОР
		|								КОГДА РаботникиОсновноеМесто.ПериодЗавершения <= &ПарамДата
		|										И РаботникиОсновноеМесто.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|									ТОГДА РаботникиОсновноеМесто.ПричинаИзмененияСостоянияЗавершения
		|								ИНАЧЕ РаботникиОсновноеМесто.ПричинаИзмененияСостояния
		|							КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|					
		|					СГРУППИРОВАТЬ ПО
		|						РаботникиОсновноеМесто.Сотрудник.Физлицо
		|					
		|					ОБЪЕДИНИТЬ
		|					
		|					ВЫБРАТЬ
		|						МАКСИМУМ(РаботникиСовместительство.Сотрудник),
		|						РаботникиСовместительство.Сотрудник.Физлицо,
		|						2
		|					ИЗ
		|						РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ПарамДата, Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)) КАК РаботникиСовместительство
		|					ГДЕ
		|						ВЫБОР
		|								КОГДА РаботникиСовместительство.ПериодЗавершения <= &ПарамДата
		|										И РаботникиСовместительство.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|									ТОГДА РаботникиСовместительство.ПричинаИзмененияСостоянияЗавершения
		|								ИНАЧЕ РаботникиСовместительство.ПричинаИзмененияСостояния
		|							КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|					
		|					СГРУППИРОВАТЬ ПО
		|						РаботникиСовместительство.Сотрудник.Физлицо
		|					
		|					ОБЪЕДИНИТЬ
		|					
		|					ВЫБРАТЬ
		|						МАКСИМУМ(СотрудникиДУ.Ссылка),
		|						СотрудникиДУ.Физлицо,
		|						ВЫБОР
		|							КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|								ТОГДА 4
		|							ИНАЧЕ 5
		|						КОНЕЦ
		|					ИЗ
		|						Справочник.СотрудникиОрганизаций КАК СотрудникиДУ
		|					
		|					СГРУППИРОВАТЬ ПО
		|						СотрудникиДУ.Физлицо,
		|						ВЫБОР
		|							КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|								ТОГДА 4
		|							ИНАЧЕ 5
		|						КОНЕЦ) КАК СписокСотрудников
		|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|							СписокФизическихЛиц.Физлицо КАК Физлицо,
		|							МИНИМУМ(СписокФизическихЛиц.Приоритет) КАК Приоритет
		|						ИЗ
		|							(ВЫБРАТЬ
		|								РаботникиОсновноеМесто.Сотрудник.Физлицо КАК Физлицо,
		|								1 КАК Приоритет
		|							ИЗ
		|								РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|										&ПарамДата,
		|										Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|											И Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)) КАК РаботникиОсновноеМесто
		|							ГДЕ
		|								ВЫБОР
		|										КОГДА РаботникиОсновноеМесто.ПериодЗавершения <= &ПарамДата
		|												И РаботникиОсновноеМесто.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|											ТОГДА РаботникиОсновноеМесто.ПричинаИзмененияСостоянияЗавершения
		|										ИНАЧЕ РаботникиОсновноеМесто.ПричинаИзмененияСостояния
		|									КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|							
		|							ОБЪЕДИНИТЬ
		|							
		|							ВЫБРАТЬ
		|								РаботникиСовместительство.Сотрудник.Физлицо,
		|								2
		|							ИЗ
		|								РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|										&ПарамДата,
		|										Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|											И Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)) КАК РаботникиСовместительство
		|							ГДЕ
		|								ВЫБОР
		|										КОГДА РаботникиСовместительство.ПериодЗавершения <= &ПарамДата
		|												И РаботникиСовместительство.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|											ТОГДА РаботникиСовместительство.ПричинаИзмененияСостоянияЗавершения
		|										ИНАЧЕ РаботникиСовместительство.ПричинаИзмененияСостояния
		|									КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|							
		|							ОБЪЕДИНИТЬ
		|							
		|							ВЫБРАТЬ
		|								СотрудникиДУ.Физлицо,
		|								ВЫБОР
		|									КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|										ТОГДА 4
		|									ИНАЧЕ 5
		|								КОНЕЦ
		|							ИЗ
		|								Справочник.СотрудникиОрганизаций КАК СотрудникиДУ) КАК СписокФизическихЛиц
		|						
		|						СГРУППИРОВАТЬ ПО
		|							СписокФизическихЛиц.Физлицо) КАК СписокФизическихЛиц
		|						ПО СписокСотрудников.Физлицо = СписокФизическихЛиц.Физлицо
		|							И СписокСотрудников.Приоритет = СписокФизическихЛиц.Приоритет) КАК Сотрудники
		|				ПО Показатели.Сотрудник = Сотрудники.Физлицо
		|		ГДЕ
		|			Показатели.Показатель ЕСТЬ НЕ NULL 
		|			И (НЕ Показатели.Показатель.Предопределенный)";
		Если Не ПоСотрудникам И Не ПоПодразделениям Тогда
			Запрос.Текст = Запрос.Текст + "
			|			И Показатели.Показатель = (&Показатель)";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			Показатели.Организация,
		|			Показатели.Показатель,
		|			Сотрудники.Сотрудник,
		|			Показатели.Валюта) КАК ВложенныйЗапрос
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудники КАК Сотрудники
		|		ПО Сотрудники.Сотрудник = ВложенныйЗапрос.Сотрудник
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВложенныйЗапрос.Организация,
		|		Сотрудники.Подразделение,
		|		ВложенныйЗапрос.Сотрудник,
		|		ВложенныйЗапрос.Показатель,
		|		ВложенныйЗапрос.Валюта
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Показатель,
		|	Сотрудник,
		|	Подразделение";
		
		Запрос.Выполнить();
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Показатели.Организация КАК Организация,
		|	ВЫБОР КОГДА Показатели.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.ПоПодразделению) 
		|		ТОГДА Показатели.Подразделение
		|		ИНАЧЕ Значение(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ КАК Подразделение,
		|	Показатели.ПериодДействия КАК ПериодДействия,
		|	ВЫБОР КОГДА Показатели.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный) 
		|		ТОГДА Показатели.Сотрудник
		|		ИНАЧЕ Значение(Справочник.СотрудникиОрганизаций.ПустаяСсылка)
		|	КОНЕЦ КАК Сотрудник,
		|	Показатели.Показатель КАК Показатель,
		|	ВЫБОР КОГДА ЕСТЬNULL(Показатели." + ЗаполнениеДокументовЗК.ВалютаПоказателяИмяПоляЗапроса() + ", Значение(Справочник.Валюты.ПустаяСсылка)) = Значение(Справочник.Валюты.ПустаяСсылка) ТОГДА Показатель.Валюта ИНАЧЕ Показатели.Валюта КОНЕЦ КАК Валюта,
		|	СУММА(Показатели.Значение) КАК Значение
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПлановыеПоказатели.Организация КАК Организация,
		|		ПлановыеПоказатели.Подразделение КАК Подразделение,
		|		ПлановыеПоказатели.ПериодДействия КАК ПериодДействия,
		|		ПлановыеПоказатели.Сотрудник КАК Сотрудник,
		|		ПлановыеПоказатели.Показатель КАК Показатель,
		|		ПлановыеПоказатели.Значение КАК Значение,
		|		ПлановыеПоказатели.Валюта КАК Валюта
		|	ИЗ
		|		ВТПлановыеПоказатели КАК ПлановыеПоказатели
		|	) КАК Показатели
		|
		|ГДЕ Показатели.Показатель.ВозможностьИзменения = ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.Ежемесячно)";
		
		Если Не ПоПоказателям Тогда
			Если ПоСотрудникам Тогда
				Запрос.Текст = Запрос.Текст + "
				|И Показатели.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)";
			Иначе
				Запрос.Текст = Запрос.Текст + "
				|И Показатели.Показатель.ВидПоказателя <> Значение(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)";
			КонецЕсли;
		Иначе
			Если ПоСотрудникамКнопка Тогда
				Запрос.Текст = Запрос.Текст + "
				|И Показатели.Показатель= &Показатель";
			КонецЕсли;
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|
		|СГРУППИРОВАТЬ ПО
		|	Показатели.Организация,
		|	Показатели.Сотрудник,
		|	Показатели.Показатель,
		|	Показатели.Подразделение,
		|	Показатели.Валюта,
		|	Показатели.Организация,
		|	Показатели.ПериодДействия
		|
		|УПОРЯДОЧИТЬ ПО
		|	Организация,
		|	Подразделение,
		|	Сотрудник,
		|	Показатель";
		
	Иначе


		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	УправленческиеНачисленияПоказатели.Ссылка,
		|	УправленческиеНачисленияПоказатели.Показатель,
		|	УправленческиеНачисленияПоказатели.НомерСтроки
		|ПОМЕСТИТЬ ВТПоказатели
		|ИЗ
		|	ПланВидовРасчета.УправленческиеНачисления.Показатели КАК УправленческиеНачисленияПоказатели
		|ГДЕ
		|	УправленческиеНачисленияПоказатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.НеИзменяется)
		|	И УправленческиеНачисленияПоказатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ПустаяСсылка)
		|	И УправленческиеНачисленияПоказатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая)
		|	И УправленческиеНачисленияПоказатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная)
		|	И УправленческиеНачисленияПоказатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
		|	И УправленческиеНачисленияПоказатели.Показатель ЕСТЬ НЕ NULL 
		|	И (НЕ УправленческиеНачисленияПоказатели.Показатель.Предопределенный)";
		
		Если ПереключательСотрудники Тогда
			Запрос.Текст = Запрос.Текст + "
			|	И УправленческиеНачисленияПоказатели.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)";
		Иначе
			Если ПоПоказателям Тогда
				Показатель = ЭлементыФормы.Показатели.ТекущиеДанные;
				Если Показатель <> Неопределено Тогда
					Запрос.Текст = Запрос.Текст + "
					|	И УправленческиеНачисленияПоказатели.Показатель.ВидПоказателя <> Значение(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)
					|	И УправленческиеНачисленияПоказатели.Показатель = &Показатель";
					
				КонецЕсли;
			Иначе
				Подразделение = ЭлементыФормы.ТабличноеПолеПодразделенияПоЦФОЕжемесячные.ТекущиеДанные;
				Если Подразделение = Неопределено Тогда
					Запрос.Текст = Запрос.Текст + "
					|	И УправленческиеНачисленияПоказатели.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)";
						
				Иначе
					Запрос.Текст = Запрос.Текст + "
					|	И УправленческиеНачисленияПоказатели.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.ПоПодразделению)";
					
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;

		Запрос.Текст = Запрос.Текст + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	УправленческиеУдержанияПоказатели.Ссылка,
		|	УправленческиеУдержанияПоказатели.Показатель,
		|	УправленческиеУдержанияПоказатели.НомерСтроки
		|ПОМЕСТИТЬ ВТПоказателиУдержаний
		|ИЗ
		|	ПланВидовРасчета.УправленческиеУдержания.Показатели КАК УправленческиеУдержанияПоказатели
		|ГДЕ
		|	УправленческиеУдержанияПоказатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.НеИзменяется)
		|	И УправленческиеУдержанияПоказатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ПустаяСсылка)
		|	И УправленческиеУдержанияПоказатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая)
		|	И УправленческиеУдержанияПоказатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная)
		|	И УправленческиеУдержанияПоказатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
		|	И УправленческиеУдержанияПоказатели.Показатель ЕСТЬ НЕ NULL 
		|	И (НЕ УправленческиеУдержанияПоказатели.Показатель.Предопределенный)";
		Если ПереключательСотрудники Тогда
			Запрос.Текст = Запрос.Текст + "
			|	И УправленческиеУдержанияПоказатели.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)";
		Иначе
			Если ПоПоказателям Тогда
				Показатель = ЭлементыФормы.Показатели.ТекущиеДанные;
				Если ЗначениеЗаполнено(Показатель.Ссылка) Тогда
					Запрос.Текст = Запрос.Текст + "
					|	И УправленческиеУдержанияПоказатели.Показатель.ВидПоказателя <> Значение(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)
					|	И УправленческиеУдержанияПоказатели.Показатель = &Показатель";
					
				КонецЕсли;
			Иначе
				Подразделение = ЭлементыФормы.ТабличноеПолеПодразделенияПоЦФОЕжемесячные.ТекущиеДанные;
				Если Подразделение = Неопределено Тогда
					
					Запрос.Текст = Запрос.Текст + "
					|	И УправленческиеУдержанияПоказатели.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)";
					
				Иначе
					
					Запрос.Текст = Запрос.Текст + "
					|	И УправленческиеУдержанияПоказатели.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.ПоПодразделению)";
					
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "	
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Работники.ФизЛицо КАК ФизЛицо,
		|	Работники.Подразделение
		|ПОМЕСТИТЬ ВТСотрудники
		|ИЗ
		|	РегистрСведений.Работники.СрезПоследних(&ПарамДата, ) КАК Работники
		|ГДЕ
		|	Работники.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	Работники.ФизЛицо,
		|	NULL
		|ИЗ
		|	РегистрСведений.Работники КАК Работники
		|ГДЕ
		|	Работники.Период > &ПарамДата
		|	И Работники.Период <= &КонецМесяца
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	Работники.ФизЛицо,
		|	NULL
		|ИЗ
		|	РегистрСведений.Работники КАК Работники
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Работники КАК ПериодыПерекрытия
		|		ПО (ПериодыПерекрытия.Период > Работники.Период)
		|ГДЕ
		|	ПериодыПерекрытия.Период ЕСТЬ NULL 
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПлановыеНачисленияРаботниковСрезПоследних.ФизЛицо КАК ФизЛицо,
		|	ПлановыеНачисленияРаботниковСрезПоследних.ВидРасчета КАК ВидРасчета,
		|	ПлановыеНачисленияРаботниковСрезПоследних.Показатель1,
		|	ПлановыеНачисленияРаботниковСрезПоследних.Показатель2,
		|	ПлановыеНачисленияРаботниковСрезПоследних.Показатель3,
		|	ПлановыеНачисленияРаботниковСрезПоследних.Показатель4,
		|	ПлановыеНачисленияРаботниковСрезПоследних.Показатель5,
		|	ПлановыеНачисленияРаботниковСрезПоследних.Показатель6,
		|	ПлановыеНачисленияРаботниковСрезПоследних.Валюта1,
		|	ПлановыеНачисленияРаботниковСрезПоследних.Валюта2,
		|	ПлановыеНачисленияРаботниковСрезПоследних.Валюта3,
		|	ПлановыеНачисленияРаботниковСрезПоследних.Валюта4,
		|	ПлановыеНачисленияРаботниковСрезПоследних.Валюта5,
		|	ПлановыеНачисленияРаботниковСрезПоследних.Валюта6
		|ПОМЕСТИТЬ ВТНачисления
		|ИЗ
		|	РегистрСведений.ПлановыеНачисленияРаботников.СрезПоследних(
		|			&ПарамДата,
		|			ФизЛицо В
		|				(ВЫБРАТЬ
		|					ВТСотрудники.ФизЛицо
		|				ИЗ
		|					ВТСотрудники)) КАК ПлановыеНачисленияРаботниковСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо,
		|	ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПлановыеУдержанияРаботниковСрезПоследних.ФизЛицо КАК ФизЛицо,
		|	ПлановыеУдержанияРаботниковСрезПоследних.ВидРасчета КАК ВидРасчета,
		|	ПлановыеУдержанияРаботниковСрезПоследних.Показатель1,
		|	ПлановыеУдержанияРаботниковСрезПоследних.Показатель2,
		|	ПлановыеУдержанияРаботниковСрезПоследних.Показатель3,
		|	ПлановыеУдержанияРаботниковСрезПоследних.Показатель4,
		|	ПлановыеУдержанияРаботниковСрезПоследних.Показатель5,
		|	ПлановыеУдержанияРаботниковСрезПоследних.Показатель6,
		|	ПлановыеУдержанияРаботниковСрезПоследних.Валюта1,
		|	ПлановыеУдержанияРаботниковСрезПоследних.Валюта2,
		|	ПлановыеУдержанияРаботниковСрезПоследних.Валюта3,
		|	ПлановыеУдержанияРаботниковСрезПоследних.Валюта4,
		|	ПлановыеУдержанияРаботниковСрезПоследних.Валюта5,
		|	ПлановыеУдержанияРаботниковСрезПоследних.Валюта6
		|ПОМЕСТИТЬ ВТУдержания
		|ИЗ
		|	РегистрСведений.ПлановыеУдержанияРаботников.СрезПоследних(
		|			&ПарамДата,
		|			ФизЛицо В
		|				(ВЫБРАТЬ
		|					ВТСотрудники.ФизЛицо
		|				ИЗ
		|					ВТСотрудники)) КАК ПлановыеУдержанияРаботниковСрезПоследних";
		
		Запрос.Выполнить();
		

		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	Сотрудники.Подразделение КАК Подразделение,
		|	&ПериодДействия КАК ПериодДействия,
		|	ВложенныйЗапрос.ФизЛицо КАК ФизЛицо,
		|	ВложенныйЗапрос.Показатель КАК Показатель,
		|	СУММА(ЕСТЬNULL(ВложенныйЗапрос.Значение, 0)) КАК Значение,
		|	ВложенныйЗапрос.Валюта КАК Валюта
		|	ПОМЕСТИТЬ ВТПлановыеПоказатели
		|	ИЗ
		|		(ВЫБРАТЬ
		|			ПлановыеНачисленияРаботниковСрезПоследних.ФизЛицо КАК ФизЛицо,
		|			Показатели.Показатель КАК Показатель,
		|			СУММА(ПлановыеНачисленияРаботниковСрезПоследних.Показатель1) КАК Значение,
		|			ПлановыеНачисленияРаботниковСрезПоследних.Валюта1 КАК Валюта
		|		ИЗ
		|			ВТНачисления КАК ПлановыеНачисленияРаботниковСрезПоследних
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК Показатели
		|				ПО (Показатели.НомерСтроки = 1)
		|				И (Показатели.Ссылка = ПлановыеНачисленияРаботниковСрезПоследних.ВидРасчета)";
		Если ПоПоказателям Тогда
					Запрос.Текст = Запрос.Текст + "
		|			И Показатели.Показатель = &Показатель";
		КонецЕсли;
					Запрос.Текст = Запрос.Текст + "
		|		ГДЕ
		|			Показатели.Показатель ЕСТЬ НЕ NULL 
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПлановыеНачисленияРаботниковСрезПоследних.ФизЛицо,
		|			Показатели.Показатель,
		|			ПлановыеНачисленияРаботниковСрезПоследних.Валюта1
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПлановыеНачисленияРаботниковСрезПоследних.ФизЛицо,
		|			Показатели.Показатель,
		|			СУММА(ПлановыеНачисленияРаботниковСрезПоследних.Показатель2),
		|			ПлановыеНачисленияРаботниковСрезПоследних.Валюта2
		|		ИЗ
		|			ВТНачисления КАК ПлановыеНачисленияРаботниковСрезПоследних
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК Показатели
		|				ПО (Показатели.НомерСтроки = 2)
		|					И (Показатели.Ссылка = ПлановыеНачисленияРаботниковСрезПоследних.ВидРасчета)
		|		ГДЕ
		|			Показатели.Показатель ЕСТЬ НЕ NULL";
		Если ПоПоказателям Тогда
					Запрос.Текст = Запрос.Текст + "
		|			И Показатели.Показатель = &Показатель";
		КонецЕсли;
					Запрос.Текст = Запрос.Текст + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПлановыеНачисленияРаботниковСрезПоследних.ФизЛицо,
		|			Показатели.Показатель,
		|			ПлановыеНачисленияРаботниковСрезПоследних.Валюта2
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПлановыеНачисленияРаботниковСрезПоследних.ФизЛицо,
		|			Показатели.Показатель,
		|			СУММА(ПлановыеНачисленияРаботниковСрезПоследних.Показатель3),
		|			ПлановыеНачисленияРаботниковСрезПоследних.Валюта3
		|		ИЗ
		|			ВТНачисления КАК ПлановыеНачисленияРаботниковСрезПоследних
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК Показатели
		|				ПО (Показатели.НомерСтроки = 3)
		|					И (Показатели.Ссылка = ПлановыеНачисленияРаботниковСрезПоследних.ВидРасчета)
		|		ГДЕ
		|			Показатели.Показатель ЕСТЬ НЕ NULL";
		Если ПоПоказателям Тогда
					Запрос.Текст = Запрос.Текст + "
		|			И Показатели.Показатель = &Показатель";
		КонецЕсли;
					Запрос.Текст = Запрос.Текст + "
		|		СГРУППИРОВАТЬ ПО
		|			ПлановыеНачисленияРаботниковСрезПоследних.ФизЛицо,
		|			Показатели.Показатель,
		|			ПлановыеНачисленияРаботниковСрезПоследних.Валюта3
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПлановыеНачисленияРаботниковСрезПоследних.ФизЛицо,
		|			Показатели.Показатель,
		|			СУММА(ПлановыеНачисленияРаботниковСрезПоследних.Показатель4),
		|			ПлановыеНачисленияРаботниковСрезПоследних.Валюта4
		|		ИЗ
		|			ВТНачисления КАК ПлановыеНачисленияРаботниковСрезПоследних
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК Показатели
		|				ПО (Показатели.НомерСтроки = 4)
		|					И (Показатели.Ссылка = ПлановыеНачисленияРаботниковСрезПоследних.ВидРасчета)
		|		ГДЕ
		|			Показатели.Показатель ЕСТЬ НЕ NULL";
		Если ПоПоказателям Тогда
					Запрос.Текст = Запрос.Текст + "
		|			И Показатели.Показатель = &Показатель";
		КонецЕсли;
					Запрос.Текст = Запрос.Текст + "		
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПлановыеНачисленияРаботниковСрезПоследних.ФизЛицо,
		|			Показатели.Показатель,
		|			ПлановыеНачисленияРаботниковСрезПоследних.Валюта4
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПлановыеНачисленияРаботниковСрезПоследних.ФизЛицо,
		|			Показатели.Показатель,
		|			СУММА(ПлановыеНачисленияРаботниковСрезПоследних.Показатель5),
		|			ПлановыеНачисленияРаботниковСрезПоследних.Валюта5
		|		ИЗ
		|			ВТНачисления КАК ПлановыеНачисленияРаботниковСрезПоследних
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК Показатели
		|				ПО (Показатели.НомерСтроки = 5)
		|					И (Показатели.Ссылка = ПлановыеНачисленияРаботниковСрезПоследних.ВидРасчета)
		|		ГДЕ
		|			Показатели.Показатель ЕСТЬ НЕ NULL";
		Если ПоПоказателям Тогда
			Запрос.Текст = Запрос.Текст + "
		|			И Показатели.Показатель = &Показатель";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПлановыеНачисленияРаботниковСрезПоследних.ФизЛицо,
		|			Показатели.Показатель,
		|			ПлановыеНачисленияРаботниковСрезПоследних.Валюта5
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПлановыеНачисленияРаботниковСрезПоследних.ФизЛицо,
		|			Показатели.Показатель,
		|			СУММА(ПлановыеНачисленияРаботниковСрезПоследних.Показатель6),
		|			ПлановыеНачисленияРаботниковСрезПоследних.Валюта6
		|		ИЗ
		|			ВТНачисления КАК ПлановыеНачисленияРаботниковСрезПоследних
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК Показатели
		|				ПО (Показатели.НомерСтроки = 6)
		|					И (Показатели.Ссылка = ПлановыеНачисленияРаботниковСрезПоследних.ВидРасчета)
		|		ГДЕ
		|			Показатели.Показатель ЕСТЬ НЕ NULL";
		Если ПоПоказателям Тогда
					Запрос.Текст = Запрос.Текст + "
		|			И Показатели.Показатель = &Показатель";
		КонецЕсли;
					Запрос.Текст = Запрос.Текст + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПлановыеНачисленияРаботниковСрезПоследних.ФизЛицо,
		|			Показатели.Показатель,
		|			ПлановыеНачисленияРаботниковСрезПоследних.Валюта6
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			Показатели.ФизЛицо,
		|			Показатели.Показатель,
		|			СУММА(Показатели.Значение),
		|			Показатели.Валюта
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ПлановыеУдержанияРаботниковСрезПоследних.ФизЛицо КАК ФизЛицо,
		|				Показатели.Показатель КАК Показатель,
		|				СУММА(ПлановыеУдержанияРаботниковСрезПоследних.Показатель1) КАК Значение,
		|				ПлановыеУдержанияРаботниковСрезПоследних.Валюта1 КАК Валюта
		|			ИЗ
		|				ВТУдержания КАК ПлановыеУдержанияРаботниковСрезПоследних
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказателиУдержаний КАК Показатели
		|					ПО (Показатели.НомерСтроки = 1)
		|						И (Показатели.Ссылка = ПлановыеУдержанияРаботниковСрезПоследних.ВидРасчета)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПлановыеУдержанияРаботниковСрезПоследних.ФизЛицо,
		|				Показатели.Показатель,
		|				ПлановыеУдержанияРаботниковСрезПоследних.Валюта1
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				ПлановыеУдержанияРаботниковСрезПоследних.ФизЛицо КАК ФизЛицо,
		|				Показатели.Показатель КАК Показатель,
		|				СУММА(ПлановыеУдержанияРаботниковСрезПоследних.Показатель2) КАК Значение,
		|				ПлановыеУдержанияРаботниковСрезПоследних.Валюта2 КАК Валюта
		|			ИЗ
		|				ВТУдержания КАК ПлановыеУдержанияРаботниковСрезПоследних
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказателиУдержаний КАК Показатели
		|					ПО (Показатели.НомерСтроки = 2)
		|						И (Показатели.Ссылка = ПлановыеУдержанияРаботниковСрезПоследних.ВидРасчета)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПлановыеУдержанияРаботниковСрезПоследних.ФизЛицо,
		|				Показатели.Показатель,
		|				ПлановыеУдержанияРаботниковСрезПоследних.Валюта2
		
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				ПлановыеУдержанияРаботниковСрезПоследних.ФизЛицо КАК ФизЛицо,
		|				Показатели.Показатель КАК Показатель,
		|				СУММА(ПлановыеУдержанияРаботниковСрезПоследних.Показатель3) КАК Значение,
		|				ПлановыеУдержанияРаботниковСрезПоследних.Валюта3 КАК Валюта
		|			ИЗ
		|				ВТУдержания КАК ПлановыеУдержанияРаботниковСрезПоследних
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК Показатели
		|					ПО (Показатели.НомерСтроки = 3)
		|						И (Показатели.Ссылка = ПлановыеУдержанияРаботниковСрезПоследних.ВидРасчета)
		|			СГРУППИРОВАТЬ ПО
		|				ПлановыеУдержанияРаботниковСрезПоследних.ФизЛицо,
		|				Показатели.Показатель,
		|				ПлановыеУдержанияРаботниковСрезПоследних.Валюта3
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				ПлановыеУдержанияРаботниковСрезПоследних.ФизЛицо КАК ФизЛицо,
		|				Показатели.Показатель КАК Показатель,
		|				СУММА(ПлановыеУдержанияРаботниковСрезПоследних.Показатель4) КАК Значение,
		|				ПлановыеУдержанияРаботниковСрезПоследних.Валюта4 КАК Валюта
		|			ИЗ
		|				ВТУдержания КАК ПлановыеУдержанияРаботниковСрезПоследних
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК Показатели
		|					ПО (Показатели.НомерСтроки = 4)
		|						И (Показатели.Ссылка = ПлановыеУдержанияРаботниковСрезПоследних.ВидРасчета)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПлановыеУдержанияРаботниковСрезПоследних.ФизЛицо,
		|				Показатели.Показатель,
		|				ПлановыеУдержанияРаботниковСрезПоследних.Валюта4
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				ПлановыеУдержанияРаботниковСрезПоследних.ФизЛицо КАК ФизЛицо,
		|				Показатели.Показатель КАК Показатель,
		|				СУММА(ПлановыеУдержанияРаботниковСрезПоследних.Показатель5) КАК Значение,
		|				ПлановыеУдержанияРаботниковСрезПоследних.Валюта5 КАК Валюта
		|			ИЗ
		|				ВТУдержания КАК ПлановыеУдержанияРаботниковСрезПоследних
		|					ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели
		|					ПО (Показатели.НомерСтроки = 3)
		|						И (Показатели.Ссылка = ПлановыеУдержанияРаботниковСрезПоследних.ВидРасчета)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПлановыеУдержанияРаботниковСрезПоследних.ФизЛицо,
		|				Показатели.Показатель,
		|				ПлановыеУдержанияРаботниковСрезПоследних.Валюта5
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				ПлановыеУдержанияРаботниковСрезПоследних.ФизЛицо КАК ФизЛицо,
		|				Показатели.Показатель КАК Показатель,
		|				СУММА(ПлановыеУдержанияРаботниковСрезПоследних.Показатель6) КАК Значение,
		|				ПлановыеУдержанияРаботниковСрезПоследних.Валюта6 КАК Валюта
		|			ИЗ
		|				ВТУдержания КАК ПлановыеУдержанияРаботниковСрезПоследних
		|					ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели
		|					ПО (Показатели.НомерСтроки = 6)
		|						И (Показатели.Ссылка = ПлановыеУдержанияРаботниковСрезПоследних.ВидРасчета)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПлановыеУдержанияРаботниковСрезПоследних.ФизЛицо,
		|				Показатели.Показатель,
		|				ПлановыеУдержанияРаботниковСрезПоследних.Валюта6) КАК Показатели
		|		ГДЕ
		|			Показатели.Показатель ЕСТЬ НЕ NULL 
		|			И (НЕ Показатели.Показатель.Предопределенный)";
		Если ПоПоказателям Тогда
			Запрос.Текст = Запрос.Текст + "
		|			И Показатели.Показатель = &Показатель";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			Показатели.Показатель,
		|			Показатели.ФизЛицо,
		|			Показатели.Валюта) КАК ВложенныйЗапрос
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудники КАК Сотрудники
		|		ПО Сотрудники.ФизЛицо = ВложенныйЗапрос.ФизЛицо
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Сотрудники.Подразделение,
		|		ВложенныйЗапрос.ФизЛицо,
		|		ВложенныйЗапрос.Показатель,
		|		ВложенныйЗапрос.Валюта
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Показатель,
		|	ФизЛицо,
		|	Подразделение";
		//|";
		
		Запрос.Выполнить();
	
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Значение(Справочник.Организации.ПустаяСсылка) КАК Организация,";
		Если Не ПереключательСотрудники Тогда
			Запрос.Текст = Запрос.Текст + "
		|	Показатели.Подразделение КАК Подразделение,";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|	Показатели.ПериодДействия КАК ПериодДействия,";
		Если ПереключательСотрудники Тогда
			Запрос.Текст = Запрос.Текст + "
			|	Показатели.Сотрудник КАК Сотрудник,";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|	Показатели.Показатель КАК Показатель,
		|	ВЫБОР КОГДА ЕСТЬNULL(Показатели." + ЗаполнениеДокументовЗК.ВалютаПоказателяИмяПоляЗапроса() + ", Значение(Справочник.Валюты.ПустаяСсылка)) = Значение(Справочник.Валюты.ПустаяСсылка) ТОГДА Показатель.Валюта ИНАЧЕ Показатели.Валюта КОНЕЦ КАК Валюта,
		|	СУММА(Показатели.Значение) КАК Значение
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПлановыеПоказатели.Подразделение КАК Подразделение,
		|		ПлановыеПоказатели.ПериодДействия КАК ПериодДействия,
		|		Сотрудники.Сотрудник КАК Сотрудник,
		|		ПлановыеПоказатели.Показатель КАК Показатель,
		|		ПлановыеПоказатели.Значение КАК Значение,
		|		ПлановыеПоказатели.Валюта КАК Валюта
		|	ИЗ
		|		ВТПлановыеПоказатели КАК ПлановыеПоказатели
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				СписокСотрудников.Сотрудник КАК Сотрудник,
		|				СписокСотрудников.Физлицо КАК Физлицо
		|			ИЗ
		|				(ВЫБРАТЬ
		|					МАКСИМУМ(РаботникиОсновноеМесто.Сотрудник) КАК Сотрудник,
		|					РаботникиОсновноеМесто.Сотрудник.Физлицо КАК Физлицо,
		|					1 КАК Приоритет
		|				ИЗ
		|					РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ПарамДата, Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)) КАК РаботникиОсновноеМесто
		|				ГДЕ
		|					ВЫБОР
		|							КОГДА РаботникиОсновноеМесто.ПериодЗавершения <= &ПарамДата
		|									И РаботникиОсновноеМесто.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|								ТОГДА РаботникиОсновноеМесто.ПричинаИзмененияСостоянияЗавершения
		|							ИНАЧЕ РаботникиОсновноеМесто.ПричинаИзмененияСостояния
		|						КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					РаботникиОсновноеМесто.Сотрудник.Физлицо
		|				
		|				ОБЪЕДИНИТЬ
		|				
		|				ВЫБРАТЬ
		|					МАКСИМУМ(РаботникиСовместительство.Сотрудник),
		|					РаботникиСовместительство.Сотрудник.Физлицо,
		|					2
		|				ИЗ
		|					РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ПарамДата, Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)) КАК РаботникиСовместительство
		|				ГДЕ
		|					ВЫБОР
		|							КОГДА РаботникиСовместительство.ПериодЗавершения <= &ПарамДата
		|									И РаботникиСовместительство.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|								ТОГДА РаботникиСовместительство.ПричинаИзмененияСостоянияЗавершения
		|							ИНАЧЕ РаботникиСовместительство.ПричинаИзмененияСостояния
		|						КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					РаботникиСовместительство.Сотрудник.Физлицо
		|				
		|				ОБЪЕДИНИТЬ
		|				
		|				ВЫБРАТЬ
		|					МАКСИМУМ(СотрудникиДУ.Ссылка),
		|					СотрудникиДУ.Физлицо,
		|					ВЫБОР
		|						КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий)
		|							ТОГДА 3
		|						КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|							ТОГДА 4
		|						ИНАЧЕ 5
		|					КОНЕЦ
		|				ИЗ
		|					Справочник.СотрудникиОрганизаций КАК СотрудникиДУ
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СотрудникиДУ.Физлицо,
		|					ВЫБОР
		|						КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий)
		|							ТОГДА 3
		|						КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|							ТОГДА 4
		|						ИНАЧЕ 5
		|					КОНЕЦ) КАК СписокСотрудников
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|						СписокФизическихЛиц.Физлицо КАК Физлицо,
		|						МИНИМУМ(СписокФизическихЛиц.Приоритет) КАК Приоритет
		|					ИЗ
		|						(ВЫБРАТЬ
		|							РаботникиОсновноеМесто.Сотрудник.Физлицо КАК Физлицо,
		|							1 КАК Приоритет
		|						ИЗ
		|							РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|									&ПарамДата,
		|									Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|										И Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)) КАК РаботникиОсновноеМесто
		|						ГДЕ
		|							ВЫБОР
		|									КОГДА РаботникиОсновноеМесто.ПериодЗавершения <= &ПарамДата
		|											И РаботникиОсновноеМесто.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|										ТОГДА РаботникиОсновноеМесто.ПричинаИзмененияСостоянияЗавершения
		|									ИНАЧЕ РаботникиОсновноеМесто.ПричинаИзмененияСостояния
		|								КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							РаботникиСовместительство.Сотрудник.Физлицо,
		|							2
		|						ИЗ
		|							РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|									&ПарамДата,
		|									Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|										И Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)) КАК РаботникиСовместительство
		|						ГДЕ
		|							ВЫБОР
		|									КОГДА РаботникиСовместительство.ПериодЗавершения <= &ПарамДата
		|											И РаботникиСовместительство.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|										ТОГДА РаботникиСовместительство.ПричинаИзмененияСостоянияЗавершения
		|									ИНАЧЕ РаботникиСовместительство.ПричинаИзмененияСостояния
		|								КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							СотрудникиДУ.Физлицо,
		|							ВЫБОР
		|								КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий)
		|									ТОГДА 3
		|								КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|									ТОГДА 4
		|								ИНАЧЕ 5
		|							КОНЕЦ
		|						ИЗ
		|							Справочник.СотрудникиОрганизаций КАК СотрудникиДУ) КАК СписокФизическихЛиц
		|					
		|					СГРУППИРОВАТЬ ПО
		|						СписокФизическихЛиц.Физлицо) КАК СписокФизическихЛиц
		|					ПО СписокСотрудников.Физлицо = СписокФизическихЛиц.Физлицо
		|						И СписокСотрудников.Приоритет = СписокФизическихЛиц.Приоритет) КАК Сотрудники
		|			ПО ПлановыеПоказатели.Физлицо = Сотрудники.Физлицо
		|	) КАК Показатели
		|
		|ГДЕ Показатели.Показатель.ВозможностьИзменения = ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.Ежемесячно)";
		Если Не ПереключательСотрудники Тогда
			Запрос.Текст = Запрос.Текст + "
			|	И Показатели.Подразделение <> НеОпределено";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|
		|СГРУППИРОВАТЬ ПО";
		Если Не ПереключательСотрудники Тогда
			Запрос.Текст = Запрос.Текст + "
		|	Показатели.Подразделение,";
		ИначеЕсли ПереключательСотрудники Тогда
			Запрос.Текст = Запрос.Текст + "
			|	Показатели.Сотрудник,";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|	Показатели.Показатель,
		|	Показатели.Валюта,
		|	Показатели.ПериодДействия
		|
		|УПОРЯДОЧИТЬ ПО";
		Если Не ПереключательСотрудники Тогда
			Запрос.Текст = Запрос.Текст + "
		|	Подразделение,";
		ИначеЕсли ПереключательСотрудники Тогда
			Запрос.Текст = Запрос.Текст + "
			|	Показатели.Сотрудник,";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|	Показатель";

	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Организация",		Выборка.Организация);
		Если Не ПереключательСотрудники Тогда
			ПараметрыОтбора.Вставить("Подразделение",	Выборка.Подразделение);
		Иначе
			ПараметрыОтбора.Вставить("Подразделение",	Неопределено);
		КонецЕсли;
		Если ПереключательСотрудники Тогда
			ПараметрыОтбора.Вставить("Сотрудник",		Выборка.Сотрудник);
		Иначе
			ПараметрыОтбора.Вставить("Сотрудник",		Справочники.СотрудникиОрганизаций.ПустаяСсылка());
		КонецЕсли;
		ПараметрыОтбора.Вставить("Показатель",		Выборка.Показатель);
		
		НайденоСтрок = ЗаполненныеПоказатели.НайтиСтроки(ПараметрыОтбора);
		Если НайденоСтрок.Количество() = 0 Тогда
			
			Запись = РегистрыСведений.ЗначенияПоказателейСхемМотивации.СоздатьМенеджерЗаписи();
			
			Если ПереключательСотрудники Тогда
				Запись.Сотрудник		=	 Выборка.Сотрудник;
			Иначе
				Запись.Подразделение	=	 Выборка.Подразделение;
			КонецЕсли;
			Запись.Показатель		=	 Выборка.Показатель;
			Запись.Организация		=	 Выборка.Организация;
			Запись.ПериодДействия	=	 Выборка.ПериодДействия;
			Запись.Валюта			=	 Выборка.Валюта;
			Запись.Записать();
		КонецЕсли;
	КонецЦикла;
	
	
КонецПроцедуры //ДействияФормыЗаполнитьПоРегистру

// Устанавливает устанавливает порядок ежемесячных показателей ввода "По сотрудникам"
//
Процедура ОтборыЕжемесячныхПоказателейСотрудники()
	
	ЭлементыФормы.ПоСотрудникамПодразделениям.Заголовок = "По сотрудникам";
	
	Если Не ПоПоказателям Тогда
		ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Сотрудники;
	Иначе
		ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Показатели;
	КонецЕсли;
	
	ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.Показатель.Видимость = Не ПоПоказателям;
	ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.Сотрудник.Видимость = ПоПоказателям;
	ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.Подразделение.Видимость = Ложь;
	
	УстановитьПустуюСсылкуНаПродразделение();
	
	ОтборПоСотрудникуЕжемесячно();
	
	УстановитьОтборПоказателей();
	
	Если ПоПоказателям Тогда
		ПоказателиПриАктивизацииСтроки();
	Иначе
		СотрудникиПриАктивизацииСтроки();
	КонецЕсли;
	
	УстановитьВидимостьОрганизацииИТН();
	
КонецПроцедуры //ОтборыЕжемесячныхПоказателейСотрудники

// Устанавливает устанавливает порядок ежемесячных показателей ввода "По подразделениям"
//
Процедура ОтборыЕжемесячныхПоказателейПодразделения()

	ЭлементыФормы.ПоСотрудникамПодразделениям.Заголовок = "По подразделениям";
	
	Если Не ПоПоказателям Тогда
		Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
			ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Подразделения;
		Иначе
			ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.ЦФО;
		КонецЕсли;
	КонецЕсли;

	ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.Показатель.Видимость = Не ПоПоказателям;
	ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.Сотрудник.Видимость = Ложь;
	ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.Подразделение.Видимость = ПоПоказателям;
	ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.Организация.Видимость = ПоПоказателям И НЕ ПереключательСотрудники И ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц;

	УстановитьОтборПоказателей();
	
	УстановитьОтборПоПодразделениюИОрганизацииЕжемесячно(Ложь, Не ПоПоказателям, Не ПоПоказателям);
	
	УстановитьВидимостьОрганизацииИТН();
	
	Если ПоПоказателям Тогда
		ПоказателиПриАктивизацииСтроки();
	КонецЕсли;
	
	
КонецПроцедуры //ОтборыЕжемесячныхПоказателейПодразделения

Процедура ОтображениеПериодическихПоказателей()
	
	Если ПоОрганизации Тогда
		ЭлементыФормы.ОрганизацияПериодические.Доступность = Истина;
		Если Не ЗначениеЗаполнено(ОрганизацияЕжемесячные) Тогда
			ОрганизацияЕжемесячные	= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
			ОрганизацияПериодические	= ОрганизацияЕжемесячные;
		КонецЕсли;
		ЭлементыФормы.ОрганизацияПериодические.Значение = ОрганизацияЕжемесячные;
		ЭлементыФормы.ПанельПериодическиеПоказатели.ТекущаяСтраница = ЭлементыФормы.ПанельПериодическиеПоказатели.Страницы.ПоОрганизации;
	Иначе
		ЭлементыФормы.ОрганизацияПериодические.Значение = ОрганизацияПериодические.Пустая();
		ЭлементыФормы.ОрганизацияПериодические.Доступность = Ложь;
		ОрганизацияПериодические = Неопределено;
		ПодразделениеПериодические = ПустоеПодразделение();
		ВыбраноПодразделениеПериодические = Ложь;
		ЭлементыФормы.ПанельПериодическиеПоказатели.ТекущаяСтраница = ЭлементыФормы.ПанельПериодическиеПоказатели.Страницы.ОбщиеДанные;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНОЙ ПАНЕЛЕЙ "КоманднаяПанель" ФОРМЫ

Процедура КоманднаяПанельПоказатели(Кнопка)
	Справочники.ПоказателиСхемМотивации.ПолучитьФормуСписка().Открыть();
КонецПроцедуры

Процедура КоманднаяПанельПлановыеНачисления(Кнопка)
	РегистрыСведений.ПлановыеНачисленияРаботниковОрганизаций.ПолучитьФормуСписка().Открыть();
КонецПроцедуры

Процедура КоманднаяПанельПлановыеУдержания(Кнопка)
	РегистрыСведений.ПлановыеУдержанияРаботниковОрганизаций.ПолучитьФормуСписка().Открыть();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик события "ПриИзменении" реквизиты формы ПериодДействия
//
Процедура ПериодДействияПриИзменении(Элемент)
	
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(Элемент.Значение, ПериодДействия);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодДействия);
	
	УстановитьОтборПоПериодуДействия();

КонецПроцедуры

// Процедура - обработчик события "НачалоВыбораИзСписка" реквизиты формы ПериодДействия
//
Процедура ПериодДействияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, ПериодДействия, ЭтаФорма);
	
	УстановитьОтборПоПериодуДействия();
	
КонецПроцедуры

// Процедура - обработчик события "Очистка" реквизиты формы ПериодДействия
//
Процедура ПериодДействияОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

КонецПроцедуры

// Процедура - обработчик события "Регулирование" реквизиты формы ПериодДействия
//
Процедура ПериодДействияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ПериодДействия = ДобавитьМесяц(ПериодДействия, Направление);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодДействия);
	
	УстановитьОтборПоПериодуДействия();

КонецПроцедуры

// Процедура - обработчик события "АвтоПодборТекста" реквизиты формы ПериодДействия
//
Процедура ПериодДействияАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	РаботаСДиалогами.ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);
	
	УстановитьОтборПоПериодуДействия();
	
КонецПроцедуры

// Процедура - обработчик события "ОкончаниеВводаТекста" реквизиты формы ПериодДействия
//
Процедура ПериодДействияОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	РаботаСДиалогами.ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка);
	
	УстановитьОтборПоПериодуДействия();

КонецПроцедуры


// Процедура - обработчик события "ПриИзменении" реквизиты формы РежимВвода
//
Процедура ПоПоказателямПриИзменении()
	
	ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.Показатель.Видимость = Не ПоПоказателям;
	
	Если ПереключательСотрудники Тогда
		ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.Сотрудник.Видимость = ПоПоказателям;
		ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.Подразделение.Видимость = Ложь;
		
		ЕжемесячныеПоказатели.Отбор.Сотрудник.Использование	= Не ПоПоказателям;
		
		Если ПоПоказателям Тогда
			ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Показатели;
		Иначе
			ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Сотрудники;
		КонецЕсли;
		
		ОтборыЕжемесячныхПоказателейСотрудники();
	Иначе
		ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.Сотрудник.Видимость = Ложь;
		
		ЕжемесячныеПоказатели.Отбор.Подразделение.Использование	= Не ПоПоказателям;
		
		Если ПоПоказателям Тогда
			ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Показатели;
		Иначе
			Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда 
				ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Подразделения;
			Иначе
				ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.ЦФО;
			КонецЕсли;
		КонецЕсли;
		
		ОтборыЕжемесячныхПоказателейПодразделения();
		
	КонецЕсли;
	
	ЕжемесячныеПоказатели.Отбор.Организация.Использование = ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц;
	
		
	УстановитьОтборПоказателей();
	
	УстановитьВидимостьОрганизацииИТН();
	
КонецПроцедуры

Процедура ПереключательСотрудникиПриИзменении(Элемент)
	
	Если ПереключательСотрудники Тогда
		ОтборыЕжемесячныхПоказателейСотрудники();
	Иначе 
		ОтборыЕжемесячныхПоказателейПодразделения();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоОрганизацииПриИзменении(Элемент)
	
	ОтображениеПериодическихПоказателей();
	
	ОрганизацияПериодические = ЭлементыФормы.ОрганизацияПериодические.Значение;
	Если НЕ ЗначениеЗаполнено(ЭлементыФормы.ПодразделенияОрганизацииПлановые.ТекущаяСтрока) Тогда
		ЭлементыФормы.ПодразделенияОрганизацииПлановые.ТекущаяСтрока = ПервоеПодразделениеОрганизации(ОрганизацияПериодические);
	КонецЕсли;
			
КонецПроцедуры

// Устанавливает отборы в зависимости от выбранной организационной структуры 
//
Процедура ВидОрганизационнойСтруктурыПредприятияПриИзменении()

	Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		
		ЭлементыФормы.ПанельЭпицентраПостоянные.Свертка			= РежимСверткиЭлементаУправления.Нет;
		ЭлементыФормы.ПанельПодразделенийПостоянныхПоказателей.ТекущаяСтраница = ЭлементыФормы.ПанельПодразделенийПостоянныхПоказателей.Страницы.ПодразделенияОрганизаций;
		Если ПоОрганизации Тогда
			ЭлементыФормы.ПанельПериодическиеПоказатели.ТекущаяСтраница				= ЭлементыФормы.ПанельПериодическиеПоказатели.Страницы.ПоОрганизации;
		Иначе
			ЭлементыФормы.ПанельПериодическиеПоказатели.ТекущаяСтраница				= ЭлементыФормы.ПанельПериодическиеПоказатели.Страницы.ОбщиеДанные;
		КонецЕсли;
		
	Иначе

		ЭлементыФормы.ПанельЭпицентраПостоянные.Свертка							= РежимСверткиЭлементаУправления.Верх;
		ЭлементыФормы.ПанельПодразделенийПостоянныхПоказателей.ТекущаяСтраница	= ЭлементыФормы.ПанельПодразделенийПостоянныхПоказателей.Страницы.Подразделения;
		ЭлементыФормы.ПанельПериодическиеПоказатели.ТекущаяСтраница				= ЭлементыФормы.ПанельПериодическиеПоказатели.Страницы.ПоОрганизации;

	КонецЕсли;
	
КонецПроцедуры

// Устанавливает порядок ввода показателей по Организации
Процедура ОбработатьИзмененияРежимаФормирования()
	
	УстановитьОтборСотрудников();

	ВидОрганизационнойСтруктурыПредприятияПриИзменении();
	
	УстановитьОтборПоПодразделениюИОрганизацииЕжемесячно(ПереключательСотрудники,Не ПоПоказателям, Не ПоПоказателям);
	
	ПоПоказателямПриИзменении();
	
	УстановитьВидимостьВалюты();
	УстановитьЗаголовокФормы();

	Если ВидОрганизационнойСтруктурыПредприятия= Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		
		Сотрудники.Отбор.ВидДоговора.Использование	= Истина;
		Сотрудники.Отбор.ВидДоговора.ВидСравнения	= ВидСравнения.НеРавно;
		Сотрудники.Отбор.ВидДоговора.Значение		= Перечисления.ВидыДоговоровСФизЛицами.ДоговорУправленческий;
		
		ПервоеПодразделениеОрганизации = ПервоеПодразделениеОрганизации(ОрганизацияЕжемесячные);
		ЭлементыФормы.ТабличноеПолеПодразделенияОрганизацийЕжемесячные.ТекущаяСтрока = ПервоеПодразделениеОрганизации;

		ЭлементыФормы.ПереключательПодразделения.Заголовок = "Данные по организациям и подразделениям";
		
		ЕжемесячныеПоказатели.Отбор.Организация.Использование	= Истина;
		ЕжемесячныеПоказатели.Отбор.Организация.ВидСравнения	= ВидСравнения.НеРавно;
		ЕжемесячныеПоказатели.Отбор.Организация.Значение		= Справочники.Организации.ПустаяСсылка();
		
	Иначе
		
		ЭлементыФормы.ПереключательПодразделения.Заголовок		= "Данные по подразделениям";
		Сотрудники.Отбор.ВидДоговора.Использование				= Ложь;
		ЕжемесячныеПоказатели.Отбор.Организация.Установить(Справочники.Организации.ПустаяСсылка());
		
	КонецЕсли;
	
	// установка пометок на кнопках
	Если ЭлементыФормы.КоманднаяПанель.Кнопки.Найти("РежимФормированияСхемМотивации") <> Неопределено Тогда
		Кнопки = ЭлементыФормы.КоманднаяПанель.Кнопки.РежимФормированияСхемМотивации.Кнопки;
		Кнопки.ПоСтруктуреЮридическихЛиц.Пометка	= ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц;
		Кнопки.ПоЦентрамОтветственности.Пометка		= ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоЦентрамОтветственности;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнительныеДействия(Кнопка)
	
	Если Найти(Кнопка.Имя, "ПоСтруктуреЮридическихЛиц") > 0 Или Найти(Кнопка.Имя, "ПоЦентрамОтветственности") > 0 Тогда
		ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия[Кнопка.Имя];
		ОбработатьИзмененияРежимаФормирования();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ "ТабличноеПолеПодразделенияОрганизацийЕжемесячные" ФОРМЫ

// Процедура - обработчик события "ПриАктивизацииСтроки" табличного поля
//
Процедура ТабличноеПолеПодразделенияОрганизацийЕжемесячныеПриАктивизацииСтроки()
	
	ПодключитьОбработчикОжидания("ОбработчикПриАктивизацииСтрокиПодразделенияОрганизацийЕжемесячные", 0.1, Истина);
	
КонецПроцедуры

Процедура ОбработчикПриАктивизацииСтрокиПодразделенияОрганизацийЕжемесячные()
	
	ТекущаяСтрока = ЭлементыФормы.ТабличноеПолеПодразделенияОрганизацийЕжемесячные.ТекущаяСтрока;
	
	ТекущаяКолонка = ЭлементыФормы.ТабличноеПолеПодразделенияОрганизацийЕжемесячные.ТекущаяКолонка.Имя;
	
	ВыбраноПодразделениеЕжемесячные = ТекущаяКолонка = "Наименование";

	Если ТекущаяСтрока <> Неопределено  Тогда
		ОрганизацияЕжемесячные = ТекущаяСтрока.Владелец;
		Если Не ЗначениеЗаполнено(ОрганизацияЕжемесячные) Тогда
			мОрганизацияНеВыбранаЕжемесячно		= Истина;
			ВыбраноПодразделениеЕжемесячные		= Ложь;
			ВыбранаОрганизация					= Ложь;
		Иначе
			мОрганизацияНеВыбранаЕжемесячно		= Ложь;
			ВыбранаОрганизация					= Истина;
		КонецЕсли;
		Если ОрганизацияЕжемесячные <> мПрежняяОрганизацияЕжемесячно Тогда
			ПриСменеОрганизации();
			мПрежняяОрганизацияЕжемесячно = ОрганизацияЕжемесячные;
		КонецЕсли;
	Иначе
		УстановитьПустуюСсылкуНаПродразделение();
	КонецЕсли;
	
	Если ВыбраноПодразделениеЕжемесячные Тогда
		ПодразделениеЕжемесячные = ТекущаяСтрока;
	Иначе
		УстановитьПустуюСсылкуНаПродразделение();
	КонецЕсли;
	
	УстановитьОтборПоПодразделениюИОрганизацииЕжемесячно();
	
КонецПроцедуры

// Процедура - обработчик события "ПриПолученииДанных" табличного поля
//
Процедура ТабличноеПолеПодразделенияОрганизацийПриПолученииДанных(Элемент, ОформленияСтрок)
	
	ОтображенныеОрганизации.Очистить();
	
	Для Каждого Оформление Из ОформленияСтрок Цикл
		Если Оформление.ДанныеСтроки = НеОпределено Тогда
			Оформление.Ячейки.Наименование.УстановитьТекст("Все " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("организации"));
			Оформление.Ячейки.Наименование.ОтображатьКартинку	= Ложь;
			Оформление.Ячейки.Наименование.Шрифт				= мЖирныйШрифт;
			Оформление.Ячейки.Организация.Видимость				= Ложь;
			Продолжить;
		КонецЕсли;
		
		Представление		= "";
		НазваниеОрганизации	= "";
		
		Если ПоказателиСхемМотивацииПереопределяемый.ПервоеПодразделение(Оформление.ДанныеСтроки.Ссылка, Оформление.ДанныеСтроки.Владелец, НазваниеОрганизации, ОтображенныеОрганизации) Тогда
			Оформление.Ячейки.Организация.УстановитьТекст("      " + НазваниеОрганизации);
			Оформление.Ячейки.Организация.Шрифт = мЖирныйШрифт;
		Иначе
			Оформление.Ячейки.Организация.Видимость = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры //ТабличноеПолеПодразделенияОрганизацийПриПолученииДанных


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ "Сотрудники" ФОРМЫ

// Процедура - обработчик события "ПриАктивизацииСтроки" табличного поля
//
Процедура СотрудникиПриАктивизацииСтроки()
	
	ПодключитьОбработчикОжидания("ОбработчикОжиданияСотрудникиПриАктивизацииСтроки", 0.1, Истина);
	
КонецПроцедуры //СотрудникиПриАктивизацииСтроки

Процедура ОбработчикОжиданияСотрудникиПриАктивизацииСтроки()
	
	ОтборПоСотрудникуЕжемесячно();
	УстановитьОтборПоПодразделениюИОрганизацииЕжемесячно(Истина, Ложь, Ложь);
	
КонецПроцедуры //СотрудникиПриАктивизацииСтроки

Процедура ОрганизацияСотрудниковПриИзменении(Элемент)
	
	УстановитьОтборСотрудников();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ "Показатели" ФОРМЫ

// Процедура - обработчик события "ПриАктивизацииСтроки" табличного поля
//
Процедура ПоказателиПриАктивизацииСтроки()
	
	ПодключитьОбработчикОжидания("ОбработчикОжиданияПоказателиПриАктивизацииСтроки", 0.1, Истина);
	
КонецПроцедуры //ПоказателиПриАктивизацииСтроки

Процедура ОбработчикОжиданияПоказателиПриАктивизацииСтроки()
	
	ТекущийПоказатель = ЭлементыФормы.Показатели.ТекущаяСтрока;
	
	ЕжемесячныеПоказатели.Отбор.Показатель.Установить(ТекущийПоказатель);
	ЕжемесячныеПоказатели.Отбор.Сотрудник.Использование = Ложь;
	ЕжемесячныеПоказатели.Отбор.Организация.Использование = Истина;
	ЕжемесячныеПоказатели.Отбор.Подразделение.Использование = Ложь;
	
	Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		ЕжемесячныеПоказатели.Отбор.Организация.ВидСравнения = ВидСравнения.НеРавно;
	Иначе
		ЕжемесячныеПоказатели.Отбор.Организация.ВидСравнения = ВидСравнения.Равно;
	КонецЕсли;
	ЕжемесячныеПоказатели.Отбор.Организация.Значение = Справочники.Организации.ПустаяСсылка();
	
	Если Не ПереключательСотрудники Тогда
		Если ЗначениеЗаполнено(ТекущийПоказатель) Тогда
			ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.Подразделение.Видимость = (Не ВидыПоказателей[ТекущийПоказатель] = Перечисления.ВидыПоказателейСхемМотивации.Общий);
			ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.Организация.Видимость = (ВидыПоказателей[ТекущийПоказатель] = Перечисления.ВидыПоказателейСхемМотивации.Общий) И ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц;
		КонецЕсли;
	КонецЕсли;
	
	Если ПоПоказателям И ЗначениеЗаполнено(ТекущийПоказатель) Тогда
		ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.Валюта.Видимость = ТипыПоказателей[ТекущийПоказатель] = Перечисления.ТипыПоказателейСхемМотивации.Денежный И Не ЗначениеЗаполнено(ВалютыПоказателей[ТекущийПоказатель]);
	КонецЕсли;
	
КонецПроцедуры //ПоказателиПриАктивизацииСтроки


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ "ЕжемесячныеПоказатели" ФОРМЫ

// Процедура - обработчик события "ПередНачаломДобавления" табличного поля
//
Процедура ЕжемесячныеПоказателиПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Элемент.СпособРедактирования = СпособРедактированияСписка.ВСписке;

	ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница;
	Если ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Сотрудники Тогда
		
		ТекущиеДанные = ЭлементыФормы.Сотрудники.ТекущиеДанные;
		
		Если ТекущиеДанные = Неопределено Тогда
			
			Предупреждение("Не выбран сотрудник!");
			Отказ = Истина;
			
		КонецЕсли;
	ИначеЕсли ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Подразделения Тогда
		
		ТекущиеДанные = ЭлементыФормы.ТабличноеПолеПодразделенияОрганизацийЕжемесячные.ТекущиеДанные;
		
		Если ТекущиеДанные = Неопределено Тогда
			
			Предупреждение("Не выбрано ни подразделение ни организация!");
			Отказ = Истина;
			
		КонецЕсли;
		
	ИначеЕсли ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Показатели Тогда
		
		ТекущиеДанные = ЭлементыФормы.Показатели.ТекущиеДанные;
		
		Если ТекущиеДанные = Неопределено Тогда
			
			Предупреждение("Не выбран показатель!");
			Отказ = Истина;
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры //ЕжемесячныеПоказателиПередНачаломДобавления

// Процедура - обработчик события "ПриНачалеРедактирования" табличного поля
//
Процедура ЕжемесячныеПоказателиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Элемент.СпособРедактирования = СпособРедактированияСписка.ВСписке;

	Если НоваяСтрока Тогда
		Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
			Элемент.ТекущиеДанные.Подразделение	= Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
		Иначе
			Элемент.ТекущиеДанные.Подразделение	= Справочники.Подразделения.ПустаяСсылка();
		КонецЕсли;
		ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница;
		Если ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Сотрудники Тогда
			
			ТекущиеДанные = ЭлементыФормы.Сотрудники.ТекущиеДанные;
			
			Если ТекущиеДанные <> Неопределено Тогда
				
				Сотрудник							= ТекущиеДанные.Ссылка;
				Элемент.ТекущиеДанные.Сотрудник		= Сотрудник;
				Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
					Элемент.ТекущиеДанные.Организация		= ПолучитьОрганизацию(Сотрудник);
				Иначе
					Элемент.ТекущиеДанные.Организация		= Справочники.Организации.ПустаяСсылка();
				КонецЕсли;

			КонецЕсли;
			
		ИначеЕсли ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Подразделения Тогда
			
			ТекущиеДанные = ЭлементыФормы.ТабличноеПолеПодразделенияОрганизацийЕжемесячные.ТекущиеДанные;
			
			Если ТекущиеДанные <> Неопределено Тогда
				Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
					Элемент.ТекущиеДанные.Организация = ТекущиеДанные.Владелец;
				Иначе
					Элемент.ТекущиеДанные.Организация		= Справочники.Организации.ПустаяСсылка();
				КонецЕсли;
				Если ЭлементыФормы.ТабличноеПолеПодразделенияОрганизацийЕжемесячные.ТекущаяКолонка.Имя = "Наименование" Тогда
					Элемент.ТекущиеДанные.Подразделение	= ТекущиеДанные.Ссылка;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.ЦФО Тогда
			
			ТекущиеДанные = ЭлементыФормы.ТабличноеПолеПодразделенияПоЦФОЕжемесячные.ТекущиеДанные;
			
			Если ТекущиеДанные <> Неопределено Тогда
				
				Элемент.ТекущиеДанные.Подразделение	= ТекущиеДанные.Ссылка;
				
			КонецЕсли;

		ИначеЕсли ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Показатели Тогда
			
			ТекущиеДанные = ЭлементыФормы.Показатели.ТекущиеДанные;
			
			Если ТекущиеДанные <> Неопределено Тогда
				
				Показатель = ТекущиеДанные.Ссылка;
				Элемент.ТекущиеДанные.Показатель = Показатель;
				Элемент.ТекущиеДанные.Сотрудник	 = Справочники.СотрудникиОрганизаций.ПустаяСсылка();
				
			КонецЕсли;
			
		КонецЕсли;
		Элемент.ТекущиеДанные.ПериодДействия = ПериодДействия;
	КонецЕсли;
	
	УстановитьФорматЗначенияПокателя(Элемент);
	
КонецПроцедуры //ЕжемесячныеПоказателиПриНачалеРедактирования

// Процедура - обработчик события "ПередОкончаниемРедактирования" табличного поля
//
Процедура ЕжемесячныеПоказателиПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница;
	Если ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Показатели Тогда
		
		Если ПереключательСотрудники Тогда
			
			Если Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.Сотрудник)  И Не ОтменаРедактирования Тогда
				
				Предупреждение("Не выбран сотрудник!");
				Отказ = Истина;
				
			КонецЕсли;
			
		Иначе
			
			Если ЗначениеЗаполнено(ТекущийПоказатель) И ВидыПоказателей[ТекущийПоказатель] = Перечисления.ВидыПоказателейСхемМотивации.Общий Тогда
			Иначе
				Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда 
					Если Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.Организация)  И Не ОтменаРедактирования Тогда
						
						Предупреждение("Не выбрана организация!");
						Отказ = Истина;
						
					КонецЕсли;
				КонецЕсли;
				
				Если Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.Подразделение) И Не ОтменаРедактирования Тогда
					
					Предупреждение("Не выбрано подразделение!");
					Отказ = Истина;
					
				КонецЕсли;
			КонецЕсли;

		КонецЕсли;
	КонецЕсли;

КонецПроцедуры //ПередОкончаниемРедактирования

// Процедура - обработчик события "ПриПолученииДанных" табличного поля
//
Процедура ЕжемесячныеПоказателиПриПолученииДанных(Элемент, ОформленияСтрок)
	
	ПанельОтборовПоЕжемесячнымПоказателям = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям;
	АктивнаСтраницаПоказатели = ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Показатели;
	Показатель = ТекущийПоказатель;
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		
		Если АктивнаСтраницаПоказатели Тогда
			Если Показатель <> Неопределено Тогда
				ВидПоказателя = ВидыПоказателей[Показатель];
				ОформлениеСтроки.Ячейки["Подразделение"].Видимость = (ВидПоказателя = Перечисления.ВидыПоказателейСхемМотивации.ПоПодразделению);
				ОформлениеСтроки.Ячейки["Организация"].Видимость = (ВидПоказателя = Перечисления.ВидыПоказателейСхемМотивации.Общий);
				ОформлениеСтроки.Ячейки["Организация"].ТолькоПросмотр = (ВидПоказателя <> Перечисления.ВидыПоказателейСхемМотивации.Общий);
			КонецЕсли;
		Иначе
			Если ОформлениеСтроки.Ячейки.Показатель <> Неопределено Тогда
				Показатель = ОформлениеСтроки.Ячейки.Показатель.Значение;
			КонецЕсли;
			ОформлениеСтроки.Ячейки["Организация"].ТолькоПросмотр = Истина;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Показатель) Тогда
			ОформлениеСтроки.Ячейки["Валюта"].ТолькоПросмотр = (ТипыПоказателей[Показатель] <> Перечисления.ТипыПоказателейСхемМотивации.Денежный) Или ЗначениеЗаполнено(Показатель.Валюта);
		КонецЕсли;
		
	КонецЦикла;
	
	РаботаСДиалогамиЗК.УстановитьФорматЗначенийПоказателейОформленияСтрок(ОформленияСтрок, ДанныеОформленияЗначенийПоказателей);

КонецПроцедуры //ЕжемесячныеПоказателиПриПолученииДанных


// Процедура - обработчик события "НачалоВыбора" реквезита "Показатель" табличного поля
//
Процедура ЕжемесячныеПоказателиПоказательНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ВыборПоказателя(Элемент, СтандартнаяОбработка, ВыбраноПодразделениеЕжемесячные, ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Сотрудники);
		
КонецПроцедуры

Процедура ЕжемесячныеПоказателиПоказательПриИзменении(Элемент)
	
	ТекущиеДанные = ЭлементыФормы.ЕжемесячныеПоказатели.ТекущиеДанные;
	Если ТипыПоказателей[ТекущиеДанные.Показатель] = Перечисления.ТипыПоказателейСхемМотивации.Денежный Тогда
		Если мПоказватьВалютуЕжемесячно Тогда
			ТекущиеДанные.Валюта = Элемент.Значение.Валюта;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" реквезита "Сотрудник" табличного поля
//
Процедура ЕжемесячныеПоказателиСотрудникПриИзменении(Элемент)
	
	Значение = Элемент.Значение;
	
	Если ЗначениеЗаполнено(Значение) Тогда
		Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
			ЭлементыФормы.ЕжемесячныеПоказатели.ТекущиеДанные.Организация = ПолучитьОрганизацию(Значение);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" реквезита "Подразделение" табличного поля
//
Процедура ЕжемесячныеПоказателиПодразделениеПриИзменении(Элемент)
	
	Значение = Элемент.Значение;
	
	Если ЗначениеЗаполнено(Значение) Тогда
		ЭлементыФормы.ЕжемесячныеПоказатели.ТекущиеДанные.Организация = Значение.Владелец;
	КонецЕсли;

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ "ПлановыеЗначенияПоказателейСхемМотивации" ФОРМЫ

// Процедура - обработчик события "ПриНачалеРедактирования" табличного поля
//
Процедура ПлановыеЗначенияПоказателейСхемМотивацииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда 
		
		Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
			Элемент.ТекущиеДанные.Организация	= ОрганизацияПериодические;
		Иначе
			Элемент.ТекущиеДанные.Организация	= Справочники.Организации.ПустаяСсылка();
		КонецЕсли;
		
		Элемент.ТекущиеДанные.Подразделение	= ПодразделениеПериодические;
	КонецЕсли;
	
	УстановитьФорматЗначенияПокателя(Элемент);
	
КонецПроцедуры //ПлановыеЗначенияПоказателейСхемМотивацииПриНачалеРедактирования

Процедура ПлановыеЗначенияПоказателейСхемМотивацииПриПолученииДанных(Элемент, ОформленияСтрок)
	
 	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		ОформлениеСтроки.Ячейки["Валюта"].ТолькоПросмотр = (ТипыПоказателей[ОформлениеСтроки.ДанныеСтроки.Показатель] <> Перечисления.ТипыПоказателейСхемМотивации.Денежный);	
	КонецЦикла;
	
	РаботаСДиалогамиЗК.УстановитьФорматЗначенийПоказателейОформленияСтрок(ОформленияСтрок, ДанныеОформленияЗначенийПоказателей);

КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" реквезита "Показатель" табличного поля
//
Процедура ПлановыеЗначенияПоказателейСхемМотивацииПоказательНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ВыборПоказателя(Элемент, СтандартнаяОбработка, ВыбраноПодразделениеПериодические,	Ложь,	"Периодически");
	
КонецПроцедуры //ПлановыеЗначенияПоказателейСхемМотивацииПоказательНачалоВыбора

Процедура ПлановыеЗначенияПоказателейСхемМотивацииПоказательПриИзменении(Элемент)
	
	ТекущиеДанные = ЭлементыФормы.ПлановыеЗначенияПоказателейСхемМотивации.ТекущиеДанные;
	Если мПоказватьВалютуПериодически Тогда
		ТекущиеДанные.Валюта = Элемент.Значение.Валюта;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ "ПлановыеЗначенияПоказателейСхемМотивацииОбщие" ФОРМЫ

Процедура ПлановыеЗначенияПоказателейСхемМотивацииОбщиеПриПолученииДанных(Элемент, ОформленияСтрок)
	
 	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		ОформлениеСтроки.Ячейки["Валюта"].ТолькоПросмотр = (ТипыПоказателей[ОформлениеСтроки.ДанныеСтроки.Показатель] <> Перечисления.ТипыПоказателейСхемМотивации.Денежный);	
	КонецЦикла;
	
	РаботаСДиалогамиЗК.УстановитьФорматЗначенийПоказателейОформленияСтрок(ОформленияСтрок, ДанныеОформленияЗначенийПоказателей);
	
КонецПроцедуры

Процедура ПлановыеЗначенияПоказателейСхемМотивацииОбщиеПоказательНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ВыборПоказателя(Элемент, СтандартнаяОбработка, Ложь,	Ложь,	"Периодически");
	
КонецПроцедуры

Процедура ПлановыеЗначенияПоказателейСхемМотивацииОбщиеПоказательПриИзменении(Элемент)
	
	ТекущиеДанные = ЭлементыФормы.ПлановыеЗначенияПоказателейСхемМотивацииОбщие.ТекущиеДанные;
	Если ИспользуютсяНачисленияВВалюте Тогда
		ТекущиеДанные.Валюта = Элемент.Значение.Валюта;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ "ПодразделенияОрганизацииПлановые" ФОРМЫ

Процедура ПодразделенияПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбработчикОжиданияПодразделенияПриАктивизацииСтроки", 0.1, Истина);
	
КонецПроцедуры

Процедура ОбработчикОжиданияПодразделенияПриАктивизацииСтроки()
	
	ТекущаяСтрока = ЭлементыФормы.ПодразделенияОрганизацииПлановые.ТекущаяСтрока;
	
	ОрганизацияПериодические = Организация;
	ВыбранаОрганизация = ЗначениеЗаполнено(Организация);
	
	ВыбраноПодразделениеПериодические = ЗначениеЗаполнено(ТекущаяСтрока);
	
	Если ВыбраноПодразделениеПериодические Тогда
		ПодразделениеПериодические = ТекущаяСтрока;
	Иначе
		ПодразделениеПериодические = ПустоеПодразделение();
	КонецЕсли;
	
	УстановитьОтборПоПодразделениюИОрганизацииПериодически();
	
КонецПроцедуры

Процедура ПодразделенияПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого Оформление Из ОформленияСтрок Цикл
		Если Оформление.ДанныеСтроки = НеОпределено Тогда
			Оформление.Ячейки.Наименование.УстановитьТекст(ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Для всей организации"));
			Продолжить;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ "ПодразделенияПлановые" ФОРМЫ

Процедура ПодразделенияПлановыеПриАктивизацииСтроки(Элемент)
		
	ПодключитьОбработчикОжидания("ОбработчикОжиданияПодразделенияПлановыеПриАктивизацииСтроки", 0.1, Истина);

КонецПроцедуры

Процедура ОбработчикОжиданияПодразделенияПлановыеПриАктивизацииСтроки()
		
	ТекущаяСтрока = ЭлементыФормы.ПодразделенияПлановые.ТекущаяСтрока;
	
	ВыбраноПодразделениеПериодические = ЗначениеЗаполнено(ТекущаяСтрока);
	
	Если ВыбраноПодразделениеПериодические Тогда
		ПодразделениеПериодические = ТекущаяСтрока;
	Иначе
		ПодразделениеПериодические = ПустоеПодразделение();
	КонецЕсли;
	
	УстановитьОтборПоПодразделениюИОрганизацииПериодически();

КонецПроцедуры

Процедура ОрганизацияПериодическиеПриИзменении(Элемент)
	
	ОрганизацияПериодические = Элемент.Значение;
	ПлановыеЗначенияПоказателейСхемМотивации.Отбор.Организация.Установить(ОрганизацияПериодические);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ "ПодразделенияПлановые" ФОРМЫ

Процедура ТабличноеПолеПодразделенияПоЦФОЕжемесячныеПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбработчикОжиданияТабличноеПолеПодразделенияПоЦФОЕжемесячныеПриАктивизацииСтроки", 0.1, Истина);

КонецПроцедуры

Процедура ОбработчикОжиданияТабличноеПолеПодразделенияПоЦФОЕжемесячныеПриАктивизацииСтроки()
	
	ПодразделениеЕжемесячные = ЭлементыФормы.ТабличноеПолеПодразделенияПоЦФОЕжемесячные.ТекущаяСтрока;
	ТекущаяКолонка = ЭлементыФормы.ТабличноеПолеПодразделенияПоЦФОЕжемесячные.ТекущаяКолонка;
	
	Если ПодразделениеЕжемесячные <> Неопределено Тогда
		ВыбраноПодразделениеЕжемесячные = (ПодразделениеЕжемесячные <> Справочники.Подразделения.ПустаяСсылка());
		
		ВыбраноПодразделение = ЗначениеЗаполнено(ПодразделениеЕжемесячные);
		УстановитьОтборПоПодразделениюИОрганизацииЕжемесячно();

	КонецЕсли;
	ОрганизацияЕжемесячные = Справочники.Организации.ПустаяСсылка();

КонецПроцедуры




////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мЖирныйШрифт = Новый Шрифт(ШрифтыСтиля.ШрифтТекста,,, Истина);
ОтображенныеОрганизации = Новый Соответствие;


ЭлементыФормы.ЕжемесячныеПоказатели.СпособРедактирования = СпособРедактированияСписка.ВСписке;
ЕжемесячныеПоказатели.Колонки.Добавить("Показатель");

мОрганизацииСотрудников = Новый ТаблицаЗначений;
мОрганизацииСотрудников.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.СотрудникиОрганизаций"));
мОрганизацииСотрудников.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
мОрганизацииСотрудников.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));