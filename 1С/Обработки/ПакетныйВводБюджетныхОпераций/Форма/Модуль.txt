// Хранит индекс для образов бюджетных операций
//
Перем ТекущийИндекс;

// Хранят валюты операций до изменения
Перем СтараяОбщаяВалюта;
Перем СтараяВалютаОперации;

Перем ФорматПериод; // Хранит форматную строку для вывода периода;

// Формирует бюджетные операции по заданной настройке
//
Процедура СформироватьБюджетныеОперации()
	
	Отказ=Ложь;
	
	Если Сценарий.Пустая() Тогда
		Сообщить("Не указан сценарий планирования.");
		Отказ=Истина;
		Возврат;
	КонецЕсли;
	
	ПроверкаРеквизита("СтатьяОборотов",УстановитьСтатьюОборотов,Отказ,"Статья оборотов");
	ПроверкаРеквизита("ПериодПланирования",УстановитьПериод,Отказ,"Период планирования");
	ПроверкаРеквизита("ВалютаДокумента",УстановитьВалюту,Отказ,"Валюта документа");
	ПроверкаРеквизита("Состояние",УстановитьСостояние,Отказ,"Состояние");
	ПроверкаРеквизита("Ответственный",УстановитьОтветственного,Отказ,"Ответственный");
			
	Если Не Отказ Тогда
		
		Если УстановитьСтатьюОборотов Тогда
			
			Запрос=Новый Запрос;
			Запрос.Текст="ВЫБРАТЬ
			|	СтатьиОборотовПоБюджетам.УчетПоКоличеству,
			|	СтатьиОборотовПоБюджетам.УчетПоСумме,
			|	СтатьиОборотовПоБюджетам.РазделениеПоКонтрагентам,
			|	СтатьиОборотовПоБюджетам.РазделениеПоНоменклатуре
			|ИЗ
			|	Справочник.СтатьиОборотовПоБюджетам КАК СтатьиОборотовПоБюджетам
			|ГДЕ
			|	СтатьиОборотовПоБюджетам.Ссылка = &Ссылка";
			
			Запрос.УстановитьПараметр("Ссылка",СтатьяОборотов);
			ТабРезультат=Запрос.Выполнить().Выгрузить();
			
		КонецЕсли;
		
		Для Каждого Строка Из РеквизитыОпераций Цикл
			
			Если Не УстановитьСтатьюОборотов Тогда
				
				Запрос=Новый Запрос;
				Запрос.Текст="ВЫБРАТЬ
				|	СтатьиОборотовПоБюджетам.УчетПоКоличеству,
				|	СтатьиОборотовПоБюджетам.УчетПоСумме,
				|	СтатьиОборотовПоБюджетам.РазделениеПоКонтрагентам,
				|	СтатьиОборотовПоБюджетам.РазделениеПоНоменклатуре
				|ИЗ
				|	Справочник.СтатьиОборотовПоБюджетам КАК СтатьиОборотовПоБюджетам
				|ГДЕ
				|	СтатьиОборотовПоБюджетам.Ссылка = &Ссылка";
				
				Запрос.УстановитьПараметр("Ссылка",Строка.СтатьяОборотов);
				ТабРезультат=Запрос.Выполнить().Выгрузить();
				
			КонецЕсли;
			
			Если ТабРезультат.Количество()>0 Тогда
				
				Результат=ТабРезультат[0];
				
				НовыйДокумент=Документы.БюджетнаяОперация.СоздатьДокумент();
				НовыйДокумент.Дата = РабочаяДата;
				НовыйДокумент.УстановитьВремя(АвтоВремя.ТекущееИлиПоследним);
				
				НовыйДокумент.ПериодПланирования	=?(УстановитьПериод,ПериодПланирования,Строка.ПериодПланирования);
				НовыйДокумент.Сценарий				=Сценарий;
				НовыйДокумент.СтатьяОборотов		=?(УстановитьСтатьюОборотов,СтатьяОборотов,Строка.СтатьяОборотов);
				НовыйДокумент.ЦФО					=?(УстановитьЦФО,ЦФО,Строка.ЦФО);
				НовыйДокумент.Проект				=?(УстановитьПроект,Проект,Строка.Проект);
				
				Если Результат.РазделениеПоКонтрагентам Тогда
					НовыйДокумент.Контрагент			=?(УстановитьКонтрагента,Контрагент,Строка.Контрагент);
				КонецЕсли;
				
				Если Результат.РазделениеПоНоменклатуре Тогда		
					НовыйДокумент.Номенклатура			=?(УстановитьНоменклатуру,Номенклатура,Строка.Номенклатура);
				КонецЕсли;
				
				Если Результат.УчетПоКоличеству Тогда		
					НовыйДокумент.Количество			=Строка.Количество;
				КонецЕсли;
				
				Если Результат.УчетПоСумме Тогда		
					
					НовыйДокумент.Сумма					=Строка.Сумма;
					НовыйДокумент.ВалютаДокумента		=?(УстановитьВалюту,ВалютаДокумента,Строка.ВалютаДокумента);
					НовыйДокумент.КурсДокумента			=Строка.КурсДокумента;
					НовыйДокумент.КратностьДокумента	=Строка.КратностьДокумента;
					
				КонецЕсли;
				
				Если Результат.УчетПоСумме И Результат.УчетПоКоличеству Тогда		
					НовыйДокумент.Цена					=Строка.Цена;
				КонецЕсли;
				
				НовыйДокумент.Ответственный			=?(УстановитьОтветственного,Ответственный,Строка.Ответственный);
				НовыйДокумент.Состояние				=?(УстановитьСостояние,Состояние,Строка.Состояние);
				НовыйДокумент.Комментарий			=?(УстановитьКомментарий,Комментарий,Строка.Комментарий);
				
				НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
				
				НоваяСтрока 					= СписокДокументовОперации.Добавить();
				НоваяСтрока.ДокументОперация 	= НовыйДокумент.Ссылка;
				НоваяСтрока.СтатьяОборотов 		= НовыйДокумент.СтатьяОборотов;
				НоваяСтрока.Валюта 				= НовыйДокумент.ВалютаДокумента;
				НоваяСтрока.Сумма 				= НовыйДокумент.Сумма;
				НоваяСтрока.Пометка  			= Истина;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // СформироватьБюджетныеОперации()

// Получает курс и кратность документа на основании реквизитов шапки
//
Процедура ОбновитьКурсДокумента(СтрокаДанные) Экспорт
	
	ВалютаОперации=?(УстановитьВалюту,ВалютаДокумента,СтрокаДанные.ВалютаДокумента);
	
	Если Сценарий.ИспользоватьКурсыСценария Тогда
		РегистрКурсов=РегистрыСведений.КурсыВалютПоСценариям;
		ОтборПоВалюте=Новый Структура;
		ОтборПоВалюте.Вставить("Валюта",ВалютаОперации);
		ОтборПоВалюте.Вставить("Сценарий",Сценарий);		
	Иначе
		РегистрКурсов=РегистрыСведений.КурсыВалют;
		ОтборПоВалюте=Новый Структура;
		ОтборПоВалюте.Вставить("Валюта",ВалютаОперации);
	КонецЕсли;
	
	СтруктураКурсов=РегистрКурсов.ПолучитьПоследнее(?(УстановитьПериод,ПериодПланирования,СтрокаДанные.ПериодПланирования),ОтборПоВалюте);
	СтрокаДанные.КурсДокумента=СтруктураКурсов.Курс;
	СтрокаДанные.КратностьДокумента= СтруктураКурсов.Кратность;
	
КонецПроцедуры // ОбновитьКурсДокумента()

//Обновляет курс и сумму документа при изменении валюты
//
Процедура ОбновитьКурсИСуммуДокумента(СтараяВалюта,СтрокаДанные) Экспорт

	ВалютаОперации=?(УстановитьВалюту,ВалютаДокумента,СтрокаДанные.ВалютаДокумента);
	
	СтарыйКурс=СтрокаДанные.КурсДокумента;
	СтараяКратность=СтрокаДанные.КратностьДокумента;
	
	ОбновитьКурсДокумента(СтрокаДанные);
	
	СтрокаДанные.Сумма=МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаДанные.Сумма,
										СтараяВалюта,ВалютаОперации,
										СтарыйКурс,СтрокаДанные.КурсДокумента,
										СтараяКратность,СтрокаДанные.КратностьДокумента);
										
	Если НЕ СтрокаДанные.Количество=0 Тогда
		СтрокаДанные.Цена=Окр(СтрокаДанные.Сумма/СтрокаДанные.Количество,2);
	КонецЕсли;
			
КонецПроцедуры // ОбновитьКурсИСуммуДокумента()

// Проверяет корректность настройки обязательного реквизита операции
//
Процедура ПроверкаРеквизита(ИмяРеквизита,ИспользованиеРеквизита,Отказ,ПредставлениеРеквизита);
		
	Если ИспользованиеРеквизита И НЕ ЗначениеЗаполнено(ЭтотОбъект[ИмяРеквизита]) Тогда
		
		Сообщить("Не указано значение реквизита "+ПредставлениеРеквизита);
		Отказ=Истина;
		
	ИначеЕсли Не ИспользованиеРеквизита Тогда 
		
		Для Каждого Строка Из РеквизитыОпераций Цикл
			
			Если НЕ ЗначениеЗаполнено(Строка[ИмяРеквизита]) Тогда
				//реквизит ВалютаДокумента должен быть указан только если ведется суммовой учет по статье
				Если ИмяРеквизита = "ВалютаДокумента" Тогда
					Если не Строка.СтатьяОборотов.УчетПоСумме Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				Сообщить("Не указано значение реквизита "+ПредставлениеРеквизита);
				Отказ=Истина;
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // ПроверкаРеквизита()
		

/// Заполняет таблицу зависимых оборотов рекурсивно зависимыми от статьи
// переданной в качестве параметра.
//
// Параметры
//  Статья  – <Справочник.СтатьиОборотовБюджета> – статья оборотов, для которой выбираются зависимые
//  ДатаДвижения - дата движения по влияющей статье
//  КоличествоПоСтатье - количественный оборот по влияющей статье
//  СуммаПоСтатье - суммовой оборот по влияющей статье
//
Процедура ЗаполнитьЗависимымиОборотами(ТекСтатья,
										ТекЦФО,
										ТекПроект,
										ТекКонтрагент,
										ТекНоменклатура,ДатаДвижения, КоличествоПоСтатье, СуммаПоСтатье, КодОперации)
			
	ПустойСценарий=Новый(Тип("СправочникСсылка.СценарииПланирования"));
	ПустойЦФО=Новый(Тип("СправочникСсылка.Подразделения"));
	ПустойПроект=Новый(Тип("СправочникСсылка.Проекты"));
	ПустойКонтрагент=Новый(Тип("СправочникСсылка.Контрагенты"));
	
	ОтборНоменклатура=?(ТекНоменклатура=Неопределено,Неопределено,?(ТекНоменклатура.Пустая(),Неопределено,ТекНоменклатура));

	Запрос=Новый Запрос;

	Запрос.Текст="ВЫБРАТЬ
	|	ЗависимостиОборотовПоСтатьям.ЗависимаяСтатьяОборотов КАК ЗависимаяСтатьяОборотов,
	|	ЗависимостиОборотовПоСтатьям.ЗависимаяСтатьяОборотов.УчетПоКоличеству КАК УчетПоКоличеству,
	|	ЗависимостиОборотовПоСтатьям.ЗависимаяСтатьяОборотов.УчетПоСумме КАК УчетПоСумме,
	|	ЗависимостиОборотовПоСтатьям.ЗависимаяСтатьяОборотов.РазделениеПоКонтрагентам КАК РазделениеПоКонтрагентам,
	|	ЗависимостиОборотовПоСтатьям.ЗависимаяСтатьяОборотов.РазделениеПоНоменклатуре КАК РазделениеПоНоменклатуре,
	|	ЗависимостиОборотовПоСтатьям.ЗависимаяНоменклатура КАК ЗависимаяНоменклатура,
	|	ЗависимостиОборотовПоСтатьям.ЗависимыйКонтрагент КАК ЗависимыйКонтрагент,
	|	ЗависимостиОборотовПоСтатьям.ЗависимыйПроект КАК ЗависимыйПроект,
	|	ЗависимостиОборотовПоСтатьям.ЗависимыйЦФО КАК ЗависимыйЦФО,
	|	ЗависимостиОборотовПоСтатьям.КоэффициентДляРасчетаКоличества КАК КоэффициентДляРасчетаКоличества,
	|	ЗависимостиОборотовПоСтатьям.КоэффициентДляРасчетаСуммы КАК КоэффициентДляРасчетаСуммы,
	|	ЗависимостиОборотовПоСтатьям.РеквизитВлияющейСтатьиДляРасчетаКоличества КАК РеквизитВлияющейСтатьиДляРасчетаКоличества,
	|	ЗависимостиОборотовПоСтатьям.РеквизитВлияющейСтатьиДляРасчетаСуммы КАК РеквизитВлияющейСтатьиДляРасчетаСуммы,
	|	ЗависимостиОборотовПоСтатьям.ЗначениеИзмененияПоПериодам КАК ЗначениеИзмененияПоПериодам
	|ИЗ
	|	РегистрСведений.ЗависимостиОборотовПоСтатьямБюджетирования.СрезПоследних(&ДатаДвижения, (ИсхСтатьяОборотов = &Статья)
	|					И ((ИсхСценарий =&ИсхСценарий) ИЛИ (ИсхСценарий =&ПустойИсхСценарий))
	|					И ((ИсхЦФО =&ИсхЦФО) ИЛИ (ИсхЦФО =&ПустойИсхЦФО)) 
	|					И ((ИсхПроект =&ИсхПроект) ИЛИ (ИсхПроект =&ПустойИсхПроект)) 
	|					И ((ИсхКонтрагент =&ИсхКонтрагент) ИЛИ (ИсхКонтрагент =&ПустойИсхКонтрагент)) 
	|					И ((ИсхНоменклатура =&ИсхНоменклатура) ИЛИ (ИсхНоменклатура = Неопределено))) КАК ЗависимостиОборотовПоСтатьям";
	
	Запрос.УстановитьПараметр("ДатаДвижения",ДатаДвижения);
	Запрос.УстановитьПараметр("Статья",ТекСтатья);

	Запрос.УстановитьПараметр("ИсхСценарий",Сценарий);
    Запрос.УстановитьПараметр("ПустойИсхСценарий",ПустойСценарий);
	
    Запрос.УстановитьПараметр("ИсхЦФО",ТекЦФО);
    Запрос.УстановитьПараметр("ПустойИсхЦФО",ПустойЦФО);

	Запрос.УстановитьПараметр("ИсхПроект",ТекПроект);
    Запрос.УстановитьПараметр("ПустойИсхПроект",ПустойПроект);

	Запрос.УстановитьПараметр("ИсхКонтрагент",ТекКонтрагент);
    Запрос.УстановитьПараметр("ПустойИсхКонтрагент",ПустойКонтрагент);

	Запрос.УстановитьПараметр("ИсхНоменклатура",ОтборНоменклатура);
 

	РезультатЗапроса=Запрос.Выполнить();

	Если РезультатЗапроса.Пустой() Тогда

		Возврат;

	Иначе

		ТабЗависимыхСтатей=РезультатЗапроса.Выгрузить();

		Для Каждого ТекущаяЗависимость Из ТабЗависимыхСтатей Цикл

			РеквизитДляСуммы=ТекущаяЗависимость.РеквизитВлияющейСтатьиДляРасчетаСуммы;
			РеквизитДляКоличества=ТекущаяЗависимость.РеквизитВлияющейСтатьиДляРасчетаКоличества;
			КоэффициентДляСуммы=ТекущаяЗависимость.КоэффициентДляРасчетаСуммы;
			КоэффициентДляКоличества=ТекущаяЗависимость.КоэффициентДляРасчетаКоличества;

            СуммаЗависимая=0;
			КоличествоЗависимое=0;

			Если РеквизитДляСуммы=Перечисления.РеквизитыДляРасчетаЗависимыхСтатейБюджета.Количество Тогда
				СуммаЗависимая=КоличествоПоСтатье*КоэффициентДляСуммы;
			ИначеЕсли РеквизитДляСуммы=Перечисления.РеквизитыДляРасчетаЗависимыхСтатейБюджета.Сумма Тогда
				СуммаЗависимая=СуммаПоСтатье*КоэффициентДляСуммы;
			КонецЕсли;

			Если РеквизитДляКоличества=Перечисления.РеквизитыДляРасчетаЗависимыхСтатейБюджета.Количество Тогда
				КоличествоЗависимое=КоличествоПоСтатье*КоэффициентДляКоличества;
			ИначеЕсли РеквизитДляКоличества=Перечисления.РеквизитыДляРасчетаЗависимыхСтатейБюджета.Сумма Тогда
				КоличествоЗависимое=СуммаПоСтатье*КоэффициентДляКоличества;
			КонецЕсли;

			Если НЕ ТекущаяЗависимость.ЗначениеИзмененияПоПериодам.Пустая() Тогда

				ПериодСмещения=ТекущаяЗависимость.ЗначениеИзмененияПоПериодам.ПериодСмещения;

				Для Каждого Период Из ТекущаяЗависимость.ЗначениеИзмененияПоПериодам.ПрофильИзменения Цикл

					НовыйЗависимыйОборот=ЗависимыеОбороты.Добавить();
					НовыйЗависимыйОборот.ПериодПланирования=ОбщегоНазначения.ДатаНачалаПериода(ОбщегоНазначения.ДобавитьИнтервал(ДатаДвижения,ПериодСмещения,Период.НомерПериода),Сценарий.Периодичность);
					НовыйЗависимыйОборот.СтатьяОборотов=ТекущаяЗависимость.ЗависимаяСтатьяОборотов;
					НовыйЗависимыйОборот.ЦФО=?(ТекущаяЗависимость.ЗависимыйЦФО=ПустойЦФО,ТекЦФО,ТекущаяЗависимость.ЗависимыйЦФО);
                    НовыйЗависимыйОборот.Проект=?(ТекущаяЗависимость.ЗависимыйПроект=ПустойПроект,ТекПроект,ТекущаяЗависимость.ЗависимыйПроект);
					
					Если ТекущаяЗависимость.РазделениеПоКонтрагентам Тогда
						НовыйЗависимыйОборот.Контрагент=?(ТекущаяЗависимость.ЗависимыйКонтрагент=ПустойКонтрагент,ТекКонтрагент,ТекущаяЗависимость.ЗависимыйКонтрагент);
					КонецЕсли;
					
					Если ТекущаяЗависимость.РазделениеПоНоменклатуре Тогда
						НовыйЗависимыйОборот.Номенклатура=?(ТекущаяЗависимость.ЗависимаяНоменклатура=Неопределено,ТекНоменклатура,ТекущаяЗависимость.ЗависимаяНоменклатура);
					КонецЕсли;
					
					Если ТекущаяЗависимость.УчетПоСумме Тогда
						НовыйЗависимыйОборот.РеквизитОперацииДляРасчетаСуммы=РеквизитДляСуммы;
						НовыйЗависимыйОборот.КоэффициентДляРасчетаСуммы=КоэффициентДляСуммы*Период.Коэффициент;
						НовыйЗависимыйОборот.Сумма=СуммаЗависимая*Период.Коэффициент;
					КонецЕсли;
								
					Если ТекущаяЗависимость.УчетПоКоличеству Тогда
						НовыйЗависимыйОборот.РеквизитОперацииДляРасчетаКоличества=РеквизитДляКоличества;
						НовыйЗависимыйОборот.КоэффициентДляРасчетаКоличества=КоэффициентДляКоличества*Период.Коэффициент;		
						НовыйЗависимыйОборот.Количество=КоличествоЗависимое*Период.Коэффициент;
					КонецЕсли;
					
					НовыйЗависимыйОборот.КодОперации=КодОперации;
					
					ЗаполнитьЗависимымиОборотами(НовыйЗависимыйОборот.СтатьяОборотов,
												НовыйЗависимыйОборот.ЦФО,
												НовыйЗависимыйОборот.Проект,
												НовыйЗависимыйОборот.Контрагент,
												НовыйЗависимыйОборот.Номенклатура,
												НовыйЗависимыйОборот.ПериодПланирования,
												НовыйЗависимыйОборот.Количество,
												НовыйЗависимыйОборот.Сумма,
												НовыйЗависимыйОборот.КодОперации);

				КонецЦикла;

			Иначе

				НовыйЗависимыйОборот=ЗависимыеОбороты.Добавить();
				НовыйЗависимыйОборот.ПериодПланирования=ДатаДвижения;
				НовыйЗависимыйОборот.СтатьяОборотов=ТекущаяЗависимость.ЗависимаяСтатьяОборотов;
				НовыйЗависимыйОборот.СтатьяОборотов=ТекущаяЗависимость.ЗависимаяСтатьяОборотов;
				НовыйЗависимыйОборот.ЦФО=?(ТекущаяЗависимость.ЗависимыйЦФО=ПустойЦФО,ТекЦФО,ТекущаяЗависимость.ЗависимыйЦФО);
				НовыйЗависимыйОборот.Проект=?(ТекущаяЗависимость.ЗависимыйПроект=ПустойПроект,ТекПроект,ТекущаяЗависимость.ЗависимыйПроект);
				
				Если ТекущаяЗависимость.РазделениеПоКонтрагентам Тогда
					НовыйЗависимыйОборот.Контрагент=?(ТекущаяЗависимость.ЗависимыйКонтрагент=ПустойКонтрагент,ТекКонтрагент,ТекущаяЗависимость.ЗависимыйКонтрагент);
				КонецЕсли;
				
				Если ТекущаяЗависимость.РазделениеПоНоменклатуре Тогда
					НовыйЗависимыйОборот.Номенклатура=?(ТекущаяЗависимость.ЗависимаяНоменклатура=Неопределено,ТекНоменклатура,ТекущаяЗависимость.ЗависимаяНоменклатура);
				КонецЕсли;
				
				Если ТекущаяЗависимость.УчетПоСумме Тогда
					НовыйЗависимыйОборот.РеквизитОперацииДляРасчетаСуммы=РеквизитДляСуммы;
					НовыйЗависимыйОборот.КоэффициентДляРасчетаСуммы=КоэффициентДляСуммы;
					НовыйЗависимыйОборот.Сумма=СуммаЗависимая;
				КонецЕсли;
				
				Если ТекущаяЗависимость.УчетПоКоличеству Тогда
					НовыйЗависимыйОборот.РеквизитОперацииДляРасчетаКоличества=РеквизитДляКоличества;
					НовыйЗависимыйОборот.КоэффициентДляРасчетаКоличества=КоэффициентДляКоличества;
					НовыйЗависимыйОборот.Количество=КоличествоЗависимое;
				КонецЕсли;
				
				НовыйЗависимыйОборот.КодОперации=КодОперации;
				
				ЗаполнитьЗависимымиОборотами(НовыйЗависимыйОборот.СтатьяОборотов,
											НовыйЗависимыйОборот.ЦФО,
											НовыйЗависимыйОборот.Проект,
											НовыйЗависимыйОборот.Контрагент,
											НовыйЗависимыйОборот.Номенклатура,
											НовыйЗависимыйОборот.ПериодПланирования,
											НовыйЗависимыйОборот.Количество,
											НовыйЗависимыйОборот.Сумма,
											НовыйЗависимыйОборот.КодОперации);


			КонецЕсли;


		КонецЦикла;

	КонецЕсли;				
	
КонецПроцедуры // ДобавитьЗависимыеСтроки()

// Добавляет в таблицу зависимые от переданной строки с реквизитами бюджетной операции 
// строки
Процедура ДобавитьЗависимыеСтроки(СтрокаОперации)

	ТекСтатья		=?(УстановитьСтатьюОборотов,СтатьяОборотов,СтрокаОперации.СтатьяОборотов);
	ТекЦФО			=?(УстановитьЦФО,ЦФО,СтрокаОперации.ЦФО);
	ТекПроект		=?(УстановитьПроект,Проект,СтрокаОперации.Проект);
	ТекКонтрагент	=?(УстановитьКонтрагента,Контрагент,СтрокаОперации.Контрагент);
	ТекНоменклатура	=?(УстановитьНоменклатуру,Номенклатура,СтрокаОперации.Номенклатура);
	ДатаДвижения    =?(УстановитьПериод,ПериодПланирования,СтрокаОперации.ПериодПланирования);
	
	КоличествоПоСтатье 	= СтрокаОперации.Количество;
	СуммаПоСтатье 		= СтрокаОперации.Сумма;
	
	ЗаполнитьЗависимымиОборотами(ТекСтатья,
										ТекЦФО,
										ТекПроект,
										ТекКонтрагент,
										ТекНоменклатура,ДатаДвижения, КоличествоПоСтатье, СуммаПоСтатье, СтрокаОперации.КодОперации)
	
КонецПроцедуры // ДобавитьЗависимыеСтроки()
									
// Отображает строки, зависимые от выбранной в таблице реквизитов операций,
// в таблице зависимых операций.
Процедура ОтобразитьЗависимыеСтроки(СтрокаОпераций)
	
	СтруктураПоиска=Новый Структура;
	СтруктураПоиска.Вставить("КодОперации",СтрокаОпераций.КодОперации);
	
	ТекЗависимости=ЗависимыеОбороты.Выгрузить();
	ТекЗависимости.Очистить();
	
	ТекЗависимости.Колонки.Удалить(ТекЗависимости.Колонки.КодОперации);
	
	МассивСтрок=ЗависимыеОбороты.НайтиСтроки(СтруктураПоиска);
	
	Для Каждого Строка Из МассивСтрок Цикл
		
		НоваяСтрока=ТекЗависимости.Добавить();
		
		Для Каждого Колонка Из ТекЗависимости.Колонки Цикл
			
			НоваяСтрока[Колонка.Имя]=Строка[Колонка.Имя];
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТабЗависимыеОбороты=ТекЗависимости;
	
	ЭлементыФормы.ТабЗависимыеОбороты.СоздатьКолонки();
		
КонецПроцедуры // ОтобразитьЗависимыеСтроки


//Удаляет строки из таблицы зависимостей
//
Процедура УдалитьЗависимыеСтроки(КодОперации)
	
	СтруктураПоиска=Новый Структура;
	СтруктураПоиска.Вставить("КодОперации",КодОперации);
	
	МассивСтрок=ЗависимыеОбороты.НайтиСтроки(СтруктураПоиска);
	
	Для Каждого Строка Из МассивСтрок Цикл
		
		ЗависимыеОбороты.Удалить(Строка);
		
	КонецЦикла;
	ТабЗависимыеОбороты.Очистить();
	ЭлементыФормы.ТабЗависимыеОбороты.ОбновитьСтроки();
КонецПроцедуры // УдалитьЗависимыеСтроки()

// Рассчитывает зависимые строки для всей таблицы реквизитов БО
// при изменении общего реквизита
Процедура РассчитатьЗависимостиПоТаблице() Экспорт
	
	Для Каждого Строка ИЗ РеквизитыОпераций Цикл
		
		УдалитьЗависимыеСтроки(Строка.КодОперации);
		ДобавитьЗависимыеСтроки(Строка);
		
	КонецЦикла;
			
КонецПроцедуры // РассчитатьЗависимыеСтроки

// Пересчитывает таблицу зависимостей при изменении набора общих реквизитов операций
//
Процедура ПриИзмененииОбщегоРеквизита(ИмяРеквизита="",ПересчитатьЗависимые=Истина,ИспользованиеРеквизита=Истина)
	
	Если Не ИспользованиеРеквизита Тогда 
		// Заполним незаполненные значения соответствующей колонки
		// значениями общего реквизита
		
		Для Каждого Строка ИЗ РеквизитыОпераций Цикл
			Если НЕ ЗначениеЗаполнено(Строка[ИмяРеквизита]) Тогда
				
				Строка[ИмяРеквизита]=ЭтотОбъект[ИмяРеквизита];
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ПересчитатьЗависимые Тогда
		
		Если РеквизитыОпераций.Количество()>0 Тогда
			
			ТекущаяСтрока=ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные;
			
			Если ТекущаяСтрока=Неопределено Тогда
				ТекущаяСтрока=РеквизитыОпераций[0];
			КонецЕсли;
			
			РассчитатьЗависимостиПоТаблице();	
			ЭлементыФормы.РеквизитыОпераций.ТекущаяСтрока=ТекущаяСтрока;
			ОтобразитьЗависимыеСтроки(ТекущаяСтрока);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПриИзмененииРеквизита()

// Устанавливает доступность общих реквизитов при открытии
//
Процедура УстановкаДоступностиОбщихРеквизитов()
	
	ОбработкаИспользованияОбщегоРеквизита("СтатьяОборотов",		УстановитьСтатьюОборотов,Истина);
    ОбработкаИспользованияОбщегоРеквизита("ВалютаДокумента",	УстановитьВалюту,Истина);
	ОбработкаИспользованияОбщегоРеквизита("ПериодПланирования",	УстановитьПериод,Истина);
	ОбработкаИспользованияОбщегоРеквизита("Ответственный",		УстановитьОтветственного,Истина);
	ОбработкаИспользованияОбщегоРеквизита("Состояние",			УстановитьСостояние,Истина);
	ОбработкаИспользованияОбщегоРеквизита("ЦФО",				УстановитьЦФО);
	ОбработкаИспользованияОбщегоРеквизита("Проект",				УстановитьПроект);
	ОбработкаИспользованияОбщегоРеквизита("Контрагент",			УстановитьКонтрагента);
	ОбработкаИспользованияОбщегоРеквизита("Номенклатура",		УстановитьНоменклатуру);
	ОбработкаИспользованияОбщегоРеквизита("Комментарий",		УстановитьКомментарий);
	
	ПриИзмененииОбщейСтатьиОборотов();
	
КонецПроцедуры // УстановкаДоступностиОбщихРеквизитов()

// Устанавливает видимость и значения колонок "Сумма", "Количество" и "Цена" в зависимости
// от выбранного общего реквизита "СтатьяОборотов"

Процедура ПриИзмененииОбщейСтатьиОборотов()
	
	Если УстановитьСтатьюОборотов Тогда
		
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		|	СтатьиОборотовПоБюджетам.УчетПоКоличеству,
		|	СтатьиОборотовПоБюджетам.УчетПоСумме,
		|	СтатьиОборотовПоБюджетам.РазделениеПоКонтрагентам,
		|	СтатьиОборотовПоБюджетам.РазделениеПоНоменклатуре
		|ИЗ
		|	Справочник.СтатьиОборотовПоБюджетам КАК СтатьиОборотовПоБюджетам
		|ГДЕ
		|	СтатьиОборотовПоБюджетам.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка",СтатьяОборотов);
		Результат=Запрос.Выполнить().Выбрать();
		
		Если Результат.Следующий() Тогда
			
			Если Не Результат.РазделениеПоКонтрагентам Тогда
				Контрагент=Справочники.Контрагенты.ПустаяСсылка();
				УстановитьКонтрагента=Ложь;
				ПриИзмененииОбщегоРеквизита();
			КонецЕсли;
			
			Если Не Результат.РазделениеПоНоменклатуре Тогда
				Номенклатура=Неопределено;
				УстановитьНоменклатуру=Ложь;
				ПриИзмененииОбщегоРеквизита();
			КонецЕсли;
			
			Если Не Результат.УчетПоСумме Тогда
				ВалютаДокумента=Справочники.Валюты.ПустаяСсылка();
				УстановитьВалюту=Ложь;
				ПриИзмененииОбщегоРеквизита();
			КонецЕсли;
			
			ЭлементыФормы.Контрагент.Доступность=Результат.РазделениеПоКонтрагентам;
			ЭлементыФормы.УстановитьКонтрагента.Доступность=Результат.РазделениеПоКонтрагентам;
			
			ЭлементыФормы.Номенклатура.Доступность=Результат.РазделениеПоНоменклатуре;
			ЭлементыФормы.УстановитьНоменклатуру.Доступность=Результат.РазделениеПоНоменклатуре;
			
			ЭлементыФормы.ВалютаДокумента.Доступность=Результат.УчетПоСумме;
			ЭлементыФормы.УстановитьВалюту.Доступность=Результат.УчетПоСумме;
			
			ЭлементыФормы.РеквизитыОпераций.Колонки["Сумма"].Видимость=Результат.УчетПоСумме;
			ЭлементыФормы.РеквизитыОпераций.Колонки["Сумма"].ИзменятьВидимость=Ложь;
			
			ЭлементыФормы.РеквизитыОпераций.Колонки["Количество"].Видимость=Результат.УчетПоКоличеству;
			ЭлементыФормы.РеквизитыОпераций.Колонки["Количество"].ИзменятьВидимость=Ложь;
			
			ЭлементыФормы.РеквизитыОпераций.Колонки["ВалютаДокумента"].Видимость=Результат.УчетПоСумме И (НЕ УстановитьВалюту);
			ЭлементыФормы.РеквизитыОпераций.Колонки["ВалютаДокумента"].ИзменятьВидимость=Ложь;
			
			ЭлементыФормы.РеквизитыОпераций.Колонки["Контрагент"].Видимость=Результат.РазделениеПоКонтрагентам И (НЕ УстановитьКонтрагента);
			ЭлементыФормы.РеквизитыОпераций.Колонки["Контрагент"].ИзменятьВидимость=Ложь;
			
			ЭлементыФормы.РеквизитыОпераций.Колонки["Номенклатура"].Видимость=Результат.РазделениеПоНоменклатуре И (НЕ УстановитьНоменклатуру);
			ЭлементыФормы.РеквизитыОпераций.Колонки["Номенклатура"].ИзменятьВидимость=Ложь;
			
			ЭлементыФормы.РеквизитыОпераций.Колонки["Цена"].Видимость=Результат.УчетПоКоличеству И Результат.УчетПоСумме;
			ЭлементыФормы.РеквизитыОпераций.Колонки["Цена"].ИзменятьВидимость=Ложь;
			
		Иначе
			
			Контрагент=Справочники.Контрагенты.ПустаяСсылка();
			УстановитьКонтрагента=Ложь;
			ПриИзмененииОбщегоРеквизита();
			
			Номенклатура=Неопределено;
			УстановитьНоменклатуру=Ложь;
			ПриИзмененииОбщегоРеквизита();
			
			ВалютаДокумента=Справочники.Валюты.ПустаяСсылка();
			УстановитьВалюту=Ложь;
			ПриИзмененииОбщегоРеквизита();
			
			ЭлементыФормы.Контрагент.Доступность=Ложь;
			ЭлементыФормы.УстановитьКонтрагента.Доступность=Ложь;
			
			ЭлементыФормы.Номенклатура.Доступность=Ложь;
			ЭлементыФормы.УстановитьНоменклатуру.Доступность=Ложь;
			
			ЭлементыФормы.ВалютаДокумента.Доступность=Ложь;
			ЭлементыФормы.УстановитьВалюту.Доступность=Ложь;
			
			ЭлементыФормы.РеквизитыОпераций.Колонки["Сумма"].Видимость=Ложь;
			ЭлементыФормы.РеквизитыОпераций.Колонки["Сумма"].ИзменятьВидимость=Ложь;
			
			ЭлементыФормы.РеквизитыОпераций.Колонки["Количество"].Видимость=Ложь;
			ЭлементыФормы.РеквизитыОпераций.Колонки["Количество"].ИзменятьВидимость=Ложь;
			
			ЭлементыФормы.РеквизитыОпераций.Колонки["ВалютаДокумента"].Видимость=Ложь;
			ЭлементыФормы.РеквизитыОпераций.Колонки["ВалютаДокумента"].ИзменятьВидимость=Ложь;
			
			ЭлементыФормы.РеквизитыОпераций.Колонки["Контрагент"].Видимость=Ложь;
			ЭлементыФормы.РеквизитыОпераций.Колонки["Контрагент"].ИзменятьВидимость=Ложь;
			
			ЭлементыФормы.РеквизитыОпераций.Колонки["Номенклатура"].Видимость=Ложь;
			ЭлементыФормы.РеквизитыОпераций.Колонки["Номенклатура"].ИзменятьВидимость=Ложь;
			
			ЭлементыФормы.РеквизитыОпераций.Колонки["Цена"].Видимость=Ложь;
			ЭлементыФормы.РеквизитыОпераций.Колонки["Цена"].ИзменятьВидимость=Ложь;
			
		КонецЕсли;
		
	Иначе
		
		
		ЭлементыФормы.УстановитьКонтрагента.Доступность=Истина;
		ЭлементыФормы.Контрагент.Доступность=УстановитьКонтрагента;
		
		ЭлементыФормы.УстановитьНоменклатуру.Доступность=Истина;
		ЭлементыФормы.Номенклатура.Доступность=УстановитьНоменклатуру;
		
		ЭлементыФормы.УстановитьВалюту.Доступность=Истина;
		ЭлементыФормы.ВалютаДокумента.Доступность=УстановитьВалюту;
		
		ЭлементыФормы.РеквизитыОпераций.Колонки["Сумма"].Видимость=Истина;		
		ЭлементыФормы.РеквизитыОпераций.Колонки["Количество"].Видимость=Истина;		
		ЭлементыФормы.РеквизитыОпераций.Колонки["Цена"].Видимость=Истина;
		
		ЭлементыФормы.РеквизитыОпераций.Колонки["ВалютаДокумента"].Видимость=НЕ УстановитьВалюту;
		ЭлементыФормы.РеквизитыОпераций.Колонки["Контрагент"].Видимость=НЕ УстановитьКонтрагента;
		ЭлементыФормы.РеквизитыОпераций.Колонки["Номенклатура"].Видимость=НЕ УстановитьНоменклатуру;
		
	КонецЕсли;
	
КонецПроцедуры // ПриИзмененииОбщейСтатьиОборотов()

// Устанавливает свойства полей для ввода общих реквизитов
//
Процедура ОбработкаИспользованияОбщегоРеквизита(ИмяРеквизита, Доступность, АвтоОтметкаНезаполненного=Ложь)
	
	ЭлементыФормы[ИмяРеквизита].Доступность=Доступность;
	
	Если АвтоОтметкаНезаполненного Тогда
		
		ЭлементыФормы[ИмяРеквизита].АвтоОтметкаНезаполненного=Доступность;
		
		Если НЕ ЗначениеЗаполнено(ЭлементыФормы[ИмяРеквизита].Значение) Тогда
			ЭлементыФормы[ИмяРеквизита].ОтметкаНезаполненного=Доступность;
		КонецЕсли;
		
	КонецЕсли;
	
	ЭлементыФормы.РеквизитыОпераций.Колонки[ИмяРеквизита].Видимость=НЕ Доступность;
	ЭлементыФормы.РеквизитыОпераций.Колонки[ИмяРеквизита].ИзменятьВидимость=Ложь;
	
	Если ИмяРеквизита="ПериодПланирования" Тогда
		ЭлементыФормы.ПлюсПериод.Доступность=Доступность;
		ЭлементыФормы.МинусПериод.Доступность=Доступность;
		ЭлементыФормы.ВыборПериода.Доступность=Доступность;
		
		Для Каждого Строка Из РеквизитыОпераций Цикл
			
			ОбновитьКурсДокумента(Строка);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьСвойстваРеквизитов()

Процедура ФорматПериода()
	
	Периодичность=Сценарий.Периодичность;
	
	Если Периодичность = Перечисления.Периодичность.Год Тогда
		ФорматПериод = "ДФ = ""гггг """"г.""""""";
	ИначеЕсли Периодичность = Перечисления.Периодичность.Квартал Тогда
		ФорматПериод = "ДФ = ""к"""" квартал"""" гггг """"г.""""""";
	ИначеЕсли Периодичность = Перечисления.Периодичность.Месяц Тогда
		ФорматПериод = "ДФ = ""ММММ гггг """"г.""""""";
	ИначеЕсли Периодичность = Перечисления.Периодичность.Неделя Тогда
		ФорматПериод = "ДФ = """"""Неделя с"""" дд.ММ.гггг """"""";
	ИначеЕсли Периодичность = Перечисления.Периодичность.День Тогда
		ФорматПериод = "ДФ = ""дд.ММ.гггг """"г.""""""";
	Иначе
		ФорматПериод = "";
	КонецЕсли;
	
КонецПроцедуры //

Процедура КнопкаВыполнитьНажатие(Элемент)
	
	СформироватьБюджетныеОперации();	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////
// Обработчики событий изменения флагов использования общих реквизитов
//
Процедура УстановитьСтатьюОборотовПриИзменении(Элемент)
	
	ОбработкаИспользованияОбщегоРеквизита("СтатьяОборотов",Элемент.Значение,Истина);
	
	Если Не СтатьяОборотов.Пустая() Тогда
		
		ПриИзмененииОбщегоРеквизита("СтатьяОборотов",Истина,Элемент.Значение);
				
	КонецЕсли;
	
	ПриИзмененииОбщейСтатьиОборотов();
	
КонецПроцедуры

Процедура УстановитьВалютуПриИзменении(Элемент)
	
	ТекущаяСтрока=ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные;
	
	Если ТекущаяСтрока=Неопределено И РеквизитыОпераций.Количество()>0 Тогда
		ТекущаяСтрока=РеквизитыОпераций[0];
	КонецЕсли;
	
	ОбработкаИспользованияОбщегоРеквизита("ВалютаДокумента",Элемент.Значение,Истина);
	
	Если Не ВалютаДокумента.Пустая() Тогда
		
		//Проверяем на необходимость пересчета сумм операций с валютой, отличающейся от общей валюты
		СтруктураПоиска=Новый Структура;
		СтруктураПоиска.Вставить("ВалютаДокумента",ВалютаДокумента);
		
		МассивСтрок=РеквизитыОпераций.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрок.Количество()=РеквизитыОпераций.Количество() Тогда // Валюты во всех строках совпадают с общей валютой
			Возврат;
		КонецЕсли;
		
		ПересчитыватьСуммы=((Не РеквизитыОпераций.Количество()=0) И Вопрос("Изменились валюты операций. Пересчитать суммы операций?", 
						РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да)= КодВозвратаДиалога.Да);

		Если Элемент.Значение Тогда
			
			Для Каждого Строка ИЗ РеквизитыОпераций Цикл
				
				Если Строка.ВалютаДокумента=ВалютаДокумента Тогда
					
					Продолжить;
					
				КонецЕсли;
				
				Если ПересчитыватьСуммы Тогда
					
					ОбновитьКурсИСуммуДокумента(Строка.ВалютаДокумента,Строка);
					
					//Пересчитаем зависимости
					УдалитьЗависимыеСтроки(Строка.КодОперации);
					ДобавитьЗависимыеСтроки(Строка);
					
				Иначе
					
					ОбновитьКурсДокумента(Строка);
					
				КонецЕсли;
				
			КонецЦикла;
			
		Иначе
			
			Для Каждого Строка ИЗ РеквизитыОпераций Цикл
				
				Если Строка.ВалютаДокумента.Пустая() Тогда // Устанавливаем значение для строк, в которых валюта не была установлена (использовалась общая)
					
					Строка.ВалютаДокумента=ВалютаДокумента;
					ОбновитьКурсДокумента(Строка);
					
				ИначеЕсли Строка.ВалютаДокумента=ВалютаДокумента Тогда
					
					Продолжить;
						
				Иначе
					
					Если ПересчитыватьСуммы Тогда
						
						ОбновитьКурсИСуммуДокумента(ВалютаДокумента,Строка);
						
						//Пересчитаем зависимости
						УдалитьЗависимыеСтроки(Строка.КодОперации);
						ДобавитьЗависимыеСтроки(Строка);
						
					Иначе
						
						ОбновитьКурсДокумента(Строка);
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
				
	КонецЕсли;
	
	Если НЕ ТекущаяСтрока=Неопределено Тогда
		
		ЭлементыФормы.РеквизитыОпераций.ТекущаяСтрока=ТекущаяСтрока;
		ОтобразитьЗависимыеСтроки(ТекущаяСтрока);
		
	КонецЕсли;
		
КонецПроцедуры

Процедура УстановитьПериодПриИзменении(Элемент)
		
	ОбработкаИспользованияОбщегоРеквизита("ПериодПланирования",Элемент.Значение,Истина);
	
	Если ЗначениеЗаполнено(ПериодПланирования) Тогда
		
		ПриИзмененииОбщегоРеквизита("ПериодПланирования",Истина,Элемент.Значение);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьОтветственногоПриИзменении(Элемент)
			
	ОбработкаИспользованияОбщегоРеквизита("Ответственный",Элемент.Значение,Истина);
	ПриИзмененииОбщегоРеквизита("Ответственный",Ложь,Элемент.Значение);
	
КонецПроцедуры

Процедура УстановитьСостояниеПриИзменении(Элемент)
			
	ОбработкаИспользованияОбщегоРеквизита("Состояние",Элемент.Значение,Истина);
	ПриИзмененииОбщегоРеквизита("Состояние",Ложь,Элемент.Значение);
	
КонецПроцедуры

Процедура УстановитьЦФОПриИзменении(Элемент)
			
	ОбработкаИспользованияОбщегоРеквизита("ЦФО",Элемент.Значение);
	ПриИзмененииОбщегоРеквизита("ЦФО",Истина,Элемент.Значение);
	
КонецПроцедуры

Процедура УстановитьПроектПриИзменении(Элемент)
	
	ОбработкаИспользованияОбщегоРеквизита("Проект",Элемент.Значение);
	ПриИзмененииОбщегоРеквизита("Проект",Истина,Элемент.Значение);
	
КонецПроцедуры

Процедура УстановитьКонтрагентаПриИзменении(Элемент)
		
	ОбработкаИспользованияОбщегоРеквизита("Контрагент",Элемент.Значение);
	ПриИзмененииОбщегоРеквизита("Контрагент",Истина,Элемент.Значение);
	
КонецПроцедуры

Процедура УстановитьНоменклатуруПриИзменении(Элемент)
		
	ОбработкаИспользованияОбщегоРеквизита("Номенклатура",Элемент.Значение);
	ПриИзмененииОбщегоРеквизита("Номенклатура",Истина,Элемент.Значение);
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////
// Обработчики событий изменения состава строк таблицы "РеквизитыОпераций"

Процедура РеквизитыОперацийПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	ТекущийИндекс=ТекущийИндекс+1;
	
КонецПроцедуры

Процедура РеквизитыОперацийПриНачалеРедактирования(Элемент, НоваяСтрока)
	
	Если НоваяСтрока Тогда
		
		ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные.КодОперации=ТекущийИндекс;
		ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные.КурсДокумента=1;
		ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные.КратностьДокумента=1;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РеквизитыОперацийПередУдалением(Элемент, Отказ)
	
	УдалитьЗависимыеСтроки(ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные.КодОперации);
	
КонецПроцедуры

Процедура РеквизитыОперацийПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если Не ОтменаРедактирования Тогда
		
		ОбновитьКурсДокумента(ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные);
		
		УдалитьЗависимыеСтроки(ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные.КодОперации);
		ДобавитьЗависимыеСтроки(ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные);
		
		ОтобразитьЗависимыеСтроки(ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если РеквизитыОпераций.Количество()=0 Тогда
		ТекущийИндекс=0;
	Иначе
		РеквизитыОпераций.Сортировать("КодОперации Возр");
		ТекущийИндекс=РеквизитыОпераций[РеквизитыОпераций.Количество()-1]+1;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Состояние) Тогда
		Состояние=Перечисления.СостоянияОбъектов.Подготовлен;
	КонецЕсли;

	
	СтараяОбщаяВалюта=ВалютаДокумента;
	
	УстановкаДоступностиОбщихРеквизитов();
	
	ФорматПериода();
	
	ЭлементыФормы.Период.Заголовок= "" + Формат(ПериодПланирования, ФорматПериод);
	
КонецПроцедуры

Процедура РеквизитыОперацийПриАктивизацииСтроки(Элемент)
	
	Если Не ЭлементыФормы.РеквизитыОпераций.ТекущаяСтрока=Неопределено Тогда
		
		СтараяВалютаОперации=ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные.ВалютаДокумента;	
		ОтобразитьЗависимыеСтроки(ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные);
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Обработчики событий изменения общих реквизитов бюджетных операций
//

Процедура СтатьяОборотовПриИзменении(Элемент)
		
	ПриИзмененииОбщейСтатьиОборотов();	
	ПриИзмененииОбщегоРеквизита();
	
КонецПроцедуры

Процедура ЦФОПриИзменении(Элемент)
		
	ПриИзмененииОбщегоРеквизита();
	
КонецПроцедуры

Процедура ЦФООчистка(Элемент, СтандартнаяОбработка)
		
	ПриИзмененииОбщегоРеквизита();
	
КонецПроцедуры

Процедура СтатьяОборотовОчистка(Элемент, СтандартнаяОбработка)
	
	ПриИзмененииОбщейСтатьиОборотов();	
	ПриИзмененииОбщегоРеквизита();
	
КонецПроцедуры

Процедура ПроектПриИзменении(Элемент)
			
	ПриИзмененииОбщегоРеквизита();

КонецПроцедуры

Процедура ПроектОчистка(Элемент, СтандартнаяОбработка)
			
	ПриИзмененииОбщегоРеквизита();

КонецПроцедуры

Процедура КонтрагентПриИзменении(Элемент)
			
	ПриИзмененииОбщегоРеквизита();

КонецПроцедуры

Процедура НоменклатураОчистка(Элемент, СтандартнаяОбработка)
			
	ПриИзмененииОбщегоРеквизита();

КонецПроцедуры

Процедура КонтрагентОчистка(Элемент, СтандартнаяОбработка)
			
	ПриИзмененииОбщегоРеквизита();

КонецПроцедуры

Процедура НоменклатураПриИзменении(Элемент)
			
	ПриИзмененииОбщегоРеквизита();

КонецПроцедуры

//////////////////////////////////////////////////////////////////////
// Обработчики для выбора номенклатуры

Процедура НоменклатураНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	Если Сценарий.ДетализацияПланирования=Перечисления.ДетализацияПланирования.НоменклатурныеГруппы Тогда
		ФормаВыбора=Справочники.НоменклатурныеГруппы.ПолучитьФормуВыбора(,Элемент,);
		Если ЗначениеЗаполнено(Элемент.Значение) И ТипЗнч(Элемент.Значение)=Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
			ФормаВыбора.ПараметрТекущаяСтрока=Элемент.Значение;
		КонецЕсли;
	Иначе
		ФормаВыбора=Справочники.Номенклатура.ПолучитьФормуВыбора(,Элемент,);
		Если ЗначениеЗаполнено(Элемент.Значение) И ТипЗнч(Элемент.Значение)=Тип("СправочникСсылка.Номенклатура") Тогда
			ФормаВыбора.ПараметрТекущаяСтрока=Элемент.Значение;
		КонецЕсли;
	КонецЕсли;
	
	ФормаВыбора.РежимВыбора=Истина;
	ФормаВыбора.Открыть();
	
КонецПроцедуры

Процедура РеквизитыОперацийНоменклатураНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	Если Сценарий.ДетализацияПланирования=Перечисления.ДетализацияПланирования.НоменклатурныеГруппы Тогда
		ФормаВыбора=Справочники.НоменклатурныеГруппы.ПолучитьФормуВыбора(,Элемент,);
		Если ЗначениеЗаполнено(Элемент.Значение) И ТипЗнч(Элемент.Значение)=Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
			ФормаВыбора.ПараметрТекущаяСтрока=Элемент.Значение;
		КонецЕсли;
	Иначе
		ФормаВыбора=Справочники.Номенклатура.ПолучитьФормуВыбора(,Элемент,);
		Если ЗначениеЗаполнено(Элемент.Значение) И ТипЗнч(Элемент.Значение)=Тип("СправочникСсылка.Номенклатура") Тогда
			ФормаВыбора.ПараметрТекущаяСтрока=Элемент.Значение;
		КонецЕсли;
	КонецЕсли;
	
	ФормаВыбора.РежимВыбора=Истина;
	ФормаВыбора.Открыть();
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////////
// Обработчики для работы с периодами планирования

Процедура РеквизитыОперацийПериодРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	Элемент.Значение=ОбщегоНазначения.ДобавитьИнтервал(Элемент.Значение,Сценарий.Периодичность,Направление);
	
КонецПроцедуры

Процедура СценарийПриИзменении(Элемент)
	
	ФорматПериода();
	СпособВыводаПериода();
	
	ДетализацияПланирования=Сценарий.ДетализацияПланирования;
	
	Если УстановитьПериод Тогда
		ПериодПланирования=ОбщегоНазначения.ДатаНачалаПериода(ПериодПланирования,Сценарий.Периодичность);
		ЭлементыФормы.Период.Заголовок= "" + Формат(ПериодПланирования, ФорматПериод);
	Иначе
		
		Для Каждого Строка ИЗ РеквизитыОпераций Цикл
			
			Строка.ПериодПланирования=ОбщегоНазначения.ДатаНачалаПериода(Строка.ПериодПланирования,Сценарий.Периодичность);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ДетализацияПланирования=Перечисления.ДетализацияПланирования.НоменклатурныеГруппы 
		И НЕ ТипЗнч(Номенклатура)=Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
		Номенклатура=Новый(Тип("СправочникСсылка.НоменклатурныеГруппы"));
	ИначеЕсли НЕ ТипЗнч(Номенклатура)=Тип("СправочникСсылка.Номенклатура") Тогда
		Номенклатура=Новый(Тип("СправочникСсылка.Номенклатура"));
	КонецЕсли;
	
	Для Каждого Строка ИЗ РеквизитыОпераций Цикл 
		
		Если ДетализацияПланирования=Перечисления.ДетализацияПланирования.НоменклатурныеГруппы 
			И НЕ ТипЗнч(Строка.Номенклатура)=Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
			Строка.Номенклатура=Новый(Тип("СправочникСсылка.НоменклатурныеГруппы"));
		ИначеЕсли НЕ ТипЗнч(Строка.Номенклатура)=Тип("СправочникСсылка.Номенклатура") Тогда
			Строка.Номенклатура=Новый(Тип("СправочникСсылка.Номенклатура"));
		КонецЕсли;
		
	КонецЦикла;
			
	ПриИзмененииОбщегоРеквизита();
	
КонецПроцедуры

Процедура ВыборПериодаНажатие(Элемент)
	
	Если ВвестиДату(ПериодПланирования, "Начало периода",ЧастиДаты.Дата)  Тогда
		
		ПериодПланирования=ОбщегоНазначения.ДатаНачалаПериода(ПериодПланирования,Сценарий.Периодичность);
		ЭлементыФормы.Период.Заголовок= "" + Формат(ПериодПланирования, ФорматПериод);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПериодПланированияПриИзменении(Элемент)
	
	Элемент.Значение=ОбщегоНазначения.ДатаНачалаПериода(Элемент.Значение,Сценарий.Периодичность);
	
КонецПроцедуры

Процедура ПериодПланированияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	Элемент.Значение=ОбщегоНазначения.ДобавитьИнтервал(Элемент.Значение,Сценарий.Периодичность,Направление);
	
КонецПроцедуры

Процедура МинусПериодНажатие(Элемент)
	
	ПериодПланирования = ОбщегоНазначения.ДобавитьИнтервал(ПериодПланирования,Сценарий.Периодичность,-1);
	ЭлементыФормы.Период.Заголовок= "" + Формат(ПериодПланирования, ФорматПериод);
	
КонецПроцедуры

Процедура ПлюсПериодНажатие(Элемент)
	
	ПериодПланирования = ОбщегоНазначения.ДобавитьИнтервал(ПериодПланирования,Сценарий.Периодичность,1);
	ЭлементыФормы.Период.Заголовок= "" + Формат(ПериодПланирования, ФорматПериод);
	
КонецПроцедуры

Процедура СпособВыводаПериода()
	
	Периодичность=Сценарий.Периодичность;
	
	Если Сценарий.Пустая() ИЛИ Периодичность=Перечисления.Периодичность.День Тогда
		
		// Элементы управления произвольным периодом
		ЭлементыФормы.ПериодПланирования.Видимость = Истина;
		
		// Элементы управления периодом
		ЭлементыФормы.Период.Видимость = Ложь;
		ЭлементыФормы.ПлюсПериод.Видимость = Ложь;
		ЭлементыФормы.МинусПериод.Видимость = Ложь;
		ЭлементыФормы.ВыборПериода.Видимость=Ложь;
		
	Иначе // периоды Месяц, Квартал, Год
		
		// Элементы управления датой
		ЭлементыФормы.ПериодПланирования.Видимость = Ложь;
		
		// Элементы управления периодом
		ЭлементыФормы.Период.Видимость = Истина;
		ЭлементыФормы.ПлюсПериод.Видимость = Истина;
		ЭлементыФормы.МинусПериод.Видимость = Истина;
		ЭлементыФормы.ВыборПериода.Видимость=Истина;
		
		ЭлементыФормы.Период.Заголовок= "" + Формат(ПериодПланирования, ФорматПериод);
			
	КонецЕсли;
		
КонецПроцедуры // СпособВыводаПериода

Процедура РеквизитыОперацийПериодПланированияПриИзменении(Элемент)
	
	Элемент.Значение=ОбщегоНазначения.ДатаНачалаПериода(Элемент.Значение,Сценарий.Периодичность);
	
КонецПроцедуры

Процедура РеквизитыОперацийПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеСтроки.Ячейки.ПериодПланирования.УстановитьТекст(Формат(ДанныеСтроки.ПериодПланирования,ФорматПериод));
	
	Если Не УстановитьСтатьюОборотов Тогда 
		
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		|	СтатьиОборотовПоБюджетам.УчетПоКоличеству,
		|	СтатьиОборотовПоБюджетам.УчетПоСумме,
		|	СтатьиОборотовПоБюджетам.РазделениеПоКонтрагентам,
		|	СтатьиОборотовПоБюджетам.РазделениеПоНоменклатуре
		|ИЗ
		|	Справочник.СтатьиОборотовПоБюджетам КАК СтатьиОборотовПоБюджетам
		|ГДЕ
		|	СтатьиОборотовПоБюджетам.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка",ДанныеСтроки.СтатьяОборотов);
		Результат=Запрос.Выполнить().Выбрать();
		
		Если Результат.Следующий() Тогда
			
			ОформлениеСтроки.Ячейки.Контрагент.ТолькоПросмотр=НЕ Результат.РазделениеПоКонтрагентам;
			ОформлениеСтроки.Ячейки.Номенклатура.ТолькоПросмотр=НЕ Результат.РазделениеПоНоменклатуре;
			ОформлениеСтроки.Ячейки.Количество.ТолькоПросмотр=НЕ Результат.УчетПоКоличеству;
			ОформлениеСтроки.Ячейки.Сумма.ТолькоПросмотр=НЕ Результат.УчетПоСумме;
			ОформлениеСтроки.Ячейки.ВалютаДокумента.ТолькоПросмотр=НЕ Результат.УчетПоСумме;
			ОформлениеСтроки.Ячейки.Цена.ТолькоПросмотр=НЕ (Результат.УчетПоСумме И Результат.УчетПоКоличеству);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СписокДокументовОперацииВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	ОткрытьЗначение(ВыбраннаяСтрока.ДокументОперация);
	
КонецПроцедуры

Процедура СписокДокументовОперацииПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ=Истина;
	
КонецПроцедуры

Процедура СписокДокументовОперацииПередУдалением(Элемент, Отказ)
	
	ДокументКУдалению=Элемент.ТекущиеДанные.ДокументОперация.ПолучитьОбъект();
	ДокументКУдалению.Удалить();
	
КонецПроцедуры

Процедура КоманднаяПанельСписокОперацииУстановитьПометки(Кнопка)
	
	Для каждого Строка из СписокДокументовОперации Цикл
		Строка.Пометка = Истина;
	КонецЦикла;

КонецПроцедуры

Процедура КоманднаяПанельСписокОперацииСнятьПометки(Кнопка)
	
	Для каждого Строка из СписокДокументовОперации Цикл
		Строка.Пометка = Ложь;
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанельСписокОперацииПровести(Кнопка)
	
	НачатьТранзакцию();
	
	Для каждого Строка из СписокДокументовОперации Цикл
		Если Строка.Пометка Тогда
			Попытка
			Строка.ДокументОперация.ПолучитьОбъект().Записать(РежимЗаписиДокумента.Проведение);
			Строка.Пометка = Ложь;
		Исключение
			
			Сообщить(ОписаниеОшибки());
			
		КонецПопытки
		КонецЕсли;
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

Процедура КоманднаяПанельСписокОперацииОчистить(Кнопка)
	
	ТекстВопроса = "Сформированные документы будут удалены
					|из информационной базы. 
					|Продолжить?";
					
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли; 

	НачатьТранзакцию();
	
	Для каждого Строка из СписокДокументовОперации Цикл
		ДокументКУдалению=Строка.ДокументОперация.ПолучитьОбъект();
		ДокументКУдалению.Удалить();
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
	СписокДокументовОперации.Очистить();
	
КонецПроцедуры

Процедура РеквизитыОперацийКоличествоПриИзменении(Элемент)
	
	ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные.Сумма=ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные.Количество
													*ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные.Цена;
	
КонецПроцедуры

Процедура РеквизитыОперацийЦенаПриИзменении(Элемент)
	
	ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные.Сумма=ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные.Количество
															*ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные.Цена;
	
КонецПроцедуры

Процедура РеквизитыОперацийСуммаПриИзменении(Элемент)
	
	СтрокаДанные=ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные;
	
	Если ((УстановитьСтатьюОборотов И СтатьяОборотов.УчетПоКоличеству И СтатьяОборотов.УчетПоСумме)
		 ИЛИ ((НЕ УстановитьСтатьюОборотов) И СтрокаДанные.СтатьяОборотов.УчетПоКоличеству И СтрокаДанные.СтатьяОборотов.УчетПоСумме))	
		И (НЕ СтрокаДанные.Количество=0) Тогда
		СтрокаДанные.Цена=Окр(СтрокаДанные.Сумма/СтрокаДанные.Количество,2);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВалютаДокументаПриИзменении(Элемент)
	
	ТекущаяСтрока=ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные;
	
	Если (НЕ ВалютаДокумента = СтараяОбщаяВалюта) И (ЗначениеЗаполнено(СтараяОбщаяВалюта)) Тогда
		
		// Надо предложить пересчитать сумму.
		
		Если ((Не РеквизитыОпераций.Количество()=0) И Вопрос("Изменилась общая валюта операций. Пересчитать суммы операций?", 
						РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да)= КодВозвратаДиалога.Да) Тогда
						
			Для Каждого Строка ИЗ РеквизитыОпераций Цикл			
				
				ОбновитьКурсИСуммуДокумента(СтараяОбщаяВалюта,Строка);
				
				//Пересчитаем зависимости
				УдалитьЗависимыеСтроки(Строка.КодОперации);
				ДобавитьЗависимыеСтроки(Строка);
				
			КонецЦикла;
					
		Иначе
			
			Для Каждого Строка ИЗ РеквизитыОпераций Цикл
				ОбновитьКурсДокумента(Строка);
			КонецЦикла;
			
		КонецЕсли; 
		
	КонецЕсли;
		
	СтараяОбщаяВалюта=ВалютаДокумента;
	
	Если РеквизитыОпераций.Количество()>0 Тогда
		
		Если ТекущаяСтрока=Неопределено Тогда
			ТекущаяСтрока=РеквизитыОпераций[0];
		КонецЕсли;
		
		ЭлементыФормы.РеквизитыОпераций.ТекущаяСтрока=ТекущаяСтрока;
		ОтобразитьЗависимыеСтроки(ТекущаяСтрока);
		
	КонецЕсли;
		
КонецПроцедуры

Процедура РеквизитыОперацийВалютаДокументаПриИзменении(Элемент)
	
	СтрокаДанные=ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные;
	
	Если НЕ (СтрокаДанные.ВалютаДокумента = СтараяВалютаОперации ИЛИ НЕ ЗначениеЗаполнено(СтараяВалютаОперации))  Тогда
		
		// Надо предложить пересчитать сумму.
		
		Если (Не СтрокаДанные.Сумма=0 И Вопрос("Изменилась валюта операции. Пересчитать сумму операции?", 
						РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да)= КодВозвратаДиалога.Да) Тогда
			ОбновитьКурсИСуммуДокумента(СтараяВалютаОперации,СтрокаДанные);
			
		Иначе
			ОбновитьКурсДокумента(СтрокаДанные);
		КонецЕсли; 
		
	КонецЕсли;
		
	СтараяВалютаОперации=СтрокаДанные.ВалютаДокумента;
		
КонецПроцедуры

Процедура УстановитьКомментарийПриИзменении(Элемент)
	
	ОбработкаИспользованияОбщегоРеквизита("Комментарий",Элемент.Значение,Ложь);
	ПриИзмененииОбщегоРеквизита("Комментарий",Ложь,Элемент.Значение);
	
КонецПроцедуры

Процедура РеквизитыОперацийСтатьяОборотовПриИзменении(Элемент)
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	СтатьиОборотовПоБюджетам.УчетПоКоличеству,
	|	СтатьиОборотовПоБюджетам.УчетПоСумме,
	|	СтатьиОборотовПоБюджетам.РазделениеПоКонтрагентам,
	|	СтатьиОборотовПоБюджетам.РазделениеПоНоменклатуре
	|ИЗ
	|	Справочник.СтатьиОборотовПоБюджетам КАК СтатьиОборотовПоБюджетам
	|ГДЕ
	|	СтатьиОборотовПоБюджетам.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",Элемент.Значение);
	Результат=Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		
		Если Не Результат.РазделениеПоКонтрагентам Тогда
			ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные.Контрагент=Справочники.Контрагенты.ПустаяСсылка();
		КонецЕсли;
		
		Если Не Результат.РазделениеПоНоменклатуре Тогда
			ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные.Номенклатура=Неопределено;
		КонецЕсли;
		
		Если Не Результат.УчетПоСумме Тогда
			ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные.ВалютаДокумента=Справочники.Валюты.ПустаяСсылка();
			ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные.Сумма=0;
			ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные.Цена=0;
		КонецЕсли;
		
		Если Не Результат.УчетПоКоличеству Тогда
			ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные.Количество=0;
			ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные.Цена=0;
		КонецЕсли;
		
	Иначе
		ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные.Контрагент=Справочники.Контрагенты.ПустаяСсылка();
		ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные.Номенклатура=Неопределено;
		ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные.ВалютаДокумента=Справочники.Валюты.ПустаяСсылка();
		ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные.Сумма=0;
		ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные.Цена=0;
		ЭлементыФормы.РеквизитыОпераций.ТекущиеДанные.Количество=0;
	КонецЕсли;
					
КонецПроцедуры