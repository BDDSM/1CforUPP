Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Сообщение) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// извлекаем файл сообщения из содержимого сообщения
	СтрСообщенияОПроверке = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Сообщение, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.СообщениеОНесоответствиях, ИмяФайлаСообщенияОНесоответствиях);
	Если СтрСообщенияОПроверке.Количество() = 0 Тогда
		Предупреждение("Сообщение о несоответствиях не обнаружено среди содержимого сообщения.");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	СтрСообщениеОПроверке = СтрСообщенияОПроверке[0];
	
	// записываем вложение во временный файл
	ФайлСообщенияОПроверке = ПолучитьИмяВременногоФайла("xml");
	Попытка
		СтрСообщениеОПроверке.Данные.Получить().Записать(ФайлСообщенияОПроверке);
	Исключение
		Сообщить("Ошибка выгрузки сообщения о несоответствиях:" + Символы.ПС + ИнформацияОбОшибке().Описание, СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат;
	КонецПопытки;
	
	// считываем сообщение о проверке из файла в дерево XML
	ОписаниеОшибки = "";
	ДеревоXML = КонтекстЭДО.ЗагрузитьXMLВДеревоЗначений(ФайлСообщенияОПроверке, , ОписаниеОшибки);
	КонтекстЭДО.УдалитьВременныйФайл(ФайлСообщенияОПроверке);
	Если НЕ ЗначениеЗаполнено(ДеревоXML) Тогда
		Сообщить("Ошибка чтения XML из файла сообщения о несоответствиях:" + Символы.ПС + ИнформацияОбОшибке().Описание, СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// анализируем XML
	УзелФайл = ДеревоXML.Строки.Найти("Файл", "Имя");
	Если НЕ ЗначениеЗаполнено(УзелФайл) Тогда
		Сообщить("Некорректная структура XML сообщения о несоответствиях: не обнаружен узел ""Файл"".", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	УзелДокумент = УзелФайл.Строки.Найти("Документ", "Имя");
	Если НЕ ЗначениеЗаполнено(УзелДокумент) Тогда
		Сообщить("Некорректная структура XML сообщения о несоответствиях: не обнаружен узел ""Документ"".", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	УзелСвНесоответ = УзелДокумент.Строки.Найти("СвНесоответ", "Имя");
	Если НЕ ЗначениеЗаполнено(УзелСвНесоответ) Тогда
		Сообщить("Некорректная структура XML сообщения о несоответствиях: не обнаружен узел ""СвНесоответ"".", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	// анализируем ошибки ФЛК
	УзлыОшибкиФЛК = УзелСвНесоответ.Строки.НайтиСтроки(Новый Структура("Имя", "ОшибкиФЛК"));
	Для Каждого УзелОшибкиФЛК Из УзлыОшибкиФЛК Цикл
		УзелКодОш = УзелОшибкиФЛК.Строки.Найти("КодОшиб", "Имя");
		УзелТекстОш = УзелОшибкиФЛК.Строки.Найти("ТекстОшиб", "Имя");
		Если ЗначениеЗаполнено(УзелКодОш) ИЛИ ЗначениеЗаполнено(УзелТекстОш) Тогда
			
			КодОшибки = ?(ЗначениеЗаполнено(УзелКодОш), СокрЛП(УзелКодОш.Значение), "");
			ТекстОшибки = ?(ЗначениеЗаполнено(УзелТекстОш), СокрЛП(УзелТекстОш.Значение), "");
			
			НовСтр = Ошибки.Добавить();
			НовСтр.КодОшибки = КодОшибки;
			НовСтр.Описание = ТекстОшибки;
			
		КонецЕсли;
	КонецЦикла;
	
	// анализируем ошибки идентификации
	УзлыОшибкиИД = УзелСвНесоответ.Строки.НайтиСтроки(Новый Структура("Имя", "ОшибкиИД"));
	Для Каждого УзелОшибкиИД Из УзлыОшибкиИД Цикл
		УзелИдНомПрод1 = УзелОшибкиИД.Строки.Найти("ИдНомПрод1", "Имя");
		УзелКоммент = УзелОшибкиИД.Строки.Найти("Коммент", "Имя");
		Если ЗначениеЗаполнено(УзелИдНомПрод1) ИЛИ ЗначениеЗаполнено(УзелКоммент) Тогда
			
			ИНН = ?(ЗначениеЗаполнено(УзелИдНомПрод1), СокрЛП(УзелИдНомПрод1.Значение), "");
			Комментарий = ?(ЗначениеЗаполнено(УзелКоммент), СокрЛП(УзелКоммент.Значение), "");
			
			НовСтр = ОшибкиИД.Добавить();
			НовСтр.ИНН = ИНН;
			НовСтр.Комментарий = Комментарий;
			
		КонецЕсли;
	КонецЦикла;

	Если Ошибки.Количество() = 0 Тогда
		ЭлементыФормы.ОсновнаяПанель.Страницы.ОшибкиФЛК.Видимость = Ложь;
	КонецЕсли;
	
	Если ОшибкиИД.Количество() = 0 Тогда
		ЭлементыФормы.ОсновнаяПанель.Страницы.ОшибкиИД.Видимость = Ложь;
	КонецЕсли;
	
	// разбираем узел с общими сведениями
	ОбщиеСведения = Новый Структура;
	Для Каждого УзелОбщСвед Из УзелСвНесоответ.Строки Цикл
		ОбщиеСведения.Вставить(УзелОбщСвед.Имя, СокрЛП(УзелОбщСвед.Значение));
	КонецЦикла;
	
	Если ОбщиеСведения.Свойство("НомерДокНП") Тогда
		НомерДокНП = ОбщиеСведения.НомерДокНП;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("ДатаДокНП") Тогда
		ДатаДокНП = ОбщиеСведения.ДатаДокНП;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("РегНомДок") Тогда
		РегНомДок = ОбщиеСведения.РегНомДок;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("ДатаРегЭл") Тогда
		ДатаРегЭл = ОбщиеСведения.ДатаРегЭл;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("ДатаРегБум") Тогда
		ДатаРегБум = ОбщиеСведения.ДатаРегБум;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("КодСтранПрод1") Тогда
		КодСтранПрод1 = ОбщиеСведения.КодСтранПрод1;
	КонецЕсли;

	Если ОбщиеСведения.Свойство("ТипПр") Тогда
		ТипПр = ОбщиеСведения.ТипПр;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("ИмяФЛК") Тогда
		ИмяФЛК = ОбщиеСведения.ИмяФЛК;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("ДатаФЛК") Тогда
		ДатаФЛК = ОбщиеСведения.ДатаФЛК;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("ДатаИД") Тогда
		ДатаИД = ОбщиеСведения.ДатаИД;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыЗакрыть(Кнопка)
	
	Закрыть();
	
КонецПроцедуры

Процедура ОбщиеСведенияОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры