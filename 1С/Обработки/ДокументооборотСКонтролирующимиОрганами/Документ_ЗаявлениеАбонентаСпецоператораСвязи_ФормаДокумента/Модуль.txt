////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем ТаблицаЗначений;
Перем СтруктураОтветственныхЛицБух;
Перем СтруктураОтветственныхЛицРук;
Перем СтруктураДанныхОрганизации;
Перем ИдКонф;

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ЭтоНовый = ЭтоНовый();
	
	Если ЭтоНовый Тогда
		//1.1 Новый документ копированием
		Если ЗначениеЗаполнено(ПараметрОбъектКопирования) Тогда
			СтатусКомментарий = "";
			ПутьКонтейнерЗакрытогоКлюча = "";
			УчетнаяЗапись = Справочники.УчетныеЗаписиДокументооборота.ПустаяСсылка();
			Номер = "";
			документобъект.ДатаОтправкиЗаявления	 ='00010101';
			документобъект.ДатаПолученияОтвета		 ='00010101';
			документобъект.ДатаСозданияУчетнойЗаписи ='00010101';
		Иначе
			ЭлементыФормы.ЮрАдрес.КнопкаВыбора	 = Ложь;
			ЭлементыФормы.ФактАдрес.КнопкаВыбора = Ложь;
		КонецЕсли;
		//1.2 Новый документ копированием либо с нуля
		ТипЗаявления = Перечисления.ТипыЗаявленияАбонентаСпецоператораСвязи.Первичное;
		Дата = ТекущаяДата();
		Статус = Перечисления.СтатусыЗаявленияАбонентаСпецоператораСвязи.Подготовлено;
		ИдентификаторДокументооборота = КонтекстЭДО.СгенерироватьUUID();
		ТолькоПросмотр = Ложь;
		
		Если ДокументОбъект.ДополнительныеСвойства.Количество() > 0 И
			ДокументОбъект.ДополнительныеСвойства.РучноеЗаполнение Тогда
		Иначе
			ОткрытьФормуМастера(ПараметрОбъектКопирования);
			Отказ = Истина;
		КонецЕсли;
		
		//2. Существующий, не отправленный
	ИначеЕсли Статус = Перечисления.СтатусыЗаявленияАбонентаСпецоператораСвязи.Подготовлено Тогда
		ТолькоПросмотр = Ложь;
	Иначе
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если НЕ ТолькоПросмотр Тогда
		Если ЗначениеЗаполнено(ДокументОбъект.Организация) Тогда
			СтруктураДанныхОрганизации = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Организация,ТекущаяДата(), "РегНомПФР, РегистрационныйНомерФСС,
			|АдрФакт ,АдрЮР, ТелОрганизации, ТелРук, АдресЭлПочтыИсп,НаимЮЛПол,ИННЮЛ,КППЮЛ,КодОрганаПФР,КодНО,АдрМЖ,АдрПрописки,
			|ФИОРук, НомерУдЛичнРук, СерияУдЛичнРук, ВидУдЛичнРук, ДатаУдЛичнРук, ОрганВыданУдЛичнРук, 
			|ФИОБух, НомерУдЛичнБух, СерияУдЛичнБух, ВидУдЛичнБух, ДатаУдЛичнБух, ОрганВыданУдЛичнБух,");
			
			ГлавныйБухгалтерДоступность = Ложь;
			ДиректорДоступность 		= Ложь;
			КонтекстЭДО.ОрганизацияИнициализироватьОтветственныхЛиц(,СтруктураДанныхОрганизации,СтруктураОтветственныхЛицБух,СтруктураОтветственныхЛицРук,ГлавныйБухгалтерДоступность,ДиректорДоступность);
			ЭлементыФормы.ГлавныйБухгалтер.Доступность 	= ГлавныйБухгалтерДоступность;
			ЭлементыФормы.Директор.Доступность 			= ДиректорДоступность;
			ЭлементыФормы.Исполнитель.Доступность 		= НЕ ТолькоПросмотр;
		КонецЕсли;
		
		Если ПустаяСтрока(НомерОсновнойПоставки1с) Тогда
			НомерОсновнойПоставки1с = КонтекстЭДО.ПолучитьНомерОсновнойПоставки1с();
		КонецЕсли;
		
	КонецЕсли;
	
	
	Если ЗначениеЗаполнено(ДокументОбъект.Организация) Тогда
		
		Попытка
			ДопКодФСС = ДокументОбъект.Организация.ДополнительныйКодФСС 
		Исключение
			ДопКодФСС = "";
		КонецПопытки;
		
		КонтекстЭДО.ПоказатьДопКодФСС(ДополнительныйКодФСС,ЭлементыФормы.НадписьДополнительныйКодФСС,ЭлементыФормы.ДополнительныйКодФСС,ПризнакОбособленногоПодразделения,РегНомерФСС);
		
	КонецЕсли;
	
	ИдКонф = РегламентированнаяОтчетность.ИДКонфигурации();
	
	Копия = ЗначениеЗаполнено(ПараметрОбъектКопирования);
	
	Если НЕ ЭтоНовый Тогда
		ВыборСотрудника = КонтекстЭДО.ПолучитьТипИсполнителя(ДокументОбъект.ВладелецЭЦПТип);
		
		Если ВыборСотрудника = 3 Тогда
			ЭлементыФормы.Сотрудник.Значение = ""+ДокументОбъект.ВладелецЭЦПФамилия+" "+ДокументОбъект.ВладелецЭЦПИмя+" "+ДокументОбъект.ВладелецЭЦПОтчество;
		КонецЕсли;
		
		ЭлементыФормы.Сотрудник.ТолькоПросмотр = НЕ ВыборСотрудника = 3;
	КонецЕсли;
	
	ЮрАдрес		= Регламентированнаяотчетность.ПредставлениеАдресаВФормате9Запятых(ДокументОбъект.АдресЮридический, Истина);
	ФактАдрес	= Регламентированнаяотчетность.ПредставлениеАдресаВФормате9Запятых(ДокументОбъект.АдресФактический, Истина);
	
	ФормаТолькоПросмотр(ТолькоПросмотр,Копия);
	
	ЗаполнитьСписокУЦ();
	
	ТаблицаЗначений = Новый ТаблицаЗначений;
	ВидимостьКартинки = Ложь;
	
	КонтекстЭДО.ЗаполнитьСписокКриптопровайдеров(ВыборКриптопровайдера,ТаблицаЗначений,ДокументОбъект.ТипКриптопровайдера,
	ЭлементыФормы.VipNet,ЭлементыФормы.CryptoPro,ВидимостьКартинки,КриптопровайдерРекомендация);
	ЭлементыФормы.ПолеКартинкиВнимание48.Видимость = ВидимостьКартинки;
	
	Если ЗначениеЗаполнено(Спецоператор) Тогда
		ЗаполнитьСоглашение();
	КонецЕсли;
	
	ЗаполнитьСводнуюИнформацию();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
	Если ИдКонф = "БГУ" Тогда
		Сотрудник = Справочники.Сотрудники.ПустаяСсылка();
	ИначеЕсли ИдКонф = "БП" ИЛИ ИдКонф = "ЗУП" ИЛИ ИдКонф = "УПП" ИЛИ ИдКонф = "КА" ИЛИ ИдКонф = "ЗБУ" ИЛИ ИдКонф = "БАУ" ИЛИ ИдКонф = "НПЛ" Тогда
		Сотрудник = Справочники.ФизическиеЛица.ПустаяСсылка();
	КонецЕсли;
	
	Модифицированность = Ложь;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Отказ = НЕ ПроверитьЗаполнениеДокумента();
	
КонецПроцедуры

Процедура ПослеЗаписи()
	
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	ЗаполнитьСводнуюИнформацию();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

Процедура ФормаТолькоПросмотр(ТолькоПросмотр,Копия = Ложь);
	
	ЭлементыФормы.СпецоператорИУЦ.ТолькоПросмотр 			   = ТолькоПросмотр;
	ЭлементыФормы.CryptoPro.Доступность	                	   = НЕ ТолькоПросмотр;
	ЭлементыФормы.VipNet.Доступность	                       = НЕ ТолькоПросмотр;
	ЭлементыФормы.КоманднаяПанельНаправления.Доступность	   = НЕ ТолькоПросмотр;
	ЭлементыФормы.КнопкаВызоваДанныхФИО.Доступность	           = НЕ ТолькоПросмотр;
	ЭлементыФормы.ДолжностьСотрудника.ТолькоПросмотр 		   = ТолькоПросмотр;
	ЭлементыФормы.ПодразделениеСотрудника.ТолькоПросмотр 	   = ТолькоПросмотр;
	ЭлементыФормы.ДокументВидСотрудника.ТолькоПросмотр 		   = ТолькоПросмотр;
	ЭлементыФормы.ДокументСерияСотрудника.ТолькоПросмотр 	   = ТолькоПросмотр;
	ЭлементыФормы.ДокументДатаВыдачиСотрудника.ТолькоПросмотр  = ТолькоПросмотр;
	ЭлементыФормы.ДокументНомерСотрудника.ТолькоПросмотр 	   = ТолькоПросмотр;
	ЭлементыФормы.ДокументКемВыданСотрудника.ТолькоПросмотр    = ТолькоПросмотр;
	ЭлементыФормы.ПутьКонтейнерЗакрытогоКлюча.ТолькоПросмотр   = ТолькоПросмотр;
	ЭлементыФормы.Дата.ТолькоПросмотр 					       = ТолькоПросмотр;
	ЭлементыФормы.Телефон.ТолькоПросмотр				       = ТолькоПросмотр;
	ЭлементыФормы.ТелефонМобильный.ТолькоПросмотр 			   = ТолькоПросмотр;
	ЭлементыФормы.ЭлектАдрес.ТолькоПросмотр 				   = ТолькоПросмотр;
	ЭлементыФормы.Фамилия.ТолькоПросмотр 					   = ТолькоПросмотр;
	ЭлементыФормы.Имя.ТолькоПросмотр 					       = ТолькоПросмотр;
	ЭлементыФормы.Отчество.ТолькоПросмотр 					   = ТолькоПросмотр;
	ЭлементыФормы.ИдентификаторДокументооборота.ТолькоПросмотр = ТолькоПросмотр;
	ЭлементыФормы.НомерОсновнойПоставки1с.ТолькоПросмотр	   = ТолькоПросмотр;
	
	Если ТолькоПросмотр Тогда
		ЭлементыФормы.ГлавныйБухгалтер.Доступность = НЕ ТолькоПросмотр;
		ЭлементыФормы.Директор.Доступность 		   = НЕ ТолькоПросмотр;
		ЭлементыФормы.Исполнитель.Доступность 	   = НЕ ТолькоПросмотр;
		ЭлементыФормы.ЮрАдрес.КнопкаВыбора		   = НЕ ТолькоПросмотр;
		ЭлементыФормы.ФактАдрес.КнопкаВыбора	   = НЕ ТолькоПросмотр;
	ИначеЕсли Копия Тогда
		ЭлементыФормы.Исполнитель.Доступность 	   = НЕ ТолькоПросмотр;
	КонецЕсли;
	
	Если ТолькоПросмотр Тогда
		Если ЗначениеЗаполнено(Сотрудник) Тогда
			ЭлементыФормы.Сотрудник.ТолькоПросмотр = ТолькоПросмотр;
		Иначе
			ЭлементыФормы.Сотрудник.ТолькоПросмотр = ТолькоПросмотр;
		КонецЕсли;
		ЭлементыФормы.Организация.ТолькоПросмотр   = ТолькоПросмотр;
		ЭлементыФормы.УчетнаяЗапись.ТолькоПросмотр = ТолькоПросмотр;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСводнуюИнформацию()
	
	ЕстьКомментарий = НЕ ПустаяСтрока(ДокументОбъект.СтатусКомментарий);
	
	ЦветШрифта	= Новый Цвет(0, 0, 192);
	ЦветРамки 	= Новый Цвет(227, 227, 227);
	
	ЭлементыФормы.ДействияФормы.кнопки.Отправить.Доступность = 
	ДокументОбъект.Статус = Перечисления.СтатусыЗаявленияАбонентаСпецоператораСвязи.Подготовлено;
	
	ЭлементыФормы.ДействияФормы.кнопки.ПолучитьОтвет.Доступность = 
	ДокументОбъект.Статус = Перечисления.СтатусыЗаявленияАбонентаСпецоператораСвязи.Отправлено;
	
	Если ЭтоНовый() Тогда
		
		Информация = "Заявление не отправлялось.";
		
	ИначеЕсли ДокументОбъект.Статус = Перечисления.СтатусыЗаявленияАбонентаСпецоператораСвязи.Подготовлено Тогда
		
		Информация = "Заявление подготовлено, но не отправлено.";
		
	ИначеЕсли ДокументОбъект.Статус = Перечисления.СтатусыЗаявленияАбонентаСпецоператораСвязи.Отправлено Тогда
		
		Информация = "Заявление отправлено " + ДокументОбъект.ДатаОтправкиЗаявления + ", ожидается результат обработки.";
		
		Если ЕстьКомментарий Тогда
			Информация = Информация + " Последний ответ на запрос о статусе заявления "+ДокументОбъект.ДатаПолученияОтвета+": """ + ДокументОбъект.СтатусКомментарий + """.";
		КонецЕсли;
		
	ИначеЕсли ДокументОбъект.Статус = Перечисления.СтатусыЗаявленияАбонентаСпецоператораСвязи.Отклонено Тогда
		
		Информация = "Заявление отправлено " + ДокументОбъект.ДатаОтправкиЗаявления + ". Получен отрицательный результат обработки.";
		
		Если ЕстьКомментарий Тогда
			
			ТекстОшибки = СтатусКомментарий;
			Если Сред(ТекстОшибки,СтрДлина(ТекстОшибки)-1,1) = "." Тогда
				ТекстОшибки = Лев(ТекстОшибки, СтрДлина(ТекстОшибки)-2);
			ИначеЕсли Прав(ТекстОшибки,1) = "." Тогда
				ТекстОшибки = Лев(ТекстОшибки, СтрДлина(ТекстОшибки)-1);
			КонецЕсли;
			Информация = Информация + " Причина: """ + ТекстОшибки + """."+ " Требуется исправить ошибки и повторить отправку.";
			
		КонецЕсли;
		
		ЦветШрифта = Новый Цвет(255, 0, 0);
		ЦветРамки = ЦветШрифта;
		
	ИначеЕсли ДокументОбъект.Статус = Перечисления.СтатусыЗаявленияАбонентаСпецоператораСвязи.Одобрено Тогда
		
		Информация = "Заявление отправлено " + ДокументОбъект.ДатаОтправкиЗаявления + ". Получен положительный результат обработки.";
		
		Если ЕстьКомментарий Тогда
			Информация = Информация + " " + ДокументОбъект.СтатусКомментарий;
		КонецЕсли;
		
		ЦветШрифта = Новый Цвет(0, 179, 16);
		ЦветРамки = ЦветШрифта;
		
	КонецЕсли;
	
	СводнаяИнформация = Информация;
	ЭлементыФормы.ИнформационнаяПанельВнутренняя.ЦветТекста = ЦветШрифта;
	ЭлементыФормы.ИнформационнаяПанельВнешняя.ЦветРамки = ЦветРамки;
	
КонецПроцедуры

Процедура ОткрытьФормуМастера(ПараметрОбъектКопирования)
	
	ФормаМастера = КонтекстЭДО.ПолучитьФорму("Документ_ЗаявлениеАбонентаСпецоператораСвязи_ФормаМастера");
	ФормаМастера.ДокументОбъект = ЭтотОбъект;
	ФормаМастера.Реквизит = ПараметрОбъектКопирования;
	ФормаМастера.Открыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТЧ ВЫПОНЯЕМЫЕ ДЕЙСТВИЯ
Процедура КоманднаяПанельНаправленияДобавитьНаправление(Кнопка)
	
	Если ДокументОрганизацияНеЗаполнен() Тогда
		Возврат;
	КонецЕсли;
	
	КонтекстЭДО.ПолучитьФормуВводаНаправления(Неопределено,ДокументОбъект,Организация,"Добавить",ЭтаФорма);
	
КонецПроцедуры

Процедура КоманднаяПанельНаправленияУдалитьНаправление(Кнопка)
	
	Если ДокументОбъект.Получатели.Количество() > 0 Тогда
		Если ЭлементыФормы.Направления.ТекущаяСтрока <> Неопределено Тогда
			ДокументОбъект.Получатели.Удалить(ЭлементыФормы.Направления.ТекущаяСтрока);
		Иначе
			Сообщить("Выберите строку направления для удаления из таблицы направлений");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельНаправленияРедактирование(Кнопка)
	
	Если ДокументОбъект.Получатели.Количество() > 0 Тогда
		КонтекстЭДО.ПолучитьФормуВводаНаправления(ЭлементыФормы.Направления.ТекущиеДанные,ДокументОбъект,Организация,"Редактировать",ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

Процедура НаправленияВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если ЭтоНовый() ИЛИ Статус = Перечисления.СтатусыЗаявленияАбонентаСпецоператораСвязи.Подготовлено Тогда
		КоманднаяПанельНаправленияРедактирование(Элемент);
	КонецЕсли;
	
	СтандартнаяОбработка =  Ложь;
КонецПроцедуры

Процедура КоманднаяПанельНаправленияСкопировать(Кнопка)
	
	Если ДокументОбъект.Получатели.Количество() > 0 Тогда
		
		Если ЭлементыФормы.Направления.ТекущаяСтрока = Неопределено Тогда
			Сообщить("Выберите строку для копирования!");
			Возврат
		КонецЕсли;
		
		Если ЭлементыФормы.Направления.ТекущаяСтрока.ТипПолучателя = Перечисления.ТипыКонтролирующихОрганов.ФНС Тогда
			КонтекстЭДО.ПолучитьФормуВводаНаправления(ЭлементыФормы.Направления.ТекущаяСтрока,ДокументОбъект,ДокументОбъект.Организация,"Скопировать",ЭтаФорма);
		Иначе
			Сообщить("Выбранное действие допустимо только для направления ФНС", СтатусСообщения.Информация);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельНаправленияВостановить(Кнопка)
	
	Если ДокументОрганизацияНеЗаполнен() Тогда
		Возврат;
	КонецЕсли;
	
	КонтекстЭДО.ВостановитьНаправления(ДокументОбъект,СтруктураДанныхОрганизации);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ ПЕЧАТИ
Процедура ДействияФормыПечатьЗаявка(Кнопка)
	
	Если ЭтоНовый() Тогда
		Сообщить("Документ ни разу не записывался. Запишите перед печатью.");
		Возврат;
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПечатьЗаявка";
	Макет   = КонтекстЭДО.ПолучитьМакет("ПечатьЗаявка");
	
	ОбластьМакета = Макет.ПолучитьОбласть("Заявка");
	ОбластьМакета.параметры.Фирма 	= ДокументОбъект.ПолноеНаименование;
	ОбластьМакета.параметры.ИНН		= ДокументОбъект.ИНН;
	
	ОбластьМакета.параметры.ЗаявлениеПолучатель = КонтекстЭДО.ПолучитьПараметрСпецоператора(ДокументОбъект.СпецоператорСвязи, "ЗаявлениеПолучатель");
	
	заявитель = ДокументОбъект.ВладелецЭЦПФамилия + " " + ДокументОбъект.ВладелецЭЦПИмя +" "+ ДокументОбъект.ВладелецЭЦПОтчество;
	
	Если СтрДлина(ДокументОбъект.ИНН)=10 Тогда
		заявитель = Строка(ДокументОбъект.ВладелецЭЦПДолжность) + " " + заявитель;
	КонецЕсли;
	
	ОбластьМакета.параметры.заявитель = ВРег(заявитель);
	
	ОбластьМакета.параметры.АдресЮР	    = Регламентированнаяотчетность.ПредставлениеАдресаВФормате9Запятых(ДокументОбъект.АдресЮридический, Истина);
	ОбластьМакета.параметры.АдресФакт	= Регламентированнаяотчетность.ПредставлениеАдресаВФормате9Запятых(ДокументОбъект.АдресФактический, Истина);
	ОбластьМакета.параметры.Сотр		= ДокументОбъект.ВладелецЭЦПФамилия + " " + ДокументОбъект.ВладелецЭЦПИмя +" "+ ДокументОбъект.ВладелецЭЦПОтчество;
	ОбластьМакета.параметры.Долж		= ДокументОбъект.ВладелецЭЦПДолжность;
	ОбластьМакета.параметры.тел 		= ДокументОбъект.ТелефонОсновной;
	ОбластьМакета.параметры.КПП 		= ДокументОбъект.КПП;
	
	ОбластьМакета.Параметры.ФНС = "нет";
	ОбластьМакета.Параметры.ПФР = "нет";
	ОбластьМакета.Параметры.ФСС = "нет";
	ОбластьМакета.Параметры.ФСГС = "нет";
	
	Для каждого получатель из ДокументОбъект.Получатели Цикл 
		Если Строка(Получатель.ТипПолучателя) = "ФСС" Тогда
			ОбластьМакета.Параметры.ФСС = "да";
			ОбластьМакета.Параметры.РегНомерФСС = ДокументОбъект.РегНомерФСС;
			ОбластьМакета.Параметры.КодПодразделенияФСС = Строка(Получатель.КодПолучателя);
		ИначеЕсли Строка(Получатель.ТипПолучателя) = "ФНС" Тогда
			ОбластьМакета.Параметры.ФНС = "да";
			Если Найти(Строка(ОбластьМакета.Параметры.КодИФНС), Строка(Получатель.КодПолучателя))= 0  Тогда
				ОбластьМакета.Параметры.КодИФНС = Строка(ОбластьМакета.Параметры.КодИФНС) + Строка(Получатель.КодПолучателя) + "; ";
			КонецЕсли;
			
			Если НЕ  ПустаяСтрока(Строка(Получатель.КПП)) Тогда
				ОбластьМакета.Параметры.СписокКПП = Строка(ОбластьМакета.Параметры.СписокКПП) + Строка(Получатель.КПП) + "; ";
			КонецЕсли;
		ИначеЕсли Строка(Получатель.ТипПолучателя)  = "ПФР" Тогда
			ОбластьМакета.Параметры.ПФР = "да";
			ОбластьМакета.Параметры.РегНомерПФР = ДокументОбъект.РегНомерПФР;
		ИначеЕсли Строка(Получатель.ТипПолучателя)  = "ФСГС" Тогда
			ОбластьМакета.Параметры.ФСГС = "да";
			ОбластьМакета.Параметры.НомерТОГС = Строка(Получатель.КодПолучателя);
		КонецЕсли;
	КонецЦикла;
	
	ОбластьМакета.Параметры.ДатаЗаполнения = Лев(ДокументОбъект.Дата,10);
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	НапечататьДокумент(ТабДокумент, Кнопка.Текст);
	
КонецПроцедуры

Процедура ДействияФормыПечатьСоглашение(Кнопка)
	
	Если ЭтоНовый() Тогда
		Сообщить("Документ ни разу не записывался. Запишите перед печатью.");
		Возврат;
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПечатьСоглашение";
	Макет = КонтекстЭДО.ПолучитьМакет("ПечатьСоглашение");
	ОбластьМакета = Макет.ПолучитьОбласть("Соглашение");
	
	НаименованиеУЦ = КонтекстЭДО.ПолучитьПараметрСпецоператора(ДокументОбъект.СпецоператорСвязи, "НаименованиеУЦ");
	АдресРегламентУЦ = КонтекстЭДО.ПолучитьПараметрСпецоператора(ДокументОбъект.СпецоператорСвязи, "АдресРегламентУЦ");
	СетьДоверенныхУЦ = КонтекстЭДО.ПолучитьПараметрСпецоператора(ДокументОбъект.СпецоператорСвязи, "СетьДоверенныхУЦ");
	СуммаОтветственностиУЦ = КонтекстЭДО.ПолучитьПараметрСпецоператора(ДокументОбъект.СпецоператорСвязи, "СуммаОтветственностиУЦ");
	НаименованиеПОРаспространяемогоУЦ = КонтекстЭДО.ПолучитьПараметрСпецоператора(ДокументОбъект.СпецоператорСвязи, "НаименованиеПОРаспространяемогоУЦ");
	
	ОбластьМакета.Область(4,1).текст = "1. Данным Соглашением " + НаименованиеУЦ + " принимает на себя обязательства по оказанию  Пользователю услуг Удостоверяющего центра (далее – «УЦ») в соответствии с  Регламентом УЦ.";
	ОбластьМакета.Область(5,1).текст = "Регламент УЦ находится по адресу " + АдресРегламентУЦ + ".";
	ОбластьМакета.Область(6,1).текст  = "УЦ является действующим удостоверяющим центром, прошедшим аккредитацию  в сети доверенных УЦ " + СетьДоверенныхУЦ + ".";
	ОбластьМакета.Область(23,1).текст = "5. Услуги УЦ для обеспечения деятельности Пользователя по обмену электронными документами с применением ЭП с контролирующими органами при наличии у Пользователя Лицензии  на программный продукт " + НаименованиеПОРаспространяемогоУЦ + " оказываются без дополнительной оплаты.";
	ОбластьМакета.Область(28,1).текст = "Ответственность УЦ перед Пользователем в соответствии с ГК РФ ограничена Соглашением сторон. При этом Сторонами согласован предельный размер ответственности УЦ – " + СуммаОтветственностиУЦ + " по каждому случаю причинения вреда.";
	ТабДокумент.Вывести(ОбластьМакета);
	НапечататьДокумент(ТабДокумент, Кнопка.Текст);
	
КонецПроцедуры

Процедура ДействияФормыПечатьЛицензия(Кнопка)
	
	Если ЭтоНовый() Тогда
		Сообщить("Документ ни разу не записывался. Запишите перед печатью.");
		Возврат;
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПечатьЛицензия";
	Макет = КонтекстЭДО.ПолучитьМакет("ПечатьЛицензия");
	
	ОбластьМакета = Макет.ПолучитьОбласть("Лицензия");
	ОбластьМакета.параметры.Фирма = ДокументОбъект.КраткоеНаименование;
	НаименованиеПОРаспространяемогоУЦ = КонтекстЭДО.ПолучитьПараметрСпецоператора(ДокументОбъект.СпецоператорСвязи, "НаименованиеПОРаспространяемогоУЦ");
	ОбластьМакета.параметры.НаименованиеПОРаспространяемогоУЦ = НаименованиеПОРаспространяемогоУЦ;
	Строка = ОбластьМакета.Область(4,1).текст;
	Строка = СтрЗаменить (Строка, "<НаименованиеПОРаспространяемогоУЦ>",НаименованиеПОРаспространяемогоУЦ);
	ОбластьМакета.Область(4,1).текст = Строка;
	
	ОбластьМакета.Параметры.ДатаВыдачи = Лев(ДокументОбъект.Дата,10);
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	НапечататьДокумент(ТабДокумент, Кнопка.Текст);
	
КонецПроцедуры

Процедура ДействияФормыПечатьСертификат(Кнопка)
	
	Если ЭтоНовый() Тогда
		Сообщить("Документ ни разу не записывался. Запишите перед печатью.");
		Возврат;
	КонецЕсли;
	
	Если ДокументОбъект.Статус <> Перечисления.СтатусыЗаявленияАбонентаСпецоператораСвязи.Одобрено Тогда
		Сообщить("Сертификат можно распечатать только после создания учетной записи.",СтатусСообщения.Информация);
		Возврат;
	ИначеЕсли  ПустаяСтрока(ДокументОбъект.УчетнаяЗапись.СертификатДляШифрования) Тогда
		Сообщить("Не найден сертификат шифрования.",СтатусСообщения.Важное);
		Возврат;
	Иначе
		Отпечаток = СокрЛП( ДокументОбъект.УчетнаяЗапись.СертификатДляШифрования);
	КонецЕсли;
	
	Если ТипЗнч(Отпечаток) = Тип("Строка") Тогда
		
		Сертификат= КонтекстЭДО.ПолучитьСвойстваСертификатаПоОтпечатку(Отпечаток);
		
		Если Сертификат = Неопределено Тогда
			
			Сообщить("Не удалось найти сертификат в системном хранилище сертификатов.");
			Возврат;
			
		КонецЕсли;
		
		ВременныйФайлЭкспортаСертификата = ПолучитьИмяВременногоФайла("cer");
		ТекстСертификата = "Не удалось получить текст сертификата.";
		
		Попытка
			Крипт = КонтекстЭДО.СоздатьОбъектДляРаботыСКриптографией();
			
			Если Крипт <> Неопределено Тогда
				Крипт.ЭкспортироватьСертификат (Сертификат.СерийныйНомер,Сертификат.Поставщик,ВременныйФайлЭкспортаСертификата,0);
				СертТекст = Новый ТекстовыйДокумент;
				СертТекст.Прочитать (ВременныйФайлЭкспортаСертификата);
				ТекстСертификата = СертТекст.ПолучитьТекст();
			КонецЕсли
			
		Исключение
		КонецПопытки;
		
		
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПечатьСертификат";
	Макет = КонтекстЭДО.ПолучитьМакет("ПечатьСертификат");
	
	//1. Выводим сведения о сертификате
	ОбластьМакета = Макет.ПолучитьОбласть("Сертификат");
	ПараметрыВладельца = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(Сертификат.Владелец);
	
	ВторостепенныеСведения = "";
	
	Для Счетчик = 0 по ПараметрыВладельца.Количество()-1 Цикл
		
		Параметр = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(СокрЛП(ПараметрыВладельца[Счетчик]),"=");
		
		НазваниеПараметра =  Параметр[0];
		ЗначениеПараметра =  Параметр[1];
		
		Если ЗначениеПараметра = "0" Тогда
			
		ИначеЕсли НазваниеПараметра = "ИНН" Тогда
			ОбластьМакета.Параметры.ИНН = ЗначениеПараметра;
		ИначеЕсли НазваниеПараметра = "O" Тогда
			ОбластьМакета.Параметры.Организация = ЗначениеПараметра;
		ИначеЕсли НазваниеПараметра = "T" Тогда
			ВторостепенныеСведения = ВторостепенныеСведения + "Должность " + ЗначениеПараметра + Символы.ПС;
		ИначеЕсли НазваниеПараметра = "Регистрационный номер ФСС"	Тогда
			ВторостепенныеСведения = ВторостепенныеСведения + "Регистрационный номер ФСС " + ЗначениеПараметра + Символы.ПС;
		ИначеЕсли НазваниеПараметра = "UnstructuredName" Тогда
			ВторостепенныеСведения = ВторостепенныеСведения + "Регистрационный номер ПФР " + ЗначениеПараметра + Символы.ПС;
		ИначеЕсли НазваниеПараметра = "OID.1.1.2" Тогда
			ВторостепенныеСведения = ВторостепенныеСведения + "Код подчиненности ФСС " + ЗначениеПараметра + Символы.ПС;
		ИначеЕсли НазваниеПараметра = "E" Тогда
			ВторостепенныеСведения = ВторостепенныеСведения +  "Адрес электронной почты " + ЗначениеПараметра + Символы.ПС;
		ИначеЕсли НазваниеПараметра = "S" Тогда
			ВторостепенныеСведения = ВторостепенныеСведения + "Регион " + ЗначениеПараметра + Символы.ПС;
		ИначеЕсли НазваниеПараметра = "OU" Тогда
			ВторостепенныеСведения = ВторостепенныеСведения + "Подразделение организации " + ЗначениеПараметра + Символы.ПС;
		КонецЕсли;
		
	КонецЦикла;
	
	ОбластьМакета.Параметры.ВторостепенныеСведения	 = ВторостепенныеСведения;
	ОбластьМакета.Параметры.ВозможностьПодписи		 = Сертификат.ВозможностьПодписи;
	ОбластьМакета.Параметры.ВозможностьШифрования	 = Сертификат.ВозможностьШифрования;
	ОбластьМакета.Параметры.ДействителенС			 = Сертификат.ДействителенС;
	ОбластьМакета.Параметры.ДействителенПо			 = Сертификат.ДействителенПо;
	ОбластьМакета.Параметры.Наименование			 = Сертификат.Наименование;
	ОбластьМакета.Параметры.Отпечаток				 = ВРег(Сертификат.Отпечаток);
	ОбластьМакета.Параметры.Поставщик				 = Сертификат.Поставщик;
	ОбластьМакета.Параметры.СерийныйНомер			 = ВРег(СтрЗаменить(Сертификат.СерийныйНомер," ","" ));
	ОбластьМакета.Параметры.ТекстСертификата		 = ТекстСертификата;
	
	ТабДокумент.Вывести(ОбластьМакета);
	НапечататьДокумент(ТабДокумент, Кнопка.Текст);
	
КонецПроцедуры

Процедура НапечататьДокумент(ПечДокумент, Заголовок = "")
	
	Если ПечДокумент = Неопределено тогда
		Возврат;
	КонецЕсли;
	
	// Отобразить печатный документ на экране
	ПечДокумент.АвтоМасштаб = Истина;
	ПечДокумент.ОтображатьЗаголовки = Ложь;
	ПечДокумент.ОтображатьСетку     = Ложь;
	ПечДокумент.Защита              = Ложь;
	ПечДокумент.ТолькоПросмотр      = Истина;
	ПечДокумент.Показать(Заголовок);
	
КонецПроцедуры // НапечататьДокумент()

Процедура ДействияФормыПечатьПакет(Кнопка)
	
	Форма = КонтекстЭДО.ПолучитьФорму("ФормаПечатьПакетаДокументовДляПодключения");
	Форма.КлючУникальности = ДокументОбъект;
	Форма.ВладелецФормы = ЭтаФорма;
	СписокПечати = Форма.ОткрытьМодально();
	
	Если СписокПечати <> Неопределено Тогда
		
		Если СписокПечати.ПечататьЗаявление Тогда
			ДействияФормыПечатьЗаявка(Элементыформы.ДействияФормы.Кнопки.ПечатьДокументов.Кнопки.ПечатьЗаявка);
		КонецЕсли;
		
		Если СписокПечати.ПечататьСоглашение Тогда
			ДействияФормыПечатьСоглашение(Элементыформы.ДействияФормы.Кнопки.ПечатьДокументов.Кнопки.ПечатьСоглашение);
		КонецЕсли;
		
		Если СписокПечати.ПечататьЛицензия Тогда
			ДействияФормыПечатьЛицензия(Элементыформы.ДействияФормы.Кнопки.ПечатьДокументов.Кнопки.ПечатьЛицензия);
		КонецЕсли;
		
		Если СписокПечати.ПечататьСертификат  Тогда
			ДействияФормыПечатьСертификат(Элементыформы.ДействияФормы.Кнопки.ПечатьДокументов.Кнопки.ПечатьСертификат);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиСоглашениеНапечатьНажатие(Элемент)
	ЭлементыФормы.ПолеHTMLЛицензии.Документ.execCommand("Print");
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПРОВЕРКИ ЗАПОЛНЕНИЯ РЕКВИЗИТОВ ФОРМЫ
Процедура ДобавитьСтроку (ИсходнаяСтрока, ДобавляемаяСтрока)
	
	ИсходнаяСтрока = ИсходнаяСтрока + ДобавляемаяСтрока + Символы.ПС;
	
КонецПроцедуры

Функция ПроверитьЗаполнениеДокумента()
	
	ИнформацияОбОшибках = "";
	
	//Страница Организация
	Если ДокументОрганизацияНеЗаполнен() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ДокументУдЛичность = Новый Структура("ВидДокумента,ДокументСерия,ДокументНомер,ДокументДатаВыдачи,ДокументКемВыдан,ВладелецЭЦП",
	ДокументОбъект.ВладелецЭЦПВидДокумента,ДокументОбъект.ВладелецЭЦПСерияДокумента,
	ДокументОбъект.ВладелецЭЦПНомерДокумента,ДокументОбъект.ВладелецЭЦПДатаВыдачиДокумента,
	ДокументОбъект.ВладелецЭЦПКемВыданДокумент,"На закладке ""Владелец ЭЦП"". ");
	
	Если НЕ КонтекстЭДО.ПроверитьДокументУдостоверяющийЛичность(ДокументУдЛичность) Тогда
		ДобавитьСтроку(ИнформацияОбОшибках,"Исправьте выявленные ошибки при проверке данных документа удостоверяющего личность.");
	КонецЕсли;
	
	СтрЦифры = "0123456789";
	Если ПустаяСтрока(НомерОсновнойПоставки1с) Тогда
		ДобавитьСтроку(ИнформацияОбОшибках, "Не указан номер основной поставки.");
	Иначе
		Для Инд = 1 По СтрДлина(НомерОсновнойПоставки1с) Цикл
			ТекСимв = Сред(НомерОсновнойПоставки1с, Инд, 1);
			Если Найти(СтрЦифры, ТекСимв) = 0 Тогда
				ДобавитьСтроку(ИнформацияОбОшибках, "Номер основной поставки содержит недопустимый символ.");
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ПустаяСтрока(ДокументОбъект.КраткоеНаименование) Тогда
		ДобавитьСтроку(ИнформацияОбОшибках, "На закладке ""Сведения об организации"" укажите краткое наименование.");
	КонецЕсли;
	
	Если СтрДлина(КраткоеНаименование) > 64 Тогда
		ДобавитьСтроку(ИнформацияОбОшибках, "На закладке ""Сведения об организации"" длина краткого наименования не должна превышать 64 символа.");
	КонецЕсли;
	
	Если ПустаяСтрока(ДокументОбъект.ПолноеНаименование) Тогда
		ДобавитьСтроку(ИнформацияОбОшибках, "На закладке ""Сведения об организации"" укажите полное наименование.");
	КонецЕсли;
	
	Если ПустаяСтрока(ДокументОбъект.ИНН)Тогда	
		ДобавитьСтроку(ИнформацияОбОшибках, "На закладке ""Сведения об организации"" укажите ИНН.");
	ИначеЕсли КонтекстЭДО.ПроверитьЦифровойКодЗаданнойДлины(ДокументОбъект.ИНН,10) Тогда
		
		Если НЕ (КонтекстЭДО.ПроверитьКПП(ДокументОбъект.КПП)) Тогда
			ДобавитьСтроку(ИнформацияОбОшибках, "На закладке ""Сведения об организации"" укажите КПП.");
		КонецЕсли;
		
		ДокументОбъект.ТипОрганизации = Истина;
		
	ИначеЕсли КонтекстЭДО.ПроверитьЦифровойКодЗаданнойДлины(ДокументОбъект.ИНН,12) Тогда
		
		Если (КонтекстЭДО.ПроверитьКПП(ДокументОбъект.КПП)) Тогда
			ДобавитьСтроку(ИнформацияОбОшибках, "На закладке ""Сведения об организации"" указан ИНН физического лица и КПП юридического лица.");
		КонецЕсли;
		
		ДокументОбъект.ТипОрганизации = Ложь;
	Иначе
		ДобавитьСтроку(ИнформацияОбОшибках, "На закладке ""Сведения об организации"" некорректно заполнен ИНН.");
	КонецЕсли;
	
	Если НЕ КонтекстЭДО.ПроверитьРегистрационныйНомерПФР(ДокументОбъект.РегНомерПФР, Истина) Тогда 
		ДобавитьСтроку(ИнформацияОбОшибках, "На закладке ""Сведения об организации"" некорректно заполнен регистрационный номер в ПФР.");
	КонецЕсли;
	
	Если НЕ КонтекстЭДО.ПроверитьЦифровойКодЗаданнойДлины(ДокументОбъект.РегНомерФСС, 10, Истина) Тогда
		ДобавитьСтроку(ИнформацияОбОшибках, "На закладке ""Сведения об организации"" некорректно заполнен регистрационный номер в ФСС.");
	КонецЕсли;
	
	Если ПризнакОбособленногоПодразделения Тогда
		
		Если НЕ ПустаяСтрока(ДокументОбъект.РегНомерФСС) Тогда
			Если ПустаяСтрока(ДополнительныйКодФСС) Тогда
				ДобавитьСтроку(ИнформацияОбОшибках, "На закладке ""Сведения об организации"" не указан дополнительный регистрационный номер ФСС.");
			КонецЕсли;
		КонецЕсли;
	
		Если НЕ ПустаяСтрока(ДополнительныйКодФСС) И НЕ КонтекстЭДО.ПроверитьЦифровойКодЗаданнойДлины(СокрЛП(ДополнительныйКодФСС), 10, Истина) Тогда
			ДобавитьСтроку(ИнформацияОбОшибках, "На закладке ""Сведения об организации"" дополнительный регистрационный номер ФСС, должен содержать 10 цифр.");
		КонецЕсли;
		
	КонецЕсли;
		
	Если НЕ ПустаяСтрока(ДокументОбъект.ЭлектроннаяПочта) Тогда
		Если НЕ КонтекстЭДО.ПроверитьEmail(ДокументОбъект.ЭлектроннаяПочта) Тогда
			ДобавитьСтроку(ИнформацияОбОшибках, "На закладке ""Сведения об организации"" некорректно введен необязательный адрес электронной почты.");
		КонецЕсли;
	КонецЕсли;
	
	Если ПустаяСтрока(ДокументОбъект.ТелефонОсновной) Тогда
		ДобавитьСтроку(ИнформацияОбОшибках, "На закладке ""Сведения об организации"" не указан основной телефон.");
	КонецЕсли;
	
	СтрокаОшибкаАдреса = КонтекстЭДО.ПроверитьАдрес(ДокументОбъект.АдресЮридический); 
	Если Не ПустаяСтрока(СтрокаОшибкаАдреса) Тогда
		ДобавитьСтроку(ИнформацияОбОшибках, "На закладке ""Сведения об организации"" некорректно заполнен юридический адрес: " + СтрокаОшибкаАдреса);
	КонецЕсли;
	
	СтрокаОшибкаАдреса = КонтекстЭДО.ПроверитьАдрес(ДокументОбъект.АдресФактический); 
	Если Не ПустаяСтрока(СтрокаОшибкаАдреса) Тогда
		ДобавитьСтроку(ИнформацияОбОшибках, "На закладке ""Сведения об организации"" некорректно заполнен фактический адрес: " + СтрокаОшибкаАдреса);
	КонецЕсли;
	
	//Страница Владельцы ЭЦП
	Если ПустаяСтрока(ДокументОбъект.ВладелецЭЦПФамилия) Тогда
		ДобавитьСтроку(ИнформацияОбОшибках, "На закладке ""Владелец ЭЦП"" не указана фамилия.");
	КонецЕсли;
	
	Если ПустаяСтрока(ДокументОбъект.ВладелецЭЦПИмя) Тогда
		ДобавитьСтроку(ИнформацияОбОшибках, "На закладке ""Владелец ЭЦП"" не указано имя.");
	КонецЕсли;
	
	Если ДокументОбъект.ТипОрганизации И ПустаяСтрока(ДокументОбъект.ВладелецЭЦПДолжность) Тогда
		ДобавитьСтроку(ИнформацияОбОшибках, "На закладке ""Владелец ЭЦП"" не указана должность.");
	КонецЕсли;
	
	//Страница Направления
	Если ДокументОбъект.Получатели.Количество() < 1 Тогда
		
		ДобавитьСтроку(ИнформацияОбОшибках, "На закладке ""Контролирующие органы"" не указано ни одно направление.");
		
	ИначеЕсли Получатели.Найти(Перечисления.ТипыконтролирующихОрганов.ПФР,"ТипПолучателя") = Неопределено
		И Получатели.Найти(Перечисления.ТипыконтролирующихОрганов.ФНС,"ТипПолучателя") = Неопределено Тогда
		
		ДобавитьСтроку(ИнформацияОбОшибках, "На закладке ""Контролирующие органы"" должны быть заданы направления ФНС или ПФР.");
	ИначеЕсли Получатели.Найти(Перечисления.ТипыконтролирующихОрганов.ФСГС,"ТипПолучателя") <> Неопределено
		И Получатели.Найти(Перечисления.ТипыконтролирующихОрганов.ФНС,"ТипПолучателя") = Неопределено Тогда
		ДобавитьСтроку(ИнформацияОбОшибках, "Для подключения направления ФСГС должно быть подключено направление ФНС, необходимо добавить направление ФНС.");
	КонецЕсли;
	
	Если ПустаяСтрока(ДокументОбъект.РегНомерПФР) И 
		ДокументОбъект.Получатели.Найти(Перечисления.ТипыконтролирующихОрганов.ПФР,"ТипПолучателя") <> Неопределено тогда
		ДобавитьСтроку(ИнформацияОбОшибках, "На закладке ""Контролирующие органы"" указано направление ПФР, но в сведениях об организации не заполнен регистрационный номер в ПФР");
	КонецЕсли;
	
	Если ДокументОбъект.Получатели.Найти(Перечисления.ТипыконтролирующихОрганов.ФСС,"ТипПолучателя") <> Неопределено Тогда
		
		Если НЕ ДокументОбъект.ПризнакОбособленногоПодразделения И ПустаяСтрока(ДокументОбъект.РегНомерФСС) Тогда
			ТекстОшибки = "регистрационный номер в ФСС.";
		ИначеЕсли ДокументОбъект.ПризнакОбособленногоПодразделения И ПустаяСтрока(ДокументОбъект.ДополнительныйКодФСС) Тогда
			ТекстОшибки = "дополнительный регистрационный номер в ФСС.";
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
			ДобавитьСтроку(ИнформацияОбОшибках, "Указано направление ФСС, но в сведениях об организации не заполнен "+ТекстОшибки);
		КонецЕсли;
		
	КонецЕсли;
	
	//Страница УЦ
	Если ДокументОбъект.СпецоператорСвязи = Неопределено
		ИЛИ ДокументОбъект.СпецоператорСвязи = Перечисления.СпецоператорыСвязи.ПустаяСсылка() Тогда
		ДобавитьСтроку(ИнформацияОбОшибках, "На закладке ""Удостоверяющий центр"" не выбран удостоверяющий центр.");
	КонецЕсли;
	//Страница Криптопровайдер
	ВыбранныйКриптопровайдер = "";
	Если ВыборКриптопровайдера = 1 Тогда
		ВыбранныйКриптопровайдер = ЭлементыФормы.VipNet.Заголовок;
	ИначеЕсли ВыборКриптопровайдера = 2 Тогда 
		ВыбранныйКриптопровайдер = ЭлементыФормы.CryptoPro.Заголовок;
	КонецЕсли;
	
	Если ПустаяСтрока(ВыбранныйКриптопровайдер) Тогда
		ДобавитьСтроку(ИнформацияОбОшибках, "Не закладке ""Криптопровайдер"" не выбран криптопровайдер.");
		
	Иначе
		
		Если ВыбранныйКриптопровайдер = ТаблицаЗначений.Получить(0).ОтображаемыйТекст Тогда
			ДокументОбъект.ТипКриптопровайдера = Перечисления.ТипыКриптоПровайдеров.VipNet;
		Иначе
			ДокументОбъект.ТипКриптопровайдера = Перечисления.ТипыКриптоПровайдеров.CryptoPro;
		КонецЕсли;
		
		Криптопровайдер = КонтекстЭДО.ПолучитьПараметрыКриптопровайдераПоЗначениюПеречисления(ДокументОбъект.ТипКриптопровайдера);
		
		Константы.ДокументооборотСКонтролирующимиОрганами_ТипКриптопровайдера.Установить(Криптопровайдер.Тип);
		Константы.ДокументооборотСКонтролирующимиОрганами_ИмяКриптопровайдера.Установить(Криптопровайдер.Имя);
		
	КонецЕсли;
	
	ДокументОбъект.ВладелецЭЦПТип = Перечисления.ТипыВладельцевЭЦП.Получить(ВыборСотрудника-1);
	ДокументОбъект.Ответственный  = ПараметрыСеанса.ТекущийПользователь;
	// Результаты проверки
	Если СтрДлина(СокрЛП(ИнформацияОбОшибках))> 0 Тогда
		
		Массив = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(ИнформацияОбОшибках, Символы.ПС);
		
		
		Для Счетчик = 0 по Массив.Количество()-1 Цикл
			
			Сообщить(Массив[Счетчик], СтатусСообщения.Важное);
			
		КонецЦикла;
	КонецЕсли;
	
	Возврат СтрДлина(СокрЛП(ИнформацияОбОшибках))=0;
	
КонецФункции

Функция ДокументОрганизацияНеЗаполнен(ТихийРежим = Ложь)
	
	Результат = ДокументОбъект.Организация = Справочники.Организации.ПустаяСсылка();
	
	Если НЕ ТихийРежим И Результат Тогда
		Сообщить("Сначала укажите организацию!");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБЩЕГО НАЗНАЧЕНИЯ

// Организация
Процедура ОрганизацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если НЕ ДокументОрганизацияНеЗаполнен(Истина) Тогда
		
		Ответ = Вопрос("Ранее введенные данные будут обновлены из справочника организации. Продолжить?", РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Да);
		
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияОчистка(Элемент, Истина);
	ОрганизацияЗаполнитьДанные();
	КонтекстЭДО.ПоказатьДопКодФСС(ДополнительныйКодФСС,ЭлементыФормы.НадписьДополнительныйКодФСС,ЭлементыФормы.ДополнительныйКодФСС,ПризнакОбособленногоПодразделения,РегНомерФСС);
	
КонецПроцедуры

Процедура ОрганизацияОчистка(Элемент, СтандартнаяОбработка)
	
	ДокументОбъект.АдресФактический                    = "";
	ДокументОбъект.АдресЮридический                    = "";
	ДокументОбъект.ИНН                                 = "";
	ДокументОбъект.КПП                                 = "";
	ДокументОбъект.КраткоеНаименование                 = "";
	ДокументОбъект.ПолноеНаименование                  = "";
	ДокументОбъект.ТелефонДополнительный               = "";
	ДокументОбъект.ТелефонОсновной                     = "";
	ДокументОбъект.ЭлектроннаяПочта                    = "";
	ДокументОбъект.РегНомерПФР                         = "";
	ДокументОбъект.РегНомерФСС                         = "";
	ДокументОбъект.ПризнакКрупнейшегоНалогоплательщика = Ложь;
	ДокументОбъект.ПризнакОбособленногоПодразделения   = Ложь;
	ДокументОбъект.Получатели.Очистить();
	
	ЭлементыФормы.ЮрАдрес.КнопкаВыбора                 = Ложь;
	ЭлементыФормы.ФактАдрес.КнопкаВыбора               = Ложь;
	ЭлементыФормы.ГлавныйБухгалтер.Доступность         = ложь;
	ЭлементыФормы.Директор.Доступность                 = Ложь;
	ЭлементыФормы.Исполнитель.Доступность              = Ложь;
	//ПустаяСсылкаСотрудник(Истина);
	Сотрудник										   = Неопределено;
	ЭлементыФормы.Сотрудник.КнопкаОткрытия 			   = Ложь;
	ЭлементыФормы.Сотрудник.ТолькоПросмотр 			   = Истина;
	
	ЮрАдрес                                            = "";
	ФактАдрес                                          = "";
	ВыборСотрудника                                    = 0;
	Модифицированность								   = Истина;
	КонтекстЭДО.ОрганизацияОчиститьДанныеСотрудника(ДокументОбъект,ЭлементыФормы.Сотрудник);
	Сотрудник = "";
	
КонецПроцедуры

Процедура ОрганизацияЗаполнитьДанные()
	
	ВыбОрганизация = ЭлементыФормы.Организация.Значение;
	
	Если НЕ ЗначениеЗаполнено(ВыбОрганизация) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураНастройкиФормы = "";
	СтруктураДанныхОрганизации = "";
	
	КонтекстЭДО.ЗаполнитьДанныеОрганизации(ВыбОрганизация,ДокументОбъект,СтруктураНастройкиФормы,СтруктураОтветственныхЛицБух,СтруктураОтветственныхЛицРук,СтруктураДанныхОрганизации);
	
	ЭлементыФормы.ЮрАдрес.КнопкаВыбора 							= СтруктураНастройкиФормы.ЮрАдресКнопкаВыбора;
	ЭлементыФормы.ФактАдрес.КнопкаВыбора 						= СтруктураНастройкиФормы.ФактАдресКнопкаВыбора;
	ЭлементыФормы.Сотрудник.ТолькоПросмотр						= НЕ СтруктураНастройкиФормы.СотрудникДоступность;
	ЭлементыФормы.КрупнейшийНалогоплательщик.Доступность 		= СтруктураНастройкиФормы.КрупнейшийНалогоплательщикДоступность;
	ЭлементыФормы.ПризнакОбособленногоПодразделения.Доступность = СтруктураНастройкиФормы.ПризнакОбособленногоПодразделенияДоступность;
	ЭлементыФормы.ГлавныйБухгалтер.Доступность 					= СтруктураНастройкиФормы.ГлавныйБухгалтерДоступность;
	ЭлементыФормы.Директор.Доступность 							= СтруктураНастройкиФормы.ДиректорДоступность;
	ЭлементыФормы.КПП.АвтоОтметкаНезаполненного					= ДокументОбъект.ТипОрганизации;
	ЭлементыФормы.КПП.ОтметкаНезаполненного						= ПустаяСтрока(КПП) И ДокументОбъект.ТипОрганизации;
	ЭлементыФормы.ДолжностьСотрудника.АвтоОтметкаНезаполненного	= ДокументОбъект.ТипОрганизации;
	ЭлементыФормы.ДолжностьСотрудника.ОтметкаНезаполненного		= ДокументОбъект.ТипОрганизации;
	
	ЮрАдрес 	= СтруктураНастройкиФормы.ЮрАдрес;
	ФактАдрес 	= СтруктураНастройкиФормы.ФактАдрес;
	ВыборСотрудника = СтруктураНастройкиФормы.ВыборСотрудника;
	ЭлементыФормы.Исполнитель.Доступность 	= Истина;
	
	ОбработкаСотрудника();
	
КонецПроцедуры

// Адрес
Процедура АдресНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтруктураАдреса = "";
	
	КонтекстЭДО.РедактированиеАдреса(СтруктураАдреса,Элемент.Имя,СтандартнаяОбработка,ДокументОбъект);
	АдресИзменился = СтруктураАдреса.Модифицированность;
	
	Если АдресИзменился Тогда
		
		Если Элемент.Имя = "ЮрАдрес" Тогда
			ЮрАдрес = СтруктураАдреса.Представление;
		Иначе
			ФактАдрес = СтруктураАдреса.Представление;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура АдресОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

Процедура ОбработкаСотрудника()
	КонтекстЭДО.ВыборВладельцаЭЦП(ВыборСотрудника,ДокументОбъект,СтруктураОтветственныхЛицРук,СтруктураОтветственныхЛицБух,Сотрудник,ИдКонф);
	ЭлементыФормы.Сотрудник.ТолькоПросмотр = НЕ ВыборСотрудника = 3;
КонецПроцедуры

Процедура СотрудникНачалоВыбора(Элемент, СтандартнаяОбработка)
	КонтекстЭДО.ИсполнительНачалоВыбора(ДокументОбъект,Элемент, СтандартнаяОбработка,ИдКонф);
КонецПроцедуры

Процедура СотрудникОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Элемент.Значение = ВыбранноеЗначение;
	Сотрудник = ВыбранноеЗначение;
	КонтекстЭДО.ОбновитьДанныеФормыСотрудника(ВыбранноеЗначение,ДокументОбъект,ИдКонф,Сотрудник);
	ЭлементыФормы.Сотрудник.КнопкаОткрытия = НЕ ПустаяСтрока(Сотрудник);
	
КонецПроцедуры

Процедура СотрудникОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	КонтекстЭДО.ОрганизацияОчиститьДанныеСотрудника(ДокументОбъект,Элемент);
	Сотрудник = "";
КонецПроцедуры

// Соглашение
Процедура ОткрытьСтраницуУЦНажатие(Элемент)
	
	Если Спецоператор = Неопределено Тогда
		Сообщить("Выберите удостоверяющий центр!", СтатусСообщения.Важное);
	Иначе
		АдресСтраницы = КонтекстЭДО.ПолучитьПараметрСпецоператора(Спецоператор,"АдресВебСтраницы");
		ЗапуститьПриложение(АдресСтраницы);
	КонецЕсли;
	
КонецПроцедуры

//Страница УЦ
Процедура СпецоператорИУЦОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ДокументОбъект.СпецоператорСвязи = ВыбранноеЗначение;
	ЗаполнитьСоглашение();
КонецПроцедуры

Процедура ЗаполнитьСписокУЦ()
	
	Спецоператор = КонтекстЭДО.ПолучитьСписокУЦ(ЭлементыФормы.СпецоператорИУЦ.СписокВыбора,ДокументОбъект.СпецоператорСвязи);
	
КонецПроцедуры

Процедура ЗаполнитьСоглашение()
	
	КонтекстЭДО.ЗаполнитьСоглашение(ЭлементыФормы.ПолеHTMLЛицензии,ДокументОбъект.СпецоператорСвязи);
	
КонецПроцедуры

//Страница Выбор криптопровайдера
Процедура СкачатьCryptoProCSPНажатие(Элемент)
	КонтекстЭДО.ОткрытьСтраницуДляСкачивания(Перечисления.ТипыКриптоПровайдеров.CryptoPro);
КонецПроцедуры

Процедура СкачатьVipNetCSPНажатие(Элемент)
	КонтекстЭДО.ОткрытьСтраницуДляСкачивания(Перечисления.ТипыКриптоПровайдеров.VipNet);
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ КОМАНДНОЙ ПАНЕЛИ ФОРМЫ
Процедура ДействияФормыОтправить(Кнопка)
	
	Если ПроверитьЗаполнениеДокумента() Тогда
		
		Результат = Ложь;
		
		Если ПустаяСтрока(ДокументОбъект.Номер) Тогда
			ДокументОбъект.УстановитьНовыйНомер();
		КонецЕсли;
		
		Если НЕ ТолькоПросмотр Тогда
			ДокументОбъект.Записать();
		КонецЕсли;
		
		РежимДиалога = Новый СписокЗначений;
		
		РежимДиалога.Добавить(КодВозвратаДиалога.Да, "Продолжить");
		РежимДиалога.Добавить(КодВозвратаДиалога.Нет, "Отмена");
		
		Ответ = Вопрос("Нажимая <Продолжить>, вы подтверждаете, что принимаете ""Соглашение о присоединении к регламенту удостоверяющего центра"". Продолжить?", РежимДиалога, 0, КодВозвратаДиалога.Да);
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			КонтекстЭДО.СформироватьИОтправитьЗаявление(ДокументОбъект);
			
		КонецЕсли;
		
		ОбновитьДанныеФормы();
		
		Если ДокументОбъект.Статус <> Перечисления.СтатусыЗаявленияАбонентаСпецоператораСвязи.Подготовлено Тогда
			ФормаТолькоПросмотр(Истина);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьДанныеФормы(ЗаполнитьИнформацию = Истина)
	
	Форма = ДокументОбъект.ПолучитьФорму();
	Форма.ЭтотОбъект.Прочитать();
	
	Если ЗаполнитьИнформацию Тогда
		ЗаполнитьСводнуюИнформацию();
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыПолучить(Кнопка)
	
	КонтекстЭДО.ОбменССерверомрегистрацииЭДО(ДокументОбъект);
	ОбновитьДанныеФормы();
	
КонецПроцедуры

Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	ОбновитьДанныеФормы();
	
КонецПроцедуры

Процедура VipNetПриИзменении(Элемент)
	КриптопровайдерПриИзменении();
КонецПроцедуры

Процедура CryptoProПриИзменении(Элемент)
	КриптопровайдерПриИзменении();
КонецПроцедуры

Процедура КриптопровайдерПриИзменении()
	
	ВидимостьКартинки = Ложь;
	
	КонтекстЭДО.ОбработкаКриптопровайдера(ВыборКриптопровайдера,ТаблицаЗначений,ВидимостьКартинки,КриптопровайдерРекомендация,ЭлементыФормы.VipNet.Заголовок,ЭлементыФормы.CryptoPro.Заголовок);
	
	ЭлементыФормы.ПолеКартинкиВнимание48.Видимость = ВидимостьКартинки;
	
КонецПроцедуры

Процедура СотрудникОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Сотрудник) Тогда
		Возврат;
	КонецЕсли;
	
	КонтекстЭДО.ОткрытьФормуИсполнителя(Сотрудник,ИдКонф);
	
КонецПроцедуры

Процедура КнопкаВызоваДанныхФИОНажатие(Элемент)
	Если ПустаяСтрока(СотрудникСтрока) И ВыборСотрудника = 3 ИЛИ ВыборСотрудника = 0 Тогда 
		Сообщить("Укажите сотрудника.");
		Возврат;
	КонецЕсли;
	
	КонтекстЭДО.ПолучитьФормуИзмененияФИО(ЭтаФорма);
КонецПроцедуры

Процедура СпецоператорИУЦОчистка(Элемент, СтандартнаяОбработка)
	ЭлементыФормы.ПолеHTMLЛицензии.УстановитьТекст("");
КонецПроцедуры