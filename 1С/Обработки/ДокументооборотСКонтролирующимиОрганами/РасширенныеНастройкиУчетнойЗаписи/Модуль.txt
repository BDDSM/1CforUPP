Процедура ОсновныеДействияФормыПоУмолчанию(Кнопка)
	
	Если Вопрос("Восстановить исходные настройки?", РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	НеФормироватьПодтвержденияАвтоматически = Ложь;
	ИспользоватьСервисОнлайнПроверки = Ложь;
	ИспользуютсяСъемныеКлючевыеНосители = Ложь;
	ИспользоватьОсобыйИдентификаторСистемыОтправителя = Ложь;
	ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя = Ложь;
	
	Модифицированность = Истина;
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	НеФормироватьПодтвержденияАвтоматически = СправочникОбъект.НеФормироватьПодтвержденияАвтоматически;
	ИспользоватьСервисОнлайнПроверки = СправочникОбъект.ИспользоватьСервисОнлайнПроверкиОтчетов;
	ИспользуютсяСъемныеКлючевыеНосители = СправочникОбъект.ИспользуютсяСъемныеКлючевыеНосители;
	
	ИдентификаторСистемыОтправителяПФР = СправочникОбъект.ИдентификаторСистемыОтправителяПФР;
	ИспользоватьОсобыйИдентификаторСистемыОтправителя = ЗначениеЗаполнено(ИдентификаторСистемыОтправителяПФР);
	
	ИдентификаторСистемыОтправителяФСГС = СправочникОбъект.ИдентификаторСистемыОтправителяФСГС;
	ИспользоватьОсобыйИдентификаторСистемыОтправителяФСГС = ЗначениеЗаполнено(ИдентификаторСистемыОтправителяФСГС);
	
	ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя = СправочникОбъект.ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя;
	ПолноеНаименованиеУполномоченногоПредставителя = СправочникОбъект.ПолноеНаименованиеУполномоченногоПредставителя;
	ИННУполномоченногоПредставителя = СправочникОбъект.ИННУполномоченногоПредставителя;
	КППУполномоченногоПредставителя = СправочникОбъект.КППУполномоченногоПредставителя;
	
	ЭлементыФормы.ПанельДополнительныеВозможности.Доступность = НЕ (СправочникОбъект.ОбменНапрямую) И СправочникОбъект.СпецоператорСвязи = Перечисления.СпецоператорыСвязи.Такском;
	ЭлементыФормы.ПанельИдентификаторОтправителяПФР.Доступность = СправочникОбъект.ПредназначенаДляДокументооборотаСПФР;
	ЭлементыФормы.ПанельИдентификаторОтправителяФСГС.Доступность = СправочникОбъект.ПредназначенаДляДокументооборотаСФСГС;
	
	УправлениеЭУ();
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	СправочникОбъект.НеФормироватьПодтвержденияАвтоматически = НеФормироватьПодтвержденияАвтоматически;
	СправочникОбъект.ИспользоватьСервисОнлайнПроверкиОтчетов = ИспользоватьСервисОнлайнПроверки;
	СправочникОбъект.ИспользуютсяСъемныеКлючевыеНосители = ИспользуютсяСъемныеКлючевыеНосители;
	СправочникОбъект.ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя = ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя;
	СправочникОбъект.ПолноеНаименованиеУполномоченногоПредставителя = ПолноеНаименованиеУполномоченногоПредставителя;
	СправочникОбъект.ИННУполномоченногоПредставителя = ИННУполномоченногоПредставителя;
	СправочникОбъект.КППУполномоченногоПредставителя = КППУполномоченногоПредставителя;
	
	Если ИспользоватьОсобыйИдентификаторСистемыОтправителя Тогда
		СправочникОбъект.ИдентификаторСистемыОтправителяПФР = ИдентификаторСистемыОтправителяПФР;
	Иначе
		СправочникОбъект.ИдентификаторСистемыОтправителяПФР = "";
	КонецЕсли;
	
	Если ИспользоватьОсобыйИдентификаторСистемыОтправителяФСГС Тогда
		СправочникОбъект.ИдентификаторСистемыОтправителяФСГС = ИдентификаторСистемыОтправителяФСГС;
	Иначе
		СправочникОбъект.ИдентификаторСистемыОтправителяФСГС = "";
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОтмена(Кнопка)
	
	Закрыть();
	
КонецПроцедуры

Процедура УправлениеЭУ()
	
	ЭлементыФормы.ИдентификаторСистемыОтправителяПФР.Доступность = ИспользоватьОсобыйИдентификаторСистемыОтправителя;
	ЭлементыФормы.ИдентификаторСистемыОтправителяФСГС.Доступность = ИспользоватьОсобыйИдентификаторСистемыОтправителяФСГС;
	ЭлементыФормы.ПанельУП.Доступность = ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителя;
	
КонецПроцедуры

Процедура ИспользоватьОсобыйИдентификаторСистемыОтправителяПриИзменении(Элемент)
	
	УправлениеЭУ();
	
	Если Элемент.Значение И НЕ ЗначениеЗаполнено(ИдентификаторСистемыОтправителяПФР) Тогда
		ТекущийЭлемент = ЭлементыФормы.ИдентификаторСистемыОтправителяПФР;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЯвляетсяУчетнойЗаписьюУполномоченногоПредставителяПриИзменении(Элемент)
	
	УправлениеЭУ();
	
КонецПроцедуры

Процедура ИспользоватьОсобыйИдентификаторСистемыОтправителяПриИзмененииФСГС(Элемент)
	
	УправлениеЭУ();
	
	Если Элемент.Значение И НЕ ЗначениеЗаполнено(ИдентификаторСистемыОтправителяФСГС) Тогда
		ТекущийЭлемент = ЭлементыФормы.ИдентификаторСистемыОтправителяФСГС;
	КонецЕсли;
	
КонецПроцедуры

Процедура ИдентификаторСистемыОтправителяФСГСОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	Если ВСловеПрисутствуютРусскиеБуквыИлиНеразрешенныеСимволы(СокрЛП(Текст)) Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Предупреждение("В поле присутствуют недопустимые символы или символы кириллицы, введите корректный идентификатор.");
		
	КонецЕсли;
	
КонецПроцедуры

Функция ВСловеПрисутствуютРусскиеБуквыИлиНеразрешенныеСимволы(Знач СтрокаПараметр) 
	
	СтрокаПараметр = СокрЛП(СтрокаПараметр);
	
	СписокДопустимыхЗначений = Новый Массив;
	СписокДопустимыхЗначений.Добавить(184);
	СписокДопустимыхЗначений.Добавить(168);
	СписокДопустимыхЗначений.Добавить(44);
	СписокДопустимыхЗначений.Добавить(45);
	СписокДопустимыхЗначений.Добавить(46);
	СписокДопустимыхЗначений.Добавить(32);
	СписокДопустимыхЗначений.Добавить(48);
	СписокДопустимыхЗначений.Добавить(49);
	СписокДопустимыхЗначений.Добавить(50);
	СписокДопустимыхЗначений.Добавить(51);
	СписокДопустимыхЗначений.Добавить(52);
	СписокДопустимыхЗначений.Добавить(53);
	СписокДопустимыхЗначений.Добавить(54);
	СписокДопустимыхЗначений.Добавить(55);
	СписокДопустимыхЗначений.Добавить(56);
	СписокДопустимыхЗначений.Добавить(57);
	СписокДопустимыхЗначений.Добавить(95);
	
	Для ИндексСимвола = 1 По СтрДлина(СтрокаПараметр) Цикл
		Код = КодСимвола(СтрокаПараметр, ИндексСимвола);
		Если (Код >= 1040 И Код <= 1103) ИЛИ Код = 1105 ИЛИ Код = 1025  Тогда
			// русские буквы
			Возврат Истина;
		ИначеЕсли (СписокДопустимыхЗначений.Найти(Код) <> Неопределено) Тогда
			// неразрешенные символы
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции