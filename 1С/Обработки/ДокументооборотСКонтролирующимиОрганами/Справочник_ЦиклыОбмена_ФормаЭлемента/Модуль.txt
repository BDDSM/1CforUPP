Перем СоответствиеТипаТранспортногоСообщенияКартинке;
Перем СоответствиеТипаТранспортногоСообщенияНадписи;
Перем СоответствиеТипаТранспортногоСообщенияТекстуНадписи;
Перем СоответствиеЭлементовУправленияТипуТранспортногоСообщения;
Перем СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений;
Перем СоответствиеТипаСообщенийТипамЦиклаОбмена;
Перем СоответствиеКартинкиЦветуНадписи;
Перем ЗеленыйШар;
Перем ЗеленыйШарНерасшифрованное;
Перем СерыйШар;
Перем ЗолотойШар;
Перем ЗолотойШарЗашифрованное;
Перем КрасныйЦвет;
Перем ЗеленыйЦвет;
Перем СоответствиеТипаСообщенияПорядку;

Процедура ПрорисоватьСтатусыЧтенияСообщений()
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	                      |	ТранспортноеСообщение.Ссылка КАК Сообщение,
	                      |	ТранспортноеСообщение.Тип КАК Тип
	                      |ИЗ
	                      |	Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
	                      |ГДЕ
	                      |	ТранспортноеСообщение.Ссылка В(&Ссылка)
	                      |	И ТранспортноеСообщение.ЦиклОбмена = &ЦиклОбмена");
	Запрос.УстановитьПараметр("ЦиклОбмена", Ссылка);
	Запрос.УстановитьПараметр("Ссылка", КонтекстЭДО.ПолученныеТранспортныеСообщения);
	ТаблицаНепрочитанныхСообщений = Запрос.Выполнить().Выгрузить();
	
	// прорисываем надписи по основным этапам
	Для Каждого Эл Из СоответствиеТипаСообщенийТипамЦиклаОбмена Цикл
		Если Эл.Значение = Тип Тогда
			ТипСообщения = Эл.Ключ;
			Надпись = СоответствиеТипаТранспортногоСообщенияНадписи[ТипСообщения];
			Если Надпись <> Неопределено Тогда
				Надпись.Шрифт = Новый Шрифт(Надпись.Шрифт, , , (ТаблицаНепрочитанныхСообщений.Найти(ТипСообщения, "Тип") <> Неопределено));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// прорисовываем надпись с критической ошибкой
	Если ТаблицаНепрочитанныхСообщений.Найти(Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка, "Тип") <> Неопределено
	ИЛИ ТаблицаНепрочитанныхСообщений.Найти(Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеПФР,  "Тип") <> Неопределено
	ИЛИ ТаблицаНепрочитанныхСообщений.Найти(Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС,  "Тип") <> Неопределено
	ИЛИ ТаблицаНепрочитанныхСообщений.Найти(Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФСГС, "Тип") <> Неопределено
	Тогда
		ЭлементыФормы.НадписьВниманиеОшибки.Шрифт = Новый Шрифт(ЭлементыФормы.НадписьВниманиеОшибки.Шрифт, , , Истина);
	Иначе
		ЭлементыФормы.НадписьВниманиеОшибки.Шрифт = Новый Шрифт(ЭлементыФормы.НадписьВниманиеОшибки.Шрифт, , , Ложь);
	КонецЕсли;
	
КонецПроцедуры

Процедура ИнициализироватьСоответствия()
	
	СоответствиеТипаТранспортногоСообщенияКартинке = Новый Соответствие;
	СоответствиеТипаТранспортногоСообщенияНадписи = Новый Соответствие;
	СоответствиеТипаТранспортногоСообщенияТекстуНадписи = Новый Соответствие;
	СоответствиеЭлементовУправленияТипуТранспортногоСообщения = Новый Соответствие;
	СоответствиеТипаСообщенийТипамЦиклаОбмена = Новый Соответствие;
	СоответствиеТипаСообщенияПорядку = Новый Соответствие;
	
	Если Тип = Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность Тогда
		
		Если ФорматДокументооборота = Перечисления.ФорматыДокументооборотаСФНС.Приказ534 Тогда
			
			//
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ДекларацияНП, ЭлементыФормы.КартинкаДекларацияНП);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО, ЭлементыФормы.КартинкаПодтверждениеДекларацияНО);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, ЭлементыФормы.КартинкаИзвещениеПодтверждениеНП);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеДекларацияНО, ЭлементыФормы.КартинкаИзвещениеДекларацияНО);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО, ЭлементыФормы.КартинкаРезультатПриемаДекларацияНО);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, ЭлементыФормы.КартинкаИзвещениеРезультатПриемаНП);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО, ЭлементыФормы.КартинкаРезультатОбработкиДекларацияНО);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП, ЭлементыФормы.КартинкаИзвещениеРезультатОбработкиНП);
			
			//
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ДекларацияНП, ЭлементыФормы.НадписьДекларацияНП);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО, ЭлементыФормы.НадписьПодтверждениеДекларацияНО);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, ЭлементыФормы.НадписьИзвещениеПодтверждениеНП);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеДекларацияНО, ЭлементыФормы.НадписьИзвещениеДекларацияНО);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО, ЭлементыФормы.НадписьРезультатПриемаДекларацияНО);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, ЭлементыФормы.НадписьИзвещениеРезультатПриемаНП);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО, ЭлементыФормы.НадписьРезультатОбработкиДекларацияНО);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП, ЭлементыФормы.НадписьИзвещениеРезультатОбработкиНП);
			
			//
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ДекларацияНП,																		"Первичное сообщение, содержащее файл отчетности, отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО,															"Подтверждение даты отправки отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП,															"Извещение о получении подтверждения даты отправки отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеДекларацияНО,																"Извещение о получении отчета отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО,														"Результат приема отчета отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП,															"Извещение о получении результата приема отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО,														"Результат обработки отчета отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП,														"Извещение о получении результата обработки отчета отсутствует");
			
			//
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьДекларацияНП, Перечисления.ТипыТранспортныхСообщений.ДекларацияНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаДекларацияНП, Перечисления.ТипыТранспортныхСообщений.ДекларацияНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаДекларацияНПЭмблема, Перечисления.ТипыТранспортныхСообщений.ДекларацияНП);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПодтверждениеДекларацияНО, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеДекларацияНО, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеДекларацияНОЭмблема, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеПодтверждениеНП, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеПодтверждениеНП, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеПодтверждениеНПЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеДекларацияНО, Перечисления.ТипыТранспортныхСообщений.ИзвещениеДекларацияНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеДекларацияНО, Перечисления.ТипыТранспортныхСообщений.ИзвещениеДекларацияНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеДекларацияНОЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеДекларацияНО);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьРезультатПриемаДекларацияНО, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаРезультатПриемаДекларацияНО, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаРезультатПриемаДекларацияНОЭмблема, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеРезультатПриемаНП, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеРезультатПриемаНП, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеРезультатПриемаНПЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьРезультатОбработкиДекларацияНО, Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаРезультатОбработкиДекларацияНО, Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаРезультатОбработкиДекларацияНОЭмблема, Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеРезультатОбработкиНП, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеРезультатОбработкиНП, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеРезультатОбработкиНПЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП);
			
			//
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ДекларацияНП, Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО, Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеДекларацияНО, Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО, Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО, Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП, Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность);
			
			//
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ДекларацияНП, 1);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО, 2);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, 3);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеДекларацияНО, 4);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО, 5);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, 6);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО, 7);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП, 8);
			
		Иначе
			
			//
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетность, ЭлементыФормы.КартинкаПервичноеСообщение);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиОтчетности, ЭлементыФормы.КартинкаПодтверждениеОтправки);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетности, ЭлементыФормы.КартинкаПротоколПроверки);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.КвитанцияОПриемеФайлаОтчетности, ЭлементыФормы.КартинкаПодтверждениеДоставки);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиОтчетности, ЭлементыФормы.КартинкаОтветНаПодтверждениеОтправки);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляОтчетности, ЭлементыФормы.КартинкаПодтверждениеНаПротоколПроверки);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.УведомлениеОбУточненииНБО, ЭлементыФормы.КартинкаУведомлениеОбУточнении);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.Протокол2НДФЛ, ЭлементыФормы.КартинкаУведомлениеОбУточнении);
			
			//
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетность, ЭлементыФормы.НадписьПервичноеСообщение);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиОтчетности, ЭлементыФормы.НадписьПодтверждениеОтправки);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетности, ЭлементыФормы.НадписьПротоколПроверки);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.КвитанцияОПриемеФайлаОтчетности, ЭлементыФормы.НадписьПодтверждениеДоставки);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиОтчетности, ЭлементыФормы.НадписьПодтверждениеНаПодтверждениеОтправки);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляОтчетности, ЭлементыФормы.НадписьПодтверждениеНаПротоколПроверки);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.УведомлениеОбУточненииНБО, ЭлементыФормы.НадписьУведомлениеОбУточнении);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.Протокол2НДФЛ, ЭлементыФормы.НадписьУведомлениеОбУточнении);
			
			//
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетность,												"Первичное сообщение, содержащее файл отчетности, отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиОтчетности,													"Подтверждение отправки файла отчетности отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиОтчетности,										"Переподписанное налогоплательщиком подтверждение отправки файла отчетности отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.КвитанцияОПриемеФайлаОтчетности,													"Квитанция о приеме файла отчетности налоговым органом отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетности,													"Протокол входного контроля файла отчетности отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляОтчетности,									"Переподписанный налогоплательщиком протокол входного контроля файла отчетности отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.УведомлениеОбУточненииНБО,															"Уведомление об уточнении (протокол приема) отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.Протокол2НДФЛ,																		"Уведомление об уточнении (протокол приема) отсутствует");
			
			//
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПервичноеСообщение, Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетность);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПервичноеСообщение, Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетность);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПервичноеСообщениеЭмблема, Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетность);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПодтверждениеОтправки, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиОтчетности);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеОтправки, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиОтчетности);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеОтправкиЭмблема, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиОтчетности);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПодтверждениеНаПодтверждениеОтправки, Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиОтчетности);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаОтветНаПодтверждениеОтправки, Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиОтчетности);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаОтветНаПодтверждениеОтправкиЭмблема, Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиОтчетности);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПодтверждениеДоставки, Перечисления.ТипыТранспортныхСообщений.КвитанцияОПриемеФайлаОтчетности);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеДоставки, Перечисления.ТипыТранспортныхСообщений.КвитанцияОПриемеФайлаОтчетности);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеДоставкиЭмблема, Перечисления.ТипыТранспортныхСообщений.КвитанцияОПриемеФайлаОтчетности);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПротоколПроверки, Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетности);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПротоколПроверки, Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетности);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПротоколПроверкиЭмблема, Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетности);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПодтверждениеНаПротоколПроверки, Перечисления.ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляОтчетности);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеНаПротоколПроверки, Перечисления.ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляОтчетности);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеНаПротоколПроверкиЭмблема, Перечисления.ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляОтчетности);
			
			ТипПротоколЗагрузки = Новый Массив;
			ТипПротоколЗагрузки.Добавить(Перечисления.ТипыТранспортныхСообщений.УведомлениеОбУточненииНБО);
			ТипПротоколЗагрузки.Добавить(Перечисления.ТипыТранспортныхСообщений.Протокол2НДФЛ);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьУведомлениеОбУточнении, ТипПротоколЗагрузки);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаУведомлениеОбУточнении, ТипПротоколЗагрузки);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаУведомлениеОбУточненииЭмблема, ТипПротоколЗагрузки);
			
			//
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетность, Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиОтчетности, Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиОтчетности, Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.КвитанцияОПриемеФайлаОтчетности, Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетности, Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляОтчетности, Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.УведомлениеОбУточненииНБО, Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.Протокол2НДФЛ, Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность);
			
			//
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетность, 1);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиОтчетности, 2);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиОтчетности, 3);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.КвитанцияОПриемеФайлаОтчетности, 4);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетности, 5);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляОтчетности, 6);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.УведомлениеОбУточненииНБО, 7);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.Протокол2НДФЛ, 7);
			
		КонецЕсли;
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.Заявление Тогда
			//
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗаявлениеНП, 					ЭлементыФормы.КартинкаЗаявлениеНП);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗаявлениеНО, 		ЭлементыФормы.КартинкаПодтверждениеЗаявлениеНО);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, 		ЭлементыФормы.КартинкаИзвещениеПодтверждениеНПЗаявление);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗаявлениеНО, 			ЭлементыФормы.КартинкаИзвещениеЗаявлениеНО);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗаявлениеНО, 		ЭлементыФормы.КартинкаРезультатПриемаЗаявлениеНО);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, 		ЭлементыФормы.КартинкаИзвещениеРезультатПриемаНПЗаявление);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеРФНО, ЭлементыФормы.КартинкаРезультатОбработкиЗаявлениеРФНО);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиРФНП, ЭлементыФормы.КартинкаИзвещениеРезультатОбработкиРФНП);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.СообщениеОбОтзывеЗаявлениеРФНО, 	ЭлементыФормы.КартинкаСообщениеОбОтзывеЗаявлениеРФНО);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбОтзывеЗаявлениеРФНП, 	ЭлементыФормы.КартинкаИзвещениеОбОтзывеЗаявлениеРФНП);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеТСНО, ЭлементыФормы.КартинкаРезультатОбработкиЗаявлениеТСНО);
			СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиТСНП, ЭлементыФормы.КартинкаИзвещениеРезультатОбработкиТСНП);
			
			//
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗаявлениеНП, 						ЭлементыФормы.НадписьЗаявлениеНП);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗаявлениеНО, 		ЭлементыФормы.НадписьПодтверждениеЗаявлениеНО);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, 		ЭлементыФормы.НадписьИзвещениеПодтверждениеНПЗаявление);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗаявлениеНО, 			ЭлементыФормы.НадписьИзвещениеЗаявлениеНО);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗаявлениеНО, 		ЭлементыФормы.НадписьРезультатПриемаЗаявлениеНО);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, 		ЭлементыФормы.НадписьИзвещениеРезультатПриемаНПЗаявление);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеРФНО, 	ЭлементыФормы.НадписьРезультатОбработкиЗаявлениеРФНО);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиРФНП, 	ЭлементыФормы.НадписьИзвещениеРезультатОбработкиРФНП);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.СообщениеОбОтзывеЗаявлениеРФНО, 	ЭлементыФормы.НадписьСообщениеОбОтзывеЗаявлениеРФНО);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбОтзывеЗаявлениеРФНП, 	ЭлементыФормы.НадписьИзвещениеОбОтзывеЗаявлениеРФНП);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеТСНО, 	ЭлементыФормы.НадписьРезультатОбработкиЗаявлениеТСНО);
			СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиТСНП, 	ЭлементыФормы.НадписьИзвещениеРезультатОбработкиТСНП);
			
			//
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗаявлениеНП,						"Первичное сообщение, содержащее заявление, отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗаявлениеНО,			"Подтверждение даты отправки отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП,			"Извещение о получении подтверждения даты отправки отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗаявлениеНО,				"Извещение о получении заявления отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗаявлениеНО,			"Результат приема заявления отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП,			"Извещение о получении результата приема отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеРФНО,	"Результат обработки заявления отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиРФНП,	"Извещение о получении результата обработки заявления отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.СообщениеОбОтзывеЗаявлениеРФНО,		"Сообщение об отзыве заявления в РФ отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбОтзывеЗаявлениеРФНП,		"Извещение о получении сообщения об отзыве заявления в РФ отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеТСНО,	"Результат обработки заявления в ТС отсутствует");
			СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиТСНП,	"Извещение о получении результата обработки заявления в ТС отсутствует");
			
			//
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьЗаявлениеНП, 							Перечисления.ТипыТранспортныхСообщений.ЗаявлениеНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаЗаявлениеНП, 							Перечисления.ТипыТранспортныхСообщений.ЗаявлениеНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаЗаявлениеНПЭмблема, 					Перечисления.ТипыТранспортныхСообщений.ЗаявлениеНП);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПодтверждениеЗаявлениеНО, 				Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗаявлениеНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеЗаявлениеНО, 				Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗаявлениеНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеЗаявлениеНОЭмблема, 		Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗаявлениеНО);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеПодтверждениеНПЗаявление,		Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеПодтверждениеНПЗаявление,		Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеПодтверждениеНПЗаявлениеЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеЗаявлениеНО, 					Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗаявлениеНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеЗаявлениеНО, 					Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗаявлениеНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеЗаявлениеНОЭмблема, 			Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗаявлениеНО);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьРезультатПриемаЗаявлениеНО, 			Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗаявлениеНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаРезультатПриемаЗаявлениеНО, 			Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗаявлениеНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаРезультатПриемаЗаявлениеНОЭмблема, 	Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗаявлениеНО);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеРезультатПриемаНПЗаявление, 			Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеРезультатПриемаНПЗаявление, 			Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеРезультатПриемаНПЗаявлениеЭмблема, 	Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьРезультатОбработкиЗаявлениеРФНО, 		Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеРФНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаРезультатОбработкиЗаявлениеРФНО, 		Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеРФНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаРезультатОбработкиЗаявлениеРФНОЭмблема, Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеРФНО);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеРезультатОбработкиРФНП, 			Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиРФНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеРезультатОбработкиРФНП, 		Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиРФНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеРезультатОбработкиРФНПЭмблема, 	Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиРФНП);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьСообщениеОбОтзывеЗаявлениеРФНО, 			Перечисления.ТипыТранспортныхСообщений.СообщениеОбОтзывеЗаявлениеРФНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаСообщениеОбОтзывеЗаявлениеРФНО, 			Перечисления.ТипыТранспортныхСообщений.СообщениеОбОтзывеЗаявлениеРФНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаСообщениеОбОтзывеЗаявлениеРФНОЭмблема, 	Перечисления.ТипыТранспортныхСообщений.СообщениеОбОтзывеЗаявлениеРФНО);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеОбОтзывеЗаявлениеРФНП, 			Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбОтзывеЗаявлениеРФНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеОбОтзывеЗаявлениеРФНП, 			Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбОтзывеЗаявлениеРФНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеОбОтзывеЗаявлениеРФНПЭмблема, 	Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбОтзывеЗаявлениеРФНП);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьРезультатОбработкиЗаявлениеТСНО, 			Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеТСНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаРезультатОбработкиЗаявлениеТСНО, 			Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеТСНО);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаРезультатОбработкиЗаявлениеТСНОЭмблема, 	Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеТСНО);
			
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеРезультатОбработкиТСНП, 			Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиТСНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеРезультатОбработкиТСНП, 			Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиТСНП);
			СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеРезультатОбработкиТСНПЭмблема, 	Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиТСНП);
			
			//
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗаявлениеНП, 						Перечисления.ТипыЦикловОбмена.Заявление);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗаявлениеНО, 		Перечисления.ТипыЦикловОбмена.Заявление);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, 		Перечисления.ТипыЦикловОбмена.Заявление);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗаявлениеНО, 			Перечисления.ТипыЦикловОбмена.Заявление);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗаявлениеНО, 		Перечисления.ТипыЦикловОбмена.Заявление);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, 		Перечисления.ТипыЦикловОбмена.Заявление);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеРФНО, 	Перечисления.ТипыЦикловОбмена.Заявление);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиРФНП, 	Перечисления.ТипыЦикловОбмена.Заявление);
			
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.СообщениеОбОтзывеЗаявлениеРФНО, 	Перечисления.ТипыЦикловОбмена.Заявление);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбОтзывеЗаявлениеРФНП, 	Перечисления.ТипыЦикловОбмена.Заявление);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеТСНО, 	Перечисления.ТипыЦикловОбмена.Заявление);
			СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиТСНП, 	Перечисления.ТипыЦикловОбмена.Заявление);
			
			//
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗаявлениеНП, 						1);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗаявлениеНО, 			2);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, 			3);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗаявлениеНО, 				4);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗаявлениеНО, 		5);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, 		6);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеРФНО, 	7);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиРФНП, 	8);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.СообщениеОбОтзывеЗаявлениеРФНО, 	9);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбОтзывеЗаявлениеРФНП, 	10);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеТСНО, 	11);
			СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиТСНП, 	12);
			

	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.Форма2НДФЛ Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.Форма2НДФЛНП, ЭлементыФормы.КартинкаФорма2НДФЛНП);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО, ЭлементыФормы.КартинкаПодтверждениеФорма2НДФЛНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, ЭлементыФормы.КартинкаИзвещениеПодтверждениеНП2НДФЛ);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеФорма2НДФЛНО, ЭлементыФормы.КартинкаИзвещениеФорма2НДФЛНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО, ЭлементыФормы.КартинкаРезультатПриемаФорма2НДФЛНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, ЭлементыФормы.КартинкаИзвещениеРезультатПриемаНП2НДФЛ);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.Форма2НДФЛНП, ЭлементыФормы.НадписьФорма2НДФЛНП);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО, ЭлементыФормы.НадписьПодтверждениеФорма2НДФЛНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, ЭлементыФормы.НадписьИзвещениеПодтверждениеНП2НДФЛ);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеФорма2НДФЛНО, ЭлементыФормы.НадписьИзвещениеФорма2НДФЛНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО, ЭлементыФормы.НадписьРезультатПриемаФорма2НДФЛНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, ЭлементыФормы.НадписьИзвещениеРезультатПриемаНП2НДФЛ);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.Форма2НДФЛНП,																		"Первичное сообщение, содержащее данные формы 2-НДФЛ, отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО,															"Подтверждение даты отправки отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП,															"Извещение о получении подтверждения даты отправки отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеФорма2НДФЛНО,																"Извещение о получении формы 2-НДФЛ отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО,														"Результат приема формы 2-НДФЛ отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП,															"Извещение о получении результата приема отсутствует");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьФорма2НДФЛНП, Перечисления.ТипыТранспортныхСообщений.Форма2НДФЛНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаФорма2НДФЛНП, Перечисления.ТипыТранспортныхСообщений.Форма2НДФЛНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаФорма2НДФЛНПЭмблема, Перечисления.ТипыТранспортныхСообщений.Форма2НДФЛНП);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПодтверждениеФорма2НДФЛНО, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеФорма2НДФЛНО, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеФорма2НДФЛНОЭмблема, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеПодтверждениеНП2НДФЛ, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеПодтверждениеНП2НДФЛ, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеПодтверждениеНП2НДФЛЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеФорма2НДФЛНО, Перечисления.ТипыТранспортныхСообщений.ИзвещениеФорма2НДФЛНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеФорма2НДФЛНО, Перечисления.ТипыТранспортныхСообщений.ИзвещениеФорма2НДФЛНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеФорма2НДФЛНОЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеФорма2НДФЛНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьРезультатПриемаФорма2НДФЛНО, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаРезультатПриемаФорма2НДФЛНО, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаРезультатПриемаФорма2НДФЛНОЭмблема, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеРезультатПриемаНП2НДФЛ, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеРезультатПриемаНП2НДФЛ, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеРезультатПриемаНП2НДФЛЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.Форма2НДФЛНП, Перечисления.ТипыЦикловОбмена.Форма2НДФЛ);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО, Перечисления.ТипыЦикловОбмена.Форма2НДФЛ);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, Перечисления.ТипыЦикловОбмена.Форма2НДФЛ);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеФорма2НДФЛНО, Перечисления.ТипыЦикловОбмена.Форма2НДФЛ);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО, Перечисления.ТипыЦикловОбмена.Форма2НДФЛ);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, Перечисления.ТипыЦикловОбмена.Форма2НДФЛ);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.Форма2НДФЛНП, 1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО, 2);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, 3);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеФорма2НДФЛНО, 4);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО, 5);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, 6);
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.НеформализованныеДокументыНалоговогоОргана Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.НеформализованныйДокументНО, ЭлементыФормы.КартинкаНеформализованныйДокументНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеНаНеформализованныйДокументНО, ЭлементыФормы.КартинкаПодтверждениеНаНеформализованныйДокументНО);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.НеформализованныйДокументНО, ЭлементыФормы.НадписьНеформализованныйДокументНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеНаНеформализованныйДокументНО, ЭлементыФормы.НадписьПодтверждениеНаНеформализованныйДокументНО);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.НеформализованныйДокументНО,														"Первичное сообщение, содержащее документ налогового органа, отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеНаНеформализованныйДокументНО,											"Подтверждение о приеме документа налогового органа отсутствует");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьНеформализованныйДокументНО, Перечисления.ТипыТранспортныхСообщений.НеформализованныйДокументНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаНеформализованныйДокументНО, Перечисления.ТипыТранспортныхСообщений.НеформализованныйДокументНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаНеформализованныйДокументНОЭмблема, Перечисления.ТипыТранспортныхСообщений.НеформализованныйДокументНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПодтверждениеНаНеформализованныйДокументНО, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеНаНеформализованныйДокументНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеНаНеформализованныйДокументНО, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеНаНеформализованныйДокументНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеНаНеформализованныйДокументНОЭмблема, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеНаНеформализованныйДокументНО);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.НеформализованныйДокументНО, Перечисления.ТипыЦикловОбмена.НеформализованныеДокументыНалоговогоОргана);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеНаНеформализованныйДокументНО, Перечисления.ТипыЦикловОбмена.НеформализованныеДокументыНалоговогоОргана);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.НеформализованныйДокументНО, 1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеНаНеформализованныйДокументНО, 2);
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.НеформализованныеДокументыНалогоплательщика Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.НеформализованныйДокументНалогоплательщика, ЭлементыФормы.КартинкаНеформализованныйДокументНалогоплательщика);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика, ЭлементыФормы.КартинкаПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика, ЭлементыФормы.КартинкаПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДоставкиНеформализованногоДокументаНалогоплательщика, ЭлементыФормы.КартинкаПодтверждениеДоставкиНеформализованногоДокументаНалогоплательщика);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.НеформализованныйДокументНалогоплательщика, ЭлементыФормы.НадписьНеформализованныйДокументНалогоплательщика);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика, ЭлементыФормы.НадписьПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика, ЭлементыФормы.НадписьПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДоставкиНеформализованногоДокументаНалогоплательщика, ЭлементыФормы.НадписьПодтверждениеДоставкиНеформализованногоДокументаНалогоплательщика);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.НеформализованныйДокументНалогоплательщика,											"Первичное сообщение, содержащее документ налогоплательщика, отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика,					"Подтверждение отправки документа налогоплательщика отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика,	"Переподписанное налогоплательщиком подтверждение отправки документа налогоплательщика отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДоставкиНеформализованногоДокументаНалогоплательщика,					"Квитанция о доставке документа в налоговый орган отсутствует");
		
		// 
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьНеформализованныйДокументНалогоплательщика, Перечисления.ТипыТранспортныхСообщений.НеформализованныйДокументНалогоплательщика);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаНеформализованныйДокументНалогоплательщика, Перечисления.ТипыТранспортныхСообщений.НеформализованныйДокументНалогоплательщика);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаНеформализованныйДокументНалогоплательщикаЭмблема, Перечисления.ТипыТранспортныхСообщений.НеформализованныйДокументНалогоплательщика);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщикаЭмблема, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика, Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика, Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщикаЭмблема, Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПодтверждениеДоставкиНеформализованногоДокументаНалогоплательщика, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДоставкиНеформализованногоДокументаНалогоплательщика);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеДоставкиНеформализованногоДокументаНалогоплательщика, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДоставкиНеформализованногоДокументаНалогоплательщика);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеДоставкиНеформализованногоДокументаНалогоплательщикаЭмблема, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДоставкиНеформализованногоДокументаНалогоплательщика);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.НеформализованныйДокументНалогоплательщика, Перечисления.ТипыЦикловОбмена.НеформализованныеДокументыНалогоплательщика);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика, Перечисления.ТипыЦикловОбмена.НеформализованныеДокументыНалогоплательщика);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика, Перечисления.ТипыЦикловОбмена.НеформализованныеДокументыНалогоплательщика);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДоставкиНеформализованногоДокументаНалогоплательщика, Перечисления.ТипыЦикловОбмена.НеформализованныеДокументыНалогоплательщика);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.НеформализованныйДокументНалогоплательщика, 1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика, 2);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика, 3);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДоставкиНеформализованногоДокументаНалогоплательщика, 4);
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.ЗапросыНаИнформационноеОбслуживание Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗапросИОН, ЭлементыФормы.КартинкаЗапросНаИнформационноеОбслуживание);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиЗапросаИОН, ЭлементыФормы.КартинкаПодтверждениеОтправкиЗапроса);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляЗапросаИОН, ЭлементыФормы.КартинкаПротоколПроверкиЗапроса);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.КвитанцияОПриемеЗапросаИОН, ЭлементыФормы.КартинкаПодтверждениеДоставкиЗапроса);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросИОН, ЭлементыФормы.КартинкаОтветНаЗапрос);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиЗапросаИОН, ЭлементыФормы.КартинкаОтветНаПодтверждениеОтправкиЗапроса);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляЗапросаИОН, ЭлементыФормы.КартинкаПодтверждениеНаПротоколПроверкиЗапроса);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанныйОтветНаЗапросИОН, ЭлементыФормы.КартинкаПодтверждениеНаОтветНаЗапрос);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗапросИОН, ЭлементыФормы.НадписьЗапросНаИнформационноеОбслуживание);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиЗапросаИОН, ЭлементыФормы.НадписьПодтверждениеОтправкиЗапроса);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляЗапросаИОН, ЭлементыФормы.НадписьПротоколПроверкиЗапроса);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.КвитанцияОПриемеЗапросаИОН, ЭлементыФормы.НадписьПодтверждениеДоставкиЗапроса);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросИОН, ЭлементыФормы.НадписьОтветНаЗапрос);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиЗапросаИОН, ЭлементыФормы.НадписьПодтверждениеНаПодтверждениеОтправкиЗапроса);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляЗапросаИОН, ЭлементыФормы.НадписьПодтверждениеНаПротоколПроверкиЗапроса);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанныйОтветНаЗапросИОН, ЭлементыФормы.НадписьПодтверждениеНаОтветНаЗапрос);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗапросИОН,																			"Первичное сообщение, содержащее запрос на информационное обслуживание, отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиЗапросаИОН,													"Подтверждение отправки запроса на информационное обслуживание отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиЗапросаИОН,										"Переподписанное налогоплательщиком подтверждение отправки запроса на информационное обслуживание отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.КвитанцияОПриемеЗапросаИОН,															"Квитанция о доставке запроса на информационное обслуживание в налоговый орган отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляЗапросаИОН,													"Протокол входного контроля запроса на информационное обслуживание отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляЗапросаИОН,									"Переподписанный налогоплательщиком протокол входного контроля запроса на информационное обслуживание отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросИОН,								 									"Ответ налогового органа на запрос на информационное обслуживание отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанныйОтветНаЗапросИОН,													"Переподписанный налогоплательщиком ответ налогового органа на запрос на информационное обслуживание отсутствует");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьЗапросНаИнформационноеОбслуживание, Перечисления.ТипыТранспортныхСообщений.ЗапросИОН);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаЗапросНаИнформационноеОбслуживание, Перечисления.ТипыТранспортныхСообщений.ЗапросИОН);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаЗапросНаИнформационноеОбслуживаниеЭмблема, Перечисления.ТипыТранспортныхСообщений.ЗапросИОН);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПодтверждениеОтправкиЗапроса, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиЗапросаИОН);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеОтправкиЗапроса, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиЗапросаИОН);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеОтправкиЗапросаЭмблема, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиЗапросаИОН);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПодтверждениеНаПодтверждениеОтправкиЗапроса, Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиЗапросаИОН);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаОтветНаПодтверждениеОтправкиЗапроса, Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиЗапросаИОН);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаОтветНаПодтверждениеОтправкиЗапросаЭмблема, Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиЗапросаИОН);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПодтверждениеДоставкиЗапроса, Перечисления.ТипыТранспортныхСообщений.КвитанцияОПриемеЗапросаИОН);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеДоставкиЗапроса, Перечисления.ТипыТранспортныхСообщений.КвитанцияОПриемеЗапросаИОН);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеДоставкиЗапросаЭмблема, Перечисления.ТипыТранспортныхСообщений.КвитанцияОПриемеЗапросаИОН);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПротоколПроверкиЗапроса, Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляЗапросаИОН);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПротоколПроверкиЗапроса, Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляЗапросаИОН);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПротоколПроверкиЗапросаЭмблема, Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляЗапросаИОН);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПодтверждениеНаПротоколПроверкиЗапроса, Перечисления.ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляЗапросаИОН);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеНаПротоколПроверкиЗапроса, Перечисления.ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляЗапросаИОН);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеНаПротоколПроверкиЗапросаЭмблема, Перечисления.ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляЗапросаИОН);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьОтветНаЗапрос, Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросИОН);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаОтветНаЗапрос, Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросИОН);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаОтветНаЗапросЭмблема, Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросИОН);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПодтверждениеНаОтветНаЗапрос, Перечисления.ТипыТранспортныхСообщений.ПереподписанныйОтветНаЗапросИОН);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеНаОтветНаЗапрос, Перечисления.ТипыТранспортныхСообщений.ПереподписанныйОтветНаЗапросИОН);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеНаОтветНаЗапросЭмблема, Перечисления.ТипыТранспортныхСообщений.ПереподписанныйОтветНаЗапросИОН);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗапросИОН, Перечисления.ТипыЦикловОбмена.ЗапросыНаИнформационноеОбслуживание);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиЗапросаИОН, Перечисления.ТипыЦикловОбмена.ЗапросыНаИнформационноеОбслуживание);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиЗапросаИОН, Перечисления.ТипыЦикловОбмена.ЗапросыНаИнформационноеОбслуживание);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.КвитанцияОПриемеЗапросаИОН, Перечисления.ТипыЦикловОбмена.ЗапросыНаИнформационноеОбслуживание);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляЗапросаИОН, Перечисления.ТипыЦикловОбмена.ЗапросыНаИнформационноеОбслуживание);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляЗапросаИОН, Перечисления.ТипыЦикловОбмена.ЗапросыНаИнформационноеОбслуживание);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросИОН, Перечисления.ТипыЦикловОбмена.ЗапросыНаИнформационноеОбслуживание);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанныйОтветНаЗапросИОН, Перечисления.ТипыЦикловОбмена.ЗапросыНаИнформационноеОбслуживание);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗапросИОН, 1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиЗапросаИОН, 2);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиЗапросаИОН, 3);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.КвитанцияОПриемеЗапросаИОН, 4);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляЗапросаИОН, 5);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляЗапросаИОН, 6);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросИОН, 7);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанныйОтветНаЗапросИОН, 8);
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.ОтчетностьПФР Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьПФР, ЭлементыФормы.КартинкаПервичноеСообщениеПФР);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР, ЭлементыФормы.КартинкаПодтверждениеПолученияПФР);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколПФР, ЭлементыФормы.КартинкаПротоколПФР);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколКвитанцияПФР, ЭлементыФормы.КартинкаПротоколКвитанцияПФР);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьПФР, ЭлементыФормы.НадписьПервичноеСообщениеПФР);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР, ЭлементыФормы.НадписьПодтверждениеПолученияПФР);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколПФР, ЭлементыФормы.НадписьПротоколПФР);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколКвитанцияПФР, ЭлементыФормы.НадписьПротоколКвитанцияПФР);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьПФР,											"Первичное сообщение, содержащее отчетность, отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР,												"Квитанция о доставке отчетности отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколПФР,																		"Протокол контроля отчетности отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколКвитанцияПФР,																"Квитанция о доставке протокола контроля отсутствует");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПервичноеСообщениеПФР, Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПервичноеСообщениеПФР, Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПервичноеСообщениеПФРЭмблема, Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьПФР);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПодтверждениеПолученияПФР, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеПолученияПФР, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеПолученияПФРЭмблема, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПротоколПФР, Перечисления.ТипыТранспортныхСообщений.ПротоколПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПротоколПФР, Перечисления.ТипыТранспортныхСообщений.ПротоколПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПротоколПФРЭмблема, Перечисления.ТипыТранспортныхСообщений.ПротоколПФР);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПротоколКвитанцияПФР, Перечисления.ТипыТранспортныхСообщений.ПротоколКвитанцияПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПротоколКвитанцияПФР, Перечисления.ТипыТранспортныхСообщений.ПротоколКвитанцияПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПротоколКвитанцияПФРЭмблема, Перечисления.ТипыТранспортныхСообщений.ПротоколКвитанцияПФР);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьПФР, Перечисления.ТипыЦикловОбмена.ОтчетностьПФР);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР, Перечисления.ТипыЦикловОбмена.ОтчетностьПФР);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколПФР, Перечисления.ТипыЦикловОбмена.ОтчетностьПФР);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколКвитанцияПФР, Перечисления.ТипыЦикловОбмена.ОтчетностьПФР);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьПФР, 1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР, 2);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколПФР, 3);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколКвитанцияПФР, 4);
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.НеформализованнаяПерепискаПФРВходящие Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееПФР, ЭлементыФормы.КартинкаНеформализованноеСообщениеПФР);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР, ЭлементыФормы.КартинкаПодтверждениеПолученияНеформализованногоСообщенияПФР);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееПФР, ЭлементыФормы.НадписьНеформализованноеСообщениеПФР);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР, ЭлементыФормы.НадписьПодтверждениеПолученияНеформализованногоСообщенияПФР);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееПФР,																	"Первичное сообщение, содержащее письмо от ПФР, отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР,															"Квитанция о получении отсутствует");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьНеформализованноеСообщениеПФР, Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаНеформализованноеСообщениеПФР, Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаНеформализованноеСообщениеПФРЭмблема, Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееПФР);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПодтверждениеПолученияНеформализованногоСообщенияПФР, Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеПолученияНеформализованногоСообщенияПФР, Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеПолученияНеформализованногоСообщенияПФРЭмблема, Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееПФР, Перечисления.ТипыЦикловОбмена.НеформализованнаяПерепискаПФРВходящие);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР, Перечисления.ТипыЦикловОбмена.НеформализованнаяПерепискаПФРВходящие);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееПФР, 1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР, 2);
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.НеформализованнаяПерепискаПФРИсходящие Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееПФР, ЭлементыФормы.КартинкаНеформализованноеСообщениеПФРИсходящее);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееКвитанцияПФР, ЭлементыФормы.КартинкаПодтверждениеПолученияНеформализованногоСообщенияПФРИсходящее);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееПФР, ЭлементыФормы.НадписьНеформализованноеСообщениеПФРИсходящее);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееКвитанцияПФР, ЭлементыФормы.НадписьПодтверждениеПолученияНеформализованногоСообщенияПФРИсходящее);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееПФР,																	"Первичное сообщение, содержащее письмо в ПФР, отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееКвитанцияПФР,														"Квитанция о получении отсутствует");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьНеформализованноеСообщениеПФРИсходящее, Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаНеформализованноеСообщениеПФРИсходящее, Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаНеформализованноеСообщениеПФРИсходящееЭмблема, Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееПФР);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПодтверждениеПолученияНеформализованногоСообщенияПФРИсходящее, Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееКвитанцияПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеПолученияНеформализованногоСообщенияПФРИсходящее, Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееКвитанцияПФР);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеПолученияНеформализованногоСообщенияПФРИсходящееЭмблема, Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееКвитанцияПФР);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееПФР, Перечисления.ТипыЦикловОбмена.НеформализованнаяПерепискаПФРИсходящие);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееКвитанцияПФР, Перечисления.ТипыЦикловОбмена.НеформализованнаяПерепискаПФРИсходящие);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееПФР, 1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееКвитанцияПФР, 2);
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.ОбращениеНП Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ОбращениеНП, ЭлементыФормы.КартинкаОбращениеНП);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОбращениеНО, ЭлементыФормы.КартинкаПодтверждениеОбращениеНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, ЭлементыФормы.КартинкаИзвещениеПодтверждениеНПОбращение);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбращениеНО, ЭлементыФормы.КартинкаИзвещениеОбращениеНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО, ЭлементыФормы.КартинкаРезультатПриемаОбращениеНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, ЭлементыФормы.КартинкаИзвещениеРезультатПриемаНПОбращение);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ОбращениеНП, ЭлементыФормы.НадписьОбращениеНП);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОбращениеНО, ЭлементыФормы.НадписьПодтверждениеОбращениеНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, ЭлементыФормы.НадписьИзвещениеПодтверждениеНПОбращение);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбращениеНО, ЭлементыФормы.НадписьИзвещениеОбращениеНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО, ЭлементыФормы.НадписьРезультатПриемаОбращениеНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, ЭлементыФормы.НадписьИзвещениеРезультатПриемаНПОбращение);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ОбращениеНП,					"Обращение налогоплательщика отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОбращениеНО,		"Подтверждение даты отправки отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП,		"Извещение о получении подтверждения даты отправки отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбращениеНО,			"Извещение о получении обращения отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО,		"Результат приема обращения отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП,		"Извещение о получении результата приема отсутствует");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьОбращениеНП, Перечисления.ТипыТранспортныхСообщений.ОбращениеНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаОбращениеНП, Перечисления.ТипыТранспортныхСообщений.ОбращениеНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаОбращениеНПЭмблема, Перечисления.ТипыТранспортныхСообщений.ОбращениеНП);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПодтверждениеОбращениеНО, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОбращениеНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеОбращениеНО, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОбращениеНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеОбращениеНОЭмблема, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОбращениеНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеПодтверждениеНПОбращение, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеПодтверждениеНПОбращение, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеПодтверждениеНПОбращениеЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеОбращениеНО, Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбращениеНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеОбращениеНО, Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбращениеНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеОбращениеНОЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбращениеНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьРезультатПриемаОбращениеНО, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаРезультатПриемаОбращениеНО, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаРезультатПриемаОбращениеНОЭмблема, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеРезультатПриемаНПОбращение, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеРезультатПриемаНПОбращение, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеРезультатПриемаНПОбращениеЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ОбращениеНП, Перечисления.ТипыЦикловОбмена.ОбращениеНП);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОбращениеНО, Перечисления.ТипыЦикловОбмена.ОбращениеНП);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, Перечисления.ТипыЦикловОбмена.ОбращениеНП);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбращениеНО, Перечисления.ТипыЦикловОбмена.ОбращениеНП);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО, Перечисления.ТипыЦикловОбмена.ОбращениеНП);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, Перечисления.ТипыЦикловОбмена.ОбращениеНП);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ОбращениеНП, 1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОбращениеНО, 2);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, 3);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбращениеНО, 4);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО, 5);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, 6);
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.ПисьмоНО Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоНО, ЭлементыФормы.КартинкаПисьмоНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоНП, ЭлементыФормы.КартинкаИзвещениеПисьмоНП);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоНО, ЭлементыФормы.НадписьПисьмоНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоНП, ЭлементыФормы.НадписьИзвещениеПисьмоНП);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоНО,			"Первичное сообщение, содержащее письмо налогового органа, отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоНП,	"Подтверждение о приеме письма налогового органа отсутствует");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПисьмоНО, Перечисления.ТипыТранспортныхСообщений.ПисьмоНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПисьмоНО, Перечисления.ТипыТранспортныхСообщений.ПисьмоНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПисьмоНОЭмблема, Перечисления.ТипыТранспортныхСообщений.ПисьмоНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеПисьмоНП, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеПисьмоНП, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеПисьмоНПЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоНП);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоНО, Перечисления.ТипыЦикловОбмена.ПисьмоНО);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоНП, Перечисления.ТипыЦикловОбмена.ПисьмоНО);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоНО, 1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоНП, 2);
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.Документ Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ДокументНО, ЭлементыФормы.КартинкаДокументНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеДокументНП, ЭлементыФормы.КартинкаИзвещениеДокументНП);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДокументНП, ЭлементыФормы.КартинкаРезультатПриемаДокументНП);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНО, ЭлементыФормы.КартинкаИзвещениеРезультатПриемаНО);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ДокументНО, ЭлементыФормы.НадписьДокументНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеДокументНП, ЭлементыФормы.НадписьИзвещениеДокументНП);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДокументНП, ЭлементыФормы.НадписьРезультатПриемаДокументНП);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНО, ЭлементыФормы.НадписьИзвещениеРезультатПриемаНО);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ДокументНО,					"Первичное сообщение, содержащее документ налогового органа, отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеДокументНП,		"Подтверждение о приеме документа налогового органа отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДокументНП,	"Результат приема документа отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНО,	"Извещение о получении результата приема отсутствует");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьДокументНО, 						Перечисления.ТипыТранспортныхСообщений.ДокументНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаДокументНО, 						Перечисления.ТипыТранспортныхСообщений.ДокументНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаДокументНОЭмблема, 				Перечисления.ТипыТранспортныхСообщений.ДокументНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеДокументНП, 				Перечисления.ТипыТранспортныхСообщений.ИзвещениеДокументНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеДокументНП, 				Перечисления.ТипыТранспортныхСообщений.ИзвещениеДокументНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеДокументНПЭмблема, 		Перечисления.ТипыТранспортныхСообщений.ИзвещениеДокументНП);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьРезультатПриемаДокументНП, 			Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДокументНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаРезультатПриемаДокументНП, 		Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДокументНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаРезультатПриемаДокументНПЭмблема, 	Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДокументНП);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеРезультатПриемаНО, 		Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеРезультатПриемаНО, 		Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеРезультатПриемаНОЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНО);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ДокументНО, 					Перечисления.ТипыЦикловОбмена.Документ);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеДокументНП, 			Перечисления.ТипыЦикловОбмена.Документ);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДокументНП, 	Перечисления.ТипыЦикловОбмена.Документ);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНО, 	Перечисления.ТипыЦикловОбмена.Документ);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ДокументНО, 					1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеДокументНП, 			2);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДокументНП, 	3);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНО, 	4);
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.Рассылка Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РассылкаНО, ЭлементыФормы.КартинкаРассылка);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РассылкаНО, ЭлементыФормы.НадписьРассылка);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РассылкаНО,	"Первичное сообщение, содержащее рассылку от налогового органа, отсутствует");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьРассылка, Перечисления.ТипыТранспортныхСообщений.РассылкаНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаРассылка, Перечисления.ТипыТранспортныхСообщений.РассылкаНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаРассылкаЭмблема, Перечисления.ТипыТранспортныхСообщений.РассылкаНО);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.РассылкаНО, Перечисления.ТипыЦикловОбмена.Рассылка);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.РассылкаНО, 1);
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.РассылкаГрупповая Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РассылкаНО, ЭлементыФормы.КартинкаРассылкаГрупповая);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРассылкаНП, ЭлементыФормы.КартинкаИзвещениеРассылкаНП);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РассылкаНО, ЭлементыФормы.НадписьРассылкаГрупповая);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРассылкаНП, ЭлементыФормы.НадписьИзвещениеРассылкаНП);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РассылкаНО,				"Первичное сообщение, содержащее групповую рассылку от налогового органа, отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРассылкаНП,	"Подтверждение о приеме групповой рассылки от налогового органа отсутствует");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьРассылкаГрупповая, Перечисления.ТипыТранспортныхСообщений.РассылкаНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаРассылкаГрупповая, Перечисления.ТипыТранспортныхСообщений.РассылкаНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаРассылкаГрупповаяЭмблема, Перечисления.ТипыТранспортныхСообщений.РассылкаНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеРассылкаНП, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРассылкаНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеРассылкаНП, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРассылкаНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеРассылкаНПЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРассылкаНП);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.РассылкаНО, Перечисления.ТипыЦикловОбмена.РассылкаГрупповая);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРассылкаНП, Перечисления.ТипыЦикловОбмена.РассылкаГрупповая);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.РассылкаНО, 1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРассылкаНП, 2);
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.ИОН Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗапросНП, ЭлементыФормы.КартинкаЗапросНП);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗапросНО, ЭлементыФормы.КартинкаПодтверждениеЗапросНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, ЭлементыФормы.КартинкаИзвещениеПодтверждениеНПЗапрос);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗапросНО, ЭлементыФормы.КартинкаИзвещениеЗапросНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО, ЭлементыФормы.КартинкаРезультатПриемаЗапросНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, ЭлементыФормы.КартинкаИзвещениеРезультатПриемаНПЗапрос);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО, ЭлементыФормы.КартинкаРезультатОбработкиЗапросНО);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП, ЭлементыФормы.КартинкаИзвещениеРезультатОбработкиНПЗапрос);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗапросНП, ЭлементыФормы.НадписьЗапросНП);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗапросНО, ЭлементыФормы.НадписьПодтверждениеЗапросНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, ЭлементыФормы.НадписьИзвещениеПодтверждениеНПЗапрос);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗапросНО, ЭлементыФормы.НадписьИзвещениеЗапросНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО, ЭлементыФормы.НадписьРезультатПриемаЗапросНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, ЭлементыФормы.НадписьИзвещениеРезультатПриемаНПЗапрос);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО, ЭлементыФормы.НадписьРезультатОбработкиЗапросНО);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП, ЭлементыФормы.НадписьИзвещениеРезультатОбработкиНПЗапрос);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗапросНП,						"Первичное сообщение, содержащее запрос, отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗапросНО,			"Подтверждение даты отправки отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП,		"Извещение о получении подтверждения даты отправки отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗапросНО,				"Извещение о получении запроса отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО,		"Результат приема запроса отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП,		"Извещение о получении результата приема отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО,		"Результат обработки запроса отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП,	"Извещение о получении результата обработки запроса отсутствует");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьЗапросНП, Перечисления.ТипыТранспортныхСообщений.ЗапросНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаЗапросНП, Перечисления.ТипыТранспортныхСообщений.ЗапросНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаЗапросНПЭмблема, Перечисления.ТипыТранспортныхСообщений.ЗапросНП);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПодтверждениеЗапросНО, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗапросНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеЗапросНО, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗапросНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеЗапросНОЭмблема, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗапросНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеПодтверждениеНПЗапрос, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеПодтверждениеНПЗапрос, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеПодтверждениеНПЗапросЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеЗапросНО, Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗапросНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеЗапросНО, Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗапросНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеЗапросНОЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗапросНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьРезультатПриемаЗапросНО, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаРезультатПриемаЗапросНО, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаРезультатПриемаЗапросНОЭмблема, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеРезультатПриемаНПЗапрос, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеРезультатПриемаНПЗапрос, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеРезультатПриемаНПЗапросЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьРезультатОбработкиЗапросНО, Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаРезультатОбработкиЗапросНО, Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаРезультатОбработкиЗапросНОЭмблема, Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеРезультатОбработкиНПЗапрос, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеРезультатОбработкиНПЗапрос, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеРезультатОбработкиНПЗапросЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗапросНП, Перечисления.ТипыЦикловОбмена.ИОН);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗапросНО, Перечисления.ТипыЦикловОбмена.ИОН);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, Перечисления.ТипыЦикловОбмена.ИОН);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗапросНО, Перечисления.ТипыЦикловОбмена.ИОН);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО, Перечисления.ТипыЦикловОбмена.ИОН);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, Перечисления.ТипыЦикловОбмена.ИОН);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО, Перечисления.ТипыЦикловОбмена.ИОН);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП, Перечисления.ТипыЦикловОбмена.ИОН);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗапросНП, 1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗапросНО, 2);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, 3);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗапросНО, 4);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО, 5);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, 6);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО, 7);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП, 8);
	
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.ОтчетностьФСГС Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьФСГС, ЭлементыФормы.КартинкаПервичноеСообщениеФСГС);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС, ЭлементыФормы.КартинкаПодтверждениеДатыОтправкиФСГС);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС, ЭлементыФормы.КартинкаИзвещениеПодтверждениеДатыОтправкиФСГС);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОПолученииОтчетностиФСГС, ЭлементыФормы.КартинкаИзвещениеОтчетностьФСГС);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетностиФСГС, ЭлементыФормы.КартинкаПротоколФСГС);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС, ЭлементыФормы.КартинкаИзвещениеПротоколФСГС);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьФСГС, ЭлементыФормы.НадписьПервичноеСообщениеФСГС);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС, ЭлементыФормы.НадписьПодтверждениеДатыОтправкиФСГС);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС, ЭлементыФормы.НадписьИзвещениеПодтверждениеДатыОтправкиФСГС);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОПолученииОтчетностиФСГС, ЭлементыФормы.НадписьИзвещениеОтчетностьФСГС);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетностиФСГС, ЭлементыФормы.НадписьПротоколФСГС);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС, ЭлементыФормы.НадписьИзвещениеПротоколФСГС);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьФСГС,											"Первичное сообщение, содержащее отчетность, отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС,														"Подтверждение даты отправки отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС,												"Извещение о получении подтверждения даты отправки отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОПолученииОтчетностиФСГС,													"Извещение о получении отчетности отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетностиФСГС,												"Протокол входного контроля отчетности отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС,									"Извещение о получении протокола входного контроля отсутствует");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПервичноеСообщениеФСГС, Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПервичноеСообщениеФСГС, Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПервичноеСообщениеФСГСЭмблема, Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьФСГС);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПодтверждениеДатыОтправкиФСГС, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеДатыОтправкиФСГС, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеДатыОтправкиФСГСЭмблема, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеПодтверждениеДатыОтправкиФСГС, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеПодтверждениеДатыОтправкиФСГС, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеПодтверждениеДатыОтправкиФСГСЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеОтчетностьФСГС, Перечисления.ТипыТранспортныхСообщений.ИзвещениеОПолученииОтчетностиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеОтчетностьФСГС, Перечисления.ТипыТранспортныхСообщений.ИзвещениеОПолученииОтчетностиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеОтчетностьФСГСЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеОПолученииОтчетностиФСГС);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПротоколФСГС, Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетностиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПротоколФСГС, Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетностиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПротоколФСГСЭмблема, Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетностиФСГС);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеПротоколФСГС, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеПротоколФСГС, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеПротоколФСГСЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьФСГС, Перечисления.ТипыЦикловОбмена.ОтчетностьФСГС);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС, Перечисления.ТипыЦикловОбмена.ОтчетностьФСГС);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС, Перечисления.ТипыЦикловОбмена.ОтчетностьФСГС);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОПолученииОтчетностиФСГС, Перечисления.ТипыЦикловОбмена.ОтчетностьФСГС);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетностиФСГС, Перечисления.ТипыЦикловОбмена.ОтчетностьФСГС);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС, Перечисления.ТипыЦикловОбмена.ОтчетностьФСГС);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьФСГС, 1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС, 2);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС, 3);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОПолученииОтчетностиФСГС, 4);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетностиФСГС, 5);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС, 6);
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.ПисьменноеОбращениеВФСГС Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееФСГС, ЭлементыФормы.КартинкаПисьмоИсходящееФСГС);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС, ЭлементыФормы.КартинкаПодтверждениеДатыОтправкиПисьмаФСГС);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС, ЭлементыФормы.КартинкаИзвещениеПодтверждениеДатыОтправкиПисьмаФСГС);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоИсходящееФСГС, ЭлементыФормы.КартинкаИзвещениеПисьмоИсходящееФСГС);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееФСГС, ЭлементыФормы.НадписьПисьмоИсходящееФСГС);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС, ЭлементыФормы.НадписьПодтверждениеДатыОтправкиПисьмаФСГС);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС, ЭлементыФормы.НадписьИзвещениеПодтверждениеДатыОтправкиПисьмаФСГС);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоИсходящееФСГС, ЭлементыФормы.НадписьИзвещениеПисьмоИсходящееФСГС);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееФСГС,											"Первичное сообщение, содержащее письменное обращение респондента, отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС,									"Подтверждение даты отправки отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС,							"Извещение о получении подтверждения даты отправки отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоИсходящееФСГС,									"Извещение о получении письма его получателем отсутствует");
		
		// 
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПисьмоИсходящееФСГС, Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПисьмоИсходящееФСГС, Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПисьмоИсходящееФСГСЭмблема, Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееФСГС);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПодтверждениеДатыОтправкиПисьмаФСГС, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеДатыОтправкиПисьмаФСГС, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПодтверждениеДатыОтправкиПисьмаФСГСЭмблема, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеПодтверждениеДатыОтправкиПисьмаФСГС, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеПодтверждениеДатыОтправкиПисьмаФСГС, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеПодтверждениеДатыОтправкиПисьмаФСГСЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеПисьмоИсходящееФСГС, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоИсходящееФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеПисьмоИсходящееФСГС, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоИсходящееФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеПисьмоИсходящееФСГСЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоИсходящееФСГС);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееФСГС, Перечисления.ТипыЦикловОбмена.ПисьменноеОбращениеВФСГС);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС, Перечисления.ТипыЦикловОбмена.ПисьменноеОбращениеВФСГС);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС, Перечисления.ТипыЦикловОбмена.ПисьменноеОбращениеВФСГС);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоИсходящееФСГС, Перечисления.ТипыЦикловОбмена.ПисьменноеОбращениеВФСГС);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееФСГС, 1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС, 2);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС, 3);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоИсходящееФСГС, 4);
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.ИндивидуальноеИнформированиеФСГС Тогда
		
		//
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееФСГС, ЭлементыФормы.КартинкаПисьмоВходящееФСГС);
		СоответствиеТипаТранспортногоСообщенияКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоВходящееФСГС, ЭлементыФормы.КартинкаИзвещениеПисьмоВходящееФСГС);
		
		//
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееФСГС, ЭлементыФормы.НадписьПисьмоВходящееФСГС);
		СоответствиеТипаТранспортногоСообщенияНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоВходящееФСГС, ЭлементыФормы.НадписьИзвещениеПисьмоВходящееФСГС);
		
		//
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееФСГС,								"Первичное сообщение, содержащее письмо из Росстата, отсутствует");
		СоответствиеТипаТранспортногоСообщенияТекстуНадписи.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоВходящееФСГС,					"Извещение о получении письма его получателем");
		
		//
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьПисьмоВходящееФСГС, Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПисьмоВходящееФСГС, Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаПисьмоВходящееФСГСЭмблема, Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееФСГС);
		
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.НадписьИзвещениеПисьмоВходящееФСГС, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоВходящееФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеПисьмоВходящееФСГС, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоВходящееФСГС);
		СоответствиеЭлементовУправленияТипуТранспортногоСообщения.Вставить(ЭлементыФормы.КартинкаИзвещениеПисьмоВходящееФСГСЭмблема, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоВходящееФСГС);
		
		//
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееФСГС, Перечисления.ТипыЦикловОбмена.ИндивидуальноеИнформированиеФСГС);
		СоответствиеТипаСообщенийТипамЦиклаОбмена.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоВходящееФСГС, Перечисления.ТипыЦикловОбмена.ИндивидуальноеИнформированиеФСГС);
		
		//
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееФСГС, 1);
		СоответствиеТипаСообщенияПорядку.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоВходящееФСГС, 2);
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтсортироватьТаблицуСообщенийПопорядкуТипов(ТаблицаСообщений)
	
	ТаблицаСообщений.Колонки.Добавить("ПорядокТипа");
	Для Каждого Стр Из ТаблицаСообщений Цикл
		ПорядокТипа = СоответствиеТипаСообщенияПорядку[Стр.Тип];
		Стр.ПорядокТипа = ?(ЗначениеЗаполнено(ПорядокТипа), ПорядокТипа, 0);
	КонецЦикла;
	ТаблицаСообщений.Сортировать("ПорядокТипа, Дата");
	ТаблицаСообщений.Колонки.Удалить("ПорядокТипа");
	
КонецПроцедуры

Процедура ЗаполнитьДанными()
	
	ТекДата = ТекущаяДата();
	
	ЭлементыФормы.НадписьПомеченНаУдаление.Видимость = ПометкаУдаления;
	ЭлементыФормы.НадписьОткрытьЦиклОбмена.Видимость = (ДатаЗакрытия <> КонтекстЭДО.ПолучитьПустуюДатуЗавершенияЦиклаОбмена());
	
	// прорисовываем идентификатор
	Если ЗначениеЗаполнено(Идентификатор) Тогда
		ЭлементыФормы.Идентификатор.Значение = Идентификатор;
		ЭлементыФормы.Идентификатор.ЦветТекста = Новый Цвет;
	Иначе
		ЭлементыФормы.Идентификатор.Значение = "<отсутствует>";
		ЭлементыФормы.Идентификатор.ЦветТекста = Новый Цвет(128, 128, 128);
	КонецЕсли;
	
	// прорисовываем ЭУ второго субъекта переписки
	Если Вид = Перечисления.ВидыЦикловОбмена.ЦиклОбменаСПФР Тогда
		ЭлементыФормы.ПанельВторойСубъектПереписки.ТекущаяСтраница = ЭлементыФормы.ПанельВторойСубъектПереписки.Страницы.ОрганПФР;
	ИначеЕсли Вид = Перечисления.ВидыЦикловОбмена.ЦиклОбменаСФСГС Тогда
		ЭлементыФормы.ПанельВторойСубъектПереписки.ТекущаяСтраница = ЭлементыФормы.ПанельВторойСубъектПереписки.Страницы.ОрганФСГС;
	Иначе
		ЭлементыФормы.ПанельВторойСубъектПереписки.ТекущаяСтраница = ЭлементыФормы.ПанельВторойСубъектПереписки.Страницы.НалоговыйОрган;
	КонецЕсли;
	
	// прорисовываем секцию "Предмет"
	Если Тип = Перечисления.ТипыЦикловОбмена.Документ И ЗначениеЗаполнено(Предмет) Тогда
		
		ЭлементыФормы.Предмет.Заголовок = ПредставлениеПредмета(ПолучитьПредметыДокумента());
		ЭлементыФормы.ПанельДополнительныйПредмет.Свертка = РежимСверткиЭлементаУправления.Верх;
		
	Иначе
		
		Если ЗначениеЗаполнено(Предмет) Тогда
			ЭлементыФормы.Предмет.Заголовок = ПредставлениеПредмета(Предмет);
		ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.НеформализованныеДокументыНалоговогоОргана
		ИЛИ Тип = Перечисления.ТипыЦикловОбмена.ПисьмоНО
		ИЛИ Тип = Перечисления.ТипыЦикловОбмена.Документ
		ИЛИ Тип = Перечисления.ТипыЦикловОбмена.Рассылка
		ИЛИ Тип = Перечисления.ТипыЦикловОбмена.РассылкаГрупповая
		ИЛИ Тип = Перечисления.ТипыЦикловОбмена.НеформализованнаяПерепискаПФРВходящие Тогда
			ЭлементыФормы.Предмет.Заголовок = "<Предмет будет создан в момент расшифровки первичного сообщения, содержащего документ налогового органа>";
		ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.ИндивидуальноеИнформированиеФСГС Тогда
			ЭлементыФормы.Предмет.Заголовок = "<Предмет будет создан в момент расшифровки первичного сообщения, содержащего документ из Росстата>";
		Иначе
			ЭлементыФормы.Предмет.Заголовок = "<Отсутствует>";
		КонецЕсли;
		
		// прорисовываем панель ДополнительныйПредмет
		Если ДополнительныеПредметы.Количество() = 0 Тогда
			ЭлементыФормы.ПанельДополнительныйПредмет.Свертка = РежимСверткиЭлементаУправления.Верх;
		Иначе
			ЭлементыФормы.ПанельДополнительныйПредмет.Свертка = РежимСверткиЭлементаУправления.Нет;
			ЭлементыФормы.ДополнительныйПредмет.Заголовок = ПредставлениеПредмета(ДополнительныеПредметы[0].Предмет);
		КонецЕсли;
		
	КонецЕсли;
	
	// активизируем соответствующую страницу панели сообщений
	Если Тип = Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность
	И ФорматДокументооборота = Перечисления.ФорматыДокументооборотаСФНС.Приказ534 Тогда
		ЭлементыФормы.ПанельСообщения.ТекущаяСтраница = ЭлементыФормы.ПанельСообщения.Страницы.СтраницаОтчетностьФНС534;
	Иначе
		ЭлементыФормы.ПанельСообщения.ТекущаяСтраница = СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений[Тип];
	КонецЕсли;
	
	Для Каждого Стр Из СоответствиеТипаТранспортногоСообщенияТекстуНадписи Цикл
		Если СоответствиеТипаСообщенийТипамЦиклаОбмена[Стр.Ключ] = Тип Тогда
			СоответствиеТипаТранспортногоСообщенияНадписи[Стр.Ключ].Заголовок = Стр.Значение;
		КонецЕсли;
	КонецЦикла;
	
	// "сбрасываем" ЭУ по всем сообщениям
	Для Каждого КартинкаСтатуса Из СоответствиеТипаТранспортногоСообщенияКартинке Цикл
		//Если СоответствиеТипаСообщенийТипамЦиклаОбмена[КартинкаСтатуса.Ключ] = Тип Тогда
			КартинкаСтатуса.Значение.Картинка = СерыйШар;
			Надпись = СоответствиеТипаТранспортногоСообщенияНадписи[КартинкаСтатуса.Ключ];
			Надпись.ЦветТекста = СоответствиеКартинкиЦветуНадписи[СерыйШар];
			Надпись.Шрифт = Новый Шрифт;
		//КонецЕсли;
	КонецЦикла;
	
	// прорисовывавем секцию "Активность"
	ТекстДатаЗакрытия = ?(ДатаЗакрытия = КонтекстЭДО.ПолучитьПустуюДатуЗавершенияЦиклаОбмена(), "<не завершен>", ДатаЗакрытия);
	ЭлементыФормы.ДатаПоследнегоСообщения.Заголовок = ?(ДатаПоследнегоСообщения = ОбщегоНазначения.ПустоеЗначениеТипа(Тип("Дата")), "<не определено>", ДатаПоследнегоСообщения);
	
	ЭлементыФормы.НадписьВниманиеОшибки.Видимость = Ложь;
	
	// выбираем информацию по сообщениям цикла обмена
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	ТранспортныеСообщения.Тип КАК Тип,
	                      |	ТранспортныеСообщения.ДатаТранспорта,
	                      |	ТранспортныеСообщения.Статус КАК СтатусСообщения,
	                      |	ТранспортныеСообщения.ПометкаУдаления,
	                      |	ТранспортныеСообщения.ПротоколСОшибкой КАК ПротоколСОшибкой,
	                      |	ТранспортныеСообщения.Ссылка КАК Ссылка,
	                      |	НерасшифрованныеВложения.КоличествоСообщений КАК КоличествоНерасшифрованных,
	                      |	РасшифрованныеВложения.КоличествоСообщений КАК КоличествоРасшифрованных,
	                      |	ТранспортныеСообщения.Дата КАК Дата
	                      |ИЗ
	                      |	Документ.ТранспортноеСообщение КАК ТранспортныеСообщения
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |			ТранспортныеКонтейнеры.ТранспортноеСообщение КАК ТранспортноеСообщение,
	                      |			КОЛИЧЕСТВО(ИСТИНА) КАК КоличествоСообщений
	                      |		ИЗ
	                      |			РегистрСведений.ТранспортныеКонтейнеры КАК ТранспортныеКонтейнеры
	                      |		ГДЕ
	                      |			ТранспортныеКонтейнеры.ТранспортноеСообщение.ЦиклОбмена = &ЦиклОбмена
	                      |		
	                      |		СГРУППИРОВАТЬ ПО
	                      |			ТранспортныеКонтейнеры.ТранспортноеСообщение) КАК НерасшифрованныеВложения
	                      |		ПО ТранспортныеСообщения.Ссылка = НерасшифрованныеВложения.ТранспортноеСообщение
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |			СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение КАК ТранспортноеСообщение,
	                      |			КОЛИЧЕСТВО(ИСТИНА) КАК КоличествоСообщений
	                      |		ИЗ
	                      |			РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
	                      |		ГДЕ
	                      |			СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.ЦиклОбмена В(&ЦиклОбмена)
	                      |		
	                      |		СГРУППИРОВАТЬ ПО
	                      |			СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение) КАК РасшифрованныеВложения
	                      |		ПО ТранспортныеСообщения.Ссылка = РасшифрованныеВложения.ТранспортноеСообщение
	                      |ГДЕ
	                      |	ТранспортныеСообщения.ЦиклОбмена = &ЦиклОбмена
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ТранспортныеСообщения.ЦиклОбмена,
	                      |	Дата");
	Запрос.УстановитьПараметр("ЦиклОбмена", Ссылка);
	ТаблицаСообщений = Запрос.Выполнить().Выгрузить();
	ОтсортироватьТаблицуСообщенийПопорядкуТипов(ТаблицаСообщений);
	
	Если Тип = Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность Тогда
		
		Если ФорматДокументооборота = Перечисления.ФорматыДокументооборотаСФНС.Приказ534 Тогда
			
			// сбрасываем видимость гиперссылок для создания подтверждений
			ЭлементыФормы.НадписьСформироватьИзвещениеПодтверждениеНП.Видимость = Ложь;
			ЭлементыФормы.НадписьСформироватьИзвещениеРезультатПриемаНП.Видимость = Ложь;
			ЭлементыФормы.НадписьСформироватьИзвещениеРезультатОбработкиНП.Видимость = Ложь;
			
			// обход по сообщениям
			Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
				СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
				
				Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
				Если Картинка <> Неопределено Тогда
					
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
						
						// если сообщение отправлено или получено, то шарик - зеленый
						Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
							Картинка.Картинка = ЗеленыйШарНерасшифрованное;
						Иначе
							Картинка.Картинка = ЗеленыйШар;
						КонецЕсли;
						
						// цвет надписи сообщения устанавливаем соответствующим цвету шарика
						СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
						
					Иначе
						
						// если сообщение не отправлялось, то шарик желтый или [желтый с замочком]
						Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
						СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
						
					КонецЕсли;
					
					Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП Тогда
						ЭлементыФормы.НадписьСформироватьИзвещениеПодтверждениеНП.Видимость = Ложь;
					ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП Тогда
						ЭлементыФормы.НадписьСформироватьИзвещениеРезультатПриемаНП.Видимость = Ложь;
					ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП Тогда
						ЭлементыФормы.НадписьСформироватьИзвещениеРезультатОбработкиНП.Видимость = Ложь;
						
					//
					ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						ЭлементыФормы.НадписьСформироватьИзвещениеПодтверждениеНП.Видимость = Истина;
					ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						ЭлементыФормы.НадписьСформироватьИзвещениеРезультатПриемаНП.Видимость = Истина;
					ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						ЭлементыФормы.НадписьСформироватьИзвещениеРезультатОбработкиНП.Видимость = Истина;
					КонецЕсли;
					
				КонецЕсли;
				
				// прорисовываем надпись, соответствующую сообщению
				НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
				Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
					НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
					НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
				КонецЕсли;
				
				// прорисовываем ЭУ протокола входного контроля
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО Тогда
					Если СтрСообщение.ПротоколСОшибкой Тогда
						ЭлементыФормы.НадписьРезультатПриемаДекларацияНО.ЦветТекста = КрасныйЦвет;
						ЭлементыФормы.НадписьРезультатПриемаДекларацияНО.Картинка = БиблиотекаКартинок.КритическаяОшибка;
						ЭлементыФормы.ПанельРезультатОбработки.Видимость = Ложь;
					Иначе
						ЭлементыФормы.НадписьРезультатПриемаДекларацияНО.ЦветТекста = ЗеленыйЦвет;
						ЭлементыФормы.НадписьРезультатПриемаДекларацияНО.Картинка = Новый Картинка;
						ЭлементыФормы.ПанельРезультатОбработки.Видимость = Истина;
					КонецЕсли;
				КонецЕсли;
				
				// прорисовываем ЭУ результата обработки
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО Тогда
					ЭлементыФормы.ПанельРезультатОбработки.Видимость = Истина;
					Если СтрСообщение.ПротоколСОшибкой Тогда
						ЭлементыФормы.НадписьРезультатОбработкиДекларацияНО.ЦветТекста = КрасныйЦвет;
						ЭлементыФормы.НадписьРезультатОбработкиДекларацияНО.Картинка = БиблиотекаКартинок.КритическаяОшибка;
					Иначе
						ЭлементыФормы.НадписьРезультатОбработкиДекларацияНО.ЦветТекста = ЗеленыйЦвет;
						ЭлементыФормы.НадписьРезультатОбработкиДекларацияНО.Картинка = Новый Картинка;
					КонецЕсли;
				КонецЕсли;
				
				// регулируем видимость гиперссылки перехода к списку критичных ошибок
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка
				ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС Тогда
					ЭлементыФормы.НадписьВниманиеОшибки.Видимость = Истина;
				КонецЕсли;
				
			КонецЦикла;
			
		// ФНС 141
		Иначе
			
			// сбрасвываем видимость гиперссылок для создания подтверждений
			ЭлементыФормы.НадписьСформироватьПодтверждениеНаПодтверждениеОтправки.Видимость = Ложь;
			ЭлементыФормы.НадписьСформироватьПодтверждениеНаПротоколПроверки.Видимость = Ложь;
			
			// обход по сообщениям
			Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
				СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
				
				Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
				Если Картинка <> Неопределено Тогда
					
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
						Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
							Картинка.Картинка = ЗеленыйШарНерасшифрованное;
						Иначе
							Картинка.Картинка = ЗеленыйШар;
						КонецЕсли;
						СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
					Иначе
						Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
						СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
					КонецЕсли;
					
					Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиОтчетности Тогда
						ЭлементыФормы.НадписьСформироватьПодтверждениеНаПодтверждениеОтправки.Видимость = Ложь;
					ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляОтчетности Тогда
						ЭлементыФормы.НадписьСформироватьПодтверждениеНаПротоколПроверки.Видимость = Ложь;
					ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиОтчетности И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						ЭлементыФормы.НадписьСформироватьПодтверждениеНаПодтверждениеОтправки.Видимость = Истина;
					ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетности И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						ЭлементыФормы.НадписьСформироватьПодтверждениеНаПротоколПроверки.Видимость = Истина;
					КонецЕсли;
					
				КонецЕсли;
				
				// прорисовываем надпись, соответствующую сообщению
				НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
				Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
					НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
					НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
				КонецЕсли;
				
				// прорисовываем ЭУ протокола входного контроля
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетности Тогда
					Если СтрСообщение.ПротоколСОшибкой Тогда
						ЭлементыФормы.НадписьПротоколПроверки.ЦветТекста = КрасныйЦвет;
						ЭлементыФормы.НадписьПротоколПроверки.Картинка = БиблиотекаКартинок.КритическаяОшибка;
						ЭлементыФормы.ПанельУведомлениеОбУточнении.Видимость = Ложь;
					Иначе
						ЭлементыФормы.НадписьПротоколПроверки.ЦветТекста = ЗеленыйЦвет;
						ЭлементыФормы.НадписьПротоколПроверки.Картинка = Новый Картинка;
						ЭлементыФормы.ПанельУведомлениеОбУточнении.Видимость = Истина;
					КонецЕсли;
				КонецЕсли;
				
				// прорисовываем ЭУ уведомления об уточнении или протокола приема 2-НДФЛ
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбУточненииНБО ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.Протокол2НДФЛ Тогда
					ЭлементыФормы.ПанельУведомлениеОбУточнении.Видимость = Истина;
					Если СтрСообщение.ПротоколСОшибкой Тогда
						ЭлементыФормы.НадписьУведомлениеОбУточнении.ЦветТекста = КрасныйЦвет;
						ЭлементыФормы.НадписьУведомлениеОбУточнении.Картинка = БиблиотекаКартинок.КритическаяОшибка;
					Иначе
						ЭлементыФормы.НадписьУведомлениеОбУточнении.ЦветТекста = ЗеленыйЦвет;
						ЭлементыФормы.НадписьУведомлениеОбУточнении.Картинка = Новый Картинка;
					КонецЕсли;
				КонецЕсли;
				
				// регулируем видимость гиперссылки перехода к списку критичных ошибок
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка Тогда
					ЭлементыФормы.НадписьВниманиеОшибки.Видимость = Истина;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.Заявление Тогда
		
		// сбрасываем видимость гиперссылок для создания подтверждений
		ЭлементыФормы.НадписьСформироватьИзвещениеПодтверждениеНПЗаявление.Видимость 	= Ложь;
		ЭлементыФормы.НадписьСформироватьИзвещениеРезультатПриемаНПЗаявление.Видимость 	= Ложь;
		ЭлементыФормы.НадписьСформироватьИзвещениеРезультатОбработкиРФНП.Видимость 		= Ложь;
		ЭлементыФормы.НадписьСформироватьИзвещениеОбОтзывеЗаявлениеРФНП.Видимость	 	= Ложь;
		ЭлементыФормы.НадписьСформироватьИзвещениеРезультатОбработкиТСНП.Видимость 		= Ложь;
		
		//скрываем панели отзыва и несоответствий
		ЭлементыФормы.ПанельСообщениеОбОтзыеЗаявлениеРФ.Свертка	= РежимСверткиЭлементаУправления.Верх;
		ЭлементыФормы.ПанельРезультатОбработкиЗаявлениеТС.Свертка	= РежимСверткиЭлементаУправления.Верх;
				
		// обход по сообщениям
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					
					// если сообщение отправлено или получено, то шарик - зеленый
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					
					// цвет надписи сообщения устанавливаем соответствующим цвету шарика
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
					
				Иначе
					
					// если сообщение не отправлялось, то шарик желтый или [желтый с замочком]
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
					
				КонецЕсли;
				
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеПодтверждениеНПЗаявление.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеРезультатПриемаНПЗаявление.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиРФНП Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеРезультатОбработкиРФНП.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбОтзывеЗаявлениеРФНП Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеОбОтзывеЗаявлениеРФНП.Видимость = Ложь;
                ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиТСНП Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеРезультатОбработкиТСНП.Видимость = Ложь;
					
					//
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗаявлениеНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеПодтверждениеНПЗаявление.Видимость = Истина;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗаявлениеНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеРезультатПриемаНПЗаявление.Видимость = Истина;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеРФНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеРезультатОбработкиРФНП.Видимость = Истина;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.СообщениеОбОтзывеЗаявлениеРФНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеОбОтзывеЗаявлениеРФНП.Видимость = Истина;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеТСНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеРезультатОбработкиТСНП.Видимость = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
			// прорисовываем надпись, соответствующую сообщению
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// прорисовываем ЭУ протокола входного контроля
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗаявлениеНО Тогда
				Если СтрСообщение.ПротоколСОшибкой Тогда
					ЭлементыФормы.НадписьРезультатПриемаЗаявлениеНО.ЦветТекста = КрасныйЦвет;
					ЭлементыФормы.НадписьРезультатПриемаЗаявлениеНО.Картинка = БиблиотекаКартинок.КритическаяОшибка;
					ЭлементыФормы.ПанельРезультатОбработкиЗаявлениеРФ.Видимость = Ложь;
				Иначе
					ЭлементыФормы.НадписьРезультатПриемаЗаявлениеНО.ЦветТекста = ЗеленыйЦвет;
					ЭлементыФормы.НадписьРезультатПриемаДекларацияНО.Картинка = Новый Картинка;
					ЭлементыФормы.ПанельРезультатОбработкиЗаявлениеРФ.Видимость	= Истина;
				КонецЕсли;
			ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.СообщениеОбОтзывеЗаявлениеРФНО Тогда	
				ЭлементыФормы.ПанельСообщениеОбОтзыеЗаявлениеРФ.Свертка	= РежимСверткиЭлементаУправления.Нет;
				ЭлементыФормы.НадписьСообщениеОбОтзывеЗаявлениеРФНО.ЦветТекста = КрасныйЦвет;
			ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеТСНО Тогда	
				ЭлементыФормы.ПанельРезультатОбработкиЗаявлениеТС.Свертка	= РежимСверткиЭлементаУправления.Нет;
				ЭлементыФормы.НадписьРезультатОбработкиЗаявлениеТСНО.ЦветТекста = КрасныйЦвет;
			КонецЕсли;
			
			// прорисовываем ЭУ результата обработки
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеРФНО Тогда
				ЭлементыФормы.ПанельРезультатОбработкиЗаявлениеРФ.Видимость = Истина;
				Если СтрСообщение.ПротоколСОшибкой Тогда
					ЭлементыФормы.НадписьРезультатОбработкиЗаявлениеРФНО.ЦветТекста = КрасныйЦвет;
					ЭлементыФормы.НадписьРезультатОбработкиЗаявлениеРФНО.Картинка = БиблиотекаКартинок.КритическаяОшибка;
				Иначе
					ЭлементыФормы.НадписьРезультатОбработкиЗаявлениеРФНО.ЦветТекста = ЗеленыйЦвет;
					ЭлементыФормы.НадписьРезультатОбработкиЗаявлениеРФНО.Картинка = Новый Картинка;
				КонецЕсли;
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка
				ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС Тогда
				ЭлементыФормы.НадписьВниманиеОшибки.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.Форма2НДФЛ Тогда
		
		// сбрасвываем видимость гиперссылок для создания подтверждений
		ЭлементыФормы.НадписьСформироватьИзвещениеПодтверждениеНП2НДФЛ.Видимость = Ложь;
		ЭлементыФормы.НадписьСформироватьИзвещениеРезультатПриемаНП2НДФЛ.Видимость = Ложь;
		
		// обход по сообщениям
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					
					// если сообщение отправлено или получено, то шарик - зеленый
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					
					// цвет надписи сообщения устанавливаем соответствующим цвету шарика
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
					
				Иначе
					
					// если сообщение не отправлялось, то шарик желтый или [желтый с замочком]
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
					
				КонецЕсли;
				
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеПодтверждениеНП2НДФЛ.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеРезультатПриемаНП2НДФЛ.Видимость = Ложь;
					
				//
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеПодтверждениеНП2НДФЛ.Видимость = Истина;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеРезультатПриемаНП2НДФЛ.Видимость = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
			// прорисовываем надпись, соответствующую сообщению
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// прорисовываем ЭУ протокола входного контроля
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО Тогда
				Если СтрСообщение.ПротоколСОшибкой Тогда
					ЭлементыФормы.НадписьРезультатПриемаФорма2НДФЛНО.ЦветТекста = КрасныйЦвет;
					ЭлементыФормы.НадписьРезультатПриемаФорма2НДФЛНО.Картинка = БиблиотекаКартинок.КритическаяОшибка;
				Иначе
					ЭлементыФормы.НадписьРезультатПриемаФорма2НДФЛНО.ЦветТекста = ЗеленыйЦвет;
					ЭлементыФормы.НадписьРезультатПриемаФорма2НДФЛНО.Картинка = Новый Картинка;
				КонецЕсли;
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка
			ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС Тогда
				ЭлементыФормы.НадписьВниманиеОшибки.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.НеформализованныеДокументыНалоговогоОргана Тогда
		
		ЭлементыФормы.НадписьСформироватьПодтверждениеНаНеформализованныйДокумент.Видимость = Ложь;
		
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
				Иначе
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
				КонецЕсли;
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеНаНеформализованныйДокументНО Тогда
					ЭлементыФормы.НадписьСформироватьПодтверждениеНаНеформализованныйДокумент.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.НеформализованныйДокументНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					ЭлементыФормы.НадписьСформироватьПодтверждениеНаНеформализованныйДокумент.Видимость = Истина;
				КонецЕсли;
			КонецЕсли;
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка Тогда
				ЭлементыФормы.НадписьВниманиеОшибки.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.НеформализованныеДокументыНалогоплательщика Тогда
		
		ЭлементыФормы.НадписьСформироватьПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика.Видимость = Ложь;
		
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
				Иначе
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
				КонецЕсли;
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика Тогда
					ЭлементыФормы.НадписьСформироватьПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					ЭлементыФормы.НадписьСформироватьПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика.Видимость = Истина;
				КонецЕсли;
			КонецЕсли;
			
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка Тогда
				ЭлементыФормы.НадписьВниманиеОшибки.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.ЗапросыНаИнформационноеОбслуживание Тогда
	
		// сбрасвываем видимость гиперссылок для создания подтверждений
		ЭлементыФормы.НадписьСформироватьПодтверждениеНаПодтверждениеОтправкиЗапроса.Видимость = Ложь;
		ЭлементыФормы.НадписьСформироватьПодтверждениеНаПротоколПроверкиЗапроса.Видимость = Ложь;
		ЭлементыФормы.НадписьСформироватьПодтверждениеНаОтветНаЗапрос.Видимость = Ложь;
		
		// обход по сообщениям
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
					
				Иначе
					
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
					
				КонецЕсли;
				
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиЗапросаИОН Тогда
					ЭлементыФормы.НадписьСформироватьПодтверждениеНаПодтверждениеОтправкиЗапроса.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляЗапросаИОН Тогда
					ЭлементыФормы.НадписьСформироватьПодтверждениеНаПротоколПроверкиЗапроса.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПереподписанныйОтветНаЗапросИОН Тогда
					ЭлементыФормы.НадписьСформироватьПодтверждениеНаОтветНаЗапрос.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиЗапросаИОН И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					ЭлементыФормы.НадписьСформироватьПодтверждениеНаПодтверждениеОтправкиЗапроса.Видимость = Истина;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляЗапросаИОН И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					ЭлементыФормы.НадписьСформироватьПодтверждениеНаПротоколПроверкиЗапроса.Видимость = Истина;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросИОН И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					ЭлементыФормы.НадписьСформироватьПодтверждениеНаОтветНаЗапрос.Видимость = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
			// прорисовываем надпись, соответствующую сообщению
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// прорисовываем ЭУ протокола входного контроля
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляЗапросаИОН Тогда
				Если СтрСообщение.ПротоколСОшибкой Тогда
					ЭлементыФормы.НадписьПротоколПроверкиЗапроса.ЦветТекста = КрасныйЦвет;
					ЭлементыФормы.НадписьПротоколПроверкиЗапроса.Картинка = БиблиотекаКартинок.КритическаяОшибка;
				КонецЕсли;
			КонецЕсли;
			
			// прорисовываем ЭУ ответа на запрос
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросИОН Тогда
				Если СтрСообщение.ПротоколСОшибкой Тогда
					ЭлементыФормы.НадписьОтветНаЗапрос.ЦветТекста = КрасныйЦвет;
					ЭлементыФормы.НадписьОтветНаЗапрос.Картинка = БиблиотекаКартинок.КритическаяОшибка;
				КонецЕсли;
			КонецЕсли;
			
			//// прорисовываем ЭУ ответа на запрос
			//Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросИОН Тогда
			//	Если СтрСообщение.ПротоколСОшибкой Тогда
			//		ЭлементыФормы.НадписьУведомлениеОбУточнении.ЦветТекста = КрасныйЦвет;
			//		ЭлементыФормы.НадписьУведомлениеОбУточнении.Картинка = БиблиотекаКартинок.КритическаяОшибка;
			//	Иначе
			//		ЭлементыФормы.НадписьУведомлениеОбУточнении.ЦветТекста = ЗеленыйЦвет;
			//		ЭлементыФормы.НадписьУведомлениеОбУточнении.Картинка = Новый Картинка;
			//	КонецЕсли;
			//КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка Тогда
				ЭлементыФормы.НадписьВниманиеОшибки.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.ОтчетностьПФР Тогда
		
		// сбрасвываем видимость гиперссылок для создания подтверждений
		ЭлементыФормы.НадписьСформироватьПротоколКвитанцияПФР.Видимость = Ложь;
		
		// обход по сообщениям
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
				Иначе
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
				КонецЕсли;
				
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПротоколКвитанцияПФР Тогда
					ЭлементыФормы.НадписьСформироватьПротоколКвитанцияПФР.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПротоколПФР И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					ЭлементыФормы.НадписьСформироватьПротоколКвитанцияПФР.Видимость = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
			// прорисовываем ЭУ подтверждения получения
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР Тогда
				Если СтрСообщение.ПротоколСОшибкой Тогда
					ЭлементыФормы.НадписьПодтверждениеПолученияПФР.ЦветТекста = КрасныйЦвет;
					ЭлементыФормы.НадписьПодтверждениеПолученияПФР.Картинка = БиблиотекаКартинок.КритическаяОшибка;
					ЭлементыФормы.ПанельПротоколПФР.Видимость = Ложь;
				Иначе
					ЭлементыФормы.НадписьПодтверждениеПолученияПФР.ЦветТекста = ЗеленыйЦвет;
					ЭлементыФормы.НадписьПодтверждениеПолученияПФР.Картинка = Новый Картинка;
					ЭлементыФормы.ПанельПротоколПФР.Видимость = Истина;
				КонецЕсли;
			КонецЕсли;
			
			// прорисовываем ЭУ протокола входного контроля
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПротоколПФР Тогда
				ЭлементыФормы.ПанельПротоколПФР.Видимость = Истина;
				Если СтрСообщение.ПротоколСОшибкой Тогда
					ЭлементыФормы.НадписьПротоколПФР.ЦветТекста = КрасныйЦвет;
					ЭлементыФормы.НадписьПротоколПФР.Картинка = БиблиотекаКартинок.КритическаяОшибка;
				Иначе
					ЭлементыФормы.НадписьПротоколПФР.ЦветТекста = ЗеленыйЦвет;
					ЭлементыФормы.НадписьПротоколПФР.Картинка = Новый Картинка;
				КонецЕсли;
			КонецЕсли;
			
			// прорисовываем надпись, соответствующую сообщению
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеПФР
			ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка Тогда
				ЭлементыФормы.НадписьВниманиеОшибки.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.НеформализованнаяПерепискаПФРВходящие Тогда
		
		// делаем невидимой надпись-гиперссылку формирования подтверждения
		ЭлементыФормы.НадписьСформироватьПодтверждениеполученияНеформализованногоСообщенияПФР.Видимость = Ложь;
		
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			// получаем картинку, соответствующую типу сообщения
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				
				// прорисовываем картинку-шарик
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
				Иначе
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
				КонецЕсли;
				
				// регулируем видимость надписи-гиперссылки формирования подтверждения
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР Тогда
					ЭлементыФормы.НадписьСформироватьПодтверждениеполученияНеформализованногоСообщенияПФР.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееПФР И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					ЭлементыФормы.НадписьСформироватьПодтверждениеполученияНеформализованногоСообщенияПФР.Видимость = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
			// прорисовываем надпись-гиперссылку, соответствующую текущему типу сообщения
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеПФР
			ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка Тогда
				ЭлементыФормы.НадписьВниманиеОшибки.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.НеформализованнаяПерепискаПФРИсходящие Тогда
		
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			// получаем картинку, соответствующую типу сообщения
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				
				// прорисовываем картинку-шарик
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
				Иначе
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
				КонецЕсли;
				
			КонецЕсли;
			
			// прорисовываем надпись-гиперссылку, соответствующую текущему типу сообщения
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеПФР
			ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС
			ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка Тогда
				ЭлементыФормы.НадписьВниманиеОшибки.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.ОбращениеНП Тогда
		
		// сбрасвываем видимость гиперссылок для создания подтверждений
		ЭлементыФормы.НадписьСформироватьИзвещениеПодтверждениеНПОбращение.Видимость = Ложь;
		ЭлементыФормы.НадписьСформироватьИзвещениеРезультатПриемаНПОбращение.Видимость = Ложь;
		
		ЭлементыФормы.ПанельРезультатПриемаОбращениеНП.Видимость = Ложь;
		
		// обход по сообщениям
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					
					// если сообщение отправлено или получено, то шарик - зеленый
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					
					// цвет надписи сообщения устанавливаем соответствующим цвету шарика
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
					
				Иначе
					
					// если сообщение не отправлялось, то шарик желтый или [желтый с замочком]
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
					
				КонецЕсли;
				
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеПодтверждениеНПОбращение.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеРезультатПриемаНПОбращение.Видимость = Ложь;
					
				//
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОбращениеНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеПодтверждениеНПОбращение.Видимость = Истина;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеРезультатПриемаНПОбращение.Видимость = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
			// прорисовываем надпись, соответствующую сообщению
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// прорисовываем ЭУ протокола входного контроля
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО Тогда
				Если СтрСообщение.ПротоколСОшибкой Тогда
					ЭлементыФормы.НадписьРезультатПриемаОбращениеНО.ЦветТекста = КрасныйЦвет;
					ЭлементыФормы.НадписьРезультатПриемаОбращениеНО.Картинка = БиблиотекаКартинок.КритическаяОшибка;
				Иначе
					ЭлементыФормы.НадписьРезультатПриемаОбращениеНО.ЦветТекста = ЗеленыйЦвет;
					ЭлементыФормы.НадписьРезультатПриемаОбращениеНО.Картинка = Новый Картинка;
				КонецЕсли;
				ЭлементыФормы.ПанельРезультатПриемаОбращениеНП.Видимость = Истина;
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка
			ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС Тогда
				ЭлементыФормы.НадписьВниманиеОшибки.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.Документ Тогда
		
		ЭлементыФормы.НадписьСформироватьИзвещениеДокументНП.Видимость = Ложь;
		ЭлементыФормы.НадписьСформироватьРезультатПриемаДокументНП.Видимость = Ложь;
		
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
				Иначе
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
				КонецЕсли;
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеДокументНП Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеДокументНП.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДокументНП Тогда
					ЭлементыФормы.НадписьСформироватьРезультатПриемаДокументНП.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ДокументНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеДокументНП.Видимость = Истина;
					ЭлементыФормы.НадписьСформироватьРезультатПриемаДокументНП.Видимость = Истина;
				КонецЕсли;
			КонецЕсли;
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// прорисовываем ЭУ протокола входного контроля
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДокументНП Тогда
				Если СтрСообщение.ПротоколСОшибкой Тогда
					ЭлементыФормы.НадписьРезультатПриемаДокументНП.ЦветТекста = КрасныйЦвет;
					ЭлементыФормы.НадписьРезультатПриемаДокументНП.Картинка = БиблиотекаКартинок.КритическаяОшибка;
				Иначе
					ЭлементыФормы.НадписьРезультатПриемаДокументНП.ЦветТекста = ЗеленыйЦвет;
					ЭлементыФормы.НадписьРезультатПриемаДокументНП.Картинка = Новый Картинка;
				КонецЕсли;
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС Тогда
				ЭлементыФормы.НадписьВниманиеОшибки.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.ПисьмоНО Тогда
		
		ЭлементыФормы.НадписьСформироватьИзвещениеПисьмоНП.Видимость = Ложь;
		
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
				Иначе
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
				КонецЕсли;
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоНП Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеПисьмоНП.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПисьмоНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеПисьмоНП.Видимость = Истина;
				КонецЕсли;
			КонецЕсли;
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС Тогда
				ЭлементыФормы.НадписьВниманиеОшибки.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.Рассылка Тогда
		
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
				Иначе
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
				КонецЕсли;
			КонецЕсли;
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС Тогда
				ЭлементыФормы.НадписьВниманиеОшибки.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.РассылкаГрупповая Тогда
		
		ЭлементыФормы.НадписьСформироватьИзвещениеРассылкаНП.Видимость = Ложь;
		
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
				Иначе
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
				КонецЕсли;
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеРассылкаНП Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеРассылкаНП.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РассылкаНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеРассылкаНП.Видимость = Истина;
				КонецЕсли;
			КонецЕсли;
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС Тогда
				ЭлементыФормы.НадписьВниманиеОшибки.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.ИОН Тогда
		
		// сбрасвываем видимость гиперссылок для создания подтверждений
		ЭлементыФормы.НадписьСформироватьИзвещениеПодтверждениеНПЗапрос.Видимость = Ложь;
		ЭлементыФормы.НадписьСформироватьИзвещениеРезультатПриемаНПЗапрос.Видимость = Ложь;
		ЭлементыФормы.НадписьСформироватьИзвещениеРезультатОбработкиНПЗапрос.Видимость = Ложь;
		
		// обход по сообщениям
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					
					// если сообщение отправлено или получено, то шарик - зеленый
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					
					// цвет надписи сообщения устанавливаем соответствующим цвету шарика
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
					
				Иначе
					
					// если сообщение не отправлялось, то шарик желтый или [желтый с замочком]
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
					
				КонецЕсли;
				
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеПодтверждениеНПЗапрос.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеРезультатПриемаНПЗапрос.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеРезультатОбработкиНПЗапрос.Видимость = Ложь;
					
				//
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗапросНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеПодтверждениеНПЗапрос.Видимость = Истина;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеРезультатПриемаНПЗапрос.Видимость = Истина;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеРезультатОбработкиНПЗапрос.Видимость = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
			// прорисовываем надпись, соответствующую сообщению
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// прорисовываем ЭУ протокола входного контроля
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО Тогда
				Если СтрСообщение.ПротоколСОшибкой Тогда
					ЭлементыФормы.НадписьРезультатПриемаЗапросНО.ЦветТекста = КрасныйЦвет;
					ЭлементыФормы.НадписьРезультатПриемаЗапросНО.Картинка = БиблиотекаКартинок.КритическаяОшибка;
					ЭлементыФормы.ПанельРезультатОбработкиЗапрос.Видимость = Ложь;
				Иначе
					ЭлементыФормы.НадписьРезультатПриемаЗапросНО.ЦветТекста = ЗеленыйЦвет;
					ЭлементыФормы.НадписьРезультатПриемаЗапросНО.Картинка = Новый Картинка;
					ЭлементыФормы.ПанельРезультатОбработкиЗапрос.Видимость = Истина;
				КонецЕсли;
			КонецЕсли;
			
			// прорисовываем ЭУ результата обработки
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО Тогда
				ЭлементыФормы.ПанельРезультатОбработкиЗапрос.Видимость = Истина;
				Если СтрСообщение.ПротоколСОшибкой Тогда
					ЭлементыФормы.НадписьРезультатОбработкиЗапросНО.ЦветТекста = КрасныйЦвет;
					ЭлементыФормы.НадписьРезультатОбработкиЗапросНО.Картинка = БиблиотекаКартинок.КритическаяОшибка;
				Иначе
					ЭлементыФормы.НадписьРезультатОбработкиЗапросНО.ЦветТекста = ЗеленыйЦвет;
					ЭлементыФормы.НадписьРезультатОбработкиЗапросНО.Картинка = Новый Картинка;
				КонецЕсли;
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка
			ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС Тогда
				ЭлементыФормы.НадписьВниманиеОшибки.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.ОтчетностьФСГС Тогда
		
		// сбрасвываем видимость гиперссылок для создания подтверждений
		ЭлементыФормы.НадписьСформироватьИзвещениеПодтверждениеДатыОтправкиФСГС.Видимость = Ложь;
		ЭлементыФормы.НадписьСформироватьИзвещениеПротоколФСГС.Видимость = Ложь;
		
		// обход по сообщениям
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					
					// если сообщение отправлено или получено, то шарик - зеленый
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					
					// цвет надписи сообщения устанавливаем соответствующим цвету шарика
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
					
				Иначе
					
					// если сообщение не отправлялось, то шарик желтый или [желтый с замочком]
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
					
				КонецЕсли;
				
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеПодтверждениеДатыОтправкиФСГС.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеПротоколВходногоКонтроляОтчетностиФСГС Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеПротоколФСГС.Видимость = Ложь;
					
				//
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеПодтверждениеДатыОтправкиФСГС.Видимость = Истина;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетностиФСГС И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеПротоколФСГС.Видимость = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
			// прорисовываем надпись, соответствующую сообщению
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// прорисовываем ЭУ протокола входного контроля
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетностиФСГС Тогда
				Если СтрСообщение.ПротоколСОшибкой Тогда
					ЭлементыФормы.НадписьПротоколФСГС.ЦветТекста = КрасныйЦвет;
					ЭлементыФормы.НадписьПротоколФСГС.Картинка = БиблиотекаКартинок.КритическаяОшибка;
				Иначе
					ЭлементыФормы.НадписьПротоколФСГС.ЦветТекста = ЗеленыйЦвет;
					ЭлементыФормы.НадписьПротоколФСГС.Картинка = Новый Картинка;
				КонецЕсли;
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка
			ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС
			ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФСГС Тогда
				ЭлементыФормы.НадписьВниманиеОшибки.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.ПисьменноеОбращениеВФСГС Тогда
		
		ЭлементыФормы.НадписьСформироватьИзвещениеПодтверждениеДатыОтправкиПисьмаФСГС.Видимость = Ложь;
		
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
				Иначе
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
				КонецЕсли;
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеДатыОтправкиФСГС Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеПодтверждениеДатыОтправкиПисьмаФСГС.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеПодтверждениеДатыОтправкиПисьмаФСГС.Видимость = Истина;
				КонецЕсли;
			КонецЕсли;
			
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФСГС
			ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка Тогда
				ЭлементыФормы.НадписьВниманиеОшибки.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Тип = Перечисления.ТипыЦикловОбмена.ИндивидуальноеИнформированиеФСГС Тогда
		
		// делаем невидимой надпись-гиперссылку формирования подтверждения
		ЭлементыФормы.НадписьСформироватьИзвещениеПисьмоВходящееФСГС.Видимость = Ложь;
		
		Для ИндСтр = 1 По ТаблицаСообщений.Количество() Цикл
			СтрСообщение = ТаблицаСообщений.Получить(ИндСтр - 1);
			
			// получаем картинку, соответствующую типу сообщения
			Картинка = СоответствиеТипаТранспортногоСообщенияКартинке[СтрСообщение.Тип];
			Если Картинка <> Неопределено Тогда
				
				// прорисовываем картинку-шарик
				Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Отправленное ИЛИ СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное Тогда
					Если СтрСообщение.СтатусСообщения = Перечисления.СтатусыПисем.Полученное И НЕ ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
						Картинка.Картинка = ЗеленыйШарНерасшифрованное;
					Иначе
						Картинка.Картинка = ЗеленыйШар;
					КонецЕсли;
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗеленыйШар];
				Иначе
					Картинка.Картинка = ?(ЗначениеЗаполнено(СтрСообщение.КоличествоНерасшифрованных), ЗолотойШарЗашифрованное, ЗолотойШар);
					СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип].ЦветТекста = СоответствиеКартинкиЦветуНадписи[ЗолотойШар];
				КонецЕсли;
				
				// регулируем видимость надписи-гиперссылки формирования подтверждения
				Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоВходящееФСГС Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеПисьмоВходящееФСГС.Видимость = Ложь;
				ИначеЕсли СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееФСГС И ЗначениеЗаполнено(СтрСообщение.КоличествоРасшифрованных) Тогда
					ЭлементыФормы.НадписьСформироватьИзвещениеПисьмоВходящееФСГС.Видимость = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
			// прорисовываем надпись-гиперссылку, соответствующую текущему типу сообщения
			НадписьТекущегоТипаСообщения = СоответствиеТипаТранспортногоСообщенияНадписи[СтрСообщение.Тип];
			Если НадписьТекущегоТипаСообщения <> Неопределено Тогда
				НадписьТекущегоТипаСообщения.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(СтрСообщение.Ссылка);
				НадписьТекущегоТипаСообщения.Шрифт = ?(СтрСообщение.ПометкаУдаления, Новый Шрифт(НадписьТекущегоТипаСообщения.Шрифт, , , , , , Истина), Новый Шрифт);
			КонецЕсли;
			
			// регулируем видимость гиперссылки перехода к списку критичных ошибок
			Если СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФСГС
			ИЛИ СтрСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка Тогда
				ЭлементыФормы.НадписьВниманиеОшибки.Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
	
	КонецЕсли;
	
	ПрорисоватьСтатусыЧтенияСообщений();
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если ЭтоНовый() Тогда
		Предупреждение("Справочник не предназначен для ручного заполнения!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Тип <> Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность
	И Тип <> Перечисления.ТипыЦикловОбмена.Заявление	
	И Тип <> Перечисления.ТипыЦикловОбмена.Форма2НДФЛ
	И Тип <> Перечисления.ТипыЦикловОбмена.ОтчетностьПФР 
	И Тип <> Перечисления.ТипыЦикловОбмена.ОтчетностьФСГС
	Тогда
		ЭлементыФормы.ДействияФормы.Кнопки.Печать.Кнопки.Удалить(ЭлементыФормы.ДействияФормы.Кнопки.Печать.Кнопки.ВывестиВОкно);
	КонецЕсли;
	
	ИнициализироватьСоответствия();
	ЗаполнитьДанными();
	
КонецПроцедуры

Процедура НадписьПоказатьНажатие(Элемент)
	
	ФормаСписка = Документы.ТранспортноеСообщение.ПолучитьФормуСписка();
	ФормаСписка.Отбор.Сбросить();
	ФормаСписка.Отбор.ЦиклОбмена.Установить(Ссылка);
	ФормаСписка.Открыть();
	
КонецПроцедуры

Процедура ОрганизацияНажатие(Элемент)
	
	Организация.ПолучитьФорму().Открыть();
	
КонецПроцедуры

Процедура НалоговыйОрганНажатие(Элемент)
	
	ОткрытьЗначение(ВнешняяОрганизация);
	
КонецПроцедуры

Процедура ПредметНажатие(Элемент)
	
	Если ЗначениеЗаполнено(Предмет) Тогда
		Если Тип = Перечисления.ТипыЦикловОбмена.Документ И ДополнительныеПредметы.Количество() > 0 Тогда
			
			СписокПредметов = Новый СписокЗначений;
			СписокПредметов.ЗагрузитьЗначения(ПолучитьПредметыДокумента());
			РезультатВыбора = СписокПредметов.ВыбратьЭлемент("Выберите предмет");
			Если РезультатВыбора <> Неопределено Тогда
				ОткрытьЗначение(РезультатВыбора.Значение);
			КонецЕсли;
			
		Иначе
			ОткрытьЗначение(Предмет);
		КонецЕсли;
	Иначе
		Предупреждение("Для текущего цикла обмена предмет отсутствует!");
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьПредметыДокумента()
	
	ПредметыДокумента = ДополнительныеПредметы.ВыгрузитьКолонку("Предмет");
	ПредметыДокумента.Вставить(0, Предмет);
	Возврат ПредметыДокумента;
	
КонецФункции

Процедура ДействияФормыПеречитать(Кнопка)
	
	Если Модифицированность И Вопрос("Данные были изменены. Вы уверены, что хотите перечитать данные?", РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьДанными();
	
КонецПроцедуры

Процедура НадписьСформироватьПодтверждениеНаПодтверждениеОтправкиНажатие(Элемент)
	
	Подтверждение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиОтчетности);
	Если Подтверждение <> Неопределено Тогда
		Подтверждение.ПолучитьФорму().Открыть();
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСформироватьПодтверждениеНаПротоколПроверкиНажатие(Элемент)
	
	Подтверждение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетности);
	Если Подтверждение <> Неопределено Тогда
		Подтверждение.ПолучитьФорму().Открыть();
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

Процедура СообщениеНажатие(Элемент)
	
	КонтекстЭДО.ПоказатьСообщение(Ссылка, СоответствиеЭлементовУправленияТипуТранспортногоСообщения[Элемент]);
	
КонецПроцедуры

Процедура НадписьСформироватьПодтверждениеНаНеформализованныйДокументНажатие(Элемент)
	
	Подтверждение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.НеформализованныйДокументНО);
	Если Подтверждение <> Неопределено Тогда
		Подтверждение.ПолучитьФорму().Открыть();
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСформироватьПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщикаНажатие(Элемент)
	
	Подтверждение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика);
	Если Подтверждение <> Неопределено Тогда
		Подтверждение.ПолучитьФорму().Открыть();
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

Процедура ДатаЗакрытияНажатие(Элемент)
	
	НоваяДатаЗакрытия = ?(ДатаЗакрытия = КонтекстЭДО.ПолучитьПустуюДатуЗавершенияЦиклаОбмена(), '00010101000000', ДатаЗакрытия);
	Если ВвестиДату(НоваяДатаЗакрытия, "Введите дату закрытия") Тогда
		Если НоваяДатаЗакрытия = '00010101000000' Тогда
			Если Вопрос("Завершить цикл обмена текущим временем?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
				НоваяДатаЗакрытия = ТекущаяДата();
			Иначе
				Возврат;
			КонецЕсли;
		КонецЕсли;
		ДатаЗакрытия = ?(НоваяДатаЗакрытия = '00010101000000', КонтекстЭДО.ПолучитьПустуюДатуЗавершенияЦиклаОбмена(), НоваяДатаЗакрытия);
		Если НЕ ЗаписатьВФорме() Тогда
			Прочитать();
		КонецЕсли;
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСформироватьПодтверждениеНаПодтверждениеОтправкиЗапросаНажатие(Элемент)
	
	Подтверждение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиЗапросаИОН);
	Если Подтверждение <> Неопределено Тогда
		Подтверждение.ПолучитьФорму().Открыть();
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСформироватьПодтверждениеНаПротоколПроверкиЗапросаНажатие(Элемент)
	
	Подтверждение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляЗапросаИОН);
	Если Подтверждение <> Неопределено Тогда
		Подтверждение.ПолучитьФорму().Открыть();
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьВниманиеОшибкиНажатие(Элемент)
	
	КонтекстЭДО.ПоказатьКритическиеОшибкиЦиклаОбмена(Ссылка);
	
КонецПроцедуры

Процедура НадписьСформироватьПодтверждениеНаОтветНаЗапросНажатие(Элемент)
	
	Подтверждение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.ПереподписанныйОтветНаЗапросИОН);
	Если Подтверждение <> Неопределено Тогда
		Подтверждение.ПолучитьФорму().Открыть();
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Изменение сообщения" И ТипЗнч(Параметр) = Тип("Структура") И Параметр.ЦиклОбмена = Ссылка Тогда
		ЗаполнитьДанными();
	ИначеЕсли ИмяСобытия = "Чтение сообщения" И ТипЗнч(Параметр) = Тип("Структура") И Параметр.ЦиклОбмена = Ссылка Тогда
		ПрорисоватьСтатусыЧтенияСообщений();
	ИначеЕсли ИмяСобытия = "Опрос форм" И Параметр.Ключ = Ссылка Тогда
		Параметр.Форма = ЭтаФорма;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыгрузитьФайлы(ВыгружатьКонтейнеры, ВыгружатьСодержимое)
	
	Если КонтекстЭДО.ВыгрузитьЦиклыОбмена(Ссылка, ВыгружатьКонтейнеры, ВыгружатьСодержимое) Тогда
		Предупреждение("Выгрузка завершена.");
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыВыгрузить(Кнопка)
	
	ВыгрузитьФайлы(Истина, Истина);
	
КонецПроцедуры

Процедура ДействияФормыВыгрузитьКонтейнеры(Кнопка)
	
	ВыгрузитьФайлы(Истина, Ложь);
	
КонецПроцедуры

Процедура ДействияФормыВыгрузитьСодержимое(Кнопка)
	
	ВыгрузитьФайлы(Ложь, Истина);
	
КонецПроцедуры

Процедура ДействияФормыВывестиВОкно(Кнопка)
	
	КонтекстЭДО.ПоказатьДокументыЦикловОбмена(Ссылка);
	
КонецПроцедуры

Процедура ДействияФормыПоказатьОтчетОСостоянии(Кнопка)
	
	КонтекстЭДО.ПоказатьОтчетыОСостоянииЦикловОбмена(Ссылка);
	
КонецПроцедуры

Процедура НадписьОткрытьЦиклОбменаНажатие(Элемент)
	
	Ответ = Вопрос("Пометить цикл обмена как незавершенный?", РежимДиалогаВопрос.ДаНет);
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ДатаЗакрытия = КонтекстЭДО.ПолучитьПустуюДатуЗавершенияЦиклаОбмена();
	Если НЕ ЗаписатьВФорме() Тогда
		Прочитать();
	КонецЕсли;
	ЗаполнитьДанными();
	
КонецПроцедуры

Процедура ОрганПФРНажатие(Элемент)
	
	ОткрытьЗначение(ВнешняяОрганизация);
	
КонецПроцедуры

Процедура ОрганФСГСНажатие(Элемент)
	
	ОткрытьЗначение(ВнешняяОрганизация);
	
КонецПроцедуры

Процедура НадписьСформироватьИзвещениеПодтверждениеДатыОтправкиФСГСНажатие(Элемент)
	Извещение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС);
	Если Извещение <> Неопределено Тогда
		ОткрытьЗначение(Извещение);
		ЗаполнитьДанными();
	КонецЕсли;
КонецПроцедуры

Процедура НадписьСформироватьИзвещениеПротоколФСГСНажатие(Элемент)
	Извещение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетностиФСГС);
	Если Извещение <> Неопределено Тогда
		ОткрытьЗначение(Извещение);
		ЗаполнитьДанными();
	КонецЕсли;
КонецПроцедуры

Процедура НадписьИзвещениеПодтверждениеДатыОтправкиПисьмаФСГСНажатие(Элемент)
	Извещение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДатыОтправкиФСГС);
	Если Извещение <> Неопределено Тогда
		ОткрытьЗначение(Извещение);
		ЗаполнитьДанными();
	КонецЕсли;
КонецПроцедуры

Процедура НадписьСформироватьИзвещениеПисьмоВходящееФСГСНажатие(Элемент)
	Извещение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееФСГС);
	Если Извещение <> Неопределено Тогда
		ОткрытьЗначение(Извещение);
		ЗаполнитьДанными();
	КонецЕсли;
КонецПроцедуры

Процедура НадписьСформироватьПротоколКвитанцияПФРНажатие(Элемент)
	
	Подтверждение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.ПротоколПФР);
	Если Подтверждение <> Неопределено Тогда
		ОткрытьЗначение(Подтверждение);
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСформироватьПодтверждениеполученияНеформализованногоСообщенияПФРНажатие(Элемент)
	
	Подтверждение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееПФР);
	Если Подтверждение <> Неопределено Тогда
		ОткрытьЗначение(Подтверждение);
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСформироватьИзвещениеПодтверждениеНПНажатие(Элемент)
	
	Подтверждение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО);
	Если Подтверждение <> Неопределено Тогда
		ОткрытьЗначение(Подтверждение);
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСформироватьИзвещениеРезультатПриемаНПНажатие(Элемент)
	
	Подтверждение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО);
	Если Подтверждение <> Неопределено Тогда
		ОткрытьЗначение(Подтверждение);
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСформироватьИзвещениеРезультатОбработкиНПНажатие(Элемент)
	
	Подтверждение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО);
	Если Подтверждение <> Неопределено Тогда
		ОткрытьЗначение(Подтверждение);
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСформироватьИзвещениеПодтверждениеНП2НДФЛНажатие(Элемент)
	
	Подтверждение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО);
	Если Подтверждение <> Неопределено Тогда
		ОткрытьЗначение(Подтверждение);
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСформироватьИзвещениеРезультатПриемаНП2НДФЛНажатие(Элемент)
	
	Подтверждение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО);
	Если Подтверждение <> Неопределено Тогда
		ОткрытьЗначение(Подтверждение);
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСформироватьИзвещениеПодтверждениеНПОбращениеНажатие(Элемент)
	
	Подтверждение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбращениеНО);
	Если Подтверждение <> Неопределено Тогда
		ОткрытьЗначение(Подтверждение);
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСформироватьИзвещениеРезультатПриемаНПОбращениеНажатие(Элемент)
	
	Подтверждение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО);
	Если Подтверждение <> Неопределено Тогда
		ОткрытьЗначение(Подтверждение);
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСформироватьИзвещениеПисьмоНПНажатие(Элемент)
	
	Подтверждение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.ПисьмоНО);
	Если Подтверждение <> Неопределено Тогда
		ОткрытьЗначение(Подтверждение);
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСформироватьИзвещениеРассылкаНПНажатие(Элемент)
	
	Подтверждение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.РассылкаНО);
	Если Подтверждение <> Неопределено Тогда
		ОткрытьЗначение(Подтверждение);
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСформироватьИзвещениеПодтверждениеНПЗапросНажатие(Элемент)
	
	Подтверждение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗапросНО);
	Если Подтверждение <> Неопределено Тогда
		ОткрытьЗначение(Подтверждение);
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСформироватьИзвещениеРезультатПриемаНПЗапросНажатие(Элемент)
	
	Подтверждение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО);
	Если Подтверждение <> Неопределено Тогда
		ОткрытьЗначение(Подтверждение);
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСформироватьИзвещениеРезультатОбработкиНПЗапросНажатие(Элемент)
	
	Подтверждение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО);
	Если Подтверждение <> Неопределено Тогда
		ОткрытьЗначение(Подтверждение);
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

//Заявление
Процедура НадписьСформироватьИзвещениеПодтверждениеНПЗаявлениеНажатие(Элемент)
	
	Подтверждение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗаявлениеНО);
	Если Подтверждение <> Неопределено Тогда
		ОткрытьЗначение(Подтверждение);
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнительныйПредметНажатие(Элемент)
	
	Если ДополнительныеПредметы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныйПредмет = ДополнительныеПредметы[0].Предмет;
	
	Если ЗначениеЗаполнено(ДополнительныйПредмет) Тогда
		ОткрытьЗначение(ДополнительныйПредмет);
	Иначе
		Предупреждение("Для текущего цикла обмена дополнительный предмет отсутствует!");
	КонецЕсли;
	
КонецПроцедуры

Функция ПредставлениеПредмета(ссылкаПредмет)
	
	ТипПредмета = ТипЗнч(ссылкаПредмет);
	Если ТипПредмета = Тип("ДокументСсылка.РегламентированныйОтчет") Тогда
		Возврат РегламентированнаяОтчетность.ПредставлениеДокументаРеглОтч(ссылкаПредмет);
	ИначеЕсли ТипПредмета = Тип("Массив") Тогда
		КоличествоПредметов = ссылкаПредмет.Количество();
		Если КоличествоПредметов = 0 Тогда
			Возврат "<предмет отсутствует>";
		ИначеЕсли КоличествоПредметов > 1 Тогда
			ТекстДокументовВсего = СтрЗаменить(ЧислоПрописью(КоличествоПредметов, "НП=Истина, НД=Ложь", "документ, документа, документов, м, , , , ,0"),
									ЧислоПрописью(КоличествоПредметов, "НП=Ложь, НД=Ложь", " , , , , , , , ,0"),
									"");
			Возврат Формат(КоличествоПредметов, "ЧГ=") + " " + ТекстДокументовВсего;
		Иначе
			Возврат Строка(ссылкаПредмет[0]);
		КонецЕсли;
		Возврат Строка(ссылкаПредмет);
	Иначе
		Возврат Строка(ссылкаПредмет);
	КонецЕсли;
	
КонецФункции

Процедура НадписьСформироватьИзвещениеРезультатПриемаНПЗаявлениеНажатие(Элемент)
	Подтверждение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗаявлениеНО);
	Если Подтверждение <> Неопределено Тогда
		ОткрытьЗначение(Подтверждение);
		ЗаполнитьДанными();
	КонецЕсли;
КонецПроцедуры

Процедура НадписьСформироватьИзвещениеРезультатОбработкиРФНПНажатие(Элемент)
	Подтверждение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеРФНО);
	Если Подтверждение <> Неопределено Тогда
		ОткрытьЗначение(Подтверждение);
		ЗаполнитьДанными();
	КонецЕсли;
КонецПроцедуры

Процедура НадписьСформироватьИзвещениеОбОтзывеЗаявлениеРФНПНажатие(Элемент)
	Подтверждение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.СообщениеОбОтзывеЗаявлениеРФНО);
	Если Подтверждение <> Неопределено Тогда
		ОткрытьЗначение(Подтверждение);
		ЗаполнитьДанными();
	КонецЕсли;
КонецПроцедуры

Процедура НадписьСформироватьИзвещениеРезультатОбработкиТСНПНажатие(Элемент)
	Подтверждение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗаявлениеТСНО);
	Если Подтверждение <> Неопределено Тогда
		ОткрытьЗначение(Подтверждение);
		ЗаполнитьДанными();
	КонецЕсли;
КонецПроцедуры

Процедура НадписьСформироватьИзвещениеДокументНПНажатие(Элемент)
	
	Подтверждение = КонтекстЭДО.ВвестиПодтверждение(Ссылка, Перечисления.ТипыТранспортныхСообщений.ДокументНО);
	Если Подтверждение <> Неопределено Тогда
		ОткрытьЗначение(Подтверждение);
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСформироватьРезультатПриемаДокументНППНажатие(Элемент)
	
	СообщениеОснование = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(Ссылка, Перечисления.ТипыТранспортныхСообщений.ДокументНО);
	РезультатПриема = КонтекстЭДО.СоздатьСообщениеРезультатПриемаДокументНП(СообщениеОснование);
	Если РезультатПриема <> Неопределено Тогда
		ОткрытьЗначение(РезультатПриема);
		ЗаполнитьДанными();
	КонецЕсли;
	
КонецПроцедуры

ЗеленыйШар					= БиблиотекаКартинок.ЗеленыйШар;
ЗеленыйШарНерасшифрованное 	= БиблиотекаКартинок.ЗеленыйШарСЗамком;
СерыйШар					= БиблиотекаКартинок.СерыйШар;
ЗолотойШар					= БиблиотекаКартинок.ЗолотойШар;
ЗолотойШарЗашифрованное		= БиблиотекаКартинок.ЗолотойШарСЗамком;

КрасныйЦвет = Новый Цвет(255, 0, 0);
ЗеленыйЦвет = Новый Цвет(0, 128, 0);

СоответствиеКартинкиЦветуНадписи = Новый Соответствие;
СоответствиеКартинкиЦветуНадписи.Вставить(СерыйШар,						Новый Цвет(128, 128, 128));
СоответствиеКартинкиЦветуНадписи.Вставить(ЗеленыйШар,					ЗеленыйЦвет);
СоответствиеКартинкиЦветуНадписи.Вставить(ЗеленыйШарНерасшифрованное,	ЗеленыйЦвет);
СоответствиеКартинкиЦветуНадписи.Вставить(ЗолотойШар,					Новый Цвет(254, 185, 26));

// 
СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений = Новый Соответствие;
СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность, ЭлементыФормы.ПанельСообщения.Страницы.СтраницаОтчетность);
СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.Заявление, ЭлементыФормы.ПанельСообщения.Страницы.СтраницаЗаявление);
СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.Форма2НДФЛ, ЭлементыФормы.ПанельСообщения.Страницы.СтраницаФорма2НДФЛ);
СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.НеформализованныеДокументыНалоговогоОргана, ЭлементыФормы.ПанельСообщения.Страницы.СтраницаНеформализованноеСообщениеНалоговогоОргана);
СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.НеформализованныеДокументыНалогоплательщика, ЭлементыФормы.ПанельСообщения.Страницы.СтраницаНеформализованноеСообщениеНалогоплательщика);
СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.ЗапросыНаИнформационноеОбслуживание, ЭлементыФормы.ПанельСообщения.Страницы.СтраницаЗапросНаИнформационноеОбслуживание);
СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.ОтчетностьПФР, ЭлементыФормы.ПанельСообщения.Страницы.СтраницаОтчетностьПФР);
СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.НеформализованнаяПерепискаПФРВходящие, ЭлементыФормы.ПанельСообщения.Страницы.СтраницаНеформализованноеВходящиеПФР);
СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.НеформализованнаяПерепискаПФРИсходящие, ЭлементыФормы.ПанельСообщения.Страницы.СтраницаНеформализованноеИсходящиеПФР);
СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.ОбращениеНП, ЭлементыФормы.ПанельСообщения.Страницы.ОбращениеНП);
СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.ПисьмоНО, ЭлементыФормы.ПанельСообщения.Страницы.ПисьмоНО);
СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.Документ, ЭлементыФормы.ПанельСообщения.Страницы.Документ);
СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.Рассылка, ЭлементыФормы.ПанельСообщения.Страницы.Рассылка);
СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.РассылкаГрупповая, ЭлементыФормы.ПанельСообщения.Страницы.РассылкаГрупповая);
СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.ИОН, ЭлементыФормы.ПанельСообщения.Страницы.ИОН);
СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.ОтчетностьФСГС, ЭлементыФормы.ПанельСообщения.Страницы.СтраницаОтчетностьФСГС);
СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.ПисьменноеОбращениеВФСГС, ЭлементыФормы.ПанельСообщения.Страницы.ПисьменноеОбращениеВФСГС);
СоответствиеТипаЦиклаОбменаСтраницеПанелиСообщений.Вставить(Перечисления.ТипыЦикловОбмена.ИндивидуальноеИнформированиеФСГС, ЭлементыФормы.ПанельСообщения.Страницы.ИндивидуальноеИнформированиеФСГС);