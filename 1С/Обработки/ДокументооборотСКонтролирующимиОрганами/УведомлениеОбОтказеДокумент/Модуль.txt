Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Сообщение) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// извлекаем файл уведомления из содержимого сообщения
	СтрУведомления = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Сообщение, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.УведомлениеОбОтказеДокумент, ИмяФайлаУведомления);
	Если СтрУведомления.Количество() = 0 Тогда
		Предупреждение("Уведомление об отказе не обнаружено среди содержимого сообщения.");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	СтрУведомление = СтрУведомления[0];
	
	// записываем вложение во временный файл
	ФайлУведомления = ПолучитьИмяВременногоФайла("xml");
	Попытка
		СтрУведомление.Данные.Получить().Записать(ФайлУведомления);
	Исключение
		Сообщить("Ошибка выгрузки уведомления об отказе во временный файл:" + Символы.ПС + ИнформацияОбОшибке().Описание, СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат;
	КонецПопытки;
	
	// считываем уведомление из файла в дерево XML
	ОписаниеОшибки = "";
	ДеревоXML = КонтекстЭДО.ЗагрузитьXMLВДеревоЗначений(ФайлУведомления, , ОписаниеОшибки);
	КонтекстЭДО.УдалитьВременныйФайл(ФайлУведомления);
	Если НЕ ЗначениеЗаполнено(ДеревоXML) Тогда
		Сообщить("Ошибка чтения XML из файла уведомления об отказе:" + Символы.ПС + ИнформацияОбОшибке().Описание, СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// анализируем XML
	УзелФайл = ДеревоXML.Строки.Найти("Файл", "Имя");
	Если НЕ ЗначениеЗаполнено(УзелФайл) Тогда
		Сообщить("Некорректная структура XML уведомления об отказе: не обнаружен узел ""Файл"".", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	УзелДокумент = УзелФайл.Строки.Найти("Документ", "Имя");
	Если НЕ ЗначениеЗаполнено(УзелДокумент) Тогда
		Сообщить("Некорректная структура XML уведомления об отказе: не обнаружен узел ""Документ"".", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	УзелСведУведОтказ = УзелДокумент.Строки.Найти("СведУведОтказ", "Имя");
	Если НЕ ЗначениеЗаполнено(УзелСведУведОтказ) Тогда
		Сообщить("Некорректная структура XML уведомления об отказе: не обнаружен узел ""СведУведОтказ"".", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	УзелОбщСвУвед = УзелСведУведОтказ.Строки.Найти("ОбщСвУвед", "Имя");
	Если НЕ ЗначениеЗаполнено(УзелОбщСвУвед) Тогда
		Сообщить("Некорректная структура XML уведомления об отказе: не обнаружен узел ""ОбщСвУвед"".", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;

	// анализируем общий перечень нарушений
	УзлыПеречВыявНар = УзелСведУведОтказ.Строки.НайтиСтроки(Новый Структура("Имя", "ПеречВыявНар"));
	Для Каждого УзелПеречВыявНар Из УзлыПеречВыявНар Цикл
		УзелКодОш = УзелПеречВыявНар.Строки.Найти("КодОш", "Имя");
		УзелТекстОш = УзелПеречВыявНар.Строки.Найти("ТекстОш", "Имя");
		Если ЗначениеЗаполнено(УзелКодОш) ИЛИ ЗначениеЗаполнено(УзелТекстОш) Тогда
			
			КодОшибки = ?(ЗначениеЗаполнено(УзелКодОш), СокрЛП(УзелКодОш.Значение), "");
			ТекстОшибки = ?(ЗначениеЗаполнено(УзелТекстОш), СокрЛП(УзелТекстОш.Значение), "");
			
			НовСтр = Ошибки.Добавить();
			НовСтр.КодОшибки = КодОшибки;
			НовСтр.Описание = ТекстОшибки;
			
		КонецЕсли;
	КонецЦикла;
	
	// разбираем узел с перечнем выявленных нарушений
	Если УзлыПеречВыявНар.Количество() = 0 Тогда
		УзлыВыявлНарФайл = УзелСведУведОтказ.Строки.НайтиСтроки(Новый Структура("Имя", "ВыявлНарФайл"));
		Для Каждого УзелВыявНарФайл Из УзлыВыявлНарФайл Цикл
			УзлыПеречВыявНар = УзелВыявНарФайл.Строки.НайтиСтроки(Новый Структура("Имя", "ПеречВыявНар"));
			Для Каждого УзелПеречВыявНар Из УзлыПеречВыявНар Цикл
				УзелКодОш = УзелПеречВыявНар.Строки.Найти("КодОш", "Имя");
				УзелТекстОш = УзелПеречВыявНар.Строки.Найти("ТекстОш", "Имя");
				Если ЗначениеЗаполнено(УзелКодОш) ИЛИ ЗначениеЗаполнено(УзелТекстОш) Тогда
					
					КодОшибки = ?(ЗначениеЗаполнено(УзелКодОш), СокрЛП(УзелКодОш.Значение), "");
					ТекстОшибки = ?(ЗначениеЗаполнено(УзелТекстОш), СокрЛП(УзелТекстОш.Значение), "");
					
					НовСтр = Ошибки.Добавить();
					НовСтр.КодОшибки = КодОшибки;
					НовСтр.Описание = ТекстОшибки;
					
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	СписокПоступившихФайлов = Новый СписокЗначений;
	
	// разбираем узел с общими сведениями
	ОбщиеСведения = Новый Структура;
	УзелОбщСвУвед = УзелСведУведОтказ.Строки.Найти("ОбщСвУвед", "Имя");
	Для Каждого УзелСведение Из УзелОбщСвУвед.Строки Цикл
		Если УзелСведение.Имя = "ИмяПринятФайла" Тогда
			СписокПоступившихФайлов.Добавить(УзелСведение.Значение);
		Иначе
			ОбщиеСведения.Вставить(УзелСведение.Имя, СокрЛП(УзелСведение.Значение));
		КонецЕсли;
	КонецЦикла;
	
	Если ОбщиеСведения.Свойство("ДатаНапр") И ОбщиеСведения.Свойство("ВремНапр") Тогда
		ОбщиеСведения.Вставить("ДатаВремяНапр", ОбщиеСведения.ДатаНапр + " " + ОбщиеСведения.ВремНапр);
	КонецЕсли;
	
	// устанавливаем заголовок страницы панели, содержащей список нарушений
	ЭлементыФормы.ОсновнаяПанель.Страницы.ВыявленныеНарушения.Заголовок = ЭлементыФормы.ОсновнаяПанель.Страницы.ВыявленныеНарушения.Заголовок + " (" + Формат(Ошибки.Количество(), "ЧН=; ЧГ=") + ")";
	
	Если ОбщиеСведения.Свойство("ДатаВремяНапр") Тогда
		ДатаВремяНапр = ОбщиеСведения.ДатаВремяНапр;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("КНД") Тогда
		КНД = ОбщиеСведения.КНД;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("НаимВидДок") Тогда
		НаимВидДок = ОбщиеСведения.НаимВидДок;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("ДатаПост") Тогда
		ДатаПост = ОбщиеСведения.ДатаПост;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыЗакрыть(Кнопка)
	
	Закрыть();
	
КонецПроцедуры

Процедура ОбщиеСведенияОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры