Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Сообщение) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// извлекаем файл сообщения из содержимого сообщения
	СтрСообщенияОПроверке = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Сообщение, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.СообщениеОбОтзывеЗаявления, ИмяФайлаСообщенияОбОтзывеЗаявления);
	Если СтрСообщенияОПроверке.Количество() = 0 Тогда
		Предупреждение("Сообщение об отзыве заявления не обнаружено среди содержимого сообщения.");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	СтрСообщениеОПроверке = СтрСообщенияОПроверке[0];
	
	// записываем вложение во временный файл
	ФайлСообщенияОПроверке = ПолучитьИмяВременногоФайла("xml");
	Попытка
		СтрСообщениеОПроверке.Данные.Получить().Записать(ФайлСообщенияОПроверке);
	Исключение
		Сообщить("Ошибка выгрузки сообщения об отзыве заявления:" + Символы.ПС + ИнформацияОбОшибке().Описание, СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат;
	КонецПопытки;
	
	// считываем сообщение о проверке из файла в дерево XML
	ОписаниеОшибки = "";
	ДеревоXML = КонтекстЭДО.ЗагрузитьXMLВДеревоЗначений(ФайлСообщенияОПроверке, , ОписаниеОшибки);
	КонтекстЭДО.УдалитьВременныйФайл(ФайлСообщенияОПроверке);
	Если НЕ ЗначениеЗаполнено(ДеревоXML) Тогда
		Сообщить("Ошибка чтения XML из файла сообщения об отзыве заявления:" + Символы.ПС + ИнформацияОбОшибке().Описание, СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// анализируем XML
	УзелФайл = ДеревоXML.Строки.Найти("Файл", "Имя");
	Если НЕ ЗначениеЗаполнено(УзелФайл) Тогда
		Сообщить("Некорректная структура XML сообщения об отзыве заявления: не обнаружен узел ""Файл"".", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	УзелДокумент = УзелФайл.Строки.Найти("Документ", "Имя");
	Если НЕ ЗначениеЗаполнено(УзелДокумент) Тогда
		Сообщить("Некорректная структура XML сообщения об отзыве заявления: не обнаружен узел ""Документ"".", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	УзелСвОтзыв = УзелДокумент.Строки.Найти("СвОтзыв", "Имя");
	Если НЕ ЗначениеЗаполнено(УзелСвОтзыв) Тогда
		Сообщить("Некорректная структура XML сообщения об отзыве заявления: не обнаружен узел ""СвОтзыв"".", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	// разбираем узел с общими сведениями
	ОбщиеСведения = Новый Структура;
	Для Каждого УзелОбщСвед Из УзелСвОтзыв.Строки Цикл
		ОбщиеСведения.Вставить(УзелОбщСвед.Имя, СокрЛП(УзелОбщСвед.Значение));
	КонецЦикла;
	
	// разбираем сведения об отметке
	УзелПричЗам = УзелСвОтзыв.Строки.Найти("ПричЗам", "Имя");
	Если НЕ ЗначениеЗаполнено(УзелПричЗам) Тогда
		Сообщить("Некорректная структура XML сообщения об отзыве заявления: не обнаружен узел ""ПричЗам"".", СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат;
	Иначе
		КодПричЗам = СокрЛП(УзелПричЗам.Значение);
		Если КодПричЗам = "001" Тогда
			ПричЗам = "По инициативе налогоплательщика";
		ИначеЕсли КодПричЗам = "002" Тогда
			ПричЗам = "По инициативе налогового органа";
		Иначе
			Сообщить("Некорректная структура XML сообщения об отзыве заявления: некорректное значение узла ""ПричЗам"".", СтатусСообщения.Важное);
			Отказ = Истина;
			Возврат;	
		КонецЕсли;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("НомерДокНП") Тогда
		НомерДокНП = ОбщиеСведения.НомерДокНП;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("ДатаДокНП") Тогда
		ДатаДокНП = ОбщиеСведения.ДатаДокНП;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("РегНомДок") Тогда
		РегНомДок = ОбщиеСведения.РегНомДок;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("ДатаРегЭл") Тогда
		ДатаРегЭл = ОбщиеСведения.ДатаРегЭл;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("ДатаРегБум") Тогда
		ДатаРегБум = ОбщиеСведения.ДатаРегБум;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("ДатаОснОтз") Тогда
		ДатаОснОтз = ОбщиеСведения.ДатаОснОтз;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("КодСтранПрод1") Тогда
		КодСтранПрод1 = ОбщиеСведения.КодСтранПрод1;
	КонецЕсли;

	
КонецПроцедуры

Процедура ОсновныеДействияФормыЗакрыть(Кнопка)
	
	Закрыть();
	
КонецПроцедуры

Процедура ОбщиеСведенияОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры