Перем СоответствиеВидаОтбораЦикловОбменаСтраницеПанелиОтбора;
Перем СоответствиеИмениКнопкиПодменюОтправкаКодуДействия;
Перем ДатаКонцаПериодаОтбора;
Перем ВыбранныеЭлементы;

Процедура УправлениеОтборамиТаблицыЦикловОбмена()
		
	Если ЭлементыФормы.ДействияФормы.Кнопки.ОтображатьСписокЦикловОбмена.Пометка Тогда
		ТекДанные = ЭлементыФормы.СправочникСписок.ТекущиеДанные;
		Если ТекДанные = Неопределено ИЛИ ТипЗнч(ТекДанные.Ссылка.ВидОтчета) = Тип("СправочникСсылка.РегламентированныеОтчеты") Тогда
			// отображаются циклы обмена с ФНС
			ЭлементыФормы.ПанельОбмен.ТекущаяСтраница = ЭлементыФормы.ПанельОбмен.Страницы.СтраницаФНС;
			ЦиклыОбмена.Отбор.Предмет.Установить(Справочники.ЭлектронныеПредставленияРегламентированныхОтчетов.ПустаяСсылка());
		Иначе
			ВидОтправляемогоДокумента = ТекДанные.Ссылка.ВидОтчета;
			Если ВидОтправляемогоДокумента.ТипПолучателя = Перечисления.ТипыКонтролирующихОрганов.ФНС Тогда
				Если ВидОтправляемогоДокумента.ТипДокумента = Перечисления.ТипыОтправляемыхДокументов.ЗаявлениеОВвозеТоваров Тогда
					ЭлементыФормы.ПанельОбмен.ТекущаяСтраница = ЭлементыФормы.ПанельОбмен.Страницы.СтраницаЗаявление;
					ЦиклыОбменаЗаявление.Отбор.Предмет.Установить(ТекДанные.Ссылка);
				Иначе
					ЭлементыФормы.ПанельОбмен.ТекущаяСтраница = ЭлементыФормы.ПанельОбмен.Страницы.СтраницаФНС;
					ЦиклыОбмена.Отбор.Предмет.Установить(ТекДанные.Ссылка);
				КонецЕсли;
			ИначеЕсли ВидОтправляемогоДокумента.ТипПолучателя = Перечисления.ТипыКонтролирующихОрганов.ПФР Тогда	
				ЭлементыФормы.ПанельОбмен.ТекущаяСтраница = ЭлементыФормы.ПанельОбмен.Страницы.СтраницаПФР;
				ЦиклыОбменаПФР.Отбор.Предмет.Установить(ТекДанные.Ссылка);
			ИначеЕсли ВидОтправляемогоДокумента.ТипПолучателя = Перечисления.ТипыКонтролирующихОрганов.ФСС Тогда
				ЭлементыФормы.ПанельОбмен.ТекущаяСтраница = ЭлементыФормы.ПанельОбмен.Страницы.СтраницаФСС;
				ОтправкиФСС.Отбор.ОтчетСсылка.Установить(ТекДанные.Ссылка);
			ИначеЕсли ВидОтправляемогоДокумента.ТипПолучателя = Перечисления.ТипыКонтролирующихОрганов.ФСГС Тогда
				ЭлементыФормы.ПанельОбмен.ТекущаяСтраница = ЭлементыФормы.ПанельОбмен.Страницы.СтраницаФСГС;
				ЦиклыОбменаФСГС.Отбор.Предмет.Установить(ТекДанные.Ссылка);
			КонецЕсли;
		КонецЕсли;
	Иначе
		ЦиклыОбмена.Отбор.Предмет.Использование = Ложь;
		ЦиклыОбменаЗаявление.Отбор.Предмет.Использование = Ложь;
		ЦиклыОбменаПФР.Отбор.Предмет.Использование = Ложь;
		ЦиклыОбменаФСГС.Отбор.Предмет.Использование = Ложь;
		ОтправкиФСС.Отбор.ОтчетСсылка.Использование = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура УправлениеПоказомТаблицыЦикловОбмена()
	
	Если ЭлементыФормы.ДействияФормы.Кнопки.ОтображатьСписокЦикловОбмена.Пометка Тогда
		Если ЭлементыФормы.РазделительЦиклыОбмена.Свертка = РежимСверткиЭлементаУправления.Нет Тогда
			Возврат;
		КонецЕсли;
		ЭлементыФормы.РазделительЦиклыОбмена.Свертка = РежимСверткиЭлементаУправления.Нет;
		ЭлементыФормы.ПанельОбмен.Свертка = РежимСверткиЭлементаУправления.Нет;
		ЭлементыФормы.СправочникСписок.Высота = ЭлементыФормы.СправочникСписок.Высота - ЭлементыФормы.РазделительЦиклыОбмена.Высота - ЭлементыФормы.ЦиклыОбмена.Высота;
		ЭлементыФормы.СправочникСписок.УстановитьПривязку(ГраницаЭлементаУправления.Низ, ЭлементыФормы.РазделительЦиклыОбмена, ГраницаЭлементаУправления.Верх);
	Иначе
		Если ЭлементыФормы.РазделительЦиклыОбмена.Свертка = РежимСверткиЭлементаУправления.Низ Тогда
			Возврат;
		КонецЕсли;
		ВерхняяКоордината = ЭлементыФормы.ЦиклыОбмена.Верх;
		ВысотаДоРасширения = ЭлементыФормы.ЦиклыОбмена.Высота;
		ЭлементыФормы.РазделительЦиклыОбмена.Свертка = РежимСверткиЭлементаУправления.Низ;
		ЭлементыФормы.ПанельОбмен.Свертка = РежимСверткиЭлементаУправления.Низ;
		ЭлементыФормы.СправочникСписок.Высота = ЭлементыФормы.СправочникСписок.Высота + ВысотаДоРасширения + ЭлементыФормы.РазделительЦиклыОбмена.Высота;
		ЭлементыФормы.СправочникСписок.УстановитьПривязку(ГраницаЭлементаУправления.Низ, Панель, ГраницаЭлементаУправления.Низ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВосстановитьЗначения()
	
	// восстанавливаем признак показа панели с циклами обмена
	сохрОтображатьСписокЦикловОбмена = ВосстановитьЗначение("ЭлектронныеПредставленияРегламентированныхОтчетов_ОтображатьСписокЦикловОбмена");
	ЭлементыФормы.ДействияФормы.Кнопки.ОтображатьСписокЦикловОбмена.Пометка = (сохрОтображатьСписокЦикловОбмена = Истина);
	
	// восстанавливаем признак дополнительного отбора по реквизитам отчета
	сохрДополнительныйОтбор = ВосстановитьЗначение("ЭлектронныеПредставленияРегламентированныхОтчетов_ДополнительныйОтбор");
	ЭлементыФормы.ДействияФормы.Кнопки.ДополнительныйОтбор.Пометка = (сохрДополнительныйОтбор = Истина);
	
	// восстанавливаем вид дополнительного отбора
	СохрВидДополнительногоОтбора = ВосстановитьЗначение("ФормаСпискаСправочникаЭлектронныеПредставленияРегламентированныхОтчетов_ВидДополнительногоОтбора");
	Если СоответствиеВидаОтбораЦикловОбменаСтраницеПанелиОтбора[СохрВидДополнительногоОтбора] = Неопределено Тогда
		Для Каждого ТипОтбора Из СоответствиеВидаОтбораЦикловОбменаСтраницеПанелиОтбора Цикл
			ВидДополнительногоОтбора = ТипОтбора.Ключ;
			Прервать;
		КонецЦикла;
	Иначе
		ВидДополнительногоОтбора = СохрВидДополнительногоОтбора;
	КонецЕсли;
	
	// восстанавливаем вид отчета для отбора
	ВидОтчетаДляОтбора = ВосстановитьЗначение("ЭлектронныеПредставленияРегламентированныхОтчетов_ВидОтчетаДляОтбора");
	
	// восстанавливаем вид документа (П/К) для отбора
	сохрВидДокумента = ВосстановитьЗначение("ЭлектронныеПредставленияРегламентированныхОтчетов_ВидДокумента");
	ВидДокумента = ?(сохрВидДокумента = Неопределено, 0, 1);
	
	// восстанавливаем признак уточнения номера корректировки для отбора
	сохрУточнениеНомераКорректировки = ВосстановитьЗначение("ЭлектронныеПредставленияРегламентированныхОтчетов_УточнениеНомераКорректировки");
	УточнениеНомераКорректировки = (сохрУточнениеНомераКорректировки = Истина);
	
	// восстанавливааем номер корректировки для отбора
	сохрНомерКорректировки = ВосстановитьЗначение("ЭлектронныеПредставленияРегламентированныхОтчетов_НомерКорректировки");
	НомерКорректировки = ?(сохрНомерКорректировки = Неопределено, 1, сохрНомерКорректировки);
	
	// восстанавливаем период отбора
	сохрДатаКонцаПериодаОтбора = ВосстановитьЗначение("ЭлектронныеПредставленияРегламентированныхОтчетов_ДатаКонцаПериодаОтбора");
	Если сохрДатаКонцаПериодаОтбора = Неопределено Тогда
		ДатаКонцаПериодаОтбора = ДобавитьМесяц(РабочаяДата, -1);
	Иначе
		ДатаКонцаПериодаОтбора = сохрДатаКонцаПериодаОтбора;
	КонецЕсли;
	ДатаКонцаПериодаОтбора = КонецМесяца(ДатаКонцаПериодаОтбора);
	
	// восстанавливаем организацию
	сохрОрганизация = ВосстановитьЗначение("ЭлектронныеПредставленияРегламентированныхОтчетов_Организация");
	Если ТипЗнч(сохрОрганизация) = Тип("Массив") Тогда
		Организация.ЗагрузитьЗначения(сохрОрганизация);
	ИначеЕсли ТипЗнч(сохрОрганизация) = Тип("СписокЗначений") Тогда
		Организация = сохрОрганизация;
	КонецЕсли;
	
	// восстанавливаем тип получателя
	сохрТипПолучателя = ВосстановитьЗначение("ЭлектронныеПредставленияРегламентированныхОтчетов_ТипПолучателя");
	Если сохрТипПолучателя <> Неопределено Тогда
		ТипПолучателя = сохрТипПолучателя;
	КонецЕсли;
	
	// восстанавливаем получателя
	сохрПолучатель = ВосстановитьЗначение("ЭлектронныеПредставленияРегламентированныхОтчетов_Получатель");
	Если сохрПолучатель <> Неопределено Тогда
		Получатель = сохрПолучатель;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаблокироватьКнопкуЗагрузкиПриНеобходимости()
	
	ИдКонф = РегламентированнаяОтчетность.ИДКонфигурации();
	Если ИдКонф <> "ЗУП" И ИдКонф <> "ЗБУ" И ИдКонф <> "ЗУПКОРП" Тогда
		Возврат;
	КонецЕсли;
	
	// если электронный документооборот не используется, то не даем добавлять новые элементы
	ЭлектронныйДокументооборотАктивен = КонтекстЭДО <> Неопределено И КонтекстЭДО.ЭлектронныйДокументооборотИспользуется();
	Если НЕ ЭлектронныйДокументооборотАктивен Тогда
		ЭлементыФормы.ДействияФормы.Кнопки.Удалить(ЭлементыФормы.ДействияФормы.Кнопки.Загрузить);
		ЭлементыФормы.ДействияФормы.Кнопки.Удалить(ЭлементыФормы.ДействияФормы.Кнопки.Скопировать);
		Возврат;
	КонецЕсли;
	
	// получаем число организаций, по которым включен обмен с ФНС или Росстатом
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Организации.Ссылка) КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Организации КАК Организации
	                      |ГДЕ
	                      |	Организации.ВидОбменаСКонтролирующимиОрганами = &ВидОбменаСКонтролирующимиОрганами
	                      |	И (Организации.УчетнаяЗаписьОбмена.ПредназначенаДляДокументооборотаСФНС = ИСТИНА
	                      |			ИЛИ Организации.УчетнаяЗаписьОбмена.ПредназначенаДляДокументооборотаСФСГС = ИСТИНА)");
	Запрос.УстановитьПараметр("ВидОбменаСКонтролирующимиОрганами", Перечисления.ВидыОбменаСКонтролирующимиОрганами.ОбменВУниверсальномФормате);
	
	// если не удалось получить, то нет доступа - блокируем функцию загрузки
	Попытка
		Выборка = Запрос.Выполнить().Выбрать();
	Исключение
		ЭлементыФормы.ДействияФормы.Кнопки.Удалить(ЭлементыФормы.ДействияФормы.Кнопки.Загрузить);
		ЭлементыФормы.ДействияФормы.Кнопки.Удалить(ЭлементыФормы.ДействияФормы.Кнопки.Скопировать);
		Возврат;
	КонецПопытки;
	
	// 
	Если НЕ Выборка.Следующий() Тогда
		ЭлементыФормы.ДействияФормы.Кнопки.Удалить(ЭлементыФормы.ДействияФормы.Кнопки.Загрузить);
		ЭлементыФормы.ДействияФормы.Кнопки.Удалить(ЭлементыФормы.ДействияФормы.Кнопки.Скопировать);
		Возврат;
	Иначе
		Если Выборка.Ссылка = 0 Тогда
			ЭлементыФормы.ДействияФормы.Кнопки.Удалить(ЭлементыФормы.ДействияФормы.Кнопки.Загрузить);
			ЭлементыФормы.ДействияФормы.Кнопки.Удалить(ЭлементыФормы.ДействияФормы.Кнопки.Скопировать);
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ РежимВыбора Тогда
		ЭлементыФормы.ДействияФормы.Кнопки.Удалить(0);
		ЭлементыФормы.ДействияФормы.Кнопки.Удалить(0);
	КонецЕсли;
	
	ВосстановитьЗначения();
	
	// блокируем кнопку Загрузить при необходимости
	ЗаблокироватьКнопкуЗагрузкиПриНеобходимости();
	
	// позволяем сортировать основной список по любому реквизиту
	Для Каждого ЭлементПорядка Из ЭлементыФормы.СправочникСписок.НастройкаПорядка Цикл
		ЭлементПорядка.Доступность = Истина;
	КонецЦикла;
	
	// отключаем стандартные отборы в основном списке
	Для Каждого Настройка Из ЭлементыФормы.СправочникСписок.НастройкаОтбора Цикл
		Настройка.Доступность = Ложь;
	КонецЦикла;
	
	// устанавливаем обязательные отборы в списке циклов обмена
	ЭлементыФормы.ЦиклыОбмена.НастройкаОтбора.ПометкаУдаления.Доступность = Ложь;
	ЭлементыФормы.ЦиклыОбмена.НастройкаОтбора.Тип.Доступность = Ложь;
	ЦиклыОбмена.Отбор.ПометкаУдаления.Установить(Ложь);
	
	ЦиклыОбмена.Отбор.Тип.ВидСравнения = ВидСравнения.ВСписке;
	ЦиклыОбмена.Отбор.Тип.Значение.Очистить();
	ЦиклыОбмена.Отбор.Тип.Значение.Добавить(Перечисления.ТипыЦикловОбмена.НалоговаяИлиБухгалтерскаяОтчетность);
	ЦиклыОбмена.Отбор.Тип.Значение.Добавить(Перечисления.ТипыЦикловОбмена.Форма2НДФЛ);
	ЦиклыОбмена.Отбор.Тип.Использование = Истина;
	
	// устанавливаем обязательные отборы в списке циклов обмена заявления
	ЭлементыФормы.ЦиклыОбменаЗаявление.НастройкаОтбора.ПометкаУдаления.Доступность = Ложь;
	ЭлементыФормы.ЦиклыОбменаЗаявление.НастройкаОтбора.Тип.Доступность = Ложь;
	ЦиклыОбменаЗаявление.Отбор.ПометкаУдаления.Установить(Ложь);
	
	ЦиклыОбменаЗаявление.Отбор.Тип.ВидСравнения = ВидСравнения.Равно;
	ЦиклыОбменаЗаявление.Отбор.Тип.Значение = Перечисления.ТипыЦикловОбмена.Заявление;
	ЦиклыОбменаЗаявление.Отбор.Тип.Использование = Истина;
	
	// устанавливаем обязательные отборы в списке циклов обмена ПФР
	ЭлементыФормы.ЦиклыОбменаПФР.НастройкаОтбора.ПометкаУдаления.Доступность = Ложь;
	ЭлементыФормы.ЦиклыОбменаПФР.НастройкаОтбора.Тип.Доступность = Ложь;
	ЦиклыОбменаПФР.Отбор.ПометкаУдаления.Установить(Ложь);
	
	ЦиклыОбменаПФР.Отбор.Тип.ВидСравнения = ВидСравнения.Равно;
	ЦиклыОбменаПФР.Отбор.Тип.Значение = Перечисления.ТипыЦикловОбмена.ОтчетностьПФР;
	ЦиклыОбменаПФР.Отбор.Тип.Использование = Истина;
	
	// устанавливаем обязательные отборы в списке отправок ФСС
	ЭлементыФормы.ОтправкиФСС.НастройкаОтбора.ПометкаУдаления.Доступность = Ложь;
	ОтправкиФСС.Отбор.ПометкаУдаления.Установить(Ложь);
	
	// устанавливаем обязательные отборы в списке циклов обмена с Росстатом
	ЭлементыФормы.ЦиклыОбменаФСГС.НастройкаОтбора.ПометкаУдаления.Доступность = Ложь;
	ЭлементыФормы.ЦиклыОбменаФСГС.НастройкаОтбора.Тип.Доступность = Ложь;
	ЦиклыОбменаФСГС.Отбор.ПометкаУдаления.Установить(Ложь);
	
	ЦиклыОбменаФСГС.Отбор.Тип.ВидСравнения = ВидСравнения.Равно;
	ЦиклыОбменаФСГС.Отбор.Тип.Значение = Перечисления.ТипыЦикловОбмена.ОтчетностьФСГС;
	ЦиклыОбменаФСГС.Отбор.Тип.Использование = Истина;
	
	// пытаемся установить организацию по умолчанию
	ОргПоУмолчанию = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	УчетПоВсемОрганизациям = РегламентированнаяОтчетность.ПолучитьПризнакУчетаПоВсемОрганизациям();
	Если ЗначениеЗаполнено(ОргПоУмолчанию) И НЕ УчетПоВсемОрганизациям Тогда
		Организация.Очистить();
		Организация.Добавить(ОргПоУмолчанию);
		ЭлементыФормы.Организация.ТолькоПросмотр = Истина;
	ИначеЕсли Организация.Количество() = 0 И УчетПоВсемОрганизациям И ЗначениеЗаполнено(ОргПоУмолчанию) Тогда
		Организация.Добавить(ОргПоУмолчанию);
	КонецЕсли;
	
	УправлениеПоказомТаблицыЦикловОбмена();
	УправлениеОтборамиТаблицыЦикловОбмена();
	
	ПоказатьПериод();
	УправлениеЭУ();
	УстановитьОтборы();
	
КонецПроцедуры

Процедура СправочникСписокПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		ОформлениеСтроки.Ячейки.Период.УстановитьТекст(ПредставлениеПериода(ОформлениеСтроки.ДанныеСтроки.ДатаНачала, КонецДня(ОформлениеСтроки.ДанныеСтроки.ДатаОкончания), "ФП=Истина"));
		ОформлениеСтроки.Ячейки.Версия.УстановитьТекст(РегламентированнаяОтчетность.ПредставлениеВидаДокумента(ОформлениеСтроки.ДанныеСтроки.Версия));
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	СохранитьЗначения();
	
КонецПроцедуры

Процедура СохранитьЗначения()
	
	СохранитьЗначение("ЭлектронныеПредставленияРегламентированныхОтчетов_ОтображатьСписокЦикловОбмена", ЭлементыФормы.ДействияФормы.Кнопки.ОтображатьСписокЦикловОбмена.Пометка);
	СохранитьЗначение("ЭлектронныеПредставленияРегламентированныхОтчетов_ДополнительныйОтбор", ЭлементыФормы.ДействияФормы.Кнопки.ДополнительныйОтбор.Пометка);
	СохранитьЗначение("ЭлектронныеПредставленияРегламентированныхОтчетов_ВидДополнительногоОтбора", ВидДополнительногоОтбора);
	СохранитьЗначение("ЭлектронныеПредставленияРегламентированныхОтчетов_ВидОтчетаДляОтбора", ВидОтчетаДляОтбора);
	СохранитьЗначение("ЭлектронныеПредставленияРегламентированныхОтчетов_ВидДокумента", ВидДокумента);
	СохранитьЗначение("ЭлектронныеПредставленияРегламентированныхОтчетов_УточнениеНомераКорректировки", УточнениеНомераКорректировки);
	СохранитьЗначение("ЭлектронныеПредставленияРегламентированныхОтчетов_НомерКорректировки", НомерКорректировки);
	СохранитьЗначение("ЭлектронныеПредставленияРегламентированныхОтчетов_ДатаКонцаПериодаОтбора", ДатаКонцаПериодаОтбора);
	СохранитьЗначение("ЭлектронныеПредставленияРегламентированныхОтчетов_Организация", Организация);
	СохранитьЗначение("ЭлектронныеПредставленияРегламентированныхОтчетов_ТипПолучателя", ТипПолучателя);
	СохранитьЗначение("ЭлектронныеПредставленияРегламентированныхОтчетов_Получатель", Получатель);
	
КонецПроцедуры

Процедура ДействияФормыОтображатьСписокЦикловОбмена(Кнопка)
	
	Кнопка.Пометка = НЕ Кнопка.Пометка;
	УправлениеПоказомТаблицыЦикловОбмена();
	УправлениеОтборамиТаблицыЦикловОбмена();
	
КонецПроцедуры

Процедура ЦиклыОбменаВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	КонтекстЭДО.ВыборВТабличномПолеЦикловОбмена(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ЦиклыОбменаПриПолученииДанных(Элемент, ОформленияСтрок)
	
	КонтекстЭДО.ПриПолученииДанныхВТабличномПолеЦикловОбмена(Элемент, ОформленияСтрок);
	Возврат;
	
КонецПроцедуры

Процедура СправочникСписокПриАктивизацииСтроки(Элемент)
	
	УправлениеОтборамиТаблицыЦикловОбмена();
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Изменение сообщения" И ТипЗнч(Параметр) = Тип("Структура") Тогда
		ЭлементыФормы.ЦиклыОбмена.ОбновитьСтроки(Параметр.ЦиклОбмена);
		ЭлементыФормы.ЦиклыОбменаЗаявление.ОбновитьСтроки(Параметр.ЦиклОбмена);
		ЭлементыФормы.ЦиклыОбменаПФР.ОбновитьСтроки(Параметр.ЦиклОбмена);
		ЭлементыФормы.ЦиклыОбменаФСГС.ОбновитьСтроки(Параметр.ЦиклОбмена);
	ИначеЕсли ИмяСобытия = "Опрос форм" И Параметр.Ключ = "Справочник_ЭлектронныеПредставленияРегламентированныхОтчетов_ФормаСписка" Тогда
		Параметр.Форма = ЭтаФорма;
	КонецЕсли;
	
КонецПроцедуры

Процедура УправлениеЭУ()
	
	ЭлементыФормы.ПанельДополнительныйОтбор.Свертка = ?(ЭлементыФормы.ДействияФормы.Кнопки.ДополнительныйОтбор.Пометка, РежимСверткиЭлементаУправления.Нет, РежимСверткиЭлементаУправления.Верх);
	Если ЭлементыФормы.ПанельДополнительныйОтбор.Свертка = РежимСверткиЭлементаУправления.Нет Тогда
		ЭлементыФормы.ПанельЗначениеДополнительногоОтбора.ТекущаяСтраница = СоответствиеВидаОтбораЦикловОбменаСтраницеПанелиОтбора[ВидДополнительногоОтбора];
		ЭлементыФормы.ПанельЦиклыОбменаОтборПоПериодуОтчета.Свертка = ?(ВидДополнительногоОтбора = "По периоду отчета", РежимСверткиЭлементаУправления.Нет, РежимСверткиЭлементаУправления.Верх);
	Иначе
		ЭлементыФормы.ПанельЦиклыОбменаОтборПоПериодуОтчета.Свертка = РежимСверткиЭлементаУправления.Верх;
	КонецЕсли;
	ЭлементыФормы.ФлажокУточнениеНомераКорректировки.Доступность = (ВидДокумента = 1);
	ЭлементыФормы.НомерКорректировки.Доступность = УточнениеНомераКорректировки И (ВидДокумента = 1);
	
КонецПроцедуры

Процедура ДействияФормыДополнительныйОтбор(Кнопка)
	
	Кнопка.Пометка = НЕ Кнопка.Пометка;
	УправлениеЭУ();
	УстановитьОтборы();
	
КонецПроцедуры

Процедура ВидДополнительногоОтбораНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СписокВидовОтбораЦикловОбмена = Новый СписокЗначений;
	Для Каждого ВидОтбора из СоответствиеВидаОтбораЦикловОбменаСтраницеПанелиОтбора Цикл
		СписокВидовОтбораЦикловОбмена.Добавить(ВидОтбора.Ключ);
	КонецЦикла;
	РезультатВыбора = ВыбратьИзСписка(СписокВидовОтбораЦикловОбмена, , СписокВидовОтбораЦикловОбмена.НайтиПоЗначению(Элемент.Значение));
	Если РезультатВыбора <> Неопределено Тогда
		Элемент.Значение = РезультатВыбора.Значение;
		УправлениеЭУ();
		УстановитьОтборы();
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьОтборы() Экспорт
	
	// управление отбором по организации
	СправочникСписок.Отбор.Организация.Использование = Ложь;
	Если Организация.Количество() <> 0 Тогда
		СправочникСписок.Отбор.Организация.ВидСравнения = ВидСравнения.ВСписке;
		СправочникСписок.Отбор.Организация.Значение = Организация;
		СправочникСписок.Отбор.Организация.Использование = Истина;
	КонецЕсли;
	
	// управление отбором по получателю
	Если ЗначениеЗаполнено(ТипПолучателя) Тогда
		СправочникСписок.Отбор.ТипПолучателя.Установить(ТипПолучателя);
	Иначе
		СправочникСписок.Отбор.ТипПолучателя.Использование = Ложь;
	КонецЕсли;
	
	// управление отбором по получателю
	Если ЗначениеЗаполнено(Получатель) Тогда
		СправочникСписок.Отбор.Получатель.Установить(Получатель);
	Иначе
		СправочникСписок.Отбор.Получатель.Использование = Ложь;
	КонецЕсли;
	
	ДопОтборВключен = ЭлементыФормы.ДействияФормы.Кнопки.ДополнительныйОтбор.Пометка;
	
	// управление отбором по виду отчета
	Если ДопОтборВключен И ВидДополнительногоОтбора = "По виду отчета" И ЗначениеЗаполнено(ВидОтчетаДляОтбора) Тогда
		Если ВидОтчетаДляОтбора.ЭтоГруппа Тогда
			СправочникСписок.Отбор.ВидОтчета.ВидСравнения = ВидСравнения.ВИерархии;
			СправочникСписок.Отбор.ВидОтчета.Значение = ВидОтчетаДляОтбора;
			СправочникСписок.Отбор.ВидОтчета.Использование = Истина;
		Иначе
			СправочникСписок.Отбор.ВидОтчета.Установить(ВидОтчетаДляОтбора);
		КонецЕсли;
	Иначе
		СправочникСписок.Отбор.ВидОтчета.Использование = Ложь;
	КонецЕсли;
	
	// управление отбором по периоду отчета
	Если ДопОтборВключен И ВидДополнительногоОтбора = "По периоду отчета" Тогда
		СправочникСписок.Отбор.ДатаОкончания.Установить(ДатаКонцаПериодаОтбора);
	Иначе
		СправочникСписок.Отбор.ДатаОкончания.Использование = Ложь;
	КонецЕсли;
	
	// управление отбором по виду документа
	Если ДопОтборВключен И ВидДополнительногоОтбора = "По виду документа" Тогда
		Если ВидДокумента = 0 Тогда
			СправочникСписок.Отбор.Версия.Установить(ВидДокумента);
		ИначеЕсли ВидДокумента = 1 И НЕ УточнениеНомераКорректировки Тогда
			СправочникСписок.Отбор.Версия.ВидСравнения = ВидСравнения.НеРавно;
			СправочникСписок.Отбор.Версия.Значение = 0;
			СправочникСписок.Отбор.Версия.Использование = Истина;
		Иначе
			СправочникСписок.Отбор.Версия.Установить(ВидДокумента * НомерКорректировки);
		КонецЕсли;
	Иначе
		СправочникСписок.Отбор.Версия.Использование = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВидДополнительногоОтбораОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

Процедура ПереключательВидДокументаПриИзменении(Элемент)
	
	УправлениеЭУ();
	УстановитьОтборы();
	
КонецПроцедуры

Процедура НомерКорректировкиПриИзменении(Элемент)
	
	УстановитьОтборы();
	
КонецПроцедуры

Процедура ФлажокУточнениеНомераКорректировкиПриИзменении(Элемент)
	
	УправлениеЭУ();
	УстановитьОтборы();
	
КонецПроцедуры

Процедура НадписьМесяцНажатие(Элемент)
	
	МесяцМинус1 = Число(Сред(Элемент.Имя, 13)) - 1;
	ПриИзмененииМесяца();
	
КонецПроцедуры

Процедура ПриИзмененииМесяца()
	
	Месяц = МесяцМинус1 + 1;
	ДатаКонцаПериодаОтбора = КонецМесяца(Дата(Год, Месяц, 1));
	УправлениеНадписямиМесяцев();
	УстановитьОтборы();
	
КонецПроцедуры

Процедура УправлениеНадписямиМесяцев()
	
	Месяц = Месяц(ДатаКонцаПериодаОтбора);
	Для Сч = 0 По 11 Цикл
		Если Сч = Месяц - 1 Тогда
			ЭлементыФормы["НадписьМесяц" + (Сч + 1)].ЦветТекста = Новый Цвет(0, 0, 255);
		Иначе
			ЭлементыФормы["НадписьМесяц" + (Сч + 1)].ЦветТекста = Новый Цвет();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПоказатьПериод()

	Год = Год(ДатаКонцаПериодаОтбора);
	МесяцМинус1 = Месяц(ДатаКонцаПериодаОтбора) - 1;
	УправлениеНадписямиМесяцев();

КонецПроцедуры

Процедура ГодПриИзменении(Элемент)
	
	ДатаКонцаПериодаОтбора = Дата(Год, Месяц(ДатаКонцаПериодаОтбора), День(КонецМесяца(Дата(Год, Месяц(ДатаКонцаПериодаОтбора), 1))));
	УстановитьОтборы();
	
КонецПроцедуры

Процедура ПолосаРегулированияПериодаПриИзменении(Элемент)
	
	ПриИзмененииМесяца();
	
КонецПроцедуры

Процедура ВидОтчетаПриИзменении(Элемент)
	
	УстановитьОтборы();
	
КонецПроцедуры

Процедура ВидОтчетаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	
	УстановитьОтборы();
	
КонецПроцедуры

Процедура ОрганизацияНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Обработки.ОбщиеОбъектыРегламентированнойОтчетности.ПолучитьФорму("ФормаВыбораОрганизаций", ЭтаФорма).ОткрытьМодально();
	
КонецПроцедуры

Процедура ОрганизацияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	Организации.Ссылка
	                      |ИЗ
	                      |	Справочник.Организации КАК Организации
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Организации.Наименование");
	СписокОрганизаций = Новый СписокЗначений;
	СписокОрганизаций.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.Прямой).ВыгрузитьКолонку("Ссылка"));
	РезультатВыбора = ВыбратьИзСписка(СписокОрганизаций, Элемент, ?(Элемент.Значение.Количество() = 1, СписокОрганизаций.НайтиПоЗначению(Элемент.Значение.Получить(0).Значение), Неопределено));
	Если РезультатВыбора <> Неопределено Тогда
		Элемент.Значение.Очистить();
		Элемент.Значение.Добавить(РезультатВыбора.Значение);
		УстановитьОтборы();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОрганизацияОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Элемент.Значение.Количество() = 1 Тогда
		Элемент.Значение.Получить(0).Значение.ПолучитьФорму().Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучательПриИзменении(Элемент)
	
	УстановитьОтборы();
	
КонецПроцедуры

Процедура ДействияФормыЖурналОбмена(Кнопка)
	
	КонтекстЭДО.ПолучитьФорму("УправлениеОбменом").Открыть();
	
КонецПроцедуры

Процедура ТипПолучателяПриИзменении(Элемент)
	
	ВыбранныйТипПолучателя = Элемент.Значение;
	Если ЗначениеЗаполнено(ВыбранныйТипПолучателя) Тогда
		
        МассивТипов = Новый Массив;

		Если ВыбранныйТипПолучателя = Перечисления.ТипыКонтролирующихОрганов.ФНС Тогда
			МассивТипов.Добавить(Тип("СправочникСсылка.НалоговыеОрганы"));
			ДопустимыйТип = Новый ОписаниеТипов(МассивТипов);
			ЗначениеПолучателя = Справочники.НалоговыеОрганы.ПустаяСсылка();
		ИначеЕсли ВыбранныйТипПолучателя = Перечисления.ТипыКонтролирующихОрганов.ПФР Тогда
			МассивТипов.Добавить(Тип("СправочникСсылка.ОрганыПФР"));
			ДопустимыйТип = Новый ОписаниеТипов(МассивТипов);
			ЗначениеПолучателя = Справочники.ОрганыПФР.ПустаяСсылка();
		ИначеЕсли ВыбранныйТипПолучателя = Перечисления.ТипыКонтролирующихОрганов.ФСС Тогда
			МассивТипов.Добавить(Тип("Строка"));
			ПараметрыСтроки = Новый КвалификаторыСтроки(4);
			ДопустимыйТип = Новый ОписаниеТипов(МассивТипов, , ПараметрыСтроки);
			ЗначениеПолучателя = "";
		ИначеЕсли ВыбранныйТипПолучателя = Перечисления.ТипыКонтролирующихОрганов.ФСГС Тогда
			МассивТипов.Добавить(Тип("СправочникСсылка.ОрганыФСГС"));
			ДопустимыйТип = Новый ОписаниеТипов(МассивТипов);
			ЗначениеПолучателя = Справочники.ОрганыФСГС.ПустаяСсылка();
		КонецЕсли;
		
		ЭлементыФормы.Получатель.ОграничениеТипа = ДопустимыйТип;
		ЭлементыФормы.Получатель.Значение = ЗначениеПолучателя;
		
		ЭлементыФормы.Получатель.КнопкаВыбора 	= НЕ ВыбранныйТипПолучателя = Перечисления.ТипыКонтролирующихОрганов.ФСС;
		ЭлементыФормы.Получатель.КнопкаОчистки 	= НЕ ВыбранныйТипПолучателя = Перечисления.ТипыКонтролирующихОрганов.ФСС;
		
	Иначе
		ЭлементыФормы.Получатель.ОграничениеТипа = Новый ОписаниеТипов();
		ЭлементыФормы.Получатель.Значение = Неопределено;
	КонецЕсли;
	
	УстановитьОтборы();
	
КонецПроцедуры

Процедура ОтправкиФССПриПолученииДанных(Элемент, ОформленияСтрок)
	
	РегламентированнаяОтчетность.ПриПолученииДанныхВТабличномПолеОтправкиФСС(Элемент, ОформленияСтрок);
	
КонецПроцедуры

Процедура ОтправкиФССВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	РегламентированнаяОтчетность.ВыборВТабличномПолеОтправкиФСС(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура СправочникСписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)
	
	Если ЭлементыФормы.ДействияФормы.Кнопки.Найти("Загрузить") = Неопределено Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

СправочникСписок.Колонки.Добавить("ДатаНачала");
СправочникСписок.Колонки.Добавить("ДатаОкончания");
СправочникСписок.Колонки.Добавить("Версия");

ЦиклыОбмена.Колонки.Добавить("Тип");
ЦиклыОбмена.Колонки.Добавить("УчетнаяЗапись");
ЦиклыОбмена.Колонки.Добавить("ФорматДокументооборота");

ЦиклыОбменаЗаявление.Колонки.Добавить("Тип");
ЦиклыОбменаЗаявление.Колонки.Добавить("УчетнаяЗапись");
ЦиклыОбменаЗаявление.Колонки.Добавить("ФорматДокументооборота");

ЦиклыОбменаПФР.Колонки.Добавить("Тип");
ЦиклыОбменаПФР.Колонки.Добавить("УчетнаяЗапись");
ЦиклыОбменаПФР.Колонки.Добавить("ФорматДокументооборота");

ЦиклыОбменаФСГС.Колонки.Добавить("Тип");
ЦиклыОбменаФСГС.Колонки.Добавить("УчетнаяЗапись");
ЦиклыОбменаФСГС.Колонки.Добавить("ФорматДокументооборота");

СоответствиеВидаОтбораЦикловОбменаСтраницеПанелиОтбора = Новый Соответствие;
СоответствиеВидаОтбораЦикловОбменаСтраницеПанелиОтбора.Вставить("По виду отчета", ЭлементыФормы.ПанельЗначениеДополнительногоОтбора.Страницы.ПоВидуОтчета);
СоответствиеВидаОтбораЦикловОбменаСтраницеПанелиОтбора.Вставить("По периоду отчета", ЭлементыФормы.ПанельЗначениеДополнительногоОтбора.Страницы.ПоПериодуОтчета);
СоответствиеВидаОтбораЦикловОбменаСтраницеПанелиОтбора.Вставить("По виду документа", ЭлементыФормы.ПанельЗначениеДополнительногоОтбора.Страницы.ПоВидуДокумента);

ВыбранныеЭлементы = Новый СписокЗначений;

СоответствиеИмениКнопкиПодменюОтправкаКодуДействия = Новый Соответствие;
СоответствиеИмениКнопкиПодменюОтправкаКодуДействия.Вставить("Подготовить", 0);
СоответствиеИмениКнопкиПодменюОтправкаКодуДействия.Вставить("ПодготовитьИПодписать", 1);
СоответствиеИмениКнопкиПодменюОтправкаКодуДействия.Вставить("Отправить", 2);