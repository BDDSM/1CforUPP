Перем ПрограммноеЗакрытие;
Перем СтруктураОтветственныхЛицБух;
Перем СтруктураОтветственныхЛицРук;
Перем СтруктураДанныхОрганизации;
Перем Значение;
Перем ТаблицаЗначений;
Перем ИдКонф;

////////////////////////////////////////////////////////////
// Открытие формы

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ДокументОбъект = Документы.ЗаявлениеАбонентаСпецоператораСвязи.СоздатьДокумент();
	Дата = ТекущаяДата();
	ТипЗаявления = Перечисления.ТипыЗаявленияАбонентаСпецоператораСвязи.Первичное;
	ИдентификаторДокументооборота = КонтекстЭДО.СгенерироватьUUID();
	Статус = Перечисления.СтатусыЗаявленияАбонентаСпецоператораСвязи.Подготовлено;
	СогласиеСЛицензионнымСоглашением = Ложь;
	ЗаполнитьСписокУЦ();
	
	ТаблицаЗначений = Новый ТаблицаЗначений;
	ВидимостьКартинки = Ложь;
	
	КонтекстЭДО.ЗаполнитьСписокКриптопровайдеров(ВыборКриптопровайдера,ТаблицаЗначений,Реквизит.ТипКриптопровайдера,
												ЭлементыФормы.VipNet,ЭлементыФормы.CryptoPro,ВидимостьКартинки,КриптопровайдерРекомендация);
	ЭлементыФормы.ПолеКартинкиВнимание48.Видимость = ВидимостьКартинки;
	
	СохранитьИВыгрузить = 1;
	ИдКонф = РегламентированнаяОтчетность.ИДКонфигурации();
	
	Если ИдКонф = "БГУ" Тогда
		Сотрудник = Справочники.Сотрудники.ПустаяСсылка();
	ИначеЕсли ИдКонф = "БП" ИЛИ ИдКонф = "ЗУП" ИЛИ ИдКонф = "УПП"  ИЛИ ИдКонф = "КА" ИЛИ ИдКонф = "ЗБУ" ИЛИ ИдКонф = "БАУ" ИЛИ ИдКонф = "НПЛ" Тогда
		Сотрудник = Справочники.ФизическиеЛица.ПустаяСсылка();
	КонецЕсли;
	
	Если ОрганизацияПриВызовеИзСправочникаОрганизаций <> Справочники.Организации.ПустаяСсылка() Тогда
		Организация = ОрганизацияПриВызовеИзСправочникаОрганизаций;
		ОрганизацияОчистка(Истина);
		ОрганизацияЗаполнитьДанные();
	ИначеЕсли Реквизит = Документы.ЗаявлениеАбонентаСпецоператораСвязи.ПустаяСсылка() Тогда 
		
	Иначе
		ЗаполнитьДанныеКопирования();
	КонецЕсли;
	
	Если ПустаяСтрока(НомерОсновнойПоставки1с) Тогда
		НомерОсновнойПоставки1с = КонтекстЭДО.ПолучитьНомерОсновнойПоставки1с();
	КонецЕсли;
	
	ЗаполнитьСоглашение();
	
	ЭлементыФормы.Сотрудник.ТолькоПросмотр	 = НЕ ВыборСотрудника = 3;
	ЭлементыФормы.Сотрудник.КнопкаВыбора	 = Истина;
	
КонецПроцедуры

Процедура ПоказатьДопКодФСС()
	Попытка ДопКодФСС = Организация.ДополнительныйКодФСС 
	Исключение ДопКодФСС = ""; КонецПопытки;
	
	КонтекстЭДО.ПоказатьДопКодФСС(ДопКодФСС,ЭлементыФормы.НадписьДополнительныйКодФСС,ЭлементыФормы.ДополнительныйКодФСС,ПризнакОбособленногоПодразделения,РегНомерФСС);
КонецПроцедуры

Процедура ЗаполнитьДанныеКопирования()
	
	Спецоператор = Реквизит.СпецоператорСвязи;
	СпецоператорСвязи = Спецоператор;
	
	Если Реквизит.ТипКриптопровайдера = Перечисления.ТипыКриптоПровайдеров.VipNet Тогда
		ВыборКриптопровайдера = 1;
	Иначе
		ВыборКриптопровайдера = 2;
	КонецЕсли;
	
	КриптопровайдерПриИзменении();
	
	Организация                         = Реквизит.Организация;
	КраткоеНаименование                 = Реквизит.КраткоеНаименование;
	ПолноеНаименование                  = Реквизит.ПолноеНаименование;
	ИНН                                 = Реквизит.ИНН;
	КПП                                 = Реквизит.КПП;
	РегНомерПФР                         = Реквизит.РегНомерПФР;
	РегНомерФСС                         = Реквизит.РегНомерФСС;
	ПризнакКрупнейшегоНалогоплательщика = Реквизит.ПризнакКрупнейшегоНалогоплательщика;
	ПризнакОбособленногоПодразделения   = Реквизит.ПризнакОбособленногоПодразделения;
	ЮрАдрес                             = Регламентированнаяотчетность.ПредставлениеАдресаВФормате9Запятых(Реквизит.АдресЮридический, Истина);
	АдресЮридический                    = Реквизит.АдресЮридический;
	ЭлементыФормы.ЮрАдрес.КнопкаВыбора  = Истина;
	ФактАдрес                           = Регламентированнаяотчетность.ПредставлениеАдресаВФормате9Запятых(Реквизит.АдресФактический, Истина);
	АдресФактический                    = Реквизит.АдресФактический;
	ЭлементыФормы.ФактАдрес.КнопкаВыбора = Истина;
	ТелефонОсновной                     = Реквизит.ТелефонОсновной;
	ТелефонДополнительный               = Реквизит.ТелефонДополнительный;
	ЭлектроннаяПочта                    = Реквизит.ЭлектроннаяПочта;
	ТипОрганизации                      = Реквизит.ТипОрганизации;
	ВладелецЭЦПФамилия                  = Реквизит.ВладелецЭЦПФамилия;
	ВладелецЭЦПИмя                      = Реквизит.ВладелецЭЦПИмя;
	ВладелецЭЦПОтчество                 = Реквизит.ВладелецЭЦПОтчество;
	ВладелецЭЦПДолжность                = Реквизит.ВладелецЭЦПДолжность;
	ВладелецЭЦППодразделение            = Реквизит.ВладелецЭЦППодразделение;
	ВладелецЭЦПВидДокумента             = Реквизит.ВладелецЭЦПВидДокумента;
	ВладелецЭЦПСерияДокумента           = Реквизит.ВладелецЭЦПСерияДокумента;
	ВладелецЭЦПНомерДокумента           = Реквизит.ВладелецЭЦПНомерДокумента;
	ВладелецЭЦПДатаВыдачиДокумента      = Реквизит.ВладелецЭЦПДатаВыдачиДокумента;
	ВладелецЭЦПКемВыданДокумент         = Реквизит.ВладелецЭЦПКемВыданДокумент;
	ДополнительныйКодФСС                = Реквизит.ДополнительныйКодФСС;
	НомерОсновнойПоставки1с             = Реквизит.НомерОсновнойПоставки1с;
	
	ЭлементыФормы.КнопкаОбновитьСведенияОбОрганизации.Доступность = Истина;
	ВыборСотрудника = КонтекстЭДО.ПолучитьТипИсполнителя(Реквизит.ВладелецЭЦПТип);
	
	Если ВыборСотрудника = 3 Тогда
		СотрудникСтрока = ""+Реквизит.ВладелецЭЦПФамилия+" "+Реквизит.ВладелецЭЦПИмя+" "+Реквизит.ВладелецЭЦПОтчество;
	КонецЕсли;
	
	Для Каждого строкаНаправления из Реквизит.Получатели цикл 
		НоваяСтрокаНаправления = Получатели.Добавить();
		НоваяСтрокаНаправления.ТипПолучателя = строкаНаправления.ТипПолучателя;
		НоваяСтрокаНаправления.КодПолучателя = строкаНаправления.КодПолучателя;
		НоваяСтрокаНаправления.КПП           = строкаНаправления.КПП;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Реквизит.Организация) Тогда
		СведенияОбОрганизации = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Реквизит.Организация, , "ФИОРук, НомерУдЛичнРук, СерияУдЛичнРук, ВидУдЛичнРук, ДатаУдЛичнРук, ОрганВыданУдЛичнРук, 
				|ФИОБух, НомерУдЛичнБух, СерияУдЛичнБух, ВидУдЛичнБух, ДатаУдЛичнБух, ОрганВыданУдЛичнБух,");
		ГлавныйБухгалтерДоступность = Ложь;
		ДиректорДоступность 		= Ложь;
		КонтекстЭДО.ОрганизацияИнициализироватьОтветственныхЛиц(,СведенияОбОрганизации,СтруктураОтветственныхЛицБух,СтруктураОтветственныхЛицРук,ГлавныйБухгалтерДоступность,ДиректорДоступность);
		ЭлементыФормы.ГлавныйБухгалтер.Доступность 	= ГлавныйБухгалтерДоступность;
		ЭлементыФормы.Директор.Доступность 			= ДиректорДоступность;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСоглашение()
	
	КонтекстЭДО.ЗаполнитьСоглашение(ЭлементыФормы.ПолеHTMLЛицензии,СпецоператорСвязи);
	
КонецПроцедуры

Процедура ЗаполнитьСписокУЦ()
	
	ОрганизацияПриОткрытии = ?(ЗначениеЗаполнено(ОрганизацияПриВызовеИзСправочникаОрганизаций),ОрганизацияПриВызовеИзСправочникаОрганизаций,?(ЗначениеЗаполнено(Реквизит.Организация),Реквизит.Организация,Неопределено));
	Спецоператор = КонтекстЭДО.ПолучитьСписокУЦ(ЭлементыФормы.СпецоператорИУЦ.СписокВыбора,СпецоператорСвязи,ОрганизацияПриОткрытии);
	
КонецПроцедуры

////////////////////////////////////////////////////////////
// Переход по страницам

Процедура ОсновныеДействияФормыМастерДалее(Кнопка)
	
	ИнформацияОбОшибках = "";
	
	Если ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.ВыборУЦ Тогда
		
		Если Спецоператор = Неопределено ИЛИ СпецоператорСвязи = Перечисления.СпецоператорыСвязи.ПустаяСсылка() Тогда
			ДобавитьСтроку(ИнформацияОбОшибках, "Укажите удостоверяющий центр.");
		КонецЕсли;
		
	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.ВыборКриптопровайдера Тогда
		
		Инфотекс = ТаблицаЗначений.Получить(0).УстановленОС;
		КриптоПро = ТаблицаЗначений.Получить(1).УстановленОС;
		ВыбранныйКриптопровайдер = "";
		Если ВыборКриптопровайдера = 1 Тогда
			ВыбранныйКриптопровайдер = ЭлементыФормы.VipNet.Заголовок;
		ИначеЕсли ВыборКриптопровайдера = 2 Тогда 
			ВыбранныйКриптопровайдер = ЭлементыФормы.CryptoPro.Заголовок;
		КонецЕсли;
	
		Если ПустаяСтрока(ВыбранныйКриптопровайдер) Тогда
	
			Сообщить ("Укажите криптопровайдер.", СтатусСообщения.Важное);
			Возврат;
			
		ИначеЕсли (ВыбранныйКриптопровайдер = ТаблицаЗначений.Получить(0).ОтображаемыйТекст И НЕ Инфотекс)
				ИЛИ (ВыбранныйКриптопровайдер = ТаблицаЗначений.Получить(1).ОтображаемыйТекст И НЕ КриптоПро ) Тогда
			
			Режим = РежимДиалогаВопрос.ДаНет;
			Текст = "Вы выбрали криптопровайдер которого нет в операционной системе. Продолжить?";
			Ответ = Вопрос(Текст, Режим, 0, КодВозвратаДиалога.Нет, "Предупреждение");
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		Если ВыбранныйКриптопровайдер = ТаблицаЗначений.Получить(0).ОтображаемыйТекст Тогда
			ТипКриптопровайдера = Перечисления.ТипыКриптоПровайдеров.VipNet;
		Иначе
			ТипКриптопровайдера = Перечисления.ТипыКриптоПровайдеров.CryptoPro;
		КонецЕсли;
		
		Криптопровайдер = КонтекстЭДО.ПолучитьПараметрыКриптопровайдераПоЗначениюПеречисления(ТипКриптопровайдера);
		
		Константы.ДокументооборотСКонтролирующимиОрганами_ТипКриптопровайдера.Установить(Криптопровайдер.Тип);
		Константы.ДокументооборотСКонтролирующимиОрганами_ИмяКриптопровайдера.Установить(Криптопровайдер.Имя);
		
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Далее.Доступность = СогласиеСЛицензионнымСоглашением;
		
	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.Направления Тогда
		
		Если Получатели.Количество() < 1 Тогда
			
			ДобавитьСтроку(ИнформацияОбОшибках, "Укажите хотя бы одно направление сдачи.");
			
		ИначеЕсли Получатели.Найти(Перечисления.ТипыконтролирующихОрганов.ПФР,"ТипПолучателя") = Неопределено
			И Получатели.Найти(Перечисления.ТипыконтролирующихОрганов.ФНС,"ТипПолучателя") = Неопределено Тогда
			
			ДобавитьСтроку(ИнформацияОбОшибках, "Среди направлений сдачи должно быть направление ФНС или направление ПФР.");
			
		ИначеЕсли Получатели.Найти(Перечисления.ТипыконтролирующихОрганов.ФСГС,"ТипПолучателя") <> Неопределено
			И Получатели.Найти(Перечисления.ТипыконтролирующихОрганов.ФНС,"ТипПолучателя") = Неопределено Тогда
			ДобавитьСтроку(ИнформацияОбОшибках, "Для подключения направления ФСГС должно быть подключено направление ФНС, необходимо добавить направление ФНС.");
		Иначе
			
			Если ПустаяСтрока(РегНомерПФР) И
				Получатели.Найти(Перечисления.ТипыконтролирующихОрганов.ПФР,"ТипПолучателя") <> Неопределено тогда
				ДобавитьСтроку(ИнформацияОбОшибках, "Указано направление ПФР, но в сведениях об организации не заполнен регистрационный номер в ПФР.");
			КонецЕсли;
			
			Если Получатели.Найти(Перечисления.ТипыконтролирующихОрганов.ФСС,"ТипПолучателя") <> Неопределено Тогда
				
				ТекстОшибки = "";
				
				Если НЕ ПризнакОбособленногоПодразделения И ПустаяСтрока(РегНомерФСС) Тогда
					ТекстОшибки = "регистрационный номер в ФСС.";
				ИначеЕсли  ПризнакОбособленногоПодразделения И ПустаяСтрока(ДополнительныйКодФСС) Тогда
					ТекстОшибки = "дополнительный регистрационный номер в ФСС.";
				КонецЕсли;
				
				Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
					ДобавитьСтроку(ИнформацияОбОшибках, "Указано направление ФСС, но в сведениях об организации не заполнен "+ТекстОшибки);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.Подтверждение Тогда 
		
		Если ВыборСотрудника = 0 Тогда
			 ВыборСотрудника = 1;
		КонецЕсли;
		
		ВладелецЭЦПТип = Перечисления.ТипыВладельцевЭЦП.Получить(ВыборСотрудника-1);
		Ответственный = ПараметрыСеанса.ТекущийПользователь;
		Если СохранитьИВыгрузить = 1 Тогда
			УстановитьНовыйНомер();
			Записать();
				
			КонтекстЭДО.СформироватьИОтправитьЗаявление(ДокументОбъект);
			
		ИначеЕсли СохранитьИВыгрузить = 2 Тогда
			
			Статус = Перечисления.СтатусыЗаявленияАбонентаСпецоператораСвязи.Подготовлено;
			УстановитьНовыйНомер();
			Записать();
			
		КонецЕсли;
		
		ПрограммноеЗакрытие = Истина;
		Закрыть();
		
	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.ВладельцыЭцп Тогда
		
		ДокументУдЛичность = Новый Структура("ВидДокумента,ДокументСерия,ДокументНомер,ДокументДатаВыдачи,ДокументКемВыдан,ВладелецЭЦП",
											ВладелецЭЦПВидДокумента,ВладелецЭЦПСерияДокумента,ВладелецЭЦПНомерДокумента,
											ВладелецЭЦПДатаВыдачиДокумента,ВладелецЭЦПКемВыданДокумент,"");
	
		Если НЕ КонтекстЭДО.ПроверитьДокументУдостоверяющийЛичность(ДокументУдЛичность) Тогда
		ДобавитьСтроку(ИнформацияОбОшибках,"Исправьте выявленные ошибки при проверке данных документа удостоверяющего личность.");
		КонецЕсли;
		
		Если ПустаяСтрока(ВладелецЭЦПФамилия) Тогда
			ДобавитьСтроку(ИнформацияОбОшибках, "Укажите фамилию владельца ЭЦП.");
		КонецЕсли;
		
		Если ПустаяСтрока(ВладелецЭЦПИмя) Тогда
			ДобавитьСтроку(ИнформацияОбОшибках, "Укажите имя владельца ЭЦП.");
		КонецЕсли;
		
		Если ТипОрганизации И ПустаяСтрока(ВладелецЭЦПДолжность) Тогда
			ДобавитьСтроку(ИнформацияОбОшибках, "Укажите должность владельца ЭЦП.");
		КонецЕсли;
		
		Если СтрДлина(ВладелецЭЦПДолжность) > 64 Тогда
			Сообщить("Длина значения в поле Должность не должна превышать 64 символа.");
			Возврат;
		КонецЕсли;

		
	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.СоглашениеОПрисоединенииКРегламентуУЦ Тогда
		Если Не СогласиеСЛицензионнымСоглашением Тогда
			ИнформацияОбОшибках = "Для продолжения работы необходимо принять соглашение.";
		КонецЕсли;
	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.НомерОсновнойПоставки Тогда 
		
		СтрЦифры = "0123456789";
		Если ПустаяСтрока(НомерОсновнойПоставки1с) Тогда
			Сообщить("Не указан номер основной поставки 1с.");
			Возврат;
		Иначе
			Для Инд = 1 По СтрДлина(НомерОсновнойПоставки1с) Цикл
				ТекСимв = Сред(НомерОсновнойПоставки1с, Инд, 1);
				Если Найти(СтрЦифры, ТекСимв) = 0 Тогда
					Сообщить("Номер основной поставки 1с содержит недопустимый символ.");
					Возврат;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.Реквизиты Тогда 
		
		Если Организация = Справочники.Организации.ПустаяСсылка() Тогда
			Сообщить("Укажите организацию.", СтатусСообщения.Важное);
			Возврат;
		ИначеЕсли НЕ КонтекстЭДО.ПроверитьДляОрганизацииТребуетсяУчетнаяЗапись(Организация) Тогда
			Возврат;
		КонецЕсли;
		
		Если СтрДлина(КраткоеНаименование) > 64 Тогда
			Сообщить("Длина краткого наименования не должна превышать 64 символа.");
			Возврат;
		КонецЕсли;
		
		ИнформацияОбОшибках = "";
		
		Если ПустаяСтрока(ИНН) Тогда
				ДобавитьСтроку(ИнформацияОбОшибках, "Не указан ИНН налогоплательщика. Заполните значение в свойствах организации и нажмите на кнопку ""Обновить сведения"" в форме мастера.");
			ИначеЕсли НЕ РегламентированнаяОтчетность.ИННСоответствуетТребованиям(ИНН, НЕ(ТипОрганизации)) Тогда
				ДобавитьСтроку(ИнформацияОбОшибках, "Указан неправильный ИНН налогоплательщика. Исправьте значение в свойствах организации и нажмите на кнопку ""Обновить сведения"" в форме мастера.");
			КонецЕсли;
			
			Если ТипОрганизации Тогда 
				Если ПустаяСтрока(КПП) Тогда
					ДобавитьСтроку(ИнформацияОбОшибках, "Не указан КПП налогоплательщика. Заполните значение в свойствах организации и нажмите на кнопку ""Обновить сведения"" в форме мастера.");
				ИначеЕсли СтрДлина(КПП) <> 9 Тогда
					ДобавитьСтроку(ИнформацияОбОшибках, "Указан неправильный КПП налогоплательщика. Исправьте значение в свойствах организации и нажмите на кнопку ""Обновить сведения"" в форме мастера.");
				КонецЕсли;
			КонецЕсли;
			
			РегистрационныйНомерПФР = РегНомерПФР;
			РегистрационныйНомерФСС = РегНомерФСС;
			
			Если НЕ ПустаяСтрока(РегистрационныйНомерПФР) Тогда
				Если НЕ (Сред(РегистрационныйНомерПФР,4,1) = "-" 
					И   Сред(РегистрационныйНомерПФР,8,1) = "-" 
					И   СтрДлина(РегистрационныйНомерПФР) = 14 
					И   КонтекстЭДО.ПроверитьЦифровойКодЗаданнойДлины(СтрЗаменить(РегистрационныйНомерПФР,"-",""),12)) Тогда
					
					ДобавитьСтроку(ИнформацияОбОшибках, "Некорректно указан регистрационный номер ПФР. Исправьте значение в свойствах организации и нажмите на кнопку ""Обновить сведения"" в форме мастера.");
					
				КонецЕсли;
			КонецЕсли;
			
			Если НЕ ПустаяСтрока(РегистрационныйНомерФСС) Тогда
				
				Если НЕ КонтекстЭДО.ПроверитьЦифровойКодЗаданнойДлины(РегистрационныйНомерФСС,10) Тогда
					
					ДобавитьСтроку(ИнформацияОбОшибках, "Некорректно указан регистрационный номер ФСС. Исправьте значение в свойствах организации и нажмите на кнопку ""Обновить сведения"" в форме мастера.");
				КонецЕсли;
				
				Если ПризнакОбособленногоПодразделения И ПустаяСтрока(ДополнительныйКодФСС) Тогда
					ДобавитьСтроку(ИнформацияОбОшибках, "Не указан дополнительный регистрационный номер ФСС.");
				КонецЕсли;
				
			КонецЕсли;
			
			Если НЕ ПустаяСтрока(ДополнительныйКодФСС) И 
				ПризнакОбособленногоПодразделения И НЕ КонтекстЭДО.ПроверитьЦифровойКодЗаданнойДлины(СокрЛП(ДополнительныйКодФСС), 10, Истина) Тогда
				ДобавитьСтроку(ИнформацияОбОшибках, "Дополнительный регистрационный номер ФСС, должен содержать 10 цифр.");
			КонецЕсли;
			
			ПочтовыйАдрес = СокрЛП(ЭлементыФормы.ЭлектАдрес.Значение);
			
			Если СтрДлина(ПочтовыйАдрес) > 0 Тогда
				Если НЕ КонтекстЭДО.ПроверитьEmail(ДокументОбъект.ЭлектроннаяПочта) Тогда
					ДобавитьСтроку(ИнформацияОбОшибках, "Некорректно введен необязательный адрес электронной почты.")
				КонецЕсли;
			КонецЕсли;
			
			Если СтрДлина(СокрЛП(ЭлементыФормы.Телефон.Значение)) =0 Тогда
				ДобавитьСтроку(ИнформацияОбОшибках, "Не заполнен телефон организации.")
			КонецЕсли;
			
			СтрокаОшибкаАдреса = КонтекстЭДО.ПроверитьАдрес(АдресЮридический); 
			Если Не ПустаяСтрока(СтрокаОшибкаАдреса) Тогда
				ДобавитьСтроку(ИнформацияОбОшибках, СокрЛП(ЭлементыФормы.НадписьЮрАдрес.Заголовок) + СтрокаОшибкаАдреса);
			КонецЕсли;
			
			СтрокаОшибкаАдреса = КонтекстЭДО.ПроверитьАдрес(АдресФактический);
			Если Не ПустаяСтрока(СтрокаОшибкаАдреса) Тогда
				ДобавитьСтроку(ИнформацияОбОшибках, СокрЛП(ЭлементыФормы.НадписьФактАдрес.Заголовок) + СтрокаОшибкаАдреса);
			КонецЕсли;
			
	КонецЕсли;
	
	Если СтрДлина(СокрЛП(ИнформацияОбОшибках))> 0 Тогда
		Массив = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(ИнформацияОбОшибках, Символы.ПС);
		Для Счетчик = 0 по Массив.Количество()-1 Цикл
			Сообщить(Массив[Счетчик], СтатусСообщения.Важное);
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПоказатьСледующуюСтраницу();
	
КонецПроцедуры

Процедура ОсновныеДействияФормыМастерНазад(Кнопка)
	ПоказатьПредыдущуюСтраницу();
КонецПроцедуры

Процедура ПоказатьПредыдущуюСтраницу()
	
	ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница;
	
	Если ЭлементыФормы.ОсновнаяПанель.Страницы.Индекс(ТекущаяСтраница) > 0 Тогда
		Страница = ЭлементыФормы.ОсновнаяПанель.Страницы.Получить(ЭлементыФормы.ОсновнаяПанель.Страницы.Индекс(ТекущаяСтраница) - 1);
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = Страница;
	КонецЕсли;
	
	Если ЭлементыФормы.ОсновнаяПанель.Страницы.Индекс(ТекущаяСтраница) И НЕ СогласиеСЛицензионнымСоглашением Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Далее.Доступность = Истина;
	КонецЕсли;
	
	УправлениеКнопкамиНавигации();
	
КонецПроцедуры

Процедура ПоказатьСледующуюСтраницу()
	
	ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница;
	
	Если ЭлементыФормы.ОсновнаяПанель.Страницы.Индекс(ТекущаяСтраница) < ЭлементыФормы.ОсновнаяПанель.Страницы.Количество() - 1 Тогда
		Страница = ЭлементыФормы.ОсновнаяПанель.Страницы.Получить(ЭлементыФормы.ОсновнаяПанель.Страницы.Индекс(ТекущаяСтраница) + 1);
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = Страница;
	КонецЕсли;
	
	УправлениеКнопкамиНавигации();
	
КонецПроцедуры

Процедура УправлениеКнопкамиНавигации()
	
	ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница;
	ИндексТекущейСтраницы = ЭлементыФормы.ОсновнаяПанель.Страницы.Индекс(ТекущаяСтраница);
	ВсегоСтраниц = ЭлементыФормы.ОсновнаяПанель.Страницы.Количество();
	Если ИндексТекущейСтраницы = 0 Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Назад.Текст = "<  Назад";
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Далее.Текст = "Далее  >";
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Назад.Доступность = Ложь;
	ИначеЕсли ИндексТекущейСтраницы = ВсегоСтраниц - 1 Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Назад.Текст = "<  Назад";
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Назад.Доступность = Истина;
		Если СохранитьИВыгрузить = 2 Тогда
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Далее.Текст = "  Готово  ";
		Иначе
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Далее.Текст = "Отправить...";
		КонецЕсли;
	Иначе
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Назад.Текст = "<  Назад";
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Далее.Текст = "Далее  >";
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Назад.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОрганизацияЗаполнитьДанные()
	
	ВыбОрганизация = ЭлементыФормы.Организация.Значение;
	
	Если НЕ ЗначениеЗаполнено(ВыбОрганизация) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураНастройкиФормы = "";
	
	СтруктураДанныхОрганизации = "";

	КонтекстЭДО.ЗаполнитьДанныеОрганизации(ВыбОрганизация,ДокументОбъект,СтруктураНастройкиФормы,СтруктураОтветственныхЛицБух,СтруктураОтветственныхЛицРук,СтруктураДанныхОрганизации);
	
	ЭлементыФормы.ЮрАдрес.КнопкаВыбора 					 		= СтруктураНастройкиФормы.ЮрАдресКнопкаВыбора;
	ЭлементыФормы.ФактАдрес.КнопкаВыбора				 		= СтруктураНастройкиФормы.ФактАдресКнопкаВыбора;
	ЭлементыФормы.Сотрудник.ТолькоПросмотр						= СтруктураНастройкиФормы.СотрудникДоступность;
	ЭлементыФормы.КрупнейшийНалогоплательщик.Доступность 		= СтруктураНастройкиФормы.КрупнейшийНалогоплательщикДоступность;
	ЭлементыФормы.ПризнакОбособленногоПодразделения.Доступность = СтруктураНастройкиФормы.ПризнакОбособленногоПодразделенияДоступность;
	ЭлементыФормы.ГлавныйБухгалтер.Доступность					= СтруктураНастройкиФормы.ГлавныйБухгалтерДоступность;
	ЭлементыФормы.Директор.Доступность							= СтруктураНастройкиФормы.ДиректорДоступность;
	ЭлементыФормы.КПП.АвтоОтметкаНезаполненного					= ТипОрганизации;
	ЭлементыФормы.КПП.ОтметкаНезаполненного						= ПустаяСтрока(КПП) И ТипОрганизации;
	ЭлементыФормы.ДолжностьСотрудника.АвтоОтметкаНезаполненного	= ТипОрганизации;
	ЭлементыФормы.ДолжностьСотрудника.ОтметкаНезаполненного		= ТипОрганизации;
	
	ЮрАдрес 		= СтруктураНастройкиФормы.ЮрАдрес;
	ФактАдрес 		= СтруктураНастройкиФормы.ФактАдрес;
	ВыборСотрудника = СтруктураНастройкиФормы.ВыборСотрудника;
	
	ОбработкаСотрудника();
	ПоказатьДопКодФСС();
	
КонецПроцедуры

Процедура СотрудникНачалоВыбора(Элемент, СтандартнаяОбработка)
	КонтекстЭДО.ИсполнительНачалоВыбора(ДокументОбъект,Элемент, СтандартнаяОбработка,ИдКонф);
КонецПроцедуры

Процедура СотрудникОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Элемент.Значение = ВыбранноеЗначение;
	Сотрудник = ВыбранноеЗначение;
	КонтекстЭДО.ОбновитьДанныеФормыСотрудника(ВыбранноеЗначение,ДокументОбъект,ИдКонф);
	Элемент.КнопкаВыбора = Истина;
	ЭлементыФормы.Сотрудник.КнопкаОткрытия = НЕ ПустаяСтрока(Сотрудник);
	
КонецПроцедуры

Процедура СотрудникОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	КонтекстЭДО.ОрганизацияОчиститьДанныеСотрудника(ДокументОбъект,Элемент);
	Сотрудник = "";
КонецПроцедуры

////////////////////////////////////////////////////////////
// Вспомогательные

Процедура ДобавитьСтроку (ИсходнаяСтрока, ДобавляемаяСтрока)
	ИсходнаяСтрока = ИсходнаяСтрока + ДобавляемаяСтрока + Символы.ПС;
КонецПроцедуры

////////////////////////////////////////////////////////////
// Страница Направления
Процедура КоманднаяПанельНаправленияДобавитьНаправление(Кнопка)
	КонтекстЭДО.ПолучитьФормуВводаНаправления(Неопределено,ДокументОбъект,Организация,"Добавить",ЭтаФорма);
КонецПроцедуры

Процедура КоманднаяПанельНаправленияУдалитьНаправление(Кнопка)
	
	Если Получатели.Количество() > 0 Тогда
		Если ЭлементыФормы.Направления.ТекущаяСтрока <> Неопределено Тогда
			Получатели.Удалить(ЭлементыФормы.Направления.ТекущаяСтрока);
		Иначе
			Сообщить("Выберите строку направления для удаления из таблицы направлений");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельНаправленияРедактирование(Кнопка)
	
	Если Получатели.Количество() > 0 Тогда
		КонтекстЭДО.ПолучитьФормуВводаНаправления(ЭлементыФормы.Направления.ТекущиеДанные,ДокументОбъект,Организация,"Редактировать",ЭтаФорма);
	КонецЕсли;

КонецПроцедуры

Процедура НаправленияВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	КоманднаяПанельНаправленияРедактирование(Элемент);
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

Процедура КоманднаяПанельНаправленияВостановить(Кнопка)
	
	КонтекстЭДО.ВостановитьНаправления(ДокументОбъект,СтруктураДанныхОрганизации);
	
КонецПроцедуры

Процедура КоманднаяПанельНаправленияСкопировать(Кнопка)
	
	Если Получатели.Количество() > 0 Тогда
		
		Если ЭлементыФормы.Направления.ТекущаяСтрока = Неопределено Тогда
			Сообщить("Выберите строку для копирования!");
			Возврат
		КонецЕсли;
		
		Если ЭлементыФормы.Направления.ТекущаяСтрока.ТипПолучателя = Перечисления.ТипыКонтролирующихОрганов.ФНС Тогда
			КонтекстЭДО.ПолучитьФормуВводаНаправления(ЭлементыФормы.Направления.ТекущаяСтрока,ДокументОбъект,Организация,"Скопировать",ЭтаФорма);
		Иначе
			Сообщить("Выбранное действие допустимо только для направления ФНС",СтатусСообщения.Важное);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияОчистка(Истина);
	ОрганизацияЗаполнитьДанные();
	//КонтекстЭДО.ПоказатьДопКодФСС(ДополнительныйКодФСС,ЭлементыФормы.НадписьДополнительныйКодФСС,ЭлементыФормы.ДополнительныйКодФСС,ПризнакОбособленногоПодразделения,РегНомерФСС);
КонецПроцедуры

Процедура ОрганизацияОчистка(СтандартнаяОбработка)

	АдресФактический                    = "";
	АдресЮридический                    = "";
	ИНН                                 = "";
	КПП                                 = "";
	КраткоеНаименование                 = "";
	ПолноеНаименование                  = "";
	ТелефонДополнительный               = "";
	ТелефонОсновной                     = "";
	ЭлектроннаяПочта                    = "";
	РегНомерПФР                         = "";
	РегНомерФСС                         = "";
	ПризнакКрупнейшегоНалогоплательщика = Ложь;
	ПризнакОбособленногоПодразделения   = Ложь;
	Получатели.Очистить();
	НаборКонтактнойИнформации.Очистить();
	ЭлементыФормы.ЮрАдрес.КнопкаВыбора                 = Ложь;
	ЭлементыФормы.ФактАдрес.КнопкаВыбора               = Ложь;
	ЮрАдрес                                            = "";
	ФактАдрес                                          = "";
	КонтекстЭДО.ОрганизацияОчиститьДанныеСотрудника(ДокументОбъект,ЭлементыФормы.Сотрудник);
	Сотрудник = "";
	ЭлементыФормы.КнопкаОбновитьСведенияОбОрганизации.Доступность = ЗначениеЗаполнено(ЭлементыФормы.Организация.Значение );

КонецПроцедуры

Процедура ОсновныеДействияФормыЗакрыть(Кнопка)
	
	Если ПрерватьРаботуМастера() Тогда
		ПрограммноеЗакрытие = Истина;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура СкачатьCryptoProCSPНажатие(Элемент)
	КонтекстЭДО.ОткрытьСтраницуДляСкачивания(Перечисления.ТипыКриптоПровайдеров.CryptoPro);
КонецПроцедуры

Процедура СкачатьVipNetCSPНажатие(Элемент)
	КонтекстЭДО.ОткрытьСтраницуДляСкачивания(Перечисления.ТипыКриптоПровайдеров.VipNet);
КонецПроцедуры

Процедура ОткрытьСтраницуУЦНажатие(Элемент)
	Если Спецоператор = Неопределено ИЛИ СпецоператорСвязи = Перечисления.СпецоператорыСвязи.ПустаяСсылка() Тогда
		Сообщить("Сначала укажите удостоверяющий центр!", СтатусСообщения.Важное);
	Иначе
		АдресСтраницы = КонтекстЭДО.ПолучитьПараметрСпецоператора(СпецоператорСвязи,"АдресВебСтраницы");
		ЗапуститьПриложение(АдресСтраницы);
	КонецЕсли;
КонецПроцедуры

Процедура ВывестиСоглашениеНапечатьНажатие(Элемент)
	ЭлементыФормы.ПолеHTMLЛицензии.Документ.execCommand("Print");
КонецПроцедуры

//Страница УЦ
Процедура СпецоператорИУЦОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СпецоператорСвязи = ВыбранноеЗначение;
	ЗаполнитьСоглашение();
КонецПроцедуры

Процедура ОбработкаСотрудника()
	КонтекстЭДО.ВыборВладельцаЭЦП(ВыборСотрудника,ДокументОбъект,СтруктураОтветственныхЛицРук,СтруктураОтветственныхЛицБух,Сотрудник,ИдКонф);
	ЭлементыФормы.Сотрудник.ТолькоПросмотр = НЕ ВыборСотрудника = 3;
КонецПроцедуры

Процедура АдресНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтруктураАдреса = "";
	
	КонтекстЭДО.РедактированиеАдреса(СтруктураАдреса,Элемент.Имя,СтандартнаяОбработка,ДокументОбъект);
	АдресИзменился = СтруктураАдреса.Модифицированность;
	
	Если АдресИзменился Тогда
		
		Если Элемент.Имя = "ЮрАдрес" Тогда
			ЮрАдрес = СтруктураАдреса.Представление;
		Иначе
			ФактАдрес = СтруктураАдреса.Представление;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ ПрограммноеЗакрытие Тогда
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ ПрерватьРаботуМастера() Тогда 
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

Функция ПрерватьРаботуМастера()
	Отказ = Ложь;
	
	Если НЕ ПрограммноеЗакрытие Тогда
		Ответ = Вопрос("Прервать работу мастера?", РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Отказ;
КонецФункции

Процедура СохранитьИВыгрузитьПриИзменении(Элемент)
	УправлениеКнопкамиНавигации();
КонецПроцедуры

Процедура VipNetПриИзменении(Элемент)
	КриптопровайдерПриИзменении();
КонецПроцедуры

Процедура CryptoProПриИзменении(Элемент)
	КриптопровайдерПриИзменении();
КонецПроцедуры

Процедура КриптопровайдерПриИзменении()
	
	ВидимостьКартинки = Ложь;
	
	КонтекстЭДО.ОбработкаКриптопровайдера(ВыборКриптопровайдера,ТаблицаЗначений,ВидимостьКартинки,КриптопровайдерРекомендация,ЭлементыФормы.VipNet.Заголовок,ЭлементыФормы.CryptoPro.Заголовок);
	
	ЭлементыФормы.ПолеКартинкиВнимание48.Видимость = ВидимостьКартинки;

КонецПроцедуры

Процедура АдресОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

Процедура ОбновитьНажатие(Элемент)
	ОрганизацияОчистка(Истина);
	ОрганизацияЗаполнитьДанные();
КонецПроцедуры

Процедура СотрудникОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Сотрудник) Тогда
		Возврат;
	КонецЕсли;
	
	КонтекстЭДО.ОткрытьФормуИсполнителя(Сотрудник,ИдКонф);

КонецПроцедуры

Процедура КнопкаВызоваДанныхФИОНажатие(Элемент)
	
	Если ПустаяСтрока(СотрудникСтрока) И ВыборСотрудника = 3 Тогда 
		Сообщить("Укажите сотрудника.");
		Возврат;
	КонецЕсли;
	
	КонтекстЭДО.ПолучитьФормуИзмененияФИО(ЭтаФорма);
	
КонецПроцедуры

Процедура СогласиеСЛицензионнымСоглашениемПриИзменении(Элемент)
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Далее.Доступность = СогласиеСЛицензионнымСоглашением;
КонецПроцедуры

Процедура ОткрытьСтраницуИТСНажатие(Элемент)
	ЗапуститьПриложение("http://its.1c.ru/about");
КонецПроцедуры

ПрограммноеЗакрытие = Ложь;