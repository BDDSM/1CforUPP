Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Заголовок = "Извещение о получении " + ИмяФайла;
	
	// считываем текст из файла уведомления
	Попытка
		ЧтениеТекста = Новый ЧтениеТекста;
		ЧтениеТекста.Открыть(ПодтверждениеПолучения);
		СтрокаXML = ЧтениеТекста.Прочитать();
		ЧтениеТекста.Закрыть();
	Исключение
		Отказ = Истина;
		Предупреждение("Ошибка чтения содержимого подтверждения из файла:
						|
						|" + ИнформацияОбОшибке().Описание);
		Возврат;
	КонецПопытки;
	
	// загружаем XML из строки в дерево
	ДеревоXML = КонтекстЭДО.ЗагрузитьСтрокуXMLВДеревоЗначений(СтрокаXML);
	Если ДеревоXML = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	УзелИзвещение = ДеревоXML.Строки.Найти("извещение", "Имя");
	Если НЕ ЗначениеЗаполнено(УзелИзвещение) Тогда
		Сообщить("Некорректная структура XML извещения: не обнаружен узел ""Извещение"".", СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	УзелПосылка = УзелИзвещение.Строки.Найти("посылка", "Имя");
	Если НЕ ЗначениеЗаполнено(УзелПосылка) Тогда
		Сообщить("Некорректная структура XML извещения: не обнаружен узел ""Посылка"".", СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	УзелДокументы = УзелПосылка.Строки.Найти("документы", "Имя");
	Если НЕ ЗначениеЗаполнено(УзелДокументы) Тогда
		Сообщить("Некорректная структура XML извещения: не обнаружен узел ""Документы"".", СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// получаем идентификаторы поступивших файлов
	ИдентификаторыДокументов = "";
	Для каждого УзелДокумент Из УзелДокументы.Строки Цикл
		ИдентификаторДокумента = УзелДокумент.Строки.Найти("идентификаторДокумента", "Имя");
		Если ЗначениеЗаполнено(ИдентификаторДокумента) Тогда
			ИдентификаторыДокументов = ИдентификаторыДокументов + ?(ПустаяСтрока(ИдентификаторыДокументов), "", ",") + СокрЛП(ИдентификаторДокумента.Значение);
		КонецЕсли;
	КонецЦикла;
	
	// извлекаем имена поступивших файлов из сообщений цикла обмена по идентификаторам
	ДокументыЦиклаОбмена = Неопределено;
	
	Если НЕ ПустаяСтрока(ИдентификаторыДокументов) Тогда
		
		СообщенияЦиклаОбмена = КонтекстЭДО.ПолучитьСообщенияЦиклаОбмена(Сообщение.ЦиклОбмена).ВыгрузитьКолонку("Ссылка");
		
		ТипыДИВ = Новый Массив;
		ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПисьмоФСГС);
		ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПриложениеПисьмаФСГС);
		ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОтчетностиФСГС);
		ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.УведомлениеОПриемеВОбработкуОтчетаФСГС);
		ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.УведомлениеОбУточненииОтчетаФСГС);
		ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.УведомлениеОНесоответствииФорматуОтчетаФСГС);
		ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.УведомлениеОбОтказеОтчетаФСГС);
		
		ДокументыЦиклаОбмена = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(СообщенияЦиклаОбмена,, ТипыДИВ);
		
		КоличествоДокументов = ДокументыЦиклаОбмена.Количество();
		Для Счетчик = 1 По КоличествоДокументов Цикл
			СтрокаТаблицыДокументов = ДокументыЦиклаОбмена[КоличествоДокументов - Счетчик];
			Если Найти(ИдентификаторыДокументов, СокрЛП(СтрокаТаблицыДокументов.Идентификатор)) > 0 Тогда
				ИдентификаторыДокументов = СтрЗаменить(ИдентификаторыДокументов, СокрЛП(СтрокаТаблицыДокументов.Идентификатор), "");
			Иначе
				ДокументыЦиклаОбмена.Удалить(СтрокаТаблицыДокументов);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Если ДокументыЦиклаОбмена = Неопределено Тогда
	
		Сообщить("Не обнаружены документы, указанные в извещении.", СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат;
	
	КонецЕсли;
	
	// заполняем табличные поля формы
	Для каждого СтрДокумент Из ДокументыЦиклаОбмена Цикл
	
		Если СтрДокумент.Тип = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.УведомлениеОПриемеВОбработкуОтчетаФСГС
		 ИЛИ СтрДокумент.Тип = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.УведомлениеОбУточненииОтчетаФСГС
		 ИЛИ СтрДокумент.Тип = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.УведомлениеОНесоответствииФорматуОтчетаФСГС
		 ИЛИ СтрДокумент.Тип = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.УведомлениеОбОтказеОтчетаФСГС Тогда
		
			СтрПротокол = Протоколы.Добавить();
			СтрПротокол.ИмяФайла              = СтрДокумент.ИмяФайла;
			СтрПротокол.Идентификатор         = СтрДокумент.Идентификатор;
			СтрПротокол.ТранспортноеСообщение = СтрДокумент.ТранспортноеСообщение;
			
		Иначе
			
			СтрСодержимое = Содержимое.Добавить();
			СтрСодержимое.ИмяФайла              = СтрДокумент.ИмяФайла;
			СтрСодержимое.Идентификатор         = СтрДокумент.Идентификатор;
			СтрСодержимое.ТранспортноеСообщение = СтрДокумент.ТранспортноеСообщение;
			
		КонецЕсли;
	
	КонецЦикла;
	
	Если Протоколы.Количество() = 0 Тогда
		ЭлементыФормы.ПанельПротоколы.Свертка = РежимСверткиЭлементаУправления.Верх;
	Иначе
		ЭлементыФормы.ПанельПротоколы.Свертка = РежимСверткиЭлементаУправления.Нет;
	КонецЕсли;
	
	Если Содержимое.Количество() = 0 Тогда
		ЭлементыФормы.ПанельСодержимое.Свертка = РежимСверткиЭлементаУправления.Верх;
	Иначе
		ЭлементыФормы.ПанельСодержимое.Свертка = РежимСверткиЭлементаУправления.Нет;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПротоколыВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ИмяФайлаДокумента = ВыбраннаяСтрока.ИмяФайла;
	СообщениеВладелец = ВыбраннаяСтрока.ТранспортноеСообщение;
	
	Вложения = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(СообщениеВладелец, Истина, , ИмяФайлаДокумента);
	Если Вложения.Количество() = 0 Тогда
		Предупреждение("Документ не найден.");
		Возврат;
	КонецЕсли;
	
	ВременныйФайл = ПолучитьИмяВременногоФайла();
	Вложения[0].Данные.Получить().Записать(ВременныйФайл);
	
	ФормаПоказа = КонтекстЭДО.ПолучитьФорму("ПросмотрПротоколаФСГС", ЭтаФорма);
	ФормаПоказа.СообщениеПротокол = Сообщение;
	ФормаПоказа.ИмяФайла = ИмяФайлаДокумента;
	ФормаПоказа.Протокол = ВременныйФайл;
	ФормаПоказа.ОткрытьМодально();
	
	УдалитьФайлы(ВременныйФайл);

КонецПроцедуры

Процедура СодержимоеВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ИмяФайлаДокумента = ВыбраннаяСтрока.ИмяФайла;
	СообщениеВладелец = ВыбраннаяСтрока.ТранспортноеСообщение;
	
	Вложения = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(СообщениеВладелец, Истина, , ИмяФайлаДокумента);
	Если Вложения.Количество() = 0 Тогда
		Предупреждение("Документ не найден.");
		Возврат;
	КонецЕсли;
	
	КонтекстЭДО.ПоказатьВложениеФСГС(Вложения[0]);
	
КонецПроцедуры