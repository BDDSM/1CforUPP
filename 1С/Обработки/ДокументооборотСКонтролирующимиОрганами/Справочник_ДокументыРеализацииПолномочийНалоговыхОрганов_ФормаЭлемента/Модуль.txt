Перем ВременныйКаталог;

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если ЭтоНовый() Тогда
		Предупреждение("Документ не предназначен для ввода вручную!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ЭлементыФормы.НалоговыйОрган.Заголовок 	= НалоговыйОрган;
	ЭлементыФормы.Организация.Заголовок 	= Организация;
	ЭлементыФормы.НомерДокумента.Заголовок 	= НомерДокумента;
	ЭлементыФормы.ДатаДокумента.Заголовок 	= Формат(ДатаДокумента, "ДЛФ=DD");
	
	// устанавливаем отбор в таблице вложений
	УстановитьОтборВТаблицеВложений();
	
	КонтекстЭДО.ПометитьПисьмоКакПрочитанное(Ссылка);
	
	ПрорисоватьСтатус();
КонецПроцедуры

Процедура УстановитьОтборВТаблицеВложений()
	
	Вложения.Отбор.Документ.Установить(Ссылка);
	
КонецПроцедуры

Процедура КоманднаяПанельВложенияОткрыть(Кнопка)
	
	ОткрытьВложение();
	
КонецПроцедуры

Процедура ОткрытьВложение()
	
	ТекДанные = ЭлементыФормы.Вложения.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РасширениеФайла = ВыделитьРасширениеИзИмениФайла(ТекДанные.ИмяФайла);
	Если РасширениеФайла = "txt" Тогда
		ПоказатьТекстовоеВложение(ТекДанные);
	Иначе
		ПоказатьПроизвольноеВложение(ТекДанные);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьТекстовоеВложение(ТекДанные)
	
	// получаем вложение
	СтрВложения = КонтекстЭДО.ПолучитьФайлыДокументовРеализацииПолномочийНалоговыхОрганов(Ссылка, ТекДанные.ИмяФайла);
	Если СтрВложения.Количество() = 0 Тогда
		Предупреждение("Вложение с именем """ + ТекДанные.ИмяФайла + """ не обнаружено.");
		Возврат;
	КонецЕсли;
	СтрВложение = СтрВложения[0];
	
	// сохраняем вложение на диск
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	СтрВложение.Данные.Получить().Записать(ИмяВременногоФайла);
	
	// считываем при помощи ЧтениеТекста, чтобы автоматически распозналась кодировка UTF? или ANSI
	ОбъектЧтение = Новый ЧтениеТекста(ИмяВременногоФайла);
	СтрТекст = ОбъектЧтение.Прочитать();
	ОбъектЧтение.Закрыть();
	
	// удаляем временный файл
	УдалитьФайлы(ИмяВременногоФайла);
	
	// выводим на экран
	Текст = Новый ТекстовыйДокумент;
	Текст.УстановитьТекст(СтрТекст);
	Текст.Показать(ТекДанные.ИмяФайла, ТекДанные.ИмяФайла);
	
КонецПроцедуры

Процедура ПоказатьПроизвольноеВложение(ТекДанные)
	
	// получаем вложение
	СтрВложения = КонтекстЭДО.ПолучитьФайлыДокументовРеализацииПолномочийНалоговыхОрганов(Ссылка, ТекДанные.ИмяФайла);
	Если СтрВложения.Количество() = 0 Тогда
		Предупреждение("Вложение с именем """ + ТекДанные.ИмяФайла + """ не обнаружено.");
		Возврат;
	КонецЕсли;
	ТекДанные = СтрВложения[0];
	
	// создаем временный каталог
	ВременныйКаталог = СоздатьВременныйКаталог();
	
	// сохраняем вложение на диск
	ТекДанные.Данные.Получить().Записать(ВременныйКаталог + ТекДанные.ИмяФайла);
	
	// запускаем приложение
	ЗапуститьПриложение(ВременныйКаталог + ТекДанные.ИмяФайла);
	
КонецПроцедуры

Процедура КоманднаяПанельВложенияВыгрузить(Кнопка)

	ВыгрузитьВложения();

КонецПроцедуры

Процедура ВыгрузитьВложения()
	
	// получаем массив с именами выгружаемых вложений
	СтрВложения = ВыбранныеВложения();
	Если СтрВложения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// вводим каталог
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.Заголовок = "Выберите каталог";
	Диалог.ПроверятьСуществованиеФайла = Истина;
	Если НЕ Диалог.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	КаталогСохранения = Диалог.Каталог + ?(Прав(Диалог.Каталог, 1) = "\", "", "\");
	
	// проверяем, есть ли в выбранном каталоге файлы, которые будут перезаписаны
	Если КонтекстЭДО.ВКаталогеПрисутствуютФайлыСУказаннымиИменами(КаталогСохранения, СтрВложения) Тогда
		Ответ = Вопрос("В выбранным каталоге присутствуют файлы с именами выгружаемых вложений.
						|Продолжить с заменой файлов в каталоге на вложения с аналогичными именами?", РежимДиалогаВопрос.ДаНет);
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	// выгружаем вложения
	ВложенияСДанными = КонтекстЭДО.ПолучитьФайлыДокументовРеализацииПолномочийНалоговыхОрганов(Ссылка, СтрВложения);
	Для Каждого СтрВложение Из ВложенияСДанными Цикл
		Попытка
			СтрВложение.Данные.Получить().Записать(КаталогСохранения + СтрВложение.ИмяФайла);
		Исключение
			Сообщить("Не удалось выгрузить вложение """ + СтрВложение.ИмяФайла + """:
					|" + ИнформацияОбОшибке().Описание, СтатусСообщения.Важное);
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

Функция ВыбранныеВложения()
	
	ИменаФайлов = Новый Массив;
	
	// проверяем, выбраны ли строки
	ВыделенныеСтроки = ЭлементыФормы.Вложения.ВыделенныеСтроки;
	Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		ИменаФайлов.Добавить(ВыделеннаяСтрока.ИмяФайла);
	КонецЦикла;
	
	// если текущая строка определена, то добавляем ее
	Если ЭлементыФормы.Вложения.ТекущаяСтрока <> Неопределено Тогда
		ИменаФайлов.Добавить(ЭлементыФормы.Вложения.ТекущиеДанные.ИмяФайла);
	КонецЕсли;
	
	Возврат ИменаФайлов;
	
КонецФункции

Функция СоздатьВременныйКаталог()
	
	Если ЗначениеЗаполнено(ВременныйКаталог) Тогда
		Возврат ВременныйКаталог;
	КонецЕсли;
	
	ИмяКаталога = ПолучитьИмяВременногоФайла() + "\";
	СоздатьКаталог(ИмяКаталога);
	Возврат ИмяКаталога;
	
КонецФункции

Функция ВыделитьРасширениеИзИмениФайла(ИмяФайла)
	
	ДлинаИмени = СтрДлина(ИмяФайла);
	Для Инд = 1 По ДлинаИмени Цикл
		ТекИнд = ДлинаИмени - Инд + 1;
		ТекСимв = Сред(ИмяФайла, ТекИнд, 1);
		Если ТекСимв = "." Тогда
			Возврат нрег(СокрЛП(Сред(ИмяФайла, ТекИнд + 1)));
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

Процедура ВложенияВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьВложение();
	
КонецПроцедуры

Процедура НалоговыйОрганНажатие(Элемент)
	
	ОткрытьЗначение(НалоговыйОрган);
	
КонецПроцедуры

Процедура ОрганизацияНажатие(Элемент)
	
	ОткрытьЗначение(Организация);
	
КонецПроцедуры

Процедура ВложенияПередНачаломДобавления(Элемент, Отказ, Копирование)
	Отказ = Истина;
КонецПроцедуры

Функция ПрорисоватьСтатус()
	
	ТекстПанели = "Документ получен " + Формат(ДатаСообщения, "ДЛФ=DDT");
	Если ЗначениеЗаполнено(ДатаОтправки) Тогда
		Если НачалоДня(ДатаСообщения) = НачалоДня(ДатаОтправки) Тогда
			ТекстПанели = ТекстПанели + " (отправлен в " + Формат(ДатаОтправки, "ДЛФ=T") + ")";
		Иначе
			ТекстПанели = ТекстПанели + " (отправлен " + Формат(ДатаОтправки, "ДЛФ=DDT") + ")";
		КонецЕсли;
	КонецЕсли;
	ТекстПанели = ТекстПанели + ".";
	
	ИмеютсяОшибки 	= Ложь;
	ДокументПринят 	= Ложь;

	// получаем список сообщений
	ПоследнийЦиклОбмена = КонтекстЭДО.ПолучитьПоследнийЦиклОбмена(Ссылка);
	СообщенияЦикла = КонтекстЭДО.ПолучитьСообщенияЦиклаОбмена(ПоследнийЦиклОбмена);
	
	// выделяем основные типы сообщений
	СтрДокументНО 					= СообщенияЦикла.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыТранспортныхСообщений.ДокументНО));
	СтрИзвещениеДокументНП 			= СообщенияЦикла.НайтиСтроки(Новый Структура("Тип, Статус", Перечисления.ТипыТранспортныхСообщений.ИзвещениеДокументНП, Перечисления.СтатусыПисем.Отправленное));
	СтрРезультатПриемаДокументНП 	= СообщенияЦикла.НайтиСтроки(Новый Структура("Тип, Статус", Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДокументНП, Перечисления.СтатусыПисем.Отправленное));
	СтрИзвещениеРезультатПриемаНО 	= СообщенияЦикла.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНО));
	
	СтрКритическиеОшибки = СообщенияЦикла.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС));
	
	// формируем предупреждающий текст
	СтрОбратитеВнимание = Новый Массив;

	Если СтрКритическиеОшибки.Количество() > 0 Тогда
		СтрОбратитеВнимание.Добавить("имеются критические ошибки");
		ИмеютсяОшибки 	= Истина;
	КонецЕсли;
	
	Если СтрИзвещениеДокументНП.Количество() = 0 Тогда
		СтрОбратитеВнимание.Добавить("извещение о получении не отправлено");
	КонецЕсли;
	
	// анализируем результаты приема
	// если их несколько, то интересует последний
	ЧислоСообщений = СтрРезультатПриемаДокументНП.Количество();
	Если ЧислоСообщений = 0 Тогда
		СтрОбратитеВнимание.Добавить("результат приема не отправлен");
	Иначе
		Если ЧислоСообщений = 1 Тогда
			РезультатПриема = СтрРезультатПриемаДокументНП[0];
		Иначе
			// если протоколов несколько, то ориентируемся на наиболее свежий из них
			НаиболееПозднийРезультат = Неопределено;
			ДатаНаиболееПозднегоРезультата = '00010101';
			Для Каждого РезультатПриема Из СтрРезультатПриемаДокументНП Цикл
				ДатаРезультатаПриема = РезультатПриема.Дата;
				Если ДатаРезультатаПриема >= ДатаНаиболееПозднегоРезультата Тогда
					ДатаНаиболееПозднегоРезультата = ДатаРезультатаПриема;
					НаиболееПозднийРезультат = РезультатПриема;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Если РезультатПриема.Ссылка.ПротоколСОшибкой Тогда
			СтрОбратитеВнимание.Добавить("отправлен отрицательный результат приема");
			ИмеютсяОшибки 	= Истина;
		Иначе
			ДокументПринят 	= Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтрОбратитеВнимание.Количество() > 0 Тогда
		ТекстОбратитеВнимание = СтрОбратитеВнимание[0];
		Для Инд = 1 По СтрОбратитеВнимание.Количество() - 1 Цикл
			ТекСтрОбратитеВнимание = СтрОбратитеВнимание[Инд];
			ТекстОбратитеВнимание = ТекстОбратитеВнимание + ?(Инд = СтрОбратитеВнимание.Количество() - 1, " и ", ", ") + ТекСтрОбратитеВнимание;
		КонецЦикла;
		ТекстПанели = ТекстПанели + " Обратите внимание, " + ТекстОбратитеВнимание + ". ";
	КонецЕсли;
	
	Если ИмеютсяОшибки Тогда
		ЦветШрифта = Новый Цвет(255, 0, 0);
		ЦветРамки = ЦветШрифта;
	ИначеЕсли ДокументПринят Тогда
		ЦветШрифта = Новый Цвет(0, 179, 16);
		ЦветРамки = ЦветШрифта;
    Иначе
		ЦветШрифта = Новый Цвет(0, 0, 192);
		ЦветРамки = Новый Цвет(227, 227, 227);
	КонецЕсли;
	
	ЭлементыФормы.НадписьПанельСтатуса.Заголовок = СокрЛП(ТекстПанели);
	ЭлементыФормы.НадписьПанельСтатуса.ЦветТекста = ЦветШрифта;
	ЭлементыФормы.ПанельСтатусаВнутренняя.ЦветРамки = ЦветРамки;
	
КонецФункции

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Опрос форм" И Параметр.Ключ = Ссылка Тогда
		Параметр.Форма = ЭтаФорма;
	ИначеЕсли ИмяСобытия = "Изменение сообщения" И ТипЗнч(Параметр) = Тип("Структура") И Параметр.Свойство("Предмет") И КонтекстЭДО.ОтчетЯвляетсяПредметом(Параметр.Предмет, Ссылка) Тогда
		ПрорисоватьСтатус();
	КонецЕсли;
	
КонецПроцедуры