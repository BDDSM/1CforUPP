Перем ТекущийПользователь;
Перем СсылкаУчетнаяЗапись;
Перем ЗакрытиеФормыПоОК;

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	ЗакрытиеФормыПоОК = Истина;
	Закрыть();
	
КонецПроцедуры

Процедура ЗаписатьПользователейУчетнойЗаписи()
	
	НаборЗаписей = РегистрыСведений.ПользователиУчетныхЗаписейДокументооборота.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.УчетнаяЗапись.Установить(СсылкаУчетнаяЗапись);
	
	Для Каждого Стр Из Пользователи Цикл
		Если (ЗакрытиеФормыПоОК И Стр.Пометка)
			ИЛИ  (НЕ ЗакрытиеФормыПоОК И Стр.Пользователь = ТекущийПользователь) Тогда
			НовСтр = НаборЗаписей.Добавить();
			НовСтр.УчетнаяЗапись = СсылкаУчетнаяЗапись;
			НовСтр.Пользователь = Стр.Пользователь;
		КонецЕсли;
	КонецЦикла;
	
	Попытка
		НаборЗаписей.Записать();
	Исключение
		ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки(), , "Не удалось обновить список пользователей по учетной записи налогоплательщика """ + СокрЛП(СсылкаУчетнаяЗапись) + """.");
		Отказ = Истина;
	КонецПопытки;
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	СсылкаУчетнаяЗапись = КлючУникальности.Ссылка;
	СсылкаОрганизация = КлючУникальности.Организация;
	
	Если СсылкаОрганизация = Неопределено Тогда
		ИнформационнаяНадпись = "Электронный документооборот с контролирующими органами успешно настроен." + Символы.ПС + 
		"Создана учетная запись: " + СсылкаУчетнаяЗапись + Символы.ПС +
		"Выберите пользователей, имеющих право использовать эту учетную запись:";
	Иначе
		ИнформационнаяНадпись = "Электронный документооборот с контролирующими органами по организации" + Символы.пс +
		СсылкаОрганизация + " успешно настроен." + Символы.ПС + 
		"Создана учетная запись: " + СсылкаУчетнаяЗапись + Символы.ПС +
		"Выберите пользователей, имеющих право использовать эту учетную запись:";
		
	КонецЕсли;
	
	ТекущийПользователь = глЗначениеПеременной("глТекущийПользователь");
	ИнициализацияТаблицыНастроекПользователей();
	
	ЗакрытиеФормыПоОК = Ложь;
	
КонецПроцедуры

Процедура ИнициализацияТаблицыНастроекПользователей()
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА Настройки.УчетнаяЗапись ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Пометка,
	|	Пользователи.Ссылка КАК Пользователь
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ПользователиУчетныхЗаписейДокументооборота.УчетнаяЗапись КАК УчетнаяЗапись,
	|			ПользователиУчетныхЗаписейДокументооборота.Пользователь КАК Пользователь
	|		ИЗ
	|			РегистрСведений.ПользователиУчетныхЗаписейДокументооборота КАК ПользователиУчетныхЗаписейДокументооборота
	|		ГДЕ
	|			ПользователиУчетныхЗаписейДокументооборота.УчетнаяЗапись = &УчетнаяЗапись) КАК Настройки
	|		ПО Пользователи.Ссылка = Настройки.Пользователь
	|ГДЕ
	|	(НЕ Пользователи.ЭтоГруппа)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Пользователи.Наименование");
	
	Запрос.УстановитьПараметр("УчетнаяЗапись", СсылкаУчетнаяЗапись);
	
	Попытка
		Пользователи = Запрос.Выполнить().Выгрузить();
		
		СтрокаПользователь = Пользователи.Найти(ТекущийПользователь, "Пользователь");
		
		Если СтрокаПользователь <> Неопределено Тогда
			СтрокаПользователь.Пометка = Истина;
			ЭлементыФормы.Пользователи.ТекущаяСтрока = СтрокаПользователь;
		КонецЕсли;
	Исключение
	КонецПопытки;
КонецПроцедуры

Процедура ПользователиПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		ЭтоТекущийПользователь = ОформлениеСтроки.ДанныеСтроки.Пользователь = ТекущийПользователь;
		Если ЭтоТекущийПользователь Тогда
			ОформлениеСтроки.Шрифт = Новый Шрифт(ОформлениеСтроки.Шрифт, , , Истина);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ЗаписатьПользователейУчетнойЗаписи();
	
КонецПроцедуры