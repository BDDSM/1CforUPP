////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

// Процедура управления доступностью реквизитов формы.
//
Процедура УправлениеДиалогом()
	
	ЭлементыФормы.НадписьПериодС.Доступность 		= ПроводитьДокументыВыбранногоПериода;
	ЭлементыФормы.НадписьПо.Доступность 			= ПроводитьДокументыВыбранногоПериода;
	ЭлементыФормы.ДатаНач.Доступность 				= ПроводитьДокументыВыбранногоПериода;
	ЭлементыФормы.ДатаКон.Доступность 				= ПроводитьДокументыВыбранногоПериода;
	ЭлементыФормы.КнопкаВыбораПериода.Доступность 	= ПроводитьДокументыВыбранногоПериода;
	
КонецПроцедуры // УправлениеДиалогом()

// Возвращает массив организация по которым проводятся документы
//
Функция ПолучитьМассивОрганизацийКпроведению()
	
	МассивОрганизацийКПроведению = новый Массив();
	
	Для каждого ТекущаяОрганизация Из СписокОрганизаций Цикл
		Если ТекущаяОрганизация.Пометка Тогда
			МассивОрганизацийКПроведению.Добавить(ТекущаяОрганизация.Значение);
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат МассивОрганизацийКПроведению;

КонецФункции // ПолучитьСписокОрганизацийКпроведению()

// Процедура вызывается при нажатии кнопки "Выполнить" командной панели формы.
//
Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	МассивОрганизацийКПроведению = ПолучитьМассивОрганизацийКпроведению();
	СтрокаСообщения = "";
	Если МассивОрганизацийКПроведению.Количество() = 0 Тогда
		СтрокаСообщения =СтрокаСообщения + Символы.ПС+ "Не указана ни одна организация для проведения по регистрам НДС."
	КонецЕсли; 
	
	Если ПроводитьДокументыВыбранногоПериода Тогда
		ПроверкаПериода(СтрокаСообщения);
	КонецЕсли; 
	
	Если не ПустаяСтрока(СтрокаСообщения) Тогда
		Предупреждение("Выполнение обработки отменено по причине:"+ СтрокаСообщения);
		Возврат;
	КонецЕсли; 
	ПровестиДокументы(МассивОрганизацийКПроведению);
	
КонецПроцедуры // КнопкаВыполнитьНажатие()

Функция ПроверкаПериода(СтрокаСообщения)
	
	ПроверкаПройдена=Истина;
	СообшениеОбОшибке = "";
	Если ДатаНач > ДатаКон Тогда
		СообшениеОбОшибке = СообшениеОбОшибке + Символы.ПС+ " - дата начала больше даты окончания периода";
	КонецЕсли;
	Если ДатаНач='00010101' Тогда
		СообшениеОбОшибке = СообшениеОбОшибке + Символы.ПС+ " - не указана дата начала периода";
	КонецЕсли;
	Если ДатаКон='00010101' Тогда
		СообшениеОбОшибке = СообшениеОбОшибке + Символы.ПС+ " - не указана дата окончания периода";
	КонецЕсли;
	
	Если не ПустаяСтрока(СообшениеОбОшибке) Тогда
		СтрокаСообщения = СтрокаСообщения+Символы.ПС +  "Неверно задан период выполнения обработки: " + СообшениеОбОшибке;
		ПроверкаПройдена=Ложь;
	КонецЕсли; 
	
	Возврат ПроверкаПройдена;
	
КонецФункции // ПроверкаПериода()

// Процедура вызывается при нажатии кнопки "КнопкаВыбораПериода" командной панели формы.
//
Процедура КнопкаВыбораПериодаНажатие(Элемент)
	
	УправлениеОтчетами.ВвестиПериод(ДатаНач, ДатаКон);
	
КонецПроцедуры // КнопкаВыбораПериодаНажатие()

// Процедура вызывается при нажатии кнопки "Далее" командной панели формы.
//
Процедура ПроводитьДокументыВыбранногоПериодаПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // ПроводитьДокументыВыбранногоПериодаПриИзменении()

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()
	
	ПроводитьДокументыПоОперативнымРегистрам = Истина;
	ПроводитьДокументыПоРегистрамПартий = Истина;
	
	ОбновитьСписокОрганизаций();
	УправлениеДиалогом();
	
КонецПроцедуры // ПриОткрытии()

Процедура ОбновитьСписокОрганизаций()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА Организации.ОтражатьВРегламентированномУчете
	|				И (НЕ Организации.ПометкаУдаления)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Пометка,
	|	Организации.Представление
	|ИЗ
	|	Справочник.Организации КАК Организации";
	
	СписокОрганизаций.Очистить();
	
	АктуальныйСписокОрганизаций = Новый СписокЗначений;
	Результат = Запрос.Выполнить().Выгрузить();
	Для Каждого Строка ИЗ Результат Цикл
		СписокОрганизаций.Добавить(Строка.ссылка, Строка.представление,Строка.Пометка);
	КонецЦикла;
	СписокОрганизаций.СортироватьПоПредставлению();
	
КонецПроцедуры // ОбновитьСписокОрганизаций()

Процедура КоманднаяПанельОрганизацииОбновить(Кнопка)
	ОбновитьСписокОрганизаций();
КонецПроцедуры

Процедура КоманднаяПанельОрганизацииУстановитьФлажки(Кнопка)
	СписокОрганизаций.ЗаполнитьПометки(Истина);
КонецПроцедуры

Процедура КоманднаяПанельОрганизацииСнятьФлажки(Кнопка)
	СписокОрганизаций.ЗаполнитьПометки(Ложь);
КонецПроцедуры

Процедура СписокОрганизацийВыбор(Элемент, ЭлементСписка)
	ЭлементСписка.Пометка = НЕ ЭлементСписка.Пометка;
КонецПроцедуры