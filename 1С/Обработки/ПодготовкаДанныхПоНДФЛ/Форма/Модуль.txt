////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем ТекущаяОрганизация;
Перем ТекущийНалоговыйПериод;
Перем ПредыдущееЗначениеНалоговыйПериод;

Перем СерыйЦвет;
Перем УправляемыеПоляВводаФизлица;
Перем УправляемыеПоляВводаРеестра;

// Хранит ссылку на головную организацию
Перем мГоловнаяОрганизация;

Перем мОрганизацияЭтоЮрЛицо;
Перем мСписокВыбораОКАТОиКПП;

Перем мТекущийСотрудник;
Перем мТекущаяСтавка;
Перем мТекущийНомерСправки;
Перем мМаксимальныйНомерСправки;

Перем мСписокАвторскихВознаграждений; // Хранит авторские вознаграждения
Перем мСоответствиеДоходовИВычетов; // Хранит для кода дохода соответствующие ему коды вычетов
Перем мСписокВыбораСтандартныхВычетов;

Перем мОбработкаПодбораПоСтроке;
Перем мТекстПодбораПоСтроке;
Перем мПоследнееЗначениеЭлементаПодбораПоСтроке;


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура записывает новый документ объект поверх удаленного документа
//
Процедура ЗаписатьНовыйДокументПоверхСтарого(ЭлементСоответствия, ТаблицаУдаленныхДокументов)
	
	ЗаменяемаяСсылка = ЭлементСоответствия.Ключ;
	НовыйДокОбъект = ЭлементСоответствия.Значение;
	
	Если ТаблицаУдаленныхДокументов.Количество() > 0  Тогда
		УдаленныйДокОбъект = ТаблицаУдаленныхДокументов[0].Ссылка.ПолучитьОбъект();
		ТаблицаУдаленныхДокументов.Удалить(0);
		ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект, НовыйДокОбъект, , "Проведен");
		УдаленныйДокОбъект.СотрудникиОрганизации.Очистить();
		Для Каждого СтрокаТЧ Из НовыйДокОбъект.СотрудникиОрганизации Цикл
			ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект.СотрудникиОрганизации.Добавить(),СтрокаТЧ);
		КонецЦикла;
		УдаленныйДокОбъект.СведенияОДоходах.Очистить();
		Для Каждого СтрокаТЧ Из НовыйДокОбъект.СведенияОДоходах Цикл
			ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект.СведенияОДоходах.Добавить(),СтрокаТЧ);
		КонецЦикла;
		УдаленныйДокОбъект.СведенияОВычетах.Очистить();
		Для Каждого СтрокаТЧ Из НовыйДокОбъект.СведенияОВычетах Цикл
			ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект.СведенияОВычетах.Добавить(),СтрокаТЧ);
		КонецЦикла;
		УдаленныйДокОбъект.СуммыНалогов.Очистить();
		Для Каждого СтрокаТЧ Из НовыйДокОбъект.СуммыНалогов Цикл
			ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект.СуммыНалогов.Добавить(),СтрокаТЧ);
		КонецЦикла;
		УдаленныйДокОбъект.Записать();
		НоваяСсылка = УдаленныйДокОбъект.Ссылка;
		Если ДокументОбъект2НДФЛ.ЭтоНовый() Тогда
			Если ДокументОбъект2НДФЛ.ПолучитьСсылкуНового() = ЗаменяемаяСсылка Тогда
				ДокументОбъект2НДФЛ = УдаленныйДокОбъект
			КонецЕсли;
		Иначе
			Если ДокументОбъект2НДФЛ.Ссылка = ЗаменяемаяСсылка Тогда
				ДокументОбъект2НДФЛ = УдаленныйДокОбъект
			КонецЕсли;
		КонецЕсли;
		СтрокаРеестра = Документы2НДФЛ.Найти(ЗаменяемаяСсылка, "Справка");
		Если СтрокаРеестра <> Неопределено Тогда
			СтрокаРеестра.Справка = НоваяСсылка
		КонецЕсли;
		СоответствиеСсылокИОбъектов.Удалить(ЗаменяемаяСсылка);
		СоответствиеСсылокИОбъектов.Вставить(НоваяСсылка, УдаленныйДокОбъект);
	Иначе
		НовыйДокОбъект.Записать();
	КонецЕсли;
	
КонецПроцедуры // ЗаписатьНовыйДокументПоверхСтарого()

// Процедура формирует текст надписи о текущем состоянии подготовки документов
//
Процедура ОбновитьНадписьСостоянияПодготовкиДокументов()
	
	Если Документы2НДФЛ.Количество() = 0 Тогда
		РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов,
		ЭлементыФормы.ПолеКартинкиПредупреждение, 
		"Данные для передачи еще не готовы. Необходимо создать хотя бы один реестр справок 2-НДФЛ.", "СообщениеОПроблемах");
	Иначе
		ЕстьПустыеПачки = Ложь;
		Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
			ТекущаяПачка = ЭлементСоответствия.Ключ;
			ДокументОбъект = ЭлементСоответствия.Значение;
			ЕстьПустыеПачки = ЕстьПустыеПачки Или ДокументОбъект.СотрудникиОрганизации.Количество()=0;
		КонецЦикла;
		Если ЕстьПустыеПачки Тогда
			РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов,
			ЭлементыФормы.ПолеКартинкиПредупреждение, 
			"Не все реестры справок 2-НДФЛ заполнены.", "СообщениеОПроблемах");
		Иначе
			РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов,
			ЭлементыФормы.ПолеКартинкиПредупреждение, 
			"Данные для передачи в ИФНС подготовлены и готовы к проверке.", "");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ОбновитьНадписьСостоянияПодготовкиДокументов()

// Процедура считывает данные из базы и отображает их в форме 
//
Процедура ОбновитьПачкиДокументов()
	
	ДокументОбъект2НДФЛ = Неопределено;
	
	ЗаполнитьТаблицуРеестров();
	
	Если Документы2НДФЛ.Количество() = 0 Тогда
		ОформитьПустыеСтраницы();
	Иначе	
		ЭлементыФормы.ПанельДанныеДокументов.ТекущаяСтраница = ЭлементыФормы.ПанельДанныеДокументов.Страницы.СтраницаДанных;
		ЭлементыФормы.ПанельСостав2НДФЛ.ТекущаяСтраница = ЭлементыФормы.ПанельСостав2НДФЛ.Страницы.ДанныеФизлица;
		ЭлементыФормы.Документы2НДФЛ.ТекущаяСтрока = Документы2НДФЛ[0];
	КонецЕсли;
	
	ОпределитьМаксимальныйНомерСправки();
	
КонецПроцедуры // ОбновитьПачкиДокументов()

Процедура ОформитьПустыеСтраницы()
	
	ЭлементыФормы.ПанельДанныеДокументов.ТекущаяСтраница = ЭлементыФормы.ПанельДанныеДокументов.Страницы.ПустаяСтраница;
	ЭлементыФормы.ПанельСостав2НДФЛ.ТекущаяСтраница = ЭлементыФормы.ПанельСостав2НДФЛ.Страницы.ПустаяСтраница;
	ЭлементыФормы.НадписьДанныеФизлиц.Заголовок = "  Реестры справок 2-НДФЛ отсутствуют";
	ЭлементыФормы.НадписьРеестры.Заголовок = "  Реестры справок 2-НДФЛ";
	
КонецПроцедуры

Процедура ОбновитьДоступностьЭлементовФормы(МассивЭлементовФормы, ТолькоПросмотр = Ложь)

	Для каждого ЭУ Из МассивЭлементовФормы Цикл
		ЭУ.ТолькоПросмотр = ТолькоПросмотр;
	КонецЦикла;	

КонецПроцедуры

Процедура ОчиститьЗначенияЭлементовФормы(МассивЭлементовФормы)

	Для каждого ЭУ Из МассивЭлементовФормы Цикл
		ЭУ.Значение = Неопределено;
	КонецЦикла;	

КонецПроцедуры

Процедура ОформитьЭУПоСтрокеИзРеестра2НДФЛ()
	
	ТекущиеДанные = ЭлементыФормы.Документы2НДФЛ.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
	
		ЭлементыФормы.НадписьРеестры.Заголовок = "  Реестры справок 2-НДФЛ    (№ " + ДокументОбъект2НДФЛ.Номер + ")";
		ЭлементыФормы.НадписьДанныеФизлиц.Заголовок = "  Состав Реестра справок 2-НДФЛ № " + ДокументОбъект2НДФЛ.Номер;
		
		ДокументЗащищен = ДокументОбъект2НДФЛ.ПринятоНалоговымОрганом Или ДокументОбъект2НДФЛ.Проведен Или ДокументОбъект2НДФЛ.СпециальныйДокумент2011года;
		
		ОбновитьДоступностьЭлементовФормы(УправляемыеПоляВводаРеестра, ДокументЗащищен);
		
        // ЭУ с особым поведением
		ЭлементыФормы.ДолжностьПодписавшегоЛица.ТолькоПросмотр = ДокументЗащищен Или Не мОрганизацияЭтоЮрЛицо;
		
		Если ДокументОбъект2НДФЛ.СотрудникиОрганизации.Количество() = 0 Тогда
			УстановитьНедоступностьДанныхФизлица()	
		Иначе 	
			
			ОбновитьДоступностьЭлементовФормы(УправляемыеПоляВводаФизлица, ДокументЗащищен);
			
			ЭлементыФормы.ФизлицаРеестра2НДФЛ.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.СведенияОДоходах.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.СведенияОВычетах.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.СуммыНалогов.ТолькоПросмотр = ДокументЗащищен;
			
			ЭлементыФормы.КоманднаяПанельФизлицаРеестра2НДФЛ.Кнопки.Перенести.Доступность = Не ДокументЗащищен;
			ЭлементыФормы.КоманднаяПанельФизлицаРеестра2НДФЛ.Кнопки.Пронумеровать.Доступность = Не ДокументЗащищен;
			ЭлементыФормы.КнопкаОбновитьДанныеОДоходах.Доступность = Не ДокументЗащищен;
			ЭлементыФормы.КнопкаОбновитьДанныеСотрудника.Доступность = Не ДокументЗащищен;
			
			ЭлементыФормы.ФизлицаРеестра2НДФЛ.Колонки.Ставка.Видимость = НалоговыйПериод < 2011 Или ДокументОбъект2НДФЛ.СпециальныйДокумент2011года;
			ЭлементыФормы.ПанельИтоговыхСумм.ТекущаяСтраница = ?(НалоговыйПериод < 2011 Или ДокументОбъект2НДФЛ.СпециальныйДокумент2011года, ЭлементыФормы.ПанельИтоговыхСумм.Страницы.Страница2010, ЭлементыФормы.ПанельИтоговыхСумм.Страницы.Страница2011);
			
			ВидимостьСуммУдержано = НалоговыйПериод > 2010 И Не ДокументОбъект2НДФЛ.СпециальныйДокумент2011года И ДокументОбъект2НДФЛ.ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ЕжегоднаяОтчетность;
			ЭлементыФормы.ПанельПеречислено.Свертка = ?(ВидимостьСуммУдержано, РежимСверткиЭлементаУправления.Нет, РежимСверткиЭлементаУправления.Лево);
			ЭлементыФормы.ПанельУдержано.Свертка = ?(ВидимостьСуммУдержано, РежимСверткиЭлементаУправления.Нет, РежимСверткиЭлементаУправления.Верх);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОформитьЭУПоСтрокеИзСпискаФизлиц()
	
	ТекущаяСтрока = ЭлементыФормы.ФизлицаРеестра2НДФЛ.ТекущаяСтрока;
	
	Если ТекущаяСтрока <> Неопределено И ЗначениеЗаполнено(ТекущаяСтрока.Сотрудник) Тогда
		
		НомерСправки = ТекущаяСтрока.НомерСправки;
		
		ЭлементыФормы.НадписьДанныеФизлиц.Заголовок = "  Состав Реестра справок 2-НДФЛ № " + ДокументОбъект2НДФЛ.Номер + "        (справка № " + НомерСправки + ")";
		ЭлементыФормы.СведенияОДоходах.ОтборСтрок.НомерСправки.Установить(НомерСправки);
		ЭлементыФормы.СведенияОВычетах.ОтборСтрок.НомерСправки.Установить(НомерСправки);
		ЭлементыФормы.СуммыНалогов.ОтборСтрок.НомерСправки.Установить(НомерСправки);
		АдресРФВФорме = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(ТекущаяСтрока.АдресРФ);
		АдресЗарубежомВФорме = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(ТекущаяСтрока.АдресЗарубежом);
		Если ЭлементыФормы.СуммыНалогов.ТекущаяСтрока = Неопределено И ДокументОбъект2НДФЛ.СуммыНалогов.Количество() > 0 Тогда
			ЭлементыФормы.СуммыНалогов.ТекущаяСтрока = ДокументОбъект2НДФЛ.СуммыНалогов.Найти(НомерСправки, "НомерСправки")
		КонецЕсли;
		
	Иначе
		
		ЭлементыФормы.СведенияОДоходах.ОтборСтрок.НомерСправки.Установить(-1);
		ЭлементыФормы.СведенияОВычетах.ОтборСтрок.НомерСправки.Установить(-1);
		ЭлементыФормы.СуммыНалогов.ОтборСтрок.НомерСправки.Установить(-1);
		УстановитьНедоступностьДанныхФизлица()
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПечатьДокумента(ОбъектПечати, СохранятьДанные = Истина)
	Если СохранятьДанные Тогда
		Отказ = Ложь;
		СохранитьДокументы(Отказ, РежимДиалогаВопрос.ОКОтмена);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		СохранениеТекущихДанных();	
	КонецЕсли;
	Если НЕ ОбъектПечати.Ссылка.Пустая() Тогда
		Если ОбъектПечати.НалоговыйПериод > 2010 Тогда
			ОбъектПечати.Печать("Реестр2011");
			ОбъектПечати.Печать("Реестр2011Дополнительный");
		Иначе
			ОбъектПечати.Печать("Реестр2009");
		КонецЕсли;
		ОбъектПечати.Печать("Справка");
	КонецЕсли;
КонецПроцедуры

Процедура ПоказатьФайлДокумента(Пачка, СохранятьДанные = Истина)
	
	Если СохранятьДанные Тогда
		Отказ = Ложь;
		СохранитьДокументы(Отказ, РежимДиалогаВопрос.ОКОтмена);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		СохранениеТекущихДанных();	
	КонецЕсли;
	
	Если НЕ Пачка.Пустая() Тогда
		ОбъектПечати = СоответствиеСсылокИОбъектов[Пачка];
		ЗаголовокФайла = "Файл сведений о доходах физлиц по форме 2-НДФЛ";
		ПроцедурыПерсонифицированногоУчета.ПоказатьФайлДокумента(ОбъектПечати, ЗаголовокФайла);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПометитьНаУдалениеДокументОсновногоСписка(Элемент)
	
	ТекущаяСтрока = Элемент.ТекущаяСтрока;
	
	Если ТекущаяСтрока <> Неопределено Тогда
		ДокументОбъект = СоответствиеСсылокИОбъектов[ТекущаяСтрока.Справка];
		Если ДокументОбъект.ПринятоНалоговымОрганом Тогда
			Предупреждение("Текущий Реестр справок 2-НДФЛ уже принят налоговым органом!");
			Возврат;
		КонецЕсли;
		Ответ = Вопрос("Вы действительно хотите пометить реестр на удаление?", РежимДиалогаВопрос.ДаНет, 0);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			СоответствиеСсылокИОбъектов.Удалить(ТекущаяСтрока.Справка);
			Документы2НДФЛ.Удалить(ТекущаяСтрока);	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьДокументВстроеннойПроверкой(Справка)
	
	ОбработкаСообщений = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаСообщений.УдалитьСообщения();
	
	Отказ = Ложь;
	СохранитьДокументы(Отказ, РежимДиалогаВопрос.ОКОтмена);
	Если Отказ Тогда
		ОбработкаСообщений.ПоказатьСообщения();
		Возврат;
	КонецЕсли;
	СохранениеТекущихДанных();	
	
	Если НЕ Справка.Пустая() Тогда
		ДокументОбъект = СоответствиеСсылокИОбъектов[Справка];
		ЕстьОшибки = Ложь;
		ДокументОбъект.ПроверитьПравильностьЗаполненияДокумента(ЕстьОшибки);
		Если ЕстьОшибки тогда
			РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов,
			ЭлементыФормы.ПолеКартинкиПредупреждение, 
			"Данные для передачи еще не готовы. Обнаружены ошибки при проверке.", "Ошибка");
		Иначе
			ОбработкаСообщений.ДобавитьСообщение("Данные для передачи в ИФНС успешно прошли проверку!", Перечисления.ВидыСообщений.ВажнаяИнформация);
		КонецЕсли;
		ОбработкаСообщений.ПоказатьСообщения();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроставитьПринятоИФНС(Справка)
	
	Если НЕ Справка.Пустая() Тогда
		
		ДокументОбъект = СоответствиеСсылокИОбъектов[Справка];
		Попытка
			
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			ДокументОбъект.ПринятоНалоговымОрганом = Истина;
			ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
			
		Исключение
			ПоказатьИнформациюОбОшибке(ОбщегоНазначения.ПолучитьПричинуОшибки(ИнформацияОбОшибке()));
			ДокументОбъект.ПринятоНалоговымОрганом = Ложь;
			
		КонецПопытки;
		
	КонецЕсли;
	
	ОформитьЭУПоСтрокеИзРеестра2НДФЛ();
	ОформитьЭУПоСтрокеИзСпискаФизлиц();
	
КонецПроцедуры

Процедура СохранениеТекущихДанных()
	
	Если ЗначениеЗаполнено(ДокументОбъект2НДФЛ.Ссылка) И ДокументОбъект2НДФЛ.Модифицированность() Тогда
		ДокументОбъект2НДФЛ.Записать(?(ДокументОбъект2НДФЛ.Проведен, РежимЗаписиДокумента.ОтменаПроведения, РежимЗаписиДокумента.Запись));
	КонецЕсли;
	
КонецПроцедуры // СохранениеТекущихДанных()

// Процедура сохраняет документы в базу: существующие документы просто сохряняются, 
// удаленные документы помечаются на удаление, а новые документы записываются поверх удаленных или,
// если нет удаленных документов, создаются новые
Процедура СохранитьДокументы(Отказ = Ложь, РежимДиалога = Неопределено, ВыводитьВопрос = Истина)
	Если РежимДиалога = Неопределено Тогда
		РежимДиалога = РежимДиалогаВопрос.ДаНетОтмена;
	КонецЕсли;
	// Определяем модифицированность документов.
	ДокументыМодифицированы = Ложь;
	СписокДокументовДерева = Новый Массив;
	
	Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
		СписокДокументовДерева.Добавить(ЭлементСоответствия.Ключ);
		Если ЭлементСоответствия.Значение.Модифицированность() Тогда
			ДокументыМодифицированы = Истина;
		КонецЕсли;
	КонецЦикла; 
	
	// получаем список удаляемых документов
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокДокументовДерева", СписокДокументовДерева);
	Запрос.УстановитьПараметр("Организация", ТекущаяОрганизация);
	Запрос.УстановитьПараметр("НалоговыйПериод", ПредыдущееЗначениеНалоговыйПериод);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СправкаПоНДФЛВНалоговыйОрган.Ссылка
	|ИЗ
	|	Документ.СправкаПоНДФЛВНалоговыйОрган КАК СправкаПоНДФЛВНалоговыйОрган
	|ГДЕ
	|	СправкаПоНДФЛВНалоговыйОрган.Организация = &Организация
	|	И (НЕ СправкаПоНДФЛВНалоговыйОрган.ПометкаУдаления)
	|	И (НЕ СправкаПоНДФЛВНалоговыйОрган.Ссылка В (&СписокДокументовДерева))
	|	И СправкаПоНДФЛВНалоговыйОрган.НалоговыйПериод = &НалоговыйПериод";
	
	ВыборкаУдаляемыхДокументов = Запрос.Выполнить().Выбрать();
	ДокументыМодифицированы = ДокументыМодифицированы Или ВыборкаУдаляемыхДокументов.Количество() > 0;
	
	Если ДокументыМодифицированы Тогда
		Если ВыводитьВопрос Тогда
			РезультатОтвет = Вопрос("Сохранить текущие изменения?", РежимДиалога,,,"Сохранение данных");
		Иначе
			РезультатОтвет = КодВозвратаДиалога.Да;
		КонецЕсли;
		Если РезультатОтвет = КодВозвратаДиалога.Да Или РезультатОтвет = КодВозвратаДиалога.ОК Тогда
			НачатьТранзакцию();
			// Сохраняем измененные документы
			Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
				Если НЕ ЭлементСоответствия.Значение.ЭтоНовый() И ЭлементСоответствия.Значение.Модифицированность() Тогда
					ЭлементСоответствия.Значение.Записать(?(ЭлементСоответствия.Значение.Проведен,РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
				КонецЕсли;
			КонецЦикла;
			
			// Помечаем на удаление удаляемые объекты
			Пока ВыборкаУдаляемыхДокументов.Следующий() Цикл
				ДокОбъект = ВыборкаУдаляемыхДокументов.Ссылка.ПолучитьОбъект();
				ДокОбъект.УстановитьПометкуУдаления(Истина);
			КонецЦикла;
			
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СправкаПоНДФЛВНалоговыйОрган.Ссылка
			|ИЗ
			|	Документ.СправкаПоНДФЛВНалоговыйОрган КАК СправкаПоНДФЛВНалоговыйОрган
			|ГДЕ
			|	СправкаПоНДФЛВНалоговыйОрган.ПометкаУдаления";
			ТаблицаУдаленныхДокументов = Запрос.Выполнить().Выгрузить();
			Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
				
				Если ЭлементСоответствия.Значение.ЭтоНовый() Тогда
					ЗаписатьНовыйДокументПоверхСтарого(ЭлементСоответствия, ТаблицаУдаленныхДокументов);
				КонецЕсли;
				
			КонецЦикла;
			
			ЗафиксироватьТранзакцию();
		ИначеЕсли РезультатОтвет = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		ИначеЕсли РезультатОтвет = КодВозвратаДиалога.Нет Тогда
			ДокументОбъект2НДФЛ = Неопределено;
		КонецЕсли;
	ИначеЕсли РезультатОтвет = КодВозвратаДиалога.Нет Тогда
		ДокументОбъект2НДФЛ = Неопределено;
	КонецЕсли;
	
КонецПроцедуры // СохранитьДокументы()

Процедура СохранитьДокументСПерезаписью(Ссылка, Объект)
	Если Объект.ЭтоНовый() Тогда
		
		СписокДокументовДерева = Новый Массив;
		Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
			СписокДокументовДерева.Добавить(ЭлементСоответствия.Ключ);
		КонецЦикла; 
		
		// получаем список удаляемых документов
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("СписокДокументовДерева", СписокДокументовДерева);
		Запрос.УстановитьПараметр("Организация", ТекущаяОрганизация);
		Запрос.УстановитьПараметр("НалоговыйПериод", ПредыдущееЗначениеНалоговыйПериод);
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	СправкаПоНДФЛВНалоговыйОрган.Ссылка
		|ИЗ
		|	Документ.СправкаПоНДФЛВНалоговыйОрган КАК СправкаПоНДФЛВНалоговыйОрган
		|ГДЕ
		|	СправкаПоНДФЛВНалоговыйОрган.Организация = &Организация
		|	И (НЕ СправкаПоНДФЛВНалоговыйОрган.ПометкаУдаления)
		|	И (НЕ СправкаПоНДФЛВНалоговыйОрган.Ссылка В (&СписокДокументовДерева))
		|	И СправкаПоНДФЛВНалоговыйОрган.НалоговыйПериод = &НалоговыйПериод";
		
		ВыборкаУдаляемыхДокументов = Запрос.Выполнить().Выбрать();
		
		НачатьТранзакцию();
		
		// Помечаем на удаление удаляемые объекты
		Пока ВыборкаУдаляемыхДокументов.Следующий() Цикл
			ДокОбъект = ВыборкаУдаляемыхДокументов.Ссылка.ПолучитьОбъект();
			ДокОбъект.УстановитьПометкуУдаления(Истина);
		КонецЦикла;
		
		// Записываем в базу новые, только созданные документы на место удаленных документов
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	СправкаПоНДФЛВНалоговыйОрган.Ссылка
		|ИЗ
		|	Документ.СправкаПоНДФЛВНалоговыйОрган КАК СправкаПоНДФЛВНалоговыйОрган
		|ГДЕ
		|	СправкаПоНДФЛВНалоговыйОрган.ПометкаУдаления";
		
		ТаблицаУдаленныхДокументов = Запрос.Выполнить().Выгрузить();
		
		Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
			Если ЭлементСоответствия.Ключ = Ссылка Тогда
				ЗаписатьНовыйДокументПоверхСтарого(ЭлементСоответствия, ТаблицаУдаленныхДокументов);
				Прервать;
			КонецЕсли;
		КонецЦикла;
		ЗафиксироватьТранзакцию();
		
	Иначе	
		Объект.Записать(?(Объект.Проведен,РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
	КонецЕсли;
КонецПроцедуры // СохранитьДокументы()

Процедура УстановитьЗаголовкиОрганизацийВФорме()
	
	ЭлементыФормы.НадписьОрганизация.Заголовок = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация:");
	ЭлементыФормы.Телефон.Подсказка 			= "Телефон " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("организации");
	ЭлементыФормы.КодПоОКАТО.Подсказка 			= ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Код по ОКАТО и КПП организации (или ее обособленного подразделения)");
	
КонецПроцедуры // УстановитьЗаголовкиОрганизацийВФорме()

Процедура УстановитьНедоступностьДанныхФизлица()
	
	ЭлементыФормы.НадписьДанныеФизлиц.Заголовок = "  Состав Реестра справок 2-НДФЛ" + ?(Документы2НДФЛ.Количество() > 0, " № " + ДокументОбъект2НДФЛ.Номер, " (не выбрана)");
	
	ОбновитьДоступностьЭлементовФормы(УправляемыеПоляВводаФизлица, Истина);
	ОчиститьЗначенияЭлементовФормы(УправляемыеПоляВводаФизлица);
	
	ЭлементыФормы.СведенияОДоходах.ТолькоПросмотр = Истина;
	ЭлементыФормы.СведенияОВычетах.ТолькоПросмотр = Истина;
	ЭлементыФормы.СуммыНалогов.ТолькоПросмотр = Истина;
	
	ЭлементыФормы.КнопкаОбновитьДанныеОДоходах.Доступность = Ложь;
	ЭлементыФормы.КнопкаОбновитьДанныеСотрудника.Доступность = Ложь;
	
	ЭлементыФормы.ФизлицаРеестра2НДФЛ.Колонки.Ставка.Видимость = НалоговыйПериод < 2011 Или ДокументОбъект2НДФЛ.СпециальныйДокумент2011года;
	ЭлементыФормы.ПанельИтоговыхСумм.ТекущаяСтраница = ?(НалоговыйПериод < 2011 Или ДокументОбъект2НДФЛ.СпециальныйДокумент2011года, ЭлементыФормы.ПанельИтоговыхСумм.Страницы.Страница2010, ЭлементыФормы.ПанельИтоговыхСумм.Страницы.Страница2011);
	
	ВидимостьСуммУдержано = НалоговыйПериод > 2010 И Не ДокументОбъект2НДФЛ.СпециальныйДокумент2011года И ДокументОбъект2НДФЛ.ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ЕжегоднаяОтчетность;
	ЭлементыФормы.ПанельПеречислено.Свертка = ?(ВидимостьСуммУдержано, РежимСверткиЭлементаУправления.Нет, РежимСверткиЭлементаУправления.Лево);
	ЭлементыФормы.ПанельУдержано.Свертка = ?(ВидимостьСуммУдержано, РежимСверткиЭлементаУправления.Нет, РежимСверткиЭлементаУправления.Верх);
	
КонецПроцедуры

Процедура ФайлДокументаНаДиск(Пачка)
	
	Отказ = Ложь;
	СохранитьДокументы(Отказ, РежимДиалогаВопрос.ОКОтмена);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	СохранениеТекущихДанных();	
	
	Если НЕ Пачка.Пустая() Тогда
		ОбъектДействия = СоответствиеСсылокИОбъектов[Пачка];
		ИмяФайлаНаДиске = ОбъектДействия.ИмяФайла + ".xml";
		ПроцедурыПерсонифицированногоУчета.ЗаписатьФайлДокументаНаДискету(ОбъектДействия, глЗначениеПеременной("глТекущийПользователь"), ИмяФайлаНаДиске, КодировкаТекста.ANSI);	
	КонецЕсли;
	
КонецПроцедуры

// Функция формирует структуру параметров для ввода по подстроке
//
// Параметры
//  НЕТ
//
// Возвращаемое значение:
//	Структура имен и значений параметров
//
Функция ПолучитьСтруктуруПараметровПодбораПоСтроке(ИмяЭУ)

	Если ИмяЭУ = "КодДохода" Тогда
		СтруктураПараметров = Новый Структура("НеОтражаетсяВОтчетности2010", Ложь);
	КонецЕсли;

	Возврат СтруктураПараметров;

КонецФункции // ПолучитьСтруктуруПараметровПодбораПоСтроке()

Процедура ОпределитьМаксимальныйНомерСправки()

	мМаксимальныйНомерСправки = 0;
	Для каждого Элемент Из СоответствиеСсылокИОбъектов Цикл
		Для каждого СтрокаТЧ Из Элемент.Значение.СотрудникиОрганизации Цикл
			мМаксимальныйНомерСправки = Макс(мМаксимальныйНомерСправки, СтрокаТЧ.НомерСправки);
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры // ОпределитьМаксимальныйНомерСправки()

Процедура ОбновитьИтогиТекущейСтрокиСотрудника()
	
	ТекущаяСтрока = ЭлементыФормы.ФизлицаРеестра2НДФЛ.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		НомерСправки = ТекущаяСтрока.НомерСправки;
		СтруктураПоиска = Новый Структура("НомерСправки", НомерСправки);
		Если НалоговыйПериод < 2011 Или ДокументОбъект2НДФЛ.СпециальныйДокумент2011года Тогда
			ОбщСумма = 0;
			ОблСумма = 0;
			Для каждого СтрокаТЧ Из ДокументОбъект2НДФЛ.СведенияОДоходах.НайтиСтроки(СтруктураПоиска) Цикл
				ОбщСумма = ОбщСумма + СтрокаТЧ.СуммаДохода;
				ОблСумма = ОблСумма + СтрокаТЧ.СуммаДохода - СтрокаТЧ.СуммаВычета;
			КонецЦикла;
			Для каждого СтрокаТЧ Из ДокументОбъект2НДФЛ.СведенияОВычетах.НайтиСтроки(СтруктураПоиска) Цикл
				ОблСумма = ОблСумма - СтрокаТЧ.СуммаВычета;
			КонецЦикла;
			ТекущаяСтрока.ОбщаяСуммаДохода = ОбщСумма;
			ТекущаяСтрока.ОблагаемаяСуммаДохода = ОблСумма;
		Иначе
			СправкиПоНДФЛ.ОбновитьИтогиТекущейСправки(НомерСправки, ТекущаяСтрока.СтатусНалогоплательщика, ДокументОбъект2НДФЛ.СведенияОДоходах.Выгрузить(СтруктураПоиска), ДокументОбъект2НДФЛ.СведенияОВычетах.Выгрузить(СтруктураПоиска), ДокументОбъект2НДФЛ.СуммыНалогов);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроставитьНовыйНомерСправки(СтарыйНомерСправки, НовыйНомерСправки, ТабличнаяЧасть)

    Для каждого СтрокаТЧ Из ТабличнаяЧасть.НайтиСтроки(Новый Структура("НомерСправки",СтарыйНомерСправки)) Цикл
		СтрокаТЧ.НомерСправки = НовыйНомерСправки
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ОрганизацияПриИзменении(Элемент)
	
	Отказ = Ложь;
	Если ТекущаяОрганизация = Организация Тогда
		Возврат;
	КонецЕсли;
	СохранитьДокументы(Отказ);
	Если Отказ Тогда
		Организация = ТекущаяОрганизация;
		Возврат;
	КонецЕсли;
	
	мГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
	мОрганизацияЭтоЮрЛицо = ОбщегоНазначенияПереопределяемый.ЭтоЮрЛицо(Организация);
	СправкиПоНДФЛ.НастроитьПолеВводаОКАТО(ЭлементыФормы.КодПоОКАТО, Организация, мСписокВыбораОКАТОиКПП);
	
	ОбновитьПачкиДокументов();
	
	ТекущаяОрганизация = Организация;
	
КонецПроцедуры

Процедура НалоговыйПериодПриИзменении(Элемент)
	
	Если ПредыдущееЗначениеНалоговыйПериод = НалоговыйПериод Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	СохранитьДокументы(Отказ);
	Если Отказ Тогда
		НалоговыйПериод = ПредыдущееЗначениеНалоговыйПериод;
		Возврат;
	КонецЕсли;
	
	ОбновитьПачкиДокументов();
	
	ПредыдущееЗначениеНалоговыйПериод = НалоговыйПериод;
	
КонецПроцедуры

Процедура КодИФНСПриИзменении(Элемент)
	ДокументОбъект2НДФЛ.ИмяФайла = СправкиПоНДФЛ.ИмяФайлаОбмена(Организация, ДокументОбъект2НДФЛ.Дата, мОрганизацияЭтоЮрЛицо, Элемент.Значение);
КонецПроцедуры

Процедура КодПоОКАТОПриИзменении(Элемент)
	Если мОрганизацияЭтоЮрЛицо Тогда
		ДокументОбъект2НДФЛ.КодИФНС = СправкиПоНДФЛ.КодНалоговогоОрганаПоОКАТО_КППиОрганизации(Организация, мОрганизацияЭтоЮрЛицо, Элемент.Значение);
		ДокументОбъект2НДФЛ.ИмяФайла = СправкиПоНДФЛ.ИмяФайлаОбмена(Организация, ДокументОбъект2НДФЛ.Дата, мОрганизацияЭтоЮрЛицо, ДокументОбъект2НДФЛ.КодИФНС);
	КонецЕсли;
КонецПроцедуры

Процедура КодПоОКАТОНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлементСписка = ВыбратьИзСписка(мСписокВыбораОКАТОиКПП,Элемент,мСписокВыбораОКАТОиКПП.НайтиПоЗначению(ДокументОбъект2НДФЛ.ОКАТО_КПП));
	Если ЭлементСписка <> Неопределено Тогда
		ДокументОбъект2НДФЛ.ОКАТО_КПП = ЭлементСписка.Значение;
	КонецЕсли;
КонецПроцедуры

Процедура СтатусНалогоплательщикаПриИзменении(Элемент)
	Если ЭлементыФормы.ФизлицаРеестра2НДФЛ.ТекущиеДанные <> Неопределено Тогда
		ЭлементыФормы.АдресЗарубежомВФорме.ТолькоПросмотр = Не СправкиПоНДФЛ.ВводитсяАдресЗарубежом(ЭлементыФормы.ФизлицаРеестра2НДФЛ.ТекущиеДанные)
	КонецЕсли;
КонецПроцедуры

Процедура ГражданствоПриИзменении(Элемент)
	Если ЭлементыФормы.ФизлицаРеестра2НДФЛ.ТекущиеДанные <> Неопределено Тогда
		ЭлементыФормы.АдресЗарубежомВФорме.ТолькоПросмотр = Не СправкиПоНДФЛ.ВводитсяАдресЗарубежом(ЭлементыФормы.ФизлицаРеестра2НДФЛ.ТекущиеДанные)
	КонецЕсли;
КонецПроцедуры

Процедура АдресРФВФормеНачалоВыбора(Элемент, СтандартнаяОбработка)
	Если ЭлементыФормы.ФизлицаРеестра2НДФЛ.ТекущиеДанные <> Неопределено Тогда
		СтруктураАдреса = Новый Структура("Значение", ЭлементыФормы.ФизлицаРеестра2НДФЛ.ТекущиеДанные.АдресРФ);
		УправлениеКонтактнойИнформацией.РедактироватьМодальноЭлементАдреса(СтруктураАдреса, ЭтаФорма, "ФормаРедактированияАдреса");
		ЭлементыФормы.ФизлицаРеестра2НДФЛ.ТекущиеДанные.АдресРФ = СтруктураАдреса.Значение;
		АдресРФВФорме = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(СтруктураАдреса.Значение);
	КонецЕсли;
КонецПроцедуры

Процедура АдресЗарубежомВФормеНачалоВыбора(Элемент, СтандартнаяОбработка)
	Если ЭлементыФормы.ФизлицаРеестра2НДФЛ.ТекущиеДанные <> Неопределено Тогда
		ОбработкаРедактированияАдреса = Обработки.РедактированиеКонтактнойИнформации.Создать();
		ОбработкаРедактированияАдреса.мВозвратСтруктуры = Истина;	
		ОбработкаРедактированияАдреса.Вид = Справочники.ВидыКонтактнойИнформации.ИнострАдресФизЛица;
		
		СтрАдрес = ЭлементыФормы.ФизлицаРеестра2НДФЛ.ТекущиеДанные.АдресЗарубежом;
		СтруктураАдреса = УправлениеКонтактнойИнформацией.ПолучитьСтруктуруАдресаИзСтроки(СтрАдрес);
		УправлениеКонтактнойИнформацией.ЗаполнитьОбъектРедактированияАдресаПоСтруктуре(ОбработкаРедактированияАдреса, СтруктураАдреса);
			
		ФормаРедактированияАдреса = ОбработкаРедактированияАдреса.ПолучитьФорму("ФормаЗаписиАдреса", ЭтаФорма, "ФормаРедактированияИноАдреса");
		// установим размеры формы для редактирования
		ФормаРедактированияАдреса.ЭлементыФормы.ПанельНастроекАдреса.Свертка = РежимСверткиЭлементаУправления.Верх;
		ФормаРедактированияАдреса.ЭлементыФормы.ПанельКомментарий.Свертка = РежимСверткиЭлементаУправления.Низ;
		ФормаРедактированияАдреса.Высота = 310;
		
		РезультатРедактирования = ФормаРедактированияАдреса.ОткрытьМодально();
		
		Если РезультатРедактирования = Истина Тогда
			СтрАдрес = УправлениеКонтактнойИнформацией.ПолучитьПолныйАдрес(ОбработкаРедактированияАдреса);
			ЭлементыФормы.ФизлицаРеестра2НДФЛ.ТекущиеДанные.АдресЗарубежом = СтрАдрес;
			АдресЗарубежомВФорме = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(СтрАдрес);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ кнопок ФОРМЫ

Процедура КнопкаСформироватьНажатие(Элемент)
	
	МассивСообщений = Новый Массив;
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру(ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Не указана организация!"), Перечисления.ВидыСообщений.Ошибка));
		ВывестиСообщенияОбОшибках(МассивСообщений);
		Возврат;
	КонецЕсли;
	
	СтрокиКУдалению = Новый Массив;
	ВсегоДокументов = Документы2НДФЛ.Количество();
	Для Сч = 1 По ВсегоДокументов Цикл
		СтрокаТЧ = Документы2НДФЛ[ВсегоДокументов - Сч];
		ДокОбъект = СоответствиеСсылокИОбъектов[СтрокаТЧ.Справка];
		Если ДокОбъект.ЭтоНовый() Тогда
			СтрокиКУдалению.Добавить(СтрокаТЧ)
		КонецЕсли;
	КонецЦикла;
	
	Если СтрокиКУдалению.Количество() > 0 Тогда
		Вопрос = "Текущие непроведенные документы будут потеряны. Продолжить?";
		Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Для каждого СтрокаУдаления Из СтрокиКУдалению Цикл
		СоответствиеСсылокИОбъектов.Удалить(СтрокаУдаления.Справка);
		Документы2НДФЛ.Удалить(СтрокаУдаления);
	КонецЦикла;
	
	Состояние("Происходит формирование справок 2-НДФЛ, это может занять продолжительное время...");
	
	ДокументОбъект2НДФЛ = Неопределено;
	ТекущаяСтрока = Автозаполнение();
	Если ТекущаяСтрока = Неопределено Тогда
		Если Документы2НДФЛ.Количество() = 0 Тогда
			ОформитьПустыеСтраницы();
		КонецЕсли;
	Иначе
		ЭлементыФормы.ПанельДанныеДокументов.ТекущаяСтраница = ЭлементыФормы.ПанельДанныеДокументов.Страницы.СтраницаДанных;
		ЭлементыФормы.ПанельСостав2НДФЛ.ТекущаяСтраница = ЭлементыФормы.ПанельСостав2НДФЛ.Страницы.ДанныеФизлица;
		ЭлементыФормы.Документы2НДФЛ.ТекущаяСтрока = ТекущаяСтрока;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПечатьНажатие(Элемент)
	Если ЭлементыФормы.Документы2НДФЛ.ТекущаяСтрока <> Неопределено Тогда
		ПечатьДокумента(ДокументОбъект2НДФЛ);	
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьНажатие(Кнопка)
	Если ЭлементыФормы.Документы2НДФЛ.ТекущаяСтрока <> Неопределено Тогда
		ПроверитьДокументВстроеннойПроверкой(ЭлементыФормы.Документы2НДФЛ.ТекущаяСтрока.Справка); 
	КонецЕсли;
КонецПроцедуры

Процедура ПоказатьФайлНажатие(Элемент)
	Если ЭлементыФормы.Документы2НДФЛ.ТекущаяСтрока <> Неопределено Тогда
		ПоказатьФайлДокумента(ЭлементыФормы.Документы2НДФЛ.ТекущаяСтрока.Справка); 
	КонецЕсли;
КонецПроцедуры

Процедура НаДискНажатие(Элемент)
	Если ЭлементыФормы.Документы2НДФЛ.ТекущаяСтрока <> Неопределено Тогда
		ФайлДокументаНаДиск(ЭлементыФормы.Документы2НДФЛ.ТекущаяСтрока.Справка); 
	КонецЕсли;
КонецПроцедуры

Процедура КнопкаОКНажатие(Элемент)
	Закрыть();
КонецПроцедуры

Процедура КнопкаОбновитьДанныеОДоходахНажатие(Элемент)
	ТекущаяСтрока = ЭлементыФормы.ФизлицаРеестра2НДФЛ.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		Если НалоговыйПериод > 2010 И ДокументОбъект2НДФЛ.ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ Тогда
			РаботаСДиалогами.ВывестиПредупреждение("Автоматически заполняются только справки для ежегодной отчетности." + Символы.ПС + "Справки о невозможности удержания налога заполняются вручную.");
			Возврат	
		КонецЕсли;
		Ответ = РаботаСДиалогами.ЗадатьВопрос("Сведения о доходах, вычетах и налогах будут обновлены по данным учета, внесенные вручную изменения будут потеряны." + Символы.ПС + "Продолжить?", РежимДиалогаВопрос.ДаНет, КодВозвратаДиалога.Да);
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат ;
		КонецЕсли;
		ТекущийНомерСправки = ТекущаяСтрока.НомерСправки;
		СправкиПоНДФЛ.УдалитьДанныеСправки(ТекущийНомерСправки, ДокументОбъект2НДФЛ.СведенияОДоходах);	
		СправкиПоНДФЛ.УдалитьДанныеСправки(ТекущийНомерСправки, ДокументОбъект2НДФЛ.СведенияОВычетах);
		СправкиПоНДФЛ.УдалитьДанныеСправки(ТекущийНомерСправки, ДокументОбъект2НДФЛ.СуммыНалогов);
		СправкиПоНДФЛ.ПрочитатьДанныеСправки(ТекущаяСтрока, ДокументОбъект2НДФЛ.СведенияОДоходах, ДокументОбъект2НДФЛ.СведенияОВычетах, ДокументОбъект2НДФЛ.СуммыНалогов, НалоговыйПериод, Организация, мГоловнаяОрганизация, ДокументОбъект2НДФЛ.ОКАТО_КПП, НачалоМесяца(ДокументОбъект2НДФЛ.Дата))
	КонецЕсли;
КонецПроцедуры

Процедура КнопкаОбновитьДанныеСотрудникаНажатие(Элемент)
	ТекущаяСтрока = ЭлементыФормы.ФизлицаРеестра2НДФЛ.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		СправкиПоНДФЛ.ПрочитатьДанныеСотрудника(ТекущаяСтрока, ДокументОбъект2НДФЛ.Дата, НалоговыйПериод);
		Если ЗначениеЗаполнено(ТекущаяСтрока.Сотрудник) Тогда
			АдресРФВФорме = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(ТекущаяСтрока.АдресРФ);
			АдресЗарубежомВФорме = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(ТекущаяСтрока.АдресЗарубежом);
			Если (ТекущаяСтрока.Ставка = Перечисления.НДФЛСтавки.Ставка30 Или ТекущаяСтрока.Ставка = Перечисления.НДФЛСтавки.Ставка15) И ТекущаяСтрока.СтатусНалогоплательщика <> Перечисления.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент Тогда
				ТекущаяСтрока.СтатусНалогоплательщика = Перечисления.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент
			КонецЕсли;
		Иначе 	
			АдресРФВФорме = "";
			АдресЗарубежомВФорме = "";
		КонецЕсли;
		ЭлементыФормы.АдресЗарубежомВФорме.ТолькоПросмотр = Не СправкиПоНДФЛ.ВводитсяАдресЗарубежом(ТекущаяСтрока)
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНОЙ ПАНЕЛИ т.п. Документы2НДФЛ

Процедура КоманднаяПанельДокументы2НДФЛПометитьНаУдаление(Кнопка)
	
	ПометитьНаУдалениеДокументОсновногоСписка(ЭлементыФормы.Документы2НДФЛ);
	
	Если Документы2НДФЛ.Количество() = 0 Тогда
		ОформитьПустыеСтраницы();
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельДокументы2НДФЛДействиеОбновить(Кнопка)
	СохранениеТекущихДанных();	
	Отказ = Ложь;
	СохранитьДокументы(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	ОбновитьПачкиДокументов();
КонецПроцедуры

Процедура КоманднаяПанельДокументы2НДФЛДобавить(Кнопка)
	Если Документы2НДФЛ.Количество() = 0 Тогда
		ЭлементыФормы.ПанельДанныеДокументов.ТекущаяСтраница = ЭлементыФормы.ПанельДанныеДокументов.Страницы.СтраницаДанных;
		ЭлементыФормы.ПанельСостав2НДФЛ.ТекущаяСтраница = ЭлементыФормы.ПанельСостав2НДФЛ.Страницы.ДанныеФизлица;
	КонецЕсли;
	СоздатьРеестр2НДФЛ(,Истина, ЭлементыФормы.Документы2НДФЛ);
КонецПроцедуры

Процедура КоманднаяПанельДокументы2НДФЛПринятоВИФНС(Кнопка)
	Если ЭлементыФормы.Документы2НДФЛ.ТекущаяСтрока <> Неопределено Тогда
		СохранениеТекущихДанных();	
		ПроставитьПринятоИФНС(ЭлементыФормы.Документы2НДФЛ.ТекущаяСтрока.Справка)
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ Документы2НДФЛ

Процедура Документы2НДФЛВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДокументОбъект = СоответствиеСсылокИОбъектов[ВыбраннаяСтрока.Справка];
	
	// Документ перед показом придется сохранить
	Если ДокументОбъект.Модифицированность() Тогда
		Если Вопрос("Документ должен быть записан перед показом. Сохранить документ?", 
			РежимДиалогаВопрос.ОКОтмена,,КодВозвратаДиалога.ОК, "Документ не записан") = КодВозвратаДиалога.ОК Тогда
			СохранитьДокументСПерезаписью(ВыбраннаяСтрока.Справка, ДокументОбъект);
			ДокументОбъект = СоответствиеСсылокИОбъектов[ВыбраннаяСтрока.Справка];
		Иначе
			Возврат
		КонецЕсли;
	КонецЕсли;
	
	ДокументОбъект.ПолучитьФорму().ОткрытьМодально();
	
	Если ДокументОбъект.Модифицированность() Тогда // форму закрыли, не сохраняя изменения, - перечитаем документ
		ДокументОбъект = ВыбраннаяСтрока.Справка.ПолучитьОбъект();
		СоответствиеСсылокИОбъектов.Вставить(ВыбраннаяСтрока.Справка, ДокументОбъект);
	КонецЕсли;
	
	ОформитьЭУПоСтрокеИзРеестра2НДФЛ();
	
КонецПроцедуры

Процедура Документы2НДФЛПередУдалением(Элемент, Отказ)
	Отказ = Истина;
	ПометитьНаУдалениеДокументОсновногоСписка(Элемент);
КонецПроцедуры

Процедура Документы2НДФЛПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		
		ОформлениеЯчеек = ОформлениеСтроки.Ячейки;
		
		ДокументОбъект = СоответствиеСсылокИОбъектов[ОформлениеСтроки.ДанныеСтроки.Справка];
		ОформлениеЯчеек.Справка.Текст = " № " + ДокументОбъект.Номер +" (" + ДокументОбъект.СотрудникиОрганизации.Количество() + ")";
		
		Если НалоговыйПериод < 2011 Или ДокументОбъект.СпециальныйДокумент2011года Тогда
			ОформлениеЯчеек.ОбщаяСуммаДохода.УстановитьТекст(Формат(ДокументОбъект.СотрудникиОрганизации.Итог("ОбщаяСуммаДохода"),"ЧЦ=15; ЧДЦ=2"));
			ОформлениеЯчеек.НалогаИсчислено.УстановитьТекст(Формат(ДокументОбъект.СотрудникиОрганизации.Итог("Исчислено"),"ЧЦ=15; ЧДЦ=0"));
			ОформлениеЯчеек.НалогаУдержано.УстановитьТекст(Формат(ДокументОбъект.СотрудникиОрганизации.Итог("Удержано"),"ЧЦ=15; ЧДЦ=0"));
		Иначе
			ОформлениеЯчеек.ОбщаяСуммаДохода.УстановитьТекст(Формат(ДокументОбъект.СуммыНалогов.Итог("ОбщаяСуммаДохода"),"ЧЦ=15; ЧДЦ=2"));
			ОформлениеЯчеек.НалогаИсчислено.УстановитьТекст(Формат(ДокументОбъект.СуммыНалогов.Итог("Исчислено"),"ЧЦ=15; ЧДЦ=0"));
			ОформлениеЯчеек.НалогаУдержано.УстановитьТекст(Формат(ДокументОбъект.СуммыНалогов.Итог("Удержано"),"ЧЦ=15; ЧДЦ=0"));
		КонецЕсли;
		
		Если ДокументОбъект.ПринятоНалоговымОрганом Или ДокументОбъект.СпециальныйДокумент2011года Тогда
			ОформлениеСтроки.ЦветТекста = СерыйЦвет;
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры

Процедура Документы2НДФЛПередНачаломДобавления(Элемент, Отказ, Копирование)
	Отказ = Истина;
	СоздатьРеестр2НДФЛ(,Истина, ЭлементыФормы.Документы2НДФЛ);
КонецПроцедуры

Процедура ОбработчикОжиданияДокументы2НДФЛПриАктивизацииСтроки()

	ТекущиеДанные = ЭлементыФормы.Документы2НДФЛ.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ДокументОбъект2НДФЛ = СоответствиеСсылокИОбъектов[ТекущиеДанные.Справка];
		ОформитьЭУПоСтрокеИзРеестра2НДФЛ();
	КонецЕсли;

КонецПроцедуры // ОбработчикОжидания()

Процедура Документы2НДФЛПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("ОбработчикОжиданияДокументы2НДФЛПриАктивизацииСтроки", 0.1, Истина);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНОЙ ПАНЕЛИ ТАБЛИЧНОГО ПОЛЯ ФизлицаРеестра2НДФЛ

Процедура КоманднаяПанельФизлицаРеестра2НДФЛПронумеровать(Кнопка)
	Если ДокументОбъект2НДФЛ.СотрудникиОрганизации.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	Если НЕ РаботаСДиалогами.ЗаписатьДокументПередВыполнениемДействия(ДокументОбъект2НДФЛ, ЭтаФорма, "Перенумеровать справки можно только после записи документа. Продолжить?") Тогда
		Возврат;
	КонецЕсли;
	МаксимальныйНомерСправки = 0;
	Для каждого Элемент Из СоответствиеСсылокИОбъектов Цикл
		Если Элемент.Значение.Дата < ДокументОбъект2НДФЛ.Дата Тогда
			Для каждого СтрокаТЧ Из Элемент.Значение.СотрудникиОрганизации Цикл
				МаксимальныйНомерСправки = Макс(МаксимальныйНомерСправки, СтрокаТЧ.НомерСправки);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	НомерПервойСправки = МаксимальныйНомерСправки + 1;
	СправкиПоНДФЛ.ПеренумероватьСправкиДокумента(ДокументОбъект2НДФЛ, НомерПервойСправки);
	ОформитьЭУПоСтрокеИзСпискаФизлиц();
    ОпределитьМаксимальныйНомерСправки();
КонецПроцедуры

Процедура КоманднаяПанельФизлицаРеестра2НДФЛПеренести(Кнопка)
	ТекущаяСтрока = ЭлементыФормы.ФизлицаРеестра2НДФЛ.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		
		СпРеестров = Новый СписокЗначений;
		
		Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
			Если ЭлементСоответствия.Значение <> ДокументОбъект2НДФЛ и Не ЭлементСоответствия.Ключ.Пустая() Тогда
				Документ2НДФЛ = ЭлементСоответствия.Значение;
				СпРеестров.Добавить(Документ2НДФЛ, " № " + Документ2НДФЛ.Номер);
			КонецЕсли;
		КонецЦикла;
		
		НовыйРеестр = Неопределено;
		Если СпРеестров.Количество() = 0 Тогда
			Предупреждение("В списке реестров присутствует единственный реестр. Перенос справки невозможен!")
		ИначеЕсли СпРеестров.Количество() = 1 Тогда
			НовыйРеестр = СпРеестров[0].Значение
		ИначеЕсли СпРеестров.Количество() > 1 Тогда
			ЭлементНовыйРеестр = ВыбратьИзМеню(СпРеестров, ЭлементыФормы.КоманднаяПанельФизлицаРеестра2НДФЛ);
			Если ЭлементНовыйРеестр = Неопределено Тогда
				Возврат;
			КонецЕсли;
			НовыйРеестр = ЭлементНовыйРеестр.Значение;
		КонецЕсли;
		Если НовыйРеестр <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(НовыйРеестр.СотрудникиОрганизации.Добавить(),ТекущаяСтрока);
			Для каждого СтрокаТЧ Из ДокументОбъект2НДФЛ.СведенияОДоходах.НайтиСтроки(Новый Структура("НомерСправки", ТекущаяСтрока.НомерСправки)) Цикл
				ЗаполнитьЗначенияСвойств(НовыйРеестр.СведенияОДоходах.Добавить(),СтрокаТЧ);
				ДокументОбъект2НДФЛ.СведенияОДоходах.Удалить(СтрокаТЧ)
			КонецЦикла;
			Для каждого СтрокаТЧ Из ДокументОбъект2НДФЛ.СведенияОВычетах.НайтиСтроки(Новый Структура("НомерСправки", ТекущаяСтрока.НомерСправки)) Цикл
				ЗаполнитьЗначенияСвойств(НовыйРеестр.СведенияОВычетах.Добавить(),СтрокаТЧ);
				ДокументОбъект2НДФЛ.СведенияОВычетах.Удалить(СтрокаТЧ)
			КонецЦикла;
			Для каждого СтрокаТЧ Из ДокументОбъект2НДФЛ.СуммыНалогов.НайтиСтроки(Новый Структура("НомерСправки", ТекущаяСтрока.НомерСправки)) Цикл
				ЗаполнитьЗначенияСвойств(НовыйРеестр.СуммыНалогов.Добавить(),СтрокаТЧ);
				ДокументОбъект2НДФЛ.СуммыНалогов.Удалить(СтрокаТЧ)
			КонецЦикла;
			ДокументОбъект2НДФЛ.СотрудникиОрганизации.Удалить(ТекущаяСтрока.НомерСтроки - 1);
			Обновить();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ФизлицаРеестра2НДФЛ

Процедура ФизлицаРеестра2НДФЛПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("ОформитьЭУПоСтрокеИзСпискаФизлиц", 0.1, Истина);
КонецПроцедуры

Процедура ФизлицаРеестра2НДФЛПередУдалением(Элемент, Отказ)
	
	НомерСправки = Элемент.ТекущаяСтрока.НомерСправки;
	СправкиПоНДФЛ.УдалитьДанныеСправки(НомерСправки, ДокументОбъект2НДФЛ.СведенияОДоходах);	
	СправкиПоНДФЛ.УдалитьДанныеСправки(НомерСправки, ДокументОбъект2НДФЛ.СведенияОВычетах);
	СправкиПоНДФЛ.УдалитьДанныеСправки(НомерСправки, ДокументОбъект2НДФЛ.СуммыНалогов);
	АдресРФВФорме = "";
	АдресЗарубежомВФорме = "";
	
КонецПроцедуры

Процедура ФизлицаРеестра2НДФЛПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущаяСтрока = Элемент.ТекущаяСтрока;
	Если НоваяСтрока Тогда
		мТекущийСотрудник = Справочники.СотрудникиОрганизаций.ПустаяСсылка();
		мТекущаяСтавка = Перечисления.НДФЛСтавки.ПустаяСсылка();
		мТекущийНомерСправки = -1;
		Если Не Копирование Тогда
			ТекущаяСтрока.Ставка = Перечисления.НДФЛСтавки.Ставка13;
			ТекущаяСтрока.НомерСправки = мМаксимальныйНомерСправки + 1;
		КонецЕсли;
	Иначе
		мТекущийСотрудник = ТекущаяСтрока.Сотрудник;
		мТекущаяСтавка = ТекущаяСтрока.Ставка;
		мТекущийНомерСправки = ТекущаяСтрока.НомерСправки;
	КонецЕсли;
КонецПроцедуры

Процедура ФизлицаРеестра2НДФЛПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если Не ОтменаРедактирования Тогда
		НовыйНомерСправки = Элемент.ТекущаяСтрока.НомерСправки;
		НомерСтроки = Элемент.ТекущаяСтрока.НомерСтроки;
		Для каждого СтрокаТЧ Из ДокументОбъект2НДФЛ.СотрудникиОрганизации Цикл
			Если НомерСтроки = СтрокаТЧ.НомерСтроки Тогда
				Продолжить;
			КонецЕсли;
			Отказ = НовыйНомерСправки = СтрокаТЧ.НомерСправки;
			Если Отказ Тогда
				РаботаСДиалогами.ВывестиПредупреждение("Номера справок должны быть различными!");
				Возврат
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;
КонецПроцедуры

Процедура ФизлицаРеестра2НДФЛПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если Не ОтменаРедактирования Тогда
		ТекущаяСтрока = Элемент.ТекущаяСтрока;
		НовыйНомерСправки = ТекущаяСтрока.НомерСправки;
		Если мТекущийСотрудник <> ТекущаяСтрока.Сотрудник Или мТекущаяСтавка <> ТекущаяСтрока.Ставка Тогда
			СправкиПоНДФЛ.УдалитьДанныеСправки(мТекущийНомерСправки, ДокументОбъект2НДФЛ.СведенияОДоходах);	
			СправкиПоНДФЛ.УдалитьДанныеСправки(мТекущийНомерСправки, ДокументОбъект2НДФЛ.СведенияОВычетах);
			СправкиПоНДФЛ.УдалитьДанныеСправки(мТекущийНомерСправки, ДокументОбъект2НДФЛ.СуммыНалогов);
			Если мТекущийСотрудник <> ТекущаяСтрока.Сотрудник Тогда
				СправкиПоНДФЛ.ПрочитатьДанныеСотрудника(ТекущаяСтрока, ДокументОбъект2НДФЛ.Дата, НалоговыйПериод);
				Если ЗначениеЗаполнено(ТекущаяСтрока.Сотрудник) Тогда
					АдресРФВФорме = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(ТекущаяСтрока.АдресРФ);
					АдресЗарубежомВФорме = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(ТекущаяСтрока.АдресЗарубежом);
					Если (ТекущаяСтрока.Ставка = Перечисления.НДФЛСтавки.Ставка30 Или ТекущаяСтрока.Ставка = Перечисления.НДФЛСтавки.Ставка15) И ТекущаяСтрока.СтатусНалогоплательщика <> Перечисления.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент Тогда
						ТекущаяСтрока.СтатусНалогоплательщика = Перечисления.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент
					КонецЕсли;
				Иначе 	
					АдресРФВФорме = "";
					АдресЗарубежомВФорме = "";
				КонецЕсли;
				ЭлементыФормы.АдресЗарубежомВФорме.ТолькоПросмотр = Не СправкиПоНДФЛ.ВводитсяАдресЗарубежом(ТекущаяСтрока)
			КонецЕсли;
			СправкиПоНДФЛ.ПрочитатьДанныеСправки(ТекущаяСтрока, ДокументОбъект2НДФЛ.СведенияОДоходах, ДокументОбъект2НДФЛ.СведенияОВычетах, ДокументОбъект2НДФЛ.СуммыНалогов, НалоговыйПериод, Организация, мГоловнаяОрганизация, ДокументОбъект2НДФЛ.ОКАТО_КПП, НачалоМесяца(ДокументОбъект2НДФЛ.Дата));
		ИначеЕсли мТекущийНомерСправки <> НовыйНомерСправки Тогда
			ПроставитьНовыйНомерСправки(мТекущийНомерСправки, НовыйНомерСправки, ДокументОбъект2НДФЛ.СведенияОДоходах);
			ПроставитьНовыйНомерСправки(мТекущийНомерСправки, НовыйНомерСправки, ДокументОбъект2НДФЛ.СведенияОВычетах);
			ПроставитьНовыйНомерСправки(мТекущийНомерСправки, НовыйНомерСправки, ДокументОбъект2НДФЛ.СуммыНалогов);
		КонецЕсли;
		Если мТекущийНомерСправки <> НовыйНомерСправки Тогда
			ЭлементыФормы.СведенияОДоходах.ОтборСтрок.НомерСправки.Установить(НовыйНомерСправки);
			ЭлементыФормы.СведенияОВычетах.ОтборСтрок.НомерСправки.Установить(НовыйНомерСправки);
			ЭлементыФормы.СуммыНалогов.ОтборСтрок.НомерСправки.Установить(НовыйНомерСправки);
			мМаксимальныйНомерСправки = Макс(мМаксимальныйНомерСправки, НовыйНомерСправки);
		КонецЕсли;
		Если ЗначениеЗаполнено(ТекущаяСтрока.Сотрудник) Тогда
			ОбновитьДоступностьЭлементовФормы(УправляемыеПоляВводаФизлица);
			ЭлементыФормы.СведенияОДоходах.ТолькоПросмотр = Ложь;
			ЭлементыФормы.СведенияОВычетах.ТолькоПросмотр = Ложь;
			ЭлементыФормы.СуммыНалогов.ТолькоПросмотр = Ложь;
			ЭлементыФормы.КнопкаОбновитьДанныеОДоходах.Доступность = Истина;
			ЭлементыФормы.КнопкаОбновитьДанныеСотрудника.Доступность = Истина;
		Иначе
			УстановитьНедоступностьДанныхФизлица()
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНЫХ ПОЛЕЙ СведенияОДоходах и СведенияОВычетах

Процедура ПодчиненныеДанныеПередНачаломИзменения(Элемент, Отказ)
	Отказ = ЭлементыФормы.ФизлицаРеестра2НДФЛ.ТекущаяСтрока = Неопределено
КонецПроцедуры

Процедура СведенияОДоходахПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущаяСтрока = Элемент.ТекущаяСтрока;
	Если НоваяСтрока И Не Копирование Тогда
        ТекущаяСтрока.Месяц = 1;
		ТекущаяСтрока.НомерСправки = ЭлементыФормы.ФизлицаРеестра2НДФЛ.ТекущаяСтрока.НомерСправки
	КонецЕсли;
КонецПроцедуры

Процедура СведенияОДоходахПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если Не ОтменаРедактирования Тогда
		ОбновитьИтогиТекущейСтрокиСотрудника();	
		Если НалоговыйПериод > 2010 И Не ДокументОбъект2НДФЛ.СпециальныйДокумент2011года Тогда
			Если ЭлементыФормы.ФизлицаРеестра2НДФЛ.ТекущаяСтрока <> Неопределено И ЭлементыФормы.СуммыНалогов.ТекущаяСтрока = Неопределено И ДокументОбъект2НДФЛ.СуммыНалогов.Количество() > 0 Тогда
				ЭлементыФормы.СуммыНалогов.ТекущаяСтрока = ДокументОбъект2НДФЛ.СуммыНалогов.Найти(ЭлементыФормы.ФизлицаРеестра2НДФЛ.ТекущаяСтрока.НомерСправки, "НомерСправки")
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура СведенияОДоходахПослеУдаления(Элемент)
	ОбновитьИтогиТекущейСтрокиСотрудника();	
КонецПроцедуры

Процедура СведенияОДоходахПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		ОформлениеСтроки.Ячейки.СуммаВычета.ТолькоПросмотр = Не ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.КодВычета);
	КонецЦикла;
КонецПроцедуры

Процедура СведенияОДоходахКодДоходаПриИзменении(Элемент)
	
	ТекущиеДанные = ЭлементыФормы.СведенияОДоходах.ТекущиеДанные;
	
	// для кода по умолчанию вычет проставлять не будем
	Если Элемент.Значение = Справочники.ДоходыНДФЛ.КодДоходаПоУмолчанию и НЕ ЗначениеЗаполнено(ТекущиеДанные.КодВычета) Тогда
		Возврат
	КонецЕсли;
	
	// Контролируем допустимость кода вычета
	СписокКодовВычетов = СправкиПоНДФЛ.СписокВычетовДляДохода(Элемент.Значение, мСоответствиеДоходовИВычетов, мСписокАвторскихВознаграждений, ЭлементыФормы.ФизлицаРеестра2НДФЛ.ТекущаяСтрока.СтатусНалогоплательщика);
	
	Если СписокКодовВычетов.Количество() = 1 Тогда
		// Если доступен только один код вычета, то возьмём его
		ТекущиеДанные.КодВычета = СписокКодовВычетов[0].Значение;	
	Иначе
		Если СписокКодовВычетов.НайтиПоЗначению(ТекущиеДанные.КодВычета) = Неопределено Тогда
			// Если ранее установленный код вычета не доступен, то очистим его
			ТекущиеДанные.КодВычета = Неопределено;
			ТекущиеДанные.СуммаВычета = 0;
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

Процедура СведенияОДоходахКодДоходаНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ФормаВыбора = Справочники.ДоходыНДФЛ.ПолучитьФормуВыбора(, Элемент);
	ФормаВыбора.Отбор.НеОтражаетсяВОтчетности2010.ВидСравнения	= ВидСравнения.Равно;
	ФормаВыбора.Отбор.НеОтражаетсяВОтчетности2010.Значение		= Ложь;
	ФормаВыбора.Отбор.НеОтражаетсяВОтчетности2010.Использование	= Истина;
	ФормаВыбора.НачальноеЗначениеВыбора = Элемент.Значение;
	ФормаВыбора.Открыть();
КонецПроцедуры

Процедура СведенияОДоходахКодДоходаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, ПолучитьСтруктуруПараметровПодбораПоСтроке("КодДохода"), Тип("СправочникСсылка.ДоходыНДФЛ"));
КонецПроцедуры

Процедура СведенияОДоходахКодДоходаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	ПроцедурыПоискаПоСтроке.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, ПолучитьСтруктуруПараметровПодбораПоСтроке("КодДохода"), ЭтаФорма, Тип("СправочникСсылка.ДоходыНДФЛ"), мОбработкаПодбораПоСтроке, мТекстПодбораПоСтроке, мПоследнееЗначениеЭлементаПодбораПоСтроке, Ложь);
КонецПроцедуры

Процедура СведенияОДоходахКодВычетаПриИзменении(Элемент)
	Если Не ЗначениеЗаполнено(Элемент.Значение) Тогда
		ЭлементыФормы.СведенияОДоходах.ТекущиеДанные.СуммаВычета = 0
	КонецЕсли;
КонецПроцедуры

Процедура СведенияОДоходахКодВычетаНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокОтбора = СправкиПоНДФЛ.СписокВычетовДляДохода(ЭлементыФормы.СведенияОДоходах.ТекущаяСтрока.КодДохода, мСоответствиеДоходовИВычетов, мСписокАвторскихВознаграждений, ЭлементыФормы.ФизлицаРеестра2НДФЛ.ТекущаяСтрока.СтатусНалогоплательщика);
	Если СписокОтбора.Количество() > 0 Тогда
		ФормаВыбора = Справочники.ВычетыНДФЛ.ПолучитьФормуВыбора(, Элемент);
		ФормаВыбора.Отбор.Ссылка.ВидСравнения	= ВидСравнения.ВСписке;
		ФормаВыбора.Отбор.Ссылка.Значение		= СписокОтбора;
		ФормаВыбора.Отбор.Ссылка.Использование	= Истина;
		ФормаВыбора.НачальноеЗначениеВыбора = Элемент.Значение;
		ФормаВыбора.Открыть();
	Иначе	
		ЭлементСписка = ВыбратьИзСписка(СписокОтбора,Элемент,СписокОтбора.НайтиПоЗначению(Элемент.Значение));
		Если ЭлементСписка <> Неопределено Тогда
			Элемент.Значение = ЭлементСписка.Значение
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура СведенияОДоходахКодВычетаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, Новый Структура("Ссылка", СправкиПоНДФЛ.СписокВычетовДляДохода(ЭлементыФормы.СведенияОДоходах.ТекущаяСтрока.КодДохода, мСоответствиеДоходовИВычетов, мСписокАвторскихВознаграждений, ЭлементыФормы.ФизлицаРеестра2НДФЛ.ТекущаяСтрока.СтатусНалогоплательщика)), Тип("СправочникСсылка.ВычетыНДФЛ"));
КонецПроцедуры

Процедура СведенияОДоходахКодВычетаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	ПроцедурыПоискаПоСтроке.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, Новый Структура("Ссылка",СправкиПоНДФЛ.СписокВычетовДляДохода(ЭлементыФормы.СведенияОДоходах.ТекущаяСтрока.КодДохода, мСоответствиеДоходовИВычетов, мСписокАвторскихВознаграждений, ЭлементыФормы.ФизлицаРеестра2НДФЛ.ТекущаяСтрока.СтатусНалогоплательщика)), ЭтаФорма, Тип("СправочникСсылка.ВычетыНДФЛ"), Ложь, Ложь, Неопределено, Ложь);
КонецПроцедуры

Процедура СведенияОВычетахПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущаяСтрока = Элемент.ТекущаяСтрока;
	Если НоваяСтрока И Не Копирование Тогда
		ТекущаяСтрока.НомерСправки = ЭлементыФормы.ФизлицаРеестра2НДФЛ.ТекущаяСтрока.НомерСправки
	КонецЕсли;
КонецПроцедуры

Процедура СведенияОВычетахПослеУдаления(Элемент)
	ОбновитьИтогиТекущейСтрокиСотрудника();	
КонецПроцедуры

Процедура СведенияОВычетахКодВычетаНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ФормаВыбора = Справочники.ВычетыНДФЛ.ПолучитьФормуВыбора(, Элемент);
	ФормаВыбора.Отбор.Ссылка.ВидСравнения	= ВидСравнения.ВСписке;
	ФормаВыбора.Отбор.Ссылка.Значение		= мСписокВыбораСтандартныхВычетов;
	ФормаВыбора.Отбор.Ссылка.Использование	= Истина;
	ФормаВыбора.НачальноеЗначениеВыбора = Элемент.Значение;
	ФормаВыбора.Открыть();
КонецПроцедуры

Процедура СведенияОВычетахКодВычетаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, Новый Структура("Ссылка",мСписокВыбораСтандартныхВычетов), Тип("СправочникСсылка.ВычетыНДФЛ"));
КонецПроцедуры

Процедура СведенияОВычетахКодВычетаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	ПроцедурыПоискаПоСтроке.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, Новый Структура("Ссылка",мСписокВыбораСтандартныхВычетов), ЭтаФорма, Тип("СправочникСсылка.ВычетыНДФЛ"), Ложь, Ложь, Неопределено, Ложь);
КонецПроцедуры

Процедура СведенияОВычетахСуммаВычетаПриИзменении(Элемент)
	ОбновитьИтогиТекущейСтрокиСотрудника();	
КонецПроцедуры

Процедура СуммыНалоговПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущаяСтрока = Элемент.ТекущаяСтрока;
	Если НоваяСтрока Тогда
		ТекущиеСтроки = ДокументОбъект2НДФЛ.СуммыНалогов.НайтиСтроки(Новый Структура("НомерСправки", ЭлементыФормы.ФизлицаРеестра2НДФЛ.ТекущаяСтрока.НомерСправки));
		ИмеющиесяСтавки = Новый Массив;
		Для каждого СтрокаТЧ Из ТекущиеСтроки Цикл
			Если СтрокаТЧ.НомерСтроки = ТекущаяСтрока.НомерСтроки Тогда
				Продолжить;
			КонецЕсли;
			ИмеющиесяСтавки.Добавить(СтрокаТЧ.Ставка);
		КонецЦикла;
		Для каждого ЗначениеПеречисления Из Перечисления.НДФЛСтавки Цикл
			Если ИмеющиесяСтавки.Найти(ЗначениеПеречисления) = Неопределено Тогда
				ТекущаяСтрока.Ставка = ЗначениеПеречисления;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если Не Копирование Тогда
			ТекущаяСтрока.НомерСправки = ЭлементыФормы.ФизлицаРеестра2НДФЛ.ТекущаяСтрока.НомерСправки
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НалоговыйПериод) Тогда
		НалоговыйПериод = Макс(Год(ОбщегоНазначения.ПолучитьРабочуюДату()) - ?(Месяц(ОбщегоНазначения.ПолучитьРабочуюДату()) = 1, 1, 0), 2010);
	КонецЕсли;
	
	мСписокАвторскихВознаграждений = Новый Массив;
	мСписокАвторскихВознаграждений.Добавить(Справочники.ДоходыНДФЛ.Код2201);
	мСписокАвторскихВознаграждений.Добавить(Справочники.ДоходыНДФЛ.Код2202);
	мСписокАвторскихВознаграждений.Добавить(Справочники.ДоходыНДФЛ.Код2203);
	мСписокАвторскихВознаграждений.Добавить(Справочники.ДоходыНДФЛ.Код2204);
	мСписокАвторскихВознаграждений.Добавить(Справочники.ДоходыНДФЛ.Код2205);
	мСписокАвторскихВознаграждений.Добавить(Справочники.ДоходыНДФЛ.Код2206);
	мСписокАвторскихВознаграждений.Добавить(Справочники.ДоходыНДФЛ.Код2207);
	мСписокАвторскихВознаграждений.Добавить(Справочники.ДоходыНДФЛ.Код2208);
	мСписокАвторскихВознаграждений.Добавить(Справочники.ДоходыНДФЛ.Код2209);

	мСписокВыбораСтандартныхВычетов = СправкиПоНДФЛ.СписокСтандартныхВычетов();
	мСоответствиеДоходовИВычетов = СправкиПоНДФЛ.СоответствиеДоходовИВычетов(НалоговыйПериод);
	
	УправляемыеПоляВводаРеестра = Новый Массив;
	УправляемыеПоляВводаРеестра.Добавить(ЭлементыФормы.ДатаСоставления);
	УправляемыеПоляВводаРеестра.Добавить(ЭлементыФормы.ИмяФайла);
	УправляемыеПоляВводаРеестра.Добавить(ЭлементыФормы.Ответственный);
	УправляемыеПоляВводаРеестра.Добавить(ЭлементыФормы.ОснованиеДляПредставленияСправок);
	УправляемыеПоляВводаРеестра.Добавить(ЭлементыФормы.ГлавныйБухгалтер);
	УправляемыеПоляВводаРеестра.Добавить(ЭлементыФормы.СправкуПодписал);
	УправляемыеПоляВводаРеестра.Добавить(ЭлементыФормы.Телефон);
	УправляемыеПоляВводаРеестра.Добавить(ЭлементыФормы.КодПоОКАТО);

	УправляемыеПоляВводаФизлица = Новый Массив;
	УправляемыеПоляВводаФизлица.Добавить(ЭлементыФормы.Имя);
	УправляемыеПоляВводаФизлица.Добавить(ЭлементыФормы.Фамилия);
	УправляемыеПоляВводаФизлица.Добавить(ЭлементыФормы.Отчество);
	УправляемыеПоляВводаФизлица.Добавить(ЭлементыФормы.ИНН);
	УправляемыеПоляВводаФизлица.Добавить(ЭлементыФормы.ДатаРождения);
	УправляемыеПоляВводаФизлица.Добавить(ЭлементыФормы.ДатаУведомления);
	УправляемыеПоляВводаФизлица.Добавить(ЭлементыФормы.НомерУведомления);
	УправляемыеПоляВводаФизлица.Добавить(ЭлементыФормы.КодНалоговогоОрганаУведомления);
	УправляемыеПоляВводаФизлица.Добавить(ЭлементыФормы.Гражданство);
	УправляемыеПоляВводаФизлица.Добавить(ЭлементыФормы.СтатусНалогоплательщика);
	УправляемыеПоляВводаФизлица.Добавить(ЭлементыФормы.АдресЗарубежомВФорме);
	УправляемыеПоляВводаФизлица.Добавить(ЭлементыФормы.АдресРФВФорме);
	УправляемыеПоляВводаФизлица.Добавить(ЭлементыФормы.ВидДокумента);
	УправляемыеПоляВводаФизлица.Добавить(ЭлементыФормы.СерияДокумента);
	УправляемыеПоляВводаФизлица.Добавить(ЭлементыФормы.НомерДокумента);
	УправляемыеПоляВводаФизлица.Добавить(ЭлементыФормы.Задолженность);
	УправляемыеПоляВводаФизлица.Добавить(ЭлементыФормы.ИзлишнеУдержано);
	УправляемыеПоляВводаФизлица.Добавить(ЭлементыФормы.Исчислено);
	УправляемыеПоляВводаФизлица.Добавить(ЭлементыФормы.Удержано);
	УправляемыеПоляВводаФизлица.Добавить(ЭлементыФормы.Перечислено);
	УправляемыеПоляВводаФизлица.Добавить(ЭлементыФормы.ОблагаемаяСуммаДохода);
	УправляемыеПоляВводаФизлица.Добавить(ЭлементыФормы.ОбщаяСуммаДохода);
	
	ТекущаяОрганизация = Организация;
	ТекущийНалоговыйПериод = НалоговыйПериод;
	ПредыдущееЗначениеНалоговыйПериод = НалоговыйПериод;
	мГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
	мОрганизацияЭтоЮрЛицо = ОбщегоНазначенияПереопределяемый.ЭтоЮрЛицо(Организация);
	СправкиПоНДФЛ.НастроитьПолеВводаОКАТО(ЭлементыФормы.КодПоОКАТО, Организация, мСписокВыбораОКАТОиКПП);
	
	ОбновитьПачкиДокументов();
	
	УстановитьЗаголовкиОрганизацийВФорме();
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	ОбновитьНадписьСостоянияПодготовкиДокументов();	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Отказ = Ложь;
	СохранитьДокументы(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьЗначение("Организация", Организация);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

СерыйЦвет = Новый Цвет(180, 180, 180);
мОрганизацияЭтоЮрЛицо = Истина;