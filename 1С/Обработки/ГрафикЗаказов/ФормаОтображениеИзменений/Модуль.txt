Перем мТаблицаИзменений Экспорт;

Процедура ПриОткрытии()
	Если ТипЗнч(ДОпПараметры)=Тип("Структура") Тогда
		ЭлементыФормы.НадписьИнформация.Заголовок = ДопПараметры.ТекстИнформации;
		Если НЕ ДопПараметры.флРежимОтказаОтСохранения Тогда
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Удалить(ЭлементыФормы.ОсновныеДействияФормы.Кнопки.НеСохранять);
		КонецЕсли;
	КонецЕсли;
	
	Для каждого Строка из мТаблицаИзменений цикл
		нстр = ТаблицаОтображенияИзменений.Добавить();
		
		ЗаполнитьЗначенияСвойств(нстр, Строка);
		ТипЗаказа = ТипЗнч(Строка.Заказ);
		нстр.Изменять = истина;
		Если ТипЗаказа = Тип("ДокументСсылка.ЗаказПокупателя") ИЛИ ТипЗаказа = Тип("ДокументСсылка.ВнутреннийЗаказ") Тогда
			нстр.ДатаЗапускаИсходная = "";
			нстр.ДатаЗапуска = "";
			нстр.ДатаИсполненияИсходная = Строка.Заказ.ДатаОтгрузки;
		ИначеЕсли ТипЗаказа = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
			нстр.ДатаЗапускаИсходная = "";
			нстр.ДатаЗапуска = "";
			нстр.ДатаИсполненияИсходная = Строка.Заказ.ДатаПоступления;
		Иначе
			нстр.ДатаЗапускаИсходная = Строка.Заказ.ДатаЗапуска;
			нстр.ДатаИсполненияИсходная = Строка.Заказ.ДатаИсполнения;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ТаблицаОтображенияИзмененийПриПолученииДанных(Элемент, ОформленияСтрок)
	ЦветФонаИзмененныхДат = ЦветаСтиля.ЦветФонаПодсказки;
	Для каждого ОформлениеСтроки из ОформленияСтрок Цикл
		ДанныеСтроки = ОформлениеСтроки.ДанныеСтроки;
		ОформлениеСтроки.Ячейки.ДатыЗапуска.ОтображатьТекст = истина;
        ОформлениеСтроки.Ячейки.ДатыИсполнения.ОтображатьТекст = истина;

		Если ДанныеСтроки.ДатаЗапускаИсходная <> ДанныеСтроки.ДатаЗапуска Тогда
			ОформлениеСтроки.Ячейки.ДатаЗапуска.ЦветФона = ЦветФонаИзмененныхДат;
			ОформлениеСтроки.Ячейки.ДатыЗапуска.Текст = ТекстРазностьДат(ДанныеСтроки.ДатаЗапускаИсходная, ДанныеСтроки.ДатаЗапуска);
		Иначе
			ОформлениеСтроки.Ячейки.ДатыЗапуска.Текст = "без изменений";
		КонецЕсли;
		Если ДанныеСтроки.ДатаИсполненияИсходная <> ДанныеСтроки.ДатаИсполнения Тогда
			ОформлениеСтроки.Ячейки.ДатаИсполнения.ЦветФона = ЦветФонаИзмененныхДат;
			ОформлениеСтроки.Ячейки.ДатыИсполнения.Текст = ТекстРазностьДат(ДанныеСтроки.ДатаИсполненияИсходная, ДанныеСтроки.ДатаИсполнения);
		Иначе
			ОформлениеСтроки.Ячейки.ДатыИсполнения.Текст = "без изменений";
		КонецЕсли;
		Если ДанныеСтроки.ДатаЗапускаИсходная = Дата('00010101000000') Тогда
			ОформлениеСтроки.Ячейки.ДатаЗапускаИсходная.ОтображатьТекст = истина;
			ОформлениеСтроки.Ячейки.ДатаЗапускаИсходная.Текст = "";
			ОформлениеСтроки.Ячейки.ДатыЗапуска.Текст = "";
		КонецЕсли;
		Если ДанныеСтроки.ДатаЗапуска = Дата('00010101000000') Тогда
			ОформлениеСтроки.Ячейки.ДатаЗапуска.ОтображатьТекст = истина;
			ОформлениеСтроки.Ячейки.ДатаЗапуска.Текст = "";
			ОформлениеСтроки.Ячейки.ДатыИсполнения.Текст = "";
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ОсновныеДействияФормыСохранить(Кнопка)
	//записываем изменения
	НачатьТранзакцию();
	флОшибкаЗаписи = ложь;
	ТекстОшибки = "";
	масНесохраненныеЗаказы = новый Массив;
	Для каждого Строка из ТаблицаОтображенияИзменений цикл
		Если не Строка.Изменять Тогда
			масНесохраненныеЗаказы.Добавить(Строка.Заказ);
			Продолжить;
		КонецЕсли;
		
		текЗаказСсылка = Строка.Заказ;
		ТипЗаказа =  ТипЗнч(ТекЗаказСсылка);
		флЗаписатьОбъект = ложь;
		Если ТипЗаказа = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
			Если Строка.ДатаИсполнения<>текЗаказСсылка.ДатаПоступления Тогда
				текЗаказОбъект = текЗаказСсылка.ПолучитьОбъект();
				текЗаказОбъект.ДатаПоступления = Строка.ДатаИсполнения;
				флЗаписатьОбъект = истина;
			КонецЕсли;	
		ИначеЕсли ТипЗаказа = Тип("ДокументСсылка.ЗаказПокупателя") ИЛИ ТипЗаказа = Тип("ДокументСсылка.ВнутреннийЗаказ") Тогда
			Если Строка.ДатаИсполнения<>текЗаказСсылка.ДатаОтгрузки Тогда
				текЗаказОбъект = текЗаказСсылка.ПолучитьОбъект();
				текЗаказОбъект.ДатаОтгрузки = Строка.ДатаИсполнения;
				флЗаписатьОбъект = истина;
			КонецЕсли;	
		ИначеЕсли ТипЗаказа = Тип("ДокументСсылка.ЗаказНаПроизводство") Тогда
			Если Строка.ДатаИсполнения<>текЗаказСсылка.ДатаИсполнения ИЛИ
				Строка.ДатаЗапуска<>текЗаказСсылка.ДатаЗапуска Тогда
				текЗаказОбъект = текЗаказСсылка.ПолучитьОбъект();
				текЗаказОбъект.ДатаИсполнения = Строка.ДатаИсполнения;
				текЗаказОбъект.ДатаЗапуска = Строка.ДатаЗапуска;
				флЗаписатьОбъект = истина;
			КонецЕсли;	
		КонецЕсли;
		Если флЗаписатьОбъект Тогда
			Попытка
				текЗаказОбъект.Заблокировать();
				текЗаказОбъект.Записать();
			Исключение
				ТекстОшибки = ОписаниеОшибки();
				флОшибкаЗаписи = истина;
				масНесохраненныеЗаказы.Добавить(ТекЗаказСсылка);

				Прервать;
            КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	Если флОшибкаЗаписи Тогда
		ОбщегоНазначения.Сообщение("Не удалось зафиксировать изменения: произошла ошибка при записи заказа: "+текЗаказСсылка,СтатусСообщения.Важное);
		ОбщегоНазначения.Сообщение(Символы.Таб+ТекстОшибки,СтатусСообщения.БезСтатуса);
		ОтменитьТранзакцию();
		ЭтаФорма.Закрыть(неопределено);
	Иначе
		ЗафиксироватьТранзакцию();
	КонецЕсли;

	ЭтаФорма.Закрыть(новый Структура("СохранениеВыполнено, масНесохраненныеЗаказы",истина, масНесохраненныеЗаказы));
КонецПроцедуры

Процедура ОсновныеДействияФормыНеСохранять(Кнопка)
	ЭтаФорма.Закрыть(новый Структура("СохранениеВыполнено, масНесохраненныеЗаказы",ложь, новый Массив));
КонецПроцедуры

Функция ТекстРазностьДат(ДатаСтарая, ДатаНовая)
	мДлинаСуток = 86400; // в секундах
	
	Разность = Окр((НачалоДня(ДатаСтарая) - НачалоДня(ДатаНовая)) / мДлинаСуток);

	Если Разность>0 Тогда 
		Возврат ""+Разность+" дн. назад";
	КонецЕсли;
	Возврат ""+(-1)*Разность+" дн. вперед";
КонецФункции