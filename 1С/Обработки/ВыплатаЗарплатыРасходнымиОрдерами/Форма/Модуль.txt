Перем мОрганизация;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура УстановитьЗаголовкиОрганизацийВФорме()
	
	ЭлементыФормы.НадписьОрганизация.Заголовок = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация:");
	ЭлементыФормы.НадписьОрганизация.Значение = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация:");
	ЭлементыФормы.Организация.Подсказка = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация");
	ЭлементыФормы.ДатаРКО.Подсказка = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация");
КонецПроцедуры // УстановитьЗаголовкиОрганизацийВФорме()

Функция УстановитьМаскуНомера()

	Префикс = Организация.Префикс;
	ОбщегоНазначения.ДобавитьПрефиксУзла(Префикс);
	ДлинаПрефикса = СтрДлина(Префикс);
	ЭлементыФормы.НомерПервогоРКО.Маска = Лев("^^^^^^^^^^^", ДлинаПрефикса) + Лев("99999999999",11 - ДлинаПрефикса);
	
	Возврат Префикс
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()	
	
	Если Организация.Пустая() Тогда
		Организация   = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	КонецЕсли;
	мОрганизация = Организация;
	
	КассаПоУмолчанию = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяКасса");
	Если КассаПоУмолчанию.ВалютаДенежныхСредств = Константы.ВалютаРегламентированногоУчета.Получить()
		и КассаПоУмолчанию.Владелец = Организация Тогда
		Касса = КассаПоУмолчанию;
	КонецЕсли;
	
	Префикс = УстановитьМаскуНомера();
    НомерПервогоРКО = Префикс + Лев("00000000000", 11 - СтрДлина(Префикс));
	
	ДатаРКО = ОбщегоНазначения.ПолучитьРабочуюДату();
	Если НачалоДня(ДатаРКО) = НачалоДня(ТекущаяДата()) Тогда
		ДатаРКО = ТекущаяДата()
	КонецЕсли;
	УстановитьЗаголовкиОрганизацийВФорме();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Выполняет заполнение табличной части
//
Процедура КоманднаяПанельРКОЗаполнить(Кнопка)
	Автозаполнение();
КонецПроцедуры

// Устанавливает флаги в табличной части
//
Процедура КоманднаяПанельРКОУстановитьФлаги(Кнопка)
	
	Для Каждого СтрокаТаблицы Из РКО Цикл
		СтрокаТаблицы.Отметка = Истина
	КонецЦикла;
	
КонецПроцедуры

// Снимает флаги в табличной части
//
Процедура КоманднаяПанельРКОСнятьфлаги(Кнопка)
	
	Для Каждого СтрокаТаблицы Из РКО Цикл
		СтрокаТаблицы.Отметка = Ложь
	КонецЦикла;
	
КонецПроцедуры

// Инвертирует флаги в табличной части 
//
Процедура КоманднаяПанельРКОИнвертировать(Кнопка)
	
	Для Каждого СтрокаТаблицы Из РКО Цикл		
		СтрокаТаблицы.Отметка = Не СтрокаТаблицы.Отметка;
	КонецЦикла;
	
КонецПроцедуры

// Процедура - проводит документы РКО по табличной части РКО
//
Процедура ОсновныеДействияФормыПровести(Кнопка)
	
	Если Не ПровестиРКО() Тогда
		Предупреждение("Не все РКО удалось провести!")
	КонецЕсли;
	
	Оповестить("ОбновитьФорму", ,ПлатежнаяВедомость);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭУ

// Процедура - обработчик события "ПриИзменении" поля ввода "Организация".
//
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если мОрганизация <> Организация Тогда
		ПлатежнаяВедомость = Документы.ЗарплатаКВыплатеОрганизаций.ПустаяСсылка();
		РКО.Очистить();
		Префикс = УстановитьМаскуНомера();
	    НомерПервогоРКО = Префикс + Лев("00000000000", 11 - СтрДлина(Префикс));
		Если Касса.Владелец <> Организация Тогда
			Касса = Справочники.Кассы.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	мОрганизация = Организация;
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода "ПлатежнаяВедомость".
//
Процедура ПлатежнаяВедомостьНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Если Не Организация.Пустая() Тогда
		
		ПроцедурыУправленияПерсоналомДополнительный.ОткрытьФормуВыбораПлатежныхВедомостейОрганизации(Элемент, СтандартнаяОбработка, Организация, Перечисления.СпособыВыплатыЗарплаты.ЧерезКассу) 
		
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "ПлатежнаяВедомость".
//
Процедура ПлатежнаяВедомостьПриИзменении(Элемент)
	
	Автозаполнение();		
	
КонецПроцедуры

Процедура КассаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	ФормаКассы=Справочники.Кассы.ПолучитьФормуВыбора(,Элемент,);
	ФормаКассы.Отбор.ВалютаДенежныхСредств.Значение = Константы.ВалютаРегламентированногоУчета.Получить();
	ФормаКассы.Отбор.ВалютаДенежныхСредств.Использование = Истина;
	ФормаКассы.Отбор.Владелец.Установить(Организация, Истина);
	ФормаКассы.ЭлементыФормы.СправочникСписок.НастройкаОтбора.ВалютаДенежныхСредств.Доступность=Ложь;
	
	Если ЗначениеЗаполнено(Элемент.Значение) Тогда
		
		ФормаКассы.ПараметрТекущаяСтрока=Элемент.Значение;
		
	КонецЕсли;
	
	ФормаКассы.РежимВыбора=Истина;
	
	ФормаКассы.Открыть();
		
КонецПроцедуры

Процедура КассаПриИзменении(Элемент)
	Если Организация.Пустая() Тогда
		Организация = Касса.Владелец;
		мОрганизация = Организация;
	КонецЕсли;
КонецПроцедуры

Процедура СоздатьНажатие(Элемент)
	СоздатьРКО();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОЙ ЧАСТИ и ее РЕКВИЗИТОВ 

// Процедура - обработчик события "ПриПолученииДанных" таблицы "РКО".
//
Процедура ТабличноеПолеРКОПриПолученииДанных(Элемент, ОформленияСтрок)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РасходныйКассовыйОрдер.ПометкаУдаления
	|			ТОГДА 1
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РасходныйКассовыйОрдер.Проведен
	|					ТОГДА 0
	|				ИНАЧЕ 2
	|			КОНЕЦ
	|	КОНЕЦ КАК ИндексКартинки
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|ГДЕ
	|	РасходныйКассовыйОрдер.Ссылка = &РКО";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	СоответствиеРКО = Новый Соответствие;
	
    // получим данные для отрисовки в ячейках; 
	// если встречается один и тот же РКО - читать данные будем только 1 раз
	Для Каждого Строка Из ОформленияСтрок Цикл
        ТекущийРКО = Строка.ДанныеСтроки.РКО;
		Если ЗначениеЗаполнено(ТекущийРКО) И СоответствиеРКО[ТекущийРКО] = Неопределено Тогда
			Запрос.УстановитьПараметр("РКО", ТекущийРКО);
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				СоответствиеРКО[ТекущийРКО] = Выборка.ИндексКартинки;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// теперь нарисуем картинки
	Для Каждого Строка Из ОформленияСтрок Цикл
		
		Строка.Ячейки.Картинка.ОтображатьКартинку = Истина;
		
		ИндексКартинкиРКО = СоответствиеРКО[Строка.ДанныеСтроки.РКО];
		Строка.Ячейки.Картинка.ИндексКартинки = ?(ИндексКартинкиРКО = Неопределено,3,ИндексКартинкиРКО);
		
	КонецЦикла;
	
КонецПроцедуры