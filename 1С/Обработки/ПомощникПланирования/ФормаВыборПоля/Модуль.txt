Процедура ПриОткрытии()
	
	// Доступные поля, не являющиеся связанной информацией
	Для каждого ДоступноеПоле из ПолучитьПоля() Цикл
		
		Если мСоответствиеСвойствКатегорийИИзмерений[ДоступноеПоле.ПутьКДанным] = Неопределено Тогда
			
			НовоеПоле = ТабличноеПолеДоступныеПоля.Строки.Добавить();
			НовоеПоле.Представление = ДоступноеПоле.Представление;
			НовоеПоле.ПутьКДанным = ДоступноеПоле.ПутьКДанным;
			НовоеПоле.Поле = ДоступноеПоле;
			НовоеПоле.Тип = ПолучитьИндексКартинкиПоОписаниюТипов(ДоступноеПоле.ТипЗначения);
			
			Если ЕстьДочерниеПоля(НовоеПоле) Тогда

				НовоеПоле.Строки.Добавить();
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Доступные поля, являющиеся связанной информацией
	Для каждого ДоступноеПоле из ПолучитьПоля() Цикл
		
		Если мСоответствиеСвойствКатегорийИИзмерений[ДоступноеПоле.ПутьКДанным] <> Неопределено Тогда
			
			РодительскаяСтрока = ТабличноеПолеДоступныеПоля.Строки.Найти(мСоответствиеСвойствКатегорийИИзмерений[ДоступноеПоле.ПутьКДанным], "ПутьКДанным");
			
			Если РодительскаяСтрока <> Неопределено Тогда
			
				НовоеПоле = РодительскаяСтрока.Строки.Добавить();
				НовоеПоле.Представление = ДоступноеПоле.Представление;
				НовоеПоле.ПутьКДанным = ДоступноеПоле.ПутьКДанным;
				НовоеПоле.Поле = ДоступноеПоле;
				НовоеПоле.Тип = ПолучитьИндексКартинкиПоОписаниюТипов(ДоступноеПоле.ТипЗначения);
				
				Если ЕстьДочерниеПоля(НовоеПоле) Тогда

					НовоеПоле.Строки.Добавить();
					
				КонецЕсли;
				
			КонецЕсли;
				
		КонецЕсли;
		
	КонецЦикла;
	
	// Установка начального значения выбора
	Если НачальноеЗначениеВыбора <> Неопределено И ЗначениеЗаполнено(НачальноеЗначениеВыбора.ПутьКДанным) Тогда
		
		НайденнаяСтрока = Неопределено;
		ПутьКДаннымПоСтрокам = СтрЗаменить(НачальноеЗначениеВыбора.ПутьКДанным, ".", Символы.ПС);
		
		Если мСоответствиеСвойствКатегорийИИзмерений[НачальноеЗначениеВыбора.ПутьКДанным] = Неопределено Тогда
			
			Строки = ТабличноеПолеДоступныеПоля.Строки;
			
		Иначе
			
			НайденнаяСтрока = ТабличноеПолеДоступныеПоля.Строки.Найти(мСоответствиеСвойствКатегорийИИзмерений[НачальноеЗначениеВыбора.ПутьКДанным], "ПутьКДанным");
			
			Если НайденнаяСтрока <> Неопределено Тогда
				
				Строки = НайденнаяСтрока.Строки;
				
				Если ЕстьДочерниеПоля(НайденнаяСтрока) Тогда
					
					ДобавитьДочерниеПоля(НайденнаяСтрока);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
			
		ПутьКДанным = "";
		
		Для Индекс = 1 По СтрЧислоСтрок(ПутьКДаннымПоСтрокам) Цикл
			
			ПутьКДанным = ПутьКДанным + СтрПолучитьСтроку(ПутьКДаннымПоСтрокам, Индекс);
			НайденнаяСтрока = Строки.Найти(ПутьКДанным, "ПутьКДанным");
			
			Если НайденнаяСтрока <> Неопределено Тогда
				
				ПутьКДанным = ПутьКДанным + ".";
				Строки = НайденнаяСтрока.Строки;
				
				Если ЕстьДочерниеПоля(НайденнаяСтрока) Тогда
					
					ДобавитьДочерниеПоля(НайденнаяСтрока);
					
				КонецЕсли;
				
			Иначе
				
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если НайденнаяСтрока <> Неопределено Тогда
			
			ЭлементыФормы.ТабличноеПолеДоступныеПоля.ТекущаяСтрока = НайденнаяСтрока;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

Процедура ТабличноеПолеДоступныеПоляПередРазворачиванием(Элемент, Строка, Отказ)
	
	ДобавитьДочерниеПоля(Строка);
	
КонецПроцедуры // ТабличноеПолеДоступныеПоляПередРазворачиванием()

Процедура ТабличноеПолеДоступныеПоляПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для каждого ОформлениеСтроки из ОформленияСтрок Цикл
		
		ДанныеСтроки = ОформлениеСтроки.ДанныеСтроки;
		
		Если ЗначениеЗаполнено(ДанныеСтроки.ПутьКДанным) Тогда
			
			ОформлениеСтроки.Ячейки.Представление.ИндексКартинки = 4;
			ОформлениеСтроки.Ячейки.Представление.ОтображатьКартинку = Истина;
			
		КонецЕсли;
		
		ОформлениеСтроки.Ячейки.Тип.ОтображатьКартинку = Истина;
		ОформлениеСтроки.Ячейки.Тип.ИндексКартинки = ДанныеСтроки.Тип;
		ОформлениеСтроки.Ячейки.Тип.ОтображатьТекст = Ложь;
			
	КонецЦикла;
	
КонецПроцедуры // ТабличноеПолеДоступныеПоляПриПолученииДанных()

Процедура ТабличноеПолеДоступныеПоляВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Закрыть(ПолучитьМассивВыбранныхПолей(ЭлементыФормы.ТабличноеПолеДоступныеПоля.ВыделенныеСтроки));
	
КонецПроцедуры // ТабличноеПолеДоступныеПоляВыбор()

Процедура КнопкаОК(Кнопка)
	
	Закрыть(ПолучитьМассивВыбранныхПолей(ЭлементыФормы.ТабличноеПолеДоступныеПоля.ВыделенныеСтроки));
	
КонецПроцедуры // КнопкаОК()

Процедура ДобавитьДочерниеПоля(Строка)
	
	Если Строка.Строки.Количество() = 0 ИЛИ ЗначениеЗаполнено(Строка.Строки[0].Представление) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Строка.Строки.Удалить(Строка.Строки[0]);
	
	Для каждого ДочернееПоле из ПолучитьДочерниеПоля(Строка) Цикл
		
		НовоеПоле = Строка.Строки.Добавить();
		НовоеПоле.Представление = ДочернееПоле.Представление;
		НовоеПоле.ПутьКДанным = ДочернееПоле.ПутьКДанным;
		НовоеПоле.Поле = ДочернееПоле;
		НовоеПоле.Тип = ПолучитьИндексКартинкиПоОписаниюТипов(ДочернееПоле.ТипЗначения);
		
		Если ЕстьДочерниеПоля(НовоеПоле) Тогда
			
			НовоеПоле.Строки.Добавить();
			
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры // ДобавитьДочерниеПоля()

Функция ЕстьДочерниеПоля(Строка)
	
	Если НЕ ДочерниеПоля Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Если Строка.Поле.Поля.Количество() = 0 Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Для каждого ДочернееПоле из Строка.Поле.Поля Цикл
		
		Если (НЕ Измерение ИЛИ Измерение И ДочернееПоле.Измерение) И
			(НЕ Отбор ИЛИ Отбор И ДочернееПоле.Отбор) И
			(НЕ Поле ИЛИ Поле И ДочернееПоле.Поле) И
			(НЕ Порядок ИЛИ Порядок И ДочернееПоле.Порядок) Тогда
			
			Возврат Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции // ЕстьДочерниеПоля()

Функция ПолучитьДочерниеПоля(Строка)
	
	МассивДочернихПолей = Новый Массив;
	
	Если НЕ ДочерниеПоля Тогда
		
		Возврат МассивДочернихПолей;
		
	КонецЕсли;
	
	Если Строка.Поле.Поля.Количество() = 0 Тогда
		
		Возврат МассивДочернихПолей;
		
	КонецЕсли;
	
	Для каждого ДочернееПоле из Строка.Поле.Поля Цикл
		
		Если (НЕ Измерение ИЛИ Измерение И ДочернееПоле.Измерение) И
			(НЕ Отбор ИЛИ Отбор И ДочернееПоле.Отбор) И
			(НЕ Поле ИЛИ Поле И ДочернееПоле.Поле) И
			(НЕ Порядок ИЛИ Порядок И ДочернееПоле.Порядок) Тогда
			
			МассивДочернихПолей.Добавить(ДочернееПоле);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат МассивДочернихПолей;
	
КонецФункции // ПолучитьДочерниеПоля()

Функция ПолучитьПоля()
	
	МассивПолей = Новый Массив;
	
	Для каждого ДоступноеПоле из ПостроительОтчета.ДоступныеПоля Цикл
		
		Если (НЕ Измерение ИЛИ Измерение И ДоступноеПоле.Измерение) И
			(НЕ Отбор ИЛИ Отбор И ДоступноеПоле.Отбор) И
			(НЕ Поле ИЛИ Поле И ДоступноеПоле.Поле) И
			(НЕ Порядок ИЛИ Порядок И ДоступноеПоле.Порядок) Тогда
			
			МассивПолей.Добавить(ДоступноеПоле);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат МассивПолей;
	
КонецФункции // ПолучитьПоля()

Функция ПолучитьИндексКартинкиПоОписаниюТипов(ОписаниеТипов)
	
	ТекущийИндексКартинки = 16;
	Типы = ОписаниеТипов.Типы();
	
	Для каждого Тип из Типы Цикл
		
		Если Тип = Тип("Число") Тогда
			
			ИндексКартинки = 0;
			
		ИначеЕсли Тип = Тип("Строка") Тогда
			
			ИндексКартинки = 1;
			
		ИначеЕсли Тип = Тип("Дата") Тогда
			
			ИндексКартинки = 2;
			
		ИначеЕсли Тип = Тип("Булево") Тогда
			
			ИндексКартинки = 3;
			
		ИначеЕсли Справочники.ТипВсеСсылки().СодержитТип(Тип) Тогда
			
			ИндексКартинки = 7;
			
		ИначеЕсли Документы.ТипВсеСсылки().СодержитТип(Тип) Тогда
			
			ИндексКартинки = 8;
			
		ИначеЕсли Перечисления.ТипВсеСсылки().СодержитТип(Тип) Тогда
			
			ИндексКартинки = 9;
			
		ИначеЕсли ПланыВидовХарактеристик.ТипВсеСсылки().СодержитТип(Тип) Тогда
			
			ИндексКартинки = 10;
			
		ИначеЕсли ПланыСчетов.ТипВсеСсылки().СодержитТип(Тип) Тогда
			
			ИндексКартинки = 11;
			
		ИначеЕсли ПланыВидовРасчета.ТипВсеСсылки().СодержитТип(Тип) Тогда
			
			ИндексКартинки = 12;
			
		ИначеЕсли БизнесПроцессы.ТипВсеСсылки().СодержитТип(Тип) Тогда
			
			ИндексКартинки = 13;
			
		ИначеЕсли БизнесПроцессы.ТипВсеСсылкиТочекМаршрутаБизнесПроцессов().СодержитТип(Тип) Тогда
			
			ИндексКартинки = 14;
			
		ИначеЕсли Задачи.ТипВсеСсылки().СодержитТип(Тип) Тогда
			
			ИндексКартинки = 15;
			
		Иначе
			
			ИндексКартинки = 16;
			
		КонецЕсли;
		
		Если (ТекущийИндексКартинки = 16 И ИндексКартинки <> 16) ИЛИ (ТекущийИндексКартинки = ИндексКартинки) Тогда
			
			ТекущийИндексКартинки = ИндексКартинки;
			
		Иначе 
			
			ТекущийИндексКартинки = 16;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТекущийИндексКартинки;
	
КонецФункции // ПолучитьИндексКартинкиПоОписаниюТипов()

Функция ПолучитьМассивВыбранныхПолей(ВыделенныеСтроки)
	
	МассивВыбранныхПолей = Новый Массив;
	
	Для каждого ВыделеннаяСтрока из ВыделенныеСтроки Цикл
		
		ВыбранноеПоле = Новый Структура("Представление, ПутьКДанным, Значение, ДетальнаяЗапись");
		ЗаполнитьЗначенияСвойств(ВыбранноеПоле, ВыделеннаяСтрока);
		МассивВыбранныхПолей.Добавить(ВыбранноеПоле);
		
	КонецЦикла;
	
	Возврат МассивВыбранныхПолей;
	
КонецФункции // ПолучитьМассивВыбранныхПолей()