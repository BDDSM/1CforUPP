// Добавляет в дерево значений строки, зависимые от статьи
// в переданной в качестве параметра строке
//
// Параметры
//  СтрокаЗависимости(строка дерева значений): строка, для которой ищем зависимости
//
Процедура ЗаполнитьЗависимымиОборотами(СтрокаЗависимости)
	
	ПустойСценарий=Новый(Тип("СправочникСсылка.СценарииПланирования"));
	ПустойЦФО=Новый(Тип("СправочникСсылка.Подразделения"));
	ПустойПроект=Новый(Тип("СправочникСсылка.Проекты"));
	ПустойКонтрагент=Новый(Тип("СправочникСсылка.Контрагенты"));
	
	Запрос=Новый Запрос;
	
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗависимостиОборотовПоСтатьям.ЗависимаяСтатьяОборотов КАК ЗависимаяСтатьяОборотов,
	|	ЗависимостиОборотовПоСтатьям.ЗависимаяСтатьяОборотов.РазделениеПоКонтрагентам КАК РазделениеПоКонтрагентам,
	|	ЗависимостиОборотовПоСтатьям.ЗависимаяСтатьяОборотов.РазделениеПоНоменклатуре КАК РазделениеПоНоменклатуре,
	|	ЗависимостиОборотовПоСтатьям.ЗависимаяНоменклатура КАК ЗависимаяНоменклатура,
	|	ЗависимостиОборотовПоСтатьям.ЗависимыйКонтрагент КАК ЗависимыйКонтрагент,
	|	ЗависимостиОборотовПоСтатьям.ЗависимыйПроект КАК ЗависимыйПроект,
	|	ЗависимостиОборотовПоСтатьям.ЗависимыйЦФО КАК ЗависимыйЦФО,
	|	ЗависимостиОборотовПоСтатьям.Регистратор КАК Регистратор,
	|	ЗависимостиОборотовПоСтатьям.КоэффициентДляРасчетаКоличества КАК КоэффициентДляРасчетаКоличества,
	|	ЗависимостиОборотовПоСтатьям.КоэффициентДляРасчетаСуммы КАК КоэффициентДляРасчетаСуммы,
	|	ЗависимостиОборотовПоСтатьям.РеквизитВлияющейСтатьиДляРасчетаКоличества КАК РеквизитВлияющейСтатьиДляРасчетаКоличества,
	|	ЗависимостиОборотовПоСтатьям.РеквизитВлияющейСтатьиДляРасчетаСуммы КАК РеквизитВлияющейСтатьиДляРасчетаСуммы,
	|	ЗависимостиОборотовПоСтатьям.ЗначениеИзмененияПоПериодам КАК ЗначениеИзмененияПоПериодам
	|ИЗ
	|	РегистрСведений.ЗависимостиОборотовПоСтатьямБюджетирования.СрезПоследних(&ДатаНач, (ИсхСтатьяОборотов = &Статья)
	|					И ((ИсхСценарий =&ИсхСценарий) ИЛИ (ИсхСценарий =&ПустойИсхСценарий))
	|					И ((ИсхЦФО =&ИсхЦФО) ИЛИ (ИсхЦФО =&ПустойИсхЦФО)) 
	|					И ((ИсхПроект =&ИсхПроект) ИЛИ (ИсхПроект =&ПустойИсхПроект)) 
	|					И ((ИсхКонтрагент =&ИсхКонтрагент) ИЛИ (ИсхКонтрагент =&ПустойИсхКонтрагент)) 
	|					И ((ИсхНоменклатура =&ИсхНоменклатура) ИЛИ (ИсхНоменклатура = Неопределено))) КАК ЗависимостиОборотовПоСтатьям";
	
	Запрос.УстановитьПараметр("Статья",СтрокаЗависимости.СтатьяОборотов);
	Запрос.УстановитьПараметр("ДатаНач",ДатаНач);
	
	Запрос.УстановитьПараметр("ИсхСценарий",Сценарий);
	Запрос.УстановитьПараметр("ПустойИсхСценарий",ПустойСценарий);
		
	Запрос.УстановитьПараметр("ИсхЦФО",СтрокаЗависимости.ЦФО);
	Запрос.УстановитьПараметр("ПустойИсхЦФО",ПустойЦФО);
	
	Запрос.УстановитьПараметр("ИсхПроект",СтрокаЗависимости.Проект);
	Запрос.УстановитьПараметр("ПустойИсхПроект",ПустойПроект);
	
	Запрос.УстановитьПараметр("ИсхКонтрагент",СтрокаЗависимости.Контрагент);
	Запрос.УстановитьПараметр("ПустойИсхКонтрагент",ПустойКонтрагент);
	
	Запрос.УстановитьПараметр("ИсхНоменклатура",СтрокаЗависимости.Номенклатура);
	
	РезультатЗапроса=Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат;
		
	Иначе
		
		ТабЗависимыхСтатей=РезультатЗапроса.Выгрузить();
		
		Для Каждого ТекущаяЗависимость Из ТабЗависимыхСтатей Цикл
			
						
				НоваяЗависимаяСтрока=СтрокаЗависимости.Строки.Добавить();
				
				НоваяЗависимаяСтрока.ЦФО=ТекущаяЗависимость.ЗависимыйЦФО;
                НоваяЗависимаяСтрока.Проект=ТекущаяЗависимость.ЗависимыйПроект;
				
				Если ТекущаяЗависимость.РазделениеПоКонтрагентам Тогда
					НоваяЗависимаяСтрока.Контрагент=ТекущаяЗависимость.ЗависимыйКонтрагент;
				КонецЕсли;
				
				Если ТекущаяЗависимость.РазделениеПоНоменклатуре Тогда
					НоваяЗависимаяСтрока.Номенклатура=ТекущаяЗависимость.ЗависимаяНоменклатура;
				КонецЕсли;

				НоваяЗависимаяСтрока.СтатьяОборотов		= ТекущаяЗависимость.ЗависимаяСтатьяОборотов;
				НоваяЗависимаяСтрока.ИзменениеПоПериодам		= ТекущаяЗависимость.ЗначениеИзмененияПоПериодам;
				НоваяЗависимаяСтрока.Регистратор		= ТекущаяЗависимость.Регистратор;
								
				ЗаполнитьЗависимымиОборотами(НоваяЗависимаяСтрока);
			
		КонецЦикла;
		
	КонецЕсли;				

КонецПроцедуры // ЗаполнитьЗависимымиОборотами()

// Заполняет дерево зависимостей
//
//
Процедура ЗаполнитьДерево()

	ДеревоЗависимостей=Новый ДеревоЗначений;
	
	ТипСтатьяОборотов=Новый ОписаниеТипов("СправочникСсылка.СтатьиОборотовПоБюджетам");
	ТипЦФО=Новый ОписаниеТипов("СправочникСсылка.Подразделения");
    ТипПроект=Новый ОписаниеТипов("СправочникСсылка.Проекты");
    ТипКонтрагент=Новый ОписаниеТипов("СправочникСсылка.Контрагенты");
	
	ПустойЦФО=Новый(Тип("СправочникСсылка.Подразделения"));
	ПустойПроект=Новый(Тип("СправочникСсылка.Проекты"));
	ПустойКонтрагент=Новый(Тип("СправочникСсылка.Контрагенты"));
	
	МассивНоменклатура=Новый Массив;
	МассивНоменклатура.Добавить(Тип("СправочникСсылка.НоменклатурныеГруппы"));
	МассивНоменклатура.Добавить(Тип("СправочникСсылка.Номенклатура"));
	ТипНоменклатура=Новый ОписаниеТипов(МассивНоменклатура);
	
	ТипИзменение=Новый ОписаниеТипов("СправочникСсылка.ПрофилиИзмененияПлановПоПериодам");
	ТипРегистратор=Новый ОписаниеТипов("ДокументСсылка.УстановкаЗависимостейОборотовПоСтатьям");

	ДеревоЗависимостей.Колонки.Добавить("СтатьяОборотов",ТипСтатьяОборотов,"Статья",50);
	ДеревоЗависимостей.Колонки.Добавить("ИзменениеПоПериодам",ТипИзменение,"Изменение по периодам",40);
	ДеревоЗависимостей.Колонки.Добавить("ЦФО",ТипЦФО,"ЦФО",20);
	ДеревоЗависимостей.Колонки.Добавить("Проект",ТипПроект,"Проект",20);
	ДеревоЗависимостей.Колонки.Добавить("Контрагент",ТипКонтрагент,"Контрагент",20);
	ДеревоЗависимостей.Колонки.Добавить("Номенклатура",ТипНоменклатура,"Номенклатура",20);

	ДеревоЗависимостей.Колонки.Добавить("Регистратор",ТипРегистратор,,0);

	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |	ЗависимостиОсновной.ИсхСтатьяОборотов КАК СтатьяОборотов,
	             |	ЗапросЗависимости.ЗависимаяСтатьяОборотов КАК ЗависимаяСтатьяОборотов,
	             |	ЗависимостиОсновной.ИсхСценарий КАК Сценарий,
	             |	ЗависимостиОсновной.ИсхЦФО КАК ЦФО,
	             |	ЗависимостиОсновной.ИсхПроект КАК Проект,
	             |	ЗависимостиОсновной.ИсхКонтрагент КАК Контрагент,
	             |	ЗависимостиОсновной.ИсхНоменклатура КАК Номенклатура
	             |ИЗ
	             |	РегистрСведений.ЗависимостиОборотовПоСтатьямБюджетирования.СрезПоследних(&ДатаНач) КАК ЗависимостиОсновной
	             |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	             |			ЗависимостиЗависимый.ЗависимаяНоменклатура КАК ЗависимаяНоменклатура,
	             |			ЗависимостиЗависимый.ЗависимаяОрганизация КАК ЗависимаяОрганизация,
	             |			ЗависимостиЗависимый.ЗависимаяСтатьяОборотов КАК ЗависимаяСтатьяОборотов,
	             |			ЗависимостиЗависимый.ЗависимыйКонтрагент КАК ЗависимыйКонтрагент,
	             |			ЗависимостиЗависимый.ЗависимыйЦФО КАК ЗависимыйЦФО,
	             |			ЗависимостиЗависимый.ЗависимыйПроект КАК ЗависимыйПроект
	             |		ИЗ
	             |			РегистрСведений.ЗависимостиОборотовПоСтатьямБюджетирования.СрезПоследних(&ДатаНач) КАК ЗависимостиЗависимый
	             |		
	             |		ГДЕ
	             |			(ЗависимостиЗависимый.ИсхСценарий = &Сценарий ИЛИ ЗависимостиЗависимый.ИсхСценарий = &ПустойСценарий)) КАК ЗапросЗависимости
	             |		ПО ЗависимостиОсновной.ИсхСтатьяОборотов = ЗапросЗависимости.ЗависимаяСтатьяОборотов 
				 |		И (ЗависимостиОсновной.ИсхЦФО = ЗапросЗависимости.ЗависимыйЦФО ИЛИ ЗависимостиОсновной.ИсхЦФО = &ПустойЦФО) 
				 |		И (ЗависимостиОсновной.ИсхПроект = ЗапросЗависимости.ЗависимыйПроект ИЛИ ЗависимостиОсновной.ИсхПроект = &ПустойПроект) 
				 |		И (ЗависимостиОсновной.ИсхКонтрагент = ЗапросЗависимости.ЗависимыйКонтрагент ИЛИ ЗависимостиОсновной.ИсхКонтрагент = &ПустойКонтрагент) 
				 |		И (ЗависимостиОсновной.ИсхНоменклатура = ЗапросЗависимости.ЗависимаяНоменклатура ИЛИ ЗависимостиОсновной.ИсхНоменклатура = НЕОПРЕДЕЛЕНО)
	             |
	             |ГДЕ
	             |	(ЗависимостиОсновной.ИсхСценарий = &Сценарий ИЛИ ЗависимостиОсновной.ИсхСценарий = &ПустойСценарий) И
	             |	((ЗапросЗависимости.ЗависимаяСтатьяОборотов) ЕСТЬ NULL )";
				  
	Запрос.УстановитьПараметр("Сценарий",Сценарий);
	Запрос.УстановитьПараметр("ПустойСценарий",Новый(Тип("СправочникСсылка.СценарииПланирования")));
	Запрос.УстановитьПараметр("ДатаНач",ДатаНач);

	Запрос.УстановитьПараметр("ПустойЦФО",ПустойЦФО);
	Запрос.УстановитьПараметр("ПустойПроект",ПустойПроект);
	Запрос.УстановитьПараметр("ПустойКонтрагент",ПустойКонтрагент);
				  
	РезультатЗапроса=Запрос.Выполнить().Выбрать();
	Пока РезультатЗапроса.Следующий() Цикл
		СтрокаЗависимости=ДеревоЗависимостей.Строки.Добавить();
		СтрокаЗависимости.СтатьяОборотов=РезультатЗапроса.СтатьяОборотов;
		СтрокаЗависимости.ЦФО=РезультатЗапроса.ЦФО;
		СтрокаЗависимости.Проект=РезультатЗапроса.Проект;
		СтрокаЗависимости.Контрагент=РезультатЗапроса.Контрагент;
		СтрокаЗависимости.Номенклатура=РезультатЗапроса.Номенклатура;
	КонецЦикла;
	
	Уровень=1;
	ЕстьЗависимости=Ложь;
	
	Для Каждого Строка Из ДеревоЗависимостей.Строки Цикл
		ЗаполнитьЗависимымиОборотами(Строка);
	КонецЦикла;
	
	ЭлементыФормы.ТабДеревоЗависимостей.Значение=ДеревоЗависимостей;
	ЭлементыФормы.ТабДеревоЗависимостей.СоздатьКолонки();

КонецПроцедуры // ЗаполнитьДерево()
 
Процедура ТабДеревоЗависимостейПриНачалеРедактирования(Элемент, НоваяСтрока)
	
	СтандартнаяОбработка=Ложь;
	
	Если НЕ НоваяСтрока И НЕ Элемент.ТекущиеДанные.Регистратор.Пустая() Тогда
		
		ДокументРедактирования=Элемент.ТекущиеДанные.Регистратор.ПолучитьОбъект();
        ФормаДокумента=ДокументРедактирования.ПолучитьФорму();
		ФормаДокумента.ОткрытьМодально();
		ЗаполнитьДерево();		
		
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель2Заполнить(Кнопка)
	
	ЗаполнитьДерево();
	
КонецПроцедуры

Процедура ТабДеревоЗависимостейПередУдалением(Элемент, Отказ)
	
	Если НЕ Элемент.ТекущиеДанные=Неопределено  И НЕ Элемент.ТекущиеДанные.Регистратор.Пустая() Тогда
		
		ТекстВопроса = "Удалить зависимость?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, );
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Отказ=Истина;
			Возврат;
		КонецЕсли; 
		ДокументУдаления=Элемент.ТекущиеДанные.Регистратор.ПолучитьОбъект();
		
		Если ДокументУдаления.ЗависимостиОборотовПоСтатьям.Количество()=1 Тогда
			ДокументУдаления.Удалить();
		Иначе
			СтруктураПоиска=Новый Структура;
			СтруктураПоиска.Вставить("ЗависимаяСтатьяОборотов",Элемент.ТекущиеДанные.СтатьяОборотов);
			СтруктураПоиска.Вставить("ЗависимыйКонтрагент",Элемент.ТекущиеДанные.Контрагент);
			//			
			Если НЕ Элемент.ТекущиеДанные.Номенклатура=Неопределено И НЕ Элемент.ТекущиеДанные.Номенклатура.Пустая() Тогда
				СтруктураПоиска.Вставить("ЗависимаяНоменклатура",Элемент.ТекущиеДанные.Номенклатура);
			КонецЕсли;
			
			СтруктураПоиска.Вставить("ЗависимыйПроект",Элемент.ТекущиеДанные.Проект);
			СтруктураПоиска.Вставить("ЗависимыйЦФО",Элемент.ТекущиеДанные.ЦФО);

			СтрокиУдаления=ДокументУдаления.ЗависимостиОборотовПоСтатьям.НайтиСтроки(СтруктураПоиска);
			
			Для Каждого Строка Из СтрокиУдаления Цикл
				ДокументУдаления.ЗависимостиОборотовПоСтатьям.Удалить(Строка);
			КонецЦикла;
			
			ДокументУдаления.Записать(РежимЗаписиДокумента.Проведение);
			
		КонецЕсли;
			
		ЗаполнитьДерево();
		
	Иначе
		
		Отказ=Истина;
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ТабДеревоЗависимостейПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель)

	Если НЕ Элемент.ТекущаяСтрока=Неопределено Тогда
		
		Если Элемент.ТекущаяСтрока.Строки.Количество()>0 Тогда // Уже устанавливалась зависимость от данной строки
			Документ=Элемент.ТекущаяСтрока.Строки[0].Регистратор;
		Иначе
			
			Документ=Документы.УстановкаЗависимостейОборотовПоСтатьям.СоздатьДокумент();
			Документ.Дата=ДатаНач;
			Документ.УстановитьВремя();
			
			Если НЕ Элемент.ТекущиеДанные=Неопределено Тогда
				Документ.Сценарий=Сценарий;
				Документ.СтатьяОборотовВлияющая=Элемент.ТекущиеДанные.СтатьяОборотов;
				Документ.Номенклатура=Элемент.ТекущиеДанные.Номенклатура;
				Документ.ЦФО=Элемент.ТекущиеДанные.ЦФО;
				Документ.Проект=Элемент.ТекущиеДанные.Проект;
				Документ.Контрагент=Элемент.ТекущиеДанные.Контрагент;
			КонецЕсли;
			
			Документ.Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
			
		КонецЕсли;
		
	Иначе
		
		Документ=Документы.УстановкаЗависимостейОборотовПоСтатьям.СоздатьДокумент();
		Документ.Дата = ДатаНач;
		Документ.УстановитьВремя(АвтоВремя.ТекущееИлиПоследним);
		Документ.Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");

	КонецЕсли;
	
	ФормаДокумента=Документ.ПолучитьФорму();
	ФормаДокумента.ОткрытьМодально();
	
	Отказ=Истина;
	
	ЗаполнитьДерево();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ДатаНач=РабочаяДата;
	
КонецПроцедуры

Процедура ТабДеревоЗависимостейПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущаяСтрока.Родитель=Неопределено Тогда
		ЭлементыФормы.ТабДеревоЗависимостей.ТолькоПросмотр=Истина;
	Иначе
		ЭлементыФормы.ТабДеревоЗависимостей.ТолькоПросмотр=Ложь;
	КонецЕсли;
	
КонецПроцедуры