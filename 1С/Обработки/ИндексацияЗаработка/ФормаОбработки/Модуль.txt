Перем мПроверкаШтатногоРасписания;
Перем мОбработкаКомментариев;
Перем мТекстЧтоВыполнено;
Перем мЭтоДопТарифныеРазряды;

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ОчиститьВсеТаблицы()

	ДолжностныеОклады.Очистить();
	ШтатноеРасписание.Очистить();
	ТарифныеРазряды.Очистить();
	ДопТарифныеРазряды.Очистить();

КонецПроцедуры

Процедура ЗаполнитьИсторию()

	ЗаполнитьТаблицуИстории();
	
	ТекстОтменыПовышения = "";
	Если ТаблицаИстории.Количество() > 0 Тогда
		ТекстОтменыПовышения = "Можно отменить повышение окладов на дату: " + Формат(ТаблицаИстории[0].ДатаПовышения, "ДФ=dd.MM.yyyy");
	КонецЕсли;
	
	ЭлементыФормы.НадписьОтменаПовышенияОкладов.Заголовок = ТекстОтменыПовышения;

КонецПроцедуры


Процедура ПодготовитьКомментированиеОшибок(ОчиститьКомментарии)
	
	мОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	Если ОчиститьКомментарии Тогда
		мОбработкаКомментариев.УдалитьСообщения();
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьЗаголовкиОрганизацийВФорме()
	
	ЭлементыФормы.НадписьОрганизация.Заголовок = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация:");
	ЭлементыФормы.НадписьОрганизация1.Заголовок = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация:");
	
	
КонецПроцедуры // УстановитьЗаголовкиОрганизацийВФорме()

Процедура ОбновитьКнопкиДалееНазад()

	Если ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.РезультатИндексации Тогда
		ЭлементыФормы.КнопкаДалее.Заголовок = "Готово";
	Иначе
		ЭлементыФормы.КнопкаДалее.Заголовок = "Далее";
	КонецЕсли;
	
	ЭлементыФормы.КнопкаДалее.Доступность = ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница <> ЭлементыФормы.ОсновнаяПанель.Страницы.ПоследняяСтраница;
	ЭлементыФормы.КнопкаНазад.Доступность = ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница <> ЭлементыФормы.ОсновнаяПанель.Страницы.ПерваяСтраница;
	
КонецПроцедуры

Функция НеЗакрыватьФорму()

	Если ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница <> ЭлементыФормы.ОсновнаяПанель.Страницы.ПерваяСтраница
		и ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница <> ЭлементыФормы.ОсновнаяПанель.Страницы.ПоследняяСтраница
		и ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница <> ЭлементыФормы.ОсновнаяПанель.Страницы.ИсторияПовышения Тогда
		ТекстВопроса = "Повышении зарплаты не выполнено." + Символы.ПС + "Закрыть форму?";
		Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , ,) = КодВозвратаДиалога.Да Тогда
			Возврат Ложь;
		КонецЕсли;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;

КонецФункции // НеЗакрыватьФорму()

Процедура ПолучитьУчетнуюПолитикуОрганизацииШтатноеРасписание()

	УчетнаяПолитикаПоПерсоналуОрганизации	= глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации");
	мПроверкаШтатногоРасписания				= ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(УчетнаяПолитикаПоПерсоналуОрганизации, Организация, "КонтрольРазмераСтавокШтатногоРасписания");

КонецПроцедуры

Функция ПолучитьОписаниеИндексироватьШтатноеРасписание(КонтрольКоличестваСтавокШтатногоРасписания)
	
	Если КонтрольКоличестваСтавокШтатногоРасписания Тогда
		ТекстЗаголовка = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("В организации") + " включен контроль штатного расписания. При повышении окладов сотрудников необходимо зарегистрировать повышение окладов в штатном расписании.";
	Иначе
		ТекстЗаголовка = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("В организации") + " не включен контроль штатного расписания. При повышении окладов сотрудников можно не регистрировать повышение окладов в штатном расписании.";
	КонецЕсли;

	Возврат ТекстЗаголовка;

КонецФункции // ПолучитьОписаниеИндексироватьШтатноеРасписание()

Процедура ОбработатьИзменениеОрганизации()

	ПолучитьУчетнуюПолитикуОрганизацииШтатноеРасписание();
	ЭлементыФормы.НадписьНеобходимостьИндексацииШтатногоРасписания.Заголовок = ПолучитьОписаниеИндексироватьШтатноеРасписание(мПроверкаШтатногоРасписания);	

КонецПроцедуры

Процедура ОбработатьТаблицуПлохихСтрок(ТаблицаПлохихСтрок, ТекстСообщения, ОчиститьКомментарии, ЧтоКомментируем)
	
	Если ТаблицаПлохихСтрок = Неопределено Тогда
		ПодготовитьКомментированиеОшибок(ОчиститьКомментарии);
		РодительскаяСтрока = ОбщегоНазначенияЗК.КомментарийРасчета(ТекстСообщения, , , , Перечисления.ВидыСообщений.ВажнаяИнформация);
		мОбработкаКомментариев.ПоказатьСообщения();
	ИначеЕсли  ТаблицаПлохихСтрок.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	ПодготовитьКомментированиеОшибок(ОчиститьКомментарии);
	РодительскаяСтрока = ОбщегоНазначенияЗК.КомментарийРасчета(ТекстСообщения, , , , Перечисления.ВидыСообщений.ВажнаяИнформация);
	
	Если ЧтоКомментируем = "ДолжностныеОклады" Тогда
		
		ВремТаблица = ТаблицаПлохихСтрок.Скопировать();
		ВремТаблица.Свернуть("Регистратор");
		Отбор = Новый Структура("Регистратор");
		Для каждого СтрокаТаблицы Из ВремТаблица Цикл
			
			Регистратор = СтрокаТаблицы.Регистратор;
			Отбор.Регистратор = Регистратор;
			ВремТаблицаПоРегистратору = ТаблицаПлохихСтрок.Скопировать(Отбор);
			
			ТекстСообщения = "Документ: ";
			ПредставлениеРасшифровкиКомментария = СокрЛП(Регистратор);
			РасшифровкаКомментария = Регистратор;
			РодительскаяСтрока = ОбщегоНазначенияЗК.КомментарийРасчета(ТекстСообщения, РодительскаяСтрока, ПредставлениеРасшифровкиКомментария, РасшифровкаКомментария);
			
			Для каждого СтрокаРегистратора Из ВремТаблицаПоРегистратору Цикл
				ТекстСообщения = СОКРЛП(СтрокаРегистратора.Сотрудник);
				ОбщегоНазначенияЗК.КомментарийРасчета(ТекстСообщения, РодительскаяСтрока);
			КонецЦикла;
			
		КонецЦикла;
		
	ИначеЕсли ЧтоКомментируем = "ШтатноеРасписание" Тогда
		
		Для каждого СтрокаТаблицы Из ТаблицаПлохихСтрок Цикл
			
			ТекстСообщения = "Подразделение: " + СокрЛП(СтрокаТаблицы.ПодразделениеОрганизацииНаименование) +", Должность: " + СокрЛП(СтрокаТаблицы.ДолжностьНаименование) ;
			ОбщегоНазначенияЗК.КомментарийРасчета(ТекстСообщения, РодительскаяСтрока);
			
		КонецЦикла;
		
	ИначеЕсли ЧтоКомментируем = "СоответствиеШтатномуРасписанию" Тогда
		
		Для каждого СтрокаТаблицы Из ТаблицаПлохихСтрок Цикл
			
			ТекстСообщения = "Сотрудник: " + СокрЛП(СтрокаТаблицы.СотрудникНаименование);
			ОбщегоНазначенияЗК.КомментарийРасчета(ТекстСообщения, РодительскаяСтрока);
			
		КонецЦикла;
		
	ИначеЕсли ЧтоКомментируем = "ТарифныеРазряды" Тогда
		
		Для каждого СтрокаТаблицы Из ТаблицаПлохихСтрок Цикл
			
			ТекстСообщения = "Тарифный разряд: " + СокрЛП(СтрокаТаблицы.ТарифныйРазрядНаименование);
			ОбщегоНазначенияЗК.КомментарийРасчета(ТекстСообщения, РодительскаяСтрока);
			
		КонецЦикла;
		
	ИначеЕсли ЧтоКомментируем = "ДопТарифныеРазряды" Тогда
		
		Для каждого СтрокаТаблицы Из ТаблицаПлохихСтрок Цикл
			
			ТекстСообщения = "Тарифный разряд: " + СокрЛП(СтрокаТаблицы.ДопРазрядНаименование);
			ОбщегоНазначенияЗК.КомментарийРасчета(ТекстСообщения, РодительскаяСтрока);
			
		КонецЦикла;
		
	КонецЕсли;
	
	мОбработкаКомментариев.ПоказатьСообщения();
	
КонецПроцедуры


Процедура ЗаполнитьТаблицуДолжностныхОкладов(ОчиститьКомментарии = Ложь)

	ТаблицаПлохихСтрок = Новый ТаблицаЗначений;
	ДолжностныеОклады.Загрузить(ПолучитьТаблицуДолжностныеОклады(ТаблицаПлохихСтрок));
	// в таблице ТаблицаПлохихСтрок строки с сотрудникам, кому на дату повышения уже зарегистрированы
	// кадровые изменения или изменения окладов
	ТекстСообщения = "Обнаружены сотрудники, которым на дату повышения уже зарегистрировано новое значение должностного оклада или кадровое перемещение.
							|Эти сотрудники не включены в таблицу ""Оклады сотрудников"" для регистрации повышения!";

	ОбработатьТаблицуПлохихСтрок(ТаблицаПлохихСтрок, ТекстСообщения, ОчиститьКомментарии, "ДолжностныеОклады");
	
КонецПроцедуры

Процедура ЗаполнитьТаблицуШтатногоРасписания(ОчиститьКомментарии = Ложь)

	ТаблицаПлохихСтрок = Новый ТаблицаЗначений;
	ШтатноеРасписание.Загрузить(ПолучитьТаблицуШтатноеРасписание(ТаблицаПлохихСтрок));
	// в таблице ТаблицаПлохихСтрок строки с сотрудникам, кому на дату повышения уже зарегистрированы
	// кадровые изменения или изменения окладов
	ТекстСообщения = "Обнаружены штатные единицы, у которых на дату повышения уже зарегистрированы изменения.
							|Эти штатные единицы не включены в таблицу ""Штатное расписание"" для регистрации повышения!";

	ОбработатьТаблицуПлохихСтрок(ТаблицаПлохихСтрок, ТекстСообщения, ОчиститьКомментарии, "ШтатноеРасписание");

КонецПроцедуры

Процедура ЗаполнитьТаблицуТарифныхРазрядов()

	ТаблицаПлохихСтрок = Новый ТаблицаЗначений;
	ТарифныеРазряды.Загрузить(ПолучитьТаблицуТарифныхРазрядов(ТаблицаПлохихСтрок));
	// в таблице ТаблицаПлохихСтрок строки разрядами, для которых на дату повышения уже зарегистрированы
	// изменения
	ТекстСообщения = "Обнаружены тарифные разряды, по которым на дату повышения уже зарегистрировано новое значение.
							|Эти тарифные разряды не включены в таблицу ""Тарифные разряды"" для регистрации повышения!";

	ОбработатьТаблицуПлохихСтрок(ТаблицаПлохихСтрок, ТекстСообщения, Истина, "ТарифныеРазряды");

КонецПроцедуры

Процедура ЗаполнитьТаблицуДопТарифныхРазрядов()

	ТаблицаПлохихСтрок = Новый ТаблицаЗначений;
	ВремТаблица = ПолучитьТаблицуДопТарифныхРазрядов(ТаблицаПлохихСтрок);
	ДопТарифныеРазряды = ВремТаблица.Скопировать();
	ЭлементыФормы.ДопТарифныеРазряды.СоздатьКолонки();
	ИндексацияЗаработкаПереопределяемый.ОформитьТабличноеПолеДопТарифныеРазряды(ЭлементыФормы.ДопТарифныеРазряды);
		
	// в таблице ТаблицаПлохихСтрок строки разрядами, для которых на дату повышения уже зарегистрированы
	// изменения
	ТекстСообщения = "Обнаружены тарифные разряды, по которым на дату повышения уже зарегистрировано новое значение.
							|Эти тарифные разряды не включены в таблицу ""Тарифные разряды"" для регистрации повышения!";

	ОбработатьТаблицуПлохихСтрок(ТаблицаПлохихСтрок, ТекстСообщения, Истина, "ДопТарифныеРазряды");

КонецПроцедуры


Процедура ОбновитьНадписьРезультатИндексацииЗаголовок()

	ТекстСообщения = "Дата повышения: " + Формат(ДатаПовышения, "ДФ=dd.MM.yyyy") + "     " + "Коэффициент повышения = " + КоэффициентПовышения;
	ЭлементыФормы.НадписьРезультатИндексацииЗаголовок.Заголовок = ТекстСообщения;

КонецПроцедуры

Функция ПроверитьСоответсвтиеОкладовШтатномуРасписанию(Комментировать = Истина)

	// проверим соответствие новых окладов сотрудников штатному расписанию
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ТабШтатноеРасписание", ШтатноеРасписание.Выгрузить());
	Запрос.УстановитьПараметр("ТабДолжностныеОклады", ДолжностныеОклады.Выгрузить());
	Запрос.УстановитьПараметр("ДатаПовышения", ДатаПовышения);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&ДатаПовышения КАК Период,
	|	ШтатноеРасписание.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ШтатноеРасписание.Должность КАК Должность,
	|	ШтатноеРасписание.НоваяМесячнаяСтавка1 КАК НоваяМесячнаяСтавка1,
	|	ШтатноеРасписание.НоваяМесячнаяСтавка2 КАК НоваяМесячнаяСтавка2
	|ПОМЕСТИТЬ ВТШтатноеРасписаниеНовое
	|ИЗ
	|	&ТабШтатноеРасписание КАК ШтатноеРасписание
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПодразделениеОрганизации,
	|	Должность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДолжностныеОклады.Сотрудник,
	|	ДолжностныеОклады.Должность,
	|	ДолжностныеОклады.ПодразделениеОрганизации,
	|	ДолжностныеОклады.НомерПоказателяОклада КАК НомерПоказателяОклада,
	|	ДолжностныеОклады.НовыйОклад КАК НовыйОклад
	|ПОМЕСТИТЬ ДолжностныеОкладыНовые
	|ИЗ
	|	&ТабДолжностныеОклады КАК ДолжностныеОклады";
	Запрос.Выполнить();
	
	Запрос.Текст = ИндексацияЗаработкаПереопределяемый.ПолучитьТекстЗапросаДляСравненияШтатногоРасписания();
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДолжностныеОкладыНовые.Сотрудник КАК Сотрудник,
	|	ДолжностныеОкладыНовые.Сотрудник.Наименование КАК СотрудникНаименование,
	|	ДолжностныеОкладыНовые.Должность,
	|	ДолжностныеОкладыНовые.ПодразделениеОрганизации
	|ИЗ
	|	ДолжностныеОкладыНовые КАК ДолжностныеОкладыНовые
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТШтатноеРасписание КАК ВТШтатноеРасписание
	|		ПО (ДолжностныеОкладыНовые.НомерПоказателяОклада = 0
	|				ИЛИ ДолжностныеОкладыНовые.ПодразделениеОрганизации = ВТШтатноеРасписание.ПодразделениеОрганизации
	|					И ДолжностныеОкладыНовые.Должность = ВТШтатноеРасписание.Должность
	|					И ВЫБОР
	|						КОГДА ВТШтатноеРасписание.УчитыватьСтавку2 ЕСТЬ NULL 
	|							ТОГДА ЛОЖЬ
	|						КОГДА ВТШтатноеРасписание.УчитыватьСтавку2
	|							ТОГДА ВЫБОР
	|									КОГДА ДолжностныеОкладыНовые.НовыйОклад < ВТШтатноеРасписание.МесячнаяСтавка1
	|											ИЛИ ДолжностныеОкладыНовые.НовыйОклад > ВТШтатноеРасписание.МесячнаяСтавка2
	|										ТОГДА ЛОЖЬ
	|									ИНАЧЕ ИСТИНА
	|								КОНЕЦ
	|						КОГДА ДолжностныеОкладыНовые.НовыйОклад = ВТШтатноеРасписание.МесячнаяСтавка1
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ)
	|ГДЕ
	|	ВТШтатноеРасписание.Период ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	СотрудникНаименование";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		
		Если Комментировать Тогда
			ТекстСообщения = "Ошибок не обнаружено, новые оклады соответствуют штатному расписанию.";
			ОбработатьТаблицуПлохихСтрок(Неопределено, ТекстСообщения, Истина, "");
		КонецЕсли;
		Возврат Истина;
		
	КонецЕсли;
	
	ТаблицаПлохихСтрок = РезультатЗапроса.Выгрузить();
	Если мПроверкаШтатногоРасписания Тогда
		
		ТекстСообщения = "Обнаружены сотрудники, новые оклады которых не соответствуют штатному расписанию.
		|Зарегистрировать повышение окладов будет невозможно, т.к. в настройках программы установлен контроль размера ставок штатного расписания.";
		ОбработатьТаблицуПлохихСтрок(ТаблицаПлохихСтрок, ТекстСообщения, Истина, "СоответствиеШтатномуРасписанию");
		
	ИначеЕсли Комментировать Тогда
		
		ТекстСообщения = "Обнаружены сотрудники, новые оклады которых не соответствуют штатному расписанию.
		|Контроль размера ставок штатного расписания отключен, повышение окладов можно зарегистрировать.";
		ОбработатьТаблицуПлохихСтрок(ТаблицаПлохихСтрок, ТекстСообщения, Истина, "СоответствиеШтатномуРасписанию");
		
	КонецЕсли;
	
	Возврат Не мПроверкаШтатногоРасписания;

КонецФункции // ПроверитьСоответсвиеОкладовШтатномуРасписанию()
 
Функция ВыполнитьИндексацию()

	мТекстЧтоВыполнено = "";
	
	// проверим, что необходимо зарегистрировать
	РегистрироватьДолжностныеОклады  = ЭлементыФормы.ПанельРезультатовИндексации.Страницы.ОкладыСотрудников.Видимость;
	РегистрироватьШтатноеРасписание  = ЭлементыФормы.ПанельРезультатовИндексации.Страницы.ШтатноеРасписание.Видимость;
	РегистрироватьТарифныеРазряды    = ЭлементыФормы.ПанельРезультатовИндексации.Страницы.ТарифныеРазряды.Видимость;
	РегистрироватьДопТарифныеРазряды = ЭлементыФормы.ПанельРезультатовИндексации.Страницы.ДопТарифныеРазряды.Видимость;
	
	Если РегистрироватьШтатноеРасписание и РегистрироватьДолжностныеОклады Тогда
		
		Если ШтатноеРасписание.Количество() = 0 и ДолжностныеОклады.Количество() = 0 Тогда
			Предупреждение("Таблицы новых окладов не заполнены!", 10);
			Возврат Ложь;
		КонецЕсли;
		
		Если Не ПроверитьСоответсвтиеОкладовШтатномуРасписанию(Ложь) Тогда
			Возврат Ложь;
		КонецЕсли;
		
		НачатьТранзакцию();
		
		Если НЕ ЗарегистрироватьИзмененияШтатногоРасписания() Тогда
			мОбработкаКомментариев.ПоказатьСообщения();
			Возврат Ложь;
		КонецЕсли;
		
		Если НЕ ЗарегистрироватьИзмененияДолжностныхОкладов() Тогда
			мОбработкаКомментариев.ПоказатьСообщения();
			Возврат Ложь;
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
		мТекстЧтоВыполнено = "С даты: " + Формат(ДатаПовышения, "ДФ=dd.MM.yyyy") + " зарегистрированы новые значения:";
		
		Если ДолжностныеОклады.Количество() > 0 Тогда
			мТекстЧтоВыполнено = мТекстЧтоВыполнено + "
			|		- Окладов по должности и коэффициенты индексации заработка ";
		КонецЕсли;
		
		Если ШтатноеРасписание.Количество() > 0 Тогда
			мТекстЧтоВыполнено = мТекстЧтоВыполнено + "
			|		- Окладов в штатном расписании";
		КонецЕсли;
		
	Иначе
		
		Если РегистрироватьШтатноеРасписание Тогда
			
			Если ШтатноеРасписание.Количество() = 0 Тогда
				Предупреждение("Таблица новых окладов не заполнена!", 10);
				Возврат Ложь;
			КонецЕсли;
			
			НачатьТранзакцию();
			
			Если НЕ ЗарегистрироватьИзмененияШтатногоРасписания() Тогда
				мОбработкаКомментариев.ПоказатьСообщения();
				Возврат Ложь;
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
			мТекстЧтоВыполнено = "С даты: " + Формат(ДатаПовышения, "ДФ=dd.MM.yyyy") + " зарегистрированы новые значения:
									|		- Окладов в штатном расписании";
			
		КонецЕсли;
		
		Если РегистрироватьДолжностныеОклады Тогда
			
			Если ДолжностныеОклады.Количество() = 0 Тогда
				Предупреждение("Таблица новых окладов не заполнена!", 10);
				Возврат Ложь;
			КонецЕсли;
			
			Если Не ПроверитьСоответсвтиеОкладовШтатномуРасписанию(Ложь) Тогда
				Возврат Ложь;
			КонецЕсли;
			
			НачатьТранзакцию();
			
			Если НЕ ЗарегистрироватьИзмененияДолжностныхОкладов() Тогда
				мОбработкаКомментариев.ПоказатьСообщения();
				Возврат Ложь;
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
			мТекстЧтоВыполнено = "С даты: " + Формат(ДатаПовышения, "ДФ=dd.MM.yyyy") + " зарегистрированы новые значения:
									|		- Должностных окладов";
			
		КонецЕсли;
		
		Если РегистрироватьТарифныеРазряды Тогда
			
			Если ТарифныеРазряды.Количество() = 0 Тогда
				Предупреждение("Таблица новых окладов не заполнена!", 10);
				Возврат Ложь;
			КонецЕсли;
			
			НачатьТранзакцию();
			
			Если НЕ ЗарегистрироватьИзмененияТарифныхРазрядов() Тогда
				мОбработкаКомментариев.ПоказатьСообщения();
				Возврат Ложь;
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
			мТекстЧтоВыполнено = "С даты: " + Формат(ДатаПовышения, "ДФ=dd.MM.yyyy") + " зарегистрированы новые значения:
									|		- Окладов по тарифным разрядам";

			
		КонецЕсли;
		
		Если РегистрироватьДопТарифныеРазряды Тогда
			
			Если ДопТарифныеРазряды.Количество() = 0 Тогда
				Предупреждение("Таблица новых окладов не заполнена!", 10);
				Возврат Ложь;
			КонецЕсли;
			
			НачатьТранзакцию();
			
			Если НЕ ИндексацияЗаработкаПереопределяемый.ЗарегистрироватьИзмененияДопТарифныхРазрядов(ДопТарифныеРазряды, ДатаПовышения) Тогда
				мОбработкаКомментариев.ПоказатьСообщения();
				Возврат Ложь;
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
			мТекстЧтоВыполнено = "С даты: " + Формат(ДатаПовышения, "ДФ=dd.MM.yyyy") + " зарегистрированы новые значения:
									|		- " + ИндексацияЗаработкаПереопределяемый.ОписаниеДопРазряда();

			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

Функция ОтменитьПоследнееПовышение()

	ОтменитьДолжностныеОклады  = ТаблицаИстории[0].ДолжностныеОклады;
	ОтменитьДопТарифныеРазряды = ТаблицаИстории[0].ДопТарифныеРазряды;
	ОтменитьТарифныеРазряды    = ТаблицаИстории[0].ТарифныеРазряды;
	ОтменитьШтатноеРасписание  = ТаблицаИстории[0].ШтатноеРасписание;
	ДатаОтмены  = ТаблицаИстории[0].ДатаПовышения;
	
	мТекстЧтоВыполнено = "Отменено повышение на дату: " + Формат(ДатаОтмены, "ДФ=dd.MM.yyyy");
	
	Если ОтменитьДолжностныеОклады Тогда
		
		НачатьТранзакцию();
		
		Если НЕ ОтменитьПовышениеДолжностныхОкладов(ДатаОтмены) Тогда
			мОбработкаКомментариев.ПоказатьСообщения();
			Возврат Ложь;
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();	
			
		мТекстЧтоВыполнено = мТекстЧтоВыполнено + "
			|		- Окладов по должности и коэффициенты индексации заработка ";
		
	КонецЕсли;
		
	Если ОтменитьШтатноеРасписание Тогда
		
		НачатьТранзакцию();
		
		Если НЕ ОтменитьПовышениеШтатноеРасписание(ДатаОтмены) Тогда
			мОбработкаКомментариев.ПоказатьСообщения();
			Возврат Ложь;
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();	
		
		мТекстЧтоВыполнено = мТекстЧтоВыполнено + "
			|		- Окладов по штатному расписанию ";
		
	КонецЕсли;
		
	Если ОтменитьТарифныеРазряды Тогда
		
		НачатьТранзакцию();
		
		Если НЕ ОтменитьПовышениеТарифныхРазрядов(ДатаОтмены) Тогда
			мОбработкаКомментариев.ПоказатьСообщения();
			Возврат Ложь;
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();	
		
		мТекстЧтоВыполнено = мТекстЧтоВыполнено + "
			|		- Окладов по разрядам ";
		
	КонецЕсли;
		
	Если ОтменитьДопТарифныеРазряды Тогда
		
		НачатьТранзакцию();
		
		Если НЕ ИндексацияЗаработкаПереопределяемый.ОтменитьПовышениеДопТарифныхРазрядов(ДатаОтмены) Тогда
			мОбработкаКомментариев.ПоказатьСообщения();
			Возврат Ложь;
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();	
		
		мТекстЧтоВыполнено = мТекстЧтоВыполнено + "
			|		- " + ИндексацияЗаработкаПереопределяемый.ОписаниеДопРазряда();
		
	КонецЕсли;	
	
	
	Возврат Истина

КонецФункции // ОтменитьПоследнееПовышение()


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура НеОкруглятьПриИзменении(Элемент)
	
	ЭлементыФормы.ОкруглятьВСторонуУвеличения.Доступность   = Не НеОкруглять;
	ЭлементыФормы.ОкруглятьПоПравиламМатематики.Доступность = Не НеОкруглять;
	ОчиститьВсеТаблицы();
	
КонецПроцедуры

Процедура ОкруглятьВСторонуУвеличенияПриИзменении(Элемент)
	
	ОчиститьВсеТаблицы();
	
КонецПроцедуры

Процедура ЗакрытьНажатие(Элемент)
		Закрыть();	
КонецПроцедуры

Процедура ОрганизацияОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	
	ОбработатьИзменениеОрганизации();
	ОчиститьВсеТаблицы();
	ЗаполнитьИсторию();
	
КонецПроцедуры

Процедура ДатаПовышенияПриИзменении(Элемент)
	
	ОбновитьНадписьРезультатИндексацииЗаголовок();
	ОчиститьВсеТаблицы();
	
КонецПроцедуры

Процедура ДатаПовышенияТарифныеРазрядыПриИзменении()

	ДатаПовышения = НачалоМесяца(ДатаПовышения);
	ОбновитьНадписьРезультатИндексацииЗаголовок();
	ОчиститьВсеТаблицы();

КонецПроцедуры


Процедура КоэффициентПовышенияПриИзменении(Элемент)
	ОбновитьНадписьРезультатИндексацииЗаголовок();
	ОчиститьВсеТаблицы();
КонецПроцедуры

Процедура КоманднаяПанельДолжностныеОкладыОбновить(Кнопка)
	
	Если ДолжностныеОклады.Количество()>0 Тогда
		ТекстВопроса = "Перед обновлением таблица будет очищена. Продолжить?";
		Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , ,) = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	ДолжностныеОклады.Очистить();
	ЗаполнитьТаблицуДолжностныхОкладов(Истина);
	
КонецПроцедуры

Процедура КоманднаяПанельДолжностныеОкладыПроверить(Кнопка)
	
	ПроверитьСоответсвтиеОкладовШтатномуРасписанию();
	
КонецПроцедуры

Процедура КоманднаяПанельШтатноеРасписаниеОбновить(Кнопка)
	
	Если ШтатноеРасписание.Количество()>0 Тогда
		ТекстВопроса = "Перед обновлением таблица будет очищена. Продолжить?";
		Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , ,) = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	ШтатноеРасписание.Очистить();
	ЗаполнитьТаблицуШтатногоРасписания(Истина);
	
КонецПроцедуры

Процедура КоманднаяПанельТарифныеРазрядыОбновить(Кнопка)
	
	Если ТарифныеРазряды.Количество()>0 Тогда
		ТекстВопроса = "Перед обновлением таблица будет очищена. Продолжить?";
		Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , ,) = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	ТарифныеРазряды.Очистить();
	ЗаполнитьТаблицуТарифныхРазрядов();
	
КонецПроцедуры

Процедура КоманднаяПанельДопТарифныеРазрядыОбновить(Кнопка)
	
	Если ДопТарифныеРазряды.Количество()>0 Тогда
		ТекстВопроса = "Перед обновлением таблица будет очищена. Продолжить?";
		Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , ,) = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	ДопТарифныеРазряды.Очистить();
	ЗаполнитьТаблицуДопТарифныхРазрядов();
	
КонецПроцедуры

Процедура ДопТарифныеРазрядыПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

Процедура ТарифныеРазрядыПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

Процедура ШтатноеРасписаниеПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

Процедура ДолжностныеОкладыПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ НАВИГАЦИИ

Процедура КнопкаДалееНажатие(Элемент)
	
	НоваяСтраница = Неопределено;
	НоваяСтраницаПанелиОклады = Неопределено;
	
	Если ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.ПерваяСтраница Тогда
		// переходим с основной страницы, проверим какое действие выбрано
		
		Если ЭлементыФормы.ПанельВыбораИндексирования.ТекущаяСтраница = ЭлементыФормы.ПанельВыбораИндексирования.Страницы.Страница1 Тогда
			
			Если Страница1ВыбранноеДействие = 0 Тогда
				
				// переходим к индексации окладов сотрудников
				НоваяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.Оклады;
				НоваяСтраницаПанелиОклады = ЭлементыФормы.ПанельОклады.Страницы.ДолжностныеОклады;
				ВидДоговора = Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор;
				ЭлементыФормы.НадписьОкладыЗаголовок.Заголовок = ИндексацияЗаработкаПереопределяемый.ПолучитьОписаниеИндексацииДолжностныеОклады(ВидДоговора);
				
			ИначеЕсли Страница1ВыбранноеДействие = 1 Тогда
				
				// переходим к индексации тарифных разрядов разрядов
				НоваяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.Оклады;
				НоваяСтраницаПанелиОклады = ЭлементыФормы.ПанельОклады.Страницы.ОкладыПоРазрядам;
				ЭлементыФормы.НадписьОкладыЗаголовок.Заголовок  = "Повышение окладов тарифных разрядов.";
				ЭлементыФормы.НадписьОкладыПоРазрядам.Заголовок = "Повышение окладов по тарифным разрядам можно зарегистрировать только на первое число месяца.";
				мЭтоДопТарифныеРазряды = Ложь;
				
			Иначе // Страница1ВыбранноеДействие = 2
				
				// переходим к просмотру истории и отмене индексации
				НоваяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.ИсторияПовышения;
				ЗаполнитьИсторию();
				
			КонецЕсли;
			
		ИначеЕсли ЭлементыФормы.ПанельВыбораИндексирования.ТекущаяСтраница = ЭлементыФормы.ПанельВыбораИндексирования.Страницы.Страница2 Тогда
			
			Если Страница2ВыбранноеДействие = 0 Тогда
				
				// переходим к индексации окладов сотрудников
				НоваяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.Оклады;
				НоваяСтраницаПанелиОклады = ЭлементыФормы.ПанельОклады.Страницы.ДолжностныеОклады;
				ВидДоговора   = ИндексацияЗаработкаПереопределяемый.ПолучитьВидДоговораПоДействиюИндексации(ЭтаФорма);
				ЭлементыФормы.НадписьОкладыЗаголовок.Заголовок = ИндексацияЗаработкаПереопределяемый.ПолучитьОписаниеИндексацииДолжностныеОклады(ВидДоговора);
				
			ИначеЕсли Страница2ВыбранноеДействие = 1 Тогда
				
				// переходим к индексации окладов по доп. разрядам
				НоваяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.Оклады;
				НоваяСтраницаПанелиОклады = ЭлементыФормы.ПанельОклады.Страницы.ОкладыПоРазрядам;
				ЭлементыФормы.НадписьОкладыЗаголовок.Заголовок  = ИндексацияЗаработкаПереопределяемый.ПолучитьОписаниеИндексацииДолжностныеОклады();
				ЭлементыФормы.НадписьОкладыПоРазрядам.Заголовок = "";
				мЭтоДопТарифныеРазряды = Истина;
				
			ИначеЕсли Страница2ВыбранноеДействие = 2 Тогда
				
				// переходим к индексации окладов сотрудников
				НоваяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.Оклады;
				НоваяСтраницаПанелиОклады = ЭлементыФормы.ПанельОклады.Страницы.ДолжностныеОклады;
				ВидДоговора   = Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор;
				ЭлементыФормы.НадписьОкладыЗаголовок.Заголовок = ИндексацияЗаработкаПереопределяемый.ПолучитьОписаниеИндексацииДолжностныеОклады(ВидДоговора);
				
			ИначеЕсли Страница2ВыбранноеДействие = 3 Тогда
				
				// переходим к индексации окладов по разрядам
				НоваяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.Оклады;
				НоваяСтраницаПанелиОклады = ЭлементыФормы.ПанельОклады.Страницы.ОкладыПоРазрядам;
				ЭлементыФормы.НадписьОкладыЗаголовок.Заголовок  = "Повышение окладов тарифных разрядов.";
				ЭлементыФормы.НадписьОкладыПоРазрядам.Заголовок = "Повышение окладов по тарифным разрядам можно зарегистрировать только на первое число месяца.";
				мЭтоДопТарифныеРазряды = Ложь;
				
			Иначе // Страница1ВыбранноеДействие = 4
				
				// переходим к просмотру истории и отмене индексации
				НоваяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.ИсторияПовышения;
				ЗаполнитьИсторию();
				
			КонецЕсли;
			
		Иначе //ЭлементыФормы.ПанельВыбораИндексирования.ТекущаяСтраница = ЭлементыФормы.ПанельВыбораИндексирования.Страницы.Страница3
			
			Если Страница3ВыбранноеДействие = 0 Тогда
				
				// переходим к индексации доп. окладов сотрудников
				НоваяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.Оклады;
				НоваяСтраницаПанелиОклады = ЭлементыФормы.ПанельОклады.Страницы.ДолжностныеОклады;
				ВидДоговора   = ИндексацияЗаработкаПереопределяемый.ПолучитьВидДоговораПоДействиюИндексации(ЭтаФорма);
				ЭлементыФормы.НадписьОкладыЗаголовок.Заголовок = ИндексацияЗаработкаПереопределяемый.ПолучитьОписаниеИндексацииДолжностныеОклады(ВидДоговора);
				
			ИначеЕсли Страница3ВыбранноеДействие = 1 Тогда
				
				// переходим к индексации окладов сотрудников
				НоваяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.Оклады;
				НоваяСтраницаПанелиОклады = ЭлементыФормы.ПанельОклады.Страницы.ДолжностныеОклады;
				ВидДоговора   = Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор;
				ЭлементыФормы.НадписьОкладыЗаголовок.Заголовок = ИндексацияЗаработкаПереопределяемый.ПолучитьОписаниеИндексацииДолжностныеОклады(ВидДоговора);
				
			ИначеЕсли Страница3ВыбранноеДействие = 2 Тогда
				
				// переходим к индексации окладов по разрядам
				НоваяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.Оклады;
				НоваяСтраницаПанелиОклады = ЭлементыФормы.ПанельОклады.Страницы.ОкладыПоРазрядам;
				ЭлементыФормы.НадписьОкладыЗаголовок.Заголовок = "Повышение окладов тарифных разрядов.";
				ЭлементыФормы.НадписьОкладыПоРазрядам.Заголовок = "Повышение окладов по тарифным разрядам можно зарегистрировать только на первое число месяца.";
				мЭтоДопТарифныеРазряды = Ложь;
				
			Иначе // Страница1ВыбранноеДействие = 4
				
				// переходим к просмотру истории и отмене индексации
				НоваяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.ИсторияПовышения;
				ЗаполнитьИсторию();
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.Оклады Тогда
		
		Если Не ЗначениеЗаполнено(ДатаПовышения) Тогда
			Предупреждение("Не указана дата повышения!");
			Возврат;
		КонецЕсли;
		
		Если КоэффициентПовышения <= 1 Тогда
			Предупреждение("Коэффициент повышения должен быть больше единицы!");
			Возврат;
		КонецЕсли;
		
		Если ЭлементыФормы.ПанельОклады.ТекущаяСтраница = ЭлементыФормы.ПанельОклады.Страницы.ДолжностныеОклады Тогда
			
			Если Не ИндексироватьДолжностныеОклады и Не ИндексироватьШтатноеРасписание Тогда
				Предупреждение("Не выбрано что повышать (индексировать)!");
				Возврат;
			КонецЕсли;	
			
			НоваяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.РезультатИндексации;
			
			ОбновитьКомментарий = Истина;
			Если ИндексироватьДолжностныеОклады Тогда
				Если ДолжностныеОклады.Количество() = 0 Тогда
					ЗаполнитьТаблицуДолжностныхОкладов(Истина);
					ОбновитьКомментарий = Ложь;
				КонецЕсли;
			Иначе
				ДолжностныеОклады.Очистить();
			КонецЕсли;
			
			Если ИндексироватьШтатноеРасписание Тогда
				Если ШтатноеРасписание.Количество() = 0 Тогда
					ЗаполнитьТаблицуШтатногоРасписания(ОбновитьКомментарий);
				КонецЕсли;
			Иначе
				ШтатноеРасписание.Очистить();
			КонецЕсли;
			
			ЭлементыФормы.ПанельРезультатовИндексации.Страницы.ОкладыСотрудников.Видимость = ИндексироватьДолжностныеОклады;
			ЭлементыФормы.ПанельРезультатовИндексации.Страницы.ШтатноеРасписание.Видимость = ИндексироватьШтатноеРасписание;
			ИндексацияЗаработкаПереопределяемый.УстановитьКолонкиТаблицыШтатноеРасписание(ЭлементыФормы.ШтатноеРасписание);
			
		ИначеЕсли ЭлементыФормы.ПанельОклады.ТекущаяСтраница = ЭлементыФормы.ПанельОклады.Страницы.ОкладыПоРазрядам Тогда
						
			НоваяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.РезультатИндексации;
			
			Если Не мЭтоДопТарифныеРазряды Тогда
				
				Если ТарифныеРазряды.Количество() = 0 Тогда
					ЗаполнитьТаблицуТарифныхРазрядов();
				КонецЕсли;
				
				ЭлементыФормы.ПанельРезультатовИндексации.Страницы.ТарифныеРазряды.Видимость = Истина;
				
			Иначе
				
				Если ДопТарифныеРазряды.Количество() = 0 Тогда
					ЗаполнитьТаблицуДопТарифныхРазрядов();
					
				КонецЕсли;
				
				ЭлементыФормы.ПанельРезультатовИндексации.Страницы.ДопТарифныеРазряды.Видимость = Истина;
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.РезультатИндексации Тогда
		
		Если ВыполнитьИндексацию() Тогда
			НоваяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.ПоследняяСтраница;
			ЭлементыФормы.НадписьЧтоСделано.Заголовок = мТекстЧтоВыполнено;
		КонецЕсли;
		
	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.ИсторияПовышения Тогда	
		
		ТекстОтменыПовышения = "";
		Если ТаблицаИстории.Количество() > 0 Тогда
			ТекстОтменыПовышения = "Можно отменить повышение окладов на дату: " + Формат(ТаблицаИстории[0].ДатаПовышения, "ДФ=dd.MM.yyyy");
		КонецЕсли;

		Если ТаблицаИстории.Количество() = 0 Тогда
			Предупреждение("Нет истории повышения окладов!", 10);
			Возврат;
		КонецЕсли;
		
		ДатаПовышенияОтмена = ТаблицаИстории[0].ДатаПовышения;
		ТекстВопроса = "Отменить повышение всех окладов на дату: " + Формат(ДатаПовышенияОтмена, "ДФ=dd.MM.yyyy");
		Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , ,) = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		
		Если ОтменитьПоследнееПовышение() Тогда
			НоваяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.ПоследняяСтраница;
			ЭлементыФормы.НадписьЧтоСделано.Заголовок = мТекстЧтоВыполнено;
		КонецЕсли;
		
	КонецЕсли;
	
	Если НоваяСтраница <> Неопределено Тогда
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = НоваяСтраница;
		ОбновитьКнопкиДалееНазад();
	КонецЕсли;
	
	Если НоваяСтраницаПанелиОклады <> Неопределено Тогда
		ЭлементыФормы.ПанельОклады.ТекущаяСтраница = НоваяСтраницаПанелиОклады;
	КонецЕсли;
	
КонецПроцедуры

Процедура КнопкаНазадНажатие(Элемент)
	
	НоваяСтраница = Неопределено;
	
	Если ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.Оклады Тогда
		НоваяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.ПерваяСтраница;
		// очистим таблицы
		ОчиститьВсеТаблицы();
		
	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.РезультатИндексации Тогда
		НоваяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.Оклады;
		
		ЭлементыФормы.ПанельРезультатовИндексации.Страницы.ДопТарифныеРазряды.Видимость = Ложь;
		ЭлементыФормы.ПанельРезультатовИндексации.Страницы.ТарифныеРазряды.Видимость = Ложь;
		ЭлементыФормы.ПанельРезультатовИндексации.Страницы.ОкладыСотрудников.Видимость = Ложь;
		ЭлементыФормы.ПанельРезультатовИндексации.Страницы.ШтатноеРасписание.Видимость = Ложь
		
	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.ПоследняяСтраница Тогда
		НоваяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.ПерваяСтраница;
		ОчиститьВсеТаблицы();
		Если ЭлементыФормы.ПанельИсторияОднаОрганизация.Видимость Тогда
			ЗаполнитьИсторию();  
		КонецЕсли;
		
	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.ИсторияПовышения Тогда
		НоваяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.ПерваяСтраница;
				
	КонецЕсли;
	
	Если НоваяСтраница <> Неопределено Тогда
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = НоваяСтраница;
		ОбновитьКнопкиДалееНазад();
	КонецЕсли;
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ИСТОРИЯ

Процедура ДолжностныеОкладыПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для каждого ОформлениеСтроки Из ОформленияСтрок Цикл
	
		Если ОформлениеСтроки.ДанныеСтроки.НомерПоказателяОклада = 0 Тогда
			ОформлениеСтроки.Ячейки.НовыйОклад.ТолькоПросмотр = Истина;
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

Процедура ТаблицаИсторииПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ОписаниеИсторииИндексации = "";
		Возврат;
	КонецЕсли;
	
	ОписаниеИсторииИндексации = ИндексацияЗаработкаПереопределяемый.ПолучитьОписаниеИндексацииПоСтрокеИстории(ТекущиеДанные);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Организация = РаботаСДиалогами.ПолучитьОрганизацию();
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	ИндексацияЗаработкаПереопределяемый.УстановитьСтраницуОсновнойПанели(ЭлементыФормы);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	УстановитьЗаголовкиОрганизацийВФорме();
	ОбработатьИзменениеОрганизации();
		
	ДатаПовышения = НачалоМесяца(ОбщегоНазначения.ПолучитьРабочуюДату());
	КоэффициентПовышения = 1;
	ОкруглятьВСторонуУвеличения = Истина;
	ИндексироватьДолжностныеОклады = Истина;
	
	ОбновитьКнопкиДалееНазад();
	мЭтоДопТарифныеРазряды = Ложь;
	
	Если ЭлементыФормы.ПанельИсторияОднаОрганизация.Видимость Тогда
		ЗаполнитьИсторию();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Отказ = НеЗакрыватьФорму();
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ