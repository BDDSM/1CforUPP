Перем ОписаниеТиповСтрока;
Перем ЛинияОбластиВставки;
Перем мКолонкиПараметрыВыпускаПродукции;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура устанавливает текст в в текущую область.
//
Процедура УстановитьТекстЯчейки(ТекстЯчейки)

	ОбластьВставки=ЭлементыФормы.ПолеФормулы.ТекущаяОбласть;
	ОбластьВставки.ШиринаКолонки=СтрДлина(ТекстЯчейки);
	
	ОбластьВставки.Текст=ТекстЯчейки;	
    НоваяОбластьВставки=ЭлементыФормы.ПолеФормулы.Область(1,ОбластьВставки.Лево+1);
    НоваяОбластьВставки.ШиринаКолонки=?(СтрДлина(НоваяОбластьВставки.Текст)=0,1,?(СтрДлина(НоваяОбластьВставки.Текст)=1,3,СтрДлина(НоваяОбластьВставки.Текст)));
	НоваяОбластьВставки.ГоризонтальноеПоложение=ГоризонтальноеПоложение.Центр;	
	ЭлементыФормы.ПолеФормулы.ТекущаяОбласть=ЭлементыФормы.ПолеФормулы.Область(1,ОбластьВставки.Лево+1);	

КонецПроцедуры // УстановитьТекстЯчейки()
 
// Процедура заменяет код на представление.
//
Процедура ЗаменитьКодПредставление(КоллекцияСтрок);

	Для каждого Строка Из КоллекцияСтрок Цикл

		Для Индекс = 1 По ЭлементыФормы.ПолеФормулы.ШиринаТаблицы Цикл

			ОбластьФормулы = ЭлементыФормы.ПолеФормулы.Область(1, Индекс);

			Если ОбластьФормулы.Текст ="[" + СокрЛП(Строка.ВидПараметра.Код) + "]" Тогда
				
                ОбластьФормулы.ШиринаКолонки = СтрДлина("[" + СокрЛП(Строка.ВидПараметра.Наименование) + "]");
				ОбластьФормулы.Текст = "[" + СокрЛП(Строка.ВидПараметра.Наименование) + "]";

			ИначеЕсли ОбластьФормулы.Текст = "[" + СокрЛП(Строка.ВидПараметра.Наименование) + "]" Тогда

				ОбластьФормулы.ШиринаКолонки = СтрДлина("[" + СокрЛП(Строка.ВидПараметра.Код) + "]");
				ОбластьФормулы.Текст = "[" + СокрЛП(Строка.ВидПараметра.Код) + "]";

			КонецЕсли;
			
		КонецЦикла;

	КонецЦикла;

КонецПроцедуры // ЗаменитьКодПредставление()

// Процедура заменяет код на представление.
//
Процедура ЗаменитьКодПредставлениеВыборка(Выборка, РазделительЛевый = "[", РазделительПравый = "]");

	Пока Выборка.Следующий() Цикл

		Для Индекс=1 По ЭлементыФормы.ПолеФормулы.ШиринаТаблицы Цикл

			ОбластьФормулы=ЭлементыФормы.ПолеФормулы.Область(1,Индекс);

			Если ОбластьФормулы.Текст =РазделительЛевый+СокрЛП(Выборка.Код)+РазделительПравый Тогда
				
                ОбластьФормулы.ШиринаКолонки=СтрДлина(РазделительЛевый+СокрЛП(Выборка.Наименование)+РазделительПравый);
				ОбластьФормулы.Текст=РазделительЛевый+СокрЛП(Выборка.Наименование)+РазделительПравый;

			ИначеЕсли ОбластьФормулы.Текст=РазделительЛевый+СокрЛП(Выборка.Наименование)+РазделительПравый Тогда

				ОбластьФормулы.ШиринаКолонки=СтрДлина(РазделительЛевый+Выборка.Код+РазделительПравый);
				ОбластьФормулы.Текст=РазделительЛевый+Выборка.Код+РазделительПравый;
				
			КонецЕсли;
			
		КонецЦикла;

	КонецЦикла;

КонецПроцедуры // ЗаменитьКодПредставление()

// Процедура заполняет поле формулы из переданной строки.
//
Процедура ЗаполнитьПолеФормулы(ТекстИсходный)
	
	ЭлементыФормы.ПолеФормулы.ТекущаяОбласть = ЭлементыФормы.ПолеФормулы.Область(1,1,1,1);
	
	КоличествоСимволов=СтрДлина(ТекстИсходный);

	Если КоличествоСимволов>0 Тогда

		ТекстЯчейки="";

		Для Индекс=1 По КоличествоСимволов Цикл

			ТекСимвол=Сред(ТекстИсходный,Индекс,1);

			Если ТекСимвол="[" ИЛИ ТекСимвол="{" Тогда  // Формируем текст аргумента расчета

				ТекстЯчейки=ТекстЯчейки+ТекСимвол;

			ИначеЕсли ТекСимвол="]" ИЛИ ТекСимвол="}" Тогда // Устанавливаем текст аргумента расчета


				ТекстЯчейки=ТекстЯчейки+ТекСимвол;
				УстановитьТекстЯчейки(ТекстЯчейки);
				ТекстЯчейки="";

			Иначе

				Если ТекстЯчейки="" Тогда // Устанавливаем операнд расчета

					УстановитьТекстЯчейки(ТекСимвол);

				Иначе // Формируем текст аргумента расчета

					ТекстЯчейки=ТекстЯчейки+ТекСимвол;

				КонецЕсли;

			КонецЕсли;

		КонецЦикла;

	Иначе

		ОбластьВставки=ЭлементыФормы.ПолеФормулы.Область(1,1);
		ОбластьВставки.ШиринаКолонки=1;
		ОбластьВставки.ГоризонтальноеПоложение=ГоризонтальноеПоложение.Центр;

		ЭлементыФормы.ПолеФормулы.ТекущаяОбласть=ОбластьВставки;

	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПолеФормулы()

Процедура ЗаполнитьПодменюПараметры()
	
	ПараметрыКнопки = ЭлементыФормы.КоманднаяПанельПолеФормулы.Кнопки.Параметры.Кнопки;
	ПараметрыКнопки.Добавить("Количество", ТипКнопкиКоманднойПанели.Действие, "Количество", Новый Действие("КоманднаяПанельПолеФормулыКнопкаПараметры"));
	
КонецПроцедуры // ЗаполнитьПодменюПараметры()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ТекстИсходный=СокрЛП(НачальноеЗначениеВыбора);
	ЗаполнитьПолеФормулы(ТекстИсходный);
	
	Если ТипЗнч(СправочникОбъект) = Тип("СправочникОбъект.СпецификацииНоменклатуры") 
	   И СправочникОбъект.ВидСпецификации <> Перечисления.ВидыСпецификаций.Узел Тогда
		ТаблицаПараметров = СправочникОбъект.ПараметрыВыпускаПродукции.Выгрузить();
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ВидыПараметров.Ссылка КАК ВидПараметра
		|ИЗ
		|	Справочник.ВидыПараметровВыпускаПродукции КАК ВидыПараметров
		|";
		ТаблицаПараметров = Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	ПараметрыВыпускаПродукции.Загрузить(ТаблицаПараметров);
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()
	
	ЭлементыФормы.КоманднаяПанельПолеФормулы.Кнопки.КодНаименование.Пометка = Истина;
	
	СвойстваОбъектов.Отбор.НазначениеСвойства.Установить(ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры);
	
	ЗаполнитьПодменюПараметры();
		
КонецПроцедуры // ПриОткрытии()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при нажатии кнопки "Плюс" командной панели.
//
Процедура КоманднаяПанельПолеФормулыПлюс(Кнопка)
	
    УстановитьТекстЯчейки("+");
	
КонецПроцедуры // КнопкаПлюсНажатие()

// Процедура вызывается при нажатии кнопки "Плюс" командной панели.
//
Процедура КоманднаяПанельПолеФормулыМинус(Кнопка)

  	УстановитьТекстЯчейки("-");
	
КонецПроцедуры // КоманднаяПанельПолеФормулыМинус()

// Процедура вызывается при нажатии кнопки "Умножить" командной панели.
//
Процедура КоманднаяПанельПолеФормулыУмножить(Кнопка)
	
	УстановитьТекстЯчейки("*");

КонецПроцедуры // КоманднаяПанельПолеФормулыУмножить()

// Процедура вызывается при нажатии кнопки "Разделить" командной панели.
//
Процедура КоманднаяПанельПолеФормулыРазделить(Кнопка)

	УстановитьТекстЯчейки("/");

КонецПроцедуры // КоманднаяПанельПолеФормулыРазделить()

// Процедура вызывается при нажатии кнопки "СкобкаОткрыть" командной панели.
//
Процедура КоманднаяПанельПолеФормулыСкобкаОткрыть(Кнопка)

	УстановитьТекстЯчейки("(");
	
КонецПроцедуры // КоманднаяПанельПолеФормулыСкобкаОткрыть()

// Процедура вызывается при нажатии кнопки "СкобкаЗакрыть" командной панели.
//
Процедура КоманднаяПанельПолеФормулыСкобкаЗакрыть(Кнопка)
	
	УстановитьТекстЯчейки(")");

КонецПроцедуры // КоманднаяПанельПолеФормулыСкобкаЗакрыть()

// Процедура вызывается при нажатии кнопки "КнопкаУсловие" командной панели.
//
Процедура КоманднаяПанельПолеФормулыКнопкаУсловие(Кнопка)
	
	УстановитьТекстЯчейки("?");
	
КонецПроцедуры // КоманднаяПанельПолеФормулыКнопкаУсловие()

// Процедура вызывается при нажатии кнопки "КнопкаМеньше" командной панели.
//
Процедура КоманднаяПанельПолеФормулыКнопкаМеньше(Кнопка)
	
	УстановитьТекстЯчейки("<");
	
КонецПроцедуры // КоманднаяПанельПолеФормулыКнопкаМеньше()

// Процедура вызывается при нажатии кнопки "КнопкаРавно" командной панели.
//
Процедура КоманднаяПанельПолеФормулыКнопкаРавно(Кнопка)
		
	УстановитьТекстЯчейки("=");
	
КонецПроцедуры // КоманднаяПанельПолеФормулыКнопкаРавно()

// Процедура вызывается при нажатии кнопки "КнопкаБольше" командной панели.
//
Процедура КоманднаяПанельПолеФормулыКнопкаБольше(Кнопка)
		
	УстановитьТекстЯчейки(">");
	
КонецПроцедуры // КоманднаяПанельПолеФормулыКнопкаБольше()

// Процедура вызывается при нажатии кнопки "КнопкаМин" командной панели.
//
Процедура КоманднаяПанельПолеФормулыКнопкаМин(Кнопка)
			
	УстановитьТекстЯчейки("Мин");
	
КонецПроцедуры // КоманднаяПанельПолеФормулыКнопкаМин()

// Процедура вызывается при нажатии кнопки "КнопкаМакс" командной панели.
//
Процедура КоманднаяПанельПолеФормулыКнопкаМакс(Кнопка)
					
	УстановитьТекстЯчейки("Макс");
		
КонецПроцедуры // КоманднаяПанельПолеФормулыКнопкаМакс()

// Процедура вызывается при нажатии кнопки "КнопкаОкр" командной панели.
//
Процедура КоманднаяПанельПолеФормулыКнопкаОкр(Кнопка)
	
	УстановитьТекстЯчейки("Окр");
	
КонецПроцедуры // КоманднаяПанельПолеФормулыКнопкаОкр()

// Процедура вызывается при нажатии кнопки "КнопкаЦел" командной панели.
//
Процедура КоманднаяПанельПолеФормулыКнопкаЦел(Кнопка)
	
	УстановитьТекстЯчейки("Цел");
	
КонецПроцедуры // КоманднаяПанельПолеФормулыКнопкаЦел()

// Процедура вызывается при нажатии кнопки "ШагВлево" командной панели.
//
Процедура КоманднаяПанельПолеФормулыШагВлево(Кнопка)
	
	Если ЭлементыФормы.ПолеФормулы.ТекущаяОбласть.Лево>1 Тогда

		ЭлементыФормы.ПолеФормулы.ТекущаяОбласть=ЭлементыФормы.ПолеФормулы.Область(1,ЭлементыФормы.ПолеФормулы.ТекущаяОбласть.Лево-1);

    КонецЕсли;
	
КонецПроцедуры // КоманднаяПанельПолеФормулыШагВлево()

// Процедура вызывается при нажатии кнопки "ШагВправо" командной панели.
//
Процедура КоманднаяПанельПолеФормулыШагВправо(Кнопка)

	ЭлементыФормы.ПолеФормулы.ТекущаяОбласть=ЭлементыФормы.ПолеФормулы.Область(1,ЭлементыФормы.ПолеФормулы.ТекущаяОбласть.Лево+1);

КонецПроцедуры // КоманднаяПанельПолеФормулыШагВправо()

// Процедура вызывается при нажатии кнопки "Раздвинуть" командной панели.
//
Процедура КоманднаяПанельПолеФормулыРаздвинуть(Кнопка)
	
	ЭлементыФормы.ПолеФормулы.ВставитьОбласть(ЭлементыФормы.ПолеФормулы.ТекущаяОбласть,,ТипСмещенияТабличногоДокумента.ПоГоризонтали);

    Для Индекс=1 по ЭлементыФормы.ПолеФормулы.ШиринаТаблицы Цикл

		ЭлементыФормы.ПолеФормулы.Область(1,Индекс).ШиринаКолонки=СтрДлина(ЭлементыФормы.ПолеФормулы.Область(1,Индекс).Текст)

	КонецЦикла;

	ЭлементыФормы.ПолеФормулы.ТекущаяОбласть=ЭлементыФормы.ПолеФормулы.Область(1,ЭлементыФормы.ПолеФормулы.ТекущаяОбласть.Лево+1);
    ЭлементыФормы.ПолеФормулы.ТекущаяОбласть.Текст=" ";
	ЭлементыФормы.ПолеФормулы.ТекущаяОбласть.ШиринаКолонки=1;
	ЭлементыФормы.ПолеФормулы.ТекущаяОбласть.ГоризонтальноеПоложение=ГоризонтальноеПоложение.Центр;
   
КонецПроцедуры // КоманднаяПанельПолеФормулыРаздвинуть()

// Процедура вызывается при нажатии кнопки "СтеретьСлева" командной панели.
//
Процедура КоманднаяПанельПолеФормулыСтеретьСлева(Кнопка)
	
    Колонка=ЭлементыФормы.ПолеФормулы.ТекущаяОбласть.Лево;

	Если Колонка>1 Тогда

		ОбластьУдаления=ЭлементыФормы.ПолеФормулы.Область(1,Колонка-1);
		ЭлементыФормы.ПолеФормулы.УдалитьОбласть(ОбластьУдаления,ТипСмещенияТабличногоДокумента.ПоГоризонтали);

		Для Индекс=1 по ЭлементыФормы.ПолеФормулы.ШиринаТаблицы Цикл

			ЭлементыФормы.ПолеФормулы.Область(1,Индекс).ШиринаКолонки=СтрДлина(ЭлементыФормы.ПолеФормулы.Область(1,Индекс).Текст);

		КонецЦикла;

		ЭлементыФормы.ПолеФормулы.ТекущаяОбласть=ЭлементыФормы.ПолеФормулы.Область(1,Колонка-1);
		ЭлементыФормы.ПолеФормулы.ТекущаяОбласть.ШиринаКолонки=?(СтрДлина(ЭлементыФормы.ПолеФормулы.ТекущаяОбласть.Текст)=0,1,СтрДлина(ЭлементыФормы.ПолеФормулы.ТекущаяОбласть.Текст));
		ЭлементыФормы.ПолеФормулы.ТекущаяОбласть.ГоризонтальноеПоложение=ГоризонтальноеПоложение.Центр;

	КонецЕсли;
		
КонецПроцедуры // КоманднаяПанельПолеФормулыСтеретьСлева()

// Процедура вызывается при нажатии кнопки "Удалить" командной панели.
//
Процедура КоманднаяПанельПолеФормулыУдалить(Кнопка)

	ЭлементыФормы.ПолеФормулы.УдалитьОбласть(ЭлементыФормы.ПолеФормулы.ТекущаяОбласть,ТипСмещенияТабличногоДокумента.ПоГоризонтали);

    Для Индекс=1 по ЭлементыФормы.ПолеФормулы.ШиринаТаблицы Цикл

		ЭлементыФормы.ПолеФормулы.Область(1,Индекс).ШиринаКолонки=СтрДлина(ЭлементыФормы.ПолеФормулы.Область(1,Индекс).Текст)

	КонецЦикла;
	
КонецПроцедуры // КоманднаяПанельПолеФормулыУдалить()

// Процедура вызывается при нажатии кнопки "КодНаименование" командной панели.
//
Процедура КоманднаяПанельПолеФормулыКодНаименование(Элемент)

	ЗаменитьКодПредставление(ПараметрыВыпускаПродукции);
	
	СтруктураОтбора = Новый Структура("НазначениеСвойства", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры);
	ЗаменитьКодПредставлениеВыборка(ПланыВидовХарактеристик.СвойстваОбъектов.Выбрать(,СтруктураОтбора),"{","}");
	
	ЭлементыФормы.КоманднаяПанельПолеФормулы.Кнопки.КодНаименование.Пометка=Не ЭлементыФормы.КоманднаяПанельПолеФормулы.Кнопки.КодНаименование.Пометка;	

КонецПроцедуры // КоманднаяПанельПолеФормулыКодНаименование()

// Процедура вызывается при нажатии кнопки "Кнопка1" командной панели.
//
Процедура КоманднаяПанельПолеФормулыКнопка1(Кнопка)
					
	УстановитьТекстЯчейки("1");
		
КонецПроцедуры // КоманднаяПанельПолеФормулыКнопка1()

// Процедура вызывается при нажатии кнопки "Кнопка2" командной панели.
//
Процедура КоманднаяПанельПолеФормулыКнопка2(Кнопка)
						
	УстановитьТекстЯчейки("2");

КонецПроцедуры // КоманднаяПанельПолеФормулыКнопка2()

// Процедура вызывается при нажатии кнопки "Кнопка3" командной панели.
//
Процедура КоманднаяПанельПолеФормулыКнопка3(Кнопка)
						
	УстановитьТекстЯчейки("3");

КонецПроцедуры // КоманднаяПанельПолеФормулыКнопка3()

// Процедура вызывается при нажатии кнопки "Кнопка4" командной панели.
//
Процедура КоманднаяПанельПолеФормулыКнопка4(Кнопка)
						
	УстановитьТекстЯчейки("4");

КонецПроцедуры // КоманднаяПанельПолеФормулыКнопка4()

// Процедура вызывается при нажатии кнопки "Кнопка5" командной панели.
//
Процедура КоманднаяПанельПолеФормулыКнопка5(Кнопка)
						
	УстановитьТекстЯчейки("5");

КонецПроцедуры // КоманднаяПанельПолеФормулыКнопка5()

// Процедура вызывается при нажатии кнопки "Кнопка6" командной панели.
//
Процедура КоманднаяПанельПолеФормулыКнопка6(Кнопка)
						
	УстановитьТекстЯчейки("6");
	
КонецПроцедуры // КоманднаяПанельПолеФормулыКнопка6()

// Процедура вызывается при нажатии кнопки "Кнопка7" командной панели.
//
Процедура КоманднаяПанельПолеФормулыКнопка7(Кнопка)
						
	УстановитьТекстЯчейки("7");

КонецПроцедуры // КоманднаяПанельПолеФормулыКнопка7()

// Процедура вызывается при нажатии кнопки "Кнопка8" командной панели.
//
Процедура КоманднаяПанельПолеФормулыКнопка8(Кнопка)
						
	УстановитьТекстЯчейки("8");

КонецПроцедуры // КоманднаяПанельПолеФормулыКнопка8()

// Процедура вызывается при нажатии кнопки "Кнопка9" командной панели.
//
Процедура КоманднаяПанельПолеФормулыКнопка9(Кнопка)
						
	УстановитьТекстЯчейки("9");

КонецПроцедуры // КоманднаяПанельПолеФормулыКнопка9()

// Процедура вызывается при нажатии кнопки "Кнопка0" командной панели.
//
Процедура КоманднаяПанельПолеФормулыКнопка0(Кнопка)
						
	УстановитьТекстЯчейки("0");

КонецПроцедуры // КоманднаяПанельПолеФормулыКнопка0()

// Процедура вызывается при нажатии кнопки "Кнопка_" командной панели.
//
Процедура КоманднаяПанельПолеФормулыКнопка_(Кнопка)
						
	УстановитьТекстЯчейки(",");

КонецПроцедуры // КоманднаяПанельПолеФормулыКнопка_()

// Процедура вызывается при нажатии кнопки "Кнопка_" командной панели.
//
Процедура КоманднаяПанельПолеФормулыКнопкаТочка(Кнопка)
	
	УстановитьТекстЯчейки(".");
	
КонецПроцедуры // КоманднаяПанельПолеФормулыКнопкаТочка()

// Процедура вызывается при нажатии кнопки подменю "Параметры" командной панели.
//
Процедура КоманднаяПанельПолеФормулыКнопкаПараметры(Кнопка)
						
	УстановитьТекстЯчейки("[#" + Кнопка.Имя + "#]");

КонецПроцедуры // КоманднаяПанельПолеФормулыКнопка0()

// Процедура вызывается при нажатии кнопки "ЗаполнитьИзШаблона" командной панели.
//
Процедура КоманднаяПанельПолеФормулыЗаполнитьИзШаблона(Кнопка)
	
	Ответ = Вопрос("Поле формулы будет заполнено по шаблону." + Символы.ПС + "Продолжить?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;

	ФормаВыбора = Справочники.ШаблоныФормулРасчета.ПолучитьФормуВыбора(, ЭтаФорма);
	ФормаВыбора.Заголовок = "Выберите шаблон формулы для заполнения";
	ШаблонФормулы = ФормаВыбора.ОткрытьМодально();
	
	Если ЗначениеЗаполнено(ШаблонФормулы) Тогда
		ЭлементыФормы.ПолеФормулы.Очистить();
		ЗаполнитьПолеФормулы(СокрЛП(ШаблонФормулы.Формула));
	КонецЕсли;
	
КонецПроцедуры // КоманднаяПанельПолеФормулыЗаполнитьИзШаблона()

// Процедура вызывается при нажатии кнопки "ОК" основной командной панели.
//
Процедура ОсновныеДействияФормыОК(Элемент)
	
	Если Не ЭлементыФормы.КоманднаяПанельПолеФормулы.Кнопки.КодНаименование.Пометка Тогда // Заменим коды на представления

		ЗаменитьКодПредставление(ПараметрыВыпускаПродукции);
	
		СтруктураОтбора = Новый Структура("НазначениеСвойства", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры);
		ЗаменитьКодПредставлениеВыборка(ПланыВидовХарактеристик.СвойстваОбъектов.Выбрать(,СтруктураОтбора),"{","}");

	КонецЕсли;

	ТекстФормулы="";

	Для Индекс=1 по ЭлементыФормы.ПолеФормулы.ШиринаТаблицы Цикл

		ТекстЯчейки=СокрЛП(ЭлементыФормы.ПолеФормулы.Область(1,Индекс).Текст);

		Если ТекстЯчейки <> "" Тогда 
			ТекстФормулы=ТекстФормулы+ТекстЯчейки;
		КонецЕсли;

	КонецЦикла;
				
	ОповеститьОВыборе(ТекстФормулы);

КонецПроцедуры // ОсновныеДействияФормыОК()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик события "ПриАктивизацииОбласти" табличного поля "ПолеФормулы".
//
Процедура ПолеФормулыПриАктивизацииОбласти(Элемент)

	Если Элемент.ТекущаяОбласть.Низ>1 Тогда

		Элемент.ТекущаяОбласть=Элемент.Область(1,Элемент.ТекущаяОбласть.Лево);

	КонецЕсли;
	
	Для Индекс=1 по Элемент.ШиринаТаблицы Цикл

		Элемент.Область(1,Индекс).ЦветФона=Новый Цвет(255,255,255);

	КонецЦикла;

	Элемент.ТекущаяОбласть.ЦветФона=Новый Цвет(234,229,216);
			
КонецПроцедуры // ПолеФормулыПриАктивизацииОбласти()

// Процедура - обработчик события "Выбор" табличного поля "ПараметрыВыпускаПродукции".
//
Процедура ПараметрыВыпускаПродукцииВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если ЭлементыФормы.КоманднаяПанельПолеФормулы.Кнопки.КодНаименование.Пометка Тогда
		УстановитьТекстЯчейки("["+ВыбраннаяСтрока.ВидПараметра.Наименование+"]");
	Иначе	
    	УстановитьТекстЯчейки("["+ВыбраннаяСтрока.ВидПараметра.Код+"]");
	КонецЕсли;

	ЭлементыФормы.ПолеФормулы.Показать();
	
КонецПроцедуры // ПараметрыВыпускаПродукцииВыбор()

// Процедура - обработчик события "ПриАктивизацииОбласти" табличного поля "ПолеФормулы".
//
Процедура ПараметрыВыпускаПродукцииПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если мКолонкиПараметрыВыпускаПродукции.Код.Видимость Тогда
		ОформлениеСтроки.Ячейки.Код.УстановитьТекст(ДанныеСтроки.ВидПараметра.Код);
	КонецЕсли;
	
КонецПроцедуры // ПараметрыВыпускаПродукцииПриВыводеСтроки()

Процедура СвойстваОбъектовВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЭлементыФормы.КоманднаяПанельПолеФормулы.Кнопки.КодНаименование.Пометка Тогда
		
		УстановитьТекстЯчейки("{"+ВыбраннаяСтрока.Наименование+"}");
		
	Иначе
		
    	УстановитьТекстЯчейки("{"+ВыбраннаяСтрока.Код+"}");
		
	КонецЕсли;

	ЭлементыФормы.ПолеФормулы.Показать();
	
КонецПроцедуры

мКолонкиПараметрыВыпускаПродукции = ЭлементыФормы.ПараметрыВыпускаПродукции.Колонки;