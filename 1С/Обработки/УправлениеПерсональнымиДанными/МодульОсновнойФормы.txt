Функция ИндексКартинкиСобытия(Событие)
	
	ИндексКартинки = 0;

	Если Событие = "_$Session$_.Authentication" Тогда
		ИндексКартинки = 1;
	ИначеЕсли Событие = "_$Session$_.AuthenticationError" Тогда
		ИндексКартинки = 2;
	ИначеЕсли Событие = "_$Session$_.Start" Тогда
		ИндексКартинки = 3;
	ИначеЕсли Событие = "_$Session$_.Finish" Тогда
		ИндексКартинки = 4;
	ИначеЕсли Событие = "_$Access$_.Access" Тогда
		ИндексКартинки = 5;
	ИначеЕсли Событие = "_$Access$_.AccessDenied" Тогда
		ИндексКартинки = 6;
	КонецЕсли;	
	
	Возврат ИндексКартинки;
	
КонецФункции

Функция ИндексКартинкиОбластьДанных(ОбластьДанных)
	                                            
	ИндексКартинки = 0;
	
	Если ОбластьДанных = "Личные данные" Тогда
		ИндексКартинки = 1;
	ИначеЕсли ОбластьДанных = "Данные о профессии и компетециях" Тогда
		ИндексКартинки = 2;
	ИначеЕсли ОбластьДанных = "Данные об имуществе" Тогда
		ИндексКартинки = 3;
	ИначеЕсли ОбластьДанных = "Данные о доходах" Тогда
		ИндексКартинки = 4;
	КонецЕсли;
	
	Возврат ИндексКартинки;
	
КонецФункции

Процедура УстановитьОтборПоСубъекту()
	
	Если ЗначениеЗаполнено(ОтборСубъект) Тогда
		Данные = Новый Массив;
		Данные.Добавить(ОтборСубъект);
		Данные.Добавить(Строка(ОтборСубъект));
		ОтборСобытий.Вставить("Данные", Данные);
	Иначе
		Если ОтборСобытий.Свойство("Данные") Тогда
			ОтборСобытий.Удалить("Данные");
		КонецЕсли;	
	КонецЕсли;
	
	ЗаполнитьСобытия();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПРОСМОТРА СОБЫТИЙ

Процедура ЗаполнитьСобытия()
	
	ТаблицаЖурналаРегистрации = Новый ТаблицаЗначений;
	ВыгрузитьЖурналРегистрации(ТаблицаЖурналаРегистрации, ОтборСобытий);
	События = ТаблицаЖурналаРегистрации.Скопировать();
	
	ПредставлениеПериода = ПредставлениеПериода(?(ОтборСобытий.Свойство("ДатаНачала"), ОтборСобытий.ДатаНачала, ПериодПросмотраСобытий.ДатаНачала), ?(ОтборСобытий.Свойство("ДатаОкончания"), ОтборСобытий.ДатаОкончания, ПериодПросмотраСобытий.ДатаОкончания));
	ЭлементыФормы.РамкаПросмотрСобытий.Заголовок = "Просмотр зарегистрированных событий" + ?(ЗначениеЗаполнено(ПредставлениеПериода), " (" + ПредставлениеПериода + ")", " (без ограничения периода)");
	
КонецПроцедуры

Процедура УстановитьТипОтбораСубъекта()
	
	ТипСубъектаЗначение = ЭлементыФормы.ТипСубъектаОтбора.Значение;
	
	БезОтбора = ТипСубъектаЗначение = "БезОтбора";
	
	Если БезОтбора Тогда
		ОтборСубъект = Неопределено;
		УстановитьОтборПоСубъекту();
	Иначе
		ОтборСубъект = Справочники[ТипСубъектаЗначение].ПустаяСсылка();
	КонецЕсли;
	
	ЭлементыФормы.ОтборСубъект.Доступность = Не БезОтбора;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ УНИЧТОЖЕНИЯ ДАННЫХ

Процедура УстановитьДоступностьКнопкиУничтожить()
	
	ЭлементыФормы.КнопкаУничтожить.Доступность = ЗначениеЗаполнено(Субъект);
	
КонецПроцедуры

Процедура УстановитьТипСубъекта()
	
	Субъект = Справочники[ЭлементыФормы.ТипСубъектаУничтожения.Значение].ПустаяСсылка();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	ПричинаНедоступностиРежима = НастройкаЗащитыПерсональныхДанных.РежимЗащитыПерсональныхДанныхДоступен();
	
	Если ЗначениеЗаполнено(ПричинаНедоступностиРежима) Тогда
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.РежимНеДоступен;
		ЭлементыФормы.НадписьРежимНеДоступен.Заголовок = ПричинаНедоступностиРежима;
		Возврат;
	КонецЕсли;
	
	ПрочитатьСведенияОПерсональныхДанных();
	
	// просмотр событий
	МассивСобытий = Новый Массив;
	МассивСобытий.Добавить("_$Access$_.Access");
	МассивСобытий.Добавить("_$Access$_.AccessDenied");
	МассивСобытий.Добавить("_$Session$_.Authentication");
	МассивСобытий.Добавить("_$Session$_.AuthenticationError");
	МассивСобытий.Добавить("_$Session$_.Finish");
	МассивСобытий.Добавить("_$Session$_.Start");
	
	ОтборСобытий = Новый Структура;
	ОтборСобытий.Вставить("ДатаНачала",	НачалоНедели(ТекущаяДата()));
	ОтборСобытий.Вставить("Событие", МассивСобытий);
	ОтборСобытий.Вставить("ИмяПриложения", "1CV8");
	
	ПериодПросмотраСобытий = Новый НастройкаПериода;
	
	УстановитьТипОтбораСубъекта();
	
	// уничтожение персональных данных
	ЭлементыФормы.Субъект.Доступность = РольДоступна("ПолныеПрава");
	УстановитьДоступностьКнопкиУничтожить();
	УстановитьТипСубъекта();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура КнопкаУничтожитьНажатие(Элемент)
	
	ТекстВопроса = "Персональные данные " + Субъект + " будут уничтожены без возможности восстановления.
					|Вы уверены?";
	Ответ = РаботаСДиалогами.ЗадатьВопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, КодВозвратаДиалога.Нет);
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаКомментариев.УдалитьСообщения();
		
		Если НЕ УничтожитьПерсональныеДанныеСубъекта() Тогда
			РаботаСДиалогами.ВывестиПредупреждение("Персональные данные уничтожены");
		Иначе
			ОбработкаКомментариев.ПоказатьСообщения();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ТипСубъектаУничтоженияПриИзменении(Элемент)
	
	УстановитьТипСубъекта();
	
КонецПроцедуры

Процедура СубъектПриИзменении(Элемент)
	
	УстановитьДоступностьКнопкиУничтожить();
	
КонецПроцедуры

Процедура СубъектОчистка(Элемент, СтандартнаяОбработка)
	
	УстановитьТипСубъекта();
	
	УстановитьДоступностьКнопкиУничтожить();
	
	СтандартнаяОбработка = Ложь;	
	
КонецПроцедуры

Процедура СобытияПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		ОформлениеСтроки.Ячейки.Картинка.ОтображатьКартинку = Истина;
		ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки = ИндексКартинкиСобытия(ОформлениеСтроки.ДанныеСтроки.Событие);
	КонецЦикла;
	
КонецПроцедуры

Процедура СобытияПриАктивизацииСтроки(Элемент)
	
	Событие = Элемент.ТекущаяСтрока;
	
	СведенияОСобытии.Очистить();
	ОбластиДанных.Очистить();	
	
	Если Событие = Неопределено ИЛИ Событие.Данные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// обновляем таблицу областей персональных данных
	Если ЗначениеЗаполнено(Событие.Метаданные) Тогда
		Для Каждого ТаблицаМетаданных Из Событие.Метаданные Цикл
			НайденныеСтроки = СведенияОПерсональныхДанных.НайтиСтроки(Новый Структура("ИмяТаблицыИБ", ТаблицаМетаданных));
			Для Каждого СтрокаЗащищаемыхДанных Из НайденныеСтроки Цикл
				Если ОбластиДанных.Найти(ПредставленияОбластейДанных[СтрокаЗащищаемыхДанных.ОбластьДанных], "ОбластьДанных") = Неопределено Тогда
					НоваяСтрока = ОбластиДанных.Добавить();
					НоваяСтрока.ИмяТаблицыИБ = СтрокаЗащищаемыхДанных.ИмяТаблицыИБ;
					НоваяСтрока.ОбластьДанных = ПредставленияОбластейДанных[СтрокаЗащищаемыхДанных.ОбластьДанных];
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	ВозможныеИменаКолонокСубъекта = Новый Массив;
	ВозможныеИменаКолонокСубъекта.Добавить("СправочникФизическиеЛицаСсылка");
	ВозможныеИменаКолонокСубъекта.Добавить("СправочникСотрудникиОрганизацийСсылка");
	ВозможныеИменаКолонокСубъекта.Добавить("СправочникЗаявкиКандидатовСсылка");
	ВозможныеИменаКолонокСубъекта.Добавить("СправочникФизическиеЛицаНаименование");
	ВозможныеИменаКолонокСубъекта.Добавить("СправочникФизическиеЛицаИНН");
	ВозможныеИменаКолонокСубъекта.Добавить("СправочникФизическиеЛицаСтраховойНомерПФР");
	
	ПризнакиСуществованияКолонок = Новый Структура;
	
	// формируем сведения о субъекте события
	Если Событие.Данные.Свойство("Данные") Тогда
		ДанныеСобытия = Событие.Данные.Данные;
		Если ЗначениеЗаполнено(ДанныеСобытия)Тогда
			КолонкиДанныхСобытия = ДанныеСобытия.Колонки;
			Для Каждого ВозможноеИмя Из ВозможныеИменаКолонокСубъекта Цикл
				ПризнакиСуществованияКолонок.Вставить(ВозможноеИмя, КолонкиДанныхСобытия.Найти(ВозможноеИмя) <> Неопределено);
			КонецЦикла;
			Для Каждого СтрокаДанныхСобытия Из ДанныеСобытия Цикл
				Сведение = СведенияОСобытии.Добавить();
				СубъектНайден = Ложь;
				Для Каждого ВозможноеИмя Из ВозможныеИменаКолонокСубъекта Цикл
					Если ПризнакиСуществованияКолонок[ВозможноеИмя] И СтрокаДанныхСобытия[ВозможноеИмя] <> Неопределено Тогда
						Сведение.СубъектСобытия = СтрокаДанныхСобытия[ВозможноеИмя];
						СубъектНайден = Истина;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Если НЕ СубъектНайден Тогда
					Если КолонкиДанныхСобытия.Количество() > 0 И СтрокаДанныхСобытия[0] <> Неопределено Тогда
						Сведение.СубъектСобытия = СтрокаДанныхСобытия[0];
					Иначе
						Сведение.СубъектСобытия = Неопределено;	
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	Иначе
		// обработаем сведения о событии из структуры
		Для Каждого ДанныеОСобытии Из Событие.Данные Цикл
			Сведение = СведенияОСобытии.Добавить();
			Сведение.СубъектСобытия = ДанныеОСобытии.Значение;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТипСубъектаПриИзменении(Элемент)
	
	УстановитьТипОтбораСубъекта();
	
КонецПроцедуры

Процедура ОтборСубъектПриИзменении(Элемент)
	
	УстановитьОтборПоСубъекту();
	
КонецПроцедуры

Процедура ОтборСубъектОчистка(Элемент, СтандартнаяОбработка)
	
	УстановитьТипОтбораСубъекта();
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

Процедура КоманднаяПанельСобытияОбновить(Кнопка)
	
	АктивноеСобытиеДата = ?(ЭлементыФормы.События.ТекущаяСтрока <> Неопределено, ЭлементыФормы.События.ТекущаяСтрока.Дата, Неопределено);
	
	ЗаполнитьСобытия();
	
	АктивнаяСтрока = События.Найти(АктивноеСобытиеДата, "Дата");
	Если АктивнаяСтрока <> Неопределено Тогда
		ЭлементыФормы.События.ТекущаяСтрока = АктивнаяСтрока;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельСобытияУстановитьПериод(Кнопка)
	
	ДатаНачала = Неопределено;
	ДатаОкончания = Неопределено;
	ОтборСобытий.Свойство("ДатаНачала", ДатаНачала);
	ОтборСобытий.Свойство("ДатаОкончания", ДатаОкончания);
	ДатаНачала = ?(ДатаНачала = Неопределено, '00010101000000', ДатаНачала);
	ДатаОкончания = ?(ДатаОкончания = Неопределено, '00010101000000', ДатаОкончания);

	Если ПериодПросмотраСобытий.ДатаНачала <> ДатаНачала Тогда
		ПериодПросмотраСобытий.ВариантНачала = ВариантГраницыИнтервала.КонкретнаяДата;
		ПериодПросмотраСобытий.ДатаНачала = ДатаНачала;
	КонецЕсли;
	
	Если ПериодПросмотраСобытий.ДатаОкончания <> ДатаОкончания Тогда
		ПериодПросмотраСобытий.ВариантОкончания = ВариантГраницыИнтервала.КонкретнаяДата;
		ПериодПросмотраСобытий.ДатаОкончания = ДатаОкончания;
	КонецЕсли;
	
	Если ПериодПросмотраСобытий.Редактировать() Тогда
		
		Если ПериодПросмотраСобытий.ДатаНачала = '00010101000000' Тогда
			ОтборСобытий.Удалить("ДатаНачала");
		Иначе
			ОтборСобытий.Вставить("ДатаНачала", ПериодПросмотраСобытий.ДатаНачала);
		КонецЕсли;
		
		Если ПериодПросмотраСобытий.ДатаОкончания = '00010101000000' Тогда
			ОтборСобытий.Удалить("ДатаОкончания");
		Иначе
			ОтборСобытий.Вставить("ДатаОкончания", ПериодПросмотраСобытий.ДатаОкончания);
		КонецЕсли;
		
		ЗаполнитьСобытия();
		
	КонецЕсли;

КонецПроцедуры

Процедура ОбластиДанныхПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		ОформлениеСтроки.Ячейки.Картинка.ОтображатьКартинку = Истина;
		ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки = ИндексКартинкиОбластьДанных(ОформлениеСтроки.ДанныеСтроки.ОбластьДанных);
	КонецЦикла;
	
КонецПроцедуры

Процедура СведенияОСобытииВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	ОткрытьЗначение(ВыбраннаяСтрока[Колонка.Имя]);
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

ПредставленияОбластейДанных = Новый Соответствие;
ПредставленияОбластейДанных.Вставить("ЛичныеДанные", 				"Личные данные");
ПредставленияОбластейДанных.Вставить("ДанныеОПрофессииИКомпетенциях","Данные о профессии и компетециях");
ПредставленияОбластейДанных.Вставить("ДанныеОбИмуществе", 			"Данные об имуществе");
ПредставленияОбластейДанных.Вставить("ДанныеОДоходах", 				"Данные о доходах");