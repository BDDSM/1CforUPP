////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура УстановитьВидимостьРеквизитов()
	
	Если ТипЗнч(Основание) = Тип("Массив") Тогда
		ЭлементыФормы.НадписьОснование.Видимость = Ложь;
		ЭлементыФормы.ДокументОснование.Видимость = Ложь;
	Иначе
		ЭлементыФормы.НадписьОснование.Видимость = Истина;
		ЭлементыФормы.ДокументОснование.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьВводНаОсновании()
	
	ИмяДокумента = ПолучитьИмяДокумента();
	
	Если НЕ ЗначениеЗаполнено(ИмяДокумента) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из ВводНаОсновании.НайтиСтроки(Новый Структура("Отметка", Истина)) Цикл
		
		Форма = Документы[ИмяДокумента].ПолучитьФормуНовогоДокумента(,, СтрокаТаблицы.Организация);
		Форма.Организация = СтрокаТаблицы.Организация;
		Форма.Заполнить(Основание);
		
		Форма.Открыть();
		
	КонецЦикла;
	
	Закрыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ИмяДокумента = ПолучитьИмяДокумента();
	
	Если НЕ ЗначениеЗаполнено(ИмяДокумента) Тогда
		Отказ = Истина;
		Предупреждение("Обработка является сервисной и не предназначена для открытия из пункта ""Операции"" стандартного меню!");
		Возврат;
	КонецЕсли;
	
	Если Не ПравоДоступа("Добавление", Метаданные.Документы[ИмяДокумента]) Тогда
		Предупреждение("У вас нет прав на создание документа """ + Метаданные.Документы[ИмяДокумента].Синоним + """");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Автозаполнение();
	
	Если ВводНаОсновании.Количество() = 0 Тогда
		Предупреждение("Нет сотрудников в организациях, для которых можно создать документ на основании!");
		Отказ = Истина;
	ИначеЕсли ВводНаОсновании.Количество() = 1 Тогда
		ВводНаОсновании[0].Отметка = Истина;
		ВыполнитьВводНаОсновании();
	Иначе
		УстановитьВидимостьРеквизитов();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура - обработчик нажатия на кнопку "Выполнить" командной панели "ОсновныеДействияФормы"
//
Процедура ОсновныеДействияФормыВыполнить(Кнопка)
	
	ВыполнитьВводНаОсновании();
	
КонецПроцедуры // ОсновныеДействияФормыОсновныеДействияФормыВыполнить()


// Процедура - обработчик нажатия на кнопку "УстановитьФлажки" командной панели "ВводНаОсновании"
//
Процедура КоманднаяПанельВводНаОснованииУстановитьФлажки(Кнопка)
	
	Для Каждого СтрокаТЧ Из ВводНаОсновании Цикл
		СтрокаТЧ.Отметка = Истина;
	КонецЦикла;
	
КонецПроцедуры // КоманднаяПанельВводНаОснованииУстановитьФлажки()

// Процедура - обработчик нажатия на кнопку "СнятьФлажки" командной панели "ВводНаОсновании"
//
Процедура КоманднаяПанельВводНаОснованииСнятьФлажки(Кнопка)
	
	Для Каждого СтрокаТЧ Из ВводНаОсновании Цикл
		СтрокаТЧ.Отметка = Ложь;
	КонецЦикла;
	
КонецПроцедуры // КоманднаяПанельВводНаОснованииСнятьФлажки()

// Процедура - обработчик нажатия на кнопку "Обновить" командной панели "ВводНаОсновании"
//
Процедура КоманднаяПанельВводНаОснованииОбновить(Кнопка)
	
	Автозаполнение();
	
КонецПроцедуры // КоманднаяПанельВводНаОснованииОбновить()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик события "ПриИзменении" реквизита "ДокументОснование"
//
Процедура ДокументОснованиеПриИзменении(Элемент)
	
	Автозаполнение();
	
КонецПроцедуры // ДокументОснованиеПриИзменении()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ