Перем БылоФизлицо;
Перем ТабличнаяЧасть;

Процедура ЗаполнитьКадровыеДанные()
	
	Выборка = СформироватьЗапросДляЗаполненияКадровыхДанных().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.РасширенныйСтраховойСтажДляБЛ Тогда
			ЗаполнитьЗначенияСвойств(Отставники.Добавить(), Выборка);
		КонецЕсли;
		Если Выборка.ИмеющиеЛьготыПриНачисленииПособий Тогда
			ЗаполнитьЗначенияСвойств(Облученные.Добавить(), Выборка);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьРасчетныеДанные()
	
	МассивРезультатовЗапроса = СформироватьЗапросДляЗаполненияРасчетныхДанных();
	
	ПособияПоБеременности.Загрузить(МассивРезультатовЗапроса[1].Выгрузить());
	ПособияПоУходуЗаРебенком.Загрузить(МассивРезультатовЗапроса[3].Выгрузить());
	
КонецПроцедуры

Процедура ОткрытьФормуВыбораФизлица(Владелец, Ключ, ТекущееЗначение = Неопределено)
	
	СтандартнаяОбработка = Ложь;
	
	Форма = Справочники.ФизическиеЛица.ПолучитьФормуВыбора(, Владелец, Ключ);
	
	Форма.ПараметрВыборГруппИЭлементов	= ИспользованиеГруппИЭлементов.Элементы;
	Форма.РежимВыбора					= Истина;
	Форма.ЗакрыватьПриВыборе			= Истина;
	
	Если ТекущееЗначение <> Неопределено Тогда
		Форма.ПараметрТекущаяСтрока		= ТекущееЗначение;
	КонецЕсли;
	
	Форма.Открыть();
	
КонецПроцедуры

Процедура ДобавитьФизлицо(ВыбранноеЗначение)
	
	Физлицо = ВыбранноеЗначение;
	БылоФизлицо = Физлицо;
	
	Если ТабличнаяЧасть.Найти(Физлицо, "Физлицо") = Неопределено Тогда
		НоваяСтрока = ТабличнаяЧасть.Добавить();
		НоваяСтрока.ФизЛицо = Физлицо;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьСписокСотрудников(ИмяСписка, ТекстЗаголовка)
	
	ФормаСписокСотрудников = ПолучитьФорму("СписокСотрудников", ЭтаФорма);
	Если ФормаСписокСотрудников.Открыта() Тогда
		ФормаСписокСотрудников.Активизировать();
	Иначе
		ФормаСписокСотрудников.Открыть();
	КонецЕсли;
	
	ФормаСписокСотрудников.Заголовок = ТекстЗаголовка;
	
	ПанельФормыСпискаСотрудников = ФормаСписокСотрудников.ЭлементыФормы.ОсновнаяПанель;
	ПанельФормыСпискаСотрудников.ТекущаяСтраница = ПанельФормыСпискаСотрудников.Страницы[ИмяСписка];
	
КонецПроцедуры

Процедура ОформитьСтроки(ОформленияСтрок)
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		Если ОформлениеСтроки.ДанныеСтроки.Выполнено Тогда
			ОформлениеСтроки.Ячейки.Действие.ЦветТекста = ЦветаСтиля.ЦветТекстаПоля;
			ОформлениеСтроки.Ячейки.Действие.Гиперссылка = Ложь;
		Иначе	
			ОформлениеСтроки.Ячейки.Действие.ЦветТекста = ЦветаСтиля.ЦветГиперссылки;
			ОформлениеСтроки.Ячейки.Действие.Гиперссылка = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ОбработатьНажатие(ВыбраннаяСтрока, Колонка)
	
	Если Колонка.Имя = "Действие" И НЕ ВыбраннаяСтрока.Выполнено Тогда
		ФормаДокумента = РаботаСДиалогамиЗК.ВвестиДокументИсправление(ВыбраннаяСтрока.РасчетныйДокумент.ПолучитьОбъект(), , , Дата(2010, 1, 1));
		Если ФормаДокумента <> Неопределено Тогда
			ФормаДокумента.Активизировать();
		КонецЕсли;
		Возврат ФормаДокумента;
	КонецЕсли;
	
КонецФункции

Процедура УстановитьПараметрыЭлементовФормы()
	
	// устанавливаем информационные надписи данных физических лиц
	УстановитьЗаголовокИнформационнойНадписиФизлиц("Отставники", "Информация о ""расширенном"" стаже введена для ");
	УстановитьЗаголовокИнформационнойНадписиФизлиц("Облученные", "Информация о льготах при получении пособий введена для ");
	
	// устанавливаем информационные надписи данных пособий
	УстановитьЗаголовокИнформационнойНадписиПособий("ПособияПоБеременности", "Обнаружены пособия, по которым требуется пересчет");
	УстановитьЗаголовокИнформационнойНадписиПособий("ПособияПоУходуЗаРебенком", "Обнаружены пособия, которые требуется исправить");
	
КонецПроцедуры

Процедура УстановитьЗаголовокИнформационнойНадписиФизлиц(ТабличнаяЧасть, ПостоянныйТекстНадписи)
	
	ПанельИнформация = ЭлементыФормы[ТабличнаяЧасть + "Информация"];
	
	КоличествоСотрудников = ЭтотОбъект[ТабличнаяЧасть].Количество();
	
	Если КоличествоСотрудников > 0 Тогда
		ПанельИнформация.ТекущаяСтраница = ПанельИнформация.Страницы.ИнформацияВведена;
        Надпись = ЭлементыФормы[ТабличнаяЧасть + "НадписьИнформацияВведена"];
		Если КоличествоСотрудников % 10 = 1 И НЕ КоличествоСотрудников % 100 = 11 Тогда
			Надпись.Заголовок = ПостоянныйТекстНадписи + КоличествоСотрудников + "-го сотрудника";
		Иначе
			Если КоличествоСотрудников % 10 = 2 И НЕ КоличествоСотрудников % 100 = 12 Тогда
				Надпись.Заголовок = ПостоянныйТекстНадписи + КоличествоСотрудников + "-ух сотрудников";	
			ИначеЕсли (КоличествоСотрудников % 10 = 3 И НЕ КоличествоСотрудников % 100 = 13) 
				  или (КоличествоСотрудников % 10 = 4 И НЕ КоличествоСотрудников % 100 = 14) Тогда
				Надпись.Заголовок = ПостоянныйТекстНадписи + КоличествоСотрудников + "-ех сотрудников";		
			Иначе
				Надпись.Заголовок = ПостоянныйТекстНадписи + КоличествоСотрудников + "-ти сотрудников";
			КонецЕсли;
		КонецЕсли;
	Иначе
		ПанельИнформация.ТекущаяСтраница = ПанельИнформация.Страницы.ИнформацияНеВведена;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьЗаголовокИнформационнойНадписиПособий(ТабличнаяЧасть, ПостоянныйТекстНадписи)
	
	ПанельИнформация = ЭлементыФормы[ТабличнаяЧасть + "Информация"];
	ОбъектТабличнаяЧасть = ЭтотОбъект[ТабличнаяЧасть];
	
	КоличествоПособий 			= ОбъектТабличнаяЧасть.Количество();
	КоличествоПособийОбработано = ОбъектТабличнаяЧасть.НайтиСтроки(Новый Структура("Выполнено", Истина)).Количество();
	
	Если КоличествоПособий > 0 Тогда
		Если КоличествоПособий = КоличествоПособийОбработано Тогда
			ПанельИнформация.ТекущаяСтраница = ПанельИнформация.Страницы.ДокументыОбработаны;
		Иначе
			ПанельИнформация.ТекущаяСтраница = ПанельИнформация.Страницы.ДокументыОбнаружены;
			ЭлементыФормы[ТабличнаяЧасть + "ДокументыОбнаружены"].Заголовок = ПостоянныйТекстНадписи + ?(КоличествоПособийОбработано = 0,".",". Всего " + КоличествоПособий +", обработано " + КоличествоПособийОбработано);
			ЭлементыФормы["Панель" + ТабличнаяЧасть].Свертка = РежимСверткиЭлементаУправления.Нет;
		КонецЕсли;
	Иначе
		ПанельИнформация.ТекущаяСтраница = ПанельИнформация.Страницы.ДокументыНеОбнаружены;
		ЭлементыФормы["Панель" + ТабличнаяЧасть].Свертка = РежимСверткиЭлементаУправления.Верх;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьКадровыеДанные();
	
	ЗаполнитьРасчетныеДанные();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	УстановитьПараметрыЭлементовФормы();
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьФорму" Тогда
		Если ТипЗнч(Параметр) = Тип("Структура") И Параметр.Свойство("Команда") И Параметр.Команда = "ДоступностьИсправленногоДокумента" Тогда
			Если ТипЗнч(Источник) = Тип("ДокументСсылка.НачислениеПоБольничномуЛисту")  Тогда
				НайденныйДокумент = ПособияПоБеременности.Найти(Параметр.Объект, "РасчетныйДокумент");
				Если НайденныйДокумент <> Неопределено Тогда
					НайденныйДокумент.Выполнено = Истина;
					НайденныйДокумент.Действие = "Пересчет выполнен";
					УстановитьЗаголовокИнформационнойНадписиПособий("ПособияПоБеременности", "Обнаружены пособия, по которым требуется пересчет");
				КонецЕсли;
			ИначеЕсли ТипЗнч(Источник) = Тип("ДокументСсылка.ОтпускПоУходуЗаРебенком")  Тогда
				НайденныйДокумент = ПособияПоУходуЗаРебенком.Найти(Параметр.Объект, "РасчетныйДокумент");
				Если НайденныйДокумент <> Неопределено Тогда
					НайденныйДокумент.Выполнено = Истина;
					НайденныйДокумент.Действие = "Исправление выполнено";
					УстановитьЗаголовокИнформационнойНадписиПособий("ПособияПоУходуЗаРебенком", "Обнаружены пособия, которые требуется исправить");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "ОбновитьДанныеОФизлице" Тогда
		
		ОбновленноеФизлицо = Параметр;
		
		СтрокаОтставника 	= Отставники.Найти(ОбновленноеФизлицо, "Физлицо");
		СтрокаОблученного 	= Облученные.Найти(ОбновленноеФизлицо, "Физлицо");
		
		ЭтоОтставник 	= ОбновленноеФизлицо.Стажи.НайтиСтроки(Новый Структура("ВидСтажа", Справочники.ВидыСтажа.РасширенныйСтраховойСтажДляБЛ)).Количество();
		ЭтоОблученный 	= Не ОбновленноеФизлицо.ЛьготаПриНачисленииПособий.Пустая();
		
		ОбновитьНадпись = Ложь;
		Если СтрокаОтставника = Неопределено И ЭтоОтставник Тогда
			// надо добавить	
			ТабличнаяЧасть = Отставники;
			ДобавитьФизлицо(ОбновленноеФизлицо);
			ОбновитьНадпись = Истина;
		ИначеЕсли СтрокаОтставника <> Неопределено И Не ЭтоОтставник Тогда
			// надо удалить
			Отставники.Удалить(СтрокаОтставника);	
			ОбновитьНадпись = Истина;
		КонецЕсли;
		// если состав физических лиц изменился - надо обновить информационную надпись
		Если ОбновитьНадпись Тогда
			УстановитьЗаголовокИнформационнойНадписиФизлиц("Отставники", "Информация о ""расширенном"" стаже введена для ");
		КонецЕсли;
		
		ОбновитьНадпись = Ложь;
		Если СтрокаОблученного = Неопределено И ЭтоОблученный Тогда
			// надо добавить	
			ТабличнаяЧасть = Облученные;
			ДобавитьФизлицо(ОбновленноеФизлицо);
			ОбновитьНадпись = Истина;
		ИначеЕсли СтрокаОблученного <> Неопределено И Не ЭтоОблученный Тогда
			// надо удалить
			Отставники.Удалить(СтрокаОблученного);	
			ОбновитьНадпись = Истина;
		КонецЕсли;
		// если состав физических лиц изменился - надо обновить информационную надпись
		Если ОбновитьНадпись Тогда
			УстановитьЗаголовокИнформационнойНадписиФизлиц("Облученные", "Информация о льготах при получении пособий введена для ");
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если ТабличнаяЧасть = Отставники Тогда
		// переходим в место ввода данных
		// - форма трудовая деятельность
		ФормаВводаДанныхТруд = ЗначениеВыбора.ПолучитьФорму("ФормаВводаДанныхТруд");
		ФормаВводаДанныхТруд.Открыть();
		СтажиТабличноеПоле = ФормаВводаДанныхТруд.ЭлементыФормы["Стажи"];
		// добавляем строку
		СтажиТабличноеПоле.ДобавитьСтроку();
		СтажиТабличноеПоле.ТекущаяСтрока["ВидСтажа"] = Справочники.ВидыСтажа.РасширенныйСтраховойСтажДляБЛ;
		// начинаем редактирование
		СтажиТабличноеПоле.ТекущаяКолонка = СтажиТабличноеПоле.Колонки["ДатаОтсчета"];
		СтажиТабличноеПоле.ИзменитьСтроку();
	ИначеЕсли ТабличнаяЧасть = Облученные Тогда
		// переходим в место ввода данных
		// - форма физического лица
		ФормаФизлица = ЗначениеВыбора.ПолучитьФорму();
		ФормаФизлица.Открыть();
		Если Не ФормаФизлица.ЕстьЛьготаПриНачисленииПособий Тогда
			ФормаФизлица.ЕстьЛьготаПриНачисленииПособий = Истина;
			ФормаФизлица.Модифицированность = Истина;
			ФизическиеЛицаКлиент.ФормаЭлементаЕстьЛьготаПриНачисленииПособийПриИзменении(ФормаФизлица.ЭлементыФормы.ЕстьЛьготаПриНачисленииПособий, ФормаФизлица);
		КонецЕсли;
		ФормаФизлица.ТекущийЭлемент = ФормаФизлица.ЭлементыФормы.ЛьготаПриНачисленииПособий;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура НадписьСтавкиСтраховыхВзносовНажатие(Элемент)
	
	ФормаНастройкиПараметровУчета = Обработки.НастройкаПараметровУчета.ПолучитьФорму("НастройкаПараметровУчета");
	Если ФормаНастройкиПараметровУчета.Открыта() Тогда
		ФормаНастройкиПараметровУчета.Активизировать();
	Иначе
		ФормаНастройкиПараметровУчета.Открыть();
	КонецЕсли;
	ПанельНастроекФормы = ФормаНастройкиПараметровУчета.ЭлементыФормы.ПанельНастроек;
	ПанельНастроекФормы.ТекущаяСтраница = ПанельНастроекФормы.Страницы.СтраховыеВзносы;
	
КонецПроцедуры

Процедура ДобавитьОтставникаНажатие(Элемент)
	
	ТабличнаяЧасть = Отставники;
	
	ОткрытьФормуВыбораФизлица(ЭтаФорма, Новый УникальныйИдентификатор, БылоФизлицо);
	
КонецПроцедуры

Процедура ДобавитьЛьготникаНажатие(Элемент)
	
	ТабличнаяЧасть = Облученные;
	
	ОткрытьФормуВыбораФизлица(ЭтаФорма, Новый УникальныйИдентификатор, БылоФизлицо);
	
КонецПроцедуры

Процедура НадписьПоказатьСписокОтставниковНажатие(Элемент)
	
	ОткрытьСписокСотрудников("Отставники", "Лица с ""расширенным"" страховым стажем");
	
КонецПроцедуры

Процедура НадписьПоказатьСписокОблученныхНажатие(Элемент)
	
	ОткрытьСписокСотрудников("Облученные", "Лица, имеющие право на льготы");
	
КонецПроцедуры

Процедура ПособияПоБеременностиПриПолученииДанных(Элемент, ОформленияСтрок)
	
	ОформитьСтроки(ОформленияСтрок);
	
КонецПроцедуры

Процедура ПособияПоУходуЗаРебенкомПриПолученииДанных(Элемент, ОформленияСтрок)
	
	ОформитьСтроки(ОформленияСтрок);
	
КонецПроцедуры

Процедура ПособияПоБеременностиВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	ФормаДокумента = ОбработатьНажатие(ВыбраннаяСтрока, Колонка);
	Если ФормаДокумента <> Неопределено Тогда
		ФормаДокумента.Активизировать();
	Иначе
		ОткрытьЗначение(ВыбраннаяСтрока[Колонка.Имя]);	
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;

КонецПроцедуры

Процедура ПособияПоУходуЗаРебенкомВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	ФормаДокумента = ОбработатьНажатие(ВыбраннаяСтрока, Колонка);
	Если ФормаДокумента <> Неопределено Тогда
		ФормаДокумента.Дата = Макс(Дата(2010, 1, 1), ФормаДокумента.Дата);
	Иначе
		ОткрытьЗначение(ВыбраннаяСтрока[Колонка.Имя]);	
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры