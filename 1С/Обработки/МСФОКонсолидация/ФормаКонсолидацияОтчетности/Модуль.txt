Перем СтруктураКонсолидированнойОтчетности;

// Переменные для полной консолидации баланса
Перем СумКон1, СумКон2, СумКон3, СумКон4;
Перем СумПред1, СумПред2, СумПред3, СумПред4;

// Переменные для полной консолидации отчета о прибылях и убытках
Перем СумКон13, СумКон14, СумКон15, СумКон16, СумКон17, СумКон18;
Перем СумПред13, СумПред14, СумПред15, СумПред16, СумПред17, СумПред18;

// Переменные для полной консолидации отчета о движении капитала
Перем СумКон22, СумКон23, СумКон24, СумКон25, СумКон26;
Перем СумПред22, СумПред23, СумПред24, СумПред25, СумПред26;

// Переменные для консолидации долевым участием баланса
Перем СумКон31;
Перем СумПред31;

// Прибыль от внутригрупповых операций в разрезе указанных активов
Перем СумКонЗапасы;
Перем СумПредЗапасы;
Перем СумКонОС;
Перем СумПредОС;
Перем СумКонНМА;
Перем СумПредНМА;

Перем ДоляМеньшинстваВБалансеКон, ДоляМеньшинстваВБалансеПред;
Перем ДоляМеньшинстваВПрибылиКон, ДоляМеньшинстваВПрибылиПред;

Функция Чет(Число)
	Если Цел(Число/2) = Число/2 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

Процедура ПриОткрытии()
    Дата = ДобавитьМесяц(ТекущаяДата(), -5*12);
	Для Ном = 1 по 10 Цикл
		ЭлементыФормы.Период.СписокВыбора.Добавить(НачалоГода(Дата), Формат(НачалоГода(Дата), "ДФ=yyyy"));
		Дата = ДобавитьМесяц(Дата, 12);
	КонецЦикла;

	Период = НачалоГода(ТекущаяДата());

	ПериодПриИзменении(Неопределено);
	УстановитьВидимостьКнопок();
КонецПроцедуры

Процедура ПериодПриИзменении(Элемент)
	ТекстЗапроса ="
	|ВЫБРАТЬ
	|	РегламентированныйОтчет.ИсточникОтчета,
	|	РегламентированныйОтчет.Организация,
	|	РегламентированныйОтчет.Ссылка
	|ИЗ
	|	Документ.РегламентированныйОтчет КАК РегламентированныйОтчет
    |
	|ГДЕ
	|	РегламентированныйОтчет.ДатаОкончания = &ДатаОкончания И
	|	РегламентированныйОтчет.ВидОтчетности = &ВидОтчетности И
	|	РегламентированныйОтчет.ПометкаУдаления = &ПометкаУдаления
	|ИТОГИ ПО
	|	Организация
	|";

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;

	Запрос.УстановитьПараметр("ДатаОкончания", НачалоДня(КонецГода(Период)));
	Запрос.УстановитьПараметр("ВидОтчетности", Перечисления.ВидыОтчетности.ОтчетностьПоМСФО);
	Запрос.УстановитьПараметр("ПометкаУдаления", Ложь);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

    ТабличноеПоле.Очистить();
	ТабличноеПолеОрганизации.Очистить();
	
	Пока Выборка.Следующий() Цикл
		СтрокаТП = ТабличноеПоле.Добавить();
		СтрокаТП.Фирма = Выборка.Организация;
		СтрокаТП.СпособКонсолидации = Перечисления.СпособыКонсолидацииОтчетности.Полная;

		СтрокаТП1 = ТабличноеПолеОрганизации.Добавить();
		СтрокаТП1.Организация = Выборка.Организация;
		
		ВложеннаяВыборка = Выборка.Выбрать();
		Пока ВложеннаяВыборка.Следующий() Цикл
			СтрокаТП[Сред(ВложеннаяВыборка.ИсточникОтчета,5)] = Истина;
			СтрокаТП[Сред(ВложеннаяВыборка.ИсточникОтчета,5) + "Ссылка"] = ВложеннаяВыборка.Ссылка;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Процедура ТабличноеПолеВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	Если (Колонка.Имя = "Баланс") или 
		(Колонка.Имя = "ПрибылиИУбытки") или 
		(Колонка.Имя = "ДДС") или 
		(Колонка.Имя = "ДвижениеКапитала") или 
		(Колонка.Имя = "УчетнаяПолитика") или 
		(Колонка.Имя = "Примечания") Тогда

		Документ = ВыбраннаяСтрока[Колонка.Имя+"Ссылка"];
		
		Если ЗначениеЗаполнено(Документ) Тогда
			ОткрытьЗначение(Документ);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ТабличноеПолеПриИзмененииФлажка(Элемент, Колонка)
	Если Элемент.ТекущаяСтрока[Колонка.Имя] Тогда
		ТС = Элемент.ТекущаяСтрока;
		Если не (ТС.Баланс и ТС.ПрибылиИУбытки и ТС.ДДС и ТС.ДвижениеКапитала) Тогда
			Предупреждение("Невозможно выполнить консолидацию с " + ТС.Фирма + " т.к. для нее не введены основные формы отчетности в соответствии с МСФО.",,"Невозможно включить опцию...");
			Элемент.ТекущаяСтрока[Колонка.Имя] = Ложь;
			Возврат;
		КонецЕсли;
		Если не ТС.УчетнаяПолитика Тогда
			Если Вопрос("Для " + ТС.Фирма + " не введена учетная политика. Продолжить?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да) = КодВозвратаДиалога.Нет Тогда
				Элемент.ТекущаяСтрока[Колонка.Имя] = Ложь;
				Возврат;
			КонецЕсли; 
		КонецЕсли;
		Если не ТС.Примечания Тогда
			Если Вопрос("Для " + ТС.Фирма + " не введены примечания. Продолжить?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да) = КодВозвратаДиалога.Нет Тогда
				Элемент.ТекущаяСтрока[Колонка.Имя] = Ложь;
				Возврат;
			КонецЕсли; 
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ТабличноеПолеПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.Включать Тогда
		ОформлениеСтроки.ЦветФона = WebЦвета.СветлоЖелтый;
	КонецЕсли; 
КонецПроцедуры

Процедура Сохранить(Отчет, ПоказателиОтчета)
	СохраненныйДок  = Документы.РегламентированныйОтчет.СоздатьДокумент();
	СохраненныйДок.Дата = КонецГода(Период);
	СохраненныйДок.УстановитьВремя();

	// установим текущие значения реквизитов документа
	СохраненныйДок.ИсточникОтчета             = Отчет.ИсточникОтчета;
	СохраненныйДок.НаименованиеОтчета         = Отчет.НаименованиеОтчета;
	СохраненныйДок.ДатаНачала                 = Отчет.ДатаНачала;
	СохраненныйДок.ДатаОкончания              = Отчет.ДатаОкончания;
	СохраненныйДок.ВыбраннаяФорма             = Отчет.ВыбраннаяФорма;
	СохраненныйДок.Организация                = "";
	СохраненныйДок.ДатаПодписи                = Отчет.ДатаПодписи;
	СохраненныйДок.ЕдиницаИзмерения           = Отчет.ЕдиницаИзмерения;
	СохраненныйДок.ТочностьЕдиницыИзмерения   = Отчет.ТочностьЕдиницыИзмерения;
	СохраненныйДок.ВидОтчетности              = Перечисления.ВидыОтчетности.ОтчетностьПоМСФО;
	СохраненныйДок.ДеревоНастройкиСтраниц     = Отчет.ДеревоНастройкиСтраниц;

	// формируем список сохранения
	СписокСохранения = Новый Структура();

	// вставляем данные редактируемых ячеек таблицы	
	СписокСохранения.Вставить("ПоказателиОтчета", ПоказателиОтчета);

	// вставляем данные вариантов автозаполнения ячеек
	//СписокСохранения.Вставить("ДанныеВариантовАвтоЗаполнения", мСтруктураВариантыЗаполнения);

	// вствляем версию формы
	//СписокСохранения.Вставить("ВерсияФормы", мВерсияФормы);

	СписокСохранения.Вставить("Консолидация", Перечисления.ВидыКонсолидированныхОтчетов.КонсолидированныйПоОтчетности);

	ХранилищеДанных = Новый ХранилищеЗначения(СписокСохранения);
	СохраненныйДок.ДанныеОтчета = ХранилищеДанных;

	// записываем документ, хранящий данные отчета
	СохраненныйДок.Записать();

	СтрокаТП = ТабличноеПолеРезультат.Добавить();
	СтрокаТП.Отчет = СохраненныйДок.НаименованиеОтчета;
	СтрокаТП.Ссылка = СохраненныйДок.Ссылка;
	СтрокаТП.ОтчетФлажок = Истина;
КонецПроцедуры // Сохранить()

Функция ИнициализироватьТаблицу(ДвойнаяСтыковка = Истина)
	МассивТипов = Новый Массив; 
	МассивТипов.Добавить(Тип("Строка"));
	ОписаниеТиповСтрока = Новый ОписаниеТипов(МассивТипов,,);

	МассивТипов = Новый Массив; 
	МассивТипов.Добавить(Тип("Число"));
	ОписаниеТиповЧисло = Новый ОписаниеТипов(МассивТипов,,);

	ТЗСумма = Новый ТаблицаЗначений();
	ТЗСумма.Колонки.Добавить("Организация", ОписаниеТиповСтрока, "Организация", 25);
    Если ДвойнаяСтыковка Тогда
		ТЗСумма.Колонки.Добавить("Статус", ОписаниеТиповСтрока, " ", 4);
	КонецЕсли;
	НомерОрг = 0;

	Для каждого Строка из ТабличноеПоле Цикл
		Если Строка.Включать Тогда // только те примечания, которые отмечены "флажком"
            Док = Строка.ПримечанияСсылка;
			Если ЗначениеЗаполнено(Док) Тогда
				НомерОрг = НомерОрг + 1;
				ТЗСумма.Колонки.Добавить("Орг" + НомерОрг, ОписаниеТиповЧисло, Док.Организация.НаименованиеПолное, 25);
				СтрокаТЗ = ТЗСумма.Добавить();
				СтрокаТЗ.Организация = Док.Организация.НаименованиеПолное;
                Если ДвойнаяСтыковка Тогда
					СтрокаТЗ.Статус = "Выд.";
					СтрокаТЗ = ТЗСумма.Добавить();
					СтрокаТЗ.Организация = Док.Организация.НаименованиеПолное;
					СтрокаТЗ.Статус = "Пол.";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Возврат ТЗСумма.Скопировать();
КонецФункции

Процедура ЗаполнитьТаблицу(ТЗСумма, Имя1, Имя2, Имя3 = "", Имя4 = "", ПоказателиОтчета, Примечание, ДвойнаяСтыковка = Истина)
	Орг = ПоказателиОтчета[Имя1];
	Сум = ПоказателиОтчета[Имя2];
	
	СтрокаТЗ = ТЗСумма.Найти(Орг, "Организация");
	СтрокаТЗ1 = ТЗСумма.Найти(Примечание.Организация.НаименованиеПолное, "Организация");
    Если ДвойнаяСтыковка Тогда
		Если СтрокаТЗ <> Неопределено Тогда
			СледСтрока = ТЗСумма[ТЗСумма.Индекс(СтрокаТЗ1)+1];
			СледСтрока["Орг" + (ТЗСумма.Индекс(СтрокаТЗ)/2+1)] = Сум; // Пол
		КонецЕсли;
	Иначе
		Если СтрокаТЗ <> Неопределено Тогда
			СтрокаТЗ1["Орг" + (ТЗСумма.Индекс(СтрокаТЗ)+1)] = Сум; // Одиночная стыковка
		КонецЕсли;
	КонецЕсли;
	
    Если ДвойнаяСтыковка Тогда
		Орг = ПоказателиОтчета[Имя3];
		Сум = ПоказателиОтчета[Имя4];
		
		СтрокаТЗ = ТЗСумма.Найти(Орг, "Организация");
		СтрокаТЗ1 = ТЗСумма.Найти(Примечание.Организация.НаименованиеПолное, "Организация");
		Если СтрокаТЗ <> Неопределено Тогда
			СтрокаТЗ1["Орг" + (ТЗСумма.Индекс(СтрокаТЗ)/2+1)] = Сум; // Выд
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Функция НайтиСуммуТаблицы(ТЗСумма, ДвойнаяСтыковка = Истина)
	Сумма = 0;

    Если ДвойнаяСтыковка Тогда
		Для С1 = 0 по ТЗСумма.Количество()-1 Цикл
			НачКол = (С1 - ?(Чет(С1),0,1)) / 2 + 3;
			Для К1 = НачКол по ТЗСумма.Колонки.Количество()-1 Цикл
				С2 = (К1 - 2) * 2 + ?(Чет(С1),1,0);
				К2 = (С1 - ?(Чет(С1),0,1)) / 2 + 2;

				Сумма = Сумма + Мин(ТЗСумма[С1][К1], ТЗСумма[С2][К2]);
			КонецЦикла;
		КонецЦикла;

	Иначе
		Для К1 = 1 по ТЗСумма.Колонки.Количество()-1 Цикл
			Сумма = Сумма + ТЗСумма.Итог("Орг" + К1);
		КонецЦикла;
		
	КонецЕсли;

	Возврат Сумма;
КонецФункции

Процедура СформироватьВременныеСуммы()
    Перем ПоказателиОтчета;

	//+
	СумКонЗапасы = 0;
	СумПредЗапасы = 0;
	СумКонОС = 0;
	СумПредОС = 0;
	СумКонНМА = 0;
	СумПредНМА = 0;
	
	Для каждого Строка1 из ТабличноеПолеОрганизации Цикл
		СтрокаТЗ = ТабличноеПоле.Найти(Строка1.Организация, "Фирма");
		Если СтрокаТЗ <> Неопределено Тогда
			Если СтрокаТЗ.Включать Тогда
				СумПредЗапасы = СумПредЗапасы + Строка1.ТоварыПрибыльНаНачало + Строка1.СырьеИМатериалыПрибыльНаНачало + Строка1.НезавершенноеПроизводствоПрибыльНаНачало + Строка1.КомплектующиеИПолуфабрикатыПрибыльНаНачало + Строка1.ГотоваяПродукцияПрибыльНаНачало + Строка1.ТоварыОтгруженныеПрибыльНаНачало;
				СумКонЗапасы = СумКонЗапасы + Строка1.ТоварыПрибыльНаНачало + Строка1.СырьеИМатериалыПрибыльНаНачало + Строка1.НезавершенноеПроизводствоПрибыльНаНачало + Строка1.КомплектующиеИПолуфабрикатыПрибыльНаНачало + Строка1.ГотоваяПродукцияПрибыльНаНачало + Строка1.ТоварыОтгруженныеПрибыльНаНачало + Строка1.ТоварыПрибыльВТеченииГода + Строка1.СырьеИМатериалыПрибыльВТеченииГода + Строка1.НезавершенноеПроизводствоПрибыльВТеченииГода + Строка1.КомплектующиеИПолуфабрикатыПрибыльВТеченииГода + Строка1.ГотоваяПродукцияПрибыльВТеченииГода + Строка1.ТоварыОтгруженныеПрибыльВТеченииГода;
				
				СумПредОС = СумПредОС + Строка1.ОСПрибыльНаНачало;
				СумКонОС = СумКонОС + Строка1.ОСПрибыльНаНачало + Строка1.ОСПрибыльВТеченииГода;
				
				СумПредНМА = СумПредНМА + Строка1.НМАПрибыльНаНачало;
				СумКонНМА = СумКонНМА + Строка1.НМАПрибыльНаНачало + Строка1.НМАПрибыльВТеченииГода;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	//-
	
   	СтруктураКонсолидированнойОтчетности = Новый Соответствие();
	Состояние("Расчет взаимовычитаемых сумм...");
	ТабличноеПолеРезультат.Очистить();
	
	ДоляМеньшинстваВБалансеКон = 0;
	ДоляМеньшинстваВБалансеПред = 0;
	ДоляМеньшинстваВПрибылиКон = 0;
	ДоляМеньшинстваВПрибылиПред = 0;
	
	// Инициализация таблиц для расчета взаимной стыковки записей
	ТЗКон5 = ИнициализироватьТаблицу();
	ТЗКон6 = ИнициализироватьТаблицу();
	ТЗКон7 = ИнициализироватьТаблицу();
	ТЗКон8 = ИнициализироватьТаблицу();
	ТЗКон11 = ИнициализироватьТаблицу(Ложь);
	ТЗКон12 = ИнициализироватьТаблицу(Ложь);
	ТЗКон21 = ИнициализироватьТаблицу(Ложь);
	ТЗКон40 = ИнициализироватьТаблицу(Ложь);
	
    ТЗПред5 = ИнициализироватьТаблицу();
	ТЗПред6 = ИнициализироватьТаблицу();
	ТЗПред7 = ИнициализироватьТаблицу();
	ТЗПред8 = ИнициализироватьТаблицу();
	ТЗПред11 = ИнициализироватьТаблицу(Ложь);
	ТЗПред12 = ИнициализироватьТаблицу(Ложь);
	ТЗПред21 = ИнициализироватьТаблицу(Ложь);
	ТЗПред40 = ИнициализироватьТаблицу(Ложь);

	ЭлементыФормы.ТЗКон5.СоздатьКолонки();
	ЭлементыФормы.ТЗПред5.СоздатьКолонки();
	ЭлементыФормы.ТЗКон6.СоздатьКолонки();
	ЭлементыФормы.ТЗПред6.СоздатьКолонки();
	ЭлементыФормы.ТЗКон7.СоздатьКолонки();
	ЭлементыФормы.ТЗПред7.СоздатьКолонки();
	ЭлементыФормы.ТЗКон8.СоздатьКолонки();
	ЭлементыФормы.ТЗПред8.СоздатьКолонки();
	ЭлементыФормы.ТЗКон11.СоздатьКолонки();
	ЭлементыФормы.ТЗПред11.СоздатьКолонки();
	ЭлементыФормы.ТЗКон12.СоздатьКолонки();
	ЭлементыФормы.ТЗПред12.СоздатьКолонки();
	ЭлементыФормы.ТЗКон21.СоздатьКолонки();
	ЭлементыФормы.ТЗПред21.СоздатьКолонки();

	СумКон31 = 0; // Сумма вложений в совместную деятельность
	СумПред31 = 0;

	Примечания = Новый Массив();
	ДолиСД = Новый Соответствие();
	
	Для каждого Строка из ТабличноеПоле Цикл
		Если Строка.Включать Тогда // только те примечания, которые отмечены "флажком"
            Док = Строка.ПримечанияСсылка;
			Если ЗначениеЗаполнено(Док) Тогда
				Примечания.Добавить(Док);
				
				// Расчет доли совместной деятельности для последующего пропорционального исключения
				Доля = 0;
				Для каждого Строка1 из ТабличноеПоле Цикл
					Если Строка1.Включать Тогда // только те примечания, которые отмечены "флажком"
						Примечание = Строка1.ПримечанияСсылка;
						Если ЗначениеЗаполнено(Примечание) Тогда
							СписокСохранения = Примечание.ДанныеОтчета.Получить();
							ПоказателиОтчета = СписокСохранения.ПоказателиОтчета.ПолеТабличногоДокументаПримечанияСД;
							
							Кол = СписокСохранения.ДанныеМногострочныхРазделов.Г30.Количество();
							Для Ном = 1 по Кол Цикл
								Наименование = ПоказателиОтчета["Г30Наименование_" + Ном];
								Если Наименование = Док.Организация.НаименованиеПолное Тогда
									Доля = Доля + ПоказателиОтчета["Г30Доля_" + Ном];
									СумКон31 = СумКон31 + ПоказателиОтчета["Г30Величина_" + Ном];
								КонецЕсли;
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				ДолиСД.Вставить(Док.Организация, Доля/100);
				//-
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	СумПред31 = СумКон31;

	// Суммируем все отчеты таблицы по строкам
	Для каждого Колонка из ТабличноеПоле.Колонки Цикл
        Если (Колонка.Имя = "Баланс") или (Колонка.Имя = "ПрибылиИУбытки") или (Колонка.Имя = "ДДС") или (Колонка.Имя = "ДвижениеКапитала") Тогда
			// Сначала суммируем показатели
			Структура = Новый Структура();
			
			Для каждого Строка из ТабличноеПоле Цикл
				Если (не Строка.Включать) или  // только те комплекты, которые отмечены "флажком"
					 (Строка.СпособКонсолидации = Перечисления.СпособыКонсолидацииОтчетности.ПропорциональноВключению) и (Колонка.Имя = "ДвижениеКапитала") Тогда // Движение капитала в способе "Пророрционально включению" не консолидируем
					Продолжить;
				КонецЕсли;
				
				Отчет = Строка[Колонка.Имя + "Ссылка"];
				
				ОтчетПримечание = Строка["ПримечанияСсылка"];
				Если ЗначениеЗаполнено(ОтчетПримечание) Тогда
					Прим = ОтчетПримечание.ДанныеОтчета.Получить().ПоказателиОтчета.ПолеТабличногоДокументаПримечания;
					
					ОбщийПроцентДолиСобственности = 0;
					Кол = ОтчетПримечание.ДанныеОтчета.Получить().ДанныеМногострочныхРазделов.Г01.Количество();
					Для Ном = 1 по Кол Цикл
						ОбщийПроцентДолиСобственности = ОбщийПроцентДолиСобственности + Прим["Г01Доля_" + Ном];
					КонецЦикла;
				Иначе
					Прим = Неопределено;
				КонецЕсли;

				СписокСохранения = Отчет.ДанныеОтчета.Получить();
				СписокСохранения.Свойство("ПоказателиОтчета", ПоказателиОтчета);

				Для Каждого ПоказателиСтраницы Из ПоказателиОтчета Цикл
					ИмяТекТабличноеПоле = ПоказателиСтраницы.Ключ;
					ПоказателиТаблПоле  = ПоказателиСтраницы.Значение;

					СтруктураЗначение = Новый Структура();

		            Знч = Неопределено;
					Структура.Свойство(ИмяТекТабличноеПоле, Знч);
					
					Для Каждого Показатель Из ПоказателиТаблПоле Цикл
						
						ИмяПоказателя       = Показатель.Ключ;
						ЗначениеПоказателя  = Показатель.Значение;
						
						// Среди показателей присутствуют символьные показатели, хранящие двуязычное представление отчета,
						// которые не содержат расчетные данные. Такие показатели необходимо исключить.
						Если ТипЗнч(ЗначениеПоказателя) <> Тип("Число") Тогда
							Продолжить;	
						КонецЕсли;
						
						Если (Строка.СпособКонсолидации = Перечисления.СпособыКонсолидацииОтчетности.ПропорциональноВключению) и (ИмяПоказателя <> "ОргНазв") Тогда
							ЗначениеПоказателя = ЗначениеПоказателя * ДолиСД[Строка.Фирма];
						КонецЕсли;

						Если (Прав(ИмяПоказателя, 3) <> "618") и (Прав(ИмяПоказателя, 3) <> "619") и (ИмяПоказателя <> "ОргНазв") Тогда

							Если Строка.СпособКонсолидации = Перечисления.СпособыКонсолидацииОтчетности.Полная Тогда
								
								//Специально для ДДС вычитаем те же показатели из примечания.
								Если Колонка.Имя = "ДДС" Тогда
									Если Прим <> Неопределено Тогда
										ЗначениеПоказателяПрим = 0;
										Если Прим.Свойство(ИмяПоказателя, ЗначениеПоказателяПрим) Тогда
											ЗначениеПоказателя = ЗначениеПоказателя - ЗначениеПоказателяПрим;
										КонецЕсли;
									КонецЕсли;
									
								//Специально для Баланса вычитаем долю меньшинства.
								ИначеЕсли Колонка.Имя = "Баланс" Тогда
									Если (Прав(ИмяПоказателя, 3) = "301") или (Прав(ИмяПоказателя, 3) = "302") или (Прав(ИмяПоказателя, 3) = "303") или (Прав(ИмяПоказателя, 3) = "304") или (Прав(ИмяПоказателя, 3) = "305") Тогда // КАПИТАЛ И РЕЗЕРВЫ
										Если Прим <> Неопределено Тогда
											Доля = ЗначениеПоказателя/100*ОбщийПроцентДолиСобственности;
											ЗначениеПоказателя = ЗначениеПоказателя - Доля;
											
											Если Лев(ИмяПоказателя, 6) = "СумКон" Тогда
												ДоляМеньшинстваВБалансеКон = ДоляМеньшинстваВБалансеКон + Доля;
											Иначе
												ДоляМеньшинстваВБалансеПред = ДоляМеньшинстваВБалансеПред + Доля;
											КонецЕсли;
										КонецЕсли;
									КонецЕсли;
									
								//Специально для Движение Капитала вычитаем долю меньшинства.
								ИначеЕсли Колонка.Имя = "ДвижениеКапитала" Тогда
									Если Прав(ИмяПоказателя, 3) <> "875" Тогда
										Если Прим <> Неопределено Тогда
											Доля = ЗначениеПоказателя/100*ОбщийПроцентДолиСобственности;
											ЗначениеПоказателя = ЗначениеПоказателя - Доля;
										КонецЕсли;
									КонецЕсли;
									
								КонецЕсли;
								
							КонецЕсли; //-Полная консолидация

							Если не (Знч = Неопределено) Тогда
								ЗнчПоказателя = Неопределено;
								Знч.Свойство(ИмяПоказателя, ЗнчПоказателя);
								Если ЗнчПоказателя = Неопределено Тогда
									Предупреждение("Структура выбранных отчетов отличается друг от друга!!!",, "Ошибка!");
									Возврат;
								Иначе
									ЗначениеПоказателя = ЗначениеПоказателя + ЗнчПоказателя;
								КонецЕсли;
							КонецЕсли;
						Иначе
							ЗначениеПоказателя = 0;
						КонецЕсли;

						СтруктураЗначение.Вставить(ИмяПоказателя, ЗначениеПоказателя);
					КонецЦикла;

					Структура.Вставить(ИмяТекТабличноеПоле, СтруктураЗначение);
				КонецЦикла;
				
				//Специально для Прибылей и Убытков рассчитываем долю меньшинства.
				Если (Колонка.Имя = "ПрибылиИУбытки") и (Строка.СпособКонсолидации = Перечисления.СпособыКонсолидацииОтчетности.Полная) Тогда
					СуммаЗначениеПоказателяКон = 0;
					СуммаЗначениеПоказателяПред = 0;
					Для Ном = 1 по 17 Цикл
						ИмяСумКон = "СумКон6" + Формат(Ном, "ЧЦ=2; ЧВН=");
						ИмяСумПред = "СумПред6" + Формат(Ном, "ЧЦ=2; ЧВН=");

						Попытка
							СуммаЗначениеПоказателяКон = СуммаЗначениеПоказателяКон + ПоказателиОтчета.ПолеТабличногоДокументаПрибыляИУбытки[ИмяСумКон];
							СуммаЗначениеПоказателяПред = СуммаЗначениеПоказателяПред + ПоказателиОтчета.ПолеТабличногоДокументаПрибыляИУбытки[ИмяСумПред];
						Исключение
						КонецПопытки;
					 КонецЦикла;
					 
					Если Прим <> Неопределено Тогда
						ДоляМеньшинстваВПрибылиКон = ДоляМеньшинстваВПрибылиКон + СуммаЗначениеПоказателяКон/100*ОбщийПроцентДолиСобственности;
						ДоляМеньшинстваВПрибылиПред = ДоляМеньшинстваВПрибылиПред + СуммаЗначениеПоказателяПред/100*ОбщийПроцентДолиСобственности;
					КонецЕсли;
				КонецЕсли;

			КонецЦикла;

			// Рассчитываем суммы вычетов для Баланса
			Если Колонка.Имя = "Баланс" Тогда
				СумКон1 = 0; // сумма всех инвестиций
				СумКон2 = 0; // суммы всех долгосрочных дебетовых задолжностей
				СумКон3 = 0; // суммы всех текущих дебетовых задолжностей
				СумКон4 = 0; // суммы групп показателей
				СумКон5 = 0; // Стыковка записей по долгосрочным займам (полученным и выданным)
				СумКон6 = 0; // Стыковка записей по текущим займам (полученным и выданным)
				СумКон7 = 0; // Стыковка записей по авансам выданным с доходами буд.периодов (долгосрочные)
				СумКон8 = 0; // Стыковка записей по авансам выданным с доходами буд.периодов (текущие)

                СумПред1 = 0;
                СумПред2 = 0;
                СумПред3 = 0;
                СумПред4 = 0;
                СумПред5 = 0;
                СумПред6 = 0;
                СумПред7 = 0;
                СумПред8 = 0;
				
				СумКон40 = 0;
				СумПред40 = 0;
				СумКон41 = 0;
				СумПред41 = 0;
				СумКон42 = 0;
				СумПред42 = 0;
				СумКон43 = 0;
				СумПред43 = 0;
				
				Для НомерГруппы = 5 по 8 Цикл
                    КонГод = Формат(Год(Период), "ЧГ=0");
					ПредГод = Формат(Год(ДобавитьМесяц(Период,-12)), "ЧГ=0");

                    ЭлементыФормы["РамкаГруппыКон" + НомерГруппы].Заголовок = ЭлементыФормы["РамкаГруппыКон" + НомерГруппы].Подсказка + " за " + КонГод + " г.";
					ЭлементыФормы["РамкаГруппыПред" + НомерГруппы].Заголовок = ЭлементыФормы["РамкаГруппыПред" + НомерГруппы].Подсказка + " за " + ПредГод + " г.";

					ЭлементыФормы["ИтогоКон" + НомерГруппы].Заголовок = ЭлементыФормы["ИтогоКон" + НомерГруппы].Подсказка + " за " + КонГод + " г.:";
					ЭлементыФормы["ИтогоПред" + НомерГруппы].Заголовок = ЭлементыФормы["ИтогоПред" + НомерГруппы].Подсказка + " за " + ПредГод + " г.:";
				КонецЦикла;

				НомерГруппы = 40;
				ЭлементыФормы["РамкаГруппыКон" + НомерГруппы].Заголовок = ЭлементыФормы["РамкаГруппыКон" + НомерГруппы].Подсказка + " за " + КонГод + " г.";
				ЭлементыФормы["РамкаГруппыПред" + НомерГруппы].Заголовок = ЭлементыФормы["РамкаГруппыПред" + НомерГруппы].Подсказка + " за " + ПредГод + " г.";

				// За отчетный год
				Для каждого Примечание из Примечания Цикл
					СписокСохранения = Примечание.ДанныеОтчета.Получить();
					ПоказателиОтчета = СписокСохранения.ПоказателиОтчета.ПолеТабличногоДокументаПримечания;
					
                    Кол = СписокСохранения.ДанныеМногострочныхРазделов.Г01.Количество();
					Для Ном = 1 по Кол Цикл
						СумКон1 = СумКон1 + ПоказателиОтчета["Г01Величина_" + Ном];
						СумКон2 = СумКон2 + ПоказателиОтчета["Г05СумКон110_" + Ном];
						СумКон3 = СумКон3 + ПоказателиОтчета["Г06СумКон110_" + Ном];
						СумКон4 = СумКон4 + ПоказателиОтчета["Г03СумКон102_" + Ном];
						
						ЗаполнитьТаблицу(ТЗКон5, "Г16ДолгосрочныеЗаймы_" + Ном, "Г16СумКон117_" + Ном, "Г17ДолгосрочныеЗаймы_" + Ном, "Г17СумКон118_" + Ном, ПоказателиОтчета, Примечание);
						ЗаполнитьТаблицу(ТЗКон6, "Г14КраткосрочныеЗаймы_" + Ном, "Г14СумКон115_" + Ном, "Г15КраткосрочныеЗаймы_" + Ном, "Г15СумКон116_" + Ном, ПоказателиОтчета, Примечание);
						ЗаполнитьТаблицу(ТЗКон7, "Г11ДоходыБП_" + Ном, "Г11СумКон113_" + Ном, "Г09Авансы_" + Ном, "Г09СумКон112_" + Ном, ПоказателиОтчета, Примечание);
						ЗаполнитьТаблицу(ТЗКон8, "Г12ДоходыБП_" + Ном, "Г12СумКон113_" + Ном, "Г10Авансы_" + Ном, "Г10СумКон112_" + Ном, ПоказателиОтчета, Примечание);
						
						//ЗаполнитьТаблицу(ТЗКон40, "Г05ДебиторскаяЗадолженность_" + Ном, "Г05СумКон110_" + Ном, "Г07КредиторскаяЗадолженность_" + Ном, "Г07СумКон111_" + Ном, ПоказателиОтчета, Примечание, Ложь);
						//ЗаполнитьТаблицу(ТЗКон40, "Г06ДебиторскаяЗадолженность_" + Ном, "Г06СумКон110_" + Ном, "Г08КредиторскаяЗадолженность_" + Ном, "Г08СумКон111_" + Ном, ПоказателиОтчета, Примечание, Ложь);
						СумКон40 = СумКон40 + ПоказателиОтчета["Г06СумКон110_" + Ном];
						СумКон41 = СумКон41 + ПоказателиОтчета["Г08СумКон111_" + Ном];
						СумКон42 = СумКон42 + ПоказателиОтчета["Г05СумКон110_" + Ном];
						СумКон43 = СумКон43 + ПоказателиОтчета["Г07СумКон111_" + Ном];
					КонецЦикла;

					Для Ном = 4 по 9 Цикл // и еще немножко приплюсуем
						СумКон4 = СумКон4 + ПоказателиОтчета["СумКон10" + Ном];
					КонецЦикла;

				КонецЦикла;
				
				СумКон5 = СумКон5 + НайтиСуммуТаблицы(ТЗКон5);
				СумКон6 = СумКон6 + НайтиСуммуТаблицы(ТЗКон6);
				СумКон7 = СумКон7 + НайтиСуммуТаблицы(ТЗКон7);
				СумКон8 = СумКон8 + НайтиСуммуТаблицы(ТЗКон8);
				//СумКон40 = СумКон40 + НайтиСуммуТаблицы(ТЗКон40, Ложь);

				// За предыдущий год
				Для каждого Примечание из Примечания Цикл
					СписокСохранения = Примечание.ДанныеОтчета.Получить();
					ПоказателиОтчета = СписокСохранения.ПоказателиОтчета.ПолеТабличногоДокументаПримечания;
					
                    Кол = СписокСохранения.ДанныеМногострочныхРазделов.Г01.Количество();
					Для Ном = 1 по Кол Цикл
						СумПред1 = СумПред1 + ПоказателиОтчета["Г01Величина_" + Ном];
						СумПред2 = СумПред2 + ПоказателиОтчета["Г05СумПред110_" + Ном];
						СумПред3 = СумПред3 + ПоказателиОтчета["Г06СумПред110_" + Ном];
						СумПред4 = СумПред4 + ПоказателиОтчета["Г03СумПред102_" + Ном];

						ЗаполнитьТаблицу(ТЗПред5, "Г16ДолгосрочныеЗаймы_" + Ном, "Г16СумПред117_" + Ном, "Г17ДолгосрочныеЗаймы_" + Ном, "Г17СумПред118_" + Ном, ПоказателиОтчета, Примечание);
						ЗаполнитьТаблицу(ТЗПред6, "Г14КраткосрочныеЗаймы_" + Ном, "Г14СумПред115_" + Ном, "Г15КраткосрочныеЗаймы_" + Ном, "Г15СумПред116_" + Ном, ПоказателиОтчета, Примечание);
						ЗаполнитьТаблицу(ТЗПред7, "Г11ДоходыБП_" + Ном, "Г11СумПред113_" + Ном, "Г09Авансы_" + Ном, "Г09СумПред112_" + Ном, ПоказателиОтчета, Примечание);
						ЗаполнитьТаблицу(ТЗПред8, "Г12ДоходыБП_" + Ном, "Г12СумПред113_" + Ном, "Г10Авансы_" + Ном, "Г10СумПред112_" + Ном, ПоказателиОтчета, Примечание);
						
						//ЗаполнитьТаблицу(ТЗПред40, "Г05ДебиторскаяЗадолженность_" + Ном, "Г05СумПред110_" + Ном, "Г07КредиторскаяЗадолженность_" + Ном, "Г07СумПред111_" + Ном, ПоказателиОтчета, Примечание, Ложь);
						//ЗаполнитьТаблицу(ТЗПред40, "Г06ДебиторскаяЗадолженность_" + Ном, "Г06СумПред110_" + Ном, "Г08КредиторскаяЗадолженность_" + Ном, "Г08СумПред111_" + Ном, ПоказателиОтчета, Примечание, Ложь);
						СумПред40 = СумПред40 + ПоказателиОтчета["Г06СумПред110_" + Ном];
						СумПред41 = СумПред41 + ПоказателиОтчета["Г08СумПред111_" + Ном];
						СумПред42 = СумПред42 + ПоказателиОтчета["Г05СумПред110_" + Ном];
						СумПред43 = СумПред43 + ПоказателиОтчета["Г07СумПред111_" + Ном];
					КонецЦикла;

					Для Ном = 4 по 9 Цикл // и еще немножко приплюсуем
						СумПред4 = СумПред4 + ПоказателиОтчета["СумПред10" + Ном];
					КонецЦикла;

				КонецЦикла;
				
				СумПред5 = СумПред5 + НайтиСуммуТаблицы(ТЗПред5);
				СумПред6 = СумПред6 + НайтиСуммуТаблицы(ТЗПред6);
				СумПред7 = СумПред7 + НайтиСуммуТаблицы(ТЗПред7);
				СумПред8 = СумПред8 + НайтиСуммуТаблицы(ТЗПред8);
				//СумПред40 = СумПред40 + НайтиСуммуТаблицы(ТЗПред40, Ложь);
			КонецЕсли;

			// Рассчитываем суммы вычетов для ПрибылиИУбытки
			Если Колонка.Имя = "ПрибылиИУбытки" Тогда
				СумКон11 = 0;
				СумКон12 = 0;
				СумКон13 = 0;
				СумКон14 = 0;
				СумКон15 = 0;
				СумКон16 = 0;
				СумКон17 = 0;
				СумКон18 = 0;

                СумПред11 = 0;
                СумПред12 = 0;
                СумПред13 = 0;
                СумПред14 = 0;
                СумПред15 = 0;
                СумПред16 = 0;
                СумПред17 = 0;
                СумПред18 = 0;

				Для НомерГруппы = 11 по 12 Цикл
                    КонГод = Формат(Год(Период), "ЧГ=0");
					ПредГод = Формат(Год(ДобавитьМесяц(Период,-12)), "ЧГ=0");

                    ЭлементыФормы["РамкаГруппыКон" + НомерГруппы].Заголовок = ЭлементыФормы["РамкаГруппыКон" + НомерГруппы].Подсказка + " за " + КонГод + " г.";
					ЭлементыФормы["РамкаГруппыПред" + НомерГруппы].Заголовок = ЭлементыФормы["РамкаГруппыПред" + НомерГруппы].Подсказка + " за " + ПредГод + " г.";

					ЭлементыФормы["ИтогоКон" + НомерГруппы].Заголовок = ЭлементыФормы["ИтогоКон" + НомерГруппы].Подсказка + " за " + КонГод + " г.:";
					ЭлементыФормы["ИтогоПред" + НомерГруппы].Заголовок = ЭлементыФормы["ИтогоПред" + НомерГруппы].Подсказка + " за " + ПредГод + " г.:";
				КонецЦикла;

                // За отчетный год
				Для каждого Примечание из Примечания Цикл
					СписокСохранения = Примечание.ДанныеОтчета.Получить();
					ПоказателиОтчета = СписокСохранения.ПоказателиОтчета.ПолеТабличногоДокументаПримечания;
					
					СумКон13 = СумКон13 + ПоказателиОтчета["СумКон104"];
					СумКон14 = СумКон14 + ПоказателиОтчета["СумКон105"];
					СумКон15 = СумКон15 + ПоказателиОтчета["СумКон106"];
					СумКон16 = СумКон16 + ПоказателиОтчета["СумКон107"];
					СумКон17 = СумКон17 + ПоказателиОтчета["СумКон108"];
					СумКон18 = СумКон18 + ПоказателиОтчета["СумКон109"];

                    Кол = СписокСохранения.ДанныеМногострочныхРазделов.Г02.Количество();
					Для Ном = 1 по Кол Цикл
						ЗаполнитьТаблицу(ТЗКон11, "Г02Реализация_" + Ном, "Г02СумКон101_" + Ном, "", "", ПоказателиОтчета, Примечание, Ложь);
						ЗаполнитьТаблицу(ТЗКон12, "Г03ВаловаяПрибыль_" + Ном, "Г03СумКон102_" + Ном, "", "", ПоказателиОтчета, Примечание, Ложь);
					КонецЦикла;

				КонецЦикла;

				СумКон11 = СумКон11 + НайтиСуммуТаблицы(ТЗКон11, Ложь);
				СумКон12 = СумКон12 + НайтиСуммуТаблицы(ТЗКон12, Ложь);

				// За предыдущий год
				Для каждого Примечание из Примечания Цикл
					СписокСохранения = Примечание.ДанныеОтчета.Получить();
					ПоказателиОтчета = СписокСохранения.ПоказателиОтчета.ПолеТабличногоДокументаПримечания;
					
					СумПред13 = СумПред13 + ПоказателиОтчета["СумПред104"];
					СумПред14 = СумПред14 + ПоказателиОтчета["СумПред105"];
					СумПред15 = СумПред15 + ПоказателиОтчета["СумПред106"];
					СумПред16 = СумПред16 + ПоказателиОтчета["СумПред107"];
					СумПред17 = СумПред17 + ПоказателиОтчета["СумПред108"];
					СумПред18 = СумПред18 + ПоказателиОтчета["СумПред109"];

                    Кол = СписокСохранения.ДанныеМногострочныхРазделов.Г02.Количество();
					Для Ном = 1 по Кол Цикл
						ЗаполнитьТаблицу(ТЗПред11, "Г02Реализация_" + Ном, "Г02СумПред101_" + Ном, "", "", ПоказателиОтчета, Примечание, Ложь);
						ЗаполнитьТаблицу(ТЗПред12, "Г03ВаловаяПрибыль_" + Ном, "Г03СумПред102_" + Ном, "", "", ПоказателиОтчета, Примечание, Ложь);
					КонецЦикла;

				КонецЦикла;

				СумПред11 = СумПред11 + НайтиСуммуТаблицы(ТЗПред11, Ложь);
				СумПред12 = СумПред12 + НайтиСуммуТаблицы(ТЗПред12, Ложь);
				
			КонецЕсли;

			// Рассчитываем суммы вычетов для ДвижениеКапитала
			Если Колонка.Имя = "ДвижениеКапитала" Тогда
				СумКон21 = 0;
				СумКон22 = 0;
				СумКон23 = 0;
				СумКон24 = 0;
				СумКон25 = 0;
				СумКон26 = 0;

                СумПред21 = 0;
                СумПред22 = 0;
                СумПред23 = 0;
                СумПред24 = 0;
                СумПред25 = 0;
                СумПред26 = 0;
                СумПред27 = 0;
                СумПред28 = 0;

				Для НомерГруппы = 21 по 21 Цикл // в будущем возможно будет больше...
                    КонГод = Формат(Год(Период), "ЧГ=0");
					ПредГод = Формат(Год(ДобавитьМесяц(Период,-12)), "ЧГ=0");

                    ЭлементыФормы["РамкаГруппыКон" + НомерГруппы].Заголовок = ЭлементыФормы["РамкаГруппыКон" + НомерГруппы].Подсказка + " за " + КонГод + " г.";
					ЭлементыФормы["РамкаГруппыПред" + НомерГруппы].Заголовок = ЭлементыФормы["РамкаГруппыПред" + НомерГруппы].Подсказка + " за " + ПредГод + " г.";

					ЭлементыФормы["ИтогоКон" + НомерГруппы].Заголовок = ЭлементыФормы["ИтогоКон" + НомерГруппы].Подсказка + " за " + КонГод + " г.:";
					ЭлементыФормы["ИтогоПред" + НомерГруппы].Заголовок = ЭлементыФормы["ИтогоПред" + НомерГруппы].Подсказка + " за " + ПредГод + " г.:";
				КонецЦикла;

                // За отчетный год
				Для каждого Примечание из Примечания Цикл
					СписокСохранения = Примечание.ДанныеОтчета.Получить();
					ПоказателиОтчета = СписокСохранения.ПоказателиОтчета.ПолеТабличногоДокументаПримечания;
					
					//СумКон22 рассчитаем позже, при записи готовых отчетов

                    Кол = СписокСохранения.ДанныеМногострочныхРазделов.Г13.Количество();
					Для Ном = 1 по Кол Цикл
						ЗаполнитьТаблицу(ТЗКон21, "Г13Дивиденды_" + Ном, "Г13СумКон114_" + Ном, "", "", ПоказателиОтчета, Примечание, Ложь);

						СумКон23 = СумКон23 + НайтиСумму(ПоказателиОтчета, "Г18РазмещениеОбыкновенных_"+Ном, "Г18СумКон119_"+Ном, ТЗКон11); //Из примечания "Обыкновенный акции" находим компании с которыми консолидируем.
						СумКон24 = СумКон24 + НайтиСумму(ПоказателиОтчета, "Г19РазмещениеПривилег_"+Ном, "Г19СумКон120_"+Ном, ТЗКон11); //Из примечания "Привилег. акции" находим компании с которыми консолидируем.
						СумКон25 = СумКон25 + НайтиСумму(ПоказателиОтчета, "Г20ВыкупСобственных_"+Ном, "Г20СумКон121_"+Ном, ТЗКон11); //Из примечания "Выкуп собственных акицй" находим компании с которыми консолидируем.
						СумКон26 = СумКон26 + НайтиСумму(ПоказателиОтчета, "Г21СумКон122_"+Ном, "Г21СумКон122_"+Ном, ТЗКон11); //Из примечания "Продажа собственных акции" находим компании с которыми консолидируем.
					КонецЦикла;

				КонецЦикла;
                СумКон21 = СумКон21 + НайтиСуммуТаблицы(ТЗКон21, Ложь);
				
				// За предыдущий год
				Для каждого Примечание из Примечания Цикл
					СписокСохранения = Примечание.ДанныеОтчета.Получить();
					ПоказателиОтчета = СписокСохранения.ПоказателиОтчета.ПолеТабличногоДокументаПримечания;
					
					//СумПред22 рассчитаем позже, при записи готовых отчетов

                    Кол = СписокСохранения.ДанныеМногострочныхРазделов.Г13.Количество();
					Для Ном = 1 по Кол Цикл
						ЗаполнитьТаблицу(ТЗПред21, "Г13Дивиденды_" + Ном, "Г13СумПред114_" + Ном, "", "", ПоказателиОтчета, Примечание, Ложь);

						СумПред23 = СумПред23 + НайтиСумму(ПоказателиОтчета, "Г18РазмещениеОбыкновенных_"+Ном, "Г18СумПред119_"+Ном, ТЗПред11); //Из примечания "Обыкновенный акции" находим компании с которыми консолидируем.
						СумПред24 = СумПред24 + НайтиСумму(ПоказателиОтчета, "Г19РазмещениеПривилег_"+Ном, "Г19СумПред120_"+Ном, ТЗПред11); //Из примечания "Привилег. акции" находим компании с которыми консолидируем.
						СумПред25 = СумПред25 + НайтиСумму(ПоказателиОтчета, "Г20ВыкупСобственных_"+Ном, "Г20СумПред121_"+Ном, ТЗПред11); //Из примечания "Выкуп собственных акицй" находим компании с которыми консолидируем.
						СумПред26 = СумПред26 + НайтиСумму(ПоказателиОтчета, "Г21СумПред122_"+Ном, "Г21СумПред122_"+Ном, ТЗПред11); //Из примечания "Продажа собственных акции" находим компании с которыми консолидируем.
					КонецЦикла;

				КонецЦикла;
                СумПред21 = СумПред21 + НайтиСуммуТаблицы(ТЗПред21, Ложь);

			КонецЕсли;

            СтруктураКонсолидированнойОтчетности.Вставить(Отчет, Структура);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция НайтиСумму(ПоказателиОтчета, Имя1, Имя2, ТЗПоиска)
	СтрокаТЗ = ТЗПоиска.Найти(ПоказателиОтчета[Имя1], "Организация");
	Если СтрокаТЗ <> Неопределено Тогда
		Возврат ПоказателиОтчета[Имя2];
	Иначе
		Возврат 0;
	КонецЕсли;
КонецФункции

Процедура ТабличноеПолеРезультатВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	Документ = ВыбраннаяСтрока.Ссылка;
	
	Если ЗначениеЗаполнено(Документ) Тогда
		ОткрытьЗначение(Документ);
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьВидимостьКнопок()
    Всего = ЭлементыФормы.ПанельОсновная.Страницы.Количество();
	Текущая = Число(Сред(ЭлементыФормы.ПанельОсновная.ТекущаяСтраница.Имя, 9));

	Если Текущая < Всего Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Далее.Доступность = Истина;
	Иначе
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Далее.Доступность = Ложь;
	КонецЕсли;

	Если Текущая > 1 Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Назад.Доступность = Истина;
	Иначе
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Назад.Доступность = Ложь;
	КонецЕсли;

	Если Текущая >= (Всего-1) Тогда
        ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Далее.Текст = "Выполнить";
	Иначе
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Далее.Текст = "Далее >>";
	КонецЕсли;
КонецПроцедуры

Процедура ОсновныеДействияФормыДалее(Кнопка)
    Всего = ЭлементыФормы.ПанельОсновная.Страницы.Количество();
	Текущая = Число(Сред(ЭлементыФормы.ПанельОсновная.ТекущаяСтраница.Имя, 9));

	Если Текущая = 1 Тогда
	    КоличествоВыбранных = 0;
		Для каждого Строка из ТабличноеПоле Цикл
			Если Строка.Включать Тогда
	        	КоличествоВыбранных = КоличествоВыбранных + 1;
			КонецЕсли;
		КонецЦикла;

        Если КоличествоВыбранных < 2 Тогда
			Предупреждение("Для консолидации необходимо выбрать не менее двух комплектов отчетности!",, "Предупреждение");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если Текущая < Всего Тогда
		ЭлементыФормы.ПанельОсновная.ТекущаяСтраница = ЭлементыФормы.ПанельОсновная.Страницы["Страница" + (Текущая+1)];
	КонецЕсли;

	УстановитьВидимостьКнопок();
	
	Если Текущая = 1 Тогда
		СформироватьВременныеСуммы();

	ИначеЕсли Текущая = (Всего-1) Тогда
        КонсолидироватьОтчетность();
	КонецЕсли;
КонецПроцедуры

Процедура ОсновныеДействияФормыНазад(Кнопка)
	Текущая = Число(Сред(ЭлементыФормы.ПанельОсновная.ТекущаяСтраница.Имя, 9));

	Если Текущая > 1 Тогда
		ЭлементыФормы.ПанельОсновная.ТекущаяСтраница = ЭлементыФормы.ПанельОсновная.Страницы["Страница" + (Текущая-1)];
	КонецЕсли;

	УстановитьВидимостьКнопок();
КонецПроцедуры

Процедура ПанельОсновнаяПриСменеСтраницы(Элемент, ТекущаяСтраница)
	УстановитьВидимостьКнопок();
КонецПроцедуры

Процедура КонсолидироватьОтчетность()
	Состояние("Консолидация отчетности...");

	// Вычитаем все, что необходимо.

	Для каждого Отчет из СтруктураКонсолидированнойОтчетности Цикл
		ИсточникОтчета = Отчет.Ключ.ИсточникОтчета;

		Если ИсточникОтчета = "МСФОБаланс" Тогда
			ПоказателиОтчета = Отчет.Значение.ПолеТабличногоДокументаБаланс;
			
			ПоказателиОтчета.СумКон105 = ПоказателиОтчета.СумКон105 - СумКон1 - СумКон4;
			ПоказателиОтчета.СумПред105 = ПоказателиОтчета.СумПред105 - СумПред1 - СумПред4;
			ПоказателиОтчета.СумКон108 = ПоказателиОтчета.СумКон108 - СумКон5;
			ПоказателиОтчета.СумПред108 = ПоказателиОтчета.СумПред108 - СумПред5;
			ПоказателиОтчета.СумКон109 = ПоказателиОтчета.СумКон109 - СумКон2 - СумКон7 - СумКон42;
			ПоказателиОтчета.СумПред109 = ПоказателиОтчета.СумПред109 - СумПред2 - СумПред7 - СумПред42;
			ПоказателиОтчета.СумКон204 = ПоказателиОтчета.СумКон204 - СумКон6;
			ПоказателиОтчета.СумПред204 = ПоказателиОтчета.СумПред204 - СумПред6;
			ПоказателиОтчета.СумКон205 = ПоказателиОтчета.СумКон205 - СумКон3 - СумКон8 - СумКон40;
			ПоказателиОтчета.СумПред205 = ПоказателиОтчета.СумПред205 - СумПред3 - СумПред8 - СумПред40;
			ПоказателиОтчета.СумКон301 = ПоказателиОтчета.СумКон301 - СумКон1;
			ПоказателиОтчета.СумПред301 = ПоказателиОтчета.СумПред301 - СумПред1;
			ПоказателиОтчета.СумКон305 = ПоказателиОтчета.СумКон305 - СумКон4;
			ПоказателиОтчета.СумПред305 = ПоказателиОтчета.СумПред305 - СумПред4;
			ПоказателиОтчета.СумКон401 = ПоказателиОтчета.СумКон401 - СумКон5;
			ПоказателиОтчета.СумПред401 = ПоказателиОтчета.СумПред401 - СумПред5;
			ПоказателиОтчета.СумКон402 = ПоказателиОтчета.СумКон402 - СумКон7;
			ПоказателиОтчета.СумПред402 = ПоказателиОтчета.СумПред402 - СумПред7;
			ПоказателиОтчета.СумКон406 = ПоказателиОтчета.СумКон406 - СумКон2 - СумКон43;
			ПоказателиОтчета.СумПред406 = ПоказателиОтчета.СумПред406 - СумПред2 - СумПред43;
			ПоказателиОтчета.СумКон501 = ПоказателиОтчета.СумКон501 - СумКон6;
			ПоказателиОтчета.СумПред501 = ПоказателиОтчета.СумПред501 - СумПред6;
			ПоказателиОтчета.СумКон502 = ПоказателиОтчета.СумКон502 - СумКон8;
			ПоказателиОтчета.СумПред502 = ПоказателиОтчета.СумПред502 - СумПред8;
			ПоказателиОтчета.СумКон506 = ПоказателиОтчета.СумКон506 - СумКон3 - СумКон41;
			ПоказателиОтчета.СумПред506 = ПоказателиОтчета.СумПред506 - СумПред3 - СумПред41;
			
			ПоказателиОтчета.СумКон203 = ПоказателиОтчета.СумКон203 - СумКонЗапасы;
			ПоказателиОтчета.СумПред203 = ПоказателиОтчета.СумПред203 - СумПредЗапасы;
			ПоказателиОтчета.СумКон101 = ПоказателиОтчета.СумКон101 - СумКонОС;
			ПоказателиОтчета.СумПред101 = ПоказателиОтчета.СумПред101 - СумПредОС;
			ПоказателиОтчета.СумКон103 = ПоказателиОтчета.СумКон103 - СумКонНМА;
			ПоказателиОтчета.СумПред103 = ПоказателиОтчета.СумПред103 - СумПредНМА;
			ПоказателиОтчета.СумКон305 = ПоказателиОтчета.СумКон305 - СумКонЗапасы-СумКонОС-СумКонНМА;
			ПоказателиОтчета.СумПред305 = ПоказателиОтчета.СумПред305 - СумПредЗапасы-СумПредОС-СумПредНМА;
			
			ПоказателиОтчета.СумКон601 = ПоказателиОтчета.СумКон601 + ДоляМеньшинстваВБалансеКон;
			ПоказателиОтчета.СумПред601 = ПоказателиОтчета.СумПред601 + ДоляМеньшинстваВБалансеПред;
			
			//ПоказателиОтчета.СумКон107 = ПоказателиОтчета.СумКон107 - СумКон31;
			//ПоказателиОтчета.СумПред107 = ПоказателиОтчета.СумПред107 - СумПред31;
			ПоказателиОтчета.СумКон301 = ПоказателиОтчета.СумКон301 - СумКон31;
			ПоказателиОтчета.СумПред301 = ПоказателиОтчета.СумПред301 - СумПред31;

		ИначеЕсли ИсточникОтчета = "МСФОПрибылиИУбытки" Тогда
			ПоказателиОтчета = Отчет.Значение.ПолеТабличногоДокументаПрибыляИУбытки;
			
			ПоказателиОтчета.СумКон601 = ПоказателиОтчета.СумКон601 - СумКон11;
			ПоказателиОтчета.СумПред601 = ПоказателиОтчета.СумПред601 - СумПред11;
			ПоказателиОтчета.СумКон602 = ПоказателиОтчета.СумКон602 - СумКон11 + СумКон12 + СумКонЗапасы+СумКонОС+СумКонНМА;
			ПоказателиОтчета.СумПред602 = ПоказателиОтчета.СумПред602 - СумПред11 + СумПред12 + СумПредЗапасы+СумПредОС+СумПредНМА;
			ПоказателиОтчета.СумКон603 = ПоказателиОтчета.СумКон603 - СумКон13;
			ПоказателиОтчета.СумПред603 = ПоказателиОтчета.СумПред603 - СумПред13;
			ПоказателиОтчета.СумКон608 = ПоказателиОтчета.СумКон608 - СумКон14;
			ПоказателиОтчета.СумПред608 = ПоказателиОтчета.СумПред608 - СумПред14;
			//ПоказателиОтчета.СумКон610 = ПоказателиОтчета.СумКон610 - СумКон15;
			//ПоказателиОтчета.СумПред610 = ПоказателиОтчета.СумПред610 - СумПред15;
			ПоказателиОтчета.СумКон613 = ПоказателиОтчета.СумКон613 - СумКон17;
			ПоказателиОтчета.СумПред613 = ПоказателиОтчета.СумПред613 - СумПред17;
			ПоказателиОтчета.СумКон614 = ПоказателиОтчета.СумКон614 - СумКон18;
			ПоказателиОтчета.СумПред614 = ПоказателиОтчета.СумПред614 - СумПред18;
			
			ПоказателиОтчета.СумКон616 = ПоказателиОтчета.СумКон616 - ДоляМеньшинстваВПрибылиКон;
			ПоказателиОтчета.СумПред616 = ПоказателиОтчета.СумПред616 - ДоляМеньшинстваВПрибылиПред;
			
            // Чистая прибыль (убыток) из консолидированного отчета о приб. и убытках
			СумКон22 = 0;
			СумПред22 = 0;
			Для Ном = 1 по 17 Цикл
				ИмяСумКон = "СумКон6" + Формат(Ном, "ЧЦ=2; ЧВН=");
				ИмяСумПред = "СумПред6" + Формат(Ном, "ЧЦ=2; ЧВН=");

				Попытка
					СумКон22 = СумКон22 + ПоказателиОтчета[ИмяСумКон];
					СумПред22 = СумПред22 + ПоказателиОтчета[ИмяСумПред];
				Исключение
				КонецПопытки; 	
			КонецЦикла;

		ИначеЕсли ИсточникОтчета = "МСФОДвижениеКапитала" Тогда
			ПоказателиОтчета = Отчет.Значение.ПолеТабличногоДокументаДвижениеКапитала;

			ПоказателиОтчета.СумКон870 = ПоказателиОтчета.СумКон870 + СумКон21;
			ПоказателиОтчета.СумПред870 = ПоказателиОтчета.СумПред870 + СумПред21;
			ПоказателиОтчета.СумКон875 = СумКон22;
			ПоказателиОтчета.СумПред875 = СумПред22;
			ПоказателиОтчета.СумКон876 = ПоказателиОтчета.СумКон876 - СумКон23;
			ПоказателиОтчета.СумПред876 = ПоказателиОтчета.СумПред876 - СумПред23;
			ПоказателиОтчета.СумКон886 = ПоказателиОтчета.СумКон886 - СумКон24;
			ПоказателиОтчета.СумПред886 = ПоказателиОтчета.СумПред886 - СумПред24;
			ПоказателиОтчета.СумКон918 = ПоказателиОтчета.СумКон918 + СумКон25;
			ПоказателиОтчета.СумПред918 = ПоказателиОтчета.СумПред918 + СумПред25;
			ПоказателиОтчета.СумКон928 = ПоказателиОтчета.СумКон928 - СумКон26;
			ПоказателиОтчета.СумПред928 = ПоказателиОтчета.СумПред928 - СумПред26;

		КонецЕсли;
		
		Сохранить(Отчет.Ключ, Отчет.Значение);
	КонецЦикла;
КонецПроцедуры