////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем ВыбраннаяОрганизация;
Перем ВыбранныйРасчетныйПериод;
Перем ВыбранныйФорматФайла;
Перем ВыбранныйТипСведений;
Перем ФизЛицо;
Перем СписокВыбора;


Перем СерыйЦвет;

Перем ПоказыватьСуммыВзносов;
Перем СтажДоступенДляРедактирования;
// Хранит соответствие, при помощи которого храним и показываем содержимое пачки
Перем СоответствиеСсылокИОбъектовПачек;

// список информационных сообщений, для вывода
Перем МассивСообщений;

Перем УдерживатьТекущуюСтроку;
Перем УдерживатьТекущийДокумент;
Перем ФлагВыполнятьСохранениеФизЛица;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура УстановитьЗаголовкиОрганизацийВФорме()
	
	ЭлементыФормы.НадписьОрганизация.Заголовок = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация:");
	
КонецПроцедуры // УстановитьЗаголовкиОрганизацийВФорме()

// Процедура проверяет уникальность номера переданного документа
//
Процедура ПроверкаУникальностиНомераДокумента(ДокОбъект)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	АнкетаЗастрахованногоЛица.Ссылка КАК Ссылка,
	               |	АнкетаЗастрахованногоЛица.Представление КАК Представление
	               |ИЗ
	               |	Документ.АнкетаЗастрахованногоЛица КАК АнкетаЗастрахованногоЛица
	               |ГДЕ
	               |	АнкетаЗастрахованногоЛица.Номер = &ДокументНомер
	               |	И АнкетаЗастрахованногоЛица.Ссылка <> &ДокументСсылка
	               |	И ГОД(АнкетаЗастрахованногоЛица.Дата) = &ГодДокумента
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	АнкетаЗастрахованногоЛица.Ссылка,
	               |	АнкетаЗастрахованногоЛица.Представление
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Ссылка,
	               |	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Представление
	               |ИЗ
	               |	Документ.ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства КАК ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства
	               |ГДЕ
	               |	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Ссылка <> &ДокументСсылка
	               |	И ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Номер = &ДокументНомер
	               |	И ГОД(ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Дата) = &ГодДокумента
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Ссылка,
	               |	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Представление
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ПередачаДСВвПФР.Ссылка,
	               |	ПередачаДСВвПФР.Представление
	               |ИЗ
	               |	Документ.ПередачаДСВвПФР КАК ПередачаДСВвПФР
	               |ГДЕ
	               |	ПередачаДСВвПФР.Ссылка <> &ДокументСсылка
	               |	И ПередачаДСВвПФР.Номер = &ДокументНомер
	               |	И ГОД(ПередачаДСВвПФР.Дата) = &ГодДокумента
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПередачаДСВвПФР.Ссылка,
	               |	ПередачаДСВвПФР.Представление
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ПередачаСЗВ4вПФР.Ссылка,
	               |	ПередачаСЗВ4вПФР.Представление
	               |ИЗ
	               |	Документ.ПередачаСЗВ4вПФР КАК ПередачаСЗВ4вПФР
	               |ГДЕ
	               |	ПередачаСЗВ4вПФР.Ссылка <> &ДокументСсылка
	               |	И ПередачаСЗВ4вПФР.Номер = &ДокументНомер
	               |	И ГОД(ПередачаСЗВ4вПФР.Дата) = &ГодДокумента
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПередачаСЗВ4вПФР.Ссылка,
	               |	ПередачаСЗВ4вПФР.Представление
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК.Ссылка,
	               |	СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК.Представление
	               |ИЗ
	               |	Документ.СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК КАК СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК
	               |ГДЕ
	               |	СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК.Ссылка <> &ДокументСсылка
	               |	И СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК.Номер = &ДокументНомер
	               |	И ГОД(СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК.Дата) = &ГодДокумента
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК.Ссылка,
	               |	СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК.Представление
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка,
	               |	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Представление
	               |ИЗ
	               |	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4 КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4
	               |ГДЕ
	               |	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка <> &ДокументСсылка
	               |	И СведенияОТрудовомСтажеИЗаработкеСЗВ4.Номер = &ДокументНомер
	               |	И ГОД(СведенияОТрудовомСтажеИЗаработкеСЗВ4.Дата) = &ГодДокумента
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка,
	               |	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Представление";
	Запрос.УстановитьПараметр("ДокументНомер", ДокОбъект.Номер);
	Запрос.УстановитьПараметр("ГодДокумента", Год(ДокОбъект.Дата));
	Запрос.УстановитьПараметр("ДокументСсылка", ДокОбъект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() > 0 Тогда
		Выборка.Следующий();
		МассивСообщений.Очистить();
		МассивРасшифровки = Новый Массив;
		МассивРасшифровки.Добавить(Новый Структура("Представление, Расшифровка", Выборка.Представление, Выборка.Ссылка));
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру("Номер текущего документа (Номер пачки - " + ДокОбъект.Номер + " ) совпадает с номером документа " , Перечисления.ВидыСообщений.Ошибка, МассивРасшифровки));
		ВывестиСообщенияОбОшибках();
		УдерживатьТекущийДокумент = Истина;
	Иначе
		УдерживатьТекущийДокумент = Ложь;
	КонецЕсли;
	

	
КонецПроцедуры // ПроверкаУникальностиНомераДокумента()


// Создает структуру, с параметрами выводимого сообщения 
// для помещения в массив сообщений-структур
Функция СоздатьСообщениеСтруктуру(ТекстСообщения, ВидСообщения, РасшифровкаСообщения = Неопределено)
	СтруктураСообщения = Новый Структура;
	СтруктураСообщения.Вставить("ТекстСообщения", ТекстСообщения);
	СтруктураСообщения.Вставить("ВидСообщения", ВидСообщения);
	СтруктураСообщения.Вставить("РасшифровкаСообщения", РасшифровкаСообщения);
	Возврат СтруктураСообщения
КонецФункции // СоздатьСообщениеСтруктуру()


// заполняет данные по физлицу
//
Функция НовыйАдресДляИнформированияФизЛица(ФизЛицо)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ФизЛицо",		ФизЛицо);
	Запрос.УстановитьПараметр("ДатаАктуальности",			ДокументОбъектДляПоказаФизЛиц.Дата);
	Запрос.УстановитьПараметр("ВидАдресаДляИнформирования",	Справочники.ВидыКонтактнойИнформации.ИнформАдресФизЛица);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	"","" + КонтактнаяИнформация.Поле1 + "","" + КонтактнаяИнформация.Поле2 + "","" + КонтактнаяИнформация.Поле3 + "","" + КонтактнаяИнформация.Поле4 + "","" + КонтактнаяИнформация.Поле5 + "","" + КонтактнаяИнформация.Поле6 + "","" + КонтактнаяИнформация.Поле7 + "","" + КонтактнаяИнформация.Поле8 + "","" + КонтактнаяИнформация.Поле9 + "","" + ВЫБОР
	               |		КОГДА КонтактнаяИнформация.ТипДома В (ЗНАЧЕНИЕ(Перечисление.ТипыДомов.Дом), ЗНАЧЕНИЕ(Перечисление.ТипыДомов.ПустаяСсылка))
	               |			ТОГДА ""дом""
	               |		ИНАЧЕ ""владение""
	               |	КОНЕЦ + "","" + ВЫБОР
	               |		КОГДА КонтактнаяИнформация.ТипКорпуса В (ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.Корпус), ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.ПустаяСсылка))
	               |			ТОГДА ""корпус""
	               |		ИНАЧЕ ""строение""
	               |	КОНЕЦ + "","" + ВЫБОР
	               |		КОГДА КонтактнаяИнформация.ТипКвартиры В (ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.Квартира), ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.ПустаяСсылка))
	               |			ТОГДА ""кв.""
	               |		ИНАЧЕ ""оф.""
	               |	КОНЕЦ КАК АдресИзРегистра
	               |ИЗ
	               |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	               |ГДЕ
	               |	КонтактнаяИнформация.Вид = &ВидАдресаДляИнформирования
	               |	И КонтактнаяИнформация.Объект = &Физлицо";
	
	РезультатЗапроса	= Запрос.Выполнить();
	ВыборкаПоРаботнику	= РезультатЗапроса.Выбрать();
	
	АдресИзРегистра = "";
	Если ВыборкаПоРаботнику.Следующий() Тогда
		АдресИзРегистра	= ВыборкаПоРаботнику.АдресИзРегистра;
	КонецЕсли;
	
	ЗапросДок = Новый Запрос;
	ЗапросДок.УстановитьПараметр("ФизЛицо",		ФизЛицо);
	ЗапросДок.УстановитьПараметр("Организация",	ДокументОбъектДляПоказаФизЛиц.Организация);
	ЗапросДок.УстановитьПараметр("Год",			ДокументОбъектДляПоказаФизЛиц.Год);
	
	ЗапросДок.Текст = 
	"ВЫБРАТЬ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.АдресДляИнформирования
	|ИЗ
	|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4.РаботникиОрганизации КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации
	|ГДЕ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ФизЛицо = &ФизЛицо
	|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка.Проведен
	|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка.Организация = &Организация
	|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка.Год <= &Год";
	
	РезультатЗапросаДок	= ЗапросДок.Выполнить();
	ВыборкаПоДок		= РезультатЗапросаДок.Выбрать();
	
	Если РезультатЗапросаДок.Пустой() Тогда
		АдресДляИнформирования = АдресИзРегистра;
	Иначе
		ЕстьАдресИзДок = Ложь;
		Пока ВыборкаПоДок.Следующий() Цикл
			Если ВыборкаПоДок.АдресДляИнформирования = АдресИзРегистра Тогда
				АдресДляИнформирования	= "";
				ЕстьАдресИзДок = ЗначениеЗаполнено(ВыборкаПоДок.АдресДляИнформирования);
			Иначе
				АдресДляИнформирования	= ?(ЕстьАдресИзДок,"",АдресИзРегистра);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат АдресДляИнформирования;
	
КонецФункции


// Процедура обнуляет все сведения о стаже сотрудников, указанного документа,
// оставляя только первую запись с периодом работы
//
Процедура ОбнулитьСведенияСЗВ41(ДокументСЗВ4)
	ЗаписиОСтаже.Записать();
	ЗаписиСЗВ4 = РегистрыСведений.ЗаписиОСтажеДляСЗВ4.СоздатьНаборЗаписей();
	ОбнуляемыйГод = ДокументСЗВ4.Год;
	ОбнуляемаяОрганизация = ДокументСЗВ4.Организация;
	Для Каждого СтрокаДокумента ИЗ ДокументСЗВ4.РаботникиОрганизации Цикл
		ОбнуляемоеФизЛицо = СтрокаДокумента.ФизЛицо;
		ЗаписиСЗВ4.Отбор.ОбособленноеПодразделение.Установить(ОбнуляемаяОрганизация);
		ЗаписиСЗВ4.Отбор.Год.Установить(ОбнуляемыйГод);
		ЗаписиСЗВ4.Отбор.ФизЛицо.Установить(ОбнуляемоеФизЛицо);
		ЗаписиСЗВ4.Прочитать();
		Если ЗаписиСЗВ4.Количество() > 0 Тогда
			НачалоПериода = ЗаписиСЗВ4[0].ДатаНачалаПериода;
			КонецПериода = ЗаписиСЗВ4[0].ДатаОкончанияПериода;
			
		КонецЕсли;
		ЗаписиСЗВ4.Очистить();
		ПерваяЗапись = ЗаписиСЗВ4.Добавить();
		ПерваяЗапись.ОтчетныйПериод = Дата(ОбнуляемыйГод, 1, 1);
		ПерваяЗапись.ДатаНачалаПериода = НачалоПериода;
		ПерваяЗапись.ДатаОкончанияПериода = КонецПериода;
		ПерваяЗапись.ФизЛицо = ОбнуляемоеФизЛицо;
		ПерваяЗапись.ОбособленноеПодразделение = ОбнуляемаяОрганизация;
		ПерваяЗапись.НомерОсновнойЗаписи = 1;
		ЗаписиСЗВ4.Записать();
	КонецЦикла;
	ЗаписиОСтаже.Прочитать();
	
КонецПроцедуры // ОбнулитьСведенияСЗВ41()


// Процедура обновляет значения, видимость и доступность элементов формы, зависящих от выбранной пачки документов СЗВ-4 или АДВ-11
//
Процедура ОбновитьЭлементыФормыПриИзменененииПачки(Элемент)
	ТаблицаСсылокСЗВ4.Очистить();
	
	ВыполнитьСохранениеДанныхФизлица();
	
	Если УдерживатьТекущуюСтроку Тогда
		Возврат;
	КонецЕсли;
	Если (ДокументОбъектДляПоказаФизлиц <> Неопределено) И (НЕ ДокументОбъектДляПоказаФизлиц.Ссылка.Пустая()) И (ДокументОбъектДляПоказаФизлиц.Модифицированность()) тогда
		ДокументОбъектДляПоказаФизлиц.Проведен = Ложь;
		ДокументОбъектДляПоказаФизлиц.Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	Если (ДокументОбъектАДВ11 <> Неопределено) И (НЕ ДокументОбъектАДВ11.Ссылка.Пустая()) И (ДокументОбъектАДВ11.Модифицированность()) тогда
		ДокументОбъектАДВ11.Записать(?(ДокументОбъектАДВ11.Проведен,РежимЗаписиДокумента.Проведение,РежимЗаписиДокумента.Запись));
	КонецЕсли;
	ОбновитьНадписьСостоянияПодготовкиДокументов();	
	Если Элемент.ТекущаяСтрока <> Неопределено Тогда
		
		ЭлементыФормы.ПереключательТипФормДокументов.Доступность = Истина;
		ЭлементыФормы.СЗВ_4_2.Доступность = Истина;
		ЭлементыФормы.ТерриториальныеУсловия.Доступность = Истина;
		ЭлементыФормы.Исполнитель.Доступность = Истина;
		ЭлементыФормы.НомерПачки1.Доступность = Истина;
		ЭлементыФормы.ДатаСоставления1.Доступность = Истина;
		ЭлементыФормы.ДатаСоставления.Доступность = Истина;
		ЭлементыФормы.ДатаДействия.Доступность = Истина;
		ЭлементыФормы.НомерПачки.Доступность = Истина;
		ЭлементыФормы.ПереключательВидКорректировки.Доступность = Истина;
		ЭлементыФормы.Переключатель4.Доступность = Истина;
		ЭлементыФормы.Переключатель5.Доступность = Истина;
		ЭлементыФормы.ФизлицаПачек.ТолькоПросмотр = Истина;
		ЭлементыФормы.КоманднаяПанельФизлицаПачек.Кнопки.Перенести.Доступность = Истина;
		ЭлементыФормы.АдресДляИнформирования.Доступность = Истина;
		ЭлементыФормы.СведенияОЗадолженности.ТолькоПросмотр = Ложь;
		ЭлементыФормы.КоманднаяПанельРасчеты.Кнопки.ЗадолженностьПередПФР.Доступность = Истина;
		
		
		Если ТипЗнч(Элемент.ТекущаяСтрока.Пачка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
			ЭлементыФормы.НадписьНазваниеПачки.Заголовок = " Документы, пачки документов    (" + Элемент.ТекущаяСтрока.ДокументОбъект.ТипФормДокументов + " №" + Элемент.ТекущаяСтрока.ДокументОбъект.Номер + ")";
			ДокументОбъектДляПоказаФизлиц = Элемент.ТекущаяСтрока.ДокументОбъект;
			ЭлементыФормы.ПанельДокумент.ТекущаяСтраница = ЭлементыФормы.ПанельДокумент.Страницы.СЗВ4;
			ЭлементыФормы.ДанныеСЗВ4.ТекущаяСтраница = ЭлементыФормы.ДанныеСЗВ4.Страницы.СЗВ4;
			Если (Элемент.ТекущаяСтрока.Родитель = Неопределено)
				ИЛИ
				(Элемент.ТекущаяСтрока.Родитель <> Неопределено 
				И НЕ Элемент.ТекущаяСтрока.Родитель.ДокументОбъект.ПринятоВПФР) Тогда
				ЭлементыФормы.КоманднаяПанельПачки.Кнопки.ПеренестиСЗВ4.Доступность = ПоказыватьСуммыВзносов;
			Иначе
				ЭлементыФормы.КоманднаяПанельПачки.Кнопки.ПеренестиСЗВ4.Доступность = Ложь;
			КонецЕсли;
			ЭлементыФормы.ПанельВзносыПоСотруднику.ТекущаяСтраница = ?(ПоказыватьСуммыВзносов, 
			ЭлементыФормы.ПанельВзносыПоСотруднику.Страницы.ВзносыПоСотруднику,
			ЭлементыФормы.ПанельВзносыПоСотруднику.Страницы.ПустаяСтраница);
			
			ЭлементыФормы.ПанельВзносыПоСотруднику1.ТекущаяСтраница = ?(ПоказыватьСуммыВзносов, 
			ЭлементыФормы.ПанельВзносыПоСотруднику1.Страницы.ВзносыПоСотруднику,
			ЭлементыФормы.ПанельВзносыПоСотруднику1.Страницы.ПустаяСтраница);
			
			
			Если ДокументОбъектДляПоказаФизлиц.ТипФормДокументов = "СЗВ-4-1" Тогда
				
				ЭлементыФормы.ПанельСтажФизлица.ТекущаяСтраница = ЭлементыФормы.ПанельСтажФизлица.Страницы.СтраницаСЗВ41;
				ЭлементыФормы.ТерриториальныеУсловия.Доступность = Ложь;
				// Тексты кнопок
				ЭлементыФормы.Проверить.Кнопки.ПроверитьВыбраныйДокумент.Текст = "По документу СЗВ-4-1 №" + ДокументОбъектДляПоказаФизлиц.Номер;
				ЭлементыФормы.Печать.Кнопки.ПечатьВыбраныйДокумент.Текст = "По документу СЗВ-4-1 №" + ДокументОбъектДляПоказаФизлиц.Номер;
				ЭлементыФормы.ПоказатьФайл.Кнопки.ВыбранныйДокумент.Текст = "По документу СЗВ-4-1 №" + ДокументОбъектДляПоказаФизлиц.Номер;
				ЭлементыФормы.НаДиск.Кнопки.НаДискПоВыбраномуДокументу.Текст = "По документу СЗВ-4-1 №" + ДокументОбъектДляПоказаФизлиц.Номер;
				
				
			Иначе
				ЭлементыФормы.ПанельСтажФизлица.ТекущаяСтраница = ЭлементыФормы.ПанельСтажФизлица.Страницы.СтраницаСЗВ42;
				ЭлементыФормы.ТерриториальныеУсловия.Доступность = Истина;
				
				// Тексты кнопок
				ЭлементыФормы.Проверить.Кнопки.ПроверитьВыбраныйДокумент.Текст = "По документу СЗВ-4-2 №" + ДокументОбъектДляПоказаФизлиц.Номер;
				ЭлементыФормы.Печать.Кнопки.ПечатьВыбраныйДокумент.Текст = "По документу СЗВ-4-2 №" + ДокументОбъектДляПоказаФизлиц.Номер;
				ЭлементыФормы.ПоказатьФайл.Кнопки.ВыбранныйДокумент.Текст = "По документу СЗВ-4-2 №" + ДокументОбъектДляПоказаФизлиц.Номер;
				ЭлементыФормы.НаДиск.Кнопки.НаДискПоВыбраномуДокументу.Текст = "По документу СЗВ-4-2 №" + ДокументОбъектДляПоказаФизлиц.Номер;
				
			КонецЕсли;
		ИначеЕсли ТипЗнч(Элемент.ТекущаяСтрока.Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
			ЭлементыФормы.НадписьНазваниеПачки.Заголовок = " Документы, пачки документов    (АДВ-11 №" + Элемент.ТекущаяСтрока.ДокументОбъект.Номер + ")";
			элементыФормы.КоманднаяПанельПачки.Кнопки.ПеренестиСЗВ4.Доступность = Ложь;
			ДокументОбъектАДВ11 = Элемент.ТекущаяСтрока.ДокументОбъект;
			ЭлементыФормы.ПанельДокумент.ТекущаяСтраница = ЭлементыФормы.ПанельДокумент.Страницы.АДВ11;
			ЭлементыФормы.ДанныеСЗВ4.ТекущаяСтраница = ЭлементыФормы.ДанныеСЗВ4.Страницы.ПустаяСтраница;
			
			ЭлементыФормы.ПанельУплатаСтраховыхВзносов.ТекущаяСтраница = ?(ПоказыватьСуммыВзносов, 
			ЭлементыФормы.ПанельУплатаСтраховыхВзносов.Страницы.ТаблицаВзносов,
			ЭлементыФормы.ПанельУплатаСтраховыхВзносов.Страницы.ПустаяСтраница);
			
			Для Каждого СтрокаСЗВ4 Из Элемент.ТекущаяСтрока.Строки Цикл
				Если СтрокаСЗВ4.ДокументОбъект <> Неопределено Тогда
					ТаблицаСсылокСЗВ4.Добавить(СтрокаСЗВ4.Пачка, Строка(СтрокаСЗВ4.ДокументОбъект.ТипФормДокументов) + " №" + СтрокаСЗВ4.ДокументОбъект.Номер + " от " + Формат(СтрокаСЗВ4.ДокументОбъект.Дата, "ДЛФ=Д") + " (" + СтрокаСЗВ4.ДокументОбъект.РаботникиОрганизации.Количество() + ОбщегоНазначения.ФормаМножественногоЧисла(" сотрудник) ", " сотрудника) ", " сотрудников) ", СтрокаСЗВ4.ДокументОбъект.РаботникиОрганизации.Количество()));
				КонецЕсли;				
			КонецЦикла;
			ДокументОбъектДляПоказаФизлиц = Неопределено;
			ЭлементыФормы.ФизлицаПачек.ТолькоПросмотр = Истина;
			ЭлементыФормы.КоманднаяПанельФизлицаПачек.Кнопки.Перенести.Доступность = Ложь;
			
			// Тексты кнопок
			ЭлементыФормы.Проверить.Кнопки.ПроверитьВыбраныйДокумент.Текст = "По документу АДВ-11 №" + ДокументОбъектАДВ11.Номер;
			ЭлементыФормы.Печать.Кнопки.ПечатьВыбраныйДокумент.Текст = "По документу АДВ-11 №" + ДокументОбъектАДВ11.Номер;
			ЭлементыФормы.ПоказатьФайл.Кнопки.ВыбранныйДокумент.Текст = "По документу АДВ-11 №" + ДокументОбъектАДВ11.Номер;
			ЭлементыФормы.НаДиск.Кнопки.НаДискПоВыбраномуДокументу.Текст = "По документу АДВ-11 №" + ДокументОбъектАДВ11.Номер;
			
		КонецЕсли;
		
		Если Элемент.ТекущаяСтрока.ДокументОбъект.ПринятоВПФР Тогда
			ЭлементыФормы.ПереключательТипФормДокументов.Доступность = Ложь;
			ЭлементыФормы.СЗВ_4_2.Доступность = Ложь;
			ЭлементыФормы.ТерриториальныеУсловия.Доступность = Ложь;
			ЭлементыФормы.Исполнитель.Доступность = Ложь;
			ЭлементыФормы.Исполнитель1.Доступность = Ложь;
			ЭлементыФормы.ДатаСоставления1.Доступность = Ложь;
			ЭлементыФормы.НомерПачки1.Доступность = Ложь;
			ЭлементыФормы.ДатаСоставления.Доступность = Ложь;
			ЭлементыФормы.ДатаДействия.Доступность = Ложь;
			ЭлементыФормы.НомерПачки.Доступность = Ложь;
			ЭлементыФормы.ПереключательВидКорректировки.Доступность = Ложь;
			ЭлементыФормы.Переключатель4.Доступность = Ложь;
			ЭлементыФормы.Переключатель5.Доступность = Ложь;
			ЭлементыФормы.ФизлицаПачек.ТолькоПросмотр = Истина;
			ЭлементыФормы.АдресДляИнформирования.Доступность = Ложь;
			ЭлементыФормы.СведенияОЗадолженности.ТолькоПросмотр = Истина;
			ЭлементыФормы.НачисленоНаСтраховуюЧастьПФР.Доступность = Ложь;
			ЭлементыФормы.НачисленоНаНакопительнуюЧастьПФР.Доступность = Ложь;
			ЭлементыФормы.НачисленоПоДополнительномуТарифу.Доступность = Ложь;
			ЭлементыФормы.НачисленоПоВсейОрганизацииНаСтраховуюЧастьПФР.Доступность = Ложь;
			ЭлементыФормы.НачисленоПоВсейОрганизацииНаНакопительнуюЧастьПФР.Доступность = Ложь;
			ЭлементыФормы.МесяцыБолезни.Доступность = Ложь;
			ЭлементыФормы.ДниБолезни.Доступность = Ложь;
			ЭлементыФормы.МесяцыОтпускаЗаСвойСчет.Доступность = Ложь;
			ЭлементыФормы.ДниОтпускаЗаСвойСчет.Доступность = Ложь;
			ЭлементыФормы.АдресДляИнформирования.Доступность = Ложь;
			ЭлементыФормы.ЗаписиОСтаже.ТолькоПросмотр = Истина;
			
		Иначе
			ЭлементыФормы.ПереключательТипФормДокументов.Доступность = Истина;
			ЭлементыФормы.СЗВ_4_2.Доступность = Истина;
			ЭлементыФормы.ТерриториальныеУсловия.Доступность = Истина;
			ЭлементыФормы.Исполнитель.Доступность = Истина;
			ЭлементыФормы.ДатаСоставления1.Доступность = Истина;
			ЭлементыФормы.НомерПачки1.Доступность = Истина;
			ЭлементыФормы.Исполнитель1.Доступность = Истина;
			ЭлементыФормы.ДатаСоставления.Доступность = Истина;
			ЭлементыФормы.ДатаДействия.Доступность = Истина;
			ЭлементыФормы.НомерПачки.Доступность = Истина;
			ЭлементыФормы.ПереключательВидКорректировки.Доступность = Истина;
			ЭлементыФормы.Переключатель4.Доступность = Истина;
			ЭлементыФормы.Переключатель5.Доступность = Истина;
			ЭлементыФормы.ФизлицаПачек.ТолькоПросмотр = РасчетныйПериод > 2009;
			ЭлементыФормы.АдресДляИнформирования.Доступность = Истина;
			ЭлементыФормы.СведенияОЗадолженности.ТолькоПросмотр = Ложь;
			ЭлементыФормы.НачисленоНаСтраховуюЧастьПФР.Доступность = Ложь;
			ЭлементыФормы.НачисленоНаНакопительнуюЧастьПФР.Доступность = Истина;
			ЭлементыФормы.НачисленоПоДополнительномуТарифу.Доступность = Истина;
			ЭлементыФормы.НачисленоПоВсейОрганизацииНаСтраховуюЧастьПФР.Доступность = Истина;
			ЭлементыФормы.НачисленоПоВсейОрганизацииНаНакопительнуюЧастьПФР.Доступность = Истина;
			ЭлементыФормы.МесяцыБолезни.Доступность = Истина;
			ЭлементыФормы.ДниБолезни.Доступность = Истина;
			ЭлементыФормы.МесяцыОтпускаЗаСвойСчет.Доступность = Истина;
			ЭлементыФормы.ДниОтпускаЗаСвойСчет.Доступность = Истина;
			ЭлементыФормы.АдресДляИнформирования.Доступность = Истина;
			ЭлементыФормы.ЗаписиОСтаже.ТолькоПросмотр = Ложь;
			
			
		КонецЕсли;
	Иначе
		
		
		
		ЭлементыФормы.ПанельДокумент.ТекущаяСтраница = ЭлементыФормы.ПанельДокумент.Страницы.ПустаяСтраница;
		ЭлементыФормы.ДанныеСЗВ4.ТекущаяСтраница = ЭлементыФормы.ДанныеСЗВ4.Страницы.ПустаяСтраница;
			
		ЭлементыФормы.ПанельУплатаСтраховыхВзносов.ТекущаяСтраница = ?(ПоказыватьСуммыВзносов, 
		ЭлементыФормы.ПанельУплатаСтраховыхВзносов.Страницы.ТаблицаВзносов,
		ЭлементыФормы.ПанельУплатаСтраховыхВзносов.Страницы.ПустаяСтраница);
			
		ДокументОбъектДляПоказаФизлиц = Неопределено;
		ЭлементыФормы.ФизлицаПачек.ТолькоПросмотр = Истина;
		ЭлементыФормы.КоманднаяПанельФизлицаПачек.Кнопки.Перенести.Доступность = Ложь;
			
			// Тексты кнопок
		ЭлементыФормы.Проверить.Кнопки.ПроверитьВыбраныйДокумент.Текст = "По документу";
		ЭлементыФормы.Печать.Кнопки.ПечатьВыбраныйДокумент.Текст = "По документу";
		ЭлементыФормы.ПоказатьФайл.Кнопки.ВыбранныйДокумент.Текст = "По документу";
		ЭлементыФормы.НаДиск.Кнопки.НаДискПоВыбраномуДокументу.Текст = "По документу";
		
		//
		//ЭлементыФормы.ПереключательТипФормДокументов.Доступность = Ложь;
		//ЭлементыФормы.СЗВ_4_2.Доступность = Ложь;
		//ЭлементыФормы.ТерриториальныеУсловия.Доступность = Ложь;
		//ЭлементыФормы.Исполнитель.Доступность = Ложь;
		//ЭлементыФормы.Исполнитель1.Доступность = Ложь;
		//ЭлементыФормы.ДатаСоставления.Доступность = Ложь;
		//ЭлементыФормы.ДатаСоставления1.Доступность = Ложь;
		//ЭлементыФормы.ДатаДействия.Доступность = Ложь;
		//ЭлементыФормы.НомерПачки.Доступность = Ложь;
		//ЭлементыФормы.НомерПачки1.Доступность = Ложь;
		//ЭлементыФормы.ПереключательВидКорректировки.Доступность = Ложь;
		//ЭлементыФормы.Переключатель4.Доступность = Ложь;
		//ЭлементыФормы.Переключатель5.Доступность = Ложь;
		//ЭлементыФормы.ФизлицаПачек.ТолькоПросмотр = Истина;
		ЭлементыФормы.СведенияОЗадолженности.ТолькоПросмотр = Истина;
		ЭлементыФормы.КоманднаяПанельРасчеты.Кнопки.ЗадолженностьПередПФР.Доступность = Ложь;
		//ЭлементыФормы.АдресДляИнформирования.Доступность = Ложь;
	КонецЕсли;
	ФизлицаПачекПриАктивизацииСтроки(ЭлементыФормы.ФизлицаПачек);
	ЭлементыФормы.ФизлицаПачек.ТолькоПросмотр = РасчетныйПериод > 2009;
	
	
КонецПроцедуры // ОбновитьЭлементыФормыПриИзменененииПачки()

// Процедура формирует текст надписи о текущем состоянии подготовки документов
//
Процедура ОбновитьНадписьСостоянияПодготовкиДокументов()
	КоличествоДокументовСЗВ4 = 0;
	КоличествоДокументовАДВ11 = 0;
	ЕстьПустыеПачки = Ложь;
	ЕстьДокументАДВ11 = Ложь;
	ЕстьДокументСЗВ4 = Ложь;
	Для Каждого ТекущаяПачка Из ПачкиДокументов.Строки Цикл
		Если ТипЗнч(ТекущаяПачка.Пачка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
			КоличествоДокументовСЗВ4 = КоличествоДокументовСЗВ4 + 1;
			ЕстьПустыеПачки = ЕстьПустыеПачки ИЛИ ТекущаяПачка.Пачка.РаботникиОрганизации.Количество()=0;
			ЕстьДокументСЗВ4 = Истина;
		ИначеЕсли ТипЗнч(ТекущаяПачка.Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
			КоличествоДокументовАДВ11 = КоличествоДокументовАДВ11 + 1;
			ЕстьПустыеПачки = ЕстьПустыеПачки ИЛИ ТекущаяПачка.Пачка.СведенияОЗадолженности.Количество()=0;
			ЕстьДокументАДВ11 = Истина;
		КонецЕсли;
	КонецЦикла;
	Если КоличествоДокументовСЗВ4 = 0 И КоличествоДокументовАДВ11 = 0 Тогда
		РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов,
		ЭлементыФормы.ПолеКартинкиПредупреждение, 
		"Данные для передачи еще не готовы. Необходимо создать хотя бы одну пачку документов.", "СообщениеОПроблемах");
	ИначеЕсли ЕстьПустыеПачки Тогда
		РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов,
		ЭлементыФормы.ПолеКартинкиПредупреждение, 
		"Не все пачки документов заполнены.", "СообщениеОПроблемах");
	ИначеЕсли ЕстьДокументСЗВ4 И НЕ ЕстьДокументАДВ11 Тогда
		РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов,
		ЭлементыФормы.ПолеКартинкиПредупреждение, 
		"Пачки документов СЗВ-4 для передачи в ПФР подготовлены, но не создан документ АДВ-11.", "СообщениеОПроблемах");
	ИначеЕсли КоличествоДокументовСЗВ4 > 0 И КоличествоДокументовАДВ11 > 0 Тогда
		РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов,
		ЭлементыФормы.ПолеКартинкиПредупреждение, 
		"Данные для передачи в ПФР подготовлены и готовы к проверке.", "");
	Иначе
		РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов,
		ЭлементыФормы.ПолеКартинкиПредупреждение, 
		"Документы еще не готовы к отправке", "ВажнаяИнформация");
	КонецЕсли;
КонецПроцедуры // ОбновитьНадписьСостоянияПодготовкиДокументов()

// Управляет видимостью панели с общими суммами страховых взносов, в зависимости от структуры организации:
// наличия обособленных подразделений
Процедура УстановитьВидимостьПанелиВсеСуммыСтраховыхВзносов()
	СписокОбособленныхПодразделений = ОбщегоНазначения.ПолучитьСписокОбособленныхПодразделенийОрганизации(ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	Если (СписокОбособленныхПодразделений.Количество() > 0) И ПоказыватьСуммыВзносов Тогда
		// Показываем панель с суммами по всей организации
		ЭлементыФормы.ПанельВзносыИОтсутствия.ТекущаяСтраница = ЭлементыФормы.ПанельВзносыИОтсутствия.Страницы.СтраницаСоВсемиВзносами;
		//ЭлементыФормы.ПанельВсеСуммыСтраховыхВзносов.Свертка = РежимСверткиЭлементаУправления.Нет;
	Иначе
		// прячем панель
		ЭлементыФормы.ПанельВзносыИОтсутствия.ТекущаяСтраница = ЭлементыФормы.ПанельВзносыИОтсутствия.Страницы.СтраницаБезВсехВзносов;
		//ЭлементыФормы.ПанельВсеСуммыСтраховыхВзносов.Свертка = РежимСверткиЭлементаУправления.Право;
	КонецЕсли
КонецПроцедуры // УстановитьВидимостьПанелиВсеСуммыСтраховыхВзносов()



// Процедура считывает данные из базы и отображает их в форме 
//
Процедура ОбновитьПачкиДокументов()
	ПачкиДокументов.Строки.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("РасчетныйПериод", РасчетныйПериод);
	Запрос.УстановитьПараметр("ТипСведений", ТипСведений);
	Запрос.УстановитьПараметр("ТипСведенийСтрокой", ?(ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, "ИСХД", "ПЕНС"));
	Запрос.УстановитьПараметр("ФорматФайла", ФорматФайла);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПачкаСЗВ4.Ссылка КАК СЗВ4,
	|	ПачкаАДВ11.Ссылка КАК АДВ11
	|ИЗ
	|	(ВЫБРАТЬ
	|		СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4 КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4
	|	ГДЕ
	|		СведенияОТрудовомСтажеИЗаработкеСЗВ4.Организация = &Организация
	|		И СведенияОТрудовомСтажеИЗаработкеСЗВ4.Год = &РасчетныйПериод
	|		И СведенияОТрудовомСтажеИЗаработкеСЗВ4.ТипСведенийСЗВ = &ТипСведений
	|		И СведенияОТрудовомСтажеИЗаработкеСЗВ4.ФорматФайла = &ФорматФайла
	|		И (НЕ СведенияОТрудовомСтажеИЗаработкеСЗВ4.ПометкаУдаления)) КАК ПачкаСЗВ4
	|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ДокументПередача.Ссылка КАК Ссылка,
	|			ПачкиДокументовСЗВ.ДокументПачка КАК ДокументПачка
	|		ИЗ
	|			Документ.ПередачаСЗВ4вПФР КАК ДокументПередача
	|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаСЗВ4вПФР.ПачкиДокументов КАК ПачкиДокументовСЗВ
	|				ПО (ПачкиДокументовСЗВ.Ссылка = ДокументПередача.Ссылка)
	|		ГДЕ
	|			ДокументПередача.Год = &РасчетныйПериод
	|			И ДокументПередача.ТипСведений = &ТипСведенийСтрокой
	|			И ДокументПередача.Организация = &Организация
	|			И ДокументПередача.ФорматФайла = &ФорматФайла
	|			И (НЕ ДокументПередача.ПометкаУдаления)) КАК ПачкаАДВ11
	|		ПО (ПачкаАДВ11.ДокументПачка = ПачкаСЗВ4.Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	АДВ11 УБЫВ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	ТекущаяСтрокаАДВ11 = "";
	
	Пока Выборка.СледующийПоЗначениюПоля("АДВ11") Цикл
		Если НЕ Выборка.АДВ11 = NULL Тогда
			СтрокаДерева = ПачкиДокументов.Строки.Добавить();
			СтрокаДерева.Пачка = Выборка.АДВ11;
			СтрокаДерева.ДокументОбъект = Выборка.АДВ11.ПолучитьОбъект();
			ТекущаяСтрокаАДВ11 = СтрокаДерева;
		КонецЕсли;
		Пока Выборка.Следующий() Цикл
			Если НЕ Выборка.СЗВ4 = NULL Тогда
				Если ТекущаяСтрокаАДВ11 <> "" И ТекущаяСтрокаАДВ11.Пачка = Выборка.АДВ11 Тогда
					СтрокаДерева = ТекущаяСтрокаАДВ11.Строки.Добавить();
				Иначе
					СтрокаДерева = ПачкиДокументов.Строки.Добавить();
				КонецЕсли;
				СтрокаДерева.Пачка = Выборка.СЗВ4;
				СтрокаДерева.ДокументОбъект = Выборка.СЗВ4.ПолучитьОбъект();
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если СтрокаДерева = Неопределено Тогда
		ДокументОбъектАДВ11 = Неопределено;
		ДокументОбъектДляПоказаФизЛиц = Неопределено;
	КонецЕсли;
	
	ОбновитьНадписьСостоянияПодготовкиДокументов();
	ЭлементыФормы.ПачкиДокументов.ОбновитьСтроки();
	ЭлементыФормы.ПачкиДокументов.СоздатьКолонки();
	ЭлементыФормы.ПачкиДокументов.Колонки.НомерПачки.Видимость = Ложь;
	ЭлементыФормы.ПачкиДокументов.Колонки.ДокументОбъект.Видимость = Ложь;
	
КонецПроцедуры // ОбновитьПачкиДокументов()

// Процедура сохряняет данные о стажефизического лица в регистры сведений
//
Функция ВыполнитьСохранениеДанныхФизлица(Знач НеобходимаяОрганизация = Неопределено, Знач НеобходимыйРасчетныйПериод = Неопределено)
	
	УдерживатьТекущуюСтроку = Ложь;
	Если ЗначениеЗаполнено(ДокументОбъектДляПоказаФизлиц.Номер) И ЗначениеЗаполнено(ДокументОбъектДляПоказаФизлиц.Дата) Тогда
		Если НеобходимыйРасчетныйПериод = Неопределено Тогда
			НеобходимыйРасчетныйПериод = РасчетныйПериод;
		КонецЕсли;
		
		Если НеобходимаяОрганизация = Неопределено Тогда
			НеобходимаяОрганизация = Организация;
		КонецЕсли;
		
		// Проверим заполнение организации (год и физлицо пустыми быть не могут)
		Если НЕ ЗначениеЗаполнено(НеобходимаяОрганизация) Тогда
			Возврат Ложь;
		КонецЕсли; 
		
		Если НЕ ЗначениеЗаполнено(ФизЛицо) Тогда
			Возврат Ложь;
		КонецЕсли; 
		
		
		// Сохранение данных о заработке
		НаборЗаписей = РегистрыСведений.СуммыВзносовДляСЗВ4.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ФизЛицо.Значение = ФизЛицо;
		НаборЗаписей.Отбор.ОбособленноеПодразделение.Значение = НеобходимаяОрганизация;
		НаборЗаписей.Отбор.Год.Значение = НеобходимыйРасчетныйПериод;
		НаборЗаписей.Отбор.ОбособленноеПодразделение.Использование = Истина;
		НаборЗаписей.Отбор.ФизЛицо.Использование = Истина;
		НаборЗаписей.Отбор.Год.Использование = Истина;
		Запись = НаборЗаписей.Добавить();
		Запись.ФизЛицо = ФизЛицо;
		Запись.ОбособленноеПодразделение = НеобходимаяОрганизация;
		Запись.Год = НеобходимыйРасчетныйПериод;
		Запись.НачисленоНаСтраховуюЧастьПФР = НачисленоНаСтраховуюЧастьПФР;
		Запись.НачисленоНаНакопительнуюЧастьПФР = НачисленоНаНакопительнуюЧастьПФР;
		Запись.НачисленоПоДополнительномуТарифу = НачисленоПоДополнительномуТарифу;
		Запись.НачисленоПоВсейОрганизацииНаСтраховуюЧастьПФР = НачисленоПоВсейОрганизацииНаСтраховуюЧастьПФР;
		Запись.НачисленоПоВсейОрганизацииНаНакопительнуюЧастьПФР = НачисленоПоВсейОрганизацииНаНакопительнуюЧастьПФР;
		Запись.ДнейБолезни = МесяцыБолезни*30 + ДниБолезни;
		Запись.ДнейОтпускаЗаСвойСчет = МесяцыОтпускаЗаСвойСчет*30 + ДниОтпускаЗаСвойСчет;
		НаборЗаписей.Записать();
		
		// Сохранение данных о стаже
		
		Если СтажДоступенДляРедактирования Тогда
			//перед записью строк стажа пронумеруем записи
			Если НЕ ВыполнитьНумерациюЗаписейОСтаже() тогда 
				Возврат Ложь;
			КонецЕсли;	 
			
			НачатьТранзакцию();
			
			Если ЗаписиОСтаже.Отбор.ФизЛицо.Использование И ЗаписиОСтаже.Отбор.ФизЛицо.Значение = ФизЛицо
				И ЗаписиОСтаже.Отбор.ОбособленноеПодразделение.Использование И ЗаписиОСтаже.Отбор.ОбособленноеПодразделение.Значение = НеобходимаяОрганизация
				И ЗаписиОСтаже.Отбор.Год.Использование И ЗаписиОСтаже.Отбор.Год.Значение = НеобходимыйРасчетныйПериод
				Тогда
				Если ДокументОбъектДляПоказаФизлиц.ТипФормДокументов = "СЗВ-4-2" Тогда
					Если ЗаписиОСтаже.Количество() = 0 Тогда
						ЗаписьСтажа = ЗаписиОСтаже.Добавить();
						ЗаписьСтажа.ОтчетныйПериод = Дата(НеобходимыйРасчетныйПериод, 1, 1);
						ЗаписьСтажа.ФизЛицо = ФизЛицо;
						ЗаписьСтажа.ОбособленноеПодразделение = НеобходимаяОрганизация;
						ЗаписьСтажа.НомерОсновнойЗаписи = 1;
					Иначе
						ЗаписьСтажа = ЗаписиОСтаже[0];
					КонецЕсли;
					ЗаписьСтажа.ДатаНачалаПериода = СтажРаботыНачалоПериода;
					ЗаписьСтажа.ДатаОкончанияПериода = СтажРаботыОкончаниеПериода;
				КонецЕсли;
				
				ЗаписиОСтаже.Записать();
			КонецЕсли;
			
			//Выполним проверку правильности ввода данных
			СтруктураПараметровПроверки = Новый Структура("МассивФизЛиц, МассивОбособленныхПодразделений, МассивЛет",ФизЛицо,НеобходимаяОрганизация,НеобходимыйРасчетныйПериод);
			
			ЗафиксироватьТранзакцию();
			
			ЗаписиОСтаже.Записать();
		КонецЕсли;	
		
	КонецЕсли;
	ФизЛицо = Неопределено;
	Возврат Истина;
КонецФункции // ВыполнитьСохранениеДанныхФизлица()

// Процедура сохраняет документы в базу: существующие документы просто сохряняются, 
// удаленные документы помечаются на удаление, а новые документы записываются поверх удаленных или,
// если нет удаленных документов, создаются новые
Процедура СохранитьТекущиеДанные(Отказ = Ложь, РежимДиалога = Неопределено, ВыводитьВопрос = Истина)
	Если РежимДиалога = Неопределено Тогда
		РежимДиалога = РежимДиалогаВопрос.ДаНетОтмена;
	КонецЕсли;
	// Определяем модифицированность документов.
	ДокументыМодифицированы = Ложь;
	СписокДокументовДерева = Новый Массив;
	
	Для Каждого СтрокаПервогоУровня Из ПачкиДокументов.Строки Цикл
		СписокДокументовДерева.Добавить(СтрокаПервогоУровня.Пачка);
		Если СтрокаПервогоУровня.ДокументОбъект.Модифицированность() Тогда
			ДокументыМодифицированы = Истина;
		КонецЕсли;
		Для Каждого СтрокаВторогоУровня Из СтрокаПервогоУровня.Строки Цикл
			СписокДокументовДерева.Добавить(СтрокаВторогоУровня.Пачка);
			Если СтрокаВторогоУровня.ДокументОбъект.Модифицированность() Тогда
				ДокументыМодифицированы = Истина;
			КонецЕсли;
		КонецЦикла;	
	КонецЦикла;
	
	// получаем список удаляемых документов
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокДокументовДерева", СписокДокументовДерева);
	Запрос.УстановитьПараметр("Организация", ВыбраннаяОрганизация);
	Запрос.УстановитьПараметр("Год", ВыбранныйРасчетныйПериод);
	Запрос.УстановитьПараметр("ФорматФайла", ВыбранныйФорматФайла);
	Запрос.УстановитьПараметр("ТипСведений", ВыбранныйТипСведений);
	Запрос.УстановитьПараметр("ТипСведенийСтрокой", ?(ВыбранныйТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, "ИСХД", "ПЕНС"));
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка
	|ИЗ
	|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4 КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4
	|ГДЕ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Организация = &Организация
	|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4.Год = &Год
	|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4.ТипСведенийСЗВ = &ТипСведений
	|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4.ФорматФайла = &ФорматФайла
	|	И (НЕ СведенияОТрудовомСтажеИЗаработкеСЗВ4.ПометкаУдаления)
	|	И (НЕ СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка В (&СписокДокументовДерева))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПередачаСЗВ4вПФР.Ссылка
	|ИЗ
	|	Документ.ПередачаСЗВ4вПФР КАК ПередачаСЗВ4вПФР
	|ГДЕ
	|	ПередачаСЗВ4вПФР.Организация = &Организация
	|	И ПередачаСЗВ4вПФР.Год = &Год
	|	И ПередачаСЗВ4вПФР.ТипСведений = &ТипСведенийСтрокой
	|	И ПередачаСЗВ4вПФР.ФорматФайла = &ФорматФайла
	|	И (НЕ ПередачаСЗВ4вПФР.ПометкаУдаления)
	|	И (НЕ ПередачаСЗВ4вПФР.Ссылка В (&СписокДокументовДерева))";
	
	ВыборкаУдаляемыхДокументов = Запрос.Выполнить().Выбрать();
	ДокументыМодифицированы = ДокументыМодифицированы 
		ИЛИ ВыборкаУдаляемыхДокументов.Количество() > 0
		ИЛИ НЕ ЗаписиОСтажеЗаполненыПолностью();
	
	Если ДокументыМодифицированы Тогда
		Если ВыводитьВопрос Тогда
			РезультатОтвет = Вопрос("Сохранить текущие изменения", РежимДиалога,,,"Сохранение данных");
		Иначе
			РезультатОтвет = КодВозвратаДиалога.Да;
		КонецЕсли;
		Если РезультатОтвет = КодВозвратаДиалога.Да
			ИЛИ РезультатОтвет = КодВозвратаДиалога.ОК Тогда
			НачатьТранзакцию();
			// Сохраняем измененные документы
			Для Каждого СтрокаПервогоУровня Из ПачкиДокументов.Строки Цикл
				Если НЕ СтрокаПервогоУровня.ДокументОбъект.Ссылка.Пустая()
					И СтрокаПервогоУровня.ДокументОбъект.Модифицированность() Тогда
					
					СтрокаПервогоУровня.ДокументОбъект.Записать(?(СтрокаПервогоУровня.ДокументОбъект.Проведен,РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
				КонецЕсли;
				Для Каждого СтрокаВторогоУровня Из СтрокаПервогоУровня.Строки Цикл
					Если НЕ СтрокаВторогоУровня.ДокументОбъект.Ссылка.Пустая() 
						И СтрокаВторогоУровня.ДокументОбъект.Модифицированность() Тогда
						СтрокаВторогоУровня.ДокументОбъект.Записать(?(СтрокаВторогоУровня.ДокументОбъект.Проведен,РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
					КонецЕсли;
				КонецЦикла;	
			КонецЦикла;
			// Помечаем на удаление удаляемые объекты
			Пока ВыборкаУдаляемыхДокументов.Следующий() Цикл
				ДокОбъект = ВыборкаУдаляемыхДокументов.Ссылка.ПолучитьОбъект();
				ДокОбъект.УстановитьПометкуУдаления(Истина);
			КонецЦикла;
			
			// Записываем в базу новые, только созданные документы на место удаленных документов
			Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ПередачаСЗВ4вПФР.Ссылка
			|ИЗ
			|	Документ.ПередачаСЗВ4вПФР КАК ПередачаСЗВ4вПФР
			|ГДЕ
			|	ПередачаСЗВ4вПФР.ПометкаУдаления";
			ТаблицаУдаленныхАДВ11 = Запрос.Выполнить().Выгрузить();
			Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка
			|ИЗ
			|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4 КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4
			|ГДЕ
			|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.ПометкаУдаления";
			ТаблицаУдаленныхСЗВ4 = Запрос.Выполнить().Выгрузить();
			
			Для Каждого СтрокаПервогоУровня Из ПачкиДокументов.Строки Цикл
				
				Для Каждого СтрокаВторогоУровня Из СтрокаПервогоУровня.Строки Цикл
					Если СтрокаВторогоУровня.ДокументОбъект.Ссылка.Пустая() Тогда
						ЗаписатьНовыйДокументПоверхСтарого(СтрокаВторогоУровня, ТаблицаУдаленныхАДВ11, ТаблицаУдаленныхСЗВ4);	
					КонецЕсли;
				КонецЦикла;
				
				Если СтрокаПервогоУровня.ДокументОбъект.Ссылка.Пустая() Тогда
					ЗаписатьНовыйДокументПоверхСтарого(СтрокаПервогоУровня, ТаблицаУдаленныхАДВ11, ТаблицаУдаленныхСЗВ4);
				КонецЕсли;
				
			КонецЦикла;
			
			ЗафиксироватьТранзакцию();
		ИначеЕсли РезультатОтвет = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		ИначеЕсли РезультатОтвет = КодВозвратаДиалога.Нет Тогда
			ДокументОбъектАДВ11 = Неопределено;
			ДокументОбъектДляПоказаФизЛиц = Неопределено;
		КонецЕсли;
	ИначеЕсли РезультатОтвет = КодВозвратаДиалога.Нет Тогда
			ДокументОбъектАДВ11 = Неопределено;
			ДокументОбъектДляПоказаФизЛиц = Неопределено;	
	КонецЕсли;
	
КонецПроцедуры // СохранитьТекущиеДанные()

// Процедура записывает новый документ объект поверх удаленного документа
//
Процедура ЗаписатьНовыйДокументПоверхСтарого(СтрокаДерева, ТаблицаУдаленныхАДВ11, ТаблицаУдаленныхСЗВ4)
	Если ТипЗнч(СтрокаДерева.Пачка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4")Тогда
		Если ТаблицаУдаленныхСЗВ4.Количество() > 0  Тогда
			УдаленныйДокОбъект = ТаблицаУдаленныхСЗВ4[0].Ссылка.ПолучитьОбъект();
			НовыйДокОбъект = СтрокаДерева.ДокументОбъект;
			ТаблицаУдаленныхСЗВ4.Удалить(0);
			ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект, НовыйДокОбъект, , "Проведен");
			УдаленныйДокОбъект.РаботникиОрганизации.Очистить();
			Для Каждого СтрокаТЧ Из НовыйДокОбъект.РаботникиОрганизации Цикл
				ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект.РаботникиОрганизации.Добавить(),СтрокаТЧ);
			КонецЦикла;
			УдаленныйДокОбъект.Записать();
			
			Если СтрокаДерева.Родитель <> Неопределено Тогда
				ТабличнаяЧастьДокументаПередачи = СтрокаДерева.Родитель.ДокументОбъект.ПачкиДокументов;
				СтрокаТабличнойЧастиДокументаПередачи = ТабличнаяЧастьДокументаПередачи.Найти(СтрокаДерева.Пачка, "ДокументПачка");
				Если СтрокаТабличнойЧастиДокументаПередачи <> Неопределено Тогда
					СтрокаТабличнойЧастиДокументаПередачи.ДокументПачка = УдаленныйДокОбъект.Ссылка;
				КонецЕсли;
			КонецЕсли;
			СтрокаДерева.Пачка = УдаленныйДокОбъект.Ссылка;
			СтрокаДерева.ДокументОбъект = УдаленныйДокОбъект;
			
		Иначе
			СтрокаДерева.ДокументОбъект.Записать();
		КонецЕсли;
	ИначеЕсли ТипЗНч(СтрокаДерева.Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
		Если ТаблицаУдаленныхАДВ11.Количество() > 0  Тогда
			УдаленныйДокОбъект = ТаблицаУдаленныхАДВ11[0].Ссылка.ПолучитьОбъект();
			НовыйДокОбъект = СтрокаДерева.ДокументОбъект;
			ТаблицаУдаленныхАДВ11.Удалить(0);
			ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект, НовыйДокОбъект, , "Проведен");
			УдаленныйДокОбъект.ПачкиДокументов.Очистить();
			Для Каждого СтрокаТЧ Из НовыйДокОбъект.ПачкиДокументов Цикл
				ДобавляемаяСтрока = УдаленныйДокОбъект.ПачкиДокументов.Добавить();
				ДобавляемаяСтрока.ДокументПачка = СтрокаТЧ.ДокументПачка;
				ДобавляемаяСтрока.КомментарийПачки = СтрокаТЧ.КомментарийПачки;
				ДобавляемаяСтрока.ТерриториальныеУсловия = СтрокаТЧ.ТерриториальныеУсловия;
				ДобавляемаяСтрока.ТипФормДокументов = СтрокаТЧ.ТипФормДокументов;
				ДобавляемаяСтрока.ВидКорректировки = СтрокаТЧ.ВидКорректировки;
			КонецЦикла;
			УдаленныйДокОбъект.СведенияОЗадолженности.Очистить();
			Для Каждого СтрокаТЧ Из НовыйДокОбъект.СведенияОЗадолженности Цикл
				ДобавляемаяСтрока = УдаленныйДокОбъект.СведенияОЗадолженности.Добавить();
				ДобавляемаяСтрока.Год = СтрокаТЧ.Год;
				ДобавляемаяСтрока.СтраховаяЧасть = СтрокаТЧ.СтраховаяЧасть;
				ДобавляемаяСтрока.НакопительнаяЧасть = СтрокаТЧ.НакопительнаяЧасть;
				ДобавляемаяСтрока.ДополнительныйТариф = СтрокаТЧ.ДополнительныйТариф;
				ДобавляемаяСтрока.ТипСтроки = СтрокаТЧ.ТипСтроки;
			КонецЦикла;
			УдаленныйДокОбъект.Записать();
			СтрокаДерева.Пачка = УдаленныйДокОбъект.Ссылка;
			СтрокаДерева.ДокументОбъект = УдаленныйДокОбъект;
		Иначе
			СтрокаДерева.ДокументОбъект.Записать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ЗаписатьНовыйДокументПоверхСтарого()

Функция ЗаписиОСтажеЗаполненыПолностью()
	Для Каждого СтрокаСтажа Из ЗаписиОСтаже цикл
		Если НЕ (ЗначениеЗаполнено(СтрокаСтажа.ДатаНачалаПериода) И ЗначениеЗаполнено(СтрокаСтажа.ДатаОкончанияПериода)) тогда
			Возврат Ложь;
		КонецЕсли;	 
	КонецЦикла;
	Возврат Истина;
КонецФункции //ЗаписиОСтажеЗаполненыПолностью()

//Выполняет нумерацию записей о стаже 
//(устанавливает значения измерений: НомерПериодаТрудовойДеятельности,НомерОсновнойЗаписи,НомерДополнительнойЗаписи)
Функция ВыполнитьНумерациюЗаписейОСтаже()
	
	//Нумерация записей стажа перед записью
	НомерОсновнойЗаписи =1; 
	НомерДополнительнойЗаписи =0; 
	НомерСтроки =0;
	Для Каждого СтрокаСтажа Из ЗаписиОСтаже цикл
		НомерСтроки = НомерСтроки +1;
		
		//Контролируем смену основной записи
		УдерживатьТекущуюСтроку = Ложь;
		Если ЗначениеЗаполнено(СтрокаСтажа.ДатаНачалаПериода) И ЗначениеЗаполнено(СтрокаСтажа.ДатаОкончанияПериода) тогда
			//Встретили основную запись
			
			НомерДополнительнойЗаписи =0; 
		ИначеЕсли НомерОсновнойЗаписи <> 0 И ЗаписиОСтаже.Количество() > 1 тогда
				НомерДополнительнойЗаписи =НомерДополнительнойЗаписи + 1; 

		КонецЕсли;	
		
		СтрокаСтажа.НомерОсновнойЗаписи = НомерОсновнойЗаписи;
		СтрокаСтажа.НомерДополнительнойЗаписи = НомерДополнительнойЗаписи;
		
		НомерОсновнойЗаписи = НомерОсновнойЗаписи + 1; 
	КонецЦикла;	
	
	Возврат Истина;
КонецФункции	 

// Процедура устанавливает заголовок для стажа физического лица
//
Процедура УстановитьЗаголовокРамкиСтажа()
	Если ДокументОбъектДляПоказаФизлиц.ТипФормДокументов= "СЗВ-4-2" Тогда
		ЭлементыФормы.РамкаГруппыСтажа.Заголовок = "Период работы за " + Формат(РасчетныйПериод, "ЧГ=0");
	Иначе
		ЭлементыФормы.РамкаГруппыСтажа.Заголовок = "Стаж работы за отчетный период";
	КонецЕсли;
	
КонецПроцедуры // УстановитьЗаголовокРамкиСтажа()

// Функция создает документ АДВ-11
//
Функция СоздатьАДВ11()
	СтрокаПачки = ПачкиДокументов.Строки.Добавить();
	ДокОбъект = Документы.ПередачаСЗВ4вПФР.СоздатьДокумент();
	ДокОбъект.Дата = ТекущаяДата();
	ДокОбъект.Организация = Организация;
	ДокОбъект.ДатаДействия = Дата(РасчетныйПериод, 12, 31);
	ДокОбъект.ОтчетныйПериод = Дата(РасчетныйПериод, 1, 1);
	ДокОбъект.ТипСведений = ?(ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, "ИСХД", "ПЕНС");
	ДокОбъект.Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
	ДокОбъект.УстановитьНовыйНомер();
	Если ДокОбъект.Ответственный.Пустая() Тогда
		ДокОбъект.Ответственный = глЗначениеПеременной("глТекущийПользователь")
	КонецЕсли;
	ДокОбъект.ФорматФайла = ФорматФайла;
	ДокОбъект.УстановитьСсылкуНового(Документы.ПередачаСЗВ4вПФР.ПолучитьСсылку());
	СтрокаПачки.ДокументОбъект = ДокОбъект;
	СтрокаПачки.Пачка = ДокОбъект.ПолучитьСсылкуНового();
	ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока = СтрокаПачки;
	ЭлементыФормы.ПачкиДокументов.ОбновитьСтроки();
	ЭлементыФормы.ПачкиДокументов.СоздатьКолонки();	
	ЭлементыФормы.ПачкиДокументов.Колонки.НомерПачки.Видимость = Ложь;
	ЭлементыФормы.ПачкиДокументов.Колонки.ДокументОбъект.Видимость = Ложь;
	Возврат СтрокаПачки;
КонецФункции // СоздатьАДВ11()

// Формирует пачки сведений СЗВ-4
//
Процедура АвтозаполнениеПачек(АДВ11ПерваяВКомплекте = Ложь, СписокФизЛиц = Неопределено) 
	
	ПачкиДокументов.Строки.Очистить();
	ДокументОбъектАДВ11 = Неопределено;
	ДокументОбъектДляПоказаФизлиц = Неопределено;
	УдерживатьТекущийДокумент = Ложь;
	УдерживатьТекущуюСтроку = Ложь;
	ФлагВыполнятьСохранениеФизЛица = Истина;
	ДатаСозданияДокументов = ОбщегоНазначения.ПолучитьРабочуюДату();
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Год", РасчетныйПериод);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СписокФизЛиц", СписокФизЛиц);
	Запрос.УстановитьПараметр("НеОтбиратьДанныеПоФизлицу",	СписокФизЛиц = Неопределено);
	Запрос.УстановитьПараметр("ДатаАктуальности", ДатаСозданияДокументов);
	
	// адреса для информирования заполняем только в том случае, когда они изменились по сравнению с последними
	// передававшимися в ПФР
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ЗаписиОСтаже.ФизЛицо КАК ФизЛицо,
	|	ЗаписиОСтаже.ТерриториальныеУсловия КАК ТерриториальныеУсловия,
	|	ЗаписиОСтаже.НомерОсновнойЗаписи,
	|	ЗаписиОСтаже.НомерДополнительнойЗаписи,
	|	ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ОсобыеУсловияТруда,
	|	ЗаписиОСтаже.КодПозицииСписка,
	|	ЗаписиОСтаже.ОснованиеИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ОснованиеВыслугиЛет,
	|	ФизЛицаСТарифомАВИА.ЯвляетсяЛетчиком,
	|	ВЫБОР
	|		КОГДА ФизлицаДекретДети.ФизЛицо ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВОтпускеПоУходу,
	|	ЗаписиОСтаже.ФизЛицо.ПометкаУдаления
	|ПОМЕСТИТЬ ВТФизЛица
	|ИЗ
	|	РегистрСведений.ЗаписиОСтажеДляСЗВ4 КАК ЗаписиОСтаже
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВЫБОР
	|				КОГДА СУММА(СуммыВзносов.НачисленоПоДополнительномуТарифу) > 0
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ КАК ЯвляетсяЛетчиком,
	|			СуммыВзносов.ФизЛицо КАК ФизЛицо
	|		ИЗ
	|			РегистрСведений.СуммыВзносовДляСЗВ4 КАК СуммыВзносов
	|		ГДЕ
	|			СуммыВзносов.ОбособленноеПодразделение = &Организация
	|			И СуммыВзносов.Год = &Год
	|			И (&НеОтбиратьДанныеПоФизлицу
	|					ИЛИ СуммыВзносов.ФизЛицо В (&СписокФизЛиц))
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СуммыВзносов.ФизЛицо) КАК ФизЛицаСТарифомАВИА
	|		ПО ЗаписиОСтаже.ФизЛицо = ФизЛицаСТарифомАВИА.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ЗаписиОСтаже.ФизЛицо КАК ФизЛицо
	|		ИЗ
	|			РегистрСведений.ЗаписиОСтажеДляСЗВ4 КАК ЗаписиОСтаже
	|		ГДЕ
	|			ЗаписиОСтаже.Год = &Год
	|			И ЗаписиОСтаже.ОбособленноеПодразделение = &Организация
	|			И ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (""ДЕКРЕТ"", ""ДЕТИ"")
	|			И (&НеОтбиратьДанныеПоФизлицу
	|					ИЛИ ЗаписиОСтаже.ФизЛицо В (&СписокФизЛиц))
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ЗаписиОСтаже.ФизЛицо) КАК ФизлицаДекретДети
	|		ПО (ФизлицаДекретДети.ФизЛицо = ЗаписиОСтаже.ФизЛицо)
	|ГДЕ
	|	ЗаписиОСтаже.Год = &Год
	|	И ЗаписиОСтаже.ОбособленноеПодразделение = &Организация
	|	И (&НеОтбиратьДанныеПоФизлицу
	|			ИЛИ ЗаписиОСтаже.ФизЛицо В (&СписокФизЛиц))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФИОФизЛицСрезПоследних.ФизЛицо КАК ФизЛицо,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|ПОМЕСТИТЬ ВТФИО
	|ИЗ
	|	РегистрСведений.ФИОФизЛиц.СрезПоследних(
	|			&ДатаАктуальности,
	|			ФизЛицо В
	|				(ВЫБРАТЬ
	|					Лица.ФизЛицо КАК ФизЛицо
	|				ИЗ
	|					ВТФизЛица КАК Лица)) КАК ФИОФизЛицСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписиОСтаже.ФизЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ ВТФизЛицаСЗВ41
	|ИЗ
	|	ВТФизЛица КАК ЗаписиОСтаже
	|ГДЕ
	|	(ЗаписиОСтаже.НомерОсновнойЗаписи > 1
	|			ИЛИ ЗаписиОСтаже.НомерДополнительнойЗаписи > 0
	|			ИЛИ ЗаписиОСтаже.ОсобыеУсловияТруда <> ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТруда.ПустаяСсылка)
	|			ИЛИ ЗаписиОСтаже.ОснованиеВыслугиЛет <> ЗНАЧЕНИЕ(Справочник.ОснованияВыслугиЛет.ПустаяСсылка)
	|			ИЛИ ЗаписиОСтаже.ОснованиеИсчисляемогоСтажа <> ЗНАЧЕНИЕ(Справочник.ОснованияИсчисляемогоТрудовогоСтажа.ПустаяСсылка)
	|			ИЛИ ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа <> """")
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ФизЛицо КАК ФизЛицо,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка.Дата,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.АдресДляИнформирования
	|ПОМЕСТИТЬ ВТПереданныеВПФРДокументы
	|ИЗ
	|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4.РаботникиОрганизации КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации
	|ГДЕ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.АдресДляИнформирования <> """"
	|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка.Организация = &Организация
	|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка.Проведен
	|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка.ПринятоВПФР
	|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка.Дата <= &ДатаАктуальности
	|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ФизЛицо В
	|			(ВЫБРАТЬ
	|				ФизЛица.ФизЛицо
	|			ИЗ
	|				ВТФизЛица КАК ФизЛица)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыДокументов.ФизЛицо КАК ФизЛицо,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.АдресДляИнформирования КАК АдресДляИнформирования
	|ПОМЕСТИТЬ ВТПереданныеВПФРАдреса
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Дата) КАК Дата,
	|		СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ФизЛицо КАК ФизЛицо
	|	ИЗ
	|		ВТПереданныеВПФРДокументы КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ФизЛицо) КАК ДатыДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПереданныеВПФРДокументы КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации
	|		ПО ДатыДокументов.Дата = СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка.Дата
	|			И ДатыДокументов.ФизЛицо = СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ФизЛица.ФизЛицо КАК ФизЛицо,
	|	ФизЛица.ФизЛицо.Наименование КАК Наименование,
	|	ФизЛица.ЯвляетсяЛетчиком КАК ЯвляетсяЛетчиком,
	|	ФизЛица.ВОтпускеПоУходу КАК ВОтпускеПоУходу,
	|	ВЫБОР
	|		КОГДА ФизЛицаСЗВ41.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ""СЗВ-4-1""
	|		ИНАЧЕ ""СЗВ-4-2""
	|	КОНЕЦ КАК ТипФормДокументов,
	|	ВЫБОР
	|		КОГДА ФизЛицаСЗВ41.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловия.ПустаяСсылка)
	|		ИНАЧЕ ФизЛица.ТерриториальныеУсловия
	|	КОНЕЦ КАК ТерриториальныеУсловия,
	|	ВЫБОР
	|		КОГДА ПереданныеВПФРАдреса.АдресДляИнформирования ЕСТЬ NULL 
	|			ТОГДА "","" + АдресаДляИнформирования.Поле1 + "","" + АдресаДляИнформирования.Поле2 + "","" + АдресаДляИнформирования.Поле3 + "","" + АдресаДляИнформирования.Поле4 + "","" + АдресаДляИнформирования.Поле5 + "","" + АдресаДляИнформирования.Поле6 + "","" + АдресаДляИнформирования.Поле7 + "","" + АдресаДляИнформирования.Поле8 + "","" + АдресаДляИнформирования.Поле9 + "","" + ВЫБОР
	|					КОГДА АдресаДляИнформирования.ТипДома В (ЗНАЧЕНИЕ(Перечисление.ТипыДомов.Дом), ЗНАЧЕНИЕ(Перечисление.ТипыДомов.ПустаяСсылка))
	|						ТОГДА ""дом""
	|					ИНАЧЕ ""владение""
	|				КОНЕЦ + "","" + ВЫБОР
	|					КОГДА АдресаДляИнформирования.ТипКорпуса В (ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.Корпус), ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.ПустаяСсылка))
	|						ТОГДА ""корпус""
	|					ИНАЧЕ ""строение""
	|				КОНЕЦ + "","" + ВЫБОР
	|					КОГДА АдресаДляИнформирования.ТипКвартиры В (ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.Квартира), ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.ПустаяСсылка))
	|						ТОГДА ""кв.""
	|					ИНАЧЕ ""оф.""
	|				КОНЕЦ
	|		КОГДА "","" + АдресаДляИнформирования.Поле1 + "","" + АдресаДляИнформирования.Поле2 + "","" + АдресаДляИнформирования.Поле3 + "","" + АдресаДляИнформирования.Поле4 + "","" + АдресаДляИнформирования.Поле5 + "","" + АдресаДляИнформирования.Поле6 + "","" + АдресаДляИнформирования.Поле7 + "","" + АдресаДляИнформирования.Поле8 + "","" + АдресаДляИнформирования.Поле9 + "","" + ВЫБОР
	|				КОГДА АдресаДляИнформирования.ТипДома В (ЗНАЧЕНИЕ(Перечисление.ТипыДомов.Дом), ЗНАЧЕНИЕ(Перечисление.ТипыДомов.ПустаяСсылка))
	|					ТОГДА ""дом""
	|				ИНАЧЕ ""владение""
	|			КОНЕЦ + "","" + ВЫБОР
	|				КОГДА АдресаДляИнформирования.ТипКорпуса В (ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.Корпус), ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.ПустаяСсылка))
	|					ТОГДА ""корпус""
	|				ИНАЧЕ ""строение""
	|			КОНЕЦ + "","" + ВЫБОР
	|				КОГДА АдресаДляИнформирования.ТипКвартиры В (ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.Квартира), ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.ПустаяСсылка))
	|					ТОГДА ""кв.""
	|				ИНАЧЕ ""оф.""
	|			КОНЕЦ <> ПереданныеВПФРАдреса.АдресДляИнформирования
	|			ТОГДА "","" + АдресаДляИнформирования.Поле1 + "","" + АдресаДляИнформирования.Поле2 + "","" + АдресаДляИнформирования.Поле3 + "","" + АдресаДляИнформирования.Поле4 + "","" + АдресаДляИнформирования.Поле5 + "","" + АдресаДляИнформирования.Поле6 + "","" + АдресаДляИнформирования.Поле7 + "","" + АдресаДляИнформирования.Поле8 + "","" + АдресаДляИнформирования.Поле9 + "","" + ВЫБОР
	|					КОГДА АдресаДляИнформирования.ТипДома В (ЗНАЧЕНИЕ(Перечисление.ТипыДомов.Дом), ЗНАЧЕНИЕ(Перечисление.ТипыДомов.ПустаяСсылка))
	|						ТОГДА ""дом""
	|					ИНАЧЕ ""владение""
	|				КОНЕЦ + "","" + ВЫБОР
	|					КОГДА АдресаДляИнформирования.ТипКорпуса В (ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.Корпус), ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.ПустаяСсылка))
	|						ТОГДА ""корпус""
	|					ИНАЧЕ ""строение""
	|				КОНЕЦ + "","" + ВЫБОР
	|					КОГДА АдресаДляИнформирования.ТипКвартиры В (ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.Квартира), ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.ПустаяСсылка))
	|						ТОГДА ""кв.""
	|					ИНАЧЕ ""оф.""
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК АдресДляИнформирования,
	|	ВЫБОР
	|		КОГДА ФизЛица.ФизЛицо.СтраховойНомерПФР = """"
	|			ТОГДА ИСТИНА
	|		КОГДА ФизЛица.ФизЛицо.СтраховойНомерПФР = ""   -   -      ""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НетСтраховогоНомера,
	|	ЕСТЬNULL(ФИО.Фамилия, """") КАК Фамилия,
	|	ЕСТЬNULL(ФИО.Имя, """") КАК Имя,
	|	ЕСТЬNULL(ФИО.Отчество, """") КАК Отчество,
	|	ФизЛица.ФизЛицо.СтраховойНомерПФР КАК СтраховойНомерПФР
	|ИЗ
	|	ВТФизЛица КАК ФизЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизЛицаСЗВ41 КАК ФизЛицаСЗВ41
	|		ПО ФизЛица.ФизЛицо = ФизЛицаСЗВ41.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресаДляИнформирования
	|		ПО ФизЛица.ФизЛицо = АдресаДляИнформирования.Объект
	|			И (АдресаДляИнформирования.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ИнформАдресФизЛица))
	|			И (АдресаДляИнформирования.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПереданныеВПФРАдреса КАК ПереданныеВПФРАдреса
	|		ПО ФизЛица.ФизЛицо = ПереданныеВПФРАдреса.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИО КАК ФИО
	|		ПО ФизЛица.ФизЛицо = ФИО.ФизЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТипФормДокументов,
	|	ТерриториальныеУсловия,
	|	ВОтпускеПоУходу,
	|	ЯвляетсяЛетчиком,
	|	Наименование,
	|	ФизЛицо";
	
	Попытка 
		Выборка = Запрос.Выполнить().Выбрать();
	Исключение
		ПоказатьИнформациюОбОшибке(ОбщегоНазначения.ПолучитьПричинуОшибки(ИнформацияОбОшибке()));
		Возврат;
	КонецПопытки;
	
	СписокФизЛицБезСтрахНомеров = Новый СписокЗначений;
	
	Если Выборка.Количество() > 0 Тогда
		
		ПачкиДокументов.Строки.Очистить();
		
		ДокАДВ11 = Документы.ПередачаСЗВ4вПФР.СоздатьДокумент();
		ЗаполнениеДокументовПереопределяемый.ЗаполнитьШапкуДокумента(ДокАДВ11, глЗначениеПеременной("глТекущийПользователь"));
		ДокАДВ11.Организация = Организация;
		ДокАДВ11.ОтчетныйПериод = Дата(РасчетныйПериод, 1, 1);
		ДокАДВ11.ДатаДействия = Дата(РасчетныйПериод, 12, 31);
		ДокАДВ11.ТипСведений = ?(ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, "ИСХД", "ПЕНС");
		ДокАДВ11.ФорматФайла = ФорматФайла;
		ДокАДВ11.Дата = ДатаСозданияДокументов;
		ДокАДВ11.УстановитьНовыйНомер();
		ДокАДВ11.УстановитьСсылкуНового(Документы.ПередачаСЗВ4ВПФР.ПолучитьСсылку());
   		ЗаполнитьЗначенияСвойств(ДокАДВ11, ПроцедурыПерсонифицированногоУчета.ДанныеРуководителяОрганизации(Организация, ДатаСозданияДокументов));
		
		СтрокаПачкиДокументовАДВ11 = ПачкиДокументов.Строки.Добавить();
		СтрокаПачкиДокументовАДВ11.ДокументОбъект = ДокАДВ11;
		СтрокаПачкиДокументовАДВ11.Пачка = ДокАДВ11.ПолучитьСсылкуНового();
		
		СтрокаДанныхДокумента = "Организация, Руководитель, ДолжностьРуководителя, Ответственный, ОтчетныйПериод, ФорматФайла, Дата";
		
		Пока Выборка.СледующийПоЗначениюПоля("ТипФормДокументов") Цикл
			
			Пока Выборка.СледующийПоЗначениюПоля("ТерриториальныеУсловия") Цикл
				
				Пока Выборка.СледующийПоЗначениюПоля("ВОтпускеПоУходу") Цикл
					
					Пока Выборка.СледующийПоЗначениюПоля("ЯвляетсяЛетчиком") Цикл
						// Создадим документ СЗВ-4
						НовыйДок = Документы.СведенияОТрудовомСтажеИЗаработкеСЗВ4.СоздатьДокумент();
						НовыйДок.ТипСведенийСЗВ = ТипСведений;
						НовыйДок.УстановитьСсылкуНового(Документы.СведенияОТрудовомСтажеИЗаработкеСЗВ4.ПолучитьСсылку());
						ЗаполнитьЗначенияСвойств(НовыйДок,ДокАДВ11,СтрокаДанныхДокумента);
						ЗаполнитьЗначенияСвойств(НовыйДок,Выборка,"ТипФормДокументов,ТерриториальныеУсловия");
						
						НовыйДок.УстановитьНовыйНомер();
						
						Пока Выборка.Следующий() Цикл
							
							// Если у физлица нет страхового номера, то в пачки его включать не будем: проверка на указание пустого или неверного страхового номера ("   -   -      ")
							Если Выборка.НетСтраховогоНомера Тогда
								СписокФизЛицБезСтрахНомеров.Добавить(Выборка.ФизЛицо, Выборка.Наименование);
								Продолжить;
							КонецЕсли;	
							
							Если НовыйДок.РаботникиОрганизации.Количество() = 200  Тогда
								
								// Сохраним пачку СЗВ-4
								СтрокаПачкиДокументовСЗВ4 = СтрокаПачкиДокументовАДВ11.Строки.Добавить();
								СтрокаПачкиДокументовСЗВ4.ДокументОбъект = НовыйДок;
								СтрокаПачкиДокументовСЗВ4.Пачка = НовыйДок.ПолучитьСсылкуНового();
								
								// Добавим пачку в ведомость АДВ-11
								НоваяСтрокаПачка = СтрокаПачкиДокументовАДВ11.ДокументОбъект.ПачкиДокументов.Добавить();
								НоваяСтрокаПачка.ДокументПачка = СтрокаПачкиДокументовСЗВ4.Пачка;
								ЗаполнитьЗначенияСвойств(НоваяСтрокаПачка,НовыйДок,"ТерриториальныеУсловия,ТипФормДокументов,ВидКорректировки");
								
								// Создадим документ СЗВ-4
								НовыйДок = Документы.СведенияОТрудовомСтажеИЗаработкеСЗВ4.СоздатьДокумент();
								НовыйДок.УстановитьСсылкуНового(Документы.СведенияОТрудовомСтажеИЗаработкеСЗВ4.ПолучитьСсылку());
								НовыйДок.ТипСведенийСЗВ = ТипСведений;
								ЗаполнитьЗначенияСвойств(НовыйДок,ДокАДВ11,СтрокаДанныхДокумента);
								ЗаполнитьЗначенияСвойств(НовыйДок,Выборка,"ТипФормДокументов,ТерриториальныеУсловия");
								
								НовыйДок.УстановитьНовыйНомер();
								
							КонецЕсли; 
							
							ЗаполнитьЗначенияСвойств(НовыйДок.РаботникиОрганизации.Добавить(),Выборка,"ФизЛицо,АдресДляИнформирования,СтраховойНомерПФР,Фамилия,Имя,Отчество");
							
						КонецЦикла;
						
						Если НовыйДок.РаботникиОрганизации.Количество() <> 0 Тогда
							
							// Сохраним пачку СЗВ-4
							СтрокаПачкиДокументовСЗВ4 = СтрокаПачкиДокументовАДВ11.Строки.Добавить();
							СтрокаПачкиДокументовСЗВ4.ДокументОбъект = НовыйДок;
							СтрокаПачкиДокументовСЗВ4.Пачка = НовыйДок.ПолучитьСсылкуНового();
							
							// Добавим пачку в ведомость АДВ-11
							НоваяСтрокаПачка = СтрокаПачкиДокументовАДВ11.ДокументОбъект.ПачкиДокументов.Добавить();
							НоваяСтрокаПачка.ДокументПачка = СтрокаПачкиДокументовСЗВ4.Пачка;
							ЗаполнитьЗначенияСвойств(НоваяСтрокаПачка,НовыйДок,"ТерриториальныеУсловия,ТипФормДокументов,ВидКорректировки");
							
						КонецЕсли;
					КонецЦикла; 
				КонецЦикла; 
			КонецЦикла; 
		КонецЦикла; 
	КонецЕсли;
	Если СписокФизЛицБезСтрахНомеров.Количество() > 0 Тогда
		
		МассивФизЛиц = Новый Массив;
		Для Каждого ЭлементСписка Из СписокФизЛицБезСтрахНомеров Цикл
			
			МассивФизЛиц.Добавить(Новый Структура("Представление, Расшифровка", ЭлементСписка.Представление, ЭлементСписка.Значение));
		КонецЦикла;
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру("Следующие физические лица не включены в пачки документов перс.учета из-за отсутствия страховых номеров ПФР:", Перечисления.ВидыСообщений.ВажнаяИнформация, МассивФизЛиц));
		
		ВывестиСообщенияОбОшибках();
	КонецЕсли; 
	
КонецПроцедуры


// Создает сведения СЗВ-4
//
Процедура АвтозаполнениеСведений(ДатаОкончанияМежрасчетногоПериода = Неопределено, СписокФизЛиц = Неопределено) 
	
	Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ И ЗначениеЗаполнено(ДатаОкончанияМежрасчетногоПериода) Тогда
		ПроцедурыПерсонифицированногоУчета.ФормированиеСведенийОСтажеИЗаработке(РасчетныйПериод, Организация, ДатаОкончанияМежрасчетногоПериода, СписокФизЛиц);
	Иначе
		ПроцедурыПерсонифицированногоУчета.ФормированиеСведенийОСтажеИЗаработке(РасчетныйПериод, Организация);
	КонецЕсли;

КонецПроцедуры // АвтозаполнениеСведений()


// Процедура разворачивает дерево Пачки документов
//
Процедура РазвернутьПачкиДокументов()
	Для Каждого СтрокаДерева Из ПачкиДокументов.Строки Цикл
		ЭлементыФормы.ПачкиДокументов.Развернуть(СтрокаДерева, Истина);
	КонецЦикла;
	
	Если НЕ ЗначениеЗаполнено(ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока)
		И ПачкиДокументов.Строки.Количество() > 0 Тогда
		ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока = ПачкиДокументов.Строки.Получить(0);
		ЭлементыФормы.ПачкиДокументов.ТекущаяКолонка = ЭлементыФормы.ПачкиДокументов.Колонки.Получить(0); 
	КонецЕсли;
КонецПроцедуры // РазвернутьПачкиДокументов()

// Процедура выводить сообщения в специальное окно сообщений
// тексты сообщений берутся из переменной МассивСообщений
//
Процедура ВывестиСообщенияОбОшибках()
	
	Если МассивСообщений.Количество() > 0 Тогда
		ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаКомментариев.УдалитьСообщения();
		ОбработкаКомментариев.ДобавитьСообщение(Заголовок, Перечисления.ВидыСообщений.Раздел);
		Для каждого ЭлементМассива Из МассивСообщений Цикл
			Если ЭлементМассива.РасшифровкаСообщения <> Неопределено И ЭлементМассива.РасшифровкаСообщения.Количество() > 1 Тогда
				РодительскаяСтрока = ОбработкаКомментариев.ДобавитьСообщение(ЭлементМассива.ТекстСообщения, ЭлементМассива.ВидСообщения);
				Для Каждого ЭлементРасшифровки Из ЭлементМассива.РасшифровкаСообщения Цикл
					МассивРасшифровки = Новый Массив;
					МассивРасшифровки.Добавить(Новый Структура("Представление, Расшифровка", ЭлементРасшифровки.Представление, ЭлементРасшифровки.Расшифровка));
					ОбработкаКомментариев.ДобавитьСообщение("", Перечисления.ВидыСообщений.Информация, МассивРасшифровки, РодительскаяСтрока);
					
				КонецЦикла;
			Иначе
				ОбработкаКомментариев.ДобавитьСообщение(ЭлементМассива.ТекстСообщения, ЭлементМассива.ВидСообщения, ЭлементМассива.РасшифровкаСообщения);
			КонецЕсли
			
		КонецЦикла;
		ОбработкаКомментариев.ПоказатьСообщения();
	КонецЕсли;	
	
КонецПроцедуры // ВывестиСообщенияОбОшибках()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНОЙ ПАНЕЛИ ФОРМЫ КоманднаяПанельПачки

Процедура КоманднаяПанельПачкиСЗВ4(Кнопка)
	Если УдерживатьТекущийДокумент Тогда
		ПроверкаУникальностиНомераДокумента(ЭлементыФормы.ПачкиДокументов.ТекущиеДанные.ДокументОбъект);
		Возврат;
	КонецЕсли;

	ВыполнитьСохранениеДанныхФизлица();
	Если Не УдерживатьТекущуюСтроку Тогда	
		
		ТекущаяСтрока = ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока;
		Если ПачкиДокументов.Строки.Количество() = 0 
			ИЛИ ТекущаяСтрока = Неопределено 
			ИЛИ (ТекущаяСтрока.Родитель = Неопределено 
			И ТипЗнч(ТекущаяСтрока.Пачка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4"))Тогда
			// Создаем новую пачку АДВ-11 и вставляем туда СЗВ-4
			ТекущаяСтрока = СоздатьАДВ11();
			СтрокаПачки = ТекущаяСтрока.Строки.Добавить();
		ИначеЕсли ТипЗНч(ТекущаяСтрока.Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
			// Установились на пачку АДВ-11
			Если ТекущаяСтрока.Пачка.ПринятоВПФР Тогда
				Предупреждение("Текущая пачка АДВ-11 уже принята в ПФР!");
				Возврат;
			КонецЕсли;
			СтрокаПачки = ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.Строки.Добавить();
		ИначеЕсли ТипЗнч(ТекущаяСтрока.Родитель.Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
			// Находимся внутри пачки АДВ-11
			Если ТекущаяСтрока.Родитель.Пачка.ПринятоВПФР Тогда
				Предупреждение("Текущая пачка АДВ-11 уже принята в ПФР!");
				Возврат;
			КонецЕсли;
			СтрокаПачки = ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.Родитель.Строки.Добавить();
		Иначе
			// Создаем новую пачку АДВ-11 и вставляем туда СЗВ-4
			ТекущаяСтрока = СоздатьАДВ11();
			СтрокаПачки = ТекущаяСтрока.Строки.Добавить();
		КонецЕсли;
		ДокОбъект = Документы.СведенияОТрудовомСтажеИЗаработкеСЗВ4.СоздатьДокумент();
		ДокОбъект.Дата = ТекущаяДата();
		ДокОбъект.Организация = Организация;
		ДокОбъект.ОтчетныйПериод = Дата(РасчетныйПериод, 1, 1);
		ДокОбъект.ТипСведенийСЗВ = ТипСведений;
		ДокОбъект.ТипФормДокументов = "СЗВ-4-2";
		ДокОбъект.ФорматФайла = ФорматФайла;
		ДокОбъект.Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
		ДокОбъект.УстановитьНовыйНомер();
		Если ДокОбъект.Ответственный.Пустая() Тогда
			ДокОбъект.Ответственный = глЗначениеПеременной("глТекущийПользователь")
		КонецЕсли;
		ДокОбъект.УстановитьСсылкуНового(Документы.СведенияОТрудовомСтажеИЗаработкеСЗВ4.ПолучитьСсылку());
		СтрокаПачки.ДокументОбъект = ДокОбъект;
		СтрокаПачки.Пачка = ДокОбъект.ПолучитьСсылкуНового();
		СтрокаПачки.Родитель.ДокументОбъект.ПачкиДокументов.Добавить().ДокументПачка = СтрокаПачки.Пачка;
		
		ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока = СтрокаПачки;
		ЭлементыФормы.ПачкиДокументов.ОбновитьСтроки();
	КонецЕсли;

КонецПроцедуры

Процедура КоманднаяПанельПачкиАДВ11(Кнопка)
	Если УдерживатьТекущийДокумент Тогда
		ПроверкаУникальностиНомераДокумента(ЭлементыФормы.ПачкиДокументов.ТекущиеДанные.ДокументОбъект);
		Возврат;
	КонецЕсли;

	ВыполнитьСохранениеДанныхФизлица();
	Если Не УдерживатьТекущуюСтроку Тогда
		СтрокаПачки = ПачкиДокументов.Строки.Добавить();
		ДокОбъект = Документы.ПередачаСЗВ4вПФР.СоздатьДокумент();
		ДокОбъект.Дата = ТекущаяДата();
		ДокОбъект.Организация = Организация;
		ДокОбъект.ДатаДействия = Дата(РасчетныйПериод, 12, 31);
		ДокОбъект.ОтчетныйПериод = Дата(РасчетныйПериод, 1, 1);
		ДокОбъект.ТипСведений = ?(ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, "ИСХД", "ПЕНС");
		ДокОбъект.Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
		ДокОбъект.УстановитьНовыйНомер();
		Если ДокОбъект.Ответственный.Пустая() Тогда
			ДокОбъект.Ответственный = глЗначениеПеременной("глТекущийПользователь")
		КонецЕсли;
		ДокОбъект.ФорматФайла = ФорматФайла;
		ДокОбъект.УстановитьСсылкуНового(Документы.ПередачаСЗВ4вПФР.ПолучитьСсылку());
		
		СтрокаПачки.ДокументОбъект = ДокОбъект;
		СтрокаПачки.Пачка = ДокОбъект.ПолучитьСсылкуНового();

		ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока = СтрокаПачки;		
		ЭлементыФормы.ПачкиДокументов.ОбновитьСтроки();
	КонецЕсли;
КонецПроцедуры


Процедура КоманднаяПанельПачкиПометитьНаУдаление(Кнопка)
	ВыполнитьСохранениеДанныхФизлица();
	Если Не УдерживатьТекущуюСтроку Тогда	
		
		ТекущаяСтрока = ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока;
		Если ПачкиДокументов.Строки.Количество() = 0 
			ИЛИ ТекущаяСтрока = Неопределено 
			ИЛИ (ТекущаяСтрока.Родитель = Неопределено 
			И ТипЗнч(ТекущаяСтрока.Пачка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4"))Тогда
			// Позволяем удалить строку

		ИначеЕсли ТипЗНч(ТекущаяСтрока.Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
			// Установились на пачку АДВ-11
			Если ТекущаяСтрока.Пачка.ПринятоВПФР Тогда
				Предупреждение("Текущая пачка АДВ-11 уже принята в ПФР!");
				Возврат;
			КонецЕсли;
		ИначеЕсли ТипЗнч(ТекущаяСтрока.Родитель.Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
			// Находимся внутри пачки АДВ-11
			Если ТекущаяСтрока.Родитель.Пачка.ПринятоВПФР Тогда
				Предупреждение("Текущая пачка АДВ-11 уже принята в ПФР!");
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		
		
		Если ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока <> Неопределено Тогда
			Ответ = Вопрос("Вы действительно хотите пометить пачку на удаление?", РежимДиалогаВопрос.ДаНет, 0);
			Если Ответ = КодВозвратаДиалога.Да Тогда
				ОбновитьЭлементыФормыПриИзменененииПачки(ЭлементыФормы.ПачкиДокументов);
				ТекущаяСтрокаДерева = ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока;
				Если ТекущаяСтрокаДерева.Родитель = Неопределено Тогда
					ПачкиДокументов.Строки.Удалить(ТекущаяСтрокаДерева);	
				Иначе
					ТаблЧастьОбъекта = ТекущаяСтрокаДерева.Родитель.ДокументОбъект.ПачкиДокументов;
					СтрокаТаблЧастиОбъекта = ТаблЧастьОбъекта.Найти(ТекущаяСтрокаДерева.Пачка, "ДокументПачка");
					Если СтрокаТаблЧастиОбъекта <> Неопределено Тогда
						ТаблЧастьОбъекта.Удалить(СтрокаТаблЧастиОбъекта);
					КонецЕсли;
					ТекущаяСтрокаДерева.Родитель.Строки.Удалить(ТекущаяСтрокаДерева);
					
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

Процедура КоманднаяПанельПачкиПринятоВПФР(Кнопка)
	Если УдерживатьТекущийДокумент Тогда
		ПроверкаУникальностиНомераДокумента(ЭлементыФормы.ПачкиДокументов.ТекущиеДанные.ДокументОбъект);
		Возврат;
	КонецЕсли;

	Если ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока <> Неопределено Тогда
		ОбновитьЭлементыФормыПриИзменененииПачки(ЭлементыФормы.ПачкиДокументов);
		Если НЕ ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.Пачка.Пустая() Тогда
			
			Попытка
				Для Каждого СтрокаДокумента Из ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.Строки Цикл
					ДокументОбъект = СтрокаДокумента.ДокументОбъект;
					ДокументОбъект.ПринятоВПФР = Истина;
					ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
				 
				КонецЦикла;
				
				ДокументОбъект  = ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.ДокументОбъект;
				ДокументОбъект.ПринятоВПФР = Истина;
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
				
				
			Исключение
				ПоказатьИнформациюОбОшибке(ОбщегоНазначения.ПолучитьПричинуОшибки(ИнформацияОбОшибке()));
				ДокументОбъект.ПринятоВПФР = Ложь;
				
			КонецПопытки;

		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельПачкиПеренестиСЗВ4(Кнопка)
	ТекущаяСтрока = ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		ТекущийДок = ТекущаяСтрока.Пачка;
		Если ТипЗнч(ТекущийДок) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
			ТекущийДокАДВ11 = ТекущаяСтрока.Родитель;
			СпПачек = Новый СписокЗначений;
			Для Каждого СтрокаТЧ Из ПачкиДокументов.Строки Цикл
				Если СтрокаТЧ.Пачка <> ТекущийДокАДВ11 и Не СтрокаТЧ.Пачка.Пустая()
					И ТипЗнч(СтрокаТЧ.Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") 
					И НЕ СтрокаТЧ.Пачка.ПринятоВПФР Тогда
					СпПачек.Добавить(СтрокаТЧ.ДокументОбъект, "АДВ-11 №" + СтрокаТЧ.ДокументОбъект.Номер);
				КонецЕсли;
			КонецЦикла;
			Если СпПачек.Количество() = 0 Тогда
				Предупреждение("В списке пачек присутствует единственная пачка. Перенос сотрудника невозможен!")
			ИначеЕсли СпПачек.Количество() = 1 Тогда
				НоваяПачка = СпПачек[0].Значение
			ИначеЕсли СпПачек.Количество() > 1 Тогда
				ЭлементНоваяПачка = ВыбратьИзМеню(СпПачек,ЭлементыФормы.КоманднаяПанельПачки);
				Если ЭлементНоваяПачка = Неопределено Тогда
					Возврат;
				КонецЕсли;
				НоваяПачка = ЭлементНоваяПачка.Значение;
			КонецЕсли;
			Если НоваяПачка <> Неопределено Тогда
				ДобавлСтрока = НоваяПачка.ПачкиДокументов.Добавить();
				ДобавлСтрока.ДокументПачка = ТекущийДок;
				Если ТекущийДокАДВ11 <> Неопределено Тогда
					СтрокаУдДокумента = ТекущийДокАДВ11.ДокументОбъект.ПачкиДокументов.Найти(ТекущийДок, "ДокументПачка");
					ТекущийДокАДВ11.ДокументОбъект.ПачкиДокументов.Удалить(СтрокаУдДокумента);
				КонецЕсли;
				Для Каждого СтрокаАДВ11 Из ПачкиДокументов.Строки Цикл
					Если СтрокаАДВ11.ДокументОбъект = НоваяПачка Тогда
						СтрокаСЗВ4 = СтрокаАДВ11.Строки.Добавить();
						СтрокаСЗВ4.ДокументОбъект = ТекущаяСтрока.ДокументОбъект;
						СтрокаСЗВ4.Пачка = ТекущаяСтрока.Пачка;
						Если ТекущаяСтрока.Родитель = Неопределено Тогда
							ПачкиДокументов.Строки.Удалить(ТекущаяСтрока);
						Иначе
							ТекущаяСтрока.Родитель.Строки.Удалить(ТекущаяСтрока);
						КонецЕсли;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры


Процедура КоманднаяПанельПачкиДействиеОбновить(Кнопка)
	Если УдерживатьТекущийДокумент Тогда
		ПроверкаУникальностиНомераДокумента(ЭлементыФормы.ПачкиДокументов.ТекущиеДанные.ДокументОбъект);
		Возврат;
	КонецЕсли;
	ОбновитьЭлементыФормыПриИзменененииПачки(ЭлементыФормы.ПачкиДокументов);
	Отказ = Ложь;
	СохранитьТекущиеДанные(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	ОбновитьПачкиДокументов();
	РазвернутьПачкиДокументов();
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНОЙ ПАНЕЛИ ФОРМЫ ФизЛицаПачек


Процедура КоманднаяПанельФизлицаПачекПеренести(Кнопка)
	
	ТекущаяСтрока = ЭлементыФормы.ФизлицаПачек.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		
		ТекущийДок = ДокументОбъектДляПоказаФизлиц;
		СпПачек = Новый СписокЗначений;
		Для Каждого СтрокаТЧ Из ПачкиДокументов.Строки Цикл
			Если СтрокаТЧ.ДокументОбъект <> ТекущийДок и Не СтрокаТЧ.Пачка.Пустая()
				И ТипЗнч(СтрокаТЧ.Пачка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
				СпПачек.Добавить(СтрокаТЧ, СтрокаТЧ.ДокументОбъект.ТипФормДокументов + " №" + СтрокаТЧ.ДокументОбъект.Номер);
				
			КонецЕсли;
			Для Каждого ВнутрСтрокаТЧ Из СтрокаТЧ.Строки Цикл
				Если ВнутрСтрокаТЧ.ДокументОбъект <> ТекущийДок и Не ВнутрСтрокаТЧ.Пачка.Пустая()
					И ТипЗнч(ВнутрСтрокаТЧ.Пачка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
					СпПачек.Добавить(ВнутрСтрокаТЧ, ВнутрСтрокаТЧ.ДокументОбъект.ТипФормДокументов + " №" + ВнутрСтрокаТЧ.ДокументОбъект.Номер);
				КонецЕсли;		
			КонецЦикла;
		КонецЦикла;
		Если СпПачек.Количество() = 0 Тогда
			Предупреждение("В списке пачек присутствует единственная пачка. Перенос сотрудника невозможен!")
		ИначеЕсли СпПачек.Количество() = 1 Тогда
			НоваяПачка = СпПачек[0].Значение
		ИначеЕсли СпПачек.Количество() > 1 Тогда
			ЭлементНоваяПачка = ВыбратьИзМеню(СпПачек,ЭлементыФормы.КоманднаяПанельФизлицаПачек);
			Если ЭлементНоваяПачка = Неопределено Тогда
				Возврат;
			КонецЕсли;
			НоваяПачка = ЭлементНоваяПачка.Значение;
		КонецЕсли;
		Если НоваяПачка <> Неопределено Тогда
			НоваяПачка.ДокументОбъект.РаботникиОрганизации.Добавить().ФизЛицо = ТекущаяСтрока.Физлицо;
			ДокументОбъектДляПоказаФизЛиц.РаботникиОрганизации.Удалить(ТекущаяСтрока.НомерСтроки - 1);
			Обновить();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ


Процедура ОрганизацияПриИзменении(Элемент)
	Отказ = Ложь;
	Если ВыбраннаяОрганизация = Организация Тогда
		Возврат;
	КонецЕсли;
	Если УдерживатьТекущийДокумент Тогда
		Организация = ВыбраннаяОрганизация;
		ПроверкаУникальностиНомераДокумента(ЭлементыФормы.ПачкиДокументов.ТекущиеДанные.ДокументОбъект);
		Возврат;
	КонецЕсли;
	СохранитьТекущиеДанные(Отказ);
	Если Отказ Тогда
		Организация = ВыбраннаяОрганизация;
		Возврат;
	КонецЕсли;
	
	ВыполнитьСохранениеДанныхФизлица(ВыбраннаяОрганизация);
	
	Если УдерживатьТекущуюСтроку Тогда
		Организация = ВыбраннаяОрганизация;
		Возврат;
	КонецЕсли;
	ФизЛицо = Неопределено;
	ОбновитьПачкиДокументов();
	РазвернутьПачкиДокументов();
	ВыбраннаяОрганизация = Организация;
	УстановитьВидимостьПанелиВсеСуммыСтраховыхВзносов();
КонецПроцедуры

Процедура НомерПачкиПриИзменении(Элемент)
	
	ПроверкаУникальностиНомераДокумента(ДокументОбъектАДВ11);
КонецПроцедуры

Процедура НомерПачки1ПриИзменении(Элемент)
	
	ПроверкаУникальностиНомераДокумента(ДокументОбъектДляПоказаФизлиц);
КонецПроцедуры


Процедура РасчетныйПериодПриИзменении(Элемент)
	Отказ = Ложь;
	Если ВыбранныйРасчетныйПериод = РасчетныйПериод Тогда
		Возврат;
	КонецЕсли;
	Если УдерживатьТекущийДокумент Тогда
		РасчетныйПериод = ВыбранныйРасчетныйПериод;
		ПроверкаУникальностиНомераДокумента(ЭлементыФормы.ПачкиДокументов.ТекущиеДанные.ДокументОбъект);
		Возврат;
	КонецЕсли;
	СохранитьТекущиеДанные(Отказ);
	Если Отказ Тогда
		РасчетныйПериод = ВыбранныйРасчетныйПериод;
		Возврат;
	КонецЕсли;
	ВыполнитьСохранениеДанныхФизлица(Организация, ВыбранныйРасчетныйПериод);
	Если УдерживатьТекущуюСтроку Тогда
		РасчетныйПериод = ВыбранныйРасчетныйПериод;
		Возврат;
	КонецЕсли;

	ФизЛицо = Неопределено;
	Если РасчетныйПериод > 2006 Тогда
		ФорматФайла = Перечисления.ФорматФайлаПФР.Версия07;
	Иначе
		ФорматФайла = Перечисления.ФорматФайлаПФР.Версия04;
	КонецЕсли;
	
	ПоказатьЭлементыФормыПоГоду(РасчетныйПериод);
	
	УстановитьЗаголовокРамкиСтажа();
	ОбновитьПачкиДокументов();
	РазвернутьПачкиДокументов();
	ВыбранныйРасчетныйПериод = РасчетныйПериод;
	
КонецПроцедуры

Процедура ПоказатьЭлементыФормыПоГоду(Год)

	ЭлементыФормы.Сформировать.Доступность = Год < 2010;
	
	ЭлементыФормы.ПачкиДокументов.ТолькоПросмотр = Год > 2009;
	ЭлементыФормы.ФизлицаПачек.ТолькоПросмотр = Год > 2009;
	ЭлементыФормы.ПанельДокумент.Доступность = Год < 2010;
	ЭлементыФормы.ПанельСтажФизлица.Доступность = Год < 2010;
	ЭлементыФормы.ПанельВзносыИОтсутствия.Доступность = Год < 2010;
	
	ЭлементыФормы.НадписьДокументы2010.Видимость = Год > 2009;
	ЭлементыФормы.НадписьДокументы2010.Заголовок = "Данные за " + Формат(Год,"ЧЦ=4; ЧГ=0") + " год формируются в документе " + ?(ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ,"""Опись сведений АДВ-6-2""","""Сведения о взносах и стаже СПВ-1""") + "!";
	ЭлементыФормы.НадписьПерейти.Видимость = Год > 2009;

КонецПроцедуры

Процедура ФорматФайлаПриИзменении(Элемент)
	Отказ = Ложь;
	Если ВыбранныйФорматФайла = ФорматФайла Тогда
		Возврат;
	КонецЕсли;
	Если УдерживатьТекущийДокумент Тогда
		ФорматФайла = ВыбранныйФорматФайла;
		ПроверкаУникальностиНомераДокумента(ЭлементыФормы.ПачкиДокументов.ТекущиеДанные.ДокументОбъект);
		Возврат;
	КонецЕсли;
	СохранитьТекущиеДанные(Отказ);
	Если Отказ Тогда
		ФорматФайла = ВыбранныйФорматФайла;
		Возврат;
	КонецЕсли;
	ВыполнитьСохранениеДанныхФизлица(Организация, РасчетныйПериод);
	Если УдерживатьТекущуюСтроку Тогда
		ФорматФайла = ВыбранныйФорматФайла;
		Возврат;
	КонецЕсли;

	ФизЛицо = Неопределено;
	ОбновитьПачкиДокументов();
	РазвернутьПачкиДокументов();
	ВыбранныйФорматФайла = ФорматФайла;
КонецПроцедуры


Процедура ПереключательТипСведенийПриИзменении(Элемент)
	Отказ = Ложь;
	
	Если УдерживатьТекущийДокумент Тогда
		ТипСведений = ВыбранныйТипСведений;
		ПроверкаУникальностиНомераДокумента(ЭлементыФормы.ПачкиДокументов.ТекущиеДанные.ДокументОбъект);
		Возврат;
	КонецЕсли;

	СохранитьТекущиеДанные(Отказ);
	Если Отказ Тогда
		ТипСведений = ВыбранныйТипСведений;
		Возврат;
	КонецЕсли;
	ЭлементыФормы.НадписьДокументы2010.Заголовок = "Данные за " + Формат(РасчетныйПериод,"ЧЦ=4; ЧГ=0") + " год формируются в документе " + ?(ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ,"""Опись сведений АДВ-6-2""","""Сведения о взносах и стаже СПВ-1""") + "!";
	ВыполнитьСохранениеДанныхФизлица(Организация, РасчетныйПериод);
	Если УдерживатьТекущуюСтроку Тогда
		ТипСведений = ВыбранныйТипСведений;
		Возврат;
	КонецЕсли;

	ФизЛицо = Неопределено;
	ОбновитьПачкиДокументов();
	РазвернутьПачкиДокументов();
	ВыбранныйТипСведений = ТипСведений;
КонецПроцедуры

Процедура АдресДляИнформированияПриИзменении(Элемент)
	ЭлементыФормы.ФизЛицаПачек.ТекущаяСтрока.АдресДляИнформирования = АдресДляИнформирования;
КонецПроцедуры

Процедура АдресДляИнформированияНачалоВыбора(Элемент, СтандартнаяОбработка)
	УправлениеКонтактнойИнформацией.РедактироватьМодальноЭлементАдреса(Элемент, ЭтаФорма, "ФормаРедактированияАдресаРегистрацииПоСтроке"+ЭлементыФормы.ФизЛицаПачек.ТекущаяСтрока.НомерСтроки);
	ЭлементыФормы.ФизЛицаПачек.ТекущаяСтрока.АдресДляИнформирования = АдресДляИнформирования;
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура СформироватьНажатие(Элемент)
	
	МассивСообщений.Очистить();
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру(ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Не указана организация!"), Перечисления.ВидыСообщений.Ошибка));
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ФорматФайла) Тогда
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру("Не указан формат файла!", Перечисления.ВидыСообщений.Ошибка));
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РегламентированныйПроизводственныйКалендарь.ДатаКалендаря) КАК КоличествоДней
	                      |ИЗ
	                      |	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	                      |ГДЕ
	                      |	РегламентированныйПроизводственныйКалендарь.Год = &Год");
	Запрос.УстановитьПараметр("Год", РасчетныйПериод);						
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() И Выборка.КоличествоДней = 0 Тогда
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру("Не заполнен регламентированный производственный календарь за " + Формат(РасчетныйПериод, "ЧГ=5") + " год!", Перечисления.ВидыСообщений.Ошибка));
	КонецЕсли;
	
	
	Если МассивСообщений.Количество() > 0 Тогда
		ВывестиСообщенияОбОшибках();
		Возврат;
	КонецЕсли;
	
	Если ПачкиДокументов.Строки.Количество() > 0 Тогда
		Вопрос = "Текущие документы будут потеряны. Продолжить?";
		Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ДатаОкончанияМежрасчетногоПериода = Неопределено;
	СписокФизЛиц = Неопределено;
	Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
		
		ФормаВводаДаты = ПолучитьФорму("ФормаВводаДаты");
		ДатаОкончанияМежрасчетногоПериода = ?(РасчетныйПериод = Год(ТекущаяДата()), ТекущаяДата(), КонецГода(Дата(РасчетныйПериод, 1, 1)));
		ФормаВводаДаты.ДатаОкончанияМежрасчетногоПериода = ДатаОкончанияМежрасчетногоПериода;
		ФормаВводаДаты.мГоловнаяОрганизация = Организация;
		ВозврЗначение = ФормаВводаДаты.ОткрытьМодально();
		Если ЗначениеЗаполнено(ВозврЗначение) Тогда
			ДатаОкончанияМежрасчетногоПериода = ВозврЗначение.ДатаОкончанияМежрасчетногоПериода;
			СписокФизЛиц = ВозврЗначение.СписокФизЛиц;
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Состояние("Происходит формирование сведений СЗВ-4, это может занять продолжительное время...");
	АвтозаполнениеСведений(ДатаОкончанияМежрасчетногоПериода, СписокФизЛиц);
	
	АвтозаполнениеПачек(Ложь, СписокФизЛиц);
	РазвернутьПачкиДокументов();
КонецПроцедуры

Процедура ТаблицаСсылокСЗВ4Выбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	ВыбранныйДокумент = ВыбраннаяСтрока.Значение;
	ВыбраннаяСтрокаВПачке = Неопределено;
	Для Каждого СтрокаПервогоУровня Из ПачкиДокументов.Строки Цикл
		Если СтрокаПервогоУровня.Пачка = ВыбранныйДокумент Тогда
			ВыбраннаяСтрокаВПачке = СтрокаПервогоУровня;
			Прервать;
		КонецЕсли;
		Для Каждого СтрокаВторогоУровня Из СтрокаПервогоУровня.Строки Цикл
			Если СтрокаВторогоУровня .Пачка = ВыбранныйДокумент Тогда
				ВыбраннаяСтрокаВПачке = СтрокаВторогоУровня;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	ЭлементыФормы.ПачкиДокументов.Развернуть(ВыбраннаяСтрокаВПачке.Родитель);
	ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока = ВыбраннаяСтрокаВПачке;
	
КонецПроцедуры


Процедура ПечатьПечатьВыбраныйДокумент(Кнопка)
	
	Если ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока <> Неопределено Тогда
		Отказ = Ложь;
		СохранитьТекущиеДанные(Отказ, РежимДиалогаВопрос.ОКОтмена);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		ОбновитьЭлементыФормыПриИзменененииПачки(ЭлементыФормы.ПачкиДокументов);
		
		Если НЕ ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.Пачка.Пустая() Тогда
			Если ТипЗнч(ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.Пачка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
				ОбъектПечати = ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.ДокументОбъект;
				ОбъектПечати.Печать(СтрЗаменить("Форма"+ОбъектПечати.ТипФормДокументов, "-", "_"));
			ИначеЕсли ТипЗнч(ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
				ОбъектПечати = ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.ДокументОбъект;
				ОбъектПечати.Печать("АДВ11");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПечатьПечатьВсеДокументы(Кнопка)
	Отказ = Ложь;
	СохранитьТекущиеДанные(Отказ, РежимДиалогаВопрос.ОКОтмена);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьЭлементыФормыПриИзменененииПачки(ЭлементыФормы.ПачкиДокументов);
	Для Каждого СтрокаПачка Из ПачкиДокументов.Строки Цикл
		Если НЕ СтрокаПачка.Пачка.Пустая() Тогда
			Если ТипЗнч(СтрокаПачка.Пачка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
				ОбъектПечати = СтрокаПачка.ДокументОбъект;
				ОбъектПечати.Печать(СтрЗаменить("Форма"+ОбъектПечати.ТипФормДокументов, "-", "_"));
			ИначеЕсли ТипЗнч(СтрокаПачка.Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
				ОбъектПечати = СтрокаПачка.ДокументОбъект;
				ОбъектПечати.Печать("АДВ11");
			КонецЕсли;
		КонецЕсли;
		Для Каждого СтрокаВнутрПачка Из СтрокаПачка.Строки Цикл
			Если НЕ СтрокаВнутрПачка.Пачка.Пустая() Тогда
				Если ТипЗнч(СтрокаВнутрПачка.Пачка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
					ОбъектПечати = СтрокаВнутрПачка.ДокументОбъект;
					ОбъектПечати.Печать(СтрЗаменить("Форма"+ОбъектПечати.ТипФормДокументов, "-", "_"));
				ИначеЕсли ТипЗнч(СтрокаВнутрПачка.Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
					ОбъектПечати = СтрокаВнутрПачка.ДокументОбъект;
					ОбъектПечати.Печать("АДВ11");
				КонецЕсли;
			КонецЕсли;
		КонецЦикла
		
	КонецЦикла;
КонецПроцедуры

Процедура ПоказатьФайлВыбранныйДокумент(Кнопка)
	
	Если ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока <> Неопределено Тогда
		Отказ = Ложь;
		СохранитьТекущиеДанные(Отказ, РежимДиалогаВопрос.ОКОтмена);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		ОбновитьЭлементыФормыПриИзменененииПачки(ЭлементыФормы.ПачкиДокументов);
		Если НЕ ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.Пачка.Пустая() Тогда
			Если ТипЗнч(ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.Пачка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
				ОбъектПечати = ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.ДокументОбъект;
				ПроцедурыПерсонифицированногоУчета.ПоказатьФайлДокумента(ОбъектПечати,"Файл-пачка документов СЗВ-4");
			ИначеЕсли ТипЗнч(ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
				ОбъектПечати = ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.ДокументОбъект;
				ПроцедурыПерсонифицированногоУчета.ПоказатьФайлДокумента(ОбъектПечати,"Файл-пачка ведомости уплаты страховых взносов");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПоказатьФайлПоказатьВсеФайлы(Кнопка)
	Отказ = Ложь;
	СохранитьТекущиеДанные(Отказ, РежимДиалогаВопрос.ОКОтмена);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьЭлементыФормыПриИзменененииПачки(ЭлементыФормы.ПачкиДокументов);
	Для Каждого СтрокаПачка Из ПачкиДокументов.Строки Цикл
		Если НЕ СтрокаПачка.Пачка.Пустая() Тогда
			Если ТипЗнч(СтрокаПачка.Пачка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
				ОбъектПечати = СтрокаПачка.ДокументОбъект;
				ПроцедурыПерсонифицированногоУчета.ПоказатьФайлДокумента(ОбъектПечати,"Файл-пачка документов СЗВ-4");
			ИначеЕсли ТипЗнч(СтрокаПачка.Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
				ОбъектПечати = СтрокаПачка.ДокументОбъект;
				ПроцедурыПерсонифицированногоУчета.ПоказатьФайлДокумента(ОбъектПечати,"Файл-пачка ведомости уплаты страховых взносов");
			КонецЕсли;
		КонецЕсли;
		Для Каждого СтрокаВнутрПачка Из СтрокаПачка.Строки Цикл
			Если НЕ СтрокаВнутрПачка.Пачка.Пустая() Тогда
				Если ТипЗнч(СтрокаВнутрПачка.Пачка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
					ОбъектПечати = СтрокаВнутрПачка.ДокументОбъект;
					ПроцедурыПерсонифицированногоУчета.ПоказатьФайлДокумента(ОбъектПечати,"Файл-пачка документов СЗВ-4");
				ИначеЕсли ТипЗнч(СтрокаВнутрПачка.Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
					ОбъектПечати = СтрокаВнутрПачка.ДокументОбъект;
					ПроцедурыПерсонифицированногоУчета.ПоказатьФайлДокумента(ОбъектПечати,"Файл-пачка ведомости уплаты страховых взносов");
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла	
	КонецЦикла;
КонецПроцедуры

Процедура НаДискНаДискПоВыбраномуДокументу(Кнопка)
	Если ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока <> Неопределено Тогда
		Отказ = Ложь;
		СохранитьТекущиеДанные(Отказ, РежимДиалогаВопрос.ОКОтмена);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		ОбновитьЭлементыФормыПриИзменененииПачки(ЭлементыФормы.ПачкиДокументов);
		Если НЕ ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.Пачка.Пустая() Тогда
			Если ФорматФайла = Перечисления.ФорматФайлаПФР.Версия04 Тогда
				КодировкаФайла = КодировкаТекста.OEM;
			ИначеЕсли ФорматФайла = Перечисления.ФорматФайлаПФР.Версия07 Тогда
				КодировкаФайла = КодировкаТекста.ANSI;
			КонецЕсли;
			ОбъектДействия = ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.ДокументОбъект;
			ПроцедурыПерсонифицированногоУчета.ЗаписатьФайлДокументаНаДискету(ОбъектДействия, глЗначениеПеременной("глТекущийПользователь"), ПроцедурыПерсонифицированногоУчета.ПолучитьИмяФайлаПФ(ОбъектДействия.Ссылка, РасчетныйПериод), КодировкаФайла);	
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура НаДискНаДискВсеФайлы(Кнопка)
	Отказ = Ложь;
	СохранитьТекущиеДанные(Отказ, РежимДиалогаВопрос.ОКОтмена);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьЭлементыФормыПриИзменененииПачки(ЭлементыФормы.ПачкиДокументов);
	Если ФорматФайла = Перечисления.ФорматФайлаПФР.Версия04 Тогда
		КодировкаФайла = КодировкаТекста.OEM;
	ИначеЕсли ФорматФайла = Перечисления.ФорматФайлаПФР.Версия07 Тогда
		КодировкаФайла = КодировкаТекста.ANSI;
	КонецЕсли;
	
	Длг = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	Длг.Каталог = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнойКаталогФайлов");
	Длг.Заголовок = "Укажите каталог";
	
	Если Длг.Выбрать() Тогда
		КаталогСохранения = Длг.Каталог;
		СтрокаСообщений = "";
		Для Каждого СтрокаПачка Из ПачкиДокументов.Строки Цикл
			Если НЕ СтрокаПачка.Пачка.Пустая() Тогда
				
				ОбъектДействия = СтрокаПачка.ДокументОбъект;
				ИмяФайла = ПроцедурыПерсонифицированногоУчета.ПолучитьИмяФайлаПФ(ОбъектДействия.Ссылка, РасчетныйПериод);
				
				ЕстьОшибки = Ложь;
				ТекстФайла = РегламентированнаяОтчетность.ПолучитьТекстФайла(ОбъектДействия, ЕстьОшибки);
				Если ЕстьОшибки Тогда
					Возврат;
				КонецЕсли;
				
				ИмяФайла = КаталогСохранения + "\" + ИмяФайла;
				ТекстовыйДокумент = Новый ТекстовыйДокумент;
				ТекстовыйДокумент.УстановитьТекст(ТекстФайла); 
				Если КодировкаФайла = Неопределено Тогда
					КодировкаФайла = КодировкаТекста.OEM;
				КонецЕсли;
				ТекстовыйДокумент.Записать(ИмяФайла,КодировкаФайла);
				СтрокаСообщений = СтрокаСообщений + " по документу " + СокрЛП(ОбъектДействия) + " сформирован файл " + ИмяФайла + Символы.ПС;
				
				
			КонецЕсли;	
			Для Каждого СтрокаВнутрПачка Из СтрокаПачка.Строки Цикл
				Если НЕ СтрокаВнутрПачка.Пачка.Пустая() Тогда
					
					ОбъектДействия = СтрокаВнутрПачка.ДокументОбъект;
					ИмяФайла = ПроцедурыПерсонифицированногоУчета.ПолучитьИмяФайлаПФ(ОбъектДействия.Ссылка, РасчетныйПериод);
					
					ЕстьОшибки = Ложь;
					ТекстФайла = РегламентированнаяОтчетность.ПолучитьТекстФайла(ОбъектДействия, ЕстьОшибки);
					Если ЕстьОшибки Тогда
						Возврат;
					КонецЕсли;
					
					ИмяФайла = КаталогСохранения + "\" + ИмяФайла;
					ТекстовыйДокумент = Новый ТекстовыйДокумент;
					ТекстовыйДокумент.УстановитьТекст(ТекстФайла); 
					Если КодировкаФайла = Неопределено Тогда
						КодировкаФайла = КодировкаТекста.OEM;
					КонецЕсли;
					ТекстовыйДокумент.Записать(ИмяФайла,КодировкаФайла);
					СтрокаСообщений = СтрокаСообщений + " по документу " + СокрЛП(ОбъектДействия) + " сформирован файл " + ИмяФайла + Символы.ПС;
				КонецЕсли;	
			КонецЦикла
		КонецЦикла;
		Предупреждение(СтрокаСообщений);
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьПроверитьВCheckXML(Кнопка)
	Если ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока <> Неопределено Тогда
		Отказ = Ложь;
		СохранитьТекущиеДанные(Отказ, РежимДиалогаВопрос.ОКОтмена);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		ОбновитьЭлементыФормыПриИзменененииПачки(ЭлементыФормы.ПачкиДокументов);
		Если НЕ ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.Пачка.Пустая() Тогда
			ПроцедурыПерсонифицированногоУчета.ПроверитьФайлВCheckXML(ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.ДокументОбъект, ЭтаФорма);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


Процедура ПроверитьПроверитьВыбраныйДокумент(Кнопка)
	ОбработкаСообщений = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаСообщений.УдалитьСообщения();
	Если ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока <> Неопределено Тогда
		Отказ = Ложь;
		СохранитьТекущиеДанные(Отказ, РежимДиалогаВопрос.ОКОтмена);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		ОбновитьЭлементыФормыПриИзменененииПачки(ЭлементыФормы.ПачкиДокументов);
		Если НЕ ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.Пачка.Пустая() Тогда
			ЕстьОшибки = Ложь;
			ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.ДокументОбъект.ПроверитьПравильностьЗаполненияДокумента(ЕстьОшибки);
			Если ЕстьОшибки тогда
				РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов,
				ЭлементыФормы.ПолеКартинкиПредупреждение, 
				"Данные для передачи еще не готовы. Обнаружены ошибки при проверке.", "Ошибка");
			Иначе
				РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов,
				ЭлементыФормы.ПолеКартинкиПредупреждение, 
				"Данные для передачи в ПФР успешно прошли проверку.", "Информация");
			КонецЕсли;
			ОбработкаСообщений.ПоказатьСообщения();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьВсеДокументы(Кнопка)
	
	Отказ = Ложь;
	СохранитьТекущиеДанные(Отказ, РежимДиалогаВопрос.ОКОтмена);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьЭлементыФормыПриИзменененииПачки(ЭлементыФормы.ПачкиДокументов);
	ЕстьОшибкиПоВсемДокументам = Ложь;
	
	
	ОбработкаСообщений = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаСообщений.УдалитьСообщения();
	
	Для Каждого СтрокаПачка Из ПачкиДокументов.Строки Цикл
		Если НЕ СтрокаПачка.Пачка.Пустая() Тогда
			ЕстьОшибки = Ложь;
			СтрокаПачка.ДокументОбъект.ПроверитьПравильностьЗаполненияДокумента(ЕстьОшибки);
			ЕстьОшибкиПоВсемДокументам = ЕстьОшибкиПоВсемДокументам ИЛИ ЕстьОшибки;
		КонецЕсли;	
		Для Каждого СтрокаВнутрПачка Из СтрокаПачка.Строки Цикл
			Если НЕ СтрокаВнутрПачка.Пачка.Пустая() Тогда
				ЕстьОшибки = Ложь;
				СтрокаВнутрПачка.ДокументОбъект.ПроверитьПравильностьЗаполненияДокумента(ЕстьОшибки);
				ЕстьОшибкиПоВсемДокументам = ЕстьОшибкиПоВсемДокументам ИЛИ ЕстьОшибки;
			КонецЕсли;
		КонецЦикла
	КонецЦикла;
	
	ОбработкаСообщений = глЗначениеПеременной("глОбработкаСообщений");
	Если ЕстьОшибкиПоВсемДокументам тогда
		РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов,
		ЭлементыФормы.ПолеКартинкиПредупреждение, 
		"Данные для передачи еще не готовы. Обнаружены ошибки при проверке.", "СообщениеОПроблемах");
		
		
	Иначе
		РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов,
		ЭлементыФормы.ПолеКартинкиПредупреждение, 
		"Данные для передачи в ПФР успешно прошли проверку.", "Информация");
		
	КонецЕсли;
	ОбработкаСообщений.ПоказатьСообщения();
	
КонецПроцедуры

Процедура КнопкаОКНажатие(Элемент)
	Закрыть();
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ПачкиДокументов

Процедура ПачкиДокументовПриАктивизацииСтроки(Элемент)
	
	СтрокаДокументаОбъектаАДВ11 = ПачкиДокументов.Строки.Найти(ДокументОбъектАДВ11, "ДокументОбъект", Истина);
	СтрокаДокументаОбъекта = ПачкиДокументов.Строки.Найти(ДокументОбъектДляПоказаФизлиц, "ДокументОбъект", Истина);
	Если УдерживатьТекущийДокумент Тогда
		Если ЗначениеЗаполнено(ДокументОбъектДляПоказаФизлиц.Номер)
			И ЗначениеЗаполнено(ДокументОбъектДляПоказаФизлиц.Дата)
			И СтрокаДокументаОбъекта <> Неопределено Тогда
			Элемент.ТекущаяСтрока = СтрокаДокументаОбъекта;
			ПроверкаУникальностиНомераДокумента(ДокументОбъектДляПоказаФизлиц);
			Возврат;
		ИначеЕсли ЗначениеЗаполнено(ДокументОбъектАДВ11.Номер) 
			И ЗначениеЗаполнено(ДокументОбъектАДВ11.Дата) 
			И СтрокаДокументаОбъектаАДВ11 <> Неопределено Тогда
			Элемент.ТекущаяСтрока = СтрокаДокументаОбъектаАДВ11;
			ПроверкаУникальностиНомераДокумента(ДокументОбъектАДВ11);
			Возврат;
		КонецЕсли;	
	КонецЕсли;
	
	Если ФлагВыполнятьСохранениеФизЛица Тогда
		ОбновитьЭлементыФормыПриИзменененииПачки(Элемент);
		
		Если УдерживатьТекущуюСтроку И СтрокаДокументаОбъекта <> Неопределено Тогда
			ФлагВыполнятьСохранениеФизЛица = Ложь;
			Элемент.ТекущаяСтрока = СтрокаДокументаОбъекта;
		КонецЕсли;
	КонецЕсли;
	ФлагВыполнятьСохранениеФизЛица = Истина;
КонецПроцедуры

Процедура ПачкиДокументовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.Пачка <> Неопределено Тогда
		ОформлениеСтроки.Ячейки.НомерПачки.Текст = Число(Прав(ДанныеСтроки.ДокументОбъект.Номер, 5));
		Если ТипЗнч(ДанныеСтроки.Пачка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
			ОформлениеСтроки.Ячейки.Пачка.Текст = ДанныеСтроки.ДокументОбъект.ТипФормДокументов + "  " + ДанныеСтроки.ДокументОбъект.Номер +" (" + ДанныеСтроки.ДокументОбъект.РаботникиОрганизации.Количество() + ")";
			Если ДанныеСтроки.Пачка.ПринятоВПФР Тогда
				ОформлениеСтроки.Ячейки.Пачка.ЦветТекста = СерыйЦвет;
			КонецЕсли;
		ИначеЕсли ТипЗнч(ДанныеСтроки.Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
			ОформлениеСтроки.Ячейки.Пачка.Текст = "АДВ-11 " + ДанныеСтроки.ДокументОбъект.Номер;
			Если ДанныеСтроки.Пачка.ПринятоВПФР Тогда
				
				ОформлениеСтроки.Ячейки.Пачка.ЦветТекста = СерыйЦвет;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПачкиДокументовВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(ВыбраннаяСтрока.ДокументОбъект) = Тип("ДокументОбъект.ПередачаСЗВ4вПФР") Тогда
		
		ДокументыЗаписаны = НЕ ВыбраннаяСтрока.ДокументОбъект.ЭтоНовый();
		Для Каждого СтрокаДокумента Из ВыбраннаяСтрока.Строки Цикл
			ДокументыЗаписаны = ДокументыЗаписаны И Не СтрокаДокумента.ДокументОбъект.ЭтоНовый()
		КонецЦикла;
		
		Если ДокументыЗаписаны Тогда
			ВыбраннаяСтрока.ДокументОбъект.ПолучитьФорму().ОткрытьМодально();
		Иначе
			Если Вопрос("Документ АДВ-11, и все входящие в него пачки СЗВ-4 должны быть записаны перед открытием. Сохранить документы?", 
				РежимДиалогаВопрос.ОКОтмена,,КодВозвратаДиалога.ОК, "Документы не записаны") = КодВозвратаДиалога.ОК Тогда
				Отказ = Ложь;
				СохранитьТекущиеДанные(Отказ,,Ложь);
				Если Отказ Тогда
					Возврат;
				КонецЕсли;
				ВыбраннаяСтрока.ДокументОбъект.ПолучитьФорму().ОткрытьМодально();
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ВыбраннаяСтрока.ДокументОбъект) = Тип("ДокументОбъект.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
		Если ВыбраннаяСтрока.ДокументОбъект.ЭтоНовый() Тогда
			Если Вопрос("Документ СЗВ-4 должен быть записан перед открытием. Сохранить документы?", 
				РежимДиалогаВопрос.ОКОтмена,, КодВозвратаДиалога.ОК, "Документ не записан") = КодВозвратаДиалога.ОК Тогда
				Отказ = Ложь;
				СохранитьТекущиеДанные(Отказ,,Ложь);
				Если Отказ Тогда
					Возврат;
				КонецЕсли;
				ВыбраннаяСтрока.ДокументОбъект.ПолучитьФорму().ОткрытьМодально();
			КонецЕсли;
		Иначе
			ВыбраннаяСтрока.ДокументОбъект.ПолучитьФорму().ОткрытьМодально();
		КонецЕсли;
	КонецЕсли;
	ВыбраннаяСтрока.ДокументОбъект = ВыбраннаяСтрока.Пачка.ПолучитьОбъект();
	ОбновитьЭлементыФормыПриИзменененииПачки(ЭлементыФормы.ПачкиДокументов);
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ФизлицаПачек

Процедура ФизлицаПачекПриАктивизацииСтроки(Элемент)
	
	// Сохраняем данные предыдущего сотрудника
	Если ФизЛицо <> Неопределено И НЕ ФизЛицо.Пустая() Тогда
		Если ФлагВыполнятьСохранениеФизЛица И НЕ ВыполнитьСохранениеДанныхФизлица() Тогда
			// Не удалось сохранить данные физлица, не даем переходить на другое физлицо
			СтрокаРаботника = ДокументОбъектДляПоказаФизлиц.РаботникиОрганизации.Найти(ФизЛицо, "ФизЛицо");
			Если СтрокаРаботника <> Неопределено Тогда
				ФлагВыполнятьСохранениеФизЛица = Ложь;
				Элемент.ТекущаяСтрока = ДокументОбъектДляПоказаФизлиц.РаботникиОрганизации.Найти(ФизЛицо, "ФизЛицо");
			КонецЕсли;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	ФлагВыполнятьСохранениеФизЛица = Истина;
	Если Элемент.ТекущаяСтрока <> Неопределено И НЕ Элемент.ТекущаяСтрока.Физлицо.Пустая() Тогда
		Физлицо = Элемент.ТекущаяСтрока.Физлицо;
		Если НЕ ЗначениеЗаполнено(Физлицо) или НЕ ЗначениеЗаполнено(Организация) Тогда
			Возврат
		КонецЕсли;
		АдресДляИнформирования = Элемент.ТекущаяСтрока.АдресДляИнформирования;
		
		Если ДокументОбъектДляПоказаФизЛиц.ПринятоВПФР Тогда
			ЭлементыФормы.НачисленоНаСтраховуюЧастьПФР.Доступность = Ложь;
			ЭлементыФормы.НачисленоНаНакопительнуюЧастьПФР.Доступность = Ложь;
			ЭлементыФормы.НачисленоПоДополнительномуТарифу.Доступность = Ложь;
			ЭлементыФормы.НачисленоПоВсейОрганизацииНаСтраховуюЧастьПФР.Доступность = Ложь;
			ЭлементыФормы.НачисленоПоВсейОрганизацииНаНакопительнуюЧастьПФР.Доступность = Ложь;
			ЭлементыФормы.АдресДляИнформирования.Доступность = Ложь;
			ЭлементыФормы.МесяцыБолезни.Доступность = Ложь;
			ЭлементыФормы.ДниБолезни.Доступность = Ложь;
			ЭлементыФормы.МесяцыОтпускаЗаСвойСчет.Доступность = Ложь;
			ЭлементыФормы.ДниОтпускаЗаСвойСчет.Доступность = Ложь;
			ЭлементыФормы.ПанельСтажФизлица.Доступность = Ложь;
			ЭлементыФормы.ЗаписиОСтаже.Доступность = Ложь;
			ЭлементыФормы.ФизлицаПачек.ТолькоПросмотр = Истина;
			ЭлементыФормы.КоманднаяПанельФизлицаПачек.Кнопки.Перенести.Доступность = Ложь;
		Иначе
			ЭлементыФормы.НачисленоНаСтраховуюЧастьПФР.Доступность = Истина;
			ЭлементыФормы.НачисленоНаНакопительнуюЧастьПФР.Доступность = Истина;
			ЭлементыФормы.НачисленоПоДополнительномуТарифу.Доступность = Истина;
			ЭлементыФормы.НачисленоПоВсейОрганизацииНаСтраховуюЧастьПФР.Доступность = Истина;
			ЭлементыФормы.НачисленоПоВсейОрганизацииНаНакопительнуюЧастьПФР.Доступность = Истина;
			ЭлементыФормы.АдресДляИнформирования.Доступность = Истина;
			ЭлементыФормы.МесяцыБолезни.Доступность = СтажДоступенДляРедактирования;
			ЭлементыФормы.ДниБолезни.Доступность = СтажДоступенДляРедактирования;
			ЭлементыФормы.МесяцыОтпускаЗаСвойСчет.Доступность = СтажДоступенДляРедактирования;
			ЭлементыФормы.ДниОтпускаЗаСвойСчет.Доступность = СтажДоступенДляРедактирования;
			ЭлементыФормы.ПанельСтажФизлица.Доступность = РасчетныйПериод < 2010 И СтажДоступенДляРедактирования;
			ЭлементыФормы.ЗаписиОСтаже.Доступность = СтажДоступенДляРедактирования;
			ЭлементыФормы.ФизлицаПачек.ТолькоПросмотр = РасчетныйПериод > 2009;
			ЭлементыФормы.КоманднаяПанельФизлицаПачек.Кнопки.Перенести.Доступность = Истина;
		КонецЕсли;
		
		// Прочитаем данные о заработке
		ДанныеОЗаработке = РегистрыСведений.СуммыВзносовДляСЗВ4.Получить(Новый Структура("ОбособленноеПодразделение, ФизЛицо, Год" , Организация, ФизЛицо, РасчетныйПериод ));
		Если ДанныеОЗаработке <> Неопределено Тогда
			
			НачисленоНаСтраховуюЧастьПФР = 	ДанныеОЗаработке.НачисленоНаСтраховуюЧастьПФР;
			НачисленоНаНакопительнуюЧастьПФР = 	ДанныеОЗаработке.НачисленоНаНакопительнуюЧастьПФР;
			НачисленоПоДополнительномуТарифу = 	ДанныеОЗаработке.НачисленоПоДополнительномуТарифу;
			НачисленоПоВсейОрганизацииНаСтраховуюЧастьПФР = ДанныеОЗаработке.НачисленоПоВсейОрганизацииНаСтраховуюЧастьПФР;
			НачисленоПоВсейОрганизацииНаНакопительнуюЧастьПФР = ДанныеОЗаработке.НачисленоПоВсейОрганизацииНаНакопительнуюЧастьПФР;
			МесяцыБолезни = Цел(ДанныеОЗаработке.ДнейБолезни / 30);
			ДниБолезни = ДанныеОЗаработке.ДнейБолезни % 30;
			МесяцыОтпускаЗаСвойСчет = Цел(ДанныеОЗаработке.ДнейОтпускаЗаСвойСчет / 30);
			ДниОтпускаЗаСвойСчет = ДанныеОЗаработке.ДнейОтпускаЗаСвойСчет % 30;
			
		Иначе
			
			НачисленоНаСтраховуюЧастьПФР = 	0;
			НачисленоНаНакопительнуюЧастьПФР = 	0;
			НачисленоПоДополнительномуТарифу = 0;
			НачисленоПоВсейОрганизацииНаСтраховуюЧастьПФР = 0;
			НачисленоПоВсейОрганизацииНаНакопительнуюЧастьПФР = 0;
			МесяцыБолезни = 0;
			ДниБолезни = 0;
			МесяцыОтпускаЗаСвойСчет = 0;
			ДниОтпускаЗаСвойСчет = 0;
			
		КонецЕсли; 
		
		// Установим отбор для записей о стаже
		ЗаписиОСтаже.Отбор.Физлицо.Значение		= ФизЛицо;
		ЗаписиОСтаже.Отбор.Год.Значение			= РасчетныйПериод;
		ЗаписиОСтаже.Отбор.ОбособленноеПодразделение.Значение	= Организация;
		Если ЗаписиОСтаже.Количество() > 0 Тогда
			СтажРаботыНачалоПериода = ЗаписиОСтаже[0].ДатаНачалаПериода;
			СтажРаботыОкончаниеПериода = ЗаписиОСтаже[0].ДатаОкончанияПериода;
		Иначе
			СтажРаботыНачалоПериода = "";
			СтажРаботыОкончаниеПериода = "";
		КонецЕсли;
		УстановитьЗаголовокРамкиСтажа();
		ЭлементыФормы.НадписьДанныеОСтажеФизлица.Заголовок = " Состав пачки №" + ДокументОбъектДляПоказаФизЛиц.Номер + "        (" + ФизЛицо.Наименование+ ")";
	Иначе
		Если ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока <> Неопределено
			И ТипЗнч(ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
			ЭлементыФормы.НадписьДанныеОСтажеФизлица.Заголовок = " Список входящих документов СЗВ-4";
		Иначе
			ЭлементыФормы.НадписьДанныеОСтажеФизлица.Заголовок = "";
		КонецЕсли;
		
		
		ЭлементыФормы.НачисленоНаСтраховуюЧастьПФР.Доступность = Ложь;
		ЭлементыФормы.НачисленоНаНакопительнуюЧастьПФР.Доступность = Ложь;
		ЭлементыФормы.НачисленоПоДополнительномуТарифу.Доступность = Ложь;
		ЭлементыФормы.НачисленоПоВсейОрганизацииНаСтраховуюЧастьПФР.Доступность = Ложь;
		ЭлементыФормы.НачисленоПоВсейОрганизацииНаНакопительнуюЧастьПФР.Доступность = Ложь;
		ЭлементыФормы.МесяцыБолезни.Доступность = Ложь;
		ЭлементыФормы.ДниБолезни.Доступность = Ложь;
		ЭлементыФормы.МесяцыОтпускаЗаСвойСчет.Доступность = Ложь;
		ЭлементыФормы.ДниОтпускаЗаСвойСчет.Доступность = Ложь;
		ЭлементыФормы.ПанельСтажФизлица.Доступность = Ложь;
		ЭлементыФормы.ЗаписиОСтаже.Доступность = Ложь;
		
		ЭлементыФормы.АдресДляИнформирования.Доступность = Ложь;
		
		НачисленоНаСтраховуюЧастьПФР = 	0;
		НачисленоНаНакопительнуюЧастьПФР = 	0;
		НачисленоПоДополнительномуТарифу = 0;
		НачисленоПоВсейОрганизацииНаСтраховуюЧастьПФР = 	0;
		НачисленоПоВсейОрганизацииНаНакопительнуюЧастьПФР = 	0;
		МесяцыБолезни = 0;
		ДниБолезни = 0;
		МесяцыОтпускаЗаСвойСчет = 0;
		ДниОтпускаЗаСвойСчет = 0;
		АдресДляИнформирования = "";
		
		// Установим отбор для записей о стаже
		ЗаписиОСтаже.Отбор.Физлицо.Значение		= Справочники.ФизическиеЛица.ПустаяСсылка();
		ЗаписиОСтаже.Отбор.Год.Значение			= РасчетныйПериод;
		ЗаписиОСтаже.Отбор.ОбособленноеПодразделение.Значение	= Организация;
		Если ЗаписиОСтаже.Количество() > 0 Тогда
			СтажРаботыНачалоПериода = ЗаписиОСтаже[0].ДатаНачалаПериода;
			СтажРаботыОкончаниеПериода = ЗаписиОСтаже[0].ДатаОкончанияПериода;
		Иначе
			СтажРаботыНачалоПериода = "";
			СтажРаботыОкончаниеПериода = "";
		КонецЕсли;
		УстановитьЗаголовокРамкиСтажа()
	КонецЕсли;
	
КонецПроцедуры

Процедура ФизлицаПачекФизЛицоНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(Элемент, ЭтаФорма, Истина, ДокументОбъектДляПоказаФизлиц.Дата, ДокументОбъектДляПоказаФизлиц.Организация, 0, СтандартнаяОбработка, Элемент.Значение);
	
КонецПроцедуры

Процедура ФизлицаПачекФизЛицоОткрытие(Элемент, СтандартнаяОбработка)
	
	ПроцедурыУправленияПерсоналом.ОбработкаОткрытияФизлица(Элемент, "ПФР2009", Элемент.Значение, Организация, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ФизлицаПачекФизЛицоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.СотрудникиОрганизаций") Тогда
		Физлицо = ВыбранноеЗначение.Физлицо;
	Иначе
		Физлицо = ВыбранноеЗначение;
	КонецЕсли;
	
	Элемент.Значение = Физлицо;
	ЭлементыФормы.ФизлицаПачек.ТекущиеДанные.АдресДляИнформирования = НовыйАдресДляИнформированияФизЛица(Физлицо);
	
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ПАНЕЛИ ПанельСтажФизлица


Процедура ЗаписиОСтажеПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеЯчеек = ОформлениеСтроки.Ячейки;
	// не показываем первую "подстрочку"
	ОформлениеЯчеек.НевидимаяКолонка1.Видимость = Ложь;
	ОформлениеЯчеек.НевидимаяКолонка2.Видимость = Ложь;
	ОформлениеЯчеек.НевидимаяКолонка3.Видимость = Ложь;
	ОформлениеЯчеек.НевидимаяКолонка4.Видимость = Ложь;
	ОформлениеЯчеек.НевидимаяКолонка5.Видимость = Ложь;
	
КонецПроцедуры

Процедура СтажРаботыНачалоПериодаПриИзменении(Элемент)
	Если ЗаписиОСтаже.Количество() > 0 Тогда
		ЗаписиОСтаже[0].ДатаНачалаПериода = СтажРаботыНачалоПериода;
	КонецЕсли;
КонецПроцедуры

Процедура СтажРаботыОкончаниеПериодаПриИзменении(Элемент)
	Если ЗаписиОСтаже.Количество() > 0 Тогда
		ЗаписиОСтаже[0].ДатаОкончанияПериода = СтажРаботыОкончаниеПериода;
	КонецЕсли;
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ПАНЕЛИ ПанельДокумент

Процедура ПереключательТипФормДокументовПриИзменении(Элемент)
	Если Элемент.Значение = "СЗВ-4-1" Тогда
		ЭлементыФормы.ПанельСтажФизлица.ТекущаяСтраница = ЭлементыФормы.ПанельСтажФизлица.Страницы.СтраницаСЗВ41;
		ЭлементыФормы.ТерриториальныеУсловия.Доступность = Ложь;
	Иначе
		ДокументОбъектДляПоказаФизлиц.ТерриториальныеУсловия = "";
		ЭлементыФормы.ПанельСтажФизлица.ТекущаяСтраница = ЭлементыФормы.ПанельСтажФизлица.Страницы.СтраницаСЗВ42;
		ЭлементыФормы.ТерриториальныеУсловия.Доступность = Истина;
		Если СтажДоступенДляРедактирования Тогда
			ОбнулитьСведенияСЗВ41(ДокументОбъектДляПоказаФизлиц);
		КонецЕсли;
	КонецЕсли;
	ОбновитьЭлементыФормыПриИзменененииПачки(ЭлементыФормы.ПачкиДокументов);
КонецПроцедуры


Процедура СведенияОЗадолженностиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока И НЕ Копирование Тогда
		Элемент.ТекущаяСтрока.Год = РасчетныйПериод;
	КонецЕсли;
КонецПроцедуры

Процедура ТерриториальныеУсловияПриИзменении(Элемент)
	
	ЗаписиСЗВ4 = РегистрыСведений.ЗаписиОСтажеДляСЗВ4.СоздатьНаборЗаписей();
	РасчетныйГод = ДокументОбъектДляПоказаФизлиц.Год;
	РасчетнаяОрганизация = ДокументОбъектДляПоказаФизлиц.Организация;
	Для Каждого СтрокаДокумента ИЗ ДокументОбъектДляПоказаФизлиц.РаботникиОрганизации Цикл
		РасчетноеФизЛицо = СтрокаДокумента.ФизЛицо;
		ЗаписиСЗВ4.Отбор.ОбособленноеПодразделение.Установить(РасчетнаяОрганизация);
		ЗаписиСЗВ4.Отбор.Год.Установить(РасчетныйГод);
		ЗаписиСЗВ4.Отбор.ФизЛицо.Установить(РасчетноеФизЛицо);
		ЗаписиСЗВ4.Прочитать();
		Если ЗаписиСЗВ4.Количество() > 0 Тогда
			ЗаписиСЗВ4[0].ТерриториальныеУсловия = Элемент.Значение;
		КонецЕсли;
		ЗаписиСЗВ4.Записать();
	КонецЦикла;
	ЗаписиОСтаже.Прочитать();
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	Если Не ПравоДоступа("Использование", Метаданные.Обработки.ПодготовкаДанныхПФР2009) Тогда
		Предупреждение("Нарушение прав доступа!");
		Закрыть();
		Возврат;
	КонецЕсли;

	Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	
	ТеррУсловия = Организация.ТерриториальныеУсловияПФР;
	
	
	БылоСохранено = ВосстановитьЗначение("ТипСведений");
	Если Не ЗначениеЗаполнено(БылоСохранено) Тогда
		ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ;
	ИначеЕсли ТипЗнч(БылоСохранено) = Тип("Строка") Тогда 
		ТипСведений = ?(БылоСохранено = "ПЕНС",Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ,Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ);
	ИначеЕсли ТипЗнч(БылоСохранено) = Тип("ПеречислениеСсылка.ТипыСведенийСЗВ") Тогда 
		ТипСведений = БылоСохранено
	Иначе 
		ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ;
	КонецЕсли;
	
	Если РасчетныйПериод = 0 Тогда
		РасчетныйПериод = Год(ДобавитьМесяц(ТекущаяДата(), -3));
	КонецЕсли;
	ФорматФайла = Перечисления.ФорматФайлаПФР.Версия07;
	ПоказатьЭлементыФормыПоГоду(РасчетныйПериод);
	ПоказыватьСуммыВзносов = НастройкаПравДоступаПереопределяемый.ДоступнаРольРасчетчикаРегл();
	СтажДоступенДляРедактирования = НастройкаПравДоступаПереопределяемый.ДоступнаРольКадровикаРегл();
	
	ОбновитьПачкиДокументов();
	РазвернутьПачкиДокументов();
	// установим использование отборов и признаки автообновления данных
	ЗаписиОСтаже.Отбор.Физлицо.Использование = Истина;
	ЗаписиОСтаже.Отбор.Год.Использование = Истина;
	ЗаписиОСтаже.Отбор.ОбособленноеПодразделение.Использование = Истина;
	ЭлементыФормы.ЗаписиОСтаже.ОбновлятьПриИзмененииОтбора = Истина;
	ЭлементыФормы.РамкаГруппыСтажа.Заголовок = "Период работы за " + Формат(РасчетныйПериод, "ЧГ=0");
	Если НЕ ПоказыватьСуммыВзносов Тогда
		ЭлементыФормы.КоманднаяПанельПачки.Кнопки.Удалить(ЭлементыФормы.КоманднаяПанельПачки.Кнопки.ПринятоВПФР);
		элементыФормы.КоманднаяПанельПачки.Кнопки.Удалить(ЭлементыФормы.КоманднаяПанельПачки.Кнопки.ПометитьНаУдаление);
	КонецЕсли;
	
	
	ЭлементыФормы.Проверить.Видимость = ПоказыватьСуммыВзносов;
	ЭлементыФормы.Печать.Видимость = ПоказыватьСуммыВзносов;
	ЭлементыФормы.ПоказатьФайл.Видимость = ПоказыватьСуммыВзносов;
	ЭлементыФормы.НаДиск.Видимость = ПоказыватьСуммыВзносов;
	ОбновитьЭлементыФормыПриИзменененииПачки(ЭлементыФормы.ПачкиДокументов);
	ФизлицаПачекПриАктивизацииСтроки(ЭлементыФормы.ФизлицаПачек);
	ВыбраннаяОрганизация = Организация;
	ВыбранныйРасчетныйПериод = РасчетныйПериод;
	ВыбранныйФорматФайла = ФорматФайла;
	ВыбранныйТипСведений = ТипСведений;
	
	
	ПоказыватьЛетчиков = Константы.ИспользуетсяТрудЧленовЛетныхЭкипажей.Получить();
	
	Если ПоказыватьЛетчиков Тогда
		
		ЭлементыФормы.ПанельАВИА.Свертка= РежимСверткиЭлементаУправления.Нет;
		ЭлементыФормы.ПанельАВИА1.Свертка= РежимСверткиЭлементаУправления.Нет;
	
		ЭлементыФормы.ПанельАВИА1.УстановитьПривязку(ГраницаЭлементаУправления.Лево, ЭлементыФормы.ПанельАВИА1, ГраницаЭлементаУправления.Право,
		Панель, ГраницаЭлементаУправления.Лево);
		
	Иначе
		
		ЭлементыФормы.ПанельАВИА.Свертка= РежимСверткиЭлементаУправления.Право;
		ЭлементыФормы.ПанельАВИА1.Свертка= РежимСверткиЭлементаУправления.Право;
	
		ЭлементыФормы.ПанельАВИА1.УстановитьПривязку(ГраницаЭлементаУправления.Лево,, ,,); 
	КонецЕсли;
	ЭлементыФормы.СведенияОЗадолженности.Колонки.ДополнительныйТариф.Видимость = ПоказыватьЛетчиков;
	
	
	УстановитьЗаголовкиОрганизацийВФорме();
	УстановитьВидимостьПанелиВсеСуммыСтраховыхВзносов();
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Если ПравоДоступа("Использование", Метаданные.Обработки.ПодготовкаДанныхПФР2009) Тогда
		
		Отказ = Ложь;
		СохранитьТекущиеДанные(Отказ);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		СохранитьЗначение("Организация", Организация);
		СохранитьЗначение("ТипСведений", ТипСведений);
		
		ОбновитьЭлементыФормыПриИзменененииПачки(ЭлементыФормы.ПачкиДокументов);
		Отказ = УдерживатьТекущуюСтроку ИЛИ Отказ;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПачкиДокументовПередУдалением(Элемент, Отказ)
	Отказ = Истина;
	КоманднаяПанельПачкиПометитьНаУдаление(элементыФормы.КоманднаяПанельПачки.Кнопки.ПометитьНаУдаление);
КонецПроцедуры

Процедура ПачкиДокументовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель)
	Отказ = Истина;
	Если УдерживатьТекущийДокумент Тогда
		ПроверкаУникальностиНомераДокумента(ЭлементыФормы.ПачкиДокументов.ТекущиеДанные.ДокументОбъект);
		Возврат;
	КонецЕсли;

	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить("СЗВ-4");
	СписокВыбора.Добавить("АДВ-11");
	ЭлементНахожденияСписка = ?(Элемент.ТекущаяСтрока = Неопределено, ЭлементыФормы.ПолеВвода1, Элемент); 
	ВыбранноеЗначение = ВыбратьИзСписка(СписокВыбора, ЭлементНахожденияСписка);
	Если ВыбранноеЗначение = Неопределено Тогда
	ИначеЕсли ВыбранноеЗначение.Значение = "СЗВ-4" Тогда
		КоманднаяПанельПачкиСЗВ4(элементыФормы.КоманднаяПанельПачки.Кнопки.Действие.Кнопки.СЗВ4);
	ИначеЕсли ВыбранноеЗначение.Значение = "АДВ-11" Тогда
		КоманднаяПанельПачкиАДВ11(элементыФормы.КоманднаяПанельПачки.Кнопки.Действие.Кнопки.АДВ11);
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельРасчетыЗадолженностьПередПФР(Кнопка)
	
	Если ЭлементыФормы.СведенияОЗадолженности.Значение.Количество() > 0 Тогда
		Вопрос = "Таблица расчетов с ПФР будет очищена. Продолжить?";
		Ответ = Вопрос(Вопрос, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ДокументОбъектАДВ11.АвтозаполнениеСтрокЗадолженности();
	


КонецПроцедуры

Процедура Исполнитель1ПриИзменении(Элемент)
	УстанавливаемыйОтветственный = ДокументОбъектАДВ11.Ответственный;
	Если ЗначениеЗаполнено(УстанавливаемыйОтветственный) Тогда
		Для Каждого СтрокаДерева Из ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.Строки Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаДерева.ДокументОбъект.Ответственный) Тогда
				СтрокаДерева.ДокументОбъект.Ответственный = УстанавливаемыйОтветственный;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура НадписьПерейтиНажатие(Элемент)
	Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		Документы.ПередачаСЗВ4вПФР.ПолучитьФормуСписка().Открыть();
	Иначе
		Документы.СведенияОВзносахИСтраховомСтажеСПВ1.ПолучитьФормуСписка().Открыть();
	КонецЕсли;	
КонецПроцедуры





////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ


СписокВыбора = Новый СписокЗначений;
СписокВыбора.Добавить("Долг на начало года");
СписокВыбора.Добавить("Уплачено");
СписокВыбора.Добавить("Начислено");
СписокВыбора.Добавить("Долг на конец года");

СерыйЦвет = Новый Цвет(180, 180, 180);

ПачкиДокументов.Колонки.Добавить("ДокументОбъект");

МассивСообщений = Новый Массив;
УдерживатьТекущуюСтроку = Ложь;
УдерживатьТекущийДокумент = Ложь;
ФлагВыполнятьСохранениеФизЛица = Истина;