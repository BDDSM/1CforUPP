////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедуры выполняет необходимые действия при установке нового значения в поле
// выбора действия.
//
// Параметры:
//  ТекущийЭлементДействий - число, индекс устанавливаемого действия в списке действий
//
Процедура ПриИзмененииТекущегоДействия(ТекущийЭлементДействий)

	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.КнопкаВыполнить.Действие = СписокДействий[ТекущийЭлементДействий].Значение;
	
	ДействиеНеВыполнено = Истина;
	
	Если СписокДействий[ТекущийЭлементДействий].Представление = "Установить периодичность" Тогда
		ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.Периодичность;
		
	ИначеЕсли СписокДействий[ТекущийЭлементДействий].Представление = "Установить контроль лимита" Тогда
		ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.КонтролироватьЛимит;
		
	КонецЕсли;
	
КонецПроцедуры // ПриИзмененииТекущегоДействия()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()
	
	СписокДействий.Добавить(Новый Действие("КнопкаВыполнитьНажатиеУстановитьПериодичность"), "Установить периодичность");
	СписокДействий.Добавить(Новый Действие("КнопкаВыполнитьНажатиеУстановитьКонтрольЛимита"), "Установить контроль лимита");
	
	// Заполним список действий для выбора из выпадающего списка
	ЭлементыФормы.ПолеВыбораДействия.СписокВыбора = СписокДействий;
	
	// Попробуем вспомнить последнее выбранное значение из списка действий
	ТекущееДействие = ВосстановитьЗначение("РасчетЛимитовОтпускаМатериаловТекущееДействие");

	Если (ТипЗнч(ТекущееДействие) <> Тип("Действие"))
	 ИЛИ (СписокДействий.НайтиПоЗначению(ТекущееДействие) = Неопределено) Тогда
		// Нет сохраненного значения или сохранено значение, отсутсвующее в списке
		ТекущееДействие = СписокДействий[0].Значение;
	КонецЕсли;

	ЭлементыФормы.ПолеВыбораДействия.Значение = ТекущееДействие;
	
	// Установим элементы формы в зависимости от выбранного действия
	ПриИзмененииТекущегоДействия(СписокДействий.Индекс(СписокДействий.НайтиПоЗначению(ТекущееДействие)));
	
	ДействиеНеВыполнено = Истина;

КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "ПередЗакрытием" формы.
// Если действие не было выполнено задает вопрос пользователю.
//
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ДействиеНеВыполнено Тогда
		Если Вопрос("Выбранное действие не было выполнено! Продолжить?", 
		            РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПередЗакрытием()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура устанавливает выбранную периодичность во всех строках табличной части.
//
// Обработчик уставливается динамически методом "Действие"
Процедура КнопкаВыполнитьНажатиеУстановитьПериодичность(Элемент)
	
	// Должна быть выбрана статья затрат.
	Если НЕ ЗначениеЗаполнено(Периодичность) Тогда
		
		Предупреждение("Не выбрана периодичность!", , Заголовок);
		Возврат;
		
	КонецЕсли;
	
	Для Каждого СтрокаТабличнойЧасти Из Лимиты Цикл
		СтрокаТабличнойЧасти.Периодичность = Периодичность;
	КонецЦикла;
	
	ДействиеНеВыполнено = Ложь;
	Закрыть();
	
КонецПроцедуры // КнопкаВыполнитьНажатиеДобавитьСтатьюЗатрат()

// Процедура добавляет указанную статью затрат в строки дерева результата расчета.
//
// Обработчик уставливается динамически методом "Действие"
Процедура КнопкаВыполнитьНажатиеУстановитьКонтрольЛимита(Элемент)
	
	Для Каждого СтрокаТабличнойЧасти Из Лимиты Цикл
		СтрокаТабличнойЧасти.КонтролироватьЛимит = КонтролироватьЛимит;
	КонецЦикла;
	
	ДействиеНеВыполнено = Ложь;
	Закрыть();
	
КонецПроцедуры // КнопкаВыполнитьНажатиеУстановитьКонтрольЛимита()

// Процедура - обработчик события "ПриИзменении" поля выбора текущего действия.
//
Процедура ПолеВыбораДействияПриИзменении(Элемент)

	// Установим элементы формы в зависимости от выбранного действия
	Если СписокДействий.НайтиПоЗначению(Элемент.Значение) <> Неопределено Тогда
		ПриИзмененииТекущегоДействия(СписокДействий.Индекс(СписокДействий.НайтиПоЗначению(Элемент.Значение)));
	КонецЕсли;

КонецПроцедуры // ПолеВыбораДействияПриИзменении()