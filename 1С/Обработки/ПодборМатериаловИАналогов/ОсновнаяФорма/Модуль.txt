Перем мМассивНоменклатуры;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура получает остатки номенклатуры на складе и в незавершенном производстве.
//
Процедура ПолучитьОстаткиНоменклатуры()
	
	Если НЕ ЗначениеЗаполнено(СкладОстатков) Тогда
		ТекстСклад = "";
	Иначе
		ТекстСклад = " И Склад = &Склад ";
	КонецЕсли;
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	СпрНоменклатура.Ссылка КАК Номенклатура,
	|	ТоварыНаСкладах.ХарактеристикаНоменклатуры,
	|	СУММА(
	|		ЕСТЬNULL(ТоварыНаСкладах.КоличествоОстаток, 0) 
	|		- ЕСТЬNULL(ТоварыВРезервеНаСкладах.КоличествоОстаток, 0) 
	|		- ЕСТЬNULL(ТоварыКПередачеСоСкладов.КоличествоОстаток, 0)
	|	) КАК КоличествоСвободныйОстаток,
	|	ЕСТЬNULL(
	|		ТоварыНаСкладах.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент, 
	|		СпрНоменклатура.Ссылка.ЕдиницаХраненияОстатков.Коэффициент
	|	) КАК КоэфХранения,
	|	ТоварыНаСкладах.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ( 
	|	
	|		ВЫБРАТЬ
	|			ТоварыНаСкладах.Номенклатура,
	|			ТоварыНаСкладах.ХарактеристикаНоменклатуры,
	|			ТоварыНаСкладах.КоличествоОстаток КАК КоличествоОстаток
	|		ИЗ
	|			РегистрНакопления.ТоварыНаСкладах.Остатки(&Дата, 
	|				Номенклатура В (&МассивНоменклатуры) 
	|				" + ТекстСклад + "
	|			) КАК ТоварыНаСкладах
	|			
	|		) КАК ТоварыНаСкладах
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(&Дата, 
	|				Номенклатура В (&МассивНоменклатуры)
	|				" + ТекстСклад + "
	|			) КАК ТоварыВРезервеНаСкладах
	|		ПО 
	|			ТоварыВРезервеНаСкладах.Номенклатура = ТоварыНаСкладах.Номенклатура
	|			И ТоварыВРезервеНаСкладах.ХарактеристикаНоменклатуры = ТоварыНаСкладах.ХарактеристикаНоменклатуры
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрНакопления.ТоварыКПередачеСоСкладов.Остатки(&Дата, 
	|				Номенклатура В (&МассивНоменклатуры)
	|				" + ТекстСклад + "
	|			) КАК ТоварыКПередачеСоСкладов
	|		ПО 
	|			ТоварыКПередачеСоСкладов.Номенклатура = ТоварыНаСкладах.Номенклатура
	|			И ТоварыКПередачеСоСкладов.ХарактеристикаНоменклатуры = ТоварыНаСкладах.ХарактеристикаНоменклатуры
	|
	|	ПО 
	|		СпрНоменклатура.Ссылка = ТоварыНаСкладах.Номенклатура
	|ГДЕ
	|	СпрНоменклатура.Ссылка В(&МассивНоменклатуры)
	|
	|СГРУППИРОВАТЬ ПО
	|	СпрНоменклатура.Ссылка,
	|	ТоварыНаСкладах.ХарактеристикаНоменклатуры,
	|	ЕСТЬNULL(
	|		ТоварыНаСкладах.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент, 
	|		СпрНоменклатура.Ссылка.ЕдиницаХраненияОстатков.Коэффициент
	|	),
	|	ТоварыНаСкладах.Номенклатура.ЕдиницаХраненияОстатков
	|";
			
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Дата = УправлениеЗатратами.ПолучитьДатуДляЗапроса(ДокументОбъект);
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("МассивНоменклатуры", мМассивНоменклатуры);
	Запрос.УстановитьПараметр("Склад", СкладОстатков);
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	СтруктураПоиска = Новый Структура;
	
	ОстаткиМатериалов.Очистить();
	
	Для Каждого Строка Из ТаблицаЗапроса Цикл
		
		Если Строка.КоличествоСвободныйОстаток > 0 Тогда
			НоваяСтрока = ОстаткиМатериалов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			НоваяСтрока.Остаток = Строка.КоличествоСвободныйОстаток;
			НоваяСтрока.Коэффициент = Строка.КоэфХранения;
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	МатериалыВПроизводстве.Затрата КАК Номенклатура,
	|	МатериалыВПроизводстве.ХарактеристикаЗатраты КАК ХарактеристикаНоменклатуры,
	|	ЕСТЬNULL(
	|		МатериалыВПроизводстве.Затрата.ЕдиницаХраненияОстатков.Коэффициент, 
	|		1
	|	) КАК КоэфХранения,
	|	СУММА(МатериалыВПроизводстве.КоличествоОстаток) КАК КоличествоСвободныйОстаток,
	|	МатериалыВПроизводстве.Затрата.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения
	|ИЗ
	|	РегистрНакопления.МатериалыВПроизводстве.Остатки(&Дата, 
	|		Затрата В (&МассивНоменклатуры) 
	|		И Подразделение = &Подразделение
	|	) КАК МатериалыВПроизводстве
	|
	|СГРУППИРОВАТЬ ПО
	|	МатериалыВПроизводстве.Затрата,
	|	МатериалыВПроизводстве.ХарактеристикаЗатраты,
	|	ЕСТЬNULL(
	|		МатериалыВПроизводстве.Затрата.ЕдиницаХраненияОстатков.Коэффициент, 
	|		1
	|	)
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("Подразделение", ДокументОбъект.Подразделение);
	Запрос.УстановитьПараметр("МассивНоменклатуры", мМассивНоменклатуры);
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	СтруктураПоиска = Новый Структура;
	
	Для Каждого Строка Из ТаблицаЗапроса Цикл
		
		Если Строка.КоличествоСвободныйОстаток > 0 Тогда
			НоваяСтрока = ОстаткиМатериалов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			НоваяСтрока.Остаток = Строка.КоличествоСвободныйОстаток;
			НоваяСтрока.Коэффициент = Строка.КоэфХранения;
		КонецЕсли;
				
	КонецЦикла;
	
	ОстаткиМатериалов.Свернуть("
		|Номенклатура, 
		|ХарактеристикаНоменклатуры, 
		|ЕдиницаИзмерения, 
		|Коэффициент", "
		|Остаток,
		|Распределено"
	);
	
КонецПроцедуры // ПолучитьОстаткиНоменклатуры()

// Процедура производит заполнения дерева значений списком материалов и их аналогов.
//
Процедура ЗаполнитьИсходныеКомплектующие()
	
	ТаблицаПродукция = Новый ТаблицаЗначений;
	ТаблицаПродукция.Колонки.Добавить("Номенклатура");
	ТаблицаПродукция.Колонки.Добавить("ХарактеристикаНоменклатуры");
	ТаблицаПродукция.Колонки.Добавить("ЕдиницаИзмерения");
	ТаблицаПродукция.Колонки.Добавить("Количество");
	ТаблицаПродукция.Колонки.Добавить("Спецификация");
	
	ТаблицаМатериалыПродукция = Новый ТаблицаЗначений;
	ТаблицаМатериалыПродукция.Колонки.Добавить("Номенклатура");
	ТаблицаМатериалыПродукция.Колонки.Добавить("ХарактеристикаНоменклатуры");
	ТаблицаМатериалыПродукция.Колонки.Добавить("ЕдиницаИзмерения");
	ТаблицаМатериалыПродукция.Колонки.Добавить("Количество");
	ТаблицаМатериалыПродукция.Колонки.Добавить("Продукция");
	ТаблицаМатериалыПродукция.Колонки.Добавить("ХарактеристикаПродукции");
	ТаблицаМатериалыПродукция.Колонки.Добавить("Спецификация");
	ТаблицаМатериалыПродукция.Колонки.Добавить("Заказ");
	
	мМассивНоменклатуры = Новый Массив;
	
	ДеревоИсходныеКомплектующие.Строки.Очистить();
	
	Дата = ДокументОбъект.Дата;
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОтчетПроизводстваЗаСмену") Тогда
		Продукция = ДокументОбъект.Продукция;
		ЕстьХарактеристика = Истина;
		ЕстьЗаказВТабличнойЧасти = Истина;
		ЕстьЗаказНаПроизводствоВТабличнойЧасти = Истина;
		ЕстьВидВыпуска = Истина;
		ЕстьПараметрыВыпуска = Истина;
		ЕстьКоличествоДоделка = Истина;
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.АктОбОказанииПроизводственныхУслуг") Тогда
		Продукция = ДокументОбъект.Услуги;
		ЕстьХарактеристика = Ложь;
		ЕстьЗаказВТабличнойЧасти = Ложь;
		ЕстьЗаказНаПроизводствоВТабличнойЧасти = Истина;
		ЕстьВидВыпуска = Ложь;
		ЕстьПараметрыВыпуска = Истина;
		ЕстьКоличествоДоделка = Истина;
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПоступлениеТоваровИзПереработки") Тогда
		Продукция = ДокументОбъект.Продукция;
		ЕстьХарактеристика = Истина;
		ЕстьЗаказВТабличнойЧасти = Истина;
		ЕстьЗаказНаПроизводствоВТабличнойЧасти = Истина;
		ЕстьВидВыпуска = Ложь;
		ЕстьПараметрыВыпуска = Истина;
		ЕстьКоличествоДоделка = Ложь;
	Иначе
		Возврат;
	КонецЕсли;
	
	Параметры = Новый Структура("ПараметрыВыпуска, КоличествоУровнейРазузлования, ДатаСпецификации, Отбор");
	
	Отбор = Новый Структура("СписаниеКомплектующей", Перечисления.ВариантыСписанияКомплектующих.Всегда);
	Параметры.Отбор = Отбор;
	
	Для Каждого Строка Из Продукция Цикл
		
		Если НЕ ЗначениеЗаполнено(Строка.Спецификация) Тогда
			Продолжить;
		КонецЕсли;
		
		РезультатРазузлования = Новый Структура("ИсходныеКомплектующие");
		
		СтруктураИсточник = Новый Структура("Номенклатура, ХарактеристикаНоменклатуры, ЕдиницаИзмерения, Коэффициент, Количество, Спецификация");
		ЗаполнитьЗначенияСвойств(СтруктураИсточник, Строка);
		
		Если ЕстьКоличествоДоделка Тогда
			КоличествоВыпускБезНаработки = Строка.Количество - Строка.КоличествоДоделка;
			СтруктураИсточник.Количество = ?(КоличествоВыпускБезНаработки>0,КоличествоВыпускБезНаработки,0);
		КонецЕсли;
		
		Если ЕстьПараметрыВыпуска Тогда
			ПараметрыВыпуска = Новый Соответствие;
			Для Каждого ПараметрВыпуска из ДокументОбъект.ПараметрыВыпускаПродукции Цикл
				
				Если ПараметрВыпуска.КлючСвязи = Строка.КлючСвязи Тогда
					ПараметрыВыпуска.Вставить(ПараметрВыпуска.ВидПараметра.Наименование, ПараметрВыпуска.Значение);
				КонецЕсли;
				
			КонецЦикла;
			Параметры.ПараметрыВыпуска = ПараметрыВыпуска;
		КонецЕсли;
		
		Параметры.КоличествоУровнейРазузлования = 1;
		Параметры.ДатаСпецификации = Дата;
		
		МассивОшибок = РазузлованиеНоменклатуры.РазузловатьНоменклатуру(СтруктураИсточник, РезультатРазузлования, Параметры);
		
		Если МассивОшибок.Количество() > 0 Тогда
			
			Для каждого Ошибка из МассивОшибок Цикл
				
				ОбщегоНазначения.Сообщение("Ошибка: " + Ошибка.Причина, Ошибка.СтатусОшибки);
				ОбщегоНазначения.Сообщение(" Спецификация: " + Ошибка.Спецификация);
				ОбщегоНазначения.Сообщение(" Номер строки: " + Ошибка.НомерСтроки);
				ОбщегоНазначения.Сообщение(" Описание ошибки: " + Ошибка.ОписаниеОшибки);
			
			КонецЦикла;
			
		КонецЕсли;
		
		Если РезультатРазузлования.ИсходныеКомплектующие = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ТаблицаМатериалы = РезультатРазузлования.ИсходныеКомплектующие;
		ТаблицаМатериалы.Свернуть("Номенклатура, ХарактеристикаНоменклатуры, ЕдиницаИзмерения, СтатьяЗатрат,НомерОперацииМаршрута", "Количество");
		
		// Добавим строку продукции в дерево.
		НоваяСтрокаПродукции = ДеревоИсходныеКомплектующие.Строки.Добавить();
		НоваяСтрокаПродукции.Номенклатура = Строка.Номенклатура;
		Если ЕстьХарактеристика Тогда
			НоваяСтрокаПродукции.ХарактеристикаНоменклатуры = Строка.ХарактеристикаНоменклатуры;
		КонецЕсли;
		НоваяСтрокаПродукции.Спецификация = Строка.Спецификация;
		Если ЕстьЗаказВТабличнойЧасти Тогда
			НоваяСтрокаПродукции.Заказ = Строка.Заказ;
		КонецЕсли;
		Если ЕстьЗаказНаПроизводствоВТабличнойЧасти Тогда
			НоваяСтрокаПродукции.ЗаказВыпуска = Строка.ЗаказВыпуска;
		КонецЕсли;
		
		Для Каждого СтрокаМатериалов Из ТаблицаМатериалы Цикл
			
			// Добавим строку материалов в дерево.
			НоваяСтрокаМатериалов = НоваяСтрокаПродукции.Строки.Добавить();
			Если ЕстьВидВыпуска Тогда
				НоваяСтрокаМатериалов.ВидВыпуска = Строка.ВидВыпуска;
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(НоваяСтрокаМатериалов, СтрокаМатериалов);
			НоваяСтрокаМатериалов.КоличествоВыпуск = СтрокаМатериалов.Количество;
			НоваяСтрокаМатериалов.КоличествоВсего = СтрокаМатериалов.Количество;
			НоваяСтрокаМатериалов.Используется = Истина;
			НоваяСтрокаМатериалов.Коэффициент = СтрокаМатериалов.ЕдиницаИзмерения.Коэффициент;
			
			// Добавим строку в массив.
			мМассивНоменклатуры.Добавить(СтрокаМатериалов.Номенклатура);
			
			// Подберем аналоги для материалов.
			ТаблицаМатериалыПродукция.Очистить();
			НоваяСтрока = ТаблицаМатериалыПродукция.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаМатериалов);
			
			НоваяСтрока.Продукция = Строка.Номенклатура;
			Если ЕстьХарактеристика Тогда
				НоваяСтрока.ХарактеристикаПродукции = Строка.ХарактеристикаНоменклатуры;
			КонецЕсли;
			НоваяСтрока.Спецификация = Строка.Спецификация;
			
			ТаблицаАналогов = УправлениеПланированием.ПолучитьАналогиНоменклатуры(ТаблицаМатериалыПродукция, Истина);
			
			Для Каждого СтрокаАналогов Из ТаблицаАналогов Цикл
				
				НоваяСтрокаАналогов = НоваяСтрокаМатериалов.Строки.Добавить();
				Если ЕстьВидВыпуска Тогда
					НоваяСтрокаАналогов.ВидВыпуска = Строка.ВидВыпуска;
				КонецЕсли;
				НоваяСтрокаАналогов.СтатьяЗатрат = СтрокаМатериалов.СтатьяЗатрат;
				
				НоваяСтрокаАналогов.Приоритет = СтрокаАналогов.Приоритет;
				НоваяСтрокаАналогов.Номенклатура = СтрокаАналогов.Аналог;
				НоваяСтрокаАналогов.ХарактеристикаНоменклатуры = СтрокаАналогов.ХарактеристикаАналога;
				НоваяСтрокаАналогов.ЕдиницаИзмерения = СтрокаАналогов.ЕдиницаИзмеренияАналога;
				НоваяСтрокаАналогов.Количество = СтрокаАналогов.КоличествоАналога;
				НоваяСтрокаАналогов.Коэффициент = НоваяСтрокаАналогов.ЕдиницаИзмерения.Коэффициент;
				
				// Добавим строку в массив.
				мМассивНоменклатуры.Добавить(СтрокаАналогов.Аналог);
				
				Если ТипЗнч(СтрокаАналогов.Аналог) = Тип("СправочникСсылка.НоменклатурныеУзлы") Тогда
					Для Каждого КомплектующаяАналогаУзла Из СтрокаАналогов.Аналог.ИсходныеКомплектующие Цикл
					
						Если КомплектующаяАналогаУзла.ВидНорматива = Перечисления.ВидыНормативовНоменклатуры.Номенклатура Тогда
							НоваяСтрокаАналогаУзла = НоваяСтрокаАналогов.Строки.Добавить();
							Если ЕстьВидВыпуска Тогда
								НоваяСтрокаАналогаУзла.ВидВыпуска = Строка.ВидВыпуска;
							КонецЕсли;
							НоваяСтрокаАналогаУзла.СтатьяЗатрат = СтрокаМатериалов.СтатьяЗатрат;
							НоваяСтрокаАналогаУзла.Приоритет = СтрокаАналогов.Приоритет;
							НоваяСтрокаАналогаУзла.Номенклатура = КомплектующаяАналогаУзла.Номенклатура;
							НоваяСтрокаАналогаУзла.ХарактеристикаНоменклатуры = КомплектующаяАналогаУзла.ХарактеристикаНоменклатуры;
							НоваяСтрокаАналогаУзла.ЕдиницаИзмерения = КомплектующаяАналогаУзла.ЕдиницаИзмерения;
							НоваяСтрокаАналогаУзла.Количество = КомплектующаяАналогаУзла.Количество * СтрокаАналогов.КоличествоАналога;
							НоваяСтрокаАналогаУзла.Коэффициент = КомплектующаяАналогаУзла.ЕдиницаИзмерения.Коэффициент;
							
							// Добавим строку в массив.
							мМассивНоменклатуры.Добавить(КомплектующаяАналогаУзла.Номенклатура);
						КонецЕсли;
						
					КонецЦикла;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
		ЭлементыФормы.ДеревоИсходныеКомплектующие.Развернуть(НоваяСтрокаПродукции, Истина);
		
	КонецЦикла;
	
	ПолучитьОстаткиНоменклатуры();
	
КонецПроцедуры // ЗаполнитьМатериалыИАналоги()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если ДокументОбъект = Неопределено Тогда
		
		Отказ = Истина;
		Предупреждение("Не верный тип реквизита ""ДокументОбъект""!
		               |Данная обработка вызывается из других процедур конфигурации.
		               |Вручную ее вызывать запрещено."); 
		Возврат;

	КонецЕсли;
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()
	
	ЗаполнитьИсходныеКомплектующие();
	
КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "Нажатие" кнопки "ОК".
//
Процедура КоманднаяПанельДействийОК(Кнопка)
	
	// Действи выполняется, если еще не закрыли документ.
	Если ДокументОбъект <> Неопределено Тогда
		
		Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОтчетПроизводстваЗаСмену") Тогда
			ЕстьВидВыпуска = Истина;
			ЕстьЗаказВТабличнойЧасти = Истина;
			ЕстьЗаказНаПроизводствоВТабличнойЧасти = Истина;
		ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.АктОбОказанииПроизводственныхУслуг") Тогда
			ЕстьВидВыпуска = Ложь;
			ЕстьЗаказВТабличнойЧасти = Ложь;
			ЕстьЗаказНаПроизводствоВТабличнойЧасти = Истина;
		ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПоступлениеТоваровИзПереработки") Тогда
			ЕстьВидВыпуска = Ложь;
			ЕстьЗаказВТабличнойЧасти = Истина;
			ЕстьЗаказНаПроизводствоВТабличнойЧасти = Истина;
		Иначе
			Возврат;
		КонецЕсли;
		
		Материалы = ДокументОбъект.Материалы;
		
		Если Материалы.Количество() > 0 Тогда
			Ответ = Вопрос("Табличная часть ""Материалы"" уже содержит строки."
						  + Символы.ПС + "При заполнении они будут удалены!" + Символы.ПС,
						   РежимДиалогаВопрос.ДаНет);
			Если Не Ответ = КодВозвратаДиалога.Да Тогда
				Закрыть();
				Возврат;
			КонецЕсли;
			Материалы.Очистить();
		КонецЕсли;
		
		Для Каждого СтрокаПродукции Из ДеревоИсходныеКомплектующие.Строки Цикл
			
			Для Каждого СтрокаМатериала Из СтрокаПродукции.Строки Цикл
				
				Если СтрокаМатериала.Используется Тогда
				
					Если СтрокаМатериала.КоличествоВыпуск <> 0 Тогда
						НоваяСтрока = Материалы.Добавить();
						Если ЕстьВидВыпуска Тогда
							НоваяСтрока.ВидВыпуска 				= СтрокаМатериала.ВидВыпуска;
						КонецЕсли;
						Если ЕстьЗаказВТабличнойЧасти Тогда
							НоваяСтрока.Заказ 					= СтрокаПродукции.Заказ;
						КонецЕсли;
						Если ЕстьЗаказНаПроизводствоВТабличнойЧасти Тогда
							НоваяСтрока.ЗаказВыпуска 	= СтрокаПродукции.ЗаказВыпуска;
						КонецЕсли;
						НоваяСтрока.Спецификация 				= СтрокаПродукции.Спецификация;
						
						НоваяСтрока.Номенклатура 				= СтрокаМатериала.Номенклатура;
						НоваяСтрока.ХарактеристикаНоменклатуры 	= СтрокаМатериала.ХарактеристикаНоменклатуры;
						НоваяСтрока.ЕдиницаИзмерения 			= СтрокаМатериала.ЕдиницаИзмерения;
						НоваяСтрока.Коэффициент 				= СтрокаМатериала.ЕдиницаИзмерения.Коэффициент;
						НоваяСтрока.СтатьяЗатрат 				= СтрокаМатериала.СтатьяЗатрат;
						НоваяСтрока.Количество 					= СтрокаМатериала.КоличествоВыпуск;
						
						ОбработкаТабличныхЧастей.ЗаполнитьЕдиницуМестТабЧасти(НоваяСтрока, ДокументОбъект, Ложь);
					КонецЕсли;
					
					Для Каждого СтрокаАналога Из СтрокаМатериала.Строки Цикл
						
						Если ТипЗнч(СтрокаАналога.Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
							
							Если СтрокаАналога.КоличествоВыпуск = 0 Тогда
								Продолжить;
							КонецЕсли;
						
							НоваяСтрока = Материалы.Добавить();
							Если ЕстьВидВыпуска Тогда
								НоваяСтрока.ВидВыпуска 				= СтрокаМатериала.ВидВыпуска;
							КонецЕсли;
							Если ЕстьЗаказВТабличнойЧасти Тогда
								НоваяСтрока.Заказ 					= СтрокаПродукции.Заказ;
							КонецЕсли;
							Если ЕстьЗаказНаПроизводствоВТабличнойЧасти Тогда
								НоваяСтрока.ЗаказВыпуска 	= СтрокаПродукции.ЗаказВыпуска;
							КонецЕсли;
							НоваяСтрока.Спецификация 				= СтрокаПродукции.Спецификация;
							
							НоваяСтрока.Номенклатура 				= СтрокаАналога.Номенклатура;
							НоваяСтрока.ХарактеристикаНоменклатуры 	= СтрокаАналога.ХарактеристикаНоменклатуры;
							НоваяСтрока.ЕдиницаИзмерения 			= СтрокаАналога.ЕдиницаИзмерения;
							НоваяСтрока.Коэффициент 				= СтрокаАналога.ЕдиницаИзмерения.Коэффициент;
							НоваяСтрока.СтатьяЗатрат 				= СтрокаАналога.СтатьяЗатрат;
							НоваяСтрока.Количество 					= СтрокаАналога.КоличествоВыпуск;
							
							ОбработкаТабличныхЧастей.ЗаполнитьЕдиницуМестТабЧасти(НоваяСтрока, ДокументОбъект, Ложь);
							
						Иначе // Это номенклатурный узел
						
							Для Каждого СтрокаУзла Из СтрокаАналога.Строки Цикл
							
								Если СтрокаУзла.КоличествоВыпуск = 0 Тогда
									Продолжить;
								КонецЕсли;
								
								Если ТипЗнч(СтрокаУзла.Номенклатура) <> Тип("СправочникСсылка.Номенклатура") Тогда
									Продолжить;
								КонецЕсли;
								
								НоваяСтрока = Материалы.Добавить();
								Если ЕстьВидВыпуска Тогда
									НоваяСтрока.ВидВыпуска = СтрокаУзла.ВидВыпуска;
								КонецЕсли;
								Если ЕстьЗаказВТабличнойЧасти Тогда
									НоваяСтрока.Заказ      = СтрокаУзла.Заказ;
								КонецЕсли;
								Если ЕстьЗаказНаПроизводствоВТабличнойЧасти Тогда
									НоваяСтрока.ЗаказВыпуска 	= СтрокаУзла.ЗаказВыпуска;
								КонецЕсли;
								НоваяСтрока.Спецификация   = СтрокаПродукции.Спецификация;
								
								НоваяСтрока.Номенклатура 				= СтрокаУзла.Номенклатура;
								НоваяСтрока.ХарактеристикаНоменклатуры 	= СтрокаУзла.ХарактеристикаНоменклатуры;
								НоваяСтрока.ЕдиницаИзмерения 			= СтрокаУзла.ЕдиницаИзмерения;
								НоваяСтрока.Коэффициент 				= СтрокаУзла.ЕдиницаИзмерения.Коэффициент;
								НоваяСтрока.СтатьяЗатрат 				= СтрокаУзла.СтатьяЗатрат;
								НоваяСтрока.Количество 					= СтрокаУзла.КоличествоВыпуск;
								
								ОбработкаТабличныхЧастей.ЗаполнитьЕдиницуМестТабЧасти(НоваяСтрока, ДокументОбъект, Ложь);
								
							КонецЦикла;
							
						КонецЕсли;
						
					КонецЦикла;
						
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
		
	// Можно закрывать форму.
	Закрыть();
	
КонецПроцедуры // КоманднаяПанельДействийОК()

// Процедура - обработчик события "Нажатие" кнопки "Автозамена".
//
Процедура КоманднаяПанельДеревоИсходныеКомплектующиеАвтозамена(Кнопка)
	
	АвтозаменаНаАналоги(ДеревоИсходныеКомплектующие);
	
КонецПроцедуры // КоманднаяПанельДеревоИсходныеКомплектующиеАвтозамена()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ "ДЕРЕВО ИСХОДНЫЕ КОМПЛЕКТУЮЩИЕ"

// Процедура - обработчик нажатия на кнопку "Обновить"
// командной панели "ДеревоИсходныеКомплектующие".
//
Процедура КоманднаяПанельДеревоИсходныеКомплектующиеОбновить(Кнопка)
	
	ЗаполнитьИсходныеКомплектующие();
	
КонецПроцедуры // КоманднаяПанельДеревоИсходныеКомплектующиеОбновить()

// Процедура - обработчик события "Выбор" табличного поля "ДеревоМатериалы".
//
Процедура ДеревоИсходныеКомплектующиеВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Колонка.ТолькоПросмотр Тогда
		
		СтандартнаяОбработка = Ложь;
		Значение = ВыбраннаяСтрока[Колонка.Имя];
		Если ЗначениеЗаполнено(Значение) Тогда
			ОткрытьЗначение(Значение);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ДеревоИсходныеКомплектующиеВыбор()

// Процедура - обработчик события "ПриВыводеСтроки" табличного поля "ДеревоМатериалы".
//
Процедура ДеревоИсходныеКомплектующиеПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ЭтоУзел = ТипЗнч(ДанныеСтроки.Номенклатура) = Тип("СправочникСсылка.НоменклатурныеУзлы");
	
	Если ДанныеСтроки.Уровень() > 0 И Не ЭтоУзел Тогда
		ОформлениеСтроки.Ячейки.КоличествоВыпуск.ЦветФона = Новый Цвет(255, 255, 192);
	Иначе
		ОформлениеСтроки.Ячейки.КоличествоВыпуск.ЦветФона = Новый Цвет();
	КонецЕсли;
	
	ОформлениеСтроки.Ячейки.Используется.ОтображатьТекст  = Ложь;
	Если ДанныеСтроки.Уровень() = 1 Тогда
		ОформлениеСтроки.Ячейки.Используется.ОтображатьФлажок = Истина;
		ОформлениеСтроки.Ячейки.Используется.Флажок           = ДанныеСтроки.Используется;
	Иначе
		ОформлениеСтроки.Ячейки.Используется.ОтображатьФлажок = Ложь;
	КонецЕсли;
	
	Если (ДанныеСтроки.Уровень() = 1 И Не ДанныеСтроки.Используется)
	 ИЛИ (ДанныеСтроки.Уровень() = 2 И Не ДанныеСтроки.Родитель.Используется)
	 ИЛИ (ДанныеСтроки.Уровень() = 3 И Не ДанныеСтроки.Родитель.Родитель.Используется) Тогда
		ОформлениеСтроки.ЦветТекста = Новый Цвет(128, 128, 128);
		ОформлениеСтроки.Ячейки.КоличествоВыпуск.ТолькоПросмотр = Истина;
	Иначе
		ОформлениеСтроки.ЦветТекста = Новый Цвет();
		Если ДанныеСтроки.Уровень() > 0 И Не ЭтоУзел Тогда
			ОформлениеСтроки.Ячейки.КоличествоВыпуск.ТолькоПросмотр = Ложь;
			ОформлениеСтроки.Ячейки.КоличествоВыпуск.Видимость = Истина;
		Иначе
			ОформлениеСтроки.Ячейки.КоличествоВыпуск.ТолькоПросмотр = Истина;
			ОформлениеСтроки.Ячейки.КоличествоВыпуск.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ДеревоИсходныеКомплектующиеПриВыводеСтроки()

// Процедура - обработчик события "ПриИзмененииФлажка" табличного поля "ДеревоИсходныеКомплектующие".
//
Процедура ДеревоИсходныеКомплектующиеПриИзмененииФлажка(Элемент, Колонка)
	
	СтрокаДереваЗначений = Элемент.ТекущиеДанные;
	СтрокаДереваЗначений.Используется = Не СтрокаДереваЗначений.Используется;
	
КонецПроцедуры // ДеревоИсходныеКомплектующиеПриИзмененииФлажка()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ "ДЕРЕВО ИСХОДНЫЕ КОМПЛЕКТУЮЩИЕ"

// Процедура - обработчик события "ПриИзменении" поля "КоличествоВыпуск" 
// табличного поля "ДеревоИсходныеКомплектующие".
//
Процедура ДеревоИсходныеКомплектующиеКоличествоВыпускПриИзменении(Элемент)
	
	СтрокаДереваЗначений = ЭлементыФормы.ДеревоИсходныеКомплектующие.ТекущиеДанные;
	Уровень = СтрокаДереваЗначений.Уровень();
	
	Если Уровень = 2 Тогда
		СтрокаДереваЗначений = СтрокаДереваЗначений.Родитель;
	ИначеЕсли Уровень = 3 Тогда
		СтрокаДереваЗначений = СтрокаДереваЗначений.Родитель.Родитель;
	КонецЕсли;
		
	СтрокаДереваЗначений.КоличествоВсего = СтрокаДереваЗначений.КоличествоВыпуск;
	Для Каждого Строка Из СтрокаДереваЗначений.Строки Цикл
		Если Уровень = 2 Тогда
			СтрокаДереваЗначений.КоличествоВсего = СтрокаДереваЗначений.КоличествоВсего + Строка.КоличествоВыпуск * Строка.Коэффициент;
		КонецЕсли;
		Если Уровень = 3 Тогда
			Для Каждого СтрокаУзла Из Строка.Строки Цикл
				СтрокаДереваЗначений.КоличествоВсего = СтрокаДереваЗначений.КоличествоВсего + СтрокаУзла.КоличествоВыпуск * СтрокаУзла.Коэффициент;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры // ДеревоИсходныеКомплектующиеКоличествоВыпускПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля "СкладОстатков" 
//
Процедура СкладОстатковПриИзменении(Элемент)

	ПолучитьОстаткиНоменклатуры();

КонецПроцедуры // СкладОстатковПриИзменении()

// Процедура - обработчик события "Очистка" поля "СкладОстатков" 
//
Процедура СкладОстатковОчистка(Элемент, СтандартнаяОбработка)

	ПолучитьОстаткиНоменклатуры();

КонецПроцедуры // СкладОстатковОчистка()