Перем ВалютаРегламентированногоУчета;
Перем ДокументГраницы,ПериодГраницы;

Процедура КнопкаВыполнитьНажатие(Элемент)
	ВосстановитьПоследовательность_НУ_УСН();
КонецПроцедуры

// Определяет рабочий период документа
//
// Параметры:
//  СтруктураПараметров - структура, содержащая набор параметров.
//
Функция  ОпределитьРабочийПериод(ДатаКон)

	//По последовательности определяем дату
	Отбор = Новый Структура ("Организация",Организация);

	Период = Последовательности.НалоговыйУчетУСН.ПолучитьГраницу(Отбор);
	Если Период.Дата>ДатаКон тогда
		ОбщегоНазначения.СообщитьОбОшибке("Граница последовательности по налоговому учету УСН больше чем указанная дата.
		|Восстановление последовательности производиться не будет.");
		Возврат Ложь;
	КонецЕсли;
	ДокументГраницы = Период.Ссылка;
	ПериодГраницы   = Период.Дата;

	Возврат  Период;
КонецФункции // ОпределитьРабочийПериод()

Процедура ВосстановитьПоследовательность_НУ_УСН()
	
	МоментВремени  = ОпределитьРабочийПериод(ДатаАктуализации);
	
	Если МоментВремени=Ложь Тогда
		Возврат;
	КонецЕсли; 
	
	ПоследовательностьДляРегистрации = Последовательности.НалоговыйУчетУСН;
	ВидыДокументовПоследовательности = Метаданные.Последовательности.НалоговыйУчетУСН.Документы;
	
	ДатаНач = МоментВремени.Дата;
	ТекстЗапроса = "";
	
	СпособОпределения = глЗначениеПеременной("ОпределениеВремениПроведенияПлатежногоДокумента");
	
	Для каждого Документ Из ВидыДокументовПоследовательности Цикл
		Если не ПустаяСтрока(ТекстЗапроса) Тогда
			ТекстЗапроса = ТекстЗапроса + Символы.ПС+ "Объединить Все"+Символы.ПС;
		КонецЕсли; 
		Если Документ.Реквизиты.Найти("ДатаОплаты")= Неопределено тогда
			ЗаписьПериода = "Дата";
		Иначе
			Если СпособОпределения=Перечисления.СпособыОпределенияВремениПроведенияПлатежногоДокумента.ПоВремениРегистрацииДокумента Тогда
				ЗаписьПериода = "ВЫБОР КОГДА КонецПериода(Дата, День) = КонецПериода(ДатаОплаты, День) ТОГДА Дата ИНАЧЕ КонецПериода(ДатаОплаты, День) КОНЕЦ"; 
			Иначе
				ЗаписьПериода = "КонецПериода(ДатаОплаты, День) ";
			КонецЕсли;
		КонецЕсли;	
		ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
		   | Ссылка,
		   | Дата,
		   | "+ЗаписьПериода+"  как ПериодРегистрации
		   |
		   |ИЗ
		   |	Документ."+Документ.Имя+" КАК ДокументПоследовательности
		   |
		   |ГДЕ
		   |	"+ЗаписьПериода+" МЕЖДУ &НачалоПериода И &КонецПериода И
		   |	(ДокументПоследовательности.Проведен = Истина) И
		   |	(ДокументПоследовательности.Организация = &Организация) 
		   |";
	КонецЦикла; 
	   
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("НачалоПериода"	,ДатаНач );
	Запрос.УстановитьПараметр("КонецПериода"	,КонецДня(ДатаАктуализации));
	Запрос.УстановитьПараметр("Организация"		,Организация );

	Результат = Запрос.Выполнить();
		
	ТаблицаДокументов = Результат.Выгрузить(ОбходРезультатаЗапроса.Прямой);
	ТаблицаДокументов.Сортировать("ПериодРегистрации,Дата,Ссылка");
		
	Результат = ОбработатьДвижения(ТаблицаДокументов,ПоследовательностьДляРегистрации.СоздатьНаборЗаписей());
	Если Результат.Ошибка тогда
		ОбщегоНазначения.СообщитьОбОшибке("Обнаружена ошибка при проведении документа """+Результат.ДокументОшибки+""".
		| Граница последовательности налогового учета по УСН установлена на "+Строка(ПериодГраницы)+"("+Строка(ДокументГраницы)+")",,"Восстановление последовательности по налоговому учету УСН");
		ПоследовательностьДляРегистрации.УстановитьГраницу(Новый МоментВремени(ПериодГраницы,ДокументГраницы),Новый Структура("Организация",Организация));
	Иначе
		Состояние("Восстановление последовательности документов по налоговому учету УСН успешно завершено.");
		ПоследовательностьДляРегистрации.УстановитьГраницу(Новый МоментВремени(ПериодГраницы,ДокументГраницы),Новый Структура("Организация",Организация));
	КонецЕсли;

КонецПроцедуры
	
Функция ОбработатьДвижения(ТаблицаДвижений,ПоследовательностьДляРегистрации)
	Граница = КонецДня(ДатаАктуализации);
	Для каждого Документ из  ТаблицаДвижений Цикл
		Состояние("Корректировка движений документа: " + Документ.Ссылка);
		Попытка
			НалоговыйУчетУСН.ДвиженияУСН(Документ.Ссылка);
		Исключение
			ЕстьОшибка = Истина;
			ДокументОшибки  = Документ.Ссылка;
			Возврат Новый структура ("Ошибка,ДокументОшибки",ЕстьОшибка,ДокументОшибки)
		КонецПопытки;
		ПоследовательностьДляРегистрации.Отбор.Регистратор.Установить(Документ.Ссылка);
		ПоследовательностьДляРегистрации.Очистить();
		ЗаписьРегистрации = ПоследовательностьДляРегистрации.Добавить();
		ЗаписьРегистрации.Период = Документ.ПериодРегистрации;
		ЗаписьРегистрации.Организация = Организация;
		ПоследовательностьДляРегистрации.Записать();
		
		ДокументГраницы = Документ.Ссылка;
		ПериодГраницы	= Документ.ПериодРегистрации;
	КонецЦикла;
	
	Возврат Новый структура ("Ошибка",Ложь);
КонецФункции // 

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ДатаАктуализации = РабочаяДата;
	
КонецПроцедуры