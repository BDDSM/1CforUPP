////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мУдаленныйПериодИндексации;
Перем мПериодИндексацииДоИзменения;
Перем мОрганизацииПолучателей;

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, ВыбираемаяДата, ЭтаФорма, НачальноеЗначение, МаксимальныйМесяц) Экспорт

	СтандартнаяОбработка = Ложь;
	Если НачальноеЗначение = Неопределено Тогда
		НачальноеЗначение = ВыбираемаяДата;
	КонецЕсли;
	СписокВыбора = Новый СписокЗначений;
	НачалоТекущегоГода = НачалоГода(НачальноеЗначение);
	НачалоПрошлогоГода = НачалоГода(НачалоТекущегоГода - 1);
	СписокВыбора.Добавить(НачалоПрошлогоГода, (Формат(НачалоПрошлогоГода, "ДФ='yyyy'") + "..."));
	НачалоМесяцаЗаполнения = НачалоТекущегоГода;
	ЭлементПоУмолчанию = Неопределено;
	Для а = 1 По 12 Цикл
		ДобавленныйЭлемент = СписокВыбора.Добавить(НачалоМесяцаЗаполнения, РаботаСДиалогами.ДатаКакМесяцПредставление(НачалоМесяцаЗаполнения));
		Если НачальноеЗначение = НачалоМесяцаЗаполнения Тогда
			ЭлементПоУмолчанию = ДобавленныйЭлемент;
		КонецЕсли;
		
		Если НачалоМесяцаЗаполнения = МаксимальныйМесяц Тогда
			Прервать;	
		КонецЕсли;
		НачалоМесяцаЗаполнения = ДобавитьМесяц(НачалоМесяцаЗаполнения, 1);
		
	КонецЦикла;
	Если НачалоМесяцаЗаполнения < МаксимальныйМесяц Тогда
		НачалоСледующегоГода = КонецГода(НачалоТекущегоГода) + 1;
		СписокВыбора.Добавить(НачалоСледующегоГода, (Формат(НачалоСледующегоГода, "ДФ='yyyy'") + "..."));
	КонецЕсли;
	
	ВыбранныйЭлемент = ЭтаФорма.ВыбратьИзСписка(СписокВыбора, Элемент, ЭлементПоУмолчанию);
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	ИначеЕсли Год(ВыбранныйЭлемент.Значение) <> Год(НачальноеЗначение) Тогда
		НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, ВыбираемаяДата, ЭтаФорма, ВыбранныйЭлемент.Значение, МаксимальныйМесяц);
		Возврат;
	КонецЕсли;
	
	ВыбираемаяДата = ВыбранныйЭлемент.Значение;
	Элемент.Значение  = РаботаСДиалогами.ДатаКакМесяцПредставление(ВыбираемаяДата);
	
КонецПроцедуры

Процедура ПересчитатьРазмерыПособий()

	ТекущаяСтрока = ЭлементыФормы.Индексации.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат
	КонецЕсли;

	//индексируем все пособия с текущей строки и ниже
	СтруктураПоиска = Новый Структура("ВидПособия, Период");
	СтруктураПоискаДоИндексации = Новый Структура("ВидПособия");
	
	ИндексСтрокиИндексации = Индексации.Индекс(ТекущаяСтрока);
	Если ИндексСтрокиИндексации = 0 Тогда
		
		ДатаНачалаИндексации = '20080101';
		СтруктураПоиска.Период = ТекущаяСтрока.Период;
		
		//Индексируем эту строку особым образом
		Для каждого ЭлементМассива Из МассивПособий Цикл
			
			СтруктураПоиска.ВидПособия = ЭлементМассива;
			СтруктураПоискаДоИндексации.ВидПособия = ЭлементМассива;
			
			СтрокаТЗИсходноеЗначение = РазмерыПособий.НайтиСтроки(СтруктураПоискаДоИндексации);
			ПредыдущийПериод = '00010101';
			ПредыдущийРазмер = 0;
			Для каждого СтрокаТаблицы Из СтрокаТЗИсходноеЗначение Цикл
				Если СтрокаТаблицы.Период > ПредыдущийПериод и СтрокаТаблицы.Период < ДатаНачалаИндексации Тогда
					ПредыдущийПериод = СтрокаТаблицы.Период;
					ПредыдущийРазмер = СтрокаТаблицы.Размер;
				КонецЕсли;
			КонецЦикла;
			
			СтрокаТЗ = РазмерыПособий.НайтиСтроки(СтруктураПоиска);
			
			СтрокаТЗ[0].Размер = ПредыдущийРазмер + Окр(ПредыдущийРазмер * ТекущаяСтрока.Процент / 100,2);
			
		КонецЦикла;
		ИндексСтрокиИндексации = ИндексСтрокиИндексации + 1;
		
	КонецЕсли;	
	
	Для Сч = ИндексСтрокиИндексации По Индексации.Количество() - 1 Цикл
		
		ТекущийПериод 	  = Индексации.Получить(Сч).Период;
		ПроцентИндексации = Индексации.Получить(Сч).Процент;
		
		// получим значение предыдущего периода индексации, для выбора по нему размеров пособий
		ИндексПредыдущейСтроки = Сч - 1;
		ПредыдущийПериод = Индексации.Получить(ИндексПредыдущейСтроки).Период;
		
		Для каждого ЭлементМассива Из МассивПособий Цикл
			Если ТекущийПериод >= ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами() И ЭлементМассива = Перечисления.РазмерыГосударственныхПособий.МаксимумПособияПоУходуЗаРебенкомДоПолутораЛет Тогда
				Продолжить;
			КонецЕсли;
			
			СтруктураПоиска.ВидПособия = ЭлементМассива;
			
			СтруктураПоиска.Период = ПредыдущийПериод;
			СтрокаТЗИсходноеЗначение = РазмерыПособий.НайтиСтроки(СтруктураПоиска);
			
			СтруктураПоиска.Период = ТекущийПериод;
			СтрокаТЗ = РазмерыПособий.НайтиСтроки(СтруктураПоиска);
			
			СтрокаТЗ[0].Размер = СтрокаТЗИсходноеЗначение[0].Размер + Окр(СтрокаТЗИсходноеЗначение[0].Размер * ПроцентИндексации / 100,2);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьОтборВТаблицеРазмерыПособий(ТекущийПериод = Неопределено)

	Если Не ЗначениеЗаполнено(ТекущийПериод) Тогда
		ТекущийПериод = '00010101';
		ТекущаяСтрока = ЭлементыФормы.Индексации.ТекущаяСтрока;
		Если ТекущаяСтрока <> Неопределено Тогда
			ТекущийПериод = ТекущаяСтрока.Период;
		КонецЕсли;
	КонецЕсли;
	
	ЭлементыФормы.РазмерыПособий.ОтборСтрок.Период.ВидСравнения = ВидСравнения.Равно;
	ЭлементыФормы.РазмерыПособий.ОтборСтрок.Период.Использование = Истина;
	ЭлементыФормы.РазмерыПособий.ОтборСтрок.Период.Значение = ТекущийПериод;
	
КонецПроцедуры

Процедура ОткрытьСкрытьСписок(Скрыть = Истина)

	РаботаСДиалогамиЗК.ИзменитьВидимостьПанелиРасчетногоЛистка(ЭлементыФормы.ПанельДанных, Скрыть, ЭлементыФормы.НадписьСсылкаОтрытиеСписка, ЭлементыФормы.ПанельДокументовИсправлений, ЭлементыФормы.Разделитель);
	ЭлементыФормы.НадписьСсылкаОтрытиеСписка.Заголовок = ?(ЭлементыФормы.ПанельДокументовИсправлений.Свертка = РежимСверткиЭлементаУправления.Нет, "Скрыть список документов-исправлений", "Показать список документов-исправлений");

КонецПроцедуры

Процедура ОбновитьДатуВСтрокахРазмеров(НовоеЗначение)

	Если ЗначениеЗаполнено(мПериодИндексацииДоИзменения) И мПериодИндексацииДоИзменения <> НовоеЗначение Тогда
		СвязанныеСтроки = РазмерыПособий.НайтиСтроки(Новый Структура("Период",мПериодИндексацииДоИзменения));
		Для каждого СтрокаТЧ Из СвязанныеСтроки Цикл
			СтрокаТЧ.Период = НовоеЗначение
		КонецЦикла;
		мПериодИндексацииДоИзменения = НовоеЗначение;
		УстановитьОтборВТаблицеРазмерыПособий(НовоеЗначение);
	КонецЕсли;

КонецПроцедуры

Функция ВыбратьСтрокиПоОрганизации(Имя, НачалоИмени = "")

	Если Не ЗначениеЗаполнено(НачалоИмени) Тогда
		Возврат Новый Массив
	КонецЕсли;
	
	ИндексОрганизации = Число(СтрЗаменить(Имя, НачалоИмени,""));
	Если ИндексОрганизации >= мОрганизацииПолучателей.Количество() Тогда
		Возврат Новый Массив
	КонецЕсли;
	
	Возврат ПолучателиПособий.НайтиСтроки(Новый Структура("ОбособленноеПодразделение", мОрганизацииПолучателей[ИндексОрганизации].ОбособленноеПодразделение));

КонецФункции // ВыбратьСтрокиПоОрганизации()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ПолучитьДанныеДляИндексирования();
	
	КоличествоИндексаций = Индексации.Количество();
	Если КоличествоИндексаций > 0 Тогда
		СтрокаТЧ = Индексации.Получить(КоличествоИндексаций - 1);
		ЭлементыФормы.Индексации.ТекущаяСтрока = СтрокаТЧ;
	КонецЕсли;
	
	ЭлементыФормы.Индексации.ОтборСтрок.Период.ВидСравнения = ВидСравнения.БольшеИлиРавно;
	ЭлементыФормы.Индексации.ОтборСтрок.Период.Использование = Истина;
	ЭлементыФормы.Индексации.ОтборСтрок.Период.Значение = '20080101';
	
	УстановитьОтборВТаблицеРазмерыПособий();
	
КонецПроцедуры

Процедура ПриОткрытии()

	РежимПоказа = ?(Не ЗначениеЗаполнено(КлючУникальности), "Индексация", КлючУникальности);
	
	КнопкаВыполнить = ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Выполнить;
	Если РежимПоказа = "Индексация" Тогда
		ЭлементыФормы.ПанельДанных.ТекущаяСтраница = ЭлементыФормы.ПанельДанных.Страницы.СтраницаИндексирование;
 		КнопкаВыполнить.Текст = "Записать результаты индексации";
	Иначе
		ЭлементыФормы.ПанельДанных.ТекущаяСтраница = ЭлементыФормы.ПанельДанных.Страницы.СтраницаПерерасчетПособий;	
		КнопкаВыполнить.Текст = "Записать результаты перерасчета";
	КонецЕсли;
	
	// Заполним даты
	Если Не ЗначениеЗаполнено(ПериодРегистрации) Тогда
		ПериодРегистрации = НачалоМесяца(ОбщегоНазначения.ПолучитьРабочуюДату());
	КонецЕсли;
	МесяцСтрока2 = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодРегистрации);
	Если Не ЗначениеЗаполнено(ДатаОкончания) Тогда
		ДатаОкончания = ДобавитьМесяц(НачалоМесяца(ОбщегоНазначения.ПолучитьРабочуюДату()), - 1);
	КонецЕсли;
	МесяцСтрока1 = РаботаСДиалогами.ДатаКакМесяцПредставление(ДатаОкончания);
	Если Не ЗначениеЗаполнено(ДатаНачала) Тогда
		ДатаНачала = ДатаОкончания;
	КонецЕсли;
	МесяцСтрока = РаботаСДиалогами.ДатаКакМесяцПредставление(ДатаНачала);
	
    мОрганизацииПолучателей = Новый ТаблицаЗначений;
	мОрганизацииПолучателей.Колонки.Добавить("ОбособленноеПодразделение");
	мОрганизацииПолучателей.Колонки.Добавить("НаименованиеОбособленногоПодразделения");
	ЭлементыФормы.ПолучателиПособий.Колонки.Группа.ТекстШапки = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация");
	ЭлементыФормы.Исправления.Колонки.Организация.ТекстШапки = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация");
	ЭлементыФормы.КоманднаяПанельНесколькоОрганизаций.Видимость = Ложь;
	ЭлементыФормы.КоманднаяПанельОднаОрганизация.Видимость = Истина;
	ЭлементыФормы.ПанельДокументовИсправлений.Свертка = РежимСверткиЭлементаУправления.Низ;
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	ВсегоПособий = ПолучателиПособий.Количество();
	ВсегоИсправлений = Исправления.Количество();
	НеПроведенныхИсправлений = Исправления.НайтиСтроки(Новый Структура("Проведен",Ложь)).Количество();
	
	ТекстСообщения = "";
	Если ВсегоИсправлений = 0 Тогда
		ТекстСообщения = "Результаты перерасчета пособий еще не регистрировались";
		ВажностьСообщения = "Информация";
	ИначеЕсли НеПроведенныхИсправлений > 0 Тогда
		ВажностьСообщения = "СообщениеОПроблемах";
		ТекстСообщения = "По результатам перерасчета " + ?(ВсегоИсправлений = 1, "исправлен ", "исправлено ") + ВсегоИсправлений + " " + ОбщегоНазначения.ФормаМножественногоЧисла("документ", "документа", "документов", ВсегоИсправлений) + ". "
				+ "Из них не удалось провести " + НеПроведенныхИсправлений + " " + ОбщегоНазначения.ФормаМножественногоЧисла("документ", "документа", "документов", НеПроведенныхИсправлений) + ". ";
	Иначе	
		ТекстСообщения = "По результатам перерасчета " + ?(ВсегоИсправлений = 1, "исправлен ", "исправлено ") + ВсегоИсправлений + " " + ОбщегоНазначения.ФормаМножественногоЧисла("документ", "документа", "документов", ВсегоИсправлений);
		ВажностьСообщения = "Информация";
	КонецЕсли;
	
	РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьИнформацияОРезультатах,ЭлементыФормы.ПолеКартинкиИнформацияОРезультатах, ТекстСообщения, ВажностьСообщения);
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	РаботаСДиалогамиЗК.ИзменитьВидимостьПанелиРасчетногоЛистка(ЭлементыФормы.ПанельДанных, Ложь, ЭлементыФормы.НадписьСсылкаОтрытиеСписка, ЭлементыФормы.ПанельДокументовИсправлений, ЭлементыФормы.Разделитель);
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ОбновитьФорму" Тогда
		Если ТипЗнч(Параметр) = Тип("Структура") Тогда
			
			Команда = "";
			Если Параметр.Свойство("Команда",Команда) Тогда  // Источник прислал структуру параметров с командой
				Если Команда = "ДоступностьИсправленногоДокумента" Тогда
					Если ЗначениеЗаполнено(Источник) Тогда 
						 СтрокаДокумента = Исправления.Найти(Источник,"ДокументИсправление");
						 Если СтрокаДокумента <> Неопределено Тогда
						 	 Запрос = Новый Запрос;
							 Запрос.УстановитьПараметр("Ссылка",Источник);
							 Запрос.Текст =
							 "ВЫБРАТЬ
							 |	НачислениеЗарплатыРаботникамОрганизаций.Проведен,
							 |	НачислениеЗарплатыРаботникамОрганизаций.ПометкаУдаления
							 |ИЗ
							 |	Документ.НачислениеЗарплатыРаботникамОрганизаций КАК НачислениеЗарплатыРаботникамОрганизаций
							 |ГДЕ
							 |	НачислениеЗарплатыРаботникамОрганизаций.Ссылка = &Ссылка
							 |
							 |ОБЪЕДИНИТЬ ВСЕ
							 |
							 |ВЫБРАТЬ
							 |	НачислениеЕдиновременныхПособийЗаСчетФСС.Проведен,
							 |	НачислениеЕдиновременныхПособийЗаСчетФСС.ПометкаУдаления
							 |ИЗ
							 |	Документ.НачислениеЕдиновременныхПособийЗаСчетФСС КАК НачислениеЕдиновременныхПособийЗаСчетФСС
							 |ГДЕ
							 |	НачислениеЕдиновременныхПособийЗаСчетФСС.Ссылка = &Ссылка
							 |
							 |ОБЪЕДИНИТЬ ВСЕ
							 |
							 |ВЫБРАТЬ
							 |	РегистрацияРазовыхНачисленийРаботниковОрганизаций.Проведен,
							 |	РегистрацияРазовыхНачисленийРаботниковОрганизаций.ПометкаУдаления
							 |ИЗ
							 |	Документ.РегистрацияРазовыхНачисленийРаботниковОрганизаций КАК РегистрацияРазовыхНачисленийРаботниковОрганизаций
							 |ГДЕ
							 |	РегистрацияРазовыхНачисленийРаботниковОрганизаций.Ссылка = &Ссылка";
							 Выборка = Запрос.Выполнить().Выбрать();
							 Если Выборка.Следующий() Тогда
							 	 ЗаполнитьЗначенияСвойств(СтрокаДокумента,Выборка);
							 КонецЕсли;
						 КонецЕсли;
					КонецЕсли;
				Иначе
				КонецЕсли;
			Иначе
			КонецЕсли;
			
		Иначе
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура ОсновныеДействияФормыВыполнить(Кнопка)
	
	Если ЭлементыФормы.ПанельДанных.ТекущаяСтраница = ЭлементыФормы.ПанельДанных.Страницы.СтраницаИндексирование Тогда
		
		ДатаНачалаИзменений = ОпределитьНачальнуюДатуИндексации();
		Если ЗначениеЗаполнено(ДатаНачалаИзменений) Тогда
			ОбновитьРазмерыПособий(ДатаНачалаИзменений);
			Оповестить("ОбновитьРазмерыИндексируемыхГосударственныхПособий");
		КонецЕсли;
		
		ЭлементыФормы.ПанельДанных.ТекущаяСтраница = ЭлементыФормы.ПанельДанных.Страницы.СтраницаПерерасчетПособий;
		НоваяКнопка = ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Вставить(0,"Разделитель", ТипКнопкиКоманднойПанели.Разделитель);
		НоваяКнопка = ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Вставить(0,"Вернуться", ТипКнопкиКоманднойПанели.Действие, "Вернуться к индексации пособий", Новый Действие("ОсновныеДействияФормыВернуться"));
		НоваяКнопка.Подсказка = "Вернуться на страницу индексации пособий";
		НоваяКнопка.Пояснение = "На странице индексации пособий можно проверить и изменить сроки и размеры индексации"; 
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Выполнить.Текст = "Записать результаты перерасчета";
		
		// Заполним реквизит формы МесяцСтрока.
		ДатаНачала = ?(ЗначениеЗаполнено(ДатаНачалаИзменений), Мин(ДатаОкончания,ДатаНачалаИзменений), ДатаОкончания);
		МесяцСтрока = РаботаСДиалогами.ДатаКакМесяцПредставление(ДатаНачала);
		
	Иначе
		
		СтрокиКОбработке = ПолучателиПособий.НайтиСтроки(Новый Структура("Отметка",Истина));
		ПериодРегистрацииПособий = '00010101';
		Для каждого СтрокаТЧ Из СтрокиКОбработке Цикл
			ПериодРегистрацииПособий = Макс(СтрокаТЧ.ПериодРегистрации, ПериодРегистрацииПособий);
		КонецЦикла; 
		
		Если ПериодРегистрацииПособий >= ПериодРегистрации Тогда
			Предупреждение("Отмечены пособия, начисленные в месяце регистрации исправлений или позже! Отложите исправление этих пособий на потом или измените месяц регистрации исправлений.");
			Возврат
		КонецЕсли;
		
		ЗаписатьРезультатыПерерасчетов();
		
		Если Исправления.Количество() > 0 И ЭлементыФормы.Исправления.ТекущаяСтрока = Неопределено Тогда
			ЭлементыФормы.Исправления.ТекущаяСтрока = Исправления[0]
		КонецЕсли;
		
		Если Исправления.Количество() > 0 И ЭлементыФормы.ПанельДокументовИсправлений.Свертка <> РежимСверткиЭлементаУправления.Нет Тогда
			ОткрытьСкрытьСписок();
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОсновныеДействияФормыВернуться(Кнопка)
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Выполнить.Текст = "Записать результаты индексации";
	ЭлементыФормы.ПанельДанных.ТекущаяСтраница = ЭлементыФормы.ПанельДанных.Страницы.СтраницаИндексирование;
	КнопкаКУдалению = ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Найти("Вернуться");
	Если КнопкаКУдалению <> Неопределено Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Удалить(КнопкаКУдалению)
	КонецЕсли;
	КнопкаКУдалению = ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Найти("Разделитель");
	Если КнопкаКУдалению <> Неопределено Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Удалить(КнопкаКУдалению)
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанельОднаОрганизацияПометитьВсе(Кнопка)
	Для каждого СтрокаТЧ Из ПолучателиПособий Цикл
		СтрокаТЧ.Отметка = Истина
	КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанельОднаОрганизацияСнятьПометки(Кнопка)
	Для каждого СтрокаТЧ Из ПолучателиПособий Цикл
		СтрокаТЧ.Отметка = Ложь
	КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанельНесколькоОрганизацийПометитьВсе(Кнопка)
	СтрокиПолучателей = ВыбратьСтрокиПоОрганизации(Кнопка.Имя,"КнВзвести");
	Для каждого СтрокаТЧ Из СтрокиПолучателей Цикл
		СтрокаТЧ.Отметка = Истина
	КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанельНесколькоОрганизацийСнятьПометки(Кнопка)
	СтрокиПолучателей = ВыбратьСтрокиПоОрганизации(Кнопка.Имя,"КнСбросить");
	Для каждого СтрокаТЧ Из СтрокиПолучателей Цикл
		СтрокаТЧ.Отметка = Ложь
	КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанельКонтекстноеМенюИсправленияПровести(Кнопка)
	
	ТекущиеДанные = ЭлементыФормы.Исправления.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	ДокументСсылка = ТекущиеДанные.ДокументИсправление;
	ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
	
	Если ДокументОбъект.Проведен Тогда // уже провели ранее - повторять не будем
		Возврат
	КонецЕсли;
	
	Попытка
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		Предупреждение("Не удалось провести документ!")
	КонецПопытки;
	
	ТекущиеДанные.Проведен = ДокументОбъект.Проведен;
	ТекущиеДанные.ПометкаУдаления = ДокументОбъект.ПометкаУдаления;
	
КонецПроцедуры

Процедура КоманднаяПанельКонтекстноеМенюИсправленияОткрыть(Кнопка)
	ТекущиеДанные = ЭлементыФормы.Исправления.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	ТекущиеДанные.ДокументИсправление.ПолучитьФорму(,ЭтаФорма,).Открыть();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ИндексацииПриАктивизацииСтроки(Элемент)
	УстановитьОтборВТаблицеРазмерыПособий();
КонецПроцедуры

Процедура ИндексацииПослеУдаления(Элемент)
	
	//необходимо удалить данные на период мУдаленныйПериодИндексации
	Если Не ЗначениеЗаполнено(мУдаленныйПериодИндексации) Тогда
		Возврат;
	КонецЕсли;	
	
	СтруктураПоиска = Новый Структура("Период", мУдаленныйПериодИндексации);
	СтрокиКУдалению = РазмерыПособий.НайтиСтроки(СтруктураПоиска);
	Для каждого СтрокаТаблицы Из СтрокиКУдалению Цикл
		РазмерыПособий.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
	ПересчитатьРазмерыПособий();
	УстановитьОтборВТаблицеРазмерыПособий();
	
	мУдаленныйПериодИндексации = Неопределено;
	
КонецПроцедуры

Процедура ИндексацииПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		// запомним период который будет удален
		мУдаленныйПериодИндексации = ТекущиеДанные.Период;
	КонецЕсли;	
	 
КонецПроцедуры

Процедура ИндексацииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока и Не Копирование Тогда
		
		ПоследняяДата = '00010101';
		Для каждого СтрокаТЧ Из Индексации Цикл
			ПоследняяДата = Макс(ПоследняяДата, СтрокаТЧ.Период)
		КонецЦикла; 
		
		Элемент.ТекущиеДанные.Период = ?(Не ЗначениеЗаполнено(ПоследняяДата),
										НачалоГода(ОбщегоНазначения.ПолучитьРабочуюДату()),
										ДобавитьМесяц(ПоследняяДата, 1));

										
	КонецЕсли;

	Если Не НоваяСтрока Тогда
		мПериодИндексацииДоИзменения = Элемент.ТекущиеДанные.Период;
	КонецЕсли;
	
КонецПроцедуры

Процедура ИндексацииПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Не ОтменаРедактирования Тогда
		ТекущаяДата = Элемент.ТекущиеДанные.Период;
		ТекущийНомерСтроки = Элемент.ТекущиеДанные.НомерСтроки;
		ЕстьПовторДаты = Ложь;
		Для каждого СтрокаТЧ Из Индексации Цикл
			ЕстьПовторДаты = СтрокаТЧ.НомерСтроки <> ТекущийНомерСтроки И СтрокаТЧ.Период = ТекущаяДата;
			Если ЕстьПовторДаты Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ЕстьПовторДаты Тогда
			Предупреждение("Индексация на " + Формат(ТекущаяДата, "ДФ=dd.MM.yyyy") + " уже зарегистрирована! Измените дату индексации.");
		КонецЕсли;
		Отказ = ЕстьПовторДаты;
	КонецЕсли;
	
КонецПроцедуры

Процедура ИндексацииПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ДатаИндексации = Элемент.ТекущиеДанные.Период;
	
	Если ОтменаРедактирования Или Не ЗначениеЗаполнено(ДатаИндексации) Тогда
		Возврат;
	КонецЕсли;
	
	Если НоваяСтрока Тогда
		//Добавили новую строку в таблицу индексации
		Индексации.Сортировать("Период");
		Для каждого ЭлементМассива Из МассивПособий Цикл
			Если ДатаИндексации >= ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами() И ЭлементМассива = Перечисления.РазмерыГосударственныхПособий.МаксимумПособияПоУходуЗаРебенкомДоПолутораЛет Тогда
				Продолжить;
			КонецЕсли;
			НоваяСтрока = РазмерыПособий.Добавить();
			НоваяСтрока.ВидПособия = ЭлементМассива;  
			НоваяСтрока.Период = Элемент.ТекущиеДанные.Период;
			НоваяСтрока.Размер = 0;
		КонецЦикла;
		РазмерыПособий.Сортировать("Период,ВидПособия");
	КонецЕсли;	
	
	ПересчитатьРазмерыПособий();
	
КонецПроцедуры

Процедура ИндексацииПериодПриИзменении(Элемент)
	Элемент.Значение = НачалоМесяца(Элемент.Значение);
	ОбновитьДатуВСтрокахРазмеров(Элемент.Значение);
	мПериодИндексацииДоИзменения = Неопределено;
КонецПроцедуры

Процедура ИндексацииПериодРегулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	НовоеЗначение = ДобавитьМесяц(Элемент.Значение, Направление);
	ЗначениеПовторено = Индексации.Найти(НовоеЗначение,"Период") <> Неопределено;
	Элемент.Значение = НовоеЗначение; 	
	Если ЗначениеПовторено Тогда
		Возврат
	КонецЕсли;
	ОбновитьДатуВСтрокахРазмеров(НовоеЗначение);
КонецПроцедуры

Процедура НачалоПериодаПриИзменении(Элемент)
	БылаДата = ДатаНачала;
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(Элемент.Значение, ДатаНачала); // ДатаНачала изменяем
	Если ДатаНачала >= ПериодРегистрации Тогда
		ДатаНачала = БылаДата;
		Предупреждение("Перерасчеты производятся только за прошлые периоды! В документах месяца регистрации исправлений достаточно повторно рассчитать начисления.")
	КонецЕсли;
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ДатаНачала); // привели значение Элемента к правильному представлению
КонецПроцедуры

Процедура НачалоПериодаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, ДатаНачала, ЭтаФорма, , ДатаОкончания);
КонецПроцедуры

Процедура НачалоПериодаОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

Процедура НачалоПериодаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	Если ДобавитьМесяц(ДатаНачала, Направление) < ПериодРегистрации Тогда
		ДатаНачала = ДобавитьМесяц(ДатаНачала, Направление); // ДатаНачала изменяем
		Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ДатаНачала); // привели значение Элемента к правильному представлению
	Иначе
		Предупреждение("Перерасчеты производятся только за прошлые периоды! В документах месяца регистрации исправлений достаточно повторно рассчитать начисления.")
	КонецЕсли;
КонецПроцедуры

Процедура НачалоПериодаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	РаботаСДиалогами.ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);
КонецПроцедуры

Процедура НачалоПериодаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	РаботаСДиалогами.ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка);
КонецПроцедуры

Процедура ОкончаниеПериодаПриИзменении(Элемент)
	БылаДата = ДатаОкончания;
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(Элемент.Значение, ДатаОкончания); // ДатаОкончания изменяем
	Если ДатаОкончания >= ПериодРегистрации Тогда
		ДатаОкончания = БылаДата;
		Предупреждение("Перерасчеты производятся только за прошлые периоды! В документах месяца регистрации исправлений достаточно повторно рассчитать начисления.")
	КонецЕсли;
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ДатаОкончания); // привели значение Элемента к правильному представлению
	Если ДатаНачала > ДатаОкончания Тогда
		ДатаНачала = ДатаОкончания;
		ЭлементыФормы.НачалоПериода.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ДатаНачала); // привели значение Элемента к правильному представлению
	КонецЕсли;
КонецПроцедуры

Процедура ОкончаниеПериодаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, ДатаОкончания, ЭтаФорма, , ДобавитьМесяц(ПериодРегистрации, -1));
	Если ДатаНачала > ДатаОкончания Тогда
		ДатаНачала = ДатаОкончания;
		ЭлементыФормы.НачалоПериода.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ДатаНачала); // привели значение Элемента к правильному представлению
	КонецЕсли;
КонецПроцедуры

Процедура ОкончаниеПериодаОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

Процедура ОкончаниеПериодаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	Если ДобавитьМесяц(ДатаОкончания, Направление) < ПериодРегистрации Тогда
		ДатаОкончания = ДобавитьМесяц(ДатаОкончания, Направление); // ДатаОкончания изменяем
		Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ДатаОкончания); // привели значение Элемента к правильному представлению
	Иначе
		Предупреждение("Перерасчеты производятся только за прошлые периоды! В документах месяца регистрации исправлений достаточно повторно рассчитать начисления.")
	КонецЕсли;
	Если ДатаНачала > ДатаОкончания Тогда
		ДатаНачала = ДатаОкончания;
		ЭлементыФормы.НачалоПериода.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ДатаНачала); // привели значение Элемента к правильному представлению
	КонецЕсли;
КонецПроцедуры

Процедура ОкончаниеПериодаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	РаботаСДиалогами.ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);
КонецПроцедуры

Процедура ОкончаниеПериодаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	РаботаСДиалогами.ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка);
КонецПроцедуры

Процедура ПериодРегистрацииПриИзменении(Элемент)
	
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(Элемент.Значение, ПериодРегистрации); // ПериодРегистрации изменяем
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодРегистрации); // привели значение Элемента к правильному представлению
	
КонецПроцедуры

Процедура ПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ПериодРегистрации = ДобавитьМесяц(ПериодРегистрации, Направление); // ПериодРегистрации изменяем
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодРегистрации); // привели значение Элемента к правильному представлению
	
КонецПроцедуры

Процедура ПериодРегистрацииОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

Процедура ПериодРегистрацииНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, ПериодРегистрации, ЭтаФорма);
КонецПроцедуры

Процедура ПериодРегистрацииАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	РаботаСДиалогами.ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);
КонецПроцедуры

Процедура ПериодРегистрацииОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	РаботаСДиалогами.ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка);
КонецПроцедуры

Процедура КнопкаЗаполнитьНажатие(Элемент)
	
	ПолучитьДанныеПоНачисленнымПособиям();
	
	мОрганизацииПолучателей.Очистить();
	
	Если ПолучателиПособий.Количество() = 0 Тогда
		НайденоНесколькоОрганизаций = Ложь;
		ЭлементыФормы.ПолучателиПособий.Колонки.Группа.ТекстШапки = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация");
		
		Если ДатаНачала = ДатаОкончания Тогда
			
			ТекстМесяца = Формат(ДатаНачала,"ДФ=MMMM");
			РезультатСклонения = "";
			Если УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"),ТекстМесяца, 6, Перечисления.ПолФизическихЛиц.Мужской, РезультатСклонения) Тогда
				ТекстМесяца = РезультатСклонения;	
			КонецЕсли;
			Предупреждение("Все зарегистрированные в " + НРег(ТекстМесяца) + " " + Формат(ДатаНачала,"ДФ=гггг") + " г. пособия рассчитаны правильно! Дополнительных перерасчетов не требуется.");
			
		Иначе
			ТекстМесяца = Формат(ДатаНачала,"ДФ=MMMM");
			РезультатСклонения = "";
			Если УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"),ТекстМесяца, 2, Перечисления.ПолФизическихЛиц.Мужской, РезультатСклонения) Тогда
				ТекстМесяца = РезультатСклонения;	
			КонецЕсли;
			Предупреждение("Все зарегистрированные с " + НРег(ТекстМесяца) + " " + Формат(ДатаНачала,"ДФ=гггг") + " г. по " + НРег(МесяцСтрока1) + " г. пособия рассчитаны правильно! Дополнительных перерасчетов не требуется.");
			
		КонецЕсли;
		
	Иначе
		
		Для каждого СтрокаПособий Из ПолучателиПособий Цикл
			СтрокаПодразделения = мОрганизацииПолучателей.Найти(СтрокаПособий.ОбособленноеПодразделение,"ОбособленноеПодразделение");
			Если СтрокаПодразделения = Неопределено Тогда
				ЗаполнитьЗначенияСвойств(мОрганизацииПолучателей.Добавить(),СтрокаПособий);
				СтрокаПособий.ЭтоПервыйСотрудникОрганизации = Истина;
			КонецЕсли;
		КонецЦикла;
		
		ЭлементыФормы.ПолучателиПособий.Колонки.Группа.ТекстШапки = ?(мОрганизацииПолучателей.Количество() = 1, 
							ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Данные по организации:") + " " + мОрганизацииПолучателей[0].НаименованиеОбособленногоПодразделения,
							ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация"));
							
		НайденоНесколькоОрганизаций = мОрганизацииПолучателей.Количество() > 1;
		
		Если НайденоНесколькоОрганизаций Тогда
			МенюВзвестиФлажки = ЭлементыФормы.КоманднаяПанельНесколькоОрганизаций.Кнопки.ПометитьВсе.Кнопки;
			МенюСброситьФлажки = ЭлементыФормы.КоманднаяПанельНесколькоОрганизаций.Кнопки.СнятьПометки.Кнопки;
			МенюВзвестиФлажки.Очистить();
			МенюСброситьФлажки.Очистить();
			МенюВзвестиФлажки.Добавить("КнВзвестиПоВсем",ТипКнопкиКоманднойПанели.Действие, СтрЗаменить("По всем " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("организациям: "),": ",""), Новый Действие("КоманднаяПанельОднаОрганизацияПометитьВсе"));
			МенюСброситьФлажки.Добавить("КнСброситьПоВсем",ТипКнопкиКоманднойПанели.Действие, СтрЗаменить("По всем " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("организациям: "),": ",""), Новый Действие("КоманднаяПанельОднаОрганизацияСнятьПометки"));
			МенюВзвестиФлажки.Добавить("Разделитель",ТипКнопкиКоманднойПанели.Разделитель);
			МенюСброситьФлажки.Добавить("Разделитель",ТипКнопкиКоманднойПанели.Разделитель);
			ДействиеВзвести = Новый Действие("КоманднаяПанельНесколькоОрганизацийПометитьВсе");
			ДействиеСбросить = Новый Действие("КоманднаяПанельНесколькоОрганизацийСнятьПометки");
			Для каждого СтрокаОрганизации Из мОрганизацииПолучателей Цикл
				ТекстКоманды = СтрЗаменить(ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Данные по организации:"),"Данные по ","по ") + " " + СтрокаОрганизации.НаименованиеОбособленногоПодразделения;
				МенюВзвестиФлажки.Добавить("КнВзвести" + мОрганизацииПолучателей.Индекс(СтрокаОрганизации),ТипКнопкиКоманднойПанели.Действие, ТекстКоманды, ДействиеВзвести);
				МенюСброситьФлажки.Добавить("КнСбросить" + мОрганизацииПолучателей.Индекс(СтрокаОрганизации),ТипКнопкиКоманднойПанели.Действие, ТекстКоманды, ДействиеСбросить);
			КонецЦикла; 
		Иначе 	
			ПолучателиПособий[0].ЭтоПервыйСотрудникОрганизации = Ложь
		КонецЕсли;
		
	КонецЕсли;
	
	ЭлементыФормы.КоманднаяПанельНесколькоОрганизаций.Видимость = НайденоНесколькоОрганизаций;
	ЭлементыФормы.КоманднаяПанельОднаОрганизация.Видимость = Не НайденоНесколькоОрганизаций;
	
КонецПроцедуры

Процедура ПолучателиПособийПриПолученииДанных(Элемент, ОформленияСтрок)
	
	ЕстьКолонкаПериод = Элемент.Колонки.Период.Видимость;
	Для Каждого Оформление Из ОформленияСтрок Цикл
		ДанныеСтроки = Оформление.ДанныеСтроки;
		Ячейки = Оформление.Ячейки;
		Ячейки.Колонка.Видимость = ДанныеСтроки.ЭтоПервыйСотрудникОрганизации;
		Ячейки.Группа.Видимость = ДанныеСтроки.ЭтоПервыйСотрудникОрганизации;
		Если Ячейки.Группа.Видимость Тогда
			Ячейки.Группа.УстановитьТекст(ДанныеСтроки.НаименованиеОбособленногоПодразделения);
			Ячейки.Группа.Шрифт = Новый Шрифт(, 10, Истина);
			Ячейки.Колонка.УстановитьТекст(" ");
			Ячейки.Колонка.Шрифт = Новый Шрифт(, 10, Истина);
		КонецЕсли;
		Если ЕстьКолонкаПериод Тогда
			Если ДанныеСтроки.ВидПособия = Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет Тогда
				Ячейки.Период.УстановитьТекст(Формат(ДанныеСтроки.ДатаНачала,"ДФ=dd.MM.yyyy") + " - " + Формат(ДанныеСтроки.ДатаОкончания,"ДФ=dd.MM.yyyy"))
			Иначе
				Ячейки.Период.УстановитьТекст(Формат(ДанныеСтроки.ДатаНачала,"ДФ=dd.MM.yyyy"))
			КонецЕсли;
		КонецЕсли;
		
		// отметим строки, результат которых зарегистрировать не сможем
		Оформление.ЦветФона = ?(ДанныеСтроки.Отметка И ДанныеСтроки.ПериодРегистрации >= ПериодРегистрации, WebЦвета.ТусклоРозовый, Новый Цвет)
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПолучателиПособийСуммаКДоначислениюПриИзменении(Элемент)
	Если Элемент.Значение = 0 Тогда
		ЭлементыФормы.ПолучателиПособий.ТекущиеДанные.Отметка = Ложь
	КонецЕсли;
КонецПроцедуры

Процедура НадписьСсылкаОтрытиеСпискаНажатие(Элемент)
	
	ОткрытьСкрытьСписок(ЭлементыФормы.ПанельДокументовИсправлений.Свертка <> РежимСверткиЭлементаУправления.Нет)

КонецПроцедуры

Процедура ИсправленияПриПолученииДанных(Элемент, ОформленияСтрок)
	Для Каждого Оформление Из ОформленияСтрок Цикл
		ЯчейкаСКартинкой = Оформление.Ячейки.Картинка;
		ЯчейкаСКартинкой.ОтображатьКартинку = Истина;
		ЯчейкаСКартинкой.ИндексКартинки = ?(Оформление.ДанныеСтроки.Проведен,0,?(Оформление.ДанныеСтроки.ПометкаУдаления,1,2));
	КонецЦикла;
КонецПроцедуры

Процедура ИсправленияВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	ВыбраннаяСтрока[Колонка.Имя].ПолучитьФорму(,ЭтаФорма,).Открыть();
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мУдаленныйПериодИндексации = Неопределено;