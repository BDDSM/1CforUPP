Перем мПараметрыСвязиСтрокТЧ;
Перем мНовыйКлючСвязи;
Перем мИмяТабличнойЧастиПараметрыВыпускаПродукции;
Перем мСтрокаТабличнойЧасти;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура сохраняет в документе серийные номера.
//
Процедура ЗаписатьПараметрыВыпускаПродукцииВДокумент()
	
	Если Документ[ИмяТабличнойЧасти].Индекс(мСтрокаТабличнойЧасти) = -1 Тогда
		Возврат;
	КонецЕсли;
	
	Документ[мИмяТабличнойЧастиПараметрыВыпускаПродукции].Загрузить(ПараметрыВыпускаПродукции.Выгрузить());
	Документ.мПараметрыСвязиСтрокТЧ = мПараметрыСвязиСтрокТЧ;
	
	Если мНовыйКлючСвязи Тогда
		мСтрокаТабличнойЧасти.КлючСвязи = КлючСвязи;
	КонецЕсли;
	
КонецПроцедуры // ЗаписатьПараметрыВыпускаПродукцииВДокумент()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Перем ИсходнаяЕдиницаИзмерения;
	
	// Проверим тип реквизита формы СтруктураПараметровФормы. Должен быть "Структура".
	// При неверном типе не будем запускать подбор.
	Если ТипЗнч(СтруктураИсходныхПараметров) <> Тип("Структура") Тогда
		
		Отказ = Истина;
		Предупреждение("Не верный тип параметра ""СтруктураИсходныхПараметров""!
		               |Данная обработка вызывается из других процедур конфигурации.
		               |Вручную ее вызывать запрещено."); 
		Возврат;

	КонецЕсли;
	
	СозданиеНовыхСерийныхНомеров = Ложь;
	мИмяТабличнойЧастиПараметрыВыпускаПродукции = Неопределено;
	
	СтруктураИсходныхПараметров.Свойство("Номенклатура", 				Номенклатура);
	СтруктураИсходныхПараметров.Свойство("ХарактеристикаНоменклатуры", 	ХарактеристикаНоменклатуры);
	СтруктураИсходныхПараметров.Свойство("СерияНоменклатуры", 			СерияНоменклатуры);
	СтруктураИсходныхПараметров.Свойство("ЕдиницаИзмерения", 			ИсходнаяЕдиницаИзмерения);
	СтруктураИсходныхПараметров.Свойство("Количество", 					Количество);
	СтруктураИсходныхПараметров.Свойство("ДокументОбъект", 				Документ);
	СтруктураИсходныхПараметров.Свойство("ИмяТабличнойЧасти", 			ИмяТабличнойЧасти);
	СтруктураИсходныхПараметров.Свойство("ИмяТабличнойЧастиПараметрыВыпускаПродукции", мИмяТабличнойЧастиПараметрыВыпускаПродукции);
	СтруктураИсходныхПараметров.Свойство("НомерСтрокиТабличнойЧасти", 	НомерСтрокиТабличнойЧасти);
	СтруктураИсходныхПараметров.Свойство("ПараметрыСвязиСтрокТЧ",		мПараметрыСвязиСтрокТЧ);
	СтруктураИсходныхПараметров.Свойство("СтрокаТабличнойЧасти",		мСтрокаТабличнойЧасти);
	
	Если мИмяТабличнойЧастиПараметрыВыпускаПродукции = Неопределено Тогда
		мИмяТабличнойЧастиПараметрыВыпускаПродукции = "ПараметрыВыпускаПродукции";
	КонецЕсли;
	
	Если НомерСтрокиТабличнойЧасти = 0 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если мСтрокаТабличнойЧасти = Неопределено Тогда
		мСтрокаТабличнойЧасти = Документ[ИмяТабличнойЧасти].Получить(НомерСтрокиТабличнойЧасти - 1);
	КонецЕсли;
	
	ЕдиницаИзмерения = Номенклатура.ЕдиницаХраненияОстатков;
	Количество = ?(ЕдиницаИзмерения.Коэффициент <> 0, Количество * ИсходнаяЕдиницаИзмерения.Коэффициент / ЕдиницаИзмерения.Коэффициент, Количество);
	
	ЕстьСпецификация = ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("Спецификация", Документ.Метаданные(), ИмяТабличнойЧасти);
	Если ЕстьСпецификация Тогда
		Спецификация = Документ[ИмяТабличнойЧасти].Получить(НомерСтрокиТабличнойЧасти - 1).Спецификация;
	КонецЕсли;
	
	КлючСвязи = Документ[ИмяТабличнойЧасти].Получить(НомерСтрокиТабличнойЧасти - 1).КлючСвязи;
	Если КлючСвязи = 0 Тогда
		КлючСвязи = УчетСерийныхНомеров.ПолучитьНовыйКлючСвязи(мПараметрыСвязиСтрокТЧ, Документ, ИмяТабличнойЧасти, Истина);
		мНовыйКлючСвязи = Истина;
	КонецЕсли;
	
	ПараметрыВыпускаПродукции.Загрузить(Документ[мИмяТабличнойЧастиПараметрыВыпускаПродукции].Выгрузить());
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()
	
	ЭлементыФормы.ПараметрыВыпускаПродукции.ОтборСтрок.КлючСвязи.Установить(КлючСвязи);
	ЭлементыФормы.ПараметрыВыпускаПродукции.НастройкаОтбораСтрок.КлючСвязи.Доступность = Ложь;
	
КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "ПриПовторномОткрытии" формы.
//
Процедура ПриПовторномОткрытии(СтандартнаяОбработка)
	
	Перем ИсходнаяЕдиницаИзмерения;
	
	Если ЭтаФорма.Модифицированность Тогда
		Ответ = Вопрос("Данные были изменены. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ЗаписатьПараметрыВыпускаПродукцииВДокумент();
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЭтаФорма.Модифицированность = Ложь;
	
	СтруктураИсходныхПараметров.Свойство("Номенклатура", 				Номенклатура);
	СтруктураИсходныхПараметров.Свойство("ХарактеристикаНоменклатуры", 	ХарактеристикаНоменклатуры);
	СтруктураИсходныхПараметров.Свойство("СерияНоменклатуры", 			СерияНоменклатуры);
	СтруктураИсходныхПараметров.Свойство("ЕдиницаИзмерения", 			ИсходнаяЕдиницаИзмерения);
	СтруктураИсходныхПараметров.Свойство("Количество", 					Количество);
	СтруктураИсходныхПараметров.Свойство("ДокументОбъект", 				Документ);
	СтруктураИсходныхПараметров.Свойство("ИмяТабличнойЧасти", 			ИмяТабличнойЧасти);
	СтруктураИсходныхПараметров.Свойство("НомерСтрокиТабличнойЧасти", 	НомерСтрокиТабличнойЧасти);
	СтруктураИсходныхПараметров.Свойство("ПараметрыСвязиСтрокТЧ",		мПараметрыСвязиСтрокТЧ);
	
	Если НомерСтрокиТабличнойЧасти = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЕдиницаИзмерения = Номенклатура.ЕдиницаХраненияОстатков;
	Количество = ?(ЕдиницаИзмерения.Коэффициент <> 0, Количество * ИсходнаяЕдиницаИзмерения.Коэффициент / ЕдиницаИзмерения.Коэффициент, Количество);
	
	КлючСвязи = Документ[ИмяТабличнойЧасти].Получить(НомерСтрокиТабличнойЧасти - 1).КлючСвязи;
	Если КлючСвязи = 0 Тогда
		КлючСвязи = УчетСерийныхНомеров.ПолучитьНовыйКлючСвязи(мПараметрыСвязиСтрокТЧ, Документ, ИмяТабличнойЧасти, Истина);
		мНовыйКлючСвязи = Истина;
	КонецЕсли;
	
	ЭлементыФормы.ПараметрыВыпускаПродукции.ОтборСтрок.КлючСвязи.Установить(КлючСвязи);
	
КонецПроцедуры // ПриПовторномОткрытии()

// Процедура - обработчик события "ПередЗакрытием" формы.
//
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ЭтаФорма.Модифицированность Тогда
		Ответ = Вопрос("Данные были изменены. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ЗаписатьПараметрыВыпускаПродукцииВДокумент();
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПередЗакрытием()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при нажатии кнопки "ОК" командной панели формы.
//
Процедура КнопкаОКНажатие(Кнопка)
	
	ЗаписатьПараметрыВыпускаПродукцииВДокумент();
	ЭтаФорма.Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры // КнопкаОКНажатие()

// Процедура вызывается при нажатии кнопки "Заполнить по спецификации" командной панели
// табличного поля "ПараметрыВыпускаПродукции".
//
Процедура КоманднаяПанельПараметрыВыпускаПродукцииЗаполнитьПоСпецификации(Кнопка)
	
	Отбор = Новый Структура("КлючСвязи", КлючСвязи);
	МассивСтрок = ПараметрыВыпускаПродукции.НайтиСтроки(Отбор);
	
	Если МассивСтрок.Количество() > 0 Тогда
		Ответ = Вопрос("Параметры выпуска продукции уже содержат строки. Очистить строки?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Для Каждого Строка Из МассивСтрок Цикл
				ПараметрыВыпускаПродукции.Удалить(Строка);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Спецификация) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из Спецификация.ПараметрыВыпускаПродукции Цикл
		НоваяСтрока = ПараметрыВыпускаПродукции.Добавить();
		НоваяСтрока.КлючСвязи = КлючСвязи;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
	КонецЦикла;
	
КонецПроцедуры // КоманднаяПанельПараметрыВыпускаПродукцииЗаполнитьПоСпецификации()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ПараметрыВыпускаПродукцииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.КлючСвязи = КлючСвязи;
	КонецЕсли;
	
КонецПроцедуры // ПараметрыВыпускаПродукцииПриНачалеРедактирования()


мНовыйКлючСвязи = Ложь;