Перем мУниверсальнаяВыгрузкаДанных;
Перем мТаблицаПравилВыгрузки;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ВВОДА ДАТЫ КАК МЕСЯЦА

Процедура ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка) Экспорт
    Список = РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(Текст);
    Если Список.Количество() = 1 Тогда
        ТекстАвтоПодбора = Список[0];
    КонецЕсли;
    СтандартнаяОбработка = Ложь;
КонецПроцедуры

Процедура ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка) Экспорт
    Список = РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(Текст);
    Если Список.Количество() = 1 Тогда
        Значение = Текст;
    Иначе
        Значение = Список;
    КонецЕсли;
    СтандартнаяОбработка = Ложь;
КонецПроцедуры

Функция ДатаКакМесяцПредставление(ДатаДата) Экспорт
    Возврат Формат(ДатаДата, "ДФ='ММММ гггг'");
КонецФункции

// Процедура обрабатывает событие начала выбора из списка в поле периода регистрации
// Процедура исполняется только на клиенте
//
Процедура НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, ПериодРегистрации, ЭтаФорма, НачальноеЗначение = Неопределено) Экспорт

	СтандартнаяОбработка = Ложь;
	
	Если НачальноеЗначение = Неопределено Тогда
		НачальноеЗначение = ПериодРегистрации;
	КонецЕсли; 
	
	СписокВыбора = Новый СписокЗначений;
	НачалоТекущегоГода = НачалоГода(НачальноеЗначение);
	НачалоПрошлогоГода = НачалоГода(НачалоТекущегоГода - 1);
	СписокВыбора.Добавить(НачалоПрошлогоГода, (Формат(НачалоПрошлогоГода, "ДФ='yyyy'") + "..."));
	НачалоМесяцаЗаполнения = НачалоТекущегоГода;
	ЭлементПоУмолчанию = Неопределено;
	Для а = 1 По 12 Цикл
		ДобавленныйЭлемент = СписокВыбора.Добавить(НачалоМесяцаЗаполнения, ДатаКакМесяцПредставление(НачалоМесяцаЗаполнения));
		Если НачальноеЗначение = НачалоМесяцаЗаполнения Тогда
			ЭлементПоУмолчанию = ДобавленныйЭлемент;
		КонецЕсли; 
		НачалоМесяцаЗаполнения = ДобавитьМесяц(НачалоМесяцаЗаполнения, 1);
	КонецЦикла;
	НачалоСледующегоГода = КонецГода(НачалоТекущегоГода) + 1;
	СписокВыбора.Добавить(НачалоСледующегоГода, (Формат(НачалоСледующегоГода, "ДФ='yyyy'") + "..."));
	
	ВыбранныйЭлемент = ЭтаФорма.ВыбратьИзСписка(СписокВыбора, Элемент, ЭлементПоУмолчанию);
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	ИначеЕсли Год(ВыбранныйЭлемент.Значение) <> Год(НачальноеЗначение) Тогда
		НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, ПериодРегистрации, ЭтаФорма, ВыбранныйЭлемент.Значение);
		Возврат;
	КонецЕсли;
	
	ПериодРегистрации = ВыбранныйЭлемент.Значение;
	Элемент.Значение  = ДатаКакМесяцПредставление(ПериодРегистрации);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ОБРАБОТЧИКОВ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик события "ПриИзменении" поля ввода периода.
//
Процедура МесяцСтрокаПриИзменении(Элемент)
	
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(Элемент.Значение, Период);
	Элемент.Значение = ДатаКакМесяцПредставление(Период);
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбораИзСписка" поля ввода периода.
//
Процедура МесяцСтрокаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, Период, ЭтаФорма);
КонецПроцедуры

// Процедура - обработчик события "Очистка" поля ввода периода.
//
Процедура МесяцСтрокаОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

// Процедура - обработчик события "Регулирование" поля ввода периода.
//
Процедура МесяцСтрокаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	Период = ДобавитьМесяц(Период, Направление);
	Элемент.Значение = ДатаКакМесяцПредставление(Период);
	
КонецПроцедуры

// Процедура - обработчик события "АвтоПодборТекста" поля ввода периода.
//
Процедура МесяцСтрокаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);
КонецПроцедуры

// Процедура - обработчик события "ОкончаниеВводаТекста" поля ввода периода.
//
Процедура МесяцСтрокаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка);
КонецПроцедуры


// Обработчик события ПередНачаломДобавления элемента формы Показатели.
//
Процедура ПоказателиПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
	
КонецПроцедуры

// Обработчик события ПередУдалением элемента формы Показатели.
//
Процедура ПоказателиПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

// Процедура вызывается при нажатии кнопки "Выполнить". 
Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	Запрос = Новый Запрос;
			
	Для СчПоказателя = 0 По Показатели.Количество() -1 Цикл
		мОтчётПоПоказателям.ПоказателиОтчета[СчПоказателя].ИспользованиеПоказателя = Показатели[СчПоказателя].ИспользованиеПоказателя;
	КонецЦикла;
		
	мОтчётПоПоказателям.ДатаНачала = НачалоМесяца(Период);
	мОтчётПоПоказателям.ДатаКонца = КонецМесяца(Период);		
	мОтчётПоПоказателям.ОтборМенеджер = ОтборМенеджер;
 	мОтчётПоПоказателям.РасписатьРеквизиты();
 	мОтчётПоПоказателям.СобратьТекстЗапроса(Запрос);		
	ЗапросТекст = Запрос.Текст;
	ТаблицаЗначенийПоказателей = Показатели.Выгрузить();
	Менеджер = ОтборМенеджер.Менеджер.Значение;
	
	Если НЕ ФормированиеПоказателейСхемМотивации.ФормированиеПоказателей(ЗапросТекст, ТаблицаЗначенийПоказателей, КонецМесяца(Период), Менеджер) Тогда
		Предупреждение("У вас нет прав для формирования записей в регистр сведений ""Значения показателей эффективности"" !");
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработкчик события "ПередОткрытием"
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Период = КонецМесяца(ОбщегоНазначения.ПолучитьРабочуюДату());
	МесяцСтрока = ДатаКакМесяцПредставление(Период);
	
	ВременнаяТЗ = Новый ТаблицаЗначений;
	мОтчётПоПоказателям = Отчеты.ПоказателиРаботыМенеджеров.Создать();
		
	ВременнаяТЗ = мОтчётПоПоказателям.ПоказателиОтчета.Выгрузить();
	Показатели.Загрузить(ВременнаяТЗ);

	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработкчик события "ПриОткрытии"
//
Процедура ПриОткрытии()
	
	УправлениеОтчетами.УстановитьСвязьПолейБыстрогоОтбораНаФорме(ЭлементыФормы, ОтборМенеджер,, "ОбработкаОбъект.ОтборМенеджер");

КонецПроцедуры //ПриОткрытии

// Процедура - обработкчик события "ПередСохранениемЗначений"
//
Процедура ПередСохранениемЗначений(Отказ)
	
	СохраненныеНастройки = Новый Структура;

	СохраненныеНастройки.Вставить("СтруктураОтбора"        , УправлениеОтчетами.ПолучитьСтруктуруОтбора(ОтборМенеджер));

КонецПроцедуры //ПередСохранениемЗначений

// Процедура - обработкчик события "ПослеВосстановленияЗначений"
//
Процедура ПослеВосстановленияЗначений()
	
	Перем СтруктураОтбора;

	СохраненныеНастройки.Свойство("СтруктураОтбора", СтруктураОтбора);
	УправлениеОтчетами.ЗаполнитьОтборИзСтруктуры(ОтборМенеджер, СтруктураОтбора);

КонецПроцедуры //ПослеВосстановленияЗначений


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Обработчик события Действие элемента командной панели 
// списка показателей УстановитьФлажки.
//
Процедура КоманднаяПанельУстановитьФлажки(Кнопка)

	Для каждого Показатель Из Показатели Цикл
	
		Показатель.ИспользованиеПоказателя = Истина;
	
	КонецЦикла; 
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ПолеВидаСравненияМенеджер.
//
Процедура ПолеВидаСравненияМенеджерПриИзменении(Элемент)

	УправлениеОтчетами.ПолеВидаСравненияПриИзменении(Элемент, ЭлементыФормы);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ПолеНастройкиМенеджер.
//
Процедура ПолеНастройкиМенеджерПриИзменении(Элемент)
	
	УправлениеОтчетами.ПолеНастройкиПриИзменении(Элемент, ОтборМенеджер);
	
КонецПроцедуры


// Обработчик события Действие элемента командной панели 
// списка показателей СнятьФлажки.
//
Процедура КоманднаяПанельСнятьФлажки(Кнопка)

	Для каждого Показатель Из Показатели Цикл
	
		Показатель.ИспользованиеПоказателя = Ложь;
	
	КонецЦикла; 
	
КонецПроцедуры