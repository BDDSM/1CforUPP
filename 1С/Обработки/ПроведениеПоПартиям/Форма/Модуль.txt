Перем ИспользуетсяРежимРА;
Перем ДатаНачалаИспользованияРежимаРА;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНОЙ ПАНЕЛИ "КоманднаяПанельФормы"

Процедура КоманднаяПанельФормыВосстановитьНастройку(Кнопка)
	
	ВосстановитьНастройки();
	
	ОбновитьВидимостьКолонок();
	
КонецПроцедуры // КоманднаяПанельФормыВосстановитьНастройку()

Процедура КоманднаяПанельФормыСохранитьНастройку(Кнопка)
	
	СохранитьНастройки();
	
КонецПроцедуры // КоманднаяПанельФормыСохранитьНастройку()

Процедура КнопкаВыполнитьНажатие(Элемент)
	
	МассивОрганизаций = Новый Массив();
	МассивОрганизацийДляПроверки = Новый Массив();
	
	Для Каждого ТекущаяОрганизация Из ТаблицаГраниц Цикл
		Если ТекущаяОрганизация.Пометка Тогда
			МассивОрганизаций.Добавить(ТекущаяОрганизация.Организация);
		КонецЕсли;
	КонецЦикла;	
	
	Если МассивОрганизаций.Количество() = 0 Тогда
		Предупреждение("Не выбраны организации для проведения по партиям");
		Возврат;
	КонецЕсли;	
	
	Если ОтражатьВУправленческомУчете Тогда
		//Определим список организаций для упр. учета
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	НастройкаСпособовВеденияУправленческогоПартионногоУчета.Организация КАК Организация
		                      |ИЗ
		                      |	РегистрСведений.НастройкаСпособовВеденияУправленческогоПартионногоУчета КАК НастройкаСпособовВеденияУправленческогоПартионногоУчета
		                      |ГДЕ
		                      |	НастройкаСпособовВеденияУправленческогоПартионногоУчета.СпособВеденияПартионногоУчетаПоОрганизации <> ЗНАЧЕНИЕ(Перечисление.СпособыВеденияПартионногоУчетаПоОрганизациям.НеВедется)
		                      |	И ВЫБОР
		                      |			КОГДА НастройкаСпособовВеденияУправленческогоПартионногоУчета.СпособВеденияПартионногоУчетаПоОрганизации = ЗНАЧЕНИЕ(Перечисление.СпособыВеденияПартионногоУчетаПоОрганизациям.ПоТекущейОрганизации)
		                      |				ТОГДА НастройкаСпособовВеденияУправленческогоПартионногоУчета.Организация
		                      |			КОГДА НастройкаСпособовВеденияУправленческогоПартионногоУчета.СпособВеденияПартионногоУчетаПоОрганизации = ЗНАЧЕНИЕ(Перечисление.СпособыВеденияПартионногоУчетаПоОрганизациям.ПоГоловнойОрганизации)
		                      |				ТОГДА НастройкаСпособовВеденияУправленческогоПартионногоУчета.Организация.ГоловнаяОрганизация
		                      |			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		                      |		КОНЕЦ В (&СписокОрганизаций)
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	НастройкаСпособовВеденияУправленческогоПартионногоУчета.Организация");
		Запрос.УстановитьПараметр("СписокОрганизаций",МассивОрганизаций);					  
		Результат = Запрос.Выполнить();
		Если НЕ Результат.Пустой() Тогда
			МассивОрганизацийДляПроверки = Результат.Выгрузить().ВыгрузитьКолонку("Организация");
		КонецЕсли;
	КонецЕсли;
	
	Если ОтражатьВБухгалтерскомУчете Тогда
		Для Каждого ТекущаяОрганизацияРегл Из МассивОрганизаций Цикл
			Если МассивОрганизацийДляПроверки.Найти(ТекущаяОрганизацияРегл) = Неопределено Тогда
				МассивОрганизацийДляПроверки.Добавить(ТекущаяОрганизацияРегл);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Проверка параметров выполнения обработки в режиме РА
	Если ИспользуетсяРежимРА Тогда
		
		ТекстВопроса = "";
		
		Если ОтражатьВУправленческомУчете Тогда
			ТекстВопроса = ТекстВопроса + "
				|   - Проведение по управленческому учету";
		КонецЕсли;
		
		Если ФормироватьПроводки Тогда
			ТекстВопроса = ТекстВопроса + "
				|   - Формирование проводок";
		КонецЕсли;
		
		Если ОтражатьВБухгалтерскомУчете Тогда // проверка системы налогообложения и даты восстановления последовательности
			
			ЕстьОшибкиВСистемеНалогообложения = Ложь;
			ЕстьОшибкиВДатеПроведения 		  = Ложь;
			
			Для Каждого ПроверяемаяОрганизация Из МассивОрганизаций Цикл
				
				Если ЗначениеЗаполнено(ПроверяемаяОрганизация) Тогда
					
					Если НЕ ЕстьОшибкиВСистемеНалогообложения Тогда
						УчетнаяПолитика = УправлениеЗапасамиПартионныйУчет.ПолучитьУчетнуюПолитику(?(ЗначениеЗаполнено(ДатаКонцаОбработки), ДатаКонцаОбработки, ТекущаяДата()), Ложь, Истина, Ложь, Ложь, ПроверяемаяОрганизация);
						Если УчетнаяПолитика.Бух.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Общая Тогда
							ЕстьОшибкиВСистемеНалогообложения = Истина;
							ТекстВопроса = ТекстВопроса + "
								|   - Проведение документов организаций на ОСН";
						КонецЕсли;
					КонецЕсли;
					
					Если НЕ ЕстьОшибкиВДатеПроведения Тогда
						ГраницаТоварыБух = ПолучитьГраницуПоследовательности("Бух", ПроверяемаяОрганизация);
						Если ЗначениеЗаполнено(ГраницаТоварыБух.Дата) И ГраницаТоварыБух.Дата < ДатаНачалаИспользованияРежимаРА Тогда
							ЕстьОшибкиВДатеПроведения = Истина;
							ТекстВопроса = ТекстВопроса + "
								|   - Проведение документов ранее даты начала использования РАУЗ (" + Формат(ДатаНачалаИспользованияРежимаРА, "ДЛФ=DD") + ")";
						КонецЕсли;
					КонецЕсли;
					
					Если ЕстьОшибкиВСистемеНалогообложения И ЕстьОшибкиВДатеПроведения Тогда // дальше проверять не имеет смысла
						Прервать;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекстВопроса) Тогда
			
			ТекстВопроса =
				"При использовании режима расширенной аналитики учета затрат
				|НЕ РЕКОМЕНДУЮТСЯ следующие настройки проведения по партиям:
				|" + ТекстВопроса + "
				|
				|Продолжить с текущими настройками?";
				
			ОтветНаВопрос = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
			Если ОтветНаВопрос <> КодВозвратаДиалога.Да Тогда
				Возврат;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	//Проверим дату отложенного проведения для каждой из организаций
	СтрокаСписокОрганизация = "";
	Для Каждого ТекущаяОрганизация Из МассивОрганизацийДляПроверки Цикл
		ДатаНачалаОтложенногоПроведения = ОтложенноеПроведениеДокументов.ПолучитьДатуНачалаОтложенногоПроведения(ТекущаяОрганизация);
		Если ДатаНачалаОтложенногоПроведения <> Дата("00010101")
		  И ДатаНачалаОтложенногоПроведения < ДатаКонцаОбработки Тогда
			СтрокаСписокОрганизация = СтрокаСписокОрганизация + ", """ + Строка(ТекущаяОрганизация) + """";
			Сообщить("Дата начала отложенного проведения по организации """ + Строка(ТекущаяОрганизация) + """: " + Строка(ДатаНачалаОтложенногоПроведения));
		КонецЕсли;
	КонецЦикла;
	
	Если СтрокаСписокОрганизация <> ""
	  И Вопрос("Дата начала отложенного проведения для организаций " + Сред(СтрокаСписокОрганизация,3) + " раньше даты окончания проведения по партиям. 
	  |Это может привести к некорректной работе механизма отложенного проведения. Необходимо изменить дату окончания проведения по партиям.
	  |Продолжить с текущими настройками?", РежимДиалогаВопрос.ДаНет,120,КодВозвратаДиалога.Нет) <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;	
	
	Если ВыполнятьНаСервере Тогда
	
		УправлениеЗапасамиПартионныйУчет.ВыполнитьВосстановлениеНаСервере (ДатаКонцаОбработки, 
										 МассивОрганизаций,
										 ОтражатьВУправленческомУчете,
										 ОтражатьВБухгалтерскомУчете,
										 Останавливаться,
										 МаксимальноеКоличествоДокументовВВыборке,
										 МаксимальноеКоличествоСтрокВТранзакции,
										 ФормироватьПроводки);
	Иначе
		
		ЗаполнениеДокументов.ВыполнитьВосстановление (ДатаКонцаОбработки,
								МассивОрганизаций,
								ОтражатьВУправленческомУчете,
								ОтражатьВБухгалтерскомУчете,
								Останавливаться,
								МаксимальноеКоличествоДокументовВВыборке,
								МаксимальноеКоличествоСтрокВТранзакции,
								ФормироватьПроводки);
		
	КонецЕсли;
	
	ОбновитьТекстОПоследовательностях();
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ДатаКонцаОбработки = РабочаяДата;
	
КонецПроцедуры

Функция ПолучитьИнформациюОГраницеПоследовательности(Дата,ДокументСсылка)
	Если ЗначениеЗаполнено(Дата) Тогда
		Если ЭлементыФормы.КоманднаяПанель1.Кнопки.ПодробнаяИнформация.Пометка Тогда
			ТекстГраницы = Формат(Дата, "ДЛФ=DT");
			ТекстГраницы = ТекстГраницы + ?(НЕ(ДокументСсылка=Неопределено), " (" +ДокументСсылка + ")","");
		Иначе
			ТекстГраницы = Формат(Дата, "ДЛФ=D");
		КонецЕсли;
	Иначе
		ТекстГраницы = Формат(КонецДня(ТекущаяДата()), "ДЛФ=D");
	КонецЕсли;
	
	Возврат ТекстГраницы;
КонецФункции	

Процедура ОбновитьТекстОПоследовательностях()
	
	ТекущееСостояниеПометок = ТаблицаГраниц.Скопировать();
	
	ТаблицаГраниц.Очистить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	Организации.Ссылка КАК Организация,
						  |	Организации.ГоловнаяОрганизация КАК ГоловнаяОрганизация
	                      |ИЗ
	                      |	Справочник.Организации КАК Организации
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	&ПустаяОрганизация,
						  |	&ПустаяОрганизация
						  |УПОРЯДОЧИТЬ ПО Организация Возр");
						  
	Запрос.УстановитьПараметр("ПустаяОрганизация",Справочники.Организации.ПустаяСсылка());
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = ТаблицаГраниц.Добавить();
			НоваяСтрока.Организация = Выборка.Организация;
			СтараяСтрока = ТекущееСостояниеПометок.Найти(НоваяСтрока.Организация);
			Если СтараяСтрока = неопределено Тогда
				НоваяСтрока.Пометка     = Ложь;
			Иначе
				НоваяСтрока.Пометка = СтараяСтрока.Пометка;
			КонецЕсли;
			
			Если ОтражатьВУправленческомУчете Тогда
				Если ЗначениеЗаполнено(НоваяСтрока.Организация) Тогда
					СпособВеденияПартионногоУчетаПоОрганизацииДляУУ = УправлениеЗапасами.ПолучитьСпособВеденияПартионногоУчетаПоОрганизации(НоваяСтрока.Организация, ТекущаяДата());				
					Если СпособВеденияПартионногоУчетаПоОрганизацииДляУУ = Перечисления.СпособыВеденияПартионногоУчетаПоОрганизациям.ПоТекущейОрганизации
					  ИЛИ СпособВеденияПартионногоУчетаПоОрганизацииДляУУ = Перечисления.СпособыВеденияПартионногоУчетаПоОрганизациям.ПоГоловнойОрганизации Тогда
						ГраницаТоварыУпр = ПолучитьГраницуПоследовательности("Упр", УправлениеЗапасами.ПолучитьОрганизациюВСоответствииСоСпособомВеденияПартионногоУчетаПоОрганизациям(Выборка.Организация, СпособВеденияПартионногоУчетаПоОрганизацииДляУУ));
						НоваяСтрока.УУ = ПолучитьИнформациюОГраницеПоследовательности(ГраницаТоварыУпр.Дата, ГраницаТоварыУпр.Ссылка);
					Иначе
						НоваяСтрока.УУ = "<" + Строка(СпособВеденияПартионногоУчетаПоОрганизацииДляУУ) + ">";	
					КонецЕсли;
				Иначе	
					ГраницаТоварыУпр = ПолучитьГраницуПоследовательности("Упр", Выборка.Организация);
					НоваяСтрока.УУ = ПолучитьИнформациюОГраницеПоследовательности(ГраницаТоварыУпр.Дата, ГраницаТоварыУпр.Ссылка);
				КонецЕсли;	
			КонецЕсли;
			
			Если ЗначениеЗаполнено(НоваяСтрока.Организация) Тогда
				
				НоваяСтрока.ГоловнаяОрганизация = Выборка.ГоловнаяОрганизация;
				
				Если ОтражатьВБухгалтерскомУчете Тогда
					ГраницаТоварыБух = ПолучитьГраницуПоследовательности("Бух", Выборка.Организация);
					НоваяСтрока.БУ = ПолучитьИнформациюОГраницеПоследовательности(ГраницаТоварыБух.Дата, ГраницаТоварыБух.Ссылка);
				КонецЕсли;
				
			Иначе
				Если ОтражатьВБухгалтерскомУчете Тогда
					НоваяСтрока.БУ = "<не ведется>";
				КонецЕсли;
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьВидимостьКолонок()
	ЭлементыФормы.ТаблицаГраниц.Колонки.УУ.Видимость = ОтражатьВУправленческомУчете;
	
	ЭлементыФормы.ТаблицаГраниц.Колонки.БУ.Видимость = ОтражатьВБухгалтерскомУчете;
	Если ОтражатьВБухгалтерскомУчете Тогда
		Если НЕ ЭлементыФормы.ТаблицаГраниц.Колонки.УУ.Видимость Тогда
			ЭлементыФормы.ТаблицаГраниц.Колонки.БУ.Положение = ПоложениеКолонки.НаСледующейСтроке;
		Иначе
			ЭлементыФормы.ТаблицаГраниц.Колонки.БУ.Положение = ПоложениеКолонки.ВТойЖеКолонке;
		КонецЕсли;
	КонецЕсли;	
	
	ЭлементыФормы.ТаблицаГраниц.Колонки.КолонкаЗаголовок.Видимость = (ОтражатьВУправленческомУчете ИЛИ ОтражатьВБухгалтерскомУчете);
	
	ЭлементыФормы.ФормироватьПроводки.Доступность = ОтражатьВБухгалтерскомУчете;
	Если ОтражатьВБухгалтерскомУчете = Ложь Тогда
		ФормироватьПроводки = Ложь;
	КонецЕсли;	
	
	ОбновитьТекстОПоследовательностях();
КонецПроцедуры	

Процедура ПриОткрытии()
	
	СтруктураНастройки = Новый Структура;
	СтруктураНастройки.Вставить("Пользователь", глЗначениеПеременной("глТекущийПользователь"));
	СтруктураНастройки.Вставить("ИмяОбъекта", Строка(ЭтотОбъект));
	
	Если УниверсальныеМеханизмы.ПолучитьНастройкуИспользоватьПриОткрытии(СтруктураНастройки) Тогда
		
		мТекущаяНастройка = СтруктураНастройки;
		ВосстановитьНастройкиИзСтруктуры(СтруктураНастройки.СохраненнаяНастройка);
		
	КонецЕсли;	
	ОбновитьВидимостьКолонок();
	
	Если Режим = 0 ТОгда
		МаксимальноеКоличествоСтрокВТранзакции = 1;
		МаксимальноеКоличествоДокументовВВыборке = 1;
		ВыполнятьНаСервере = Истина;
	КонецЕсли;	
	
	Если ИспользуетсяРежимРА Тогда
		ОбщегоНазначения.Сообщение("Установлено использование расширенной аналитики учета затрат с " + Формат(ДатаНачалаИспользованияРежимаРА, "ДЛФ=DD") + ".
			|Запускать обработку ""Проведение по партиям"" позже этой даты следует только для организаций на УСН и только по БУ и НУ без формирования проводок.
			|НЕ РЕКОМЕНДУЕТСЯ выполнять проведение по партиям до этой даты, потому что это может привести к изменению себестоимости запасов, что потребует корректировки
			|сформированных остатков по регистрам расширенной аналитики!", СтатусСообщения.Внимание, "Обработка проведения по партиям");
	КонецЕсли;		
	
КонецПроцедуры

Процедура ОтражатьВУправленческомУчетеПриИзменении(Элемент)
	ОбновитьВидимостьКолонок();
КонецПроцедуры

Процедура ОтражатьВБухгалтерскомУчетеПриИзменении(Элемент)
	ОбновитьВидимостьКолонок();
КонецПроцедуры


Процедура КоманднаяПанель1Обновить(Кнопка)
	ОбновитьТекстОПоследовательностях();
КонецПроцедуры

Процедура ТаблицаГраницПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого ТекущаяСтрока Из ОформленияСтрок Цикл
		
		Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.ДанныеСтроки.Организация) Тогда
			ТекущаяСтрока.Ячейки.Организация.Текст = "<По компании>";
		КонецЕсли;
		
		Если ТекущаяСтрока.Ячейки.КолонкаЗаголовок.Видимость Тогда
			ТекущаяСтрока.Ячейки.КолонкаЗаголовок.Видимость = Ложь;
		КонецЕсли;	
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура КоманднаяПанель1УстановитьФлажки(Кнопка)
	ТаблицаГраниц.ЗаполнитьЗначения(Истина,"Пометка");
КонецПроцедуры

Процедура КоманднаяПанель1СнятьФлажки(Кнопка)
	ТаблицаГраниц.ЗаполнитьЗначения(Ложь,"Пометка");
КонецПроцедуры

Процедура КоманднаяПанель1ПодробнаяИнформация(Кнопка)
	ЭлементыФормы.КоманднаяПанель1.Кнопки.ПодробнаяИнформация.Пометка = НЕ ЭлементыФормы.КоманднаяПанель1.Кнопки.ПодробнаяИнформация.Пометка;
	ОбновитьТекстОПоследовательностях();
КонецПроцедуры

Процедура ДействияФормыНастройкаОбработки(Кнопка)
	Форма = ПолучитьФорму("ФормаНастройки");
	Форма.ОткрытьМодально();
КонецПроцедуры

Процедура ДействияФормыУстановкаГраницыПоследовательностиПартионногоУчета(Кнопка)
	
	Если НЕ ПравоДоступа("Просмотр", Метаданные.Обработки.УстановкаГраницыПоследовательностиПартионногоУчета) Тогда
		Предупреждение("Сервис доступен пользователю с полными правами!", 60);
		Возврат;
	КонецЕсли;
	Обработки.УстановкаГраницыПоследовательностиПартионногоУчета.ПолучитьФорму().ОткрытьМодально();
	ОбновитьТекстОПоследовательностях();
	
КонецПроцедуры

ИспользуетсяРежимРА 			= глЗначениеПеременной("ИспользоватьРасширеннуюАналитикуУчетаНоменклатурыИЗатрат");
ДатаНачалаИспользованияРежимаРА = глЗначениеПеременной("ДатаНачалаИспользованияРасширеннойАналитикиУчетаНоменклатурыИЗатрат");