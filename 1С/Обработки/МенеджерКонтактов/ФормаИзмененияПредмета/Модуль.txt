Перем мОбработкаПоискаПоСтрокеПредмет;
Перем мТекстПоискаПоСтрокеПредмет;
Перем мПоследнееЗначениеЭлементаПоискаПоСтрокеПредмет;

Процедура ПредметНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	ПредметыЭлектронныхПисем.Предмет
	|ИЗ
	|	РегистрСведений.ПредметыЭлектронныхПисем КАК ПредметыЭлектронныхПисем
	|ГДЕ
	|	НЕ ПредметыЭлектронныхПисем.Предмет В(&ПустойСписок)
	|	" + ?(ЗначениеЗаполнено(ГруппаУчетнойЗаписи), "И
	|	ПредметыЭлектронныхПисем.ГруппаПисемЭлектроннойПочты = &ВыбГруппа", "") + "
	|	" + ?(ЗначениеЗаполнено(УчетнаяЗапись), "И
	|	ПредметыЭлектронныхПисем.ГруппаПисемЭлектроннойПочты.Владелец = &ВыбУчетнаяЗапись", "") + "
	|УПОРЯДОЧИТЬ ПО
	|	ПредметыЭлектронныхПисем.Предмет ВОЗР
	|";
	
	Запрос.УстановитьПараметр("ВыбГруппа"       , ГруппаУчетнойЗаписи);
	Запрос.УстановитьПараметр("ВыбУчетнаяЗапись", УчетнаяЗапись);
	МассивТипов = Метаданные.Документы.ЭлектронноеПисьмо.Реквизиты.ПредметКонтакта.Тип.Типы();
	ПустойСписок = Новый СписокЗначений;
	Для каждого ТипСписка Из МассивТипов Цикл
		ПустойСписок.Добавить(ОбщегоНазначения.ПустоеЗначениеТипа(ТипСписка));
	КонецЦикла; 
	Запрос.УстановитьПараметр("ПустойСписок", ПустойСписок);
	
	Элемент.СписокВыбора.Очистить();
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Элемент.СписокВыбора.Добавить(Выборка.Предмет);
	КонецЦикла; 
	
КонецПроцедуры

Процедура ПредметПриИзменении(Элемент)
	
	мПоследнееЗначениеЭлементаПоискаПоСтрокеПредмет = Элемент.Значение;
	
КонецПроцедуры

Процедура ПредметНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Если ТипЗнч(Элемент.Значение) <> Тип("СправочникСсылка.ФизическиеЛица") Тогда
		СтандартнаяОбработка = Ложь;
		Справочники.ФизическиеЛица.ПолучитьФормуВыбора(, Элемент).Открыть();
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПредметОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(Элемент.Значение) = Тип("Строка") Тогда
		Предмет = "";
	Иначе
		Предмет = Справочники.ФизическиеЛица.ПустаяСсылка();
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПредметАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, Новый Структура, Тип("СправочникСсылка.ФизическиеЛица"));
	
КонецПроцедуры

Процедура ПредметОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, Новый Структура, ЭтаФорма, Тип("СправочникСсылка.ФизическиеЛица"), мОбработкаПоискаПоСтрокеПредмет, мТекстПоискаПоСтрокеПредмет, мПоследнееЗначениеЭлементаПоискаПоСтрокеПредмет);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	мПоследнееЗначениеЭлементаПоискаПоСтрокеПредмет = Предмет;
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	ПроцедурыПоискаПоСтроке.ОбновлениеОтображенияВФормеПриПоискеПоСтроке(ЭтаФорма, ЭтаФорма.ЭлементыФормы.Предмет, мОбработкаПоискаПоСтрокеПредмет, мТекстПоискаПоСтрокеПредмет);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	ЭтаФорма.Закрыть(Предмет);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОтмена(Кнопка)
	
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

Процедура ПредметОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Элемент.Значение = ВыбранноеЗначение;
	
КонецПроцедуры

мОбработкаПоискаПоСтрокеПредмет                 = Ложь;
мТекстПоискаПоСтрокеПредмет                     = "";
мПоследнееЗначениеЭлементаПоискаПоСтрокеПредмет = Неопределено;