Перем мСписокОтложенногоВремени;
Перем мСписокПродолжительность;

Процедура ЗаполнитьДанныеПоСобытию()

	Если ЗначениеЗаполнено(Событие) Тогда
		НачалоСобытия    = Событие.НачалоСобытия;
		ОкончаниеСобытия = Событие.ОкончаниеСобытия;
	КонецЕсли;

КонецПроцедуры

Процедура ОпределитьПродолжительность()
	
	ПродолжительностьСобытия = ОкончаниеСобытия - НачалоСобытия;
	СтрокаСписка = мСписокПродолжительность.НайтиПоЗначению(ПродолжительностьСобытия);
	
	Если СтрокаСписка <> Неопределено Тогда
		ЭлементыФормы.Продолжительность.Значение = СтрокаСписка.Значение;
	ИначеЕсли ПродолжительностьСобытия < 0 Тогда
		ЭлементыФормы.Продолжительность.Значение = -1;
	Иначе
		ЭлементыФормы.Продолжительность.Значение = 0;
	КонецЕсли;
	
КонецПроцедуры


Процедура ОсновныеДействияФормыОтмена(Кнопка)
	
	ЭтаФорма.Закрыть(Ложь);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	Объект = Событие.ПолучитьОбъект();
	Объект.НачалоСобытия    = НачалоСобытия + ЗначениеОтложенногоВремени;
	Объект.ОкончаниеСобытия = ОкончаниеСобытия + ЗначениеОтложенногоВремени;
	Объект.Записать(РежимЗаписиДокумента.Проведение);
	
	ЭтаФорма.Закрыть(Истина);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ЗаполнитьДанныеПоСобытию();
	
	ЭлементыФормы.ЗначениеОтложенногоВремени.СписокВыбора = мСписокОтложенногоВремени;
	ЭлементыФормы.ЗначениеОтложенногоВремени.Значение = мСписокОтложенногоВремени[0].Значение;
	
	ЭлементыФормы.Продолжительность.СписокВыбора = мСписокПродолжительность;
	
	ОпределитьПродолжительность();
	
КонецПроцедуры

Процедура ПродолжительностьПриИзменении(Элемент)
	Если Продолжительность>0 Тогда
		ОкончаниеСобытия = НачалоСобытия + Продолжительность;
	КонецЕсли;
КонецПроцедуры

Процедура ОкончаниеСобытияПриИзменении(Элемент)
	
	ОпределитьПродолжительность();
	
КонецПроцедуры

Процедура ОкончаниеСобытияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если НЕ ЗначениеЗаполнено(Элемент.Значение) Тогда
		Элемент.Значение = РабочаяДата
	КонецЕсли;
	РаботаСДиалогамиДополнительный.ВыбратьВремяДня(ЭтаФорма,Элемент.Значение, Элемент, Событие.Ответственный);
	ОпределитьПродолжительность();

КонецПроцедуры

Процедура НачалоСобытияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если НЕ ЗначениеЗаполнено(Элемент.Значение) Тогда
		Элемент.Значение = РабочаяДата
	КонецЕсли;
	РаботаСДиалогамиДополнительный.ВыбратьВремяДня(ЭтаФорма,Элемент.Значение, Элемент, Событие.Ответственный);
	ОпределитьПродолжительность();

КонецПроцедуры

Процедура НачалоСобытияПриИзменении(Элемент)
	
	ОпределитьПродолжительность();
	
КонецПроцедуры

мСписокПродолжительность = Новый СписокЗначений;

мСписокПродолжительность.Добавить(0," ");

Для а=1 по 330 Цикл
	
	ВсегоМинут = а*30;
	Дней  = Цел(ВсегоМинут/1440);
	Часов = Цел((ВсегоМинут-Дней*1440)/60);
	Минут = ВсегоМинут -Дней*1440 - Часов*60;
	мСписокПродолжительность.Добавить(ВсегоМинут*60,?(Дней>0,Строка(Дней)+" дн. ","") + ?(Часов>0,Строка(Часов)+" ч. ","")+?(Минут<10,"0"+Минут,Минут)+" мин.");
	
КонецЦикла;

// Заполним список времен, на которые предлагается отложить напоминание
мСписокОтложенногоВремени = Новый СписокЗначений;
мСписокОтложенногоВремени.Добавить(0,"не откладывать");
мСписокОтложенногоВремени.Добавить(30*60,"30 мин.");
мСписокОтложенногоВремени.Добавить(1*60*60,"1 час");
мСписокОтложенногоВремени.Добавить(2*60*60,"2 часа");
мСписокОтложенногоВремени.Добавить(4*60*60,"4 часа");
мСписокОтложенногоВремени.Добавить(8*60*60,"8 часов");
мСписокОтложенногоВремени.Добавить(1*24*60*60,"1 день");
мСписокОтложенногоВремени.Добавить(2*24*60*60,"2 дня");
мСписокОтложенногоВремени.Добавить(3*24*60*60,"3 дня");
мСписокОтложенногоВремени.Добавить(4*24*60*60,"4 дня");
мСписокОтложенногоВремени.Добавить(1*7*24*60*60,"1 неделя");