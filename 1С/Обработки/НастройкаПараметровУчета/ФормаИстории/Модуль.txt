Перем мТекущиеДанныеДоРедактирования;
Перем мКолонкиДляПроверки Экспорт;
Перем ОбработкаКомментариев;

///////////////////////////////////////////////////////////////////////////////
//ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ОповеститьВладельца()
	
	Оповестить("ОбновитьПараметрыУчета" + ИмяТаблицыИсторииЗначений, ПараметрИсторииЗначений, ВладелецФормы);
	
КонецПроцедуры

// Функция проверяет заполнение обязательных реквизитов
//
Функция ДанныеНеСодержатОшибок()
	
	Если мКолонкиДляПроверки.Количество() = 0 Тогда
		Возврат Истина;
	КонецЕсли;
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	Возврат НастройкаПараметровУчетаПереопределяемый.ТаблицаИсторииЗаполненаБезОшибок(ЭтаФорма, ТаблицаИсторииЗначений)

КонецФункции // ДанныеНеСодержатОшибок()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ОбработатьОткрытиеФормы()
	
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ПрименитьИзменения.Доступность = Не ЭтаФорма.ТолькоПросмотр;
	
	мТекущиеДанныеДоРедактирования = Новый Структура;
	Для каждого Колонка Из ТаблицаИсторииЗначений.Колонки Цикл
		мТекущиеДанныеДоРедактирования.Вставить(Колонка.Имя);
	КонецЦикла;
	
	ЭлементыФормы.ТабличноеПоле.СоздатьКолонки();
	ЭлементыФормы.ТабличноеПоле.Колонки.Период.ТекстШапки = "Применяется с";
	ЭлементыФормы.ТабличноеПоле.Колонки.Период.АвтоОтметкаНезаполненного = Истина;
	
	Если ИмяТаблицыИсторииЗначений = "СтавкиРефинансированияЦБ" Тогда
		
		ЭлементыФормы.ТабличноеПоле.Колонки.Размер.ТекстШапки = "Размер, %";
		
	ИначеЕсли ИмяТаблицыИсторииЗначений = "РазмерОграниченияПособияПоНетрудоспособности" Тогда
		
		ЭлементыФормы.ТабличноеПоле.Колонки.Размер.ТекстШапки = "По нетрудоспособности";
		ЭлементыФормы.ТабличноеПоле.Колонки.РазмерПоБеременности.ТекстШапки = "По беременности и родам";
		
	ИначеЕсли ИмяТаблицыИсторииЗначений = "ГосударственныеПособия" Тогда
		
		ЭлементыФормы.ТабличноеПоле.Колонки.ВидПособия.Видимость = Ложь;
		
	ИначеЕсли ИмяТаблицыИсторииЗначений = "УчетнаяПолитикаНалоговыйУчет" Тогда
		
		ЭлементыФормы.ТабличноеПоле.Колонки.ОрганизацияЯвляетсяПлательщикомЕНВД.ТекстШапки = "ЕНВД";
		ЭлементыФормы.ТабличноеПоле.Колонки.УплачиватьДобровольныеВзносыВФСС.ТекстШапки = "Добр. взносы в ФСС";
		ЭлементыФормы.ТабличноеПоле.Колонки.ВидТарифаСтраховыхВзносов.ТекстШапки = "Тариф страховых взносов";
		
		ЭлементыФормы.ТабличноеПоле.Колонки.ОрганизацияЯвляетсяПлательщикомЕНВД.ЭлементУправления.Формат = "БЛ=Нет; БИ=Да";
		ЭлементыФормы.ТабличноеПоле.Колонки.ОрганизацияЯвляетсяПлательщикомЕНВД.Формат = "БЛ=Нет; БИ=Да";
		ЭлементыФормы.ТабличноеПоле.Колонки.УплачиватьДобровольныеВзносыВФСС.ЭлементУправления.Формат = "БЛ='Не уплачиваются'; БИ=Уплачиваются";
		ЭлементыФормы.ТабличноеПоле.Колонки.УплачиватьДобровольныеВзносыВФСС.Формат = "БЛ='Не уплачиваются'; БИ=Уплачиваются";
		
		НастройкаПараметровУчетаПереопределяемый.ОформитьДополнительныеКолонки(ЭтаФорма);
		
		ЭлементыФормы.ТабличноеПоле.Колонки.ВидТарифаСтраховыхВзносов.ЭлементУправления.КнопкаОчистки = Ложь;
		ЭлементыФормы.ТабличноеПоле.Колонки.ВидТарифаСтраховыхВзносов.ЭлементУправления.ШиринаСпискаВыбора = 50;
		ЭлементыФормы.ТабличноеПоле.Колонки.Сдвинуть(ЭлементыФормы.ТабличноеПоле.Колонки.ВидТарифаСтраховыхВзносов, -4);
		
		ОбработкаНачалоВыбора = Новый Действие("ВидТарифаСтраховыхВзносовНачалоВыбора");
		ЭлементыФормы.ТабличноеПоле.Колонки.ВидТарифаСтраховыхВзносов.ЭлементУправления.УстановитьДействие("НачалоВыбора", ОбработкаНачалоВыбора);
		
	ИначеЕсли ИмяТаблицыИсторииЗначений = "УчетнаяПолитикаПоЕСН" Тогда
		
		ЭлементыФормы.ТабличноеПоле.Колонки.ТочностьИсчисленияЕСН.ТекстШапки = "ЕСН";
		ЭлементыФормы.ТабличноеПоле.Колонки.ТочностьИсчисленияПФР.ТекстШапки = "Взносов в ПФР";  
		ЭлементыФормы.ТабличноеПоле.Колонки.ПорядокРасчетаВычетаФБ.ТекстШапки = "Порядок расчета вычета ФБ при ЕНВД"; 
		ЭлементыФормы.ТабличноеПоле.Колонки.Сдвинуть(3, 1); 
		ЭлементыФормы.ТабличноеПоле.Колонки.Вставить(2, "Точность исчисления:");
		
		ЭлементыФормы.ТабличноеПоле.Колонки.Период.Ширина = 6;
		ЭлементыФормы.ТабличноеПоле.Колонки[2].Ширина = 18;
		ЭлементыФормы.ТабличноеПоле.Колонки.ТочностьИсчисленияЕСН.Ширина = 8;
		ЭлементыФормы.ТабличноеПоле.Колонки.ТочностьИсчисленияПФР.Ширина = 10;
		ЭлементыФормы.ТабличноеПоле.Колонки.ТочностьИсчисленияЕСН.Положение = ПоложениеКолонки.НаСледующейСтроке;
		ЭлементыФормы.ТабличноеПоле.Колонки.ТочностьИсчисленияПФР.Положение = ПоложениеКолонки.ВТойЖеКолонке;
		ЭлементыФормы.ТабличноеПоле.Колонки.ПорядокРасчетаВычетаФБ.Ширина = 10;
		
		ЭлементыФормы.ТабличноеПоле.Колонки.ПорядокРасчетаВычетаФБ.ЭлементУправления.КнопкаОчистки = Ложь;
		ЭлементыФормы.ТабличноеПоле.Колонки.ТочностьИсчисленияПФР.ЭлементУправления.КнопкаОчистки = Ложь;
		ЭлементыФормы.ТабличноеПоле.Колонки.ТочностьИсчисленияЕСН.ЭлементУправления.КнопкаОчистки = Ложь;
		
		ЭлементыФормы.ТабличноеПоле.Колонки.ПорядокРасчетаВычетаФБ.АвтоОтметкаНезаполненного = Истина;
		ЭлементыФормы.ТабличноеПоле.Колонки.ТочностьИсчисленияПФР.АвтоОтметкаНезаполненного = Истина;
		ЭлементыФормы.ТабличноеПоле.Колонки.ТочностьИсчисленияЕСН.АвтоОтметкаНезаполненного = Истина;
		
	ИначеЕсли ИмяТаблицыИсторииЗначений = "ПравоПримененияЛьготПоЕСН" Тогда
		
		ЭлементыФормы.ТабличноеПоле.Колонки.ПравоНаЛьготы.ТекстШапки = "Право на льготы";
		ЭлементыФормы.ТабличноеПоле.Колонки.ПравоНаЛьготы.ЭлементУправления.Формат = "БЛ=Нет; БИ=Есть";
		ЭлементыФормы.ТабличноеПоле.Колонки.ПравоНаЛьготы.Формат = "БЛ=Нет; БИ=Есть";
		
	ИначеЕсли ИмяТаблицыИсторииЗначений = "УчетнаяПолитикаПоРБП" Тогда
		
		ЭлементыФормы.ТабличноеПоле.Колонки.РасходыПоОтпускам.ТекстШапки = "Порядок признания расходов";
	
	ИначеЕсли ИмяТаблицыИсторииЗначений = "УчетнаяПолитикаПоНДФЛ" Тогда	
		
		ЭлементыФормы.ТабличноеПоле.Колонки.ОсобенностиИсчисленияНДФЛ.ТекстШапки = "Особенности исчисления НДФЛ";	
		
	ИначеЕсли ИмяТаблицыИсторииЗначений = "НДФЛВычетыПоДоходам" Тогда
		
		ЭлементыФормы.ТабличноеПоле.Колонки.КодДохода.Видимость = Ложь;
		ЭлементыФормы.ТабличноеПоле.Колонки.ГодовойВычет.ТекстШапки = "Годовой вычет";
		ЭлементыФормы.ТабличноеПоле.Колонки.НормативЗатрат.ТекстШапки = "Норматив затрат";
		ЭлементыФормы.ТабличноеПоле.Колонки.ГодовойВычет.Формат = "ЧЦ=15; ЧДЦ=2; ЧН=-";
		ЭлементыФормы.ТабличноеПоле.Колонки.ГодовойВычет.ЭлементУправления.КнопкаВыбора = Истина;
		ЭлементыФормы.ТабличноеПоле.Колонки.НормативЗатрат.Формат = "ЧЦ=15; ЧДЦ=2; ЧН=-";
		ЭлементыФормы.ТабличноеПоле.Колонки.НормативЗатрат.ЭлементУправления.КнопкаВыбора = Истина;
		
	ИначеЕсли ИмяТаблицыИсторииЗначений = "НДФЛРазмерВычетов" Тогда
		
		ЭлементыФормы.ТабличноеПоле.Колонки.КодВычета.Видимость = Ложь;
		ЭлементыФормы.ТабличноеПоле.Колонки.ОграничениеПоДоходам.ТекстШапки = "Ограничение по доходам";
		ЭлементыФормы.ТабличноеПоле.Колонки.ОграничениеПоДоходам.ЭлементУправления.Формат = "ЧЦ=12; ЧДЦ=2; ЧН=Нет";
		ЭлементыФормы.ТабличноеПоле.Колонки.ОграничениеПоДоходам.ЭлементУправления.КнопкаВыбора = Истина;
		
	ИначеЕсли ИмяТаблицыИсторииЗначений = "СтраховыеВзносыСкидкиКДоходам" Тогда
		
		ЭлементыФормы.ТабличноеПоле.Колонки.ВидДохода.Видимость = Ложь;
		ЭлементыФормы.ТабличноеПоле.Колонки.ГодоваяСкидка.ТекстШапки = "Годовой вычет";
		ЭлементыФормы.ТабличноеПоле.Колонки.НормативЗатрат.ТекстШапки = "Норматив затрат";  
		ЭлементыФормы.ТабличноеПоле.Колонки.ГодоваяСкидка.Формат = "ЧЦ=15; ЧДЦ=2; ЧН=-";
		ЭлементыФормы.ТабличноеПоле.Колонки.ГодоваяСкидка.ЭлементУправления.КнопкаВыбора = Истина;
		ЭлементыФормы.ТабличноеПоле.Колонки.НормативЗатрат.Формат = "ЧЦ=15; ЧДЦ=2; ЧН=-";
		ЭлементыФормы.ТабличноеПоле.Колонки.НормативЗатрат.ЭлементУправления.КнопкаВыбора = Истина;	
		
	КонецЕсли;
	
	// проверим наличие колонки Организация и сделаем ее невидимой
	КолонкаОрганизация = ЭлементыФормы.ТабличноеПоле.Колонки.Найти("Организация");
	Если КолонкаОрганизация <> Неопределено Тогда
		КолонкаОрганизация.Видимость = Ложь;	
	КонецЕсли;	
	
	// заполним массив колонками, обязательными для заполнения
	мКолонкиДляПроверки = Новый Массив;
	Для каждого КолонкаТП Из ЭлементыФормы.ТабличноеПоле.Колонки Цикл
		Если КолонкаТП.АвтоОтметкаНезаполненного Тогда
			мКолонкиДляПроверки.Добавить(КолонкаТП.Имя)
		КонецЕсли;
	КонецЦикла;
	
	ОбработкаПриИзменении = Новый Действие("ПриИзмененииПериода");
	ЭлементыФормы.ТабличноеПоле.Колонки.Период.ЭлементУправления.УстановитьДействие("ПриИзменении", ОбработкаПриИзменении);
	
КонецПроцедуры

Процедура ПриПовторномОткрытии(СтандартнаяОбработка)
	
	Модифицированность = Ложь;
	ОбработатьОткрытиеФормы();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ОбработатьОткрытиеФормы();

КонецПроцедуры

Процедура ПриИзмененииПериода(Элемент) Экспорт

	Если Не ЗначениеЗаполнено(Элемент.Значение) Тогда
		Элемент.Значение = ОбщегоНазначения.ПолучитьРабочуюДату();
	КонецЕсли;
	
	Если (ИмяТаблицыИсторииЗначений = "НДФЛРазмерВычетов" или ИмяТаблицыИсторииЗначений = "НДФЛВычетыПоДоходам"
		или ИмяТаблицыИсторииЗначений = "УчетнаяПолитикаПоЕСН" или ИмяТаблицыИсторииЗначений = "УчетнаяПолитикаПоНДФЛ"
		или ИмяТаблицыИсторииЗначений = "ПредельнаяВеличинаБазыСтраховыхВзносов"
		или ИмяТаблицыИсторииЗначений = "СтраховыеВзносыСкидкиКДоходам")
		и Элемент.Значение <> НачалоГода(Элемент.Значение) Тогда
		Элемент.Значение = НачалоГода(Элемент.Значение);
	ИначеЕсли (ИмяТаблицыИсторииЗначений = "УчетнаяПолитикаНалоговыйУчет" или ИмяТаблицыИсторииЗначений = "ГосударственныеПособия" 
		или ИмяТаблицыИсторииЗначений = "РазмерОграниченияПособияПоНетрудоспособности"
		или ИмяТаблицыИсторииЗначений = "МинимальнаяОплатаТрудаРФ" 
		и Элемент.Значение <> НачалоМесяца(Элемент.Значение)) Тогда
		Элемент.Значение = НачалоМесяца(Элемент.Значение);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		Ответ = Вопрос("Данные были изменены. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Если ДанныеНеСодержатОшибок() Тогда
				ОповеститьВладельца();
			Иначе
				ОбработкаКомментариев.ПоказатьСообщения("Ошибка сохранения истории значений");
				Отказ = Истина;	
			КонецЕсли;
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;	
		КонецЕсли;	
			
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ТабличноеПолеПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ОбработатьОкончаниеРедактирвоанияСтрокиТабличногоПоля(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ, мТекущиеДанныеДоРедактирования, ТаблицаИсторииЗначений);
	
КонецПроцедуры

Процедура ТабличноеПолеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если НоваяСтрока Тогда
		
		Элемент.ТекущиеДанные.Период = НачалоГода(ОбщегоНазначения.ПолучитьРабочуюДату());
		
		Если ИмяТаблицыИсторииЗначений = "ГосударственныеПособия" Тогда
			ТекущиеДанные.ВидПособия = ПараметрИсторииЗначений;
		ИначеЕсли ИмяТаблицыИсторииЗначений = "НДФЛВычетыПоДоходам" Тогда
			ТекущиеДанные.КодДохода = ПараметрИсторииЗначений;
		ИначеЕсли ИмяТаблицыИсторииЗначений = "НДФЛРазмерВычетов" Тогда
			ТекущиеДанные.КодВычета = ПараметрИсторииЗначений;
		ИначеЕсли ИмяТаблицыИсторииЗначений = "СтраховыеВзносыСкидкиКДоходам" Тогда
			ТекущиеДанные.ВидДохода = ПараметрИсторииЗначений;
			Если Год(Элемент.ТекущиеДанные.Период) < 2010 Тогда
				// предложим следующую дату из уже введенных в таблице
				Период = 0;
				Для каждого СтрокаТП Из ТаблицаИсторииЗначений Цикл
					Если Период < Год(СтрокаТП.Период) Тогда
						Период = Год(СтрокаТП.Период);
					КонецЕсли;
				КонецЦикла;
				Если Период > 0 Тогда
					Элемент.ТекущиеДанные.Период = Дата(Период+1, 01, 01);
				Иначе	
					Элемент.ТекущиеДанные.Период = Дата('2010.01.01');
				КонецЕсли;	
			КонецЕсли;	
		ИначеЕсли ИмяТаблицыИсторииЗначений = "УчетнаяПолитикаНалоговыйУчет" 
			или ИмяТаблицыИсторииЗначений = "УчетнаяПолитикаПоЕСН"
			или ИмяТаблицыИсторииЗначений = "ПравоПримененияЛьготПоЕСН" 
			или ИмяТаблицыИсторииЗначений = "УчетнаяПолитикаПоНДФЛ" Тогда
			
			ТекущиеДанные.Организация = ПараметрИсторииЗначений;
			
		ИначеЕсли ИмяТаблицыИсторииЗначений = "ПредельнаяВеличинаБазыСтраховыхВзносов"
			И Год(Элемент.ТекущиеДанные.Период) < 2010 Тогда
			// предложим следующую дату из уже введенных в таблице
			Период = 0;
			Для каждого СтрокаТП Из ТаблицаИсторииЗначений Цикл
				Если Период < Год(СтрокаТП.Период) Тогда
					Период = Год(СтрокаТП.Период);
				КонецЕсли;
			КонецЦикла;
			Если Период > 0 Тогда
				Элемент.ТекущиеДанные.Период = Дата(Период+1, 01, 01);
			Иначе	
				Элемент.ТекущиеДанные.Период = Дата('2010.01.01');
			КонецЕсли;
			
		ИначеЕсли ИмяТаблицыИсторииЗначений = "УчетнаяПолитикаПоРБП" Тогда
			
			ТекущиеДанные.Организация = ПараметрИсторииЗначений;
			Если Год(Элемент.ТекущиеДанные.Период) < 2011 Тогда
				Период = 0;
				Для каждого СтрокаТП Из ТаблицаИсторииЗначений Цикл
					Если Период < Год(СтрокаТП.Период) Тогда
						Период = Год(СтрокаТП.Период);
					КонецЕсли;
				КонецЦикла;
				Если Период > 0 Тогда
					Элемент.ТекущиеДанные.Период = Дата(Период+1, 01, 01);
				Иначе	
					Элемент.ТекущиеДанные.Период = Дата('2011.01.01');
				КонецЕсли;	
			КонецЕсли;	
			
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(мТекущиеДанныеДоРедактирования, ТекущиеДанные);
	
КонецПроцедуры

Процедура ТабличноеПолеПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Если ИмяТаблицыИсторииЗначений = "УчетнаяПолитикаПоЕСН" Тогда
		Для каждого ОформлениеСтроки Из ОформленияСтрок Цикл
			ОформлениеСтроки.Ячейки.Колонка1.Видимость = Ложь;
			ОформлениеСтроки.Ячейки.Период.Текст = Формат(ОформлениеСтроки.Ячейки.Период.Значение, "ДФ=гггг") + " г.";
		КонецЦикла;
	ИначеЕсли ИмяТаблицыИсторииЗначений = "ПредельнаяВеличинаБазыСтраховыхВзносов" Тогда
		Для каждого ОформлениеСтроки Из ОформленияСтрок Цикл
			ОформлениеСтроки.Ячейки.Период.Текст = Формат(ОформлениеСтроки.Ячейки.Период.Значение, "ДФ=гггг") + " г.";
		КонецЦикла;	
	ИначеЕсли ИмяТаблицыИсторииЗначений = "УчетнаяПолитикаНалоговыйУчет" Тогда
		Для каждого ОформлениеСтроки Из ОформленияСтрок Цикл
			ОформлениеСтроки.Ячейки.Период.Текст = РаботаСДиалогамиЗК.ПолучитьПредставлениеПериодаКакМесяцГодРодительныйПадеж(ОформлениеСтроки.Ячейки.Период.Значение);
			НастройкаПараметровУчетаПереопределяемый.ОформитьЯчейкиДополнительныхКолонк(ЭтаФорма, ОформлениеСтроки);
			Если ОформлениеСтроки.Ячейки.Период.Значение < '2010.01.01' Тогда
				ОформлениеСтроки.Ячейки.ВидТарифаСтраховыхВзносов.ОтметкаНезаполненного = Ложь;
				ОформлениеСтроки.Ячейки.ВидТарифаСтраховыхВзносов.ТолькоПросмотр = Истина;
				ОформлениеСтроки.Ячейки.ВидТарифаСтраховыхВзносов.Текст = "Не применяется";
				ОформлениеСтроки.Ячейки.УплачиватьДобровольныеВзносыВФСС.ТолькоПросмотр = Не ОформлениеСтроки.Ячейки.ОрганизацияЯвляетсяПлательщикомЕНВД.Значение;
			Иначе
				ОформлениеСтроки.Ячейки.ВидТарифаСтраховыхВзносов.ОтметкаНезаполненного = Не ЗначениеЗаполнено(ОформлениеСтроки.Ячейки.ВидТарифаСтраховыхВзносов.Значение);
				ОформлениеСтроки.Ячейки.УплачиватьДобровольныеВзносыВФСС.ТолькоПросмотр = Истина;
				ОформлениеСтроки.Ячейки.УплачиватьДобровольныеВзносыВФСС.Текст = "Не применяются";
			КонецЕсли;
			
		КонецЦикла; 
	ИначеЕсли ИмяТаблицыИсторииЗначений = "ПравоПримененияЛьготПоЕСН" или ИмяТаблицыИсторииЗначений = "УчетнаяПолитикаПоРБП" Тогда
		Для каждого ОформлениеСтроки Из ОформленияСтрок Цикл
			ОформлениеСтроки.Ячейки.Период.Текст = РаботаСДиалогамиЗК.ПолучитьПредставлениеПериодаКакМесяцГодРодительныйПадеж(ОформлениеСтроки.Ячейки.Период.Значение);
		КонецЦикла	
	ИначеЕсли ИмяТаблицыИсторииЗначений = "НДФЛРазмерВычетов" или ИмяТаблицыИсторииЗначений = "НДФЛВычетыПоДоходам"
		или ИмяТаблицыИсторииЗначений = "УчетнаяПолитикаПоНДФЛ" или ИмяТаблицыИсторииЗначений = "СтраховыеВзносыСкидкиКДоходам" Тогда	
		Для каждого ОформлениеСтроки Из ОформленияСтрок Цикл
			ОформлениеСтроки.Ячейки.Период.Текст = Формат(ОформлениеСтроки.Ячейки.Период.Значение, "ДФ=гггг") + " г.";
		КонецЦикла;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОсновныеДействияФормыПрименитьИзменения(Кнопка)
	
	Если ДанныеНеСодержатОшибок() Тогда
		ОповеститьВладельца();
		Модифицированность = Ложь;
		Закрыть();
	Иначе
		ОбработкаКомментариев.ПоказатьСообщения("Ошибка сохранения истории значений");
	КонецЕсли;
	
КонецПроцедуры

Процедура ВидТарифаСтраховыхВзносовНачалоВыбора(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = ЭлементыФормы.ТабличноеПоле.ТекущиеДанные;
	СписокДляВыбора = НастройкаПараметровУчетаПереопределяемый.ПолучитьСписокДоступныхТарифов(ЭтаФорма, ТекущиеДанные);

	ЭлементСписка = ВыбратьИзСписка(СписокДляВыбора,Элемент,СписокДляВыбора.НайтиПоЗначению(Элемент.Значение));
	Если ЭлементСписка <> Неопределено и Элемент.Значение <> ЭлементСписка.Значение Тогда
		Элемент.Значение = ЭлементСписка.Значение;
	КонецЕсли;

КонецПроцедуры