Перем мДатаНачала, мДатаРасчетаОстатков, мТекущееЗначениеНастройки;
Перем мОтбиратьДокументыПоРазделуУчета;
Перем ТаблицаСформированныхДокументов;
Перем мКартинкаДалее,мКартинкаНазад;
Перем ИспользоватьРасширеннуюАналитикуУчетаНоменклатурыИЗатрат;
Перем мВысотаФормыМин, мВысотаФормыМакс;
//ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	//проверка доступа к изменению настроек учета
	ЭтаФорма.ТолькоПросмотр = не ПолучитьРазрешениеНаИзменениеНастроекУчета();
КонецПроцедуры

// Процедура - обработчик события "Регулирование" элемента управления ПредставлениеПериодаРегистрации.
//
Процедура ПредставлениеПериодаРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	Если не ПроверитьВозможностьИзмененияПериода() Тогда
		СтандартнаяОбработка = ложь;
		Возврат;
	КонецЕсли;
	
	РаботаСДиалогами.РегулированиеПредставленияПериодаРегистрации(Направление, СтандартнаяОбработка, мДатаНачала, ПредставлениеПериодаРегистрации);
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбораИзСписка" элемента управления ПредставлениеПериодаРегистрации.
//
Процедура ПредставлениеПериодаРегистрацииНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Если не ПроверитьВозможностьИзмененияПериода() Тогда
		СтандартнаяОбработка = ложь;
		Возврат;
	КонецЕсли;

	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, мДатаНачала, ЭтаФорма);
	
КонецПроцедуры

// Процедура - обработчик события "Очистка" элемента управления ПредставлениеПериодаРегистрации.
//
Процедура ПредставлениеПериодаРегистрацииОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

Процедура ТаблицаНастройкиПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	мЦветФона = ЦветаСтиля.ЦветФонаПодсказки;

	Если ДанныеСтроки.РассчитанУУ Тогда
		ОформлениеСтроки.Ячейки.УУ.ЦветФона = мЦветФона;
		ОформлениеСтроки.Ячейки.УУ.ТолькоПросмотр = Истина;
	КонецЕсли;
	Если ДанныеСтроки.РассчитанБУ Тогда
		ОформлениеСтроки.Ячейки.БУ.ЦветФона = мЦветФона;
		ОформлениеСтроки.Ячейки.БУ.ТолькоПросмотр = Истина;
	КонецЕсли;
    Если ДанныеСтроки.РассчитанНУ Тогда
		ОформлениеСтроки.Ячейки.НУ.ЦветФона = мЦветФона;
		ОформлениеСтроки.Ячейки.НУ.ТолькоПросмотр = Истина;
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
	мКартинкаДалее = ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Далее.Картинка;
	мКартинкаНазад = ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Назад.Картинка;
	
	ЗаполнитьСтрокиТаблицыНастроек();
	ПрочитатьТекущиеНастройки();
	ПредставлениеПериодаРегистрации = РаботаСДиалогами.ПолучитьПредставлениеПериодаРегистрации(НачалоМесяца(мДатаНачала));

	Если мТекущееЗначениеНастройки Тогда
		//настройка установлена
		ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.ИзменитьНастройкуПолная;
		УдалитьКнопкуКоманднойПанели("Далее");
		УдалитьКнопкуКоманднойПанели("Назад");
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ИзменитьНастройку.КнопкаПоУмолчанию = истина;
	Иначе
		УдалитьКнопкуКоманднойПанели("ИзменитьНастройку");
		УдалитьКнопкуКоманднойПанели("Назад");
        ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.РежимИспользованияРасширеннойАналитики;
		ЭлементыФормы.НастройкиАналитикиУчета.Развернуть(ЭлементыФормы.НастройкиАналитикиУчета.РодительВерхнегоУровня ,Истина);
	КонецЕсли;
	УстановитьДоступность();
	УстановитьВысотуФормы();
КонецПроцедуры

Процедура ПризнакИспользованияПриИзменении(Элемент)
	ИспользоватьРасширеннуюАналитикуУчетаНоменклатурыИЗатрат = ПризнакИспользования;
	УстановитьДоступность();
КонецПроцедуры

Процедура ТаблицаНастройкиВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	Если Колонка = ЭлементыФормы.ТаблицаНастройки.Колонки.РазделУчета Тогда
		Если ВыбраннаяСтрока.УУ и ВыбраннаяСтрока.БУ и ВыбраннаяСтрока.НУ Тогда
			ВыбраннаяСтрока.УУ = ложь;
			ВыбраннаяСтрока.БУ = ложь;
			ВыбраннаяСтрока.НУ = ложь;
		ИначеЕсли НЕ (ВыбраннаяСтрока.УУ и ВыбраннаяСтрока.БУ и ВыбраннаяСтрока.НУ) Тогда
			Если не ВыбраннаяСтрока.РассчитанУУ Тогда
				ВыбраннаяСтрока.УУ = истина;
			КонецЕсли;
			Если не ВыбраннаяСтрока.РассчитанБУ Тогда
				ВыбраннаяСтрока.БУ = истина;
			КонецЕсли;
			Если не ВыбраннаяСтрока.РассчитанНУ Тогда
				ВыбраннаяСтрока.НУ = истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ТаблицаОтображаемыхДокументовВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	Форма = ЭлементыФормы.ТаблицаОтображаемыхДокументов.ТекущиеДанные.Ссылка.ПолучитьФорму();
	Форма.Открыть();
КонецПроцедуры

//ОБРАБОТЧИКИ НАЖАТИЯ КНОПОК КОМАНДНЫХ ПАНЕЛЕЙ

Процедура КнопкаОКНажатие(Кнопка)
	Если ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.ИзменитьНастройкуПолная Тогда
		ИспользоватьРасширеннуюАналитикуУчетаНоменклатурыИЗатрат = ПризнакИспользования;
	ИначеЕсли ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.ИзменитьНастройкуВыборочная Тогда
		ИспользоватьРасширеннуюАналитикуУчетаНоменклатурыИЗатрат = истина;
	КонецЕсли;
	
    Если мТекущееЗначениеНастройки = ИспользоватьРасширеннуюАналитикуУчетаНоменклатурыИЗатрат Тогда
		Возврат;
	КонецЕсли;
	флПринудительнаяУстановка = ложь;
	Если не мТекущееЗначениеНастройки Тогда //Выполняется установка режима расширенной аналитики
		Если не ЗначениеЗаполнено(мДатаНачала) Тогда
			Предупреждение("Не выбрана дата начала использования расширенной аналитики учета затрат!",,"Изменение настройки ""Использовать расширенную аналитику""");
			Возврат;
		КонецЕсли;
		ЗаголовокВопроса = "Изменение настройки ""Использовать расширенную аналитику""";
		Если ВариантЗаполнения = 1 Тогда
			//Полный режим
			Если не ПолучитьПодтверждениеПользователя(ЗаголовокВопроса) Тогда
				Возврат;
			КонецЕсли;
			//Проверим есть ли документы ввода остатков на эту дату
			Результат = ПолучитьЗапросДокументовВводаОстатков();
			Если не Результат.Пустой() Тогда
				Выборка = Результат.Выбрать();
				Пока Выборка.Следующий() цикл
					ДокОбъект = Выборка.Ссылка.ПолучитьОбъект();
					Попытка
						ДокОбъект.УстановитьПометкуУдаления(истина);
					Исключение
						ОбщегоНазначения.СообщитьОбОшибке("Ошибка при пометке удаления документа "+СокрЛП(Выборка.Ссылка)+": "+ОписаниеОшибки()+"
						|Изменение настройки не выполнено.");
						Возврат;
					КонецПопытки;
				КонецЦикла;
			КонецЕсли;	
			//Создадим новые документы
			ЗаполнитьДанныеРегистров();

		Иначе
			//Выборочный режим
			//проверим заполнение исходных данных
			Если ТаблицаНастройки.Найти(ложь,"РассчитанУУ, РассчитанБУ, РассчитанНУ")<>неопределено Тогда
				ТекстВопроса = "Внимание! Расчет был выполнен не для всех исходных данных! Продолжить?";
				Если Вопрос(ТекстВопроса,РежимДиалогаВопрос.ДаНет,,,ЗаголовокВопроса)=КодВозвратаДиалога.Нет Тогда
					Возврат;
				КонецЕсли;
				флПринудительнаяУстановка = истина;
			Иначе
				ТекстВопроса = "Внимание! Сейчас будет выполнено включение использования расширенной аналитики учета. Продолжить?";
				Если Вопрос(ТекстВопроса,РежимДиалогаВопрос.ДаНет,,,ЗаголовокВопроса)=КодВозвратаДиалога.Нет Тогда
					Возврат;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		//снятие признака использования
		Если Вопрос("Внимание! Отключение использования расширенной аналитики учета "+Символы.ПС+
				"без последующего перепроведения документов может привести "+ символы.ПС +
				"к несогласованному состоянию данных информационной базы."+Символы.ПС+
				"Рекомендуется ознакомиться со справочной информацией. Продолжить?", РежимДиалогаВопрос.ДаНет,,,ЗаголовокВопроса)=КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
    ЗаполнитьНастройкуУчета(флПринудительнаяУстановка);
КонецПроцедуры

Процедура КоманднаяПанельНастройкиОбновитьТаблицу(Кнопка)
	ОбновитьСписокСформированныхДокументов();
	ЗаполнитьКолонкиТаблицыНастроек();
	УстановитьДоступность();
КонецПроцедуры

Процедура КоманднаяПанельНастройкиУстановитьФлажки(Кнопка)
	Для каждого Строка из ТаблицаНастройки цикл
		Если не Строка.РассчитанУУ Тогда
			Строка.УУ = истина;
		КонецЕсли;
		Если не Строка.РассчитанБУ Тогда
			Строка.БУ = истина;
		КонецЕсли;
		Если не Строка.РассчитанНУ Тогда
			Строка.НУ = истина;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанельНастройкиСнятьФлажки(Кнопка)
	ТаблицаНастройки.ЗаполнитьЗначения(ложь,"УУ, БУ,НУ");
КонецПроцедуры

Процедура КоманднаяПанельДокументыУстановитьФлажки(Кнопка)
	ТаблицаОтображаемыхДокументов.ЗаполнитьЗначения(истина,"Пометка");
КонецПроцедуры

Процедура КоманднаяПанельДокументыСнятьФлажки(Кнопка)
	ТаблицаОтображаемыхДокументов.ЗаполнитьЗначения(ложь,"Пометка");
КонецПроцедуры

Процедура КоманднаяПанельДокументыУдалить(Кнопка)
	Если ТаблицаОтображаемыхДокументов.Найти(истина,"Пометка")=неопределено Тогда
		Предупреждение("Не отмечены обрабатываемые остатки",,"Удаление документов");
		Возврат;
	КонецЕсли;
	
	Если Вопрос("Внимание! Отмеченные документы ввода остатков будут помечены на удаление,"+Символы.ПС+
		"их движения будут отключены. Продолжить?",РежимДиалогаВопрос.ДаНет,,,"Удаление документов ввода остатков")=КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	Для Каждого ТекущаяСтрока Из ТаблицаОтображаемыхДокументов Цикл
		Если ТекущаяСтрока.Пометка Тогда
			ДокОбъект = ТекущаяСтрока.Ссылка.ПолучитьОбъект();
			ДокОбъект.УстановитьПометкуУдаления(истина);
		КонецЕсли;
	КонецЦикла;	
    ОбновитьСписокСформированныхДокументов();
	ЗаполнитьКолонкиТаблицыНастроек();
КонецПроцедуры

Процедура КоманднаяПанельДокументыИзменитьОтборСпискаДокументов(Кнопка)
	мОтбиратьДокументыПоРазделуУчета = не мОтбиратьДокументыПоРазделуУчета;
	ЭлементыФормы.КоманднаяПанельДокументы.Кнопки.ИзменитьОтборСпискаДокументов.Пометка = мОтбиратьДокументыПоРазделуУчета;
	ОбновитьТаблицуОтображаемыхДокументов();
КонецПроцедуры

Процедура ТаблицаНастройкиПриАктивизацииСтроки(Элемент)
	Если мОтбиратьДокументыПоРазделуУчета Тогда
		ОбновитьТаблицуОтображаемыхДокументов();
	КонецЕсли;
КонецПроцедуры

Процедура ОсновныеДействияФормыДалее(Кнопка)
	
	Если ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.РежимИспользованияРасширеннойАналитики Тогда
		
		Если РежимИспользованияРасширеннойАналитики = Перечисления.РежимыИспользованияРасширеннойАналитики.РегламентированныйУчет Тогда
			РезультатЗапроса = ПолучитьЗапросДокументовВводаОстатков();
			Если не РезультатЗапроса.Пустой() Тогда
				//уже что-то заполняли - соответственно заполним режим
				ВариантЗаполнения = 2;
			Иначе
				ВариантЗаполнения = 1;
			КонецЕсли;

			ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.ВыборРежима;
		Иначе
			УстановитьВидимостьКолонокНастройкиАналитикиУчета();
		    ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.НастройкаАналитикиУчетаЗатрат;
		КонецЕсли;	
		ДобавитьКнопкуКоманднойПанели("Назад", "Назад", "ОсновныеДействияФормыНазад",мКартинкаНазад,ложь);
		
	ИначеЕсли ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.НастройкаАналитикиУчетаЗатрат Тогда
		РезультатЗапроса = ПолучитьЗапросДокументовВводаОстатков();
		Если не РезультатЗапроса.Пустой() Тогда
			//уже что-то заполняли - соответственно заполним режим
			ВариантЗаполнения = 2;
		Иначе
			ВариантЗаполнения = 1;
		КонецЕсли;

		ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.ВыборРежима;
	ИначеЕсли ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.ВыборРежима Тогда
		//обрабатываем выбор режима
		Если ВариантЗаполнения = 1 Тогда
			ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.ИзменитьНастройкуПолная;
			//удаляем кнопку Далее и добавляем кнопку ИзменитьНастройку
			УдалитьКнопкуКоманднойПанели("Далее");
			ДобавитьКнопкуКоманднойПанели("ИзменитьНастройку", "Изменить настройку", "КнопкаОКНажатие",,истина);
			ДобавитьКнопкуКоманднойПанели("Назад", "Назад", "ОсновныеДействияФормыНазад",мКартинкаНазад,ложь);

		Иначе
			ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.ИзменитьНастройкуВыборочная;
			//добавляем кнопки ИзменитьНастройку и добавляем кнопку Далее
			ДобавитьКнопкуКоманднойПанели("Назад", "Назад", "ОсновныеДействияФормыНазад",мКартинкаНазад,ложь,1);
			ДобавитьКнопкуКоманднойПанели("Далее","Далее","ОсновныеДействияФормыДалее",мКартинкаДалее,истина,2);
			//заполняем таблицы
			ОбновитьСписокСформированныхДокументов();
			ЗаполнитьКолонкиТаблицыНастроек();
		КонецЕсли;
	ИначеЕсли ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.ИзменитьНастройкуВыборочная Тогда
		ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.ИзменитьНастройкуПолная;
		УдалитьКнопкуКоманднойПанели("Далее");
		ДобавитьКнопкуКоманднойПанели("ИзменитьНастройку", "Изменить настройку", "КнопкаОКНажатие",,истина);
	КонецЕсли;
	УстановитьДоступность();
	УстановитьВысотуФормы();	
КонецПроцедуры

Процедура ОсновныеДействияФормыНазад(Кнопка)
	
	Если ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.ВыборРежима Тогда
		Если РежимИспользованияРасширеннойАналитики = Перечисления.РежимыИспользованияРасширеннойАналитики.РегламентированныйУчет Тогда
			УдалитьКнопкуКоманднойПанели("Назад");
			ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.РежимИспользованияРасширеннойАналитики;
		Иначе	
		    ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.НастройкаАналитикиУчетаЗатрат;
			УстановитьВидимостьКолонокНастройкиАналитикиУчета();
		КонецЕсли;	
	ИначеЕсли ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.НастройкаАналитикиУчетаЗатрат Тогда
		УдалитьКнопкуКоманднойПанели("Назад");
		
		ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.РежимИспользованияРасширеннойАналитики;
	ИначеЕсли ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.ИзменитьНастройкуВыборочная Тогда	
		ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.ВыборРежима;
		УдалитьКнопкуКоманднойПанели("ИзменитьНастройку");
	ИначеЕсли ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.ИзменитьНастройкуПолная Тогда
		УдалитьКнопкуКоманднойПанели("ИзменитьНастройку");
        ДобавитьКнопкуКоманднойПанели("Далее","Далее","ОсновныеДействияФормыДалее",мКартинкаДалее,истина,2);
		Если ВариантЗаполнения = 1 Тогда //Полный режим
			ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.ВыборРежима;
		Иначе //Выборочный режим
			ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.ИзменитьНастройкуВыборочная;
		КонецЕсли;
	КонецЕсли;
	УстановитьВысотуФормы();
КонецПроцедуры

Процедура КоманднаяПанельНастройкиРассчитать(Кнопка)
	//проверяем все ли заполнено
	Если не ПроверитьИсходныеДанныеЗаполнения(ложь) Тогда
		Возврат;
	КонецЕсли;
	
	//спрашиваем
	Если Вопрос("Внимание! Сейчас будет выполнено заполнение регистров расширенной аналитики. "+Символы.ПС+
		"Это может занять продолжительное время. Продолжить?",РежимДиалогаВопрос.ДаНет,,,"Заполнение регистров расширенной аналитики")=КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	//обрабатываем заполнение регистров
	ЗаполнитьДанныеРегистров();
	//проверяем все ли регистры заполнены
	ОбновитьСписокСформированныхДокументов();
	ЗаполнитьКолонкиТаблицыНастроек();
	УстановитьДоступность();
КонецПроцедуры


//ПРОЦЕДУРЫ ИЗМЕНЕНИЯ ВНЕШНЕГО ВИДА ФОРМЫ

Процедура ЗаполнитьНастройкиВСоответствииСРежимом()
	
	РасширеннаяАналитикаУчета.ЗаполнитьНастройкиАналитикиПоШаблону(РежимИспользованияРасширеннойАналитики);

КонецПроцедуры

Процедура УстановитьВидимостьКолонокНастройкиАналитикиУчета()
	Если РежимИспользованияРасширеннойАналитики = Перечисления.РежимыИспользованияРасширеннойАналитики.УправленческийИРегламентированныйУчет Тогда
		ЭлементыФормы.НастройкиАналитикиУчета.Колонки.УправленческийУчет.Видимость = Истина;
		ЭлементыФормы.НастройкиАналитикиУчета.Колонки.РегламентированныйУчет.Видимость = Истина;
		ЭлементыФормы.НастройкиАналитикиУчета.Колонки.УправленческийУчет.Доступность = Истина;
		ЭлементыФормы.НастройкиАналитикиУчета.Колонки.РегламентированныйУчет.Доступность = Ложь;
	ИначеЕсли РежимИспользованияРасширеннойАналитики = Перечисления.РежимыИспользованияРасширеннойАналитики.РегламентированныйУчетСДополнительнойАналитикой Тогда
		ЭлементыФормы.НастройкиАналитикиУчета.Колонки.УправленческийУчет.Видимость = Ложь;
		ЭлементыФормы.НастройкиАналитикиУчета.Колонки.РегламентированныйУчет.Видимость = Истина;
		ЭлементыФормы.НастройкиАналитикиУчета.Колонки.РегламентированныйУчет.Доступность = Истина;
	ИначеЕсли РежимИспользованияРасширеннойАналитики = Перечисления.РежимыИспользованияРасширеннойАналитики.РегламентированныйУчет Тогда
		//в данном режиме таблица настроек не показывается, ничего настраивать не требуется
	КонецЕсли;

КонецПроцедуры
	
Процедура УдалитьКнопкуКоманднойПанели(ИмяКнопки)
	Кнопка = ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Найти(ИмяКнопки);
	Если Кнопка<>неопределено Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Удалить(Кнопка);
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьКнопкуКоманднойПанели(ИмяКнопки,Надпись,ИмяПроцедуры,Картинка=неопределено,флПоУмолчанию,Позиция=0)
	Кнопка = ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Найти(ИмяКнопки);
	Если Кнопка = неопределено Тогда
		Кнопка = ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Вставить(Позиция,ИмяКнопки,ТипКнопкиКоманднойПанели.Действие,Надпись,новый Действие(ИмяПроцедуры));
		Кнопка.Отображение = ОтображениеКнопкиКоманднойПанели.НадписьКартинка;
		Кнопка.Подсказка = Надпись;
		Если Картинка<>неопределено Тогда
			Кнопка.Картинка = Картинка;
		КонецЕсли;
		Если флПоУмолчанию Тогда
			Кнопка.КнопкаПоУмолчанию = флПоУмолчанию;
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьДоступность()
	Если ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.ИзменитьНастройкуПолная Тогда
		Если ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Найти("ИзменитьНастройку")<>неопределено  Тогда
			НастройкаИзменена = НЕ (мТекущееЗначениеНастройки = ИспользоватьРасширеннуюАналитикуУчетаНоменклатурыИЗатрат);
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ИзменитьНастройку.Доступность = НастройкаИзменена;
		КонецЕсли;
		
		ЭлементыФормы.ПредставлениеПериодаРегистрацииПолныйРежим.Доступность = истина;
		Если не ПризнакИспользования Тогда //признак выключен - незачем менять дату
			ЭлементыФормы.ПредставлениеПериодаРегистрацииПолныйРежим.Доступность = ложь;
		ИначеЕсли мТекущееЗначениеНастройки Тогда //уже все посчитано - нельзя поменять дату
			ЭлементыФормы.ПредставлениеПериодаРегистрацииПолныйРежим.Доступность = ложь;
		КонецЕсли;
		
		ЭлементыФормы.ПанельНадписей.Видимость = ложь;
		Если мТекущееЗначениеНастройки Тогда
			ЭлементыФормы.ПанельНадписей.Видимость = истина;
			ЭлементыФормы.ПанельНадписей.ТекущаяСтраница = ЭлементыФормы.ПанельНадписей.Страницы.ОтключениеРежима;
		ИначеЕсли ВариантЗаполнения = 2 И не мТекущееЗначениеНастройки  Тогда
			//Выборочный режим, данные уже посчитаны - нельзя поменять дату
			ЭлементыФормы.ПредставлениеПериодаРегистрацииПолныйРежим.Доступность = ложь;
			
			//Проверим все ли данные посчитаны
			Если ТаблицаНастройки.Найти(ложь,"РассчитанУУ, РассчитанБУ, РассчитанНУ")<>неопределено Тогда
				ЭлементыФормы.ПанельНадписей.Видимость = истина;
				ЭлементыФормы.ПанельНадписей.ТекущаяСтраница = ЭлементыФормы.ПанельНадписей.Страницы.РасчетНеОкончен;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.ИзменитьНастройкуВыборочная Тогда
		//корректируем информационные надписи
		Если ТаблицаНастройки.Найти(ложь,"РассчитанУУ, РассчитанБУ, РассчитанНУ")=неопределено Тогда
			//все рассчитано
			ЭлементыФормы.НадписьПояснениеВыборожныйРежим.Заголовок = "Заполнение регистров завершено. 
			|Для изменения настройки нажмите кнопку ""Далее""";
		Иначе
			ЭлементыФормы.НадписьПояснениеВыборожныйРежим.Заголовок = "Укажите, по каким данным заполнить регистры расширенной аналитики учета затрат. 
			|После этого нажмите кнопку ""Рассчитать""";

		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

//ПРОЦЕДУРЫ РАБОТЫ С ПЕРЕМЕННЫМИ ФОРМЫ

Процедура ЗаполнитьКолонкиТаблицыНастроек()
	ТаблицаНастройки.ЗаполнитьЗначения(ложь,"РассчитанБУ,РассчитанНУ,РассчитанУУ");
	//заполним уже выполненные операции
	Для каждого СтрокаРазделУчета из ТаблицаНастройки цикл
		СтрокиТаблицыДокументов = ТаблицаСформированныхДокументов.НайтиСтроки(новый Структура("РазделУчетаИмя", СтрокаРазделУчета.РазделУчетаИмя));
		Для каждого СтрокаТаблицыДокументов из СтрокиТаблицыДокументов цикл
			Если не ЗначениеЗаполнено(СтрокаТаблицыДокументов.ВидУчета) Тогда
				Продолжить;
			КонецЕсли;
			СтрокаРазделУчета[СтрокаТаблицыДокументов.ВидУчета] = ложь;
			СтрокаРазделУчета["Рассчитан"+СтрокаТаблицыДокументов.ВидУчета] = истина;
		КонецЦикла;	
		
		Если РежимИспользованияРасширеннойАналитики = Перечисления.РежимыИспользованияРасширеннойАналитики.РегламентированныйУчет
		  ИЛИ РежимИспользованияРасширеннойАналитики = Перечисления.РежимыИспользованияРасширеннойАналитики.РегламентированныйУчетСДополнительнойАналитикой Тогда
		  СтрокаРазделУчета.РассчитанУУ = Истина;
			СтрокаРазделУчета.УУ = Ложь;
		Иначе
			Если НЕ СтрокаРазделУчета.РассчитанУУ Тогда
				СтрокаРазделУчета.РассчитанУУ = ПереходНаРасширеннуюАналитикуУчета.НетОстатковПоРазделуУчета(СтрокаРазделУчета.РазделУчетаИмя,Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете,мДатаНачала);
				СтрокаРазделУчета.УУ = НЕ СтрокаРазделУчета.РассчитанУУ;
			КонецЕсли;	
		КонецЕсли;	
		
		Если НЕ СтрокаРазделУчета.РассчитанБУ Тогда
			СтрокаРазделУчета.РассчитанБУ = ПереходНаРасширеннуюАналитикуУчета.НетОстатковПоРазделуУчета(СтрокаРазделУчета.РазделУчетаИмя,Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете,мДатаНачала);
			СтрокаРазделУчета.БУ = НЕ СтрокаРазделУчета.РассчитанБУ;
		КонецЕсли;	
		
		Если НЕ СтрокаРазделУчета.РассчитанНУ Тогда
			СтрокаРазделУчета.РассчитанНУ = ПереходНаРасширеннуюАналитикуУчета.НетОстатковПоРазделуУчета(СтрокаРазделУчета.РазделУчетаИмя,Перечисления.ВидыОтраженияВУчете.ОтражатьВНалоговомУчете,мДатаНачала);
			СтрокаРазделУчета.НУ = НЕ СтрокаРазделУчета.РассчитанНУ;
		КонецЕсли;	
		
	КонецЦикла;
	УстановитьДоступность();
КонецПроцедуры

Процедура ПрочитатьТекущиеНастройки()
	// запомним текущее значение константы "Использовать регистр Свободные Остатки"
	мТекущееЗначениеНастройки = Константы.ИспользоватьРасширеннуюАналитикуУчетаНоменклатурыИЗатрат.Получить();
	ИспользоватьРасширеннуюАналитикуУчетаНоменклатурыИЗатрат = мТекущееЗначениеНастройки;
	ПризнакИспользования = мТекущееЗначениеНастройки;
	Если мТекущееЗначениеНастройки Тогда
		мДатаНачала = НачалоМесяца(Константы.ДатаНачалаИспользованияРасширеннойАналитикиУчетаНоменклатурыИЗатрат.Получить());
		мДатаРасчетаОстатков = КонецМесяца(мДатаНачала-1);
	Иначе
		мДатаНачала = НачалоМесяца(ТекущаяДата());
	КонецЕсли;
	
	РежимИспользованияРасширеннойАналитики = Константы.РежимИспользованияРасширеннойАналитикиУчетаНоменклатурыИЗатрат.Получить();
	Если НЕ ЗначениеЗаполнено(РежимИспользованияРасширеннойАналитики) Тогда
		РежимИспользованияРасширеннойАналитики = Перечисления.РежимыИспользованияРасширеннойАналитики.УправленческийИРегламентированныйУчет;
		
		ЗаполнитьНастройкиВСоответствииСРежимом();
	КонецЕсли;	
	
	УстановитьДоступность();
КонецПроцедуры

Функция ПроверитьИсходныеДанныеЗаполнения(флСпрашиватьПодтверждение)
	Если ВариантЗаполнения = 2 Тогда
		
		Если ТаблицаНастройки.Найти(истина,"УУ,БУ,НУ")=неопределено Тогда
			Если ТаблицаНастройки.Найти(ложь,"РассчитанУУ, РассчитанБУ, РассчитанНУ")=неопределено Тогда
				//Расчет уже выполнен для всех исходных данных
				Предупреждение("Заполнение регистров уже выполнено. 
						|Для изменения настройки нажмите кнопку ""Далее""",,"Заполнение регистров расширенной аналитики");
			Иначе	
				Предупреждение("Не указаны исходные данные для заполнения регистров",,"Заполнение регистров расширенной аналитики");
			КонецЕсли;

			Возврат ложь;
		КонецЕсли;
	КонецЕсли;

	Если не ЗначениеЗаполнено(мДатаНачала) Тогда
		Предупреждение("Должна быть указана дата начала использования расширенной аналитики",,"Заполнение регистров расширенной аналитики");
		Возврат ложь;
	КонецЕсли;
	Если флСпрашиватьПодтверждение Тогда
	    Если не ПолучитьПодтверждениеПользователя("Изменение настройки ""Использовать расширенную аналитику""") Тогда
			Возврат ложь;
		КонецЕсли;
	КонецЕсли;	
    Возврат истина;
КонецФункции

Функция ОпределитьРазделУчета(СтрокаКомментарий)
	Результат = новый Структура("РазделУчетаИмя, РазделУчетаПредставление","","");
	Для каждого СтрокаНастройки из ТаблицаНастройки цикл
		Поз = Найти(СтрокаКомментарий, СтрокаНастройки.РазделУчета);
		Если Поз>0 Тогда
			Результат.Вставить("РазделУчетаИмя",СтрокаНастройки.РазделУчетаИмя);
			РазделУчетаПредставление = СокрЛП(Сред(СтрокаКомментарий,Поз));
			РазделУчетаПредставление = стрЗаменить(РазделУчетаПредставление,"""","");
			Результат.Вставить("РазделУчетаПредставление",РазделУчетаПредставление);
			Прервать;
		КонецЕсли;
	КонецЦикла;
    Возврат Результат;
КонецФункции

Функция ПолучитьЗапросДокументовВводаОстатков()
	ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ 
	|Ссылка,
	|ВЫРАЗИТЬ(Комментарий КАК Строка(250)) КАК Комментарий
	|ИЗ
	|Документ.КорректировкаЗаписейРегистров
	|ГДЕ не ПометкаУдаления И
	|	ПОДСТРОКА(Комментарий,1, 38) ПОДОБНО &Комментарий
	|";
	Запрос = Новый Запрос();
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Комментарий","Ввод остатков по регистру ""Учет затрат");
	
	Возврат Запрос.Выполнить();

КонецФункции


Процедура ОбновитьСписокСформированныхДокументов()
	Результат = ПолучитьЗапросДокументовВводаОстатков();
	ТаблицаСформированныхДокументов.Очистить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = ТаблицаСформированныхДокументов.Добавить();
			НоваяСтрока.Ссылка = Выборка.Ссылка;
			НоваяСтрока.Документ = Выборка.Комментарий;
			СведенияРазделУчета = ОпределитьРазделУчета(Выборка.Комментарий);
			НоваяСтрока.РазделУчетаИмя = СведенияРазделУчета.РазделУчетаИмя;
			НоваяСтрока.РазделУчетаПредставление = СведенияРазделУчета.РазделУчетаПредставление;

			Если Найти(Выборка.Комментарий, "управленческий учет")>0 Тогда
				НоваяСтрока.ВидУчета = "УУ";
			ИначеЕсли Найти(Выборка.Комментарий, "бухгалтерский учет")>0 Тогда
				НоваяСтрока.ВидУчета = "БУ";
			ИначеЕсли Найти(Выборка.Комментарий, "налоговый учет")>0 Тогда
				НоваяСтрока.ВидУчета = "НУ";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	ОбновитьТаблицуОтображаемыхДокументов();
	УстановитьДоступность();
КонецПроцедуры

Процедура ОбновитьТаблицуОтображаемыхДокументов()
	
	ТаблицаОтображаемыхДокументов.Очистить();
	
	Если мОтбиратьДокументыПоРазделуУчета Тогда
		ТекРазделУчета = ЭлементыФормы.ТаблицаНастройки.ТекущиеДанные.РазделУчетаИмя;
		Если ТекРазделУчета = Неопределено Тогда
			Возврат;
		КонецЕсли;
		Строки = ТаблицаСформированныхДокументов.НайтиСтроки(Новый Структура("РазделУчетаИмя", ТекРазделУчета));
	Иначе
		Строки = ТаблицаСформированныхДокументов;
	КонецЕсли;
	
	Для Каждого Строка Из Строки Цикл
		НоваяСтрока = ТаблицаОтображаемыхДокументов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		НоваяСтрока.РегистрЗатрат = "Учет затрат " + ?(Строка.ВидУчета <> "УУ", "(бухгалтерский и налоговый учет)", "");
	КонецЦикла;
	
	ТаблицаОтображаемыхДокументов.Сортировать("РегистрЗатрат,РазделУчетаПредставление");
	
КонецПроцедуры

Функция ПредставленияРазделовУчета()
	
	РазделыУчета = Новый Соответствие;
	РазделыУчета.Вставить("НезавершенноеПроизводство", "Незавершенное производство");
	РазделыУчета.Вставить("БракВПроизводстве",         "Брак в производстве");
	РазделыУчета.Вставить("ЗатратыНаВыпускПродукции",  "Затраты на выпуск продукции");
	РазделыУчета.Вставить("Затраты",                   "Затраты");
	РазделыУчета.Вставить("ПартииТоваров",             "Партии товаров");
	РазделыУчета.Вставить("МатериалыВЭксплуатации",    "Партии материалов в эксплуатации");
	
	Возврат РазделыУчета;
	
КонецФункции

Процедура ЗаполнитьСтрокиТаблицыНастроек()
	
	ПредставленияРазделовУчета = ПредставленияРазделовУчета();
	
	Для Каждого РазделУчета Из ПереходНаРасширеннуюАналитикуУчета.РазделыУчета() Цикл
		
		нстр = ТаблицаНастройки.Добавить();
		нстр.РазделУчетаИмя = РазделУчета;
		
		Представление = ПредставленияРазделовУчета[РазделУчета];
		Если НЕ ЗначениеЗаполнено(Представление) Тогда
			Представление = РазделУчета;
		КонецЕсли;
		нстр.РазделУчета = Представление;
		
		нстр.УУ = истина;
		нстр.БУ = истина;
		нстр.НУ = истина;
		нстр.РассчитанУУ = ложь;
		нстр.РассчитанБУ = ложь;
		нстр.РассчитанНУ = ложь;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПроверитьВозможностьИзмененияПериода()
	Если ВариантЗаполнения=2 И ТаблицаСформированныхДокументов.Количество()>0 Тогда
		Предупреждение("Внимание! Заполнение регистров уже выполнялось."+Символы.ПС+
		"Для изменения периода необходимо удалить сформированные остатки",,"Изменение настройки ""Использовать расширенную аналитику""");
		Возврат ложь;
	КонецЕсли;
	Возврат истина;
КонецФункции

//ПРОЦЕДУРЫ ИЗМЕНЕНИЯ ДАННЫХ ИБ

Процедура ЗаполнитьНастройкуУчета(флПринудительнаяУстановка=ложь,флЗакрыватьФорму=истина)
	//запишем значение константы
	МенеджерЗаписи = Константы.ИспользоватьРасширеннуюАналитикуУчетаНоменклатурыИЗатрат.СоздатьМенеджерЗначения();
	МенеджерЗаписи.Значение = ИспользоватьРасширеннуюАналитикуУчетаНоменклатурыИЗатрат;
	МенеджерЗаписиДатаИспользования = Константы.ДатаНачалаИспользованияРасширеннойАналитикиУчетаНоменклатурыИЗатрат.СоздатьМенеджерЗначения();
	Если ИспользоватьРасширеннуюАналитикуУчетаНоменклатурыИЗатрат Тогда
		МенеджерЗаписиДатаИспользования.Значение = мДатаНачала;
	Иначе
		МенеджерЗаписиДатаИспользования.Значение = Дата("00010101000000");
	КонецЕсли;
	
	Попытка
		НачатьТранзакцию();
		
		МенеджерЗаписи.Записать();
		МенеджерЗаписиДатаИспользования.Записать();
		
		ЗафиксироватьТранзакцию();
		
		ОбщегоНазначения.СообщитьОСостоянииИзмененияНастройки("Использовать расширенную аналитику учета затрат","Изменено значение константы ""Использовать расширенную аналитику учета затрат"""+Символы.ПС+?(флПринудительнаяУстановка,"Расчет выполнен не для всех исходных данных",""), "Новое значение - "+ ?(ИспользоватьРасширеннуюАналитикуУчетаНоменклатурыИЗатрат,"включено","отключено"));
		Оповестить("ОбновитьДанныеИспользованиеРасширеннойАналитикиУчетаЗатрат");

		Если флЗакрыватьФорму Тогда
			ЭтаФорма.Закрыть();
		КонецЕсли;	
	Исключение
		Предупреждение("Не удалось изменить значение константы ""Использовать расширенную аналитику учета затрат"": "+Символы.ПС+ОписаниеОшибки(),60,"Изменение настройки ""Использовать расширенную аналитику""");
		ОбщегоНазначения.СообщитьОСостоянииИзмененияНастройки("Использовать расширенную аналитику учета затрат","Не удалось изменить значение константы ""Использовать расширенную аналитику учета затрат"": "+ОписаниеОшибки(), ,,СтатусСообщения.Важное);
	КонецПопытки;
КонецПроцедуры

Процедура ЗаполнитьДанныеРегистров()

    ДатаРасчетаОстатков = КонецДня(НачалоМесяца(мДатаНачала)-1);
    //пересчет регистров
	Если ВариантЗаполнения = 1 Тогда //полный вариант заполнения
		Если РежимИспользованияРасширеннойАналитики = Перечисления.РежимыИспользованияРасширеннойАналитики.УправленческийИРегламентированныйУчет Тогда
			НужноФормироватьОстаткиПоУправленческомуУчету = Истина;
		Иначе
			НужноФормироватьОстаткиПоУправленческомуУчету = Ложь;
		КонецЕсли;	
		ПереходНаРасширеннуюАналитикуУчета.СформироватьОстаткиПоРегистрамУчетЗатратИУчетЗатратРегл(
			ДатаРасчетаОстатков,
			НужноФормироватьОстаткиПоУправленческомуУчету, // УправленческийУчет,
			Истина,   // БухгалтерскийУчет,
			Истина, // НалоговыйУчет
			ПереходНаРасширеннуюАналитикуУчета.РазделыУчета()); // Все разделы учета
			
		ОбщегоНазначения.СообщитьОСостоянииИзмененияНастройки("Использовать расширенную аналитику учета затрат","Выполнено заполнение регистров расширенной аналитики учета затрат на дату "+ДатаРасчетаОстатков+" - полное ");
	
	Иначе
		ОбщегоНазначения.СообщитьОСостоянииИзмененияНастройки("Использовать расширенную аналитику учета затрат","Выполнено заполнение регистров расширенной аналитики учета затрат на дату "+ДатаРасчетаОстатков+" - выборочно: ");

		Для каждого Строка из ТаблицаНастройки цикл
			Если не (Строка.УУ или Строка.БУ или Строка.НУ) Тогда
				Продолжить;
			КонецЕсли;
			
			РазделУчета = Новый Массив(); // Отдельный массив по каждому разделу
			РазделУчета.Добавить(Строка.РазделУчетаИмя);
			
			ПереходНаРасширеннуюАналитикуУчета.СформироватьОстаткиПоРегистрамУчетЗатратИУчетЗатратРегл(
				ДатаРасчетаОстатков,
				Строка.УУ,
				Строка.БУ,
				Строка.НУ,
				РазделУчета);
			
			ТекстДопСообщения = "Раздел учета: "+Строка.РазделУчета+"; Виды учета: "+?(Строка.УУ,"УУ, ","")+?(Строка.БУ,"БУ, ","")+?(Строка.НУ,"НУ","");
			Если прав(ТекстДопСообщения,2)=", " Тогда
				ТекстДопСообщения = лев(ТекстДопСообщения, стрДлина(ТекстДопСообщения)-2);
			КонецЕсли;
			ОбщегоНазначения.СообщитьОСостоянииИзмененияНастройки("Использовать расширенную аналитику учета затрат",ТекстДопСообщения,,1);

		КонецЦикла;
		
	КонецЕсли;
КонецПроцедуры

Процедура Переключатель1ПриИзменении(Элемент)
	ЗаполнитьНастройкиВСоответствииСРежимом();
КонецПроцедуры

Процедура Переключатель2ПриИзменении(Элемент)
	ЗаполнитьНастройкиВСоответствииСРежимом();
КонецПроцедуры

Процедура Переключатель3ПриИзменении(Элемент)
	ЗаполнитьНастройкиВСоответствииСРежимом();
КонецПроцедуры

Процедура ПриЗакрытии()
	МенеджерЗаписиРежимИспользованияРасширеннойАналитики = Константы.РежимИспользованияРасширеннойАналитикиУчетаНоменклатурыИЗатрат.СоздатьМенеджерЗначения();
	МенеджерЗаписиРежимИспользованияРасширеннойАналитики.Значение = РежимИспользованияРасширеннойАналитики;
	МенеджерЗаписиРежимИспользованияРасширеннойАналитики.Записать();	
	Оповестить("ОбновитьДанныеИспользованиеРасширеннойАналитикиУчетаЗатрат");
КонецПроцедуры

Процедура УстановитьВысотуФормы()
	текВысотаФормы = ЭтаФорма.Высота;
	текСтраница = ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница;
	//маленькая высота
	Если текСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.РежимИспользованияРасширеннойАналитики
		ИЛИ текСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.ИзменитьНастройкуПолная
		ИЛИ текСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.РежимИспользованияРасширеннойАналитики
		ИЛИ текСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.ВыборРежима
		Тогда
		Если текВысотаФормы>мВысотаФормыМин Тогда
			ЭтаФорма.Высота = мВысотаФормыМин;
		КонецЕсли;
		
	ИначеЕсли  текСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.ИзменитьНастройкуВыборочная
		ИЛИ текСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.НастройкаАналитикиУчетаЗатрат Тогда
		//большая высота
		Если текВысотаФормы<мВысотаФормыМакс Тогда
			ЭтаФорма.Высота = мВысотаФормыМакс;
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

Процедура НастройкиАналитикиУчетаПриПолученииДанных(Элемент, ОформленияСтрок)
	
	МассивТолькоПросмотр = РасширеннаяАналитикаУчета.ПолучитьМассивНастроекРАТолькоПросмотр();
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		
		Ячейки = ОформлениеСтроки.Ячейки;
		ДанныеСтроки = ОформлениеСтроки.ДанныеСтроки;
		
		Если ДанныеСтроки = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТолькоПросмотр = МассивТолькоПросмотр.Найти(ДанныеСтроки.Ссылка);
		
		Если СтрокаТолькоПросмотр <> Неопределено Тогда
			
			Ячейки.УправленческийУчет.ТолькоПросмотр = СтрокаТолькоПросмотр.ТолькоПросмотр ИЛИ (НЕ ЭлементыФормы.НастройкиАналитикиУчета.Колонки.УправленческийУчет.Доступность);
			Ячейки.РегламентированныйУчет.ТолькоПросмотр = СтрокаТолькоПросмотр.ТолькоПросмотрРегл ИЛИ (НЕ ЭлементыФормы.НастройкиАналитикиУчета.Колонки.РегламентированныйУчет.Доступность);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры


мОтбиратьДокументыПоРазделуУчета = ложь;

ТаблицаСформированныхДокументов = новый ТаблицаЗначений;
ТаблицаСформированныхДокументов.Колонки.Добавить("Документ");
ТаблицаСформированныхДокументов.Колонки.Добавить("Ссылка");
ТаблицаСформированныхДокументов.Колонки.Добавить("РазделУчетаПредставление");
ТаблицаСформированныхДокументов.Колонки.Добавить("РазделУчетаИмя");
ТаблицаСформированныхДокументов.Колонки.Добавить("ВидУчета");
ТаблицаСформированныхДокументов.Индексы.Добавить("РазделУчетаИмя");
мВысотаФормыМин = 300;
мВысотаФормыМакс = 442;