// Показывает веб-страницы в обработке Обозреватель  
//
// Параметры
//  АдресСтраницы  – Строка – адрес просматриваемой страницы
//  ЗаголовокОкна  – Строка – заголовок окна обработки
//
// Если передается пустая строка АдресСтраницы, то в обработке Обозреватель 
// просматривается веб-страница конфигурации
// 
Процедура ПоказатьВебСтраницу(АдресСтраницы, ЗаголовокОкна = Неопределено) Экспорт 
	
	Попытка
	
		Обозреватель = Обработки.Обозреватель.Создать();
		
		Форма = Обозреватель.ПолучитьФорму();
		Если ЗначениеЗаполнено(ЗаголовокОкна) Тогда
			Форма.Заголовок = ЗаголовокОкна;
		КонецЕсли;
		Форма.СтартоваяСтраница = АдресСтраницы;
		
		Форма.Открыть();
		
	Исключение
		
		РабочийСтол.ОбработкаИсключения(ИнформацияОбОшибке());
		
	КонецПопытки;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ НАЖАТИЯ НА ЗНАЧКИ (ОБЩИЕ)

Процедура ОткрытьДокумент(Элемент)

	РабочийСтол.ОбработатьОткрытиеФормы(Элемент, Документы);
	
КонецПроцедуры // ОткрытьДокумент()

Процедура ОткрытьКассовыйДокументвРеглУчете(Элемент)
	
	РаботаСДиалогамиДополнительный.ОткрытьКассовыйДокументРеглУчете(Элемент.Имя)
	
КонецПроцедуры

Процедура ОткрытьКассовыйДокументвУпрУчете(Элемент)
	
	РаботаСДиалогамиДополнительный.ОткрытьКассовыйДокументУпрУчете(Элемент.Имя)
	
КонецПроцедуры

Процедура ОткрытьДокументПоБанку(Элемент)
	
	РаботаСДиалогамиДополнительный.ОткрытьДокументПоБанку(Элемент.Имя)
	
КонецПроцедуры


Процедура ОткрытьЖурналДокументов(Элемент)
	
	РабочийСтол.ОбработатьОткрытиеФормы(Элемент, ЖурналыДокументов, Ложь);
	
КонецПроцедуры // ОткрытьЖурналДокументов()

Процедура ОткрытьОбработку(Элемент)
	
	РабочийСтол.ОбработатьОткрытиеФормы(Элемент, Обработки, Ложь);
	
КонецПроцедуры // ОткрытьОбработку()

Процедура ОткрытьСправочник(Элемент)
	
	РабочийСтол.ОбработатьОткрытиеФормы(Элемент, Справочники);
		
КонецПроцедуры // ОткрытьСправочник()

Процедура ОткрытьЗадачи(Элемент)
	
	РабочийСтол.ОбработатьОткрытиеФормы(Элемент, Задачи);
	
КонецПроцедуры

Процедура ОткрытьРегистрСведений(Элемент)
	
	РабочийСтол.ОбработатьОткрытиеФормы(Элемент, РегистрыСведений);
	
КонецПроцедуры // ОткрытьРегистрСведений()

Процедура ОткрытьПланВидовРасчета(Элемент)
	
	РабочийСтол.ОбработатьОткрытиеФормы(Элемент, ПланыВидовРасчета);
	
КонецПроцедуры // ОткрытьПланВидовРасчета()

Процедура ОткрытьОтчет(Элемент)
	
	РабочийСтол.ОбработатьОткрытиеФормы(Элемент, Отчеты, Ложь);
	
КонецПроцедуры // ОткрытьОтчет()

Процедура ОткрытьПланВидовХарактеристик(Элемент)
	
	РабочийСтол.ОбработатьОткрытиеФормы(Элемент, ПланыВидовХарактеристик);
	
КонецПроцедуры // ОткрытьОтчет()

Процедура ОткрытьОбщуюФорму(Элемент)
	
	РабочийСтол.ОбработатьОткрытиеФормы(Элемент);
	
КонецПроцедуры // ОткрытьОбщуюФорму()

Процедура ОткрытьФормуОбработки(Элемент)
	
	Менеджер = Обработки.РабочийСтол;
	
	Форма = Менеджер.ПолучитьФорму(Элемент.Имя);
	
	Форма.Открыть();
	
КонецПроцедуры // ОткрытьОбщуюФорму()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ НАЖАТИЯ НА ЗНАЧКИ (СПЕЦИАЛЬНЫЕ)

Процедура ПисьмоВТехподдержку(Элемент)
	
	РабочийСтол.ФормаОбработкиПисьмоВТехподдержку(Элемент, ЭтаФорма);
	
КонецПроцедуры

Процедура НаписатьОтзыв(Элемент)
	
	РабочийСтол.ФормаОбработкиНаписатьОтзыв(Элемент, ЭтаФорма);

КонецПроцедуры

Процедура Сайт1С(Элемент)
	
	РабочийСтол.ФормаОбработкиСайт1С(Элемент, ЭтаФорма);
	
КонецПроцедуры

Процедура МониторЗаконодательства(Элемент)
	
	РабочийСтол.ФормаОбработкиМониторЗаконодательства(Элемент, ЭтаФорма);
	
КонецПроцедуры

Процедура СайтБУХру(Элемент)
	
	РабочийСтол.ФормаОбработкиСайтБУХру(Элемент, ЭтаФорма);

КонецПроцедуры

Процедура ИнтернетИТС(Элемент)
	РабочийСтол.ФормаОбработкиСайтИТС(Элемент, ЭтаФорма);
КонецПроцедуры

Процедура ПоказатьСтраницуКонфигурации(Элемент)
	
	РабочийСтол.ФормаОбработкиПоказатьСтраницуКонфигурации(Элемент, ЭтаФорма);
	
КонецПроцедуры

Процедура НовыйСотрудник(Элемент)
	
	ВидДоговораСотрудника = Перечисления.ВидыДоговоровСФизЛицами.ПустаяСсылка();

	// проверим какую форму надо использовать
	ИспользоватьПомощника = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ИспользоватьПомощникаПриемаНаРаботу");
	Если ИспользоватьПомощника Тогда
		Форма = Справочники.СотрудникиОрганизаций.ПолучитьФормуНовогоЭлемента("ФормаПомощник", Элемент);
	Иначе
		Форма = Справочники.СотрудникиОрганизаций.ПолучитьФормуНовогоЭлемента(, Элемент);
	КонецЕсли;
	
	Если Форма.Открыта() Тогда
		// просто активизируем уже открытую форму
		Форма.Активизировать();
		Возврат;
	КонецЕсли;
	
	Если ИспользоватьПомощника Тогда
		Форма.СоздатьДокумент = Истина;
	КонецЕсли;
	
	Форма.Организация = ОсновнаяОрганизация;
	Форма.ВидДоговора = ВидДоговораСотрудника;
	Форма.Открыть();

КонецПроцедуры

Процедура ОткрытьТрудовыеДоговора(Элемент)
	Форма = Справочники.СотрудникиОрганизаций.ПолучитьФормуСписка("ФормаСпискаТрудовыхДоговоров");
	Форма.Открыть();
КонецПроцедуры

Процедура ФормаНастройкиПользователя(Элемент)

	ФормаРегистра = РегистрыСведений.НастройкиПользователей.ПолучитьФорму("ФормаРедактированияНастроек");
	ФормаРегистра.Открыть();
	
КонецПроцедуры

Процедура ОсновнаяОрганизацияНажатие(Элемент)
	Если ОсновнаяОрганизация <> Справочники.Организации.ПустаяСсылка() Тогда
		ОсновнаяОрганизация.ПолучитьФорму().Открыть();
	КонецЕсли;
КонецПроцедуры

Процедура УправлениеРегламентированнойОтчетностью(Элемент)
	
	РабочийСтол.ОбработатьОткрытиеФормы(Элемент, Обработки, Ложь, "УправлениеОтчетностью");

КонецПроцедуры

Процедура НовоеПисьмо(Элемент)
	
	УправлениеЭлектроннойПочтой.ОткрытьФормуНовогоПисьма();
	
КонецПроцедуры

Процедура ОткрытьФормуМедицинскогоСтрахования(Элемент)
	
	РаботаСДиалогамиЗК.ОткрытьФормуМедицинскогоСтрахования();

КонецПроцедуры

Процедура ОткрытьФормуОстатковОтпусков(Элемент)
	
	РаботаСДиалогамиЗК.ОткрытьФормуОстатковОтпусков();
	
КонецПроцедуры

Процедура УстановитьОсновнуюОрганизациюНажатие(Элемент)
	
	ФормаВыбораОрганизации = Справочники.Организации.ПолучитьФормуВыбора(, ЭтаФорма);
	Если ФормаВыбораОрганизации.Открыта() Тогда
		ФормаВыбораОрганизации.Активизировать();
	Иначе
		ФормаВыбораОрганизации.Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗакладкаНажатие(Элемент)
	
	ТекущийЭлемент = РабочийСтол.УстановитьЗакладку(Элемент.Имя, ЭлементыФормы);
	
	УстановитьСписокСсылокПанелиИТС(Элемент.Имя);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ОбработатьЭлементыУправленияПоРежиму()
	
	ИспользоватьУправленческийУчетЗарплаты 	= глЗначениеПеременной("глИспользоватьУправленческийУчетЗарплаты");
	ИспользоватьУправленческийРабочийСтол 	= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ИспользоватьУправленческийРежимРабочегоСтола");
	
	// Если ведется управленческий учет и пользователь явно указал использование рабочего стола 
	//  в "управленческом" режиме
	Управленческий = ИспользоватьУправленческийУчетЗарплаты И ИспользоватьУправленческийРабочийСтол;
	
	ИмяАктивнойСтраницы = ?(Управленческий, "Упр", "Регл");
	ПанелиСоСменнымиСтраницами = Новый Массив;
	
	ПанелиСоСменнымиСтраницами.Добавить("ГлавнаяОтчеты");
	ПанелиСоСменнымиСтраницами.Добавить("ПанельНачисленияЗарплаты");
	ПанелиСоСменнымиСтраницами.Добавить("ПанельВыплатыЗарплаты");
	ПанелиСоСменнымиСтраницами.Добавить("РасчетЗарплатыОтчеты");
	ПанелиСоСменнымиСтраницами.Добавить("НачисленияУдержания");
	ПанелиСоСменнымиСтраницами.Добавить("ПанельКадровыеДокументы");
	ПанелиСоСменнымиСтраницами.Добавить("ПанельВстречиМероприятия");
	ПанелиСоСменнымиСтраницами.Добавить("ПанельОтклонения");
	ПанелиСоСменнымиСтраницами.Добавить("КадровыйУчетОтчеты");
	ПанелиСоСменнымиСтраницами.Добавить("ПанельПодразделенияГлавная");
	ПанелиСоСменнымиСтраницами.Добавить("ПанельПодразделенияПерсонал");
	ПанелиСоСменнымиСтраницами.Добавить("ПанельУчетБухучетЗарплаты");
	
	Для Каждого ПанельСоСменнымиСтраницами Из ПанелиСоСменнымиСтраницами Цикл
		ЭлементыФормы[ПанельСоСменнымиСтраницами].ТекущаяСтраница 		= ЭлементыФормы[ПанельСоСменнымиСтраницами].Страницы[ИмяАктивнойСтраницы];
	КонецЦикла;
	
КонецПроцедуры
          	
Процедура УстановитьВидимостьНаписатьПисьмо()
	
	УчетнаяЗаписьПоУмолчанию = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекущийПользователь, "ОсновнаяУчетнаяЗапись");
	ЭлементыФормы.НовоеПисьмо.Видимость = (УчетнаяЗаписьПоУмолчанию <> Справочники.УчетныеЗаписиЭлектроннойПочты.ПустаяСсылка());
	
КонецПроцедуры

// Функция возвращает признак того, что клиент поддерживает работу с видом ТО,
// переданным в качестве параметра.
//
// Параметры:
//  Вид      - <ПеречислениеСсылка.ВидыТорговогоОборудования>
//           - Вид торгового оборудования, информация о поддержке
//             которого запрашивается.
//
// Возвращаемое значение:
//  <Булево> - Признак поддержки указанного класса торгового оборудования.
//
Функция ПоддерживаетсяВидТО(Вид) Экспорт
	
	Возврат Вид = Перечисления.ВидыТорговогоОборудования.СканерШтрихКода;
	
КонецФункции // ПоддерживаетсяВидТО()

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	РабочийСтол.ФормаОбработкиПередОткрытием(ЭтаФорма);
	
	ТекущийЭлемент = РабочийСтол.УстановитьЗакладку("Главная", ЭлементыФормы);
	
	ТекущийПользователь = глЗначениеПеременной("глТекущийПользователь");
	РабочийСтол.УстановитьИмяТекущегоПользователя(ЭлементыФормы.ИмяПользователя.Заголовок);
	РабочийСтол.УстановитьОсновнуюОрганизацию(ЭлементыФормы.ОсновнаяОрганизация.Заголовок, ЭлементыФормы.УстановитьОсновнуюОрганизацию.Заголовок, ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ОбработатьЭлементыУправленияПоРежиму();
	УстановитьВидимостьНаписатьПисьмо();
	
	РабочийСтол.УстановитьВидимостьЭлементовУправленияОрганизациями(ЭлементыФормы);
	
	ПолучитьСерверТО().ПодключитьКлиента(ЭтаФорма);
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	РабочийСтол.ФормаОбработкиПередЗакрытием(ЭтаФорма);

КонецПроцедуры

Процедура ПриЗакрытии()
	
	ПолучитьСерверТО().ОтключитьКлиента(ЭтаФорма);
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаписьПользователя" И Параметр = ТекущийПользователь Тогда
		РабочийСтол.УстановитьИмяТекущегоПользователя(ЭлементыФормы.ИмяПользователя.Заголовок);
		// могли изменится параметры пользователя (основная организация или учетная запись)
		РабочийСтол.УстановитьОсновнуюОрганизацию(ЭлементыФормы.ОсновнаяОрганизация.Заголовок, ЭлементыФормы.УстановитьОсновнуюОрганизацию.Заголовок, ЭтотОбъект);
		УстановитьВидимостьНаписатьПисьмо();
		// или настройка режима рабочего стола
		ОбработатьЭлементыУправленияПоРежиму();
	ИначеЕсли ИмяСобытия = "ЗаписьОрганизации" И Параметр = ОсновнаяОрганизация Тогда
		РабочийСтол.УстановитьОсновнуюОрганизацию(ЭлементыФормы.ОсновнаяОрганизация.Заголовок, ЭлементыФормы.УстановитьОсновнуюОрганизацию.Заголовок, ЭтотОбъект);
	ИначеЕсли ИмяСобытия = "ИзмененыНастройкиУправленческогоУчета" Тогда
		// обновим рабочий стол
		ОбработатьЭлементыУправленияПоРежиму();	
	ИначеЕсли ИмяСобытия = "ОбновленСписокСсылокНаСайтеИТС" Тогда
		РабочийСтол.ПрочитатьСсылки(ЭтаФорма);
		УстановитьСписокСсылокПанелиИТС(ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя);
	КонецЕсли;
		
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если ТипЗнч(ЗначениеВыбора) = Тип("СправочникСсылка.Организации") Тогда
		Если ЗначениеВыбора <> ОсновнаяОрганизация Тогда
			УправлениеПользователями.УстановитьЗначениеПоУмолчанию(ТекущийПользователь, "ОсновнаяОрганизация", ЗначениеВыбора);
			Оповестить("ЗаписьПользователя", ТекущийПользователь);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ВнешнееСобытие" формы
//
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если НЕ ВводДоступен() ИЛИ НЕ Событие = "ПолученШтрихкод" Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОшибки  = "";
	ОписаниеСобытия = Новый Структура;
	
	ОписаниеСобытия.Вставить("Источник", "СканерШтрихкода");
	ОписаниеСобытия.Вставить("Событие",  Событие);
	ОписаниеСобытия.Вставить("Данные",   СокрЛП(Данные));
	
	Если ЗаявкиКандидатовПереопределяемый.ЭтоQRКодКонтакта(ОписаниеСобытия) Тогда
		ШтрихкодОбработан = ЗаявкиКандидатовПереопределяемый.ОбработатьСобытиеОтСканераШтрихкода(ОписаниеСобытия, ОписаниеОшибки)
		
	ИначеЕсли НачислениеПоБольничномуЛистуСервис.ЭтоДвумерныйШтрихкодБольничного(ОписаниеСобытия) Тогда
		ШтрихкодОбработан = НачислениеПоБольничномуЛистуСервис.ОбработатьСобытиеОтСканераШтрихкода(ОписаниеСобытия, ОписаниеОшибки);
		
	Иначе
		ОписаниеОшибки	= НСтр("ru = 'Данная конфигурация умеет обрабатывать только двумерный штрихкод, находящийся в левом верхнем углу листка нетрудоспособности!'");
		Результат		= Ложь;
		
	КонецЕсли;
	
	Если НЕ ШтрихкодОбработан Тогда
		ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаКомментариев.УдалитьСообщения();
		ОбщегоНазначения.ВывестиИнформациюОбОшибке(ОписаниеОшибки, , НСтр("ru='При обработке внешнего события от устройства произошла ошибка.'"));
		ОбработкаКомментариев.ПоказатьСообщения();
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Работа с материалами на сайте ИТС

// Отрисовывает панель с сылками на активной странице
// Параметры:
//	ИмяСтраницы - строка, содержащая имя страницы
Процедура УстановитьСписокСсылокПанелиИТС(ИмяСтраницы)
	
	 РабочийСтол.ЗаполнитьТаблицуСсылок(ТабличноеПолеСписокСсылокНаИТС, ВРег(ИмяСтраницы), ЭтаФорма);
	 
КонецПроцедуры

// Инициирует поиск на сайте ИТС по заданной строке
Процедура ОбработчикСобытияНачатьПоискНаИтс(Элемент)
	
	Если ПустаяСтрока(СтрокаПоискаИТС) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	РабочийСтол.ПоказатьВебСтраницу("http://its.1c.ru/db/staff1c#search:" + СтрокаПоискаИТС, НСтр("ru='Поиск по ИТС'"));
	
КонецПроцедуры

// Открывает ссылку на сайте ИТС
Процедура ТабличноеПолеСписокСсылокНаИТСВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	РабочийСтол.ПоказатьВебСтраницу(ВыбраннаяСтрока.Гиперссылка, Элемент.ТекущиеДанные.ПредставлениеСсылки);
	
КонецПроцедуры

// инциирует скрытие / отображение панели ИТС
Процедура МатериалыСайтаИТСПрИзменении(Элемент)
	
	РабочийСтол.ОбработатьВидимостьПанелиИТС(ЭтаФорма);
	
КонецПроцедуры