////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем НеВосстанавливатьНастройку;
Перем СтруктураСвязиЭлементовСДанными;

Перем мКолонкиТовары;
Перем мКолонкиРезультат;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Формирует структуру, в которую складываются настройки
//
Функция СформироватьСтруктуруДляСохраненияНастроек()
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("НастройкиПостроителя", ПостроительОтчета.ПолучитьНастройки());
	СтруктураНастроек.Вставить("ИспользоватьСвойстваИКатегории", ИспользоватьСвойстваИКатегории);
	
	Возврат СтруктураНастроек;
	
КонецФункции // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки из структуры - кроме состояния панели "Отбор"
//
Процедура ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт

	ПостроительОтчета.УстановитьНастройки(СтруктураСНастройками.НастройкиПостроителя);
	
	СтруктураСНастройками.Свойство("ИспользоватьСвойстваИКатегории", ИспользоватьСвойстваИКатегории);

КонецПроцедуры // ВосстановитьНастройкиИзСтруктуры()

// Процедура заполняет значения реквизитов по умолчанию.
//
Процедура ЗаполнитьЗначенияПоУмолчанию()
	
	Если НЕ ЗначениеЗаполнено(Дата) Тогда
		Дата = РабочаяДата;
	КонецЕсли;
	ДатаПриИзменении(Неопределено);
	
	// Заполним значение метода расчета.
	Если НЕ ЗначениеЗаполнено(МетодРасчета) Тогда
		МетодРасчета = Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоПлановойСебестоимости;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(МетодРасчетаМатериальные) Тогда
		МетодРасчетаМатериальные = Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоПлановойСебестоимости;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(МетодРасчетаОплатаТруда) Тогда
		МетодРасчетаОплатаТруда = Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоПлановойСебестоимости;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(МетодРасчетаАмортизация) Тогда
		МетодРасчетаАмортизация = Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоПлановойСебестоимости;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(МетодРасчетаПрочие) Тогда
		МетодРасчетаПрочие = Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоПлановойСебестоимости;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(МетодРасчетаОбщепроизводственные) Тогда
		МетодРасчетаОбщепроизводственные = Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоПлановойСебестоимости;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(МетодРасчетаОбщехозяйственные) Тогда
		МетодРасчетаОбщехозяйственные = Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоПлановойСебестоимости;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(МетодРасчетаБракВПроизводстве) Тогда
		МетодРасчетаБракВПроизводстве = Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоПлановойСебестоимости;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(МетодОпределенияСтоимости) Тогда
		МетодОпределенияСтоимости = Перечисления.МетодыОпределенияСтоимости.ПоВыбранномуТипуЦен;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ТипЦен) Тогда
		ТипЦен = Константы.ТипЦенПлановойСебестоимостиНоменклатуры.Получить();
	КонецЕсли;
	
	// Заполнить значение округления.
	Если НЕ ЗначениеЗаполнено(ОкруглитьДо) Тогда
		ОкруглитьДо = Перечисления.ПорядкиОкругления.Окр0_01;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ОкруглитьДоМатериальные) Тогда
		ОкруглитьДоМатериальные = Перечисления.ПорядкиОкругления.Окр0_01;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ОкруглитьДоОплатаТруда) Тогда
		ОкруглитьДоОплатаТруда = Перечисления.ПорядкиОкругления.Окр0_01;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ОкруглитьДоАмортизация) Тогда
		ОкруглитьДоАмортизация = Перечисления.ПорядкиОкругления.Окр0_01;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ОкруглитьДоПрочие) Тогда
		ОкруглитьДоПрочие = Перечисления.ПорядкиОкругления.Окр0_01;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ОкруглитьДоОбщепроизводственные) Тогда
		ОкруглитьДоОбщепроизводственные = Перечисления.ПорядкиОкругления.Окр0_01;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ОкруглитьДоОбщехозяйственные) Тогда
		ОкруглитьДоОбщехозяйственные = Перечисления.ПорядкиОкругления.Окр0_01;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ОкруглитьДоБракВПроизводстве) Тогда
		ОкруглитьДоБракВПроизводстве = Перечисления.ПорядкиОкругления.Окр0_01;
	КонецЕсли;
	
	// Заполнить начальные значения начальных дат.
	Если НЕ ЗначениеЗаполнено(ДатаНач) Тогда
		ДатаНач = НачалоМесяца(ДобавитьМесяц(РабочаяДата, -1));
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ДатаНачМатериальные) Тогда
		ДатаНачМатериальные = НачалоМесяца(ДобавитьМесяц(РабочаяДата, -1));
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ДатаНачОплатаТруда) Тогда
		ДатаНачОплатаТруда = НачалоМесяца(ДобавитьМесяц(РабочаяДата, -1));
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ДатаНачАмортизация) Тогда
		ДатаНачАмортизация = НачалоМесяца(ДобавитьМесяц(РабочаяДата, -1));
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ДатаНачПрочие) Тогда
		ДатаНачПрочие = НачалоМесяца(ДобавитьМесяц(РабочаяДата, -1));
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ДатаНачОбщепроизводственные) Тогда
		ДатаНачОбщепроизводственные = НачалоМесяца(ДобавитьМесяц(РабочаяДата, -1));
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ДатаНачОбщехозяйственные) Тогда
		ДатаНачОбщехозяйственные = НачалоМесяца(ДобавитьМесяц(РабочаяДата, -1));
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ДатаНачБракВПроизводстве) Тогда
		ДатаНачБракВПроизводстве = НачалоМесяца(ДобавитьМесяц(РабочаяДата, -1));
	КонецЕсли;
	
	// Заполнить начальные значения конечных дат.
	Если НЕ ЗначениеЗаполнено(ДатаКон) Тогда
		ДатаКон = КонецМесяца(ДобавитьМесяц(РабочаяДата, -1));
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ДатаКонМатериальные) Тогда
		ДатаКонМатериальные = КонецМесяца(ДобавитьМесяц(РабочаяДата, -1));
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ДатаКонОплатаТруда) Тогда
		ДатаКонОплатаТруда = КонецМесяца(ДобавитьМесяц(РабочаяДата, -1));
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ДатаКонАмортизация) Тогда
		ДатаКонАмортизация = КонецМесяца(ДобавитьМесяц(РабочаяДата, -1));
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ДатаКонПрочие) Тогда
		ДатаКонПрочие = КонецМесяца(ДобавитьМесяц(РабочаяДата, -1));
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ДатаКонОбщепроизводственные) Тогда
		ДатаКонОбщепроизводственные = КонецМесяца(ДобавитьМесяц(РабочаяДата, -1));
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ДатаКонОбщехозяйственные) Тогда
		ДатаКонОбщехозяйственные = КонецМесяца(ДобавитьМесяц(РабочаяДата, -1));
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ДатаКонБракВПроизводстве) Тогда
		ДатаКонБракВПроизводстве = КонецМесяца(ДобавитьМесяц(РабочаяДата, -1));
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьЗначенияПоУмолчанию()

// Процедура устанавливает значения экспортных переменных.
//
Процедура УстановитьЭкспортныеПеременные()
	
	мМетодРасчетаМатериальные 	= МетодРасчетаМатериальные;
	мМетодРасчетаОплатаТруда 	= МетодРасчетаОплатаТруда;
	мМетодРасчетаАмортизация	= МетодРасчетаАмортизация;
	мМетодРасчетаПрочие 		= МетодРасчетаПрочие;
	
	мМетодРасчетаОбщепроизводственные 	= МетодРасчетаОбщепроизводственные;
	мМетодРасчетаОбщехозяйственные 		= МетодРасчетаОбщехозяйственные;
	мМетодРасчетаБракВПроизводстве		= МетодРасчетаБракВПроизводстве;
	
	мМетодОпределенияСтоимости = МетодОпределенияСтоимости;
	мТипЦен = ТипЦен;
	
	мДатаНачМатериальные		= ДатаНачМатериальные;
	мДатаНачАмортизация			= ДатаНачАмортизация;
	мДатаНачОплатаТруда			= ДатаНачОплатаТруда;
	мДатаНачПрочие				= ДатаНачПрочие;
	
	мДатаКонМатериальные		= ДатаКонМатериальные;
	мДатаКонАмортизация			= ДатаКонАмортизация;
	мДатаКонОплатаТруда			= ДатаКонОплатаТруда;
	мДатаКонПрочие				= ДатаКонПрочие;
	
	мДатаНачОбщепроизводственные	= ДатаНачОбщепроизводственные;
	мДатаНачОбщехозяйственные		= ДатаНачОбщехозяйственные;
	мДатаНачБракВПроизводстве		= ДатаНачБракВПроизводстве;
	
	мДатаКонОбщепроизводственные	= ДатаКонОбщепроизводственные;
	мДатаКонОбщехозяйственные		= ДатаКонОбщехозяйственные;
	мДатаКонБракВПроизводстве		= ДатаКонБракВПроизводстве;
	
	мПроцентМатериальные = ?(ФлажокИзменитьНаПроцентМатериальные, ПроцентМатериальные, 0);
	мПроцентОплатаТруда  = ?(ФлажокИзменитьНаПроцентОплатаТруда, ПроцентОплатаТруда, 0);
	мПроцентАмортизация  = ?(ФлажокИзменитьНаПроцентАмортизация, ПроцентАмортизация, 0);
	мПроцентПрочие 		 = ?(ФлажокИзменитьНаПроцентПрочие, ПроцентПрочие, 0);
	
	мПроцентОбщепроизводственные = ?(ФлажокИзменитьНаПроцентОбщепроизводственные, ПроцентОбщепроизводственные, 0);
	мПроцентОбщехозяйственные 	 = ?(ФлажокИзменитьНаПроцентОбщехозяйственные, ПроцентОбщехозяйственные, 0);
	мПроцентБракВПроизводстве 	 = ?(ФлажокИзменитьНаПроцентБракВПроизводстве, ПроцентБракВПроизводстве, 0);
	
	мСуммаМатериальные 	= ?(ФлажокИзменитьНаСуммуМатериальные, СуммаМатериальные, 0);
	мСуммаОплатаТруда 	= ?(ФлажокИзменитьНаСуммуОплатаТруда, СуммаОплатаТруда, 0);
	мСуммаАмортизация 	= ?(ФлажокИзменитьНаСуммуАмортизация, СуммаАмортизация, 0);
	мСуммаПрочие 		= ?(ФлажокИзменитьНаСуммуПрочие, СуммаПрочие, 0);
	
	мСуммаОбщепроизводственные 	= ?(ФлажокИзменитьНаСуммуОбщепроизводственные, СуммаОбщепроизводственные, 0);
	мСуммаОбщехозяйственные 	= ?(ФлажокИзменитьНаСуммуОбщехозяйственные, СуммаОбщехозяйственные, 0);
	мСуммаБракВПроизводстве 	= ?(ФлажокИзменитьНаСуммуБракВПроизводстве, СуммаБракВПроизводстве, 0);
	
	мОкруглитьДоМатериальные 	= ?(ФлажокОкруглитьДоМатериальные, ОкруглитьДоМатериальные, Неопределено);
	мОкруглитьДоОплатаТруда 	= ?(ФлажокОкруглитьДоОплатаТруда, ОкруглитьДоОплатаТруда, Неопределено);
	мОкруглитьДоАмортизация 	= ?(ФлажокОкруглитьДоАмортизация, ОкруглитьДоАмортизация, Неопределено);
	мОкруглитьДоПрочие 			= ?(ФлажокОкруглитьДоПрочие, ОкруглитьДоПрочие, Неопределено);
	
	мОкруглитьДоОбщепроизводственные = ?(ФлажокОкруглитьДоОбщепроизводственные, ОкруглитьДоОбщепроизводственные, Неопределено);
	мОкруглитьДоОбщехозяйственные 	 = ?(ФлажокОкруглитьДоОбщехозяйственные, ОкруглитьДоОбщехозяйственные, Неопределено);
	мОкруглитьДоБракВПроизводстве 	 = ?(ФлажокОкруглитьДоБракВПроизводстве, ОкруглитьДоБракВПроизводстве, Неопределено);
	
КонецПроцедуры // УстановитьЭкспортныеПеременные()

// Процедура рассчитывает плановую себестоимость номенклатуры.
//
Процедура РассчитатьПлановуюСебестоимость()
	
	УстановитьЭкспортныеПеременные();
	РассчитатьСебестоимость(ДеревоРезультат);
	
	Для Каждого Строка Из ДеревоРезультат.Строки Цикл
		ЭлементыФормы.ДеревоРезультат.Развернуть(Строка);
	КонецЦикла;

КонецПроцедуры // РассчитатьПлановуюСебестоимость()

// Процедура производит заполнение документа "Установка цен номенклатуры".
//
Процедура УстановитьЦеныНоменклатуры()
	
	Если ДеревоРезультат.Строки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Период = РабочаяДата;
	Если Не ВвестиДату(Период,"Дата установки цен номенклатуры", ЧастиДаты.Дата) Тогда
		Возврат;
	КонецЕсли;
	
	ДокументОбъект = Документы.УстановкаЦенНоменклатуры.СоздатьДокумент();
	ДокументОбъект.Дата = Период;
	
	ФормаВыбораЦен = Обработки.ФормированиеЦен.Создать().ПолучитьФорму("ФормаВыбораТипаЦен", ЭтаФорма);

	ФормаВыбораЦен.СписокТиповЦенСкидок.ЗагрузитьЗначения(ДокументОбъект.ТипыЦен.ВыгрузитьКолонку("ТипЦен"));
	ФормаВыбораЦен.ИмяСправочникаВыбора     = "ТипыЦенНоменклатуры";
	ФормаВыбораЦен.ИмяКолонкиТиповЦенСкидок = "ТипЦен";

	ЗначениеВыбора = ФормаВыбораЦен.ОткрытьМодально();
	
	Если ТипЗнч(ЗначениеВыбора) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
		
	Если ЗначениеВыбора.Команда <> "ИзменениеТиповЦенСкидок" Тогда
		Возврат;
	КонецЕсли;

	ДокументОбъект.ТипыЦен.Очистить();
	Для Каждого ЭлементСпискаТиповЦен Из ЗначениеВыбора.СписокТиповЦенСкидок Цикл
		СтрокаТиповЦен = ДокументОбъект.ТипыЦен.Добавить();
		СтрокаТиповЦен.ТипЦен = ЭлементСпискаТиповЦен.Значение;
	КонецЦикла;
	
	КурсВал   = МодульВалютногоУчета.ПолучитьКурсВалюты(мВалютаУправленческогоУчета, Период);
	КурсУпр   = КурсВал.Курс;
	КратУпр   = КурсВал.Кратность;
	
	Для Каждого СтрокаТипаЦен Из ДокументОбъект.ТипыЦен Цикл
		
		Валюта = СтрокаТипаЦен.ТипЦен.ВалютаЦены;
		
		КурсВал   = МодульВалютногоУчета.ПолучитьКурсВалюты(Валюта, Период);
		Курс  = КурсВал.Курс;
		Крат  = КурсВал.Кратность;
			
		Для Каждого СтрокаНоменклатуры Из ДеревоРезультат.Строки Цикл
			
			НоваяСтрока = ДокументОбъект.Товары.Добавить();
			НоваяСтрока.Номенклатура               = СтрокаНоменклатуры.НоменклатураСтатьяЗатрат;
			НоваяСтрока.ХарактеристикаНоменклатуры = СтрокаНоменклатуры.ХарактеристикаНоменклатуры;
			НоваяСтрока.ЕдиницаИзмерения           = СтрокаНоменклатуры.НоменклатураСтатьяЗатрат.ЕдиницаХраненияОстатков;
			НоваяСтрока.ТипЦен                     = СтрокаТипаЦен.ТипЦен;
			НоваяСтрока.Валюта                     = Валюта;
			НоваяСтрока.ПроцентСкидкиНаценки       = СтрокаТипаЦен.ТипЦен.ПроцентСкидкиНаценки;
			
			НоваяСтрока.Цена                       = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаНоменклатуры.Сумма, 
																				мВалютаУправленческогоУчета, Валюта, 
																				КурсУпр, Курс, 
																				КратУпр, Крат);
			
		КонецЦикла;
																			
	КонецЦикла;
	
	ФормаДокумента = ДокументОбъект.ПолучитьФорму();
	ФормаДокумента.Открыть();
	
КонецПроцедуры // УстановитьЦеныНоменклатуры()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

// Процедура управления доступностью и видимостью реквизитов формы.
//
Процедура УправлениеДиалогом()
	
	Если ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.Основная Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Назад.Доступность = Ложь;
	Иначе
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Назад.Доступность = Истина;
	КонецЕсли;
	
	Если ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.НастройкаРасчета Тогда
		
		ЭлементыФормы.МетодРасчета.Доступность = ФлажокУстановитьМетодРасчета;
		
		ЭлементыФормы.ДатаНач.Доступность 	= ФлажокУстановитьЗаПериод;
		ЭлементыФормы.ДатаКон.Доступность 	= ФлажокУстановитьЗаПериод;
		ЭлементыФормы.НадписьПо.Доступность = ФлажокУстановитьЗаПериод;
		ЭлементыФормы.КнопкаНастройкаПериода.Доступность = ФлажокУстановитьЗаПериод;
		
		ЭлементыФормы.ФлажокИзменитьНаПроцент.Доступность = ФлажокУстановитьИзменитьНаПроцент;
		ЭлементыФормы.Процент.Доступность = ФлажокУстановитьИзменитьНаПроцент;
		
		ЭлементыФормы.ФлажокИзменитьНаСумму.Доступность = ФлажокУстановитьИзменитьНаСумму;
		ЭлементыФормы.Сумма.Доступность = ФлажокУстановитьИзменитьНаСумму;
		
		ЭлементыФормы.ФлажокОкруглитьДо.Доступность = ФлажокУстановитьОкруглитьДо;
		ЭлементыФормы.ОкруглитьДо.Доступность = ФлажокУстановитьОкруглитьДо;
		
		// Установим видимость реквизитов в зависимости от метода расчета.
		ПоПлановой = (МетодРасчета = Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоПлановойСебестоимости);
		
		ЭлементыФормы.НадписьПо.Видимость = Не ПоПлановой;
		ЭлементыФормы.ДатаКон.Видимость   = Не ПоПлановой;
		ЭлементыФормы.КнопкаНастройкаПериода.Видимость = Не ПоПлановой;
		
		ЭлементыФормы.ФлажокУстановитьЗаПериод.Заголовок  = ?(ПоПлановой, "Установить ""На дату:""", "Установить ""За период с"":");
		
	КонецЕсли;
	
	Если ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.ПроизводственныеРасходы Тогда
		
		РассчитыватьМатериальные = (МетодРасчетаМатериальные <> Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.НеРассчитывать);
		РассчитыватьОплатаТруда  = (МетодРасчетаОплатаТруда <> Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.НеРассчитывать);
		РассчитыватьАмортизация  = (МетодРасчетаАмортизация <> Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.НеРассчитывать);
		РассчитыватьПрочие 		 = (МетодРасчетаПрочие <> Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.НеРассчитывать);
		
		ЭлементыФормы.НадписьМатериальныеНаПериодС.Доступность 	= РассчитыватьМатериальные;
		ЭлементыФормы.НадписьОплатаТрудаНаПериодС.Доступность 	= РассчитыватьОплатаТруда;
		ЭлементыФормы.НадписьАмортизацияНаПериодС.Доступность 	= РассчитыватьАмортизация;
		ЭлементыФормы.НадписьПрочиеНаПериодС.Доступность 		= РассчитыватьПрочие;
		
		ЭлементыФормы.НадписьМатериальныеПо.Доступность = РассчитыватьМатериальные;
		ЭлементыФормы.НадписьОплатаТрудаПо.Доступность 	= РассчитыватьОплатаТруда;
		ЭлементыФормы.НадписьАмортизацияПо.Доступность 	= РассчитыватьАмортизация;
		ЭлементыФормы.НадписьПрочиеПо.Доступность 		= РассчитыватьПрочие;
		
		ЭлементыФормы.ДатаНачМатериальные.Доступность 	= РассчитыватьМатериальные;
		ЭлементыФормы.ДатаНачОплатаТруда.Доступность 	= РассчитыватьОплатаТруда;
		ЭлементыФормы.ДатаНачАмортизация.Доступность 	= РассчитыватьАмортизация;
		ЭлементыФормы.ДатаНачПрочие.Доступность 		= РассчитыватьПрочие;
		
		ЭлементыФормы.ДатаКонМатериальные.Доступность 	= РассчитыватьМатериальные;
		ЭлементыФормы.ДатаКонОплатаТруда.Доступность 	= РассчитыватьОплатаТруда;
		ЭлементыФормы.ДатаКонАмортизация.Доступность 	= РассчитыватьАмортизация;
		ЭлементыФормы.ДатаКонПрочие.Доступность 		= РассчитыватьПрочие;
		
		ЭлементыФормы.КнопкаНастройкаПериодаМатериальные.Доступность 	= РассчитыватьМатериальные;
		ЭлементыФормы.КнопкаНастройкаПериодаОплатаТруда.Доступность 	= РассчитыватьОплатаТруда;
		ЭлементыФормы.КнопкаНастройкаПериодаАмортизация.Доступность 	= РассчитыватьАмортизация;
		ЭлементыФормы.КнопкаНастройкаПериодаПрочие.Доступность 			= РассчитыватьПрочие;
		
		ЭлементыФормы.ФлажокИзменитьНаПроцентМатериальные.Доступность 	= РассчитыватьМатериальные;
		ЭлементыФормы.ФлажокИзменитьНаСуммуМатериальные.Доступность 	= РассчитыватьМатериальные;
		ЭлементыФормы.ФлажокОкруглитьДоМатериальные.Доступность 		= РассчитыватьМатериальные;
		
		ЭлементыФормы.ФлажокИзменитьНаПроцентОплатаТруда.Доступность 	= РассчитыватьОплатаТруда;
		ЭлементыФормы.ФлажокИзменитьНаСуммуОплатаТруда.Доступность 		= РассчитыватьОплатаТруда;
		ЭлементыФормы.ФлажокОкруглитьДоОплатаТруда.Доступность 			= РассчитыватьОплатаТруда;
		
		ЭлементыФормы.ФлажокИзменитьНаПроцентАмортизация.Доступность 	= РассчитыватьАмортизация;
		ЭлементыФормы.ФлажокИзменитьНаСуммуАмортизация.Доступность 		= РассчитыватьАмортизация;
		ЭлементыФормы.ФлажокОкруглитьДоАмортизация.Доступность 			= РассчитыватьАмортизация;
		
		ЭлементыФормы.ФлажокИзменитьНаПроцентПрочие.Доступность 	= РассчитыватьПрочие;
		ЭлементыФормы.ФлажокИзменитьНаСуммуПрочие.Доступность 		= РассчитыватьПрочие;
		ЭлементыФормы.ФлажокОкруглитьДоПрочие.Доступность 			= РассчитыватьПрочие;
		
		ЭлементыФормы.ПроцентМатериальные.Доступность 		= ФлажокИзменитьНаПроцентМатериальные И РассчитыватьМатериальные;
		ЭлементыФормы.СуммаМатериальные.Доступность 		= ФлажокИзменитьНаСуммуМатериальные И РассчитыватьМатериальные;
		ЭлементыФормы.ОкруглитьДоМатериальные.Доступность 	= ФлажокОкруглитьДоМатериальные И РассчитыватьМатериальные;
		
		ЭлементыФормы.ПроцентОплатаТруда.Доступность 		= ФлажокИзменитьНаПроцентОплатаТруда И РассчитыватьОплатаТруда;
		ЭлементыФормы.СуммаОплатаТруда.Доступность 			= ФлажокИзменитьНаСуммуОплатаТруда И РассчитыватьОплатаТруда;
		ЭлементыФормы.ОкруглитьДоОплатаТруда.Доступность	= ФлажокОкруглитьДоОплатаТруда И РассчитыватьОплатаТруда;
		
		ЭлементыФормы.ПроцентАмортизация.Доступность 		= ФлажокИзменитьНаПроцентАмортизация И РассчитыватьАмортизация;
		ЭлементыФормы.СуммаАмортизация.Доступность 			= ФлажокИзменитьНаСуммуАмортизация И РассчитыватьАмортизация;
		ЭлементыФормы.ОкруглитьДоАмортизация.Доступность 	= ФлажокОкруглитьДоАмортизация И РассчитыватьАмортизация;
		
		ЭлементыФормы.ПроцентПрочие.Доступность 			= ФлажокИзменитьНаПроцентПрочие И РассчитыватьПрочие;
		ЭлементыФормы.СуммаПрочие.Доступность 				= ФлажокИзменитьНаСуммуПрочие И РассчитыватьПрочие;
		ЭлементыФормы.ОкруглитьДоПрочие.Доступность 		= ФлажокОкруглитьДоПрочие И РассчитыватьПрочие;
		
		// Установим видимость реквизитов в зависимости от метода расчета.
		ПоПлановойМатериальные 	= (МетодРасчетаМатериальные = Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоПлановойСебестоимости);
		ПоНормативамМатериальные = (МетодРасчетаМатериальные = Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоНормативам);
		ПоПлановойОплатаТруда  	= (МетодРасчетаОплатаТруда = Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоПлановойСебестоимости);
		ПоПлановойАмортизация  	= (МетодРасчетаАмортизация = Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоПлановойСебестоимости);
		ПоПлановойПрочие 		= (МетодРасчетаПрочие = Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоПлановойСебестоимости);
		
		ПоВыбранномуТипуЦен = ПоНормативамМатериальные И (МетодОпределенияСтоимости = Перечисления.МетодыОпределенияСтоимости.ПоВыбранномуТипуЦен);
		
		ЭлементыФормы.НадписьМатериальныеПо.Видимость 	= Не ПоПлановойМатериальные И Не ПоВыбранномуТипуЦен;
		ЭлементыФормы.НадписьОплатаТрудаПо.Видимость 	= Не ПоПлановойОплатаТруда;
		ЭлементыФормы.НадписьАмортизацияПо.Видимость 	= Не ПоПлановойАмортизация;
		ЭлементыФормы.НадписьПрочиеПо.Видимость 		= Не ПоПлановойПрочие;
		
		ЭлементыФормы.ДатаКонМатериальные.Видимость = Не ПоПлановойМатериальные И Не ПоВыбранномуТипуЦен;
		ЭлементыФормы.ДатаКонОплатаТруда.Видимость 	= Не ПоПлановойОплатаТруда;
		ЭлементыФормы.ДатаКонАмортизация.Видимость 	= Не ПоПлановойАмортизация;
		ЭлементыФормы.ДатаКонПрочие.Видимость 		= Не ПоПлановойПрочие;
		
		ЭлементыФормы.КнопкаНастройкаПериодаМатериальные.Видимость 	= Не ПоПлановойМатериальные И Не ПоВыбранномуТипуЦен;
		ЭлементыФормы.КнопкаНастройкаПериодаОплатаТруда.Видимость 	= Не ПоПлановойОплатаТруда;
		ЭлементыФормы.КнопкаНастройкаПериодаАмортизация.Видимость 	= Не ПоПлановойАмортизация;
		ЭлементыФормы.КнопкаНастройкаПериодаПрочие.Видимость 		= Не ПоПлановойПрочие;
		
		ЭлементыФормы.НадписьМатериальныеНаПериодС.Заголовок = ?(ПоПлановойМатериальные ИЛИ ПоВыбранномуТипуЦен, "На дату:", "За период с");
		ЭлементыФормы.НадписьОплатаТрудаНаПериодС.Заголовок  = ?(ПоПлановойОплатаТруда, "На дату:", "За период с");
		ЭлементыФормы.НадписьАмортизацияНаПериодС.Заголовок  = ?(ПоПлановойАмортизация, "На дату:", "За период с");
		ЭлементыФормы.НадписьПрочиеНаПериодС.Заголовок 		 = ?(ПоПлановойПрочие, "На дату:", "За период с");
		
		ЭлементыФормы.НадписьМетодОпределенияСтоимости.Видимость = ПоНормативамМатериальные;
		ЭлементыФормы.МетодОпределенияСтоимости.Видимость 		 = ПоНормативамМатериальные;
		
		ЭлементыФормы.НадписьТипЦен.Видимость = ПоВыбранномуТипуЦен;
		ЭлементыФормы.ТипЦен.Видимость 		  = ПоВыбранномуТипуЦен;
		
	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.КосвенныеРасходы Тогда
		
		РассчитыватьОбщепроизводственные = (МетодРасчетаОбщепроизводственные <> Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.НеРассчитывать);
		РассчитыватьОбщехозяйственные 	 = (МетодРасчетаОбщехозяйственные <> Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.НеРассчитывать);
		РассчитыватьБракВПроизводстве 	 = (МетодРасчетаБракВПроизводстве <> Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.НеРассчитывать);
		
		ЭлементыФормы.НадписьОбщепроизводственныеНаПериодС.Доступность 	= РассчитыватьОбщепроизводственные;
		ЭлементыФормы.НадписьОбщехозяйственныеНаПериодС.Доступность 	= РассчитыватьОбщехозяйственные;
		ЭлементыФормы.НадписьБракВПроизводствеНаПериодС.Доступность 	= РассчитыватьБракВПроизводстве;
		
		ЭлементыФормы.НадписьОбщепроизводственныеПо.Доступность = РассчитыватьОбщепроизводственные;
		ЭлементыФормы.НадписьОбщехозяйственныеПо.Доступность 	= РассчитыватьОбщехозяйственные;
		ЭлементыФормы.НадписьБракВПроизводствеПо.Доступность 	= РассчитыватьБракВПроизводстве;
		
		ЭлементыФормы.ДатаНачОбщепроизводственные.Доступность = РассчитыватьОбщепроизводственные;
		ЭлементыФормы.ДатаНачОбщехозяйственные.Доступность 	  = РассчитыватьОбщехозяйственные;
		ЭлементыФормы.ДатаНачБракВПроизводстве.Доступность 	  = РассчитыватьБракВПроизводстве;
		
		ЭлементыФормы.ДатаКонОбщепроизводственные.Доступность = РассчитыватьОбщепроизводственные;
		ЭлементыФормы.ДатаКонОбщехозяйственные.Доступность 	  = РассчитыватьОбщехозяйственные;
		ЭлементыФормы.ДатаКонБракВПроизводстве.Доступность 	  = РассчитыватьБракВПроизводстве;
		
		ЭлементыФормы.КнопкаНастройкаПериодаОбщепроизводственные.Доступность = РассчитыватьОбщепроизводственные;
		ЭлементыФормы.КнопкаНастройкаПериодаОбщехозяйственные.Доступность 	 = РассчитыватьОбщехозяйственные;
		ЭлементыФормы.КнопкаНастройкаПериодаБракВПроизводстве.Доступность 	 = РассчитыватьБракВПроизводстве;
		
		ЭлементыФормы.ФлажокИзменитьНаПроцентОбщепроизводственные.Доступность 	= РассчитыватьОбщепроизводственные;
		ЭлементыФормы.ФлажокИзменитьНаСуммуОбщепроизводственные.Доступность 	= РассчитыватьОбщепроизводственные;
		ЭлементыФормы.ФлажокОкруглитьДоОбщепроизводственные.Доступность 		= РассчитыватьОбщепроизводственные;
		
		ЭлементыФормы.ФлажокИзменитьНаПроцентОбщехозяйственные.Доступность 	= РассчитыватьОбщехозяйственные;
		ЭлементыФормы.ФлажокИзменитьНаСуммуОбщехозяйственные.Доступность 	= РассчитыватьОбщехозяйственные;
		ЭлементыФормы.ФлажокОкруглитьДоОбщехозяйственные.Доступность 		= РассчитыватьОбщехозяйственные;
		
		ЭлементыФормы.ФлажокИзменитьНаПроцентБракВПроизводстве.Доступность 	= РассчитыватьБракВПроизводстве;
		ЭлементыФормы.ФлажокИзменитьНаСуммуБракВПроизводстве.Доступность 	= РассчитыватьБракВПроизводстве;
		ЭлементыФормы.ФлажокОкруглитьДоБракВПроизводстве.Доступность 		= РассчитыватьБракВПроизводстве;
		
		ЭлементыФормы.ПроцентОбщепроизводственные.Доступность 		= ФлажокИзменитьНаПроцентОбщепроизводственные И РассчитыватьОбщепроизводственные;
		ЭлементыФормы.СуммаОбщепроизводственные.Доступность 		= ФлажокИзменитьНаСуммуОбщепроизводственные И РассчитыватьОбщепроизводственные;
		ЭлементыФормы.ОкруглитьДоОбщепроизводственные.Доступность 	= ФлажокОкруглитьДоОбщепроизводственные И РассчитыватьОбщепроизводственные;
		
		ЭлементыФормы.ПроцентОбщехозяйственные.Доступность 			= ФлажокИзменитьНаПроцентОбщехозяйственные И РассчитыватьОбщехозяйственные;
		ЭлементыФормы.СуммаОбщехозяйственные.Доступность 			= ФлажокИзменитьНаСуммуОбщехозяйственные И РассчитыватьОбщехозяйственные;
		ЭлементыФормы.ОкруглитьДоОбщехозяйственные.Доступность 		= ФлажокОкруглитьДоОбщехозяйственные И РассчитыватьОбщехозяйственные;
		
		ЭлементыФормы.ПроцентБракВПроизводстве.Доступность			= ФлажокИзменитьНаПроцентБракВПроизводстве И РассчитыватьБракВПроизводстве;
		ЭлементыФормы.СуммаБракВПроизводстве.Доступность 			= ФлажокИзменитьНаСуммуБракВПроизводстве И РассчитыватьБракВПроизводстве;
		ЭлементыФормы.ОкруглитьДоБракВПроизводстве.Доступность 		= ФлажокОкруглитьДоБракВПроизводстве И РассчитыватьБракВПроизводстве;
		
		ПоПлановойОбщепроизводственные  = (МетодРасчетаОбщепроизводственные = Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоПлановойСебестоимости);
		ПоПлановойОбщехозяйственные 	= (МетодРасчетаОбщехозяйственные = Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоПлановойСебестоимости);
		ПоПлановойБракВПроизводстве  	= (МетодРасчетаБракВПроизводстве = Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоПлановойСебестоимости);
		
		ЭлементыФормы.НадписьОбщепроизводственныеПо.Видимость	= Не ПоПлановойОбщепроизводственные;
		ЭлементыФормы.НадписьОбщехозяйственныеПо.Видимость 		= Не ПоПлановойОбщехозяйственные;
		ЭлементыФормы.НадписьБракВПроизводствеПо.Видимость 		= Не ПоПлановойБракВПроизводстве;
		
		ЭлементыФормы.ДатаКонОбщепроизводственные.Видимость = Не ПоПлановойОбщепроизводственные;
		ЭлементыФормы.ДатаКонОбщехозяйственные.Видимость 	= Не ПоПлановойОбщехозяйственные;
		ЭлементыФормы.ДатаКонБракВПроизводстве.Видимость 	= Не ПоПлановойБракВПроизводстве;
		
		ЭлементыФормы.КнопкаНастройкаПериодаОбщепроизводственные.Видимость 	= Не ПоПлановойОбщепроизводственные;
		ЭлементыФормы.КнопкаНастройкаПериодаОбщехозяйственные.Видимость 	= Не ПоПлановойОбщехозяйственные;
		ЭлементыФормы.КнопкаНастройкаПериодаБракВПроизводстве.Видимость 	= Не ПоПлановойБракВПроизводстве;
		
		ЭлементыФормы.НадписьОбщепроизводственныеНаПериодС.Заголовок = ?(ПоПлановойОбщепроизводственные, "На дату:", "За период с");
		ЭлементыФормы.НадписьОбщехозяйственныеНаПериодС.Заголовок  	 = ?(ПоПлановойОбщехозяйственные, "На дату:", "За период с");
		ЭлементыФормы.НадписьБракВПроизводствеНаПериодС.Заголовок  	 = ?(ПоПлановойБракВПроизводстве, "На дату:", "За период с");
		
	КонецЕсли;
		
КонецПроцедуры // УправлениеДиалогом()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ (НеВосстанавливатьНастройку = Истина) Тогда

		ЗаполнитьНачальныеНастройки();
		
	КонецЕсли;
	
	УправлениеОтчетами.УстановитьСвязьПолейБыстрогоОтбораНаФорме(ЭлементыФормы, ПостроительОтчета.Отбор, СтруктураСвязиЭлементовСДанными, "ОбработкаОбъект.ПостроительОтчета.Отбор");
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()
	
	ЗаполнитьЗначенияПоУмолчанию();
	
	РаботаСДиалогами.УстановитьВидимостьХарактеристикиНоменклатуры(ЭлементыФормы.ТаблицаНоменклатуры.Колонки);
	
	УправлениеДиалогом();
	
КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "ПередЗакрытием" формы.
//
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Ответ = Вопрос("Закрыть форму расчета плановой себестоимости?", РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;	
	
КонецПроцедуры // ПередЗакрытием()

// Процедура - обработчик события перед сохранением значений формы
//
Процедура ПередСохранениемЗначений(Отказ)
	
	СохраненныеНастройки = СформироватьСтруктуруДляСохраненияНастроек();
	
КонецПроцедуры // ПередСохранениемЗначений()

// Процедура - обработчик события после восстановления значений формы
//
Процедура ПослеВосстановленияЗначений()
	
	Если ТипЗнч(СохраненныеНастройки) = Тип("Структура") Тогда
		
		ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки);
		
	КонецЕсли;
	
КонецПроцедуры // ПослеВосстановленияЗначений()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при нажатии кнопки "Далее" командной панели формы.
//
Процедура ОсновныеДействияФормыДалее(Кнопка)
	
	Страницы = ЭлементыФормы.ОсновнаяПанель.Страницы;
	
	ТекущаяСтраницаИндекс = Страницы.Индекс(ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница);
	ИндексСтраницы = ТекущаяСтраницаИндекс;
	СледующаяСтраница = -1; 
	Пока СледующаяСтраница = -1 Цикл
		ИндексСтраницы = ИндексСтраницы + 1;
		Если ИндексСтраницы = Страницы.Количество() Тогда
			ИндексСтраницы = 0;
		КонецЕсли;
		Если Страницы.Получить(ИндексСтраницы).Видимость Тогда
			СледующаяСтраница = ИндексСтраницы;
		КонецЕсли;
	КонецЦикла;
	ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = Страницы[СледующаяСтраница];
	
	// Заполним таблицу номенклатуры.
	Если ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.Номенклатура Тогда
		ЗаполнитьТаблицуНоменклатуры();
	КонецЕсли;
	
	// Заполним общие значения настроек расчета.
	Если ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.ПроизводственныеРасходы Тогда
		
		// Установим метод расчета.
		Если ФлажокУстановитьМетодРасчета Тогда
			МетодРасчетаМатериальные 		 = МетодРасчета;
			МетодРасчетаОплатаТруда 		 = МетодРасчета;
			МетодРасчетаАмортизация 		 = МетодРасчета;
			МетодРасчетаПрочие 				 = МетодРасчета;
			МетодРасчетаОбщепроизводственные = МетодРасчета;
			МетодРасчетаОбщехозяйственные 	 = МетодРасчета;
			МетодРасчетаБракВПроизводстве 	 = МетодРасчета;
		КонецЕсли;
		
		// Установим период.
		Если ФлажокУстановитьЗаПериод Тогда
			ДатаНачМатериальные 		= ДатаНач;
			ДатаНачОплатаТруда 		 	= ДатаНач;
			ДатаНачАмортизация 		 	= ДатаНач;
			ДатаНачПрочие 				= ДатаНач;
			ДатаНачОбщепроизводственные = ДатаНач;
			ДатаНачОбщехозяйственные 	= ДатаНач;
			ДатаНачБракВПроизводстве 	= ДатаНач;
			
			ДатаКонМатериальные 		= ДатаКон;
			ДатаКонОплатаТруда 		 	= ДатаКон;
			ДатаКонАмортизация 		 	= ДатаКон;
			ДатаКонПрочие 				= ДатаКон;
			ДатаКонОбщепроизводственные = ДатаКон;
			ДатаКонОбщехозяйственные 	= ДатаКон;
			ДатаКонБракВПроизводстве 	= ДатаКон;
		КонецЕсли;
		
		// Установим изменение на процент.
		Если ФлажокУстановитьИзменитьНаПроцент Тогда
			ФлажокИзменитьНаПроцентМатериальные 		= ФлажокИзменитьНаПроцент;
			ФлажокИзменитьНаПроцентОплатаТруда 			= ФлажокИзменитьНаПроцент;
			ФлажокИзменитьНаПроцентАмортизация 		 	= ФлажокИзменитьНаПроцент;
			ФлажокИзменитьНаПроцентПрочие 				= ФлажокИзменитьНаПроцент;
			ФлажокИзменитьНаПроцентОбщепроизводственные = ФлажокИзменитьНаПроцент;
			ФлажокИзменитьНаПроцентОбщехозяйственные 	= ФлажокИзменитьНаПроцент;
			ФлажокИзменитьНаПроцентБракВПроизводстве 	= ФлажокИзменитьНаПроцент;
			
			ПроцентМатериальные 		= Процент;
			ПроцентОплатаТруда 		 	= Процент;
			ПроцентАмортизация 		 	= Процент;
			ПроцентПрочие 				= Процент;
			ПроцентОбщепроизводственные = Процент;
			ПроцентОбщехозяйственные 	= Процент;
			ПроцентБракВПроизводстве 	= Процент;
		КонецЕсли;
		
		// Установим изменение на сумму.
		Если ФлажокУстановитьИзменитьНаСумму Тогда
			ФлажокИзменитьНаСуммуМатериальные 		  = ФлажокИзменитьНаСумму;
			ФлажокИзменитьНаСуммуОплатаТруда 		  = ФлажокИзменитьНаСумму;
			ФлажокИзменитьНаСуммуАмортизация 		  = ФлажокИзменитьНаСумму;
			ФлажокИзменитьНаСуммуПрочие 			  = ФлажокИзменитьНаСумму;
			ФлажокИзменитьНаСуммуОбщепроизводственные = ФлажокИзменитьНаСумму;
			ФлажокИзменитьНаСуммуОбщехозяйственные 	  = ФлажокИзменитьНаСумму;
			ФлажокИзменитьНаСуммуБракВПроизводстве 	  = ФлажокИзменитьНаСумму;
			
			СуммаМатериальные 		  = Сумма;
			СуммаОплатаТруда 		  = Сумма;
			СуммаАмортизация 		  = Сумма;
			СуммаПрочие 			  = Сумма;
			СуммаОбщепроизводственные = Сумма;
			СуммаОбщехозяйственные 	  = Сумма;
			СуммаБракВПроизводстве 	  = Сумма;
		КонецЕсли;
		
		// Установим округление до.
		Если ФлажокУстановитьОкруглитьДо Тогда
			ФлажокОкруглитьДоМатериальные 		  = ФлажокОкруглитьДо;
			ФлажокОкруглитьДоОплатаТруда 		  = ФлажокОкруглитьДо;
			ФлажокОкруглитьДоАмортизация 		  = ФлажокОкруглитьДо;
			ФлажокОкруглитьДоПрочие 			  = ФлажокОкруглитьДо;
			ФлажокОкруглитьДоОбщепроизводственные = ФлажокОкруглитьДо;
			ФлажокОкруглитьДоОбщехозяйственные 	  = ФлажокОкруглитьДо;
			ФлажокОкруглитьДоБракВПроизводстве 	  = ФлажокОкруглитьДо;
			
			ОкруглитьДоМатериальные 		= ОкруглитьДо;
			ОкруглитьДоОплатаТруда 		  	= ОкруглитьДо;
			ОкруглитьДоАмортизация 		  	= ОкруглитьДо;
			ОкруглитьДоПрочие 			  	= ОкруглитьДо;
			ОкруглитьДоОбщепроизводственные = ОкруглитьДо;
			ОкруглитьДоОбщехозяйственные 	= ОкруглитьДо;
			ОкруглитьДоБракВПроизводстве 	= ОкруглитьДо;
		КонецЕсли;
		
		УправлениеДиалогом();
		
	КонецЕсли;
	
	// Рассчитаем стоимость.
	Если ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.Результат Тогда
		РассчитатьПлановуюСебестоимость();
	КонецЕсли;
	
	// Выполним завершающие действия.
	Если ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.Основная Тогда
		
		Если УстановитьЦеныНоменклатуры Тогда
			УстановитьЦеныНоменклатуры();
		КонецЕсли;
		
		Если УстановитьПлановуюСебестоимость Тогда
			УстановитьПлановуюСебестоимость(ДеревоРезультат);
		КонецЕсли;
		
		Если СформироватьОтчет Тогда
			ПечатьРасчетаПлановойСебестоимости(ДеревоРезультат);
		КонецЕсли;
		
		Если ЗакрытьФорму Тогда
			Закрыть();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ОсновныеДействияФормыДалее()

// Процедура вызывается при нажатии кнопки "Назад" командной панели формы.
//
Процедура ОсновныеДействияФормыНазад(Кнопка)
	
	Страницы = ЭлементыФормы.ОсновнаяПанель.Страницы;
	
	ТекущаяСтраницаИндекс = Страницы.Индекс(ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница);
	ИндексСтраницы = ТекущаяСтраницаИндекс;
	СледующаяСтраница = -1; 
	Пока СледующаяСтраница = -1 Цикл
		ИндексСтраницы = ИндексСтраницы - 1;
		Если ИндексСтраницы = Страницы.Количество() Тогда
			ИндексСтраницы = 0;
		КонецЕсли;
		Если Страницы.Получить(ИндексСтраницы).Видимость Тогда
			СледующаяСтраница = ИндексСтраницы;
		КонецЕсли;
	КонецЦикла;
	ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = Страницы[СледующаяСтраница];
	
КонецПроцедуры // ОсновныеДействияФормыНазад()

// Процедура вызывается при нажатии кнопки "ЗаполнитьТаблицу" командной панели "Номенклатура".
//
Процедура КоманднаяПанельНоменклатураЗаполнитьТаблицу(Кнопка)
	
	ЗаполнитьТаблицуНоменклатуры();
	
КонецПроцедуры // КоманднаяПанельНоменклатураЗаполнитьТаблицу()

// Процедура вызывается при нажатии кнопки "Рассчитать" командной панели "Результат".
//
Процедура КоманднаяПанельРезультатРассчитать(Кнопка)
	
	РассчитатьПлановуюСебестоимость();
		
КонецПроцедуры // КоманднаяПанельРезультатРассчитать()

// Процедура вызывается при нажатии кнопки "Изменить" командной панели "Результат".
//
Процедура КоманднаяПанельРезультатИзменить(Кнопка)
	
	ФормаОбработкаРезультата = ПолучитьФорму("ФормаОбработкаРезультата", ЭтаФорма);
	ФормаОбработкаРезультата.ДеревоРезультат = ДеревоРезультат.Скопировать();
	ФормаОбработкаРезультата.ОткрытьМодально();
	
	ДеревоРезультат = ФормаОбработкаРезультата.ДеревоРезультат.Скопировать();
	Для Каждого Строка Из ДеревоРезультат.Строки Цикл
		ЭлементыФормы.ДеревоРезультат.Развернуть(Строка);
	КонецЦикла;
	
КонецПроцедуры // КоманднаяПанельРезультатИзменить()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода "Дата".
//
Процедура ДатаПриИзменении(Элемент)
	
	// Установим период получения основной спецификации
	ПостроительОтчета.Параметры.Вставить("Дата", Дата);
	
КонецПроцедуры

// Процедура - обработчик события "ПриСменеСтраницы" панели "ОсновнаяПанель".
//
Процедура ОсновнаяПанельПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	УправлениеДиалогом();
	
КонецПроцедуры // ОсновнаяПанельПриСменеСтраницы()

// Процедура - обработчик изменения флажка "Использовать свойства и категории".
//
Процедура ИспользоватьСвойстваИКатегорииПриИзменении(Элемент)

	// Запоминаем текущую настройку
	Настройки = ПостроительОтчета.ПолучитьНастройки(Истина, Истина, Истина, Истина);

	// Перезаполнение объекта (с новым текстом запроса)
	ЗаполнитьНачальныеНастройки();

	// Восстанавливаем запомненную настройку
	ПостроительОтчета.УстановитьНастройки(Настройки, Истина, Истина, Истина, Истина);
	
	Оповестить("ИзмененТекстЗапроса", , ЭтаФорма);
	
КонецПроцедуры // ИспользоватьСвойстваИКатегорииПриИзменении()

// Процедура - обработчик события "Нажатие" кнопки настройки периода.
//
Процедура КнопкаНастройкаПериодаНажатие(Элемент)
	
	ИмяДатаНач = "ДатаНач" + СтрЗаменить(Элемент.Имя, "КнопкаНастройкаПериода", "");
	ИмяДатаКон = "ДатаКон" + СтрЗаменить(Элемент.Имя, "КнопкаНастройкаПериода", "");
	
	МассивВозврата = УправлениеОтчетами.ВвестиПериод(ЭтаФорма[ИмяДатаНач], ЭтаФорма[ИмяДатаКон]);
	
	Если ТипЗнч(МассивВозврата) = Тип("Массив") Тогда
		
		ЭтаФорма[ИмяДатаНач] = МассивВозврата[0];
		ЭтаФорма[ИмяДатаКон] = МассивВозврата[1];
		
	КонецЕсли; 

КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

// Процедура - обработчик события "ПриИзменении" флажка "ФлажокУстановитьМетодРасчета".
//
Процедура ФлажокУстановитьМетодРасчетаПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // ФлажокУстановитьМетодРасчетаПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ФлажокУстановитьЗаПериод".
//
Процедура ФлажокУстановитьЗаПериодПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // ФлажокУстановитьЗаПериодПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ФлажокУстановитьИзменитьНаПроцент".
//
Процедура ФлажокУстановитьИзменитьНаПроцентПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // ФлажокУстановитьИзменитьНаПроцентПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ФлажокУстановитьИзменитьНаСумму".
//
Процедура ФлажокУстановитьИзменитьНаСуммуПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // ФлажокУстановитьИзменитьНаСуммуПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ФлажокУстановитьОкруглитьДо".
//
Процедура ФлажокУстановитьОкруглитьДоПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // ФлажокУстановитьОкруглитьДоПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля "МетодРасчета".
//
Процедура МетодРасчетаПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // МетодРасчетаПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля "МетодРасчетаМатериальные".
//
Процедура МетодРасчетаМатериальныеПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // МетодРасчетаМатериальныеПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля "МетодОпределенияСтоимости".
//
Процедура МетодОпределенияСтоимостиПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // МетодОпределенияСтоимостиПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля "МетодРасчетаОплатаТруда".
//
Процедура МетодРасчетаОплатаТрудаПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // МетодРасчетаОплатаТрудаПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля "МетодРасчетаАмортизация".
//
Процедура МетодРасчетаАмортизацияПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // МетодРасчетаАмортизацияПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля "МетодРасчетаПрочие".
//
Процедура МетодРасчетаПрочиеПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // МетодРасчетаПрочиеПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля "МетодРасчетаОбщепроизводственные".
//
Процедура МетодРасчетаОбщепроизводственныеПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // МетодРасчетаОбщепроизводственныеПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля "МетодРасчетаОбщехозяйственные".
//
Процедура МетодРасчетаОбщехозяйственныеПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // МетодРасчетаОбщехозяйственныеПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля "МетодРасчетаБракВПроизводстве".
//
Процедура МетодРасчетаБракВПроизводствеПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // МетодРасчетаБракВПроизводствеПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ИзменитьНаПроцентМатериальные".
//
Процедура ФлажокИзменитьНаПроцентМатериальныеПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // ФлажокИзменитьНаПроцентМатериальныеПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ИзменитьНаСуммуМатериальные".
//
Процедура ФлажокИзменитьНаСуммуМатериальныеПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // ФлажокИзменитьНаСуммуМатериальныеПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ОкруглитьДоМатериальные".
//
Процедура ФлажокОкруглитьДоМатериальныеПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // ФлажокОкруглитьДоМатериальныеПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ИзменитьНаПроцентОплатаТруда".
//
Процедура ФлажокИзменитьНаПроцентОплатаТрудаПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // ФлажокИзменитьНаПроцентОплатаТрудаПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ИзменитьНаСуммуОплатаТруда".
//
Процедура ФлажокИзменитьНаСуммуОплатаТрудаПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // ФлажокИзменитьНаСуммуОплатаТрудаПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ОкруглитьДоОплатаТруда".
//
Процедура ФлажокОкруглитьДоОплатаТрудаПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // ФлажокОкруглитьДоОплатаТрудаПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ИзменитьНаПроцентАмортизация".
//
Процедура ФлажокИзменитьНаПроцентАмортизацияПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // ФлажокИзменитьНаПроцентАмортизацияПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ИзменитьНаСуммуАмортизация".
//
Процедура ФлажокИзменитьНаСуммуАмортизацияПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // ФлажокИзменитьНаСуммуАмортизацияПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ОкруглитьДоАмортизация".
//
Процедура ФлажокОкруглитьДоАмортизацияПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // ФлажокОкруглитьДоАмортизацияПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ИзменитьНаПроцентПрочее".
//
Процедура ФлажокИзменитьНаПроцентПрочиеПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // ФлажокИзменитьНаПроцентПрочееПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ИзменитьНаСуммуПрочее".
//
Процедура ФлажокИзменитьНаСуммуПрочиеПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // ФлажокИзменитьНаСуммуПрочееПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ОкруглитьДоПрочее".
//
Процедура ФлажокОкруглитьДоПрочиеПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // ФлажокОкруглитьДоПрочееПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ИзменитьНаПроцентОбщепроизводственные".
//
Процедура ФлажокИзменитьНаПроцентОбщепроизводственныеПриИзменении(Элемент)
	
	ЭлементыФормы.ПроцентОбщепроизводственные.Доступность 	= ФлажокИзменитьНаПроцентОбщепроизводственные;
	
КонецПроцедуры // ФлажокИзменитьНаПроцентОбщепроизводственныеПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ИзменитьНаСуммуОбщепроизводственные".
//
Процедура ФлажокИзменитьНаСуммуОбщепроизводственныеПриИзменении(Элемент)
	
	ЭлементыФормы.СуммаОбщепроизводственные.Доступность 	= ФлажокИзменитьНаСуммуОбщепроизводственные;
	
КонецПроцедуры // ФлажокИзменитьНаСуммуОбщепроизводственныеПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ОкруглитьДоОбщепроизводственные".
//
Процедура ФлажокОкруглитьДоОбщепроизводственныеПриИзменении(Элемент)
	
	ЭлементыФормы.ОкруглитьДоОбщепроизводственные.Доступность 		= ФлажокОкруглитьДоОбщепроизводственные;
	
КонецПроцедуры // ФлажокОкруглитьДоОбщепроизводственныеПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ИзменитьНаПроцентОбщехозяйственные".
//
Процедура ФлажокИзменитьНаПроцентОбщехозяйственныеПриИзменении(Элемент)
	
	ЭлементыФормы.ПроцентОбщехозяйственные.Доступность = ФлажокИзменитьНаПроцентОбщехозяйственные;
	
КонецПроцедуры // ФлажокИзменитьНаПроцентОбщехозяйственныеПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ИзменитьНаСуммуОбщехозяйственные".
//
Процедура ФлажокИзменитьНаСуммуОбщехозяйственныеПриИзменении(Элемент)
	
	ЭлементыФормы.СуммаОбщехозяйственные.Доступность 	= ФлажокИзменитьНаСуммуОбщехозяйственные;
	
КонецПроцедуры // ФлажокИзменитьНаСуммуОбщехозяйственныеПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ОкруглитьДоОбщехозяйственные".
//
Процедура ФлажокОкруглитьДоОбщехозяйственныеПриИзменении(Элемент)
	
	ЭлементыФормы.ОкруглитьДоОбщехозяйственные.Доступность 		= ФлажокОкруглитьДоОбщехозяйственные;
	
КонецПроцедуры // ФлажокОкруглитьДоОбщехозяйственныеПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ИзменитьНаПроцентБракВПроизводстве".
//
Процедура ФлажокИзменитьНаПроцентБракВПроизводствеПриИзменении(Элемент)
	
	ЭлементыФормы.ПроцентБракВПроизводстве.Доступность = ФлажокИзменитьНаПроцентБракВПроизводстве;
	
КонецПроцедуры // ФлажокИзменитьНаПроцентБракВПроизводствеПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ИзменитьНаСуммуБракВПроизводстве".
//
Процедура ФлажокИзменитьНаСуммуБракВПроизводствеПриИзменении(Элемент)
	
	ЭлементыФормы.СуммаБракВПроизводстве.Доступность 	= ФлажокИзменитьНаСуммуБракВПроизводстве;
	
КонецПроцедуры // ФлажокИзменитьНаСуммуБракВПроизводствеПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ОкруглитьДоБракВПроизводстве".
//
Процедура ФлажокОкруглитьДоБракВПроизводствеПриИзменении(Элемент)
	
	ЭлементыФормы.ОкруглитьДоБракВПроизводстве.Доступность 		= ФлажокОкруглитьДоБракВПроизводстве;
	
КонецПроцедуры // ФлажокОкруглитьДоБракВПроизводствеПриИзменении()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ "ТаблицаНоменклатуры"

// Процедура - обработчик события "ПриВыводеСтроки" табличного поля "ТаблицаНоменклатуры".
//
Процедура ТаблицаНоменклатурыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ЯчейкиСтрокиТабПоля = ОформлениеСтроки.Ячейки;
	Номенклатура = ДанныеСтроки.Номенклатура;
	
	РаботаСДиалогами.ПоказатьКодАртикул(мКолонкиТовары, ЯчейкиСтрокиТабПоля, Номенклатура);
	
	Если мКолонкиТовары.ВидНоменклатуры.Видимость Тогда
		ОформлениеСтроки.Ячейки.ВидНоменклатуры.УстановитьТекст(Номенклатура.ВидНоменклатуры);
	КонецЕсли;
	Если мКолонкиТовары.НоменклатурнаяГруппа.Видимость Тогда
		ОформлениеСтроки.Ячейки.НоменклатурнаяГруппа.УстановитьТекст(Номенклатура.НоменклатурнаяГруппа);
	КонецЕсли;
	
КонецПроцедуры // ТаблицаНоменклатурыПриВыводеСтроки()

// Процедура - обработчик события "ПриИзменении" поля "Номенклатура" табличного поля "ТаблицаНоменклатуры".
//
Процедура ТаблицаНоменклатурыНоменклатураПриИзменении(Элемент)
	
	Номенклатура = Элемент.Значение;
	
	СтрокаТабличнойЧасти = ЭлементыФормы.ТаблицаНоменклатуры.ТекущиеДанные;
	Если Номенклатура <> СтрокаТабличнойЧасти.ХарактеристикаНоменклатуры.Владелец Тогда
		СтрокаТабличнойЧасти.ХарактеристикаНоменклатуры = Неопределено;
	КонецЕсли;
	
КонецПроцедуры // ТаблицаНоменклатурыНоменклатураПриИзменении()

// Процедура - обработчик события "НачалоВыбора" поля "Спецификация" табличного поля "ТаблицаНоменклатуры".
//
Процедура ТаблицаНоменклатурыСпецификацияНоменклатурыНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	РаботаСДиалогами.НачалоВыбораЗначенияСпецификации(ЭлементыФормы.ТаблицаНоменклатуры.ТекущиеДанные.Номенклатура, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры // ТаблицаНоменклатурыСпецификацияНоменклатурыНачалоВыбора()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ 	ТАБЛИЧНОГО ПОЛЯ "Дерево результат"

// Процедура - обработчик события "ПередНачаломДобавления" табличного поля "ДеревоРезультат".
//
Процедура ДеревоРезультатПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель)
	
	СтрокаДереваЗначений = Элемент.ТекущиеДанные;
	Если СтрокаДереваЗначений = Неопределено Тогда
		
	ИначеЕсли СтрокаДереваЗначений.Уровень() = 0 Тогда
		
		Меню = Новый СписокЗначений;
		Меню.Добавить("ДобавитьНоменклатуру", "Добавить новую номенклатуру");
		Меню.Добавить("ДобавитьСтатьюЗатрат", "Добавить новую статью затрат");
		ВыбранныйЭлемент = ВыбратьИзМеню(Меню, Элемент);
		
		Если ВыбранныйЭлемент = Неопределено Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		Если ВыбранныйЭлемент.Значение = "ДобавитьНоменклатуру" Тогда
			
			НоваяСтрокаДереваЗначений = ДеревоРезультат.Строки.Добавить();
			НоваяСтрокаДереваЗначений.НоменклатураСтатьяЗатрат = Справочники.Номенклатура.ПустаяСсылка();
			НоваяСтрокаДереваЗначений.ХарактеристикаНоменклатуры = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
			
			ЭлементыФормы.ДеревоРезультат.ТекущаяСтрока = НоваяСтрокаДереваЗначений;
			Отказ = Истина;
			
		КонецЕсли;
		
	Иначе
		
		НоваяСтрокаДереваЗначений = СтрокаДереваЗначений.Родитель.Строки.Добавить();
		НоваяСтрокаДереваЗначений.НоменклатураСтатьяЗатрат = Справочники.СтатьиЗатрат.ПустаяСсылка();
		
		ЭлементыФормы.ДеревоРезультат.ТекущаяСтрока = НоваяСтрокаДереваЗначений;
		Отказ = Истина;
		
	КонецЕсли;
		
КонецПроцедуры // ДеревоРезультатПередНачаломДобавления()

// Процедура - обработчик события "ПриНачалеРедактирования" табличного поля "ДеревоРезультат".
//
Процедура ДеревоРезультатПриНачалеРедактирования(Элемент, НоваяСтрока)
	
	Если НоваяСтрока Тогда
		СтрокаДереваЗначений = Элемент.ТекущиеДанные;
		СтрокаДереваЗначений.Валюта = мВалютаУправленческогоУчета;
		Если СтрокаДереваЗначений.Уровень() = 0 Тогда
			СтрокаДереваЗначений.НоменклатураСтатьяЗатрат = Справочники.Номенклатура.ПустаяСсылка();
			СтрокаДереваЗначений.ХарактеристикаНоменклатуры = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		Иначе
			СтрокаДереваЗначений.НоменклатураСтатьяЗатрат = Справочники.СтатьиЗатрат.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ДеревоРезультатПриНачалеРедактирования()

// Процедура - обработчик события "ПередУдалением" табличного поля "ДеревоРезультат".
//
Процедура ДеревоРезультатПередУдалением(Элемент, Отказ)
	
	Ответ = Вопрос("Удалить выбранные строки ?", РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры // ДеревоРезультатПередУдалением()

// Процедура - обработчик события "ПослеУдаления" табличного поля "ДеревоРезультат".
//
Процедура ДеревоРезультатПослеУдаления(Элемент)
	
	Для Каждого Строка Из ДеревоРезультат.Строки Цикл
		РассчитатьОбщуюСтоимость(Строка);
	КонецЦикла;
	
КонецПроцедуры // ДеревоРезультатПослеУдаления()

// Процедура - обработчик события "ПриВыводеСтроки" табличного поля "ДеревоРезультат".
//
Процедура ДеревоРезультатПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Уровень() = 0 Тогда
		ОформлениеСтроки.Шрифт = Новый Шрифт(,,Истина);
		ОформлениеСтроки.Ячейки.Сумма.ТолькоПросмотр = Истина;
		Если мКолонкиРезультат.Код.Видимость Тогда
			ОформлениеСтроки.Ячейки.Код.УстановитьТекст(ДанныеСтроки.НоменклатураСтатьяЗатрат.Код);
		КонецЕсли;
		Если мКолонкиРезультат.Артикул.Видимость Тогда
			ОформлениеСтроки.Ячейки.Артикул.УстановитьТекст(ДанныеСтроки.НоменклатураСтатьяЗатрат.Артикул);
		КонецЕсли;
	Иначе
		ОформлениеСтроки.Ячейки.ХарактеристикаНоменклатуры.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры // ДеревоРезультатПриВыводеСтроки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ "Дерево результат"

// Процедура - обработчик события "ПриИзменении" поля "НоменклатураСтатьяЗатрат" табличного поля "ДеревоРезультат".
//
Процедура ДеревоРезультатНоменклатураСтатьяЗатратПриИзменении(Элемент)
	
	СтрокаДереваЗначений = ЭлементыФормы.ДеревоРезультат.ТекущиеДанные;
	Если СтрокаДереваЗначений.Уровень() = 0 Тогда
		Если СтрокаДереваЗначений.ХарактеристикаНоменклатуры <> СтрокаДереваЗначений.НоменклатураСтатьяЗатрат.Владелец Тогда
			СтрокаДереваЗначений.ХарактеристикаНоменклатуры = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		КонецЕсли;
	Иначе
		СтрокаДереваЗначений.ХарактеристикаНоменклатуры = СтрокаДереваЗначений.НоменклатураСтатьяЗатрат.ХарактерЗатрат;
		СтрокаДереваЗначений.ВидЗатрат = СтрокаДереваЗначений.НоменклатураСтатьяЗатрат.ВидЗатрат;
		СтрокаДереваЗначений.Валюта = мВалютаУправленческогоУчета;
	КонецЕсли;
	
КонецПроцедуры // ДеревоРезультатНоменклатураСтатьяЗатратПриИзменении()

// Процедура - обработчик события "Очистка" поля "ХарактеристикаНоменклатуры" табличного поля "ДеревоРезультат".
//
Процедура ДеревоРезультатХарактеристикаНоменклатурыОчистка(Элемент, СтандартнаяОбработка)
	
	СтрокаДереваЗначений = ЭлементыФормы.ДеревоРезультат.ТекущиеДанные;
	СтрокаДереваЗначений.ХарактеристикаНоменклатуры = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры // ДеревоРезультатХарактеристикаНоменклатурыОчистка()

// Процедура - обработчик события "ПриИзменении" поля "Сумма" табличного поля "ДеревоРезультат".
//
Процедура ДеревоРезультатСуммаПриИзменении(Элемент)
	
	СтрокаДереваЗначений = ЭлементыФормы.ДеревоРезультат.ТекущиеДанные;
	РассчитатьОбщуюСтоимость(СтрокаДереваЗначений);
	
КонецПроцедуры // ДеревоРезультатСуммаПриИзменении()

// Заполним допустимые значения для выбора.
ЭлементыФормы.МетодРасчета.СписокВыбора.Добавить( Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоФактическойСебестоимости);
ЭлементыФормы.МетодРасчета.СписокВыбора.Добавить( Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоПлановойСебестоимости);
ЭлементыФормы.МетодРасчета.СписокВыбора.Добавить( Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.НеРассчитывать);

ЭлементыФормы.МетодРасчетаАмортизация.СписокВыбора.Добавить( Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоФактическойСебестоимости);
ЭлементыФормы.МетодРасчетаАмортизация.СписокВыбора.Добавить( Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоПлановойСебестоимости);
ЭлементыФормы.МетодРасчетаАмортизация.СписокВыбора.Добавить( Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.НеРассчитывать);

ЭлементыФормы.МетодРасчетаПрочие.СписокВыбора.Добавить( Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоФактическойСебестоимости);
ЭлементыФормы.МетодРасчетаПрочие.СписокВыбора.Добавить( Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоПлановойСебестоимости);
ЭлементыФормы.МетодРасчетаПрочие.СписокВыбора.Добавить( Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.НеРассчитывать);

ЭлементыФормы.МетодРасчетаОбщепроизводственные.СписокВыбора.Добавить( Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоФактическойСебестоимости);
ЭлементыФормы.МетодРасчетаОбщепроизводственные.СписокВыбора.Добавить( Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоПлановойСебестоимости);
ЭлементыФормы.МетодРасчетаОбщепроизводственные.СписокВыбора.Добавить( Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.НеРассчитывать);

ЭлементыФормы.МетодРасчетаОбщехозяйственные.СписокВыбора.Добавить( Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоФактическойСебестоимости);
ЭлементыФормы.МетодРасчетаОбщехозяйственные.СписокВыбора.Добавить( Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоПлановойСебестоимости);
ЭлементыФормы.МетодРасчетаОбщехозяйственные.СписокВыбора.Добавить( Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.НеРассчитывать);

ЭлементыФормы.МетодРасчетаБракВПроизводстве.СписокВыбора.Добавить( Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоФактическойСебестоимости);
ЭлементыФормы.МетодРасчетаБракВПроизводстве.СписокВыбора.Добавить( Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.ПоПлановойСебестоимости);
ЭлементыФормы.МетодРасчетаБракВПроизводстве.СписокВыбора.Добавить( Перечисления.МетодыРасчетаЗначенияПлановойСебестоимости.НеРассчитывать);

мКолонкиТовары = ЭлементыФормы.ТаблицаНоменклатуры.Колонки;
мКолонкиРезультат = ЭлементыФормы.ДеревоРезультат.Колонки;