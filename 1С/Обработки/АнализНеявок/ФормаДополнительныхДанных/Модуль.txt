Перем мОбработкаПодбораПоСтроке;
Перем мТекстПодбораПоСтроке;
Перем мПоследнееЗначениеЭлементаПодбораПоСтроке;

// Диалог настройки периода
Перем мНастройкаПериода;

// Функция формирует структуру параметров для для ввода головной организации по подстроке
//
// Параметры
//  НЕТ
//
// Возвращаемое значение:
//   Структура имен и значений параметров
//
Функция ПолучитьСтруктуруПараметровПодбораПоСтроке(ИмяЭУ = "ВидРасчета")

	Если ИмяЭУ = "ВидРасчета" Тогда
		МассивВидов = Новый Массив;
		Если ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам Тогда
			МассивВидов.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
		ИначеЕсли ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ТравмаНаПроизводстве Тогда
			МассивВидов.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай);
			МассивВидов.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание);
		Иначе
			МассивВидов.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
		КонецЕсли;
		СтруктураПараметров = Новый Структура("ВидПособияСоциальногоСтрахования", МассивВидов);
	ИначеЕсли ИмяЭУ = "ВидРасчетаДоплаты" Тогда
		СтруктураПараметров = Новый Структура("СпособРасчета", Перечисления.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработкаФСС);
	КонецЕсли;

	Возврат СтруктураПараметров;
	
КонецФункции // ПолучитьСтруктуруПараметровПодбораПоСтроке()()

Процедура ПриОткрытии()
	
	ЭлементыФормы.ПанельДанных.Страницы.СтраницаОтставников.Видимость = ВыплатаЗаСчетФедеральногоБюджета = Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов;
	ЭлементыФормы.ПанельДанных.Страницы.СтраницаОблученных.Видимость = ЗначениеЗаполнено(ВыплатаЗаСчетФедеральногоБюджета) и Не ЭлементыФормы.ПанельДанных.Страницы.СтраницаОтставников.Видимость;
	ЭлементыФормы.ПанельДоплаты.Видимость = ДоплачиватьДоПолногоСреднегоЗаработка;
			
КонецПроцедуры

Процедура ОсновныеДействияФормыДействиеОК(Кнопка)
	Если Модифицированность Тогда
		ЗаполнитьЗначенияСвойств(ВладелецФормы,ЭтаФорма,,"ТекущийЭлемент,Модифицированность,ВладелецФормы,Заголовок,СостояниеОкна,РазрешитьСостояниеОбычное");
	КонецЕсли;
	Закрыть();
КонецПроцедуры

// Процедура - обработчик нажатия кнопки настройки периода.
//
Процедура ВыбПериодНажатие(Элемент)
	
	мНастройкаПериода.УстановитьПериод(ПериодРасчетаСреднегоЗаработкаНачало, КонецДня(ПериодРасчетаСреднегоЗаработкаОкончание));
	
	Если мНастройкаПериода.Редактировать() Тогда
		ПериодРасчетаСреднегоЗаработкаНачало	= мНастройкаПериода.ПолучитьДатуНачала();
		ПериодРасчетаСреднегоЗаработкаОкончание	= мНастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
	
КонецПроцедуры // ВыбПериодНажатие()

Процедура ДоплачиватьДоПолногоСреднегоЗаработкаПриИзменении(Элемент)
	ЭлементыФормы.ПанельДоплаты.Видимость = ДоплачиватьДоПолногоСреднегоЗаработка;
	Если ДоплачиватьДоПолногоСреднегоЗаработка И ВидРасчетаДоплаты.Пустая() Тогда
		ВидРасчетаДоплаты = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДоплатаПоСреднемуБЛ;
	КонецЕсли;
КонецПроцедуры

Процедура СтажЛетПриИзменении(Элемент)
	НачислениеПоБольничномуЛистуСервис.ОпределитьРазмерыПособияПоСтажу(ПричинаНетрудоспособности, СтажБезНестраховыхПериодовЛет, СтажБезНестраховыхПериодовСтажМесяцев, ПроцентОплатыБезЛьгот, ОграничениеПособияБезЛьгот)
КонецПроцедуры

Процедура СтажМесяцевПриИзменении(Элемент)
	НачислениеПоБольничномуЛистуСервис.ОпределитьРазмерыПособияПоСтажу(ПричинаНетрудоспособности, СтажБезНестраховыхПериодовЛет, СтажБезНестраховыхПериодовСтажМесяцев, ПроцентОплатыБезЛьгот, ОграничениеПособияБезЛьгот)
КонецПроцедуры

Процедура ПроцентОплатыРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ТекущееЗначение = Элемент.Значение;
	Если Направление = 1 Тогда // увеличиваем значение
		Если ТекущееЗначение = 0 Тогда
			Элемент.Значение = 60;
			
		ИначеЕсли ТекущееЗначение = 60 Тогда
			Элемент.Значение = 80;
			
		ИначеЕсли ТекущееЗначение = 80 Тогда
			Элемент.Значение = 100;
			
		Иначе
			// далее увеличивать не будем
			
		КонецЕсли;
	Иначе // = -1 - уменьшаем значение
		Если ТекущееЗначение = 100 Тогда
			Элемент.Значение = 80;
			
		ИначеЕсли ТекущееЗначение = 80 Тогда
			Элемент.Значение = 60;
			
		Иначе
			// далее уменьшать не будем 
			
		КонецЕсли;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

Процедура ПроцентОплатыБезЛьготРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ТекущееЗначение = Элемент.Значение;
	Если Направление = 1 Тогда // увеличиваем значение
		Если ТекущееЗначение = 0 Тогда
			Элемент.Значение = 60;
		ИначеЕсли ТекущееЗначение = 60 Тогда
			Элемент.Значение = 80;
		ИначеЕсли ТекущееЗначение = 80 Тогда
			Элемент.Значение = 100;
		Иначе
			// далее увеличивать не будем
		КонецЕсли;
	Иначе // = -1 - уменьшаем значение
		Если ТекущееЗначение = 100 Тогда
			Элемент.Значение = 80;
			
		ИначеЕсли ТекущееЗначение = 80 Тогда
			Элемент.Значение = 60;
			
		Иначе
			// далее уменьшать не будем 
			
		КонецЕсли;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

Процедура ПрименятьЛьготыПриНачисленииПособияПриИзменении(Элемент)
	ВладелецФормы.ЭлементыФормы.ПанельПроцентовОграничений.ТекущаяСтраница = ?(ЗначениеЗаполнено(ВыплатаЗаСчетФедеральногоБюджета) И Не ПрименятьЛьготыПриНачисленииПособия, ВладелецФормы.ЭлементыФормы.ПанельПроцентовОграничений.Страницы.СтраницаОсобыйРасчет, ВладелецФормы.ЭлементыФормы.ПанельПроцентовОграничений.Страницы.СтраницаОбычныйРасчет);	
КонецПроцедуры

Процедура НачислениеПоБЛНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	//Предложим для выбора список расчетов, имеющих способ расчета, соответствующий указанной форме оплаты
	ФормаВыбораВидаРасчета = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПолучитьФормуВыбора("ФормаВыбора", Элемент, "дляОбработкиАнализНеявок");
	
	ФормаВыбораВидаРасчета.НачальноеЗначениеВыбора = Элемент.Значение;
	
	МассивВидов = Новый СписокЗначений;
	Если ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам Тогда
		МассивВидов.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	ИначеЕсли ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ТравмаНаПроизводстве Тогда
		МассивВидов.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай);
		МассивВидов.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание);
	Иначе
		МассивВидов.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	КонецЕсли;

	ФормаВыбораВидаРасчета.Отбор.ВидПособияСоциальногоСтрахования.ВидСравнения = ВидСравнения.ВСписке;
	ФормаВыбораВидаРасчета.Отбор.ВидПособияСоциальногоСтрахования.Значение = МассивВидов;
	ФормаВыбораВидаРасчета.Отбор.ВидПособияСоциальногоСтрахования.Использование = Истина;

	ФормаВыбораВидаРасчета.Открыть();
	
КонецПроцедуры // ВидРасчетаНачалоВыбора()

Процедура НачислениеПоБЛАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, ПолучитьСтруктуруПараметровПодбораПоСтроке(), Тип("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"));
	
КонецПроцедуры // ВидРасчетаАвтоПодборТекста()

Процедура НачислениеПоБЛОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, ПолучитьСтруктуруПараметровПодбораПоСтроке(), ЭтаФорма, Тип("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"), мОбработкаПодбораПоСтроке, мТекстПодбораПоСтроке, мПоследнееЗначениеЭлементаПодбораПоСтроке, Ложь);
	
КонецПроцедуры // ВидРасчетаОкончаниеВводаТекста()

Процедура ВидРасчетаДоплатыНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	//Предложим для выбора список расчетов, имеющих способ расчета, соответствующий указанной форме оплаты
	ФормаВыбораВидаРасчета = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПолучитьФормуВыбора("ФормаВыбора", Элемент, "дляДокументаНачислениеОтпускаОрганизаций");
	
	ФормаВыбораВидаРасчета.НачальноеЗначениеВыбора = Элемент.Значение;
	
	ФормаВыбораВидаРасчета.Отбор.СпособРасчета.ВидСравнения = ВидСравнения.Равно;
	ФормаВыбораВидаРасчета.Отбор.СпособРасчета.Значение = Перечисления.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработкаФСС;
	ФормаВыбораВидаРасчета.Отбор.СпособРасчета.Использование = Истина;

	ФормаВыбораВидаРасчета.Открыть();
	
КонецПроцедуры // ВидРасчетаДоплатыНачалоВыбора()

Процедура ВидРасчетаДоплатыАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, ПолучитьСтруктуруПараметровПодбораПоСтроке("ВидРасчетаДоплаты"), Тип("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"));
	
КонецПроцедуры // ВидРасчетаДоплатыАвтоПодборТекста()

Процедура ВидРасчетаДоплатыОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, ПолучитьСтруктуруПараметровПодбораПоСтроке("ВидРасчетаДоплаты"), ЭтаФорма, Тип("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"), мОбработкаПодбораПоСтроке, мТекстПодбораПоСтроке, мПоследнееЗначениеЭлементаПодбораПоСтроке, Ложь);
	
КонецПроцедуры // ВидРасчетаДоплатыОкончаниеВводаТекста()

мНастройкаПериода = Новый НастройкаПериода;