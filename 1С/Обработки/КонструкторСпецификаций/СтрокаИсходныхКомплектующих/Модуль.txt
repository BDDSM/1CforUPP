Перем мФормаВводаФормулы;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки ввода формулы.
//
Процедура ВводФормулы(Элемент)
	
	Форма = Обработки.ВводФормулы.ПолучитьФорму("ФормаВводаФормулы", ЭтаФорма, "дляФормаВводаФормулы");

	Если Форма.Открыта() Тогда
		Форма.Активизировать();
		Если Вопрос("Предыдущая операция ввода формулы не завершена.
			|Завершить?",РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да)=КодВозвратаДиалога.Да Тогда
			Форма.Закрыть();
		КонецЕсли;
	КонецЕсли;	
	
	// Передача параметров в форму.
	Форма.СправочникОбъект = ЭтотОбъект;
	Форма.НачальноеЗначениеВыбора = Элемент.Значение;
	Форма.РежимВыбора = Истина;
	
	мФормаВводаФормулы = Форма;
	
	Форма.Открыть();
	
КонецПроцедуры // ВводФормулы()

// Процедура выбора свойства.
//
Процедура ВыборСвойства(Элемент)
	
	ФормаВыбора = ПланыВидовХарактеристик.СвойстваОбъектов.ПолучитьФормуВыбора(, Элемент);
	ФормаВыбора.Отбор.НазначениеСвойства.Установить(ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры);
	
	Если ЗначениеЗаполнено(Элемент.Значение) Тогда
		ФормаВыбора.ПараметрТекущаяСтрока = Элемент.Значение;
	КонецЕсли;
	
	ФормаВыбора.Открыть();
	
КонецПроцедуры // ВыборСвойства()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

// Процедура - устанавливает доступность элементов формы.
//
Процедура УстановитьДоступность()
	Перем ВедениеПланированияПроизводстваПоСменам;
	
	Если ТипЗнч(СпецификацияОбъект) = Тип("СправочникОбъект.СпецификацииНоменклатуры") Тогда
		ВедениеПланированияПроизводстваПоСменам = мВедениеПланированияПроизводстваПоСменам;
	
		ЭлементыФормы.ВидНорматива.Доступность 			= СпецификацияОбъект.ИспользоватьВидНорматива;
		ЭлементыФормы.ВидВоспроизводства.Доступность 	= СпецификацияОбъект.ИспользоватьВидВоспроизводства;
		ЭлементыФормы.Спецификация.Доступность 			= СпецификацияОбъект.ИспользоватьВидВоспроизводства;
		ЭлементыФормы.УказаниеНорматива.Доступность 	= СпецификацияОбъект.ИспользоватьУказаниеНорматива;
		ЭлементыФормы.Формула.Доступность 				= СпецификацияОбъект.ИспользоватьФормулы;
		ЭлементыФормы.СписаниеКомплектующей.Доступность = СпецификацияОбъект.ИспользоватьУправлениеСписанием;
		ЭлементыФормы.СвойствоДляСписания.Доступность 	= СпецификацияОбъект.ИспользоватьУправлениеСписанием;
		
		ЭлементыФормы.НадписьВидНорматива.Доступность 			= СпецификацияОбъект.ИспользоватьВидНорматива;
		ЭлементыФормы.НадписьВидВоспроизводства.Доступность 	= СпецификацияОбъект.ИспользоватьВидВоспроизводства;
		ЭлементыФормы.НадписьСпецификация.Доступность 			= СпецификацияОбъект.ИспользоватьВидВоспроизводства;
		ЭлементыФормы.НадписьУказаниеНорматива.Доступность 		= СпецификацияОбъект.ИспользоватьУказаниеНорматива;
		ЭлементыФормы.НадписьФормула.Доступность 				= СпецификацияОбъект.ИспользоватьФормулы;
		ЭлементыФормы.НадписьСписаниеКомплектующей.Доступность 	= СпецификацияОбъект.ИспользоватьУправлениеСписанием;
		ЭлементыФормы.НадписьСвойствоДляСписания.Доступность 	= СпецификацияОбъект.ИспользоватьУправлениеСписанием;
		
	Иначе
		
		ВедениеПланированияПроизводстваПоСменам = Ложь;
		
		ЭлементыФормы.ВидНорматива.Доступность 			= Ложь;
		ЭлементыФормы.ВидВоспроизводства.Доступность 	= Ложь;
		ЭлементыФормы.Спецификация.Доступность 			= Ложь;
		ЭлементыФормы.УказаниеНорматива.Доступность 	= Ложь;
		ЭлементыФормы.Формула.Доступность 				= Ложь;
		ЭлементыФормы.СписаниеКомплектующей.Доступность = Ложь;
		ЭлементыФормы.СвойствоДляСписания.Доступность 	= Ложь;
		
		ЭлементыФормы.НадписьВидНорматива.Доступность 			= Ложь;
		ЭлементыФормы.НадписьВидВоспроизводства.Доступность 	= Ложь;
		ЭлементыФормы.НадписьСпецификация.Доступность 			= Ложь;
		ЭлементыФормы.НадписьУказаниеНорматива.Доступность 		= Ложь;
		ЭлементыФормы.НадписьФормула.Доступность 				= Ложь;
		ЭлементыФормы.НадписьСписаниеКомплектующей.Доступность 	= Ложь;
		ЭлементыФормы.НадписьСвойствоДляСписания.Доступность 	= Ложь;
		
	КонецЕсли;
	
	ЭлементыФормы.НадписьНомерОперацииМаршрута.Доступность = ВедениеПланированияПроизводстваПоСменам;
	ЭлементыФормы.НомерОперацииМаршрута.Доступность = ВедениеПланированияПроизводстваПоСменам;
	
	ЭлементыФормы.НадписьМинимальнаяПартия.Доступность = ВедениеПланированияПроизводстваПоСменам;
	ЭлементыФормы.МинимальнаяПартия.Доступность = ВедениеПланированияПроизводстваПоСменам;
	
	ЭлементыФормы.НадписьХарактеристикаНоменклатуры.Доступность = ИспользуютсяХарактеристикиНоменклатуры;
	ЭлементыФормы.ХарактеристикаНоменклатуры.Доступность = ИспользуютсяХарактеристикиНоменклатуры;
	
	Если ВидНорматива = Перечисления.ВидыНормативовНоменклатуры.АвтоподборНоменклатуры Тогда
		ЭлементыФормы.Номенклатура.ТолькоПросмотр 				= Истина;
		ЭлементыФормы.ХарактеристикаНоменклатуры.ТолькоПросмотр = Истина;
		ЭлементыФормы.ЕдиницаИзмерения.ТолькоПросмотр 			= Истина;
	ИначеЕсли ВидНорматива = Перечисления.ВидыНормативовНоменклатуры.АвтоподборХарактеристики Тогда
		ЭлементыФормы.Номенклатура.ТолькоПросмотр 				= Ложь;
		ЭлементыФормы.ХарактеристикаНоменклатуры.ТолькоПросмотр = Истина;
		ЭлементыФормы.ЕдиницаИзмерения.ТолькоПросмотр 			= Ложь;
	Иначе
		ЭлементыФормы.Номенклатура.ТолькоПросмотр 				= Ложь;
		Если ТипЗнч(Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
			Если Номенклатура.ВестиУчетПоХарактеристикам Тогда
				ЭлементыФормы.ХарактеристикаНоменклатуры.ТолькоПросмотр = Ложь;
			Иначе
				ЭлементыФормы.ХарактеристикаНоменклатуры.ТолькоПросмотр = Истина;
			КонецЕсли;
		Иначе
			ЭлементыФормы.ХарактеристикаНоменклатуры.ТолькоПросмотр = Истина;
		КонецЕсли;  
		Флаг = ЗначениеЗаполнено(ВидНорматива)
		    И ВидНорматива = Перечисления.ВидыНормативовНоменклатуры.Узел;
		ЭлементыФормы.ЕдиницаИзмерения.ТолькоПросмотр = Флаг;
		ЭлементыФормы.СтатьяЗатрат    .ТолькоПросмотр = Флаг;
	КонецЕсли;
	
	Если СписаниеКомплектующей = Перечисления.ВариантыСписанияКомплектующих.ЗадаетсяВСвойстве Тогда
		ЭлементыФормы.СвойствоДляСписания.ТолькоПросмотр = Ложь;
	Иначе
		ЭлементыФормы.СвойствоДляСписания.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если ВидНорматива = Перечисления.ВидыНормативовНоменклатуры.АвтоподборХарактеристики
	 ИЛИ ВидНорматива = Перечисления.ВидыНормативовНоменклатуры.Номенклатура Тогда
		ВидВоспроизводстваВидимость = Истина;
	Иначе
		ВидВоспроизводстваВидимость = Ложь;
	КонецЕсли;
	
	Если ВидВоспроизводства = Перечисления.ВидыВоспроизводстваНоменклатуры.Закупка
	 ИЛИ ВидВоспроизводства = Перечисления.ВидыВоспроизводстваНоменклатуры.ПринятыеВПереработку Тогда
		СпецификацияВидимость = Ложь;
	Иначе
		СпецификацияВидимость = Истина;
	КонецЕсли;
	
	ЭлементыФормы.ВидВоспроизводства.ТолькоПросмотр = Не ВидВоспроизводстваВидимость;
	ЭлементыФормы.Спецификация.ТолькоПросмотр = Не СпецификацияВидимость ИЛИ Не ВидВоспроизводстваВидимость;
	
	Если ВидНорматива = Перечисления.ВидыНормативовНоменклатуры.Узел Тогда
		ЭлементыФормы.УказаниеНорматива.ТолькоПросмотр = Истина;
	Иначе
		ЭлементыФормы.УказаниеНорматива.ТолькоПросмотр = Ложь;
	КонецЕсли;

КонецПроцедуры // УстановитьДоступность()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()
	
	Если ТипЗнч(СпецификацияОбъект) = Тип("СправочникОбъект.СпецификацииНоменклатуры") Тогда
		Заголовок = "Строка исходных комплектующих спецификации: "+СпецификацияОбъект;
	Иначе
		Заголовок = "Строка исходных комплектующих ном. узла: "+СпецификацияОбъект;
	КонецЕсли;
	
	УстановитьДоступность();
	
	Если НЕ ЗначениеЗаполнено(Номенклатура) Тогда
		ВидНормативаПриИзменении(ВидНорматива);
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "ОбработкаВыбора" формы.
//
Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если Источник = мФормаВводаФормулы Тогда
		Формула = ЗначениеВыбора;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаВыбора()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ, ВЫЗЫВАЕМЫЕ ИЗ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура вызывается при нажатии кнопки "ОК" командной панели.
//
Процедура ОсновныеДействияФормыОК(Элемент)
	
	Закрыть(Истина);
	
КонецПроцедуры // ОсновныеДействияФормыОК()

// Процедура вызывается при нажатии кнопки "Закрыть" командной панели.
//
Процедура ОсновныеДействияФормыЗакрыть(Кнопка)
	
	Если Модифицированность Тогда
		Ответ = Вопрос("Данные были изменены. Сохранить изменения?", РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Закрыть(Ложь);
	
КонецПроцедуры // ОсновныеДействияФормыЗакрыть()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик события "НачалоВыбораИзСписка" поля номера операции маршрута.
//
Процедура НомерОперацииМаршрутаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	ЗаполнитьСписокНомеровОперацийМаршрута(Элемент, СпецификацияОбъект.Ссылка);
	
КонецПроцедуры // НомерОперацииМаршрутаНачалоВыбораИзСписка()

// Процедура - обработчик события "ПриИзменении" поля "ВидНорматива".
//
Процедура ВидНормативаПриИзменении(Элемент)
	
	Если ВидНорматива = Перечисления.ВидыНормативовНоменклатуры.Номенклатура Тогда
		ПустаяНоменклатура = Справочники.Номенклатура.ПустаяСсылка();
		ПустаяХарактеристика = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
	ИначеЕсли ВидНорматива = Перечисления.ВидыНормативовНоменклатуры.АвтоподборХарактеристики Тогда
		ПустаяНоменклатура = Справочники.Номенклатура.ПустаяСсылка();
		ПустаяХарактеристика = "";
	ИначеЕсли ВидНорматива = Перечисления.ВидыНормативовНоменклатуры.Узел Тогда
		ПустаяНоменклатура = Справочники.СпецификацииНоменклатуры.ПустаяСсылка();
		ПустаяХарактеристика = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		СтатьяЗатрат = Неопределено;
	Иначе
		ПустаяНоменклатура = "";
		ПустаяХарактеристика = "";
	КонецЕсли;
	
	Если ТипЗнч(Номенклатура) <> ТипЗнч(ПустаяНоменклатура) Тогда
		Номенклатура = ПустаяНоменклатура;
		Если ТипЗнч(ХарактеристикаНоменклатуры) <> ТипЗнч(ПустаяХарактеристика) Тогда
			ХарактеристикаНоменклатуры = ПустаяХарактеристика;
		КонецЕсли;
		НоменклатураПриИзменении(Элемент);
	ИначеЕсли ТипЗнч(ХарактеристикаНоменклатуры) <> ТипЗнч(ПустаяХарактеристика) Тогда
		ХарактеристикаНоменклатуры = ПустаяХарактеристика;
	КонецЕсли;
	
	УстановитьДоступность();
	
КонецПроцедуры // ВидНормативаПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля "Номенклатура".
//
Процедура НоменклатураПриИзменении(Элемент)
	
	Если ТипЗнч(ХарактеристикаНоменклатуры) = Тип("СправочникСсылка.ХарактеристикиНоменклатуры") 
	   И Номенклатура <> ХарактеристикаНоменклатуры.Владелец Тогда
		ХарактеристикаНоменклатуры = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
	КонецЕсли;
	
	Если Номенклатура <> ЕдиницаИзмерения.Владелец Тогда
		ЕдиницаИзмерения = Неопределено;
	КонецЕсли;
	
	Если ТипЗнч(Номенклатура) = Тип("СправочникСсылка.Номенклатура") 
	   И ЗначениеЗаполнено(Номенклатура) Тогда
		ЕдиницаИзмерения 	= Номенклатура.ЕдиницаХраненияОстатков;
		СтатьяЗатрат 		= Номенклатура.СтатьяЗатрат;
		ВидВоспроизводства 	= Номенклатура.ВидВоспроизводства;
		ВидВоспроизводстваПриИзменении(Элемент);
		
	ИначеЕсли ТипЗнч(Номенклатура) = Тип("СправочникСсылка.СпецификацииНоменклатуры") Тогда
		ОсновнаяСпецификация = Неопределено;
	КонецЕсли;	
	УстановитьДоступность();
	
КонецПроцедуры // НоменклатураПриИзменении()

// Процедура - обработчик события "Открытие" поля "Номенклатура".
//
Процедура НоменклатураОткрытие(Элемент, СтандартнаяОбработка)
	
	Если ВидНорматива = Перечисления.ВидыНормативовНоменклатуры.АвтоподборНоменклатуры Тогда
		СтандартнаяОбработка = Ложь;
		
		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("НомерСтрокиТабличнойЧасти", 	мСтрокаТабличнойЧасти.НомерСтроки);
		СтруктураПараметров.Вставить("СтрокаТабличнойЧасти", 		мСтрокаТабличнойЧасти);
		СтруктураПараметров.Вставить("ИмяТабличнойЧасти", 			"ИсходныеКомплектующие");
	
		мФормаВводаПравилАвтоподбора = СпецификацияОбъект.ПолучитьФорму("ФормаАвтоподбораНоменклатуры", ЭтаФорма, ЭтаФорма);
		мФормаВводаПравилАвтоподбора.СтруктураИсходныхПараметров = СтруктураПараметров;
		мФормаВводаПравилАвтоподбора.ОткрытьМодально();
		
		Номенклатура = мСтрокаТабличнойЧасти.Номенклатура;
		
	КонецЕсли;
	
КонецПроцедуры // НоменклатураОткрытие()

// Процедура - обработчик события "ПриИзменении" поля "ХарактеристикаНоменклатуры".
//
Процедура ХарактеристикаНоменклатурыПриИзменении(Элемент)
	
	СпецификацияНоменклатуры = УправлениеПроизводством.ОпределитьСпецификациюПоУмолчанию(Номенклатура, ХарактеристикаНоменклатуры, Дата);
	Если Спецификация <> СпецификацияНоменклатуры Тогда
		Спецификация = СпецификацияНоменклатуры;
	КонецЕсли;
	
КонецПроцедуры // ХарактеристикаНоменклатурыПриИзменении()

// Процедура - обработчик события "Открытие" поля "ХарактеристикаНоменклатуры".
//
Процедура ХарактеристикаНоменклатурыОткрытие(Элемент, СтандартнаяОбработка)
	
	Если ВидНорматива = Перечисления.ВидыНормативовНоменклатуры.АвтоподборНоменклатуры
	 ИЛИ ВидНорматива = Перечисления.ВидыНормативовНоменклатуры.АвтоподборХарактеристики Тогда
		СтандартнаяОбработка = Ложь;
		
		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("НомерСтрокиТабличнойЧасти", 	мСтрокаТабличнойЧасти.НомерСтроки);
		СтруктураПараметров.Вставить("СтрокаТабличнойЧасти", 		мСтрокаТабличнойЧасти);
		СтруктураПараметров.Вставить("ИмяТабличнойЧасти", 			"ИсходныеКомплектующие");
	
		мФормаВводаПравилАвтоподбора = СпецификацияОбъект.ПолучитьФорму("ФормаАвтоподбораХарактеристики", ЭтаФорма, ЭтаФорма);
		мФормаВводаПравилАвтоподбора.СтруктураИсходныхПараметров = СтруктураПараметров;
		мФормаВводаПравилАвтоподбора.ОткрытьМодально();
		
		ХарактеристикаНоменклатуры = мСтрокаТабличнойЧасти.ХарактеристикаНоменклатуры;
		
	КонецЕсли;
	
КонецПроцедуры // ХарактеристикаНоменклатурыОткрытие()

// Процедура - обработчик события "ПриИзменении" поля "ВидВоспроизводства".
//
Процедура ВидВоспроизводстваПриИзменении(Элемент)
	
	Если ВидВоспроизводства = Перечисления.ВидыВоспроизводстваНоменклатуры.Закупка
	 ИЛИ ВидВоспроизводства = Перечисления.ВидыВоспроизводстваНоменклатуры.ПринятыеВПереработку Тогда
		Спецификация = Неопределено;
	Иначе
		СпецификацияНоменклатуры = УправлениеПроизводством.ОпределитьСпецификациюПоУмолчанию(Номенклатура, ХарактеристикаНоменклатуры, Дата);
		Если Спецификация <> СпецификацияНоменклатуры Тогда
			Спецификация = СпецификацияНоменклатуры;
		КонецЕсли;
	КонецЕсли;
	
	УстановитьДоступность();
	
КонецПроцедуры // ВидВоспроизводстваПриИзменении()

// Процедура - обработчик события "НачалоВыбора" поля спецификации.
//
Процедура СпецификацияНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	РаботаСДиалогами.НачалоВыбораЗначенияСпецификации(Номенклатура, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры // СпецификацияНачалоВыбора()

// Процедура - обработчик события "НачалоВыбора" поля "Формула".
//
Процедура ФормулаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ВводФормулы(Элемент);
	
КонецПроцедуры // ФормулаНачалоВыбора()

// Процедура - обработчик события "ПриИзменении" поля "СписаниеКомплектующейПриИзменении".
//
Процедура СписаниеКомплектующейПриИзменении(Элемент)
	
	УстановитьДоступность();
	
КонецПроцедуры // СписаниеКомплектующейПриИзменении()

// Процедура - обработчик события "НачалоВыбора" поля "Свойство".
//
Процедура СвойствоДляСписанияНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыборСвойства(Элемент);
	
КонецПроцедуры // СвойствоДляСписанияНачалоВыбора()

// Процедура - обработчик события "ПриИзменении" поля "Свойство".
//
Процедура СвойствоДляСписанияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Элемент.Значение) И Элемент.Значение.ТипЗначения <> Новый ОписаниеТипов("Булево") Тогда
		
		Предупреждение("Необходимо выбирать свойство с типом значения ""Булево""");
		Элемент.Значение = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры // СвойствоДляСписанияПриИзменении()

// Процедура - обработчик события "ОбработкаВыбора" поля "Свойство".
//
Процедура СвойствоДляСписанияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение.ТипЗначения <> Новый ОписаниеТипов("Булево") Тогда
		
		Предупреждение("Необходимо выбирать свойство с типом значения ""Булево""");
		СтандартнаяОбработка = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры // СвойствоДляСписанияОбработкаВыбора()