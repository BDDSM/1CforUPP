////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Переменные механизма встроенной справки
Перем ОтображатьСправкуФормы;

Перем ПолеДляУпорядочиванияВакансий;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ОбновитьДанные()
	
	Если НЕ КадровоеПланированиеПереопределяемый.ОбновитьДополнительно(ЭтотОбъект, ЭтаФорма) Тогда
		ОбновитьДанныеПодразделенияОрганизации();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодготовитьСправкуФормы()
	
	ЦветФонаСправки		= РаботаСДиалогами.ВернутьШестнадцатиричноеПредставлениеЦвета(РаботаСДиалогами.ВстроеннаяСправка_ЦветФона());
	ЦветСсылкиСправки	= РаботаСДиалогами.ВернутьШестнадцатиричноеПредставлениеЦвета(РаботаСДиалогами.ВстроеннаяСправка_ЦветСсылки());
	
	ЭлементыФормы.ПанельСправкиФормы.ЦветРамки			= РаботаСДиалогами.ВстроеннаяСправка_ЦветРамки();
	ЭлементыФормы.НадписьЗакрытьСправкуФормы.ЦветФона	= РаботаСДиалогами.ВстроеннаяСправка_ЦветФона();
	ЭлементыФормы.НадписьЗакрытьСправкуФормы.ЦветТекста	= РаботаСДиалогами.ВстроеннаяСправка_ЦветСсылки();
	
	ТекстМакетаВстроеннойСправки =
	"<HTML>
	|	<HEAD>
	|		<META http-equiv=Content-Type content=""text/html; charset=utf-8"">" + РаботаСДиалогами.ВстроеннаяСправка_СтилиДокумента() + "
	|	</HEAD>
	|
	|	<BODY aLink="+ЦветСсылкиСправки+" vLink="+ЦветСсылкиСправки+" link="+ЦветСсылкиСправки+" bgColor="+ЦветФонаСправки+" scroll=auto><FONT face=""MS Sans Serif"" size=1>
	|		<IMG src="+РаботаСДиалогами.ПолучитьПутьККартинкеДляHTML(БиблиотекаКартинок.КартинкаВстроеннойСправкиФормы, ЭлементыФормы.ВстроеннаяСправка)+">";
	
	КадровоеПланированиеПереопределяемый.ДополнитьТекстМакетаВстроеннойСправки(ТекстМакетаВстроеннойСправки);
	
	ТекстМакетаВстроеннойСправки = ТекстМакетаВстроеннойСправки + "
	|		<DIV>Количество ставок можно изменить, введя документ кадрового плана.</DIV>
	|		<DIV>Ввод вакансии увеличивает количество ставок только в том случае, если количество открытых вакансий по этому подразделению с должностью превышает текущее количество ставок.</DIV>
	|	</FONT></BODY>
	|</HTML>";
	
	ЭлементыФормы.ВстроеннаяСправка.УстановитьТекст(ТекстМакетаВстроеннойСправки);
	
КонецПроцедуры

Процедура ОбновитьСправкуФормы(ПолеДанных = Неопределено) Экспорт
	
	КадровоеПланированиеПереопределяемый.ОбновитьСправкуФормы(ЭтаФорма, ПолеДанных);
	
КонецПроцедуры

Процедура УстановитьВидимостьСправкиФормы(ОбновитьСправку = Истина)
	
	РаботаСДиалогамиЗК.ИзменитьВидимостьПанелиПоГоризонтали(ЭтаФорма, ОтображатьСправкуФормы, "ПанельКадровогоПлана", "СправкиФормы");
	
	ЭлементыФормы.КоманднаяПанельСправкиФормы.Кнопки.ПереключениеСправкиФормы.Пометка = ОтображатьСправкуФормы;
	
	Если ОтображатьСправкуФормы Тогда
		Если ОбновитьСправку Тогда
			ОбновитьСправкуФормы();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьКомандуФормы(Команда, ТекущееЗначение = "") Экспорт
	
	Если Команда = "SwitchPeriodMode" Тогда
		РежимПериода = Не РежимПериода;
		ПриИзмененииРежимаПериода();
		ОбновитьДанные();
		
	ИначеЕсли Команда = "SelectOrganization" Тогда
		Форма = Справочники.Организации.ПолучитьФормуВыбора();
		Форма.ПараметрТекущаяСтрока	= Организация;
		Форма.ВладелецФормы	= ЭлементыФормы.Организация;
		Форма.Открыть();
		
	ИначеЕсли Команда = "OpenOrganizationDivisionsList" Тогда
		Форма = Справочники.ПодразделенияОрганизаций.ПолучитьФормуВыбора();
		Форма.Организация	= Организация;
		Форма.Открыть();
		
	ИначеЕсли КадровоеПланированиеПереопределяемый.ВыполняетсяДополнительноеУсловие(Команда, ЭтаФорма) Тогда		
		
		ОбновитьДанные();
		
	Иначе
		Сообщить("Неизвестная команда: " + Команда);
		
	КонецЕсли;
	
КонецПроцедуры // ВыполнитьКомандуСправки()

Процедура ОбновитьДанныеПодразделенияОрганизации()
	
	РабочиеМеста.Очистить();
	
	Если Не ЕстьДоступРегл Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСтроки = ЭлементыФормы.Подразделения.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		РабочиеМеста.Загрузить(КадровоеПланированиеПереопределяемый.ОбновитьРабочиеМестаРегл(Организация, Неопределено, ?(РежимПериода, Неопределено, ДатаСреза)).Выгрузить());
		ЭлементыФормы.РабочиеМеста.Колонки.Подразделение.Видимость	= РабочиеМеста.Итог("ЕстьИерархия") > 0;
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИзменениеКадровогоПланаРабочиеМеста.Ссылка
		|ИЗ
		|	Документ.ИзменениеКадровогоПлана.РабочиеМеста КАК ИзменениеКадровогоПланаРабочиеМеста
		|ГДЕ
		|	ИзменениеКадровогоПланаРабочиеМеста.Подразделение.Владелец = &Организация
		|	И ИзменениеКадровогоПланаРабочиеМеста.Подразделение ССЫЛКА Справочник.ПодразделенияОрганизаций";
		
		Запрос.УстановитьПараметр("Организация",	Организация);
		
		ИзмененияКадровогоПлана.Отбор.Ссылка.ВидСравнения	= ВидСравнения.ВСписке;
		ТЗ = Запрос.Выполнить().Выгрузить();
		СписокДокументов = Новый СписокЗначений;
		Для Каждого СтрокаТЗ ИЗ ТЗ Цикл
			СписокДокументов.Добавить(СтрокаТЗ.Ссылка);
		КонецЦикла;
		ИзмененияКадровогоПлана.Отбор.Ссылка.Значение = СписокДокументов;
		ИзмененияКадровогоПлана.Отбор.Ссылка.Использование = Истина;
		ИзмененияКадровогоПлана.Отбор.ДокументыИзмененияКадровогоПланаПоПодразделению.Использование	= Ложь;
		
		Возврат;
	КонецЕсли;
	
	РабочиеМеста.Загрузить(КадровоеПланированиеПереопределяемый.ОбновитьРабочиеМестаРегл(Организация, ДанныеСтроки.Ссылка, ?(РежимПериода, Неопределено, ДатаСреза)).Выгрузить());
	ЭлементыФормы.РабочиеМеста.Колонки.Подразделение.Видимость	= РабочиеМеста.Итог("ЕстьИерархия") > 0;
	
	ИзмененияКадровогоПлана.Отбор.ДокументыИзмененияКадровогоПланаПоПодразделению.Значение		= ДанныеСтроки.Ссылка;
	ИзмененияКадровогоПлана.Отбор.ДокументыИзмененияКадровогоПланаПоПодразделению.Использование	= Истина;
	ИзмененияКадровогоПлана.Отбор.Ссылка.Использование											= Ложь;
	
КонецПроцедуры

Процедура ПриИзмененииРежимаПериода()
	
	ЭлементыФормы.РабочиеМеста.Колонки.Период.Видимость			= РежимПериода;
	ЭлементыФормы.РабочиеМеста.Колонки.ЗанятоСтавок.Видимость	= Не РежимПериода;
	ЭлементыФормы.РабочиеМеста.Колонки.Вакантно.Видимость		= Не РежимПериода;
	
	ЭлементыФормы.КоманднаяПанельРабочиеМеста.Кнопки.ПодменюВид.Кнопки.ОтобразитьТекущееСостояниеКП.Пометка		= Не РежимПериода;
	ЭлементыФормы.КоманднаяПанельРабочиеМеста.Кнопки.ПодменюВид.Кнопки.ОтобразитьИсториюВсехИзмененийКП.Пометка	= РежимПериода;
	
КонецПроцедуры

Процедура УстановитьВидимостьВакансий()
	
	Если ПоказыватьВакансии Тогда
		ЭлементыФормы.НадписьУправлениеВидимостьюВакансий.Заголовок = "Скрыть вакансии";
	Иначе
		ЭлементыФормы.НадписьУправлениеВидимостьюВакансий.Заголовок = "Показать вакансии";
	КонецЕсли;
	
	РаботаСДиалогамиЗК.ИзменитьВидимостьПанелиПоВертикали(ЭтаФорма, ПоказыватьВакансии, "ПанельВакансии", "Вакансии");
	
КонецПроцедуры

Процедура ПриИзмененииСортировкиВакансий()
	
	Для Номер = 1 По 4 Цикл
		Кнопка = ЭлементыФормы.КоманднаяПанельВакансии.Кнопки.ПодменюУпорядочить.Кнопки[Номер-1];
		Кнопка.Пометка = Кнопка.Имя = ПолеДляУпорядочиванияВакансий;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриИзмененииОтбораПоВакансии()
	
	ЭлементыФормы.КоманднаяПанельВакансии.Кнопки.ПодменюУпорядочить.Кнопки.ПоказыватьОткрытые.Пометка	= Вакансии.Отбор.Закрыта.Использование;
	ЭлементыФормы.КоманднаяПанельВакансии.Кнопки.ПодменюУпорядочить.Кнопки.ПоказыватьВсе.Пометка		= Не Вакансии.Отбор.Закрыта.Использование;
	
КонецПроцедуры

Процедура ПриАктивизацииСтрокиПодразделенияОбработчикОжидания()
	
	Если НЕ КадровоеПланированиеПереопределяемый.ОбновитьДополнительно(ЭтотОбъект, ЭтаФорма) Тогда
		ОбновитьДанныеПодразделенияОрганизации();
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьПолеПодразделения()
	
	ПолеПодразделения = ЭлементыФормы.Подразделения;
	
	ПолеПодразделения.Данные 	= "ПодразделенияОрганизаций";
	ПолеПодразделения.Шапка 	= Ложь;
	
	ПолеПодразделения.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни;
	
	ПолеПодразделения.Значение.Отбор.Владелец.Использование = Истина;
	ПолеПодразделения.Значение.Отбор.Владелец.Значение 		= Организация;
	
	КолонкаНаименование = ПолеПодразделения.Колонки.Добавить("Наименование");
	КолонкаНаименование.Данные 				= "Наименование";
	КолонкаНаименование.ОтображатьИерархию 	= Истина;
	
	ПолеПодразделения.Дерево 	= Истина;
	
КонецПроцедуры

Процедура УстановитьЗаголовкиОрганизацийВФорме()
	
	ЭлементыФормы.НадписьПредприятие.Заголовок = " " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Предприятие");
	ЭлементыФормы.НадписьОрганизация.Заголовок = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация:");
	
КонецПроцедуры // УстановитьЗаголовкиОрганизацийВФорме()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	КадровоеПланированиеПереопределяемый.ОпределитьДоступ(ЭтаФорма);
	
	ПоказыватьВакансии = ВосстановитьЗначение("КадровоеПланированиеПоказыватьВакансии");
	Если ПоказыватьВакансии = Неопределено Тогда
		ПоказыватьВакансии = Истина;
	КонецЕсли;
	УстановитьВидимостьВакансий();
	
	РазрешатьУдалятьНепосредственно = ПравоДоступа("ИнтерактивноеУдаление", Метаданные.Справочники.Вакансии);
	Если Не РазрешатьУдалятьНепосредственно Тогда
		ЭлементыФормы.КоманднаяПанельВакансии.Кнопки.ПодменюВакансии.Кнопки.Удалить(ЭлементыФормы.КоманднаяПанельВакансии.Кнопки.ПодменюВакансии.Кнопки.Удалить);
	КонецЕсли;
	
	ДатаСреза		= ТекущаяДата();
	РежимПериода	= Ложь;
	Организация		= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	
	СоздатьПолеПодразделения();
	
	ПодразделенияОрганизаций.Порядок.Установить("Порядок");
	
	ПриИзмененииРежимаПериода();
	
	// Справка формы
	ОтображатьСправкуФормы = ВосстановитьЗначение("КадровоеПланированиеСправкаФормы");
	Если ОтображатьСправкуФормы = Неопределено Тогда
		ОтображатьСправкуФормы = Истина;
	КонецЕсли;
	
	ПодготовитьСправкуФормы();
	
	КадровоеПланированиеПереопределяемый.ПередОткрытиемДополнительно(ЭтаФорма, Новый Действие("ДополнительныеДействия"));
	
	УстановитьЗаголовкиОрганизацийВФорме();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	// Установить колонки, видимостью которых пользователь управлять не может.
	СтруктураКолонок = Новый Структура;
	СтруктураКолонок.Вставить("Вакансия");

	// Установить ограничение - изменять видимость колонок табличной части РабочиеМеста
	ОбработкаТабличныхЧастей.УстановитьИзменятьВидимостьКолонокТабЧасти(ЭлементыФормы.РабочиеМеста.Колонки, СтруктураКолонок);
	
	УстановитьВидимостьСправкиФормы(Ложь);
	
	ЭлементыФормы.Вакансии.НастройкаПорядка.Наименование.Доступность	= Ложь;
	
	Вакансии.Колонки.Добавить("Закрыта");
	
	ПолеДляУпорядочиванияВакансий = ВосстановитьЗначение("КадровоеПланированиеПолеДляУпорядочиванияВакансий");
	Если ПустаяСтрока(ПолеДляУпорядочиванияВакансий) Тогда
		ПолеДляУпорядочиванияВакансий = "Наименование";
	КонецЕсли;
	Вакансии.Порядок.Установить(ПолеДляУпорядочиванияВакансий);
	ПриИзмененииСортировкиВакансий();
	
	Вакансии.Отбор.Закрыта.Установить(Ложь);
	ПриИзмененииОтбораПоВакансии();
	
	Если КадровоеПланированиеПереопределяемый.ОтсутствиеДоступаКРежимуПланирования(ЭтаФорма) Тогда
		Предупреждение("У вас нет прав для планирования в выбранном режиме");	
	КонецЕсли;
	
	ИзмененияКадровогоПлана.Отбор.ДокументыИзмененияКадровогоПланаПоПодразделению.Использование	= Истина;
	ИзмененияКадровогоПлана.Отбор.ДокументыИзмененияКадровогоПланаПоПодразделению.ВидСравнения	= ВидСравнения.ВИерархии;
	
КонецПроцедуры // ПриОткрытии()

Процедура ПриЗакрытии()
	
	СохранитьЗначение("КадровоеПланированиеСправкаФормы",					ОтображатьСправкуФормы);
	
	СохранитьЗначение("КадровоеПланированиеПоказыватьВакансии",				ПоказыватьВакансии);
	
	СохранитьЗначение("КадровоеПланированиеПолеДляУпорядочиванияВакансий",	ПолеДляУпорядочиванияВакансий);
	
КонецПроцедуры // ПриЗакрытии()

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаписанаВакансия" Тогда
		ОбновитьДанные();
		
	ИначеЕсли ИмяСобытия = "ИзмененКадровыйПлан" Тогда
		ОбновитьДанные();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаписиНовогоОбъекта(Объект, Источник)
	
	Если ТипЗнч(Объект) = Тип("СправочникОбъект.Вакансии")
		Или ТипЗнч(Объект) = Тип("СправочникСсылка.Вакансии") Тогда
		ОбновитьДанные();
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ИзменениеКадровогоПлана")
		Или ТипЗнч(Объект) = Тип("ДокументСсылка.ИзменениеКадровогоПлана") Тогда
		ОбновитьДанные();
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура ДействияФормыОбновить(Кнопка)
	
	ОбновитьДанные();
	
КонецПроцедуры

Процедура ДействияФормыОтчетОценкаЭффективностиРаботыОУП(Кнопка)
	
	Отчет = Отчеты.ОценкаЭффективностиКадровойСлужбы.Создать();
	Форма = Отчет.ПолучитьФорму();
	Форма.Открыть();
	Форма.ОбновитьОтчет();
	
КонецПроцедуры

Процедура ДействияФормыОтчетСостояниеКадровогоПлана(Кнопка)
	
	Отчет = Отчеты.СостояниеКадровогоПлана.Создать();
	Форма = Отчет.ПолучитьФорму();
	Форма.Открыть();
	Форма.ОбновитьОтчет();
	
КонецПроцедуры

Процедура ДействияФормыОтчетИсполнениеКадровогоПлана(Кнопка)
	
	Отчет = Отчеты.ИсполнениеКадровогоПлана.Создать();
	Форма = Отчет.ПолучитьФорму();
	Форма.Открыть();
	Форма.ОбновитьОтчет();
	
КонецПроцедуры

Процедура ДействияФормыОтчетКоэффициентТекучестиКадров(Кнопка)
	
	Отчет = КадровоеПланированиеПереопределяемый.ОтчетПоТекучести();
	
	Форма = Отчет.ПолучитьФорму();
	Форма.Открыть();
	Форма.ОбновитьОтчет();
	
КонецПроцедуры

Процедура ОткрытьНаборПерсонала(Кнопка)
	
	Обработки.НаборПерсонала.ПолучитьФорму().Открыть();
	
КонецПроцедуры

Процедура ПереключитьВидимостьСправкиФормы()
	
	ОтображатьСправкуФормы = Не ОтображатьСправкуФормы;
	УстановитьВидимостьСправкиФормы();
	
КонецПроцедуры // ПереключитьВидимостьСправкиФормы()

Процедура КоманднаяПанельРабочиеМестаНоваяВакансия(Кнопка)
	
	ДанныеВакансии = Новый Структура("Организация, Подразделение, Должность");
	
	КадровоеПланированиеПереопределяемый.ЗаполнитьЗначенияДополнительно(ДанныеВакансии, ЭтаФорма);
	
	ДанныеСтроки = ЭлементыФормы.РабочиеМеста.ТекущиеДанные;
	Если ДанныеСтроки <> Неопределено Тогда
		ДанныеВакансии.Подразделение	= ДанныеСтроки.Подразделение;
		ДанныеВакансии.Должность		= ДанныеСтроки.Должность;
	Иначе
		
		КадровоеПланированиеПереопределяемый.РабочиеМестаНоваяВакансияДополнительно(ДанныеСтроки, ЭтаФорма);
		
		Если ДанныеСтроки <> Неопределено Тогда
			ДанныеВакансии.Подразделение	= ДанныеСтроки.Ссылка;
		КонецЕсли;
		
	КонецЕсли;
	
	ФормаСправочника = Справочники.Вакансии.ПолучитьФормуНовогоЭлемента(, ЭтаФорма, ЭтотОбъект);
	ФормаСправочника.ПараметрыОткрытия = ДанныеВакансии;
	ФормаСправочника.Открыть();
	
КонецПроцедуры

Процедура КоманднаяПанельРабочиеМестаИзменить(Кнопка)
	
	ФормаДокумента = Документы.ИзменениеКадровогоПлана.ПолучитьФормуНовогоДокумента(, ЭтаФорма, ЭтотОбъект);
	
	КадровоеПланированиеПереопределяемый.ЗаполнитьЗначенияДополнительно(ФормаДокумента, ЭтаФорма);
	
	ФормаДокумента.ДатаИзменений	= ТекущаяДата();
	
	Для Каждого Строка Из ЭлементыФормы.РабочиеМеста.ВыделенныеСтроки Цикл
		СтрокаДокумента = ФормаДокумента.РабочиеМеста.Добавить();
		
		СтрокаДокумента.Подразделение	= Строка.Подразделение;
		СтрокаДокумента.Должность		= Строка.Должность;
		СтрокаДокумента.Количество		= Строка.ЗанятоСтавок;
	КонецЦикла;
	
	ФормаДокумента.Открыть();
	
КонецПроцедуры

Процедура ОтобразитьТекущееСостояниеКП(Кнопка)
	
	РежимПериода = Ложь;
	
	ПриИзмененииРежимаПериода();
	
	ОбновитьДанные();
	
КонецПроцедуры

Процедура ОтобразитьИсториюВсехИзмененийКП(Кнопка)
	
	РежимПериода = Истина;
	
	ПриИзмененииРежимаПериода();
	
	ОбновитьДанные();
	
КонецПроцедуры

Процедура ДополнительныеДействия(Кнопка)
	
	КадровоеПланированиеПереопределяемый.ВыполнитьДополнительныеДействия(ЭтаФорма, Кнопка);	
	
	ОбновитьДанные();
	
КонецПроцедуры

Процедура НовыйДокумент(Кнопка)
	
	ФормаДокумента = Документы.ИзменениеКадровогоПлана.ПолучитьФормуНовогоДокумента(, ЭтаФорма, ЭтотОбъект);
	
	КадровоеПланированиеПереопределяемый.ЗаполнитьЗначенияДополнительно(ФормаДокумента, ЭтаФорма);
	
	ФормаДокумента.ДатаИзменений	= ТекущаяДата();
	
	ФормаДокумента.Открыть();
	
КонецПроцедуры

Процедура ОткрытьШтатноеРасписание(Кнопка)
	
	Форма = РегистрыСведений.ШтатноеРасписаниеОрганизаций.ПолучитьФормуСписка();
	Форма.Организация	= Организация;
	Форма.Открыть();
	
КонецПроцедуры

Процедура ЗакрытьВакансию(Кнопка)
	
	ДанныеСтроки = ЭлементыФормы.Вакансии.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВакансияОбъект = ДанныеСтроки.Ссылка.ПолучитьОбъект();
	ВакансияОбъект.Закрыта = Истина;
	ВакансияОбъект.Записать();
	
КонецПроцедуры

Процедура УпорядочитьПоНаименованию(Кнопка)
	
	ПолеДляУпорядочиванияВакансий = "Наименование";
	Вакансии.Порядок.Установить(ПолеДляУпорядочиванияВакансий);
	ПриИзмененииСортировкиВакансий();
	
КонецПроцедуры

Процедура УпорядочитьПоДатеЗакрытия(Кнопка)
	
	ПолеДляУпорядочиванияВакансий = "ПлановаяДатаЗакрытия";
	Вакансии.Порядок.Установить(ПолеДляУпорядочиванияВакансий);
	ПриИзмененииСортировкиВакансий();
	
КонецПроцедуры

Процедура УпорядочитьПоПодразделению(Кнопка)
	
	ПолеДляУпорядочиванияВакансий = "Подразделение";
	Вакансии.Порядок.Установить(ПолеДляУпорядочиванияВакансий);
	ПриИзмененииСортировкиВакансий();
	
КонецПроцедуры

Процедура УпорядочитьПоДолжности(Кнопка)
	
	ПолеДляУпорядочиванияВакансий = "Должность";
	Вакансии.Порядок.Установить(ПолеДляУпорядочиванияВакансий);
	ПриИзмененииСортировкиВакансий();
	
КонецПроцедуры

Процедура ПоказыватьОткрытые(Кнопка)
	
	Вакансии.Отбор.Закрыта.Установить(Ложь);
	ПриИзмененииОтбораПоВакансии();
	
КонецПроцедуры

Процедура ПоказыватьВсе(Кнопка)
	
	Вакансии.Отбор.Закрыта.Использование = Ложь;
	ПриИзмененииОтбораПоВакансии();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ИзменитьВидимостьВакансий(Элемент)
	
	ПоказыватьВакансии = Не ПоказыватьВакансии;
	
	УстановитьВидимостьВакансий();
	
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	
	ЭлементыФормы.Подразделения.Развернуть(ЭлементыФормы.Подразделения.ТекущаяСтрока, Истина);
	ЭлементыФормы.Подразделения.Значение.Отбор.Владелец.Значение = ЭтаФорма.Организация;
	
	ОбновитьДанныеПодразделенияОрганизации();
	
КонецПроцедуры

Процедура ВстроеннаяСправкаonclick(Элемент, pEvtObj)
	
	РаботаСДиалогами.ПолеHTMLДокументаOnClick(Элемент, pEvtObj, ЭтаФорма);
	
КонецПроцедуры // ПолеСправкиonclick()

Процедура ВстроеннаяСправкаonmouseout(Элемент, pEvtObj)
	
	РаботаСДиалогами.ПолеHTMLДокументаOnMouseOut(Элемент, pEvtObj);
	
КонецПроцедуры

Процедура ВстроеннаяСправкаonmouseover(Элемент, pEvtObj)
	
	РаботаСДиалогами.ПолеHTMLДокументаOnMouseOver(Элемент, pEvtObj);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ Вакансии

Процедура ВакансииПриАктивизацииСтроки(Элемент)
	
	ДанныеСтроки = ЭлементыФормы.Вакансии.ТекущиеДанные;
	
	ЭлементыФормы.КоманднаяПанельВакансии.Кнопки.ПодменюВакансии.Кнопки.Закрыть.Доступность = (ДанныеСтроки <> Неопределено) И Не ДанныеСтроки.Ссылка.Закрыта;
	
КонецПроцедуры

Процедура ВакансииПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	РаботаСДиалогамиЗК.ВакансияПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ Подразделения

Процедура ПодразделенияПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ПриАктивизацииСтрокиПодразделенияОбработчикОжидания", 0.1, Истина);
	                              
КонецПроцедуры // ПодразделенияПриАктивизацииСтроки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ РабочиеМеста

// Процедура - обработчик события "Выбор" табличного поля.
//
Процедура РабочиеМестаВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	КадровоеПланированиеПереопределяемый.РабочиеМестаВыборДополнительно(ЭтаФорма, Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ