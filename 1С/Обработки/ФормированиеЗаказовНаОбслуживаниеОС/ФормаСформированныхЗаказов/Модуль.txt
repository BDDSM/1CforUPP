////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Обновляет данные заказа в таблице значений.
//
Процедура ОбновитьЗаказ(Выборка)

	НайденнаяСтрока = ТаблицаДокументов.Найти(Выборка.Ссылка, "Заказ");
	Если НайденнаяСтрока = Неопределено Тогда
		НайденнаяСтрока = ТаблицаДокументов.Добавить();
		НайденнаяСтрока.Заказ = Выборка.Ссылка;
	КонецЕсли;
	
	Если Выборка.Проведен Тогда
		НайденнаяСтрока.СостояиеДокумента = 0;
	ИначеЕсли Выборка.ПометкаУдаления Тогда
		НайденнаяСтрока.СостояиеДокумента = 1;
	Иначе
		НайденнаяСтрока.СостояиеДокумента = 2;
	КонецЕсли; 
	НайденнаяСтрока.Дата             = Выборка.Дата;
	НайденнаяСтрока.Номер            = Выборка.Номер;
	НайденнаяСтрока.Услуга           = Выборка.Услуга;
	НайденнаяСтрока.ВидОбслуживания  = Выборка.ВидОбслуживанияОС;
	НайденнаяСтрока.ДатаОбслуживания = Выборка.ДатаОбслуживанияОС;
	НайденнаяСтрока.Причина          = Выборка.ПричинаЗаказаНаОбслуживаниеОС;

КонецПроцедуры

// Обновляет данные таблицы значений заказов на обслуживание ОС.
//
Процедура ОбновитьТаблицуЗаказов()

	ТекущийЗаказ = Неопределено;
	Если ЭлементыФормы.ТаблицаДокументов.ТекущиеДанные <> Неопределено Тогда
		ТекущийЗаказ = ЭлементыФормы.ТаблицаДокументов.ТекущиеДанные.Заказ;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ЗаказНаОбслуживаниеОС.Ссылка,
	|	ЗаказНаОбслуживаниеОС.ПометкаУдаления,
	|	ЗаказНаОбслуживаниеОС.Проведен,
	|	ЗаказНаОбслуживаниеОС.Дата,
	|	ЗаказНаОбслуживаниеОС.Номер,
	|	ЗаказНаОбслуживаниеОС.Услуга,
	|	ЗаказНаОбслуживаниеОС.ПричинаЗаказаНаОбслуживаниеОС,
	|	ЗаказНаОбслуживаниеОС.ДатаОбслуживанияОС,
	|	ЗаказНаОбслуживаниеОС.ВидОбслуживанияОС
	|ИЗ
	|	Документ.ЗаказНаОбслуживаниеОС КАК ЗаказНаОбслуживаниеОС
	|ГДЕ
	|";
	
	Если СписокДокументов.Количество() < 15 Тогда
		
		Запрос.Текст = Запрос.Текст + "
		|	ЗаказНаОбслуживаниеОС.Ссылка В(&СписокЗаказов)
		|УПОРЯДОЧИТЬ ПО
		|	ЗаказНаОбслуживаниеОС.Дата ВОЗР
		|";
		
		Запрос.УстановитьПараметр("СписокЗаказов", СписокДокументов);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ОбновитьЗаказ(Выборка);
		КонецЦикла; 
		
	Иначе
		
		Запрос.Текст = Запрос.Текст + "
		|	ЗаказНаОбслуживаниеОС.Ссылка = &ВыбЗаказ
		|";
		
		Для каждого ЭлементСписка Из СписокДокументов Цикл
			Запрос.УстановитьПараметр("ВыбЗаказ", ЭлементСписка.Значение);
			Выборка = Запрос.Выполнить().Выбрать();
			Выборка.Следующий();
			ОбновитьЗаказ(Выборка);
		КонецЦикла; 
		
	КонецЕсли; 
	
	Если ТекущийЗаказ <> Неопределено Тогда
		СтрокаТЗ = ТаблицаДокументов.Найти(ТекущийЗаказ, "Заказ");
		Если СтрокаТЗ <> Неопределено Тогда
			ЭлементыФормы.ТаблицаДокументов.ТекущаяСтрока = СтрокаТЗ;
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()
	
	ОбновитьТаблицуЗаказов();
	
КонецПроцедуры

// Обработчик события ОбработкаЗаписиНовогоОбъекта формы.
//
Процедура ОбработкаЗаписиНовогоОбъекта(Объект, Источник)
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ЗаказНаОбслуживаниеОС") Тогда
		ОбновитьТаблицуЗаказов();
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Обработчик события элемента ДействияФормы.Обновить.
//
Процедура ДействияФормыОбновить(Кнопка)
	
	ОбновитьТаблицуЗаказов();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик события ПриВыводеСтроки элемента формы ТаблицаДокументов.
//
Процедура ТаблицаДокументовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеСтроки.Ячейки.СостояиеДокумента.ИндексКартинки = ДанныеСтроки.СостояиеДокумента;
	
КонецПроцедуры

// Обработчик события ПередНачаломИзменения элемента формы ТаблицаДокументов.
//
Процедура ТаблицаДокументовПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
	Если Элемент.ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Заказ) Тогда
		Элемент.ТекущиеДанные.Заказ.ПолучитьФорму(, ЭтаФорма).Открыть();
	КонецЕсли; 
	
КонецПроцедуры

ТаблицаДокументов.Колонки.Добавить("Заказ");