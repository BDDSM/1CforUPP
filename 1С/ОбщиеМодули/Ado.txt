Функция ЗаполнитьСервер(ССИБ, Server, Base)
    Server	= "10.0.102.75,6586";
    Base	= "TestCLR2008";
КонецФункции 
//**************************    **************************    **************************//
//Рекомендуется:
//            - Создать модуль ADO //Название модуля имеет значение только для регламента.
//            - Глобальный: Нет
//________________________________________________________________________________________
//            - Клиент (Управляемое приложение): Нет
//            - Сервер: Да
//            - Внешнее соединение: Да
//            - Клиент (Обычное приложение): Да
//________________________________________________________________________________________
//            - Вызов сервера: Нет
//            - Привелигированный: Нет
//            - Повторное использование возвращаемых значений: Не использовать.
//
//**************************    **************************    **************************//
 
//**************************    **************************    **************************//
Функция ВыполнитьSQL(SQL,ЗапросSQL,тз = Неопределено,ОписаниеОшибки = Неопределено) Экспорт
	Возврат ВыполнитьNET(SQL,ЗапросSQL,тз,",",ОписаниеОшибки);
КонецФункции
//**************************    **************************    **************************//
Функция ОчисткаОшибки(стр)
	стр = СтрЗаменить(стр,"Произошла исключительная ситуация (Microsoft OLE DB Provider for ODBC Drivers):","");
	стр = СтрЗаменить(стр,"[Microsoft][ODBC SQL Server Driver][SQL Server]","");
	Возврат стр;
КонецФункции
//**************************    **************************    **************************//
Функция ВывестиОшибку(SQL,ТекстОшибки,ОписаниеОшибки)
	Если ТипЗнч(ТекстОшибки) = Тип("ИнформацияОбОшибке") Тогда
		ТекстОшибки = ?(ТекстОшибки.Причина=Неопределено,ТекстОшибки.Описание,ТекстОшибки.Причина.Описание);
	КонецЕсли;
	ТекстОшибки = ОчисткаОшибки(ТекстОшибки);
	Если ОписаниеОшибки = Неопределено Тогда
		Сообщить("База:'"+SQL.idDb+"' Ошибка объекта: Database "+Символы.ПС+ТекстОшибки);
	Иначе
		ОписаниеОшибки = ОписаниеОшибки+?(ПустаяСтрока(ТекстОшибки),"",Символы.ПС)+ТекстОшибки;	
	КонецЕсли;
	Возврат Истина;
КонецФункции
//**************************    **************************    **************************//
Функция СоздатьКонтекстSQL(idDb="") Экспорт
    Возврат Новый Структура("idDb,Command",idDb);     
КонецФункции
//**************************    **************************    **************************//
Функция ВыполнитьNET(SQL,ЗапросSQL,Объект = Неопределено,Схема = "",Параметры = "",ОписаниеОшибки = Неопределено) Экспорт
	Если SQL = Неопределено Тогда
		SQL = СоздатьКонтекстSQL();
    КонецЕсли;
	Если SQL.Command = Неопределено Тогда
        //ССИБ - СтрокаСоединенияИнформационнойБазы в нижнем регистре, без порта кластера.
		ССИБ	= Нрег(СтрокаСоединенияИнформационнойБазы());
		ССИБ	= ?(Найти(ССИБ,":"),Лев(ССИБ,Найти(ССИБ,":")-1)+Сред(ССИБ,Найти(ССИБ,":")+5),ССИБ);
        Server	= "";//Адресс сервера
        Base	= "";//Имя базы данных в которой находится сборка. Основная база или транспортный узел.
        ЗаполнитьСервер(ССИБ, Server, Base);
		Database						= Новый  COMОбъект("ADODB.Connection");
		Database.ConnectionTimeout		= 10;
		Database.CommandTimeout			= 0;
		Database.CursorLocation			= 3;
		Database.ConnectionString		= "driver={SQL Server};server="+Server+";Database="+Base+";APP=App;Trusted_Connection=True;";//uid=User;pwd=PassWord;";
		Попытка
			Database.Open(); 
		Исключение
			ИнформацияОбОшибке =  ИнформацияОбОшибке();
			ВывестиОшибку(SQL,ИнформацияОбОшибке,ОписаниеОшибки);
			Возврат Ложь;
		КонецПопытки;
		Command						= Новый COMОбъект("ADODB.Command");
		Command.CommandTimeout      = 180;
		Command.ActiveConnection	= Database;
		SQL.Command					= Command;
	КонецЕсли;
	Если Параметры=Неопределено Тогда
	    стрПараметры = "";
    ИначеЕсли ТипЗнч(Параметры)=Тип("Строка") Тогда
        стрПараметры = Параметры;
    ИначеЕсли ТипЗнч(Параметры)=Тип("ХранилищеЗначения") Тогда
        стрПараметры = СтрЗаменить(ЗначениеВСтрокуВнутр(Параметры),Символы.ПС,"");
    Иначе
        стрПараметры = ЗначениеВСтрокуВнутр(Параметры);
    КонецЕсли;
 
	SQL.Command.CommandText     = "Select dbo.V82Pack ('"+СтрЗаменить(ЗапросSQL,"'","''")+"','"+Схема+"','"+СтрЗаменить(стрПараметры,"'","''")+"','"+SQL.idDb+"')";
	Попытка
		RecordSet				= SQL.Command.Execute();
	Исключение
		ИнформацияОбОшибке =  ИнформацияОбОшибке();
		ВывестиОшибку(SQL,ИнформацияОбОшибке,ОписаниеОшибки);
		Возврат Ложь;
	КонецПопытки;
	Попытка
		стр 	= RecordSet.GetString();
		Объект 	= ЗначениеИзСтрокиВнутр(стр);
		Если ТипЗнч(Объект) = Тип("ХранилищеЗначения") Тогда
			Объект = Объект.Получить();
		КонецЕсли;
	Исключение
		ИнформацияОбОшибке =  ИнформацияОбОшибке();
		ВывестиОшибку(SQL,ИнформацияОбОшибке,ОписаниеОшибки);
		Возврат Ложь;
	КонецПопытки;
	Возврат Истина;
КонецФункции
//**************************    **************************    **************************//
Функция ВыполнитьСкляр(SQL,ЗапросSQL,Объект = Неопределено,ОписаниеОшибки = Неопределено) Экспорт
	Если SQL = Неопределено Тогда
		SQL = СоздатьКонтекстSQL();
    КонецЕсли;
	Если SQL.Command = Неопределено Тогда
        //ССИБ - СтрокаСоединенияИнформационнойБазы в нижнем регистре, без порта кластера.
		ССИБ	= Нрег(СтрокаСоединенияИнформационнойБазы());
		ССИБ	= ?(Найти(ССИБ,":"),Лев(ССИБ,Найти(ССИБ,":")-1)+Сред(ССИБ,Найти(ССИБ,":")+5),ССИБ);
        Server	= "";//Адресс сервера
        Base	= "";//Имя базы данных в которой находится сборка. Основная база или транспортный узел.
        ЗаполнитьСервер(ССИБ, Server, Base);
		Database						= Новый  COMОбъект("ADODB.Connection");
		Database.ConnectionTimeout		= 10;
		Database.CommandTimeout			= 0;
		Database.CursorLocation			= 3;
		Database.ConnectionString		= "driver={SQL Server};server="+Server+";Database="+Base+";APP=App;Trusted_Connection=True;";//uid=User;pwd=PassWord;";
		Попытка
			Database.Open(); 
		Исключение
			ИнформацияОбОшибке =  ИнформацияОбОшибке();
			ВывестиОшибку(SQL,ИнформацияОбОшибке,ОписаниеОшибки);
			Возврат Ложь;
		КонецПопытки;
		Command						= Новый COMОбъект("ADODB.Command");
		Command.CommandTimeout      = 180;
		Command.ActiveConnection	= Database;
		SQL.Command					= Command;
	КонецЕсли;
	SQL.Command.CommandText     = ЗапросSQL;
	Попытка
		RecordSet				= SQL.Command.Execute();
	Исключение
		ИнформацияОбОшибке =  ИнформацияОбОшибке();
		ВывестиОшибку(SQL,ИнформацияОбОшибке,ОписаниеОшибки);
		Возврат Ложь;
	КонецПопытки;
	Попытка
		стр 	= RecordSet.GetString();
		Объект 	= ЗначениеИзСтрокиВнутр(стр);
		Если ТипЗнч(Объект) = Тип("ХранилищеЗначения") Тогда
			Объект = Объект.Получить();
		КонецЕсли;
	Исключение
		ИнформацияОбОшибке =  ИнформацияОбОшибке();
		ВывестиОшибку(SQL,ИнформацияОбОшибке,ОписаниеОшибки);
		Возврат Ложь;
	КонецПопытки;
	Возврат Истина;
КонецФункции
//**************************    **************************    **************************//
Функция ФильтрБулево(Значение) Экспорт
	Возврат ?(Значение,"1","0");	
КонецФункции
//**************************    **************************    **************************//
Функция ФильтрЧисло(Значение) Экспорт
	Возврат Формат(Значение,"ЧН=0; ЧГ=0");	
КонецФункции
//**************************    **************************    **************************//
Функция ФильтрДата(Значение) Экспорт
	Возврат "'"+Формат(Значение,"ДФ='yyyyMMdd HH:mm:ss'")+"'";	
КонецФункции
//**************************    **************************    **************************//  
Функция ФильтрСтрока(Значение) Экспорт
	Возврат "'"+СтрЗаменить(Значение,"'","''")+"'";	
КонецФункции  
//**************************    **************************    **************************//
Функция ФильтрСсылка(Значение) Экспорт
	стр = ЗначениеВСтрокуВнутр(Значение);
	Возврат "0x"+Сред(стр,Найти(стр,":")+1,32);	
КонецФункции
//**************************    **************************    **************************//
Функция ФильтрОбъект(Значение) Экспорт
	Возврат ФильтрСсылка(Значение.Ссылка);	
КонецФункции
//**************************    **************************    **************************//
Функция ФильтрЗначения(Значение) Экспорт
	Если ТипЗнч(Значение) = тип("Булево") Тогда
		Возврат ФильтрБулево(Значение);	
	ИначеЕсли ТипЗнч(Значение) = тип("Число") Тогда
		Возврат ФильтрЧисло(Значение);	
	ИначеЕсли ТипЗнч(Значение) = тип("Дата") Тогда
		Возврат ФильтрДата(Значение);	
	ИначеЕсли ТипЗнч(Значение) = тип("Строка")Тогда
		Возврат ФильтрСтрока(Значение);
	ИначеЕсли ТипЗнч(Значение) = тип("ХранилищеЗначения")Тогда
 
	ИначеЕсли ТипЗнч(Значение) = тип("УникальныйИдентификатор")Тогда	
 
	Иначе
		Возврат ФильтрСсылка(Значение);		
	КонецЕсли;
    Возврат null;
КонецФункции
//**************************    **************************    **************************//
Функция ФильтрМассива(Массив) Экспорт
	Если Массив.Количество() = 0 Тогда
		Возврат " in (null)";
	КонецЕсли;
	стр = "";
	Для Каждого элемент из Массив Цикл
        стр = стр + "," + ФильтрЗначения(элемент);
	КонецЦикла;
	Возврат " in ("+Сред(стр,2)+")";
КонецФункции
//**************************    **************************    **************************//
Функция ФильтрСтруктуры(Структура) Экспорт
	Если Структура.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	стр = "";
	Для Каждого элемент из Структура Цикл
        стр = стр + " and "+элемент.Ключ+ "=" + ФильтрЗначения(элемент.Значение);
	КонецЦикла;
	Возврат Сред(стр,5);
КонецФункции
//**************************    **************************    **************************//