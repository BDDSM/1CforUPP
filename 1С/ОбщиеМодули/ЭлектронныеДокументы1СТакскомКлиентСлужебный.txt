////////////////////////////////////////////////////////////////////////////////
// ЭлектронныеДокументы1СТакскомКлиентЙ: механизм обмена электронными документами.
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// Работа с извещением о получении

// Только для внутреннего использования
Функция СформироватьПодписатьЭДИзвещениеОПолучении(МассивЭД) Экспорт
	
	ВозвращаемоеЗначение = Ложь;
	
	КолСформированных = 0;
	КолУтвержденных   = 0;
	КолПодписанных    = 0;
	КолПодготовленных = 0;
	ВызватьОповещение = Ложь;
	
	Если ТипЗнч(МассивЭД) = Тип("Массив") Тогда
		Для Каждого СсылкаНаЭД Из МассивЭД Цикл
			
			ФайлИзвещения = ЭлектронныеДокументыФорматОбмена.СформироватьЭДИзвещениеОПолучении(СсылкаНаЭД);
			Если ЗначениеЗаполнено(ФайлИзвещения) Тогда
				
				КолСформированных = КолСформированных + 1;
				КолУтвержденных   = КолУтвержденных + 1;
				
				ДобавленныеФайлы = Новый Массив;
				ДобавленныеФайлы.Добавить(ФайлИзвещения);
				СертификатПодписи = ЭлектронныеДокументыОператорыЭДО.ОпределитьСертификатПодписиСлужебногоДокумента(
					СсылкаНаЭД, "УведомлениеОбУточнении");
				Если СертификатПодписи <> Неопределено Тогда
					
					Если ЭлектронныеДокументыСлужебный.ПолучитьЗначениеРеквизитаВПривилегированномРежиме(СертификатПодписи, "ЗапомнитьПарольКСертификату") Тогда
						
						Подписан = ЭлектронныеДокументыКлиентСлужебный.ПодписатьЭДОпределеннымСертификатом(ДобавленныеФайлы, СертификатПодписи,
							ЭлектронныеДокументыСлужебный.ПолучитьЗначениеРеквизитаВПривилегированномРежиме(СертификатПодписи, "ПарольПользователя"));
						Если Подписан > 0 Тогда
							Подготовлен = ЭлектронныеДокументыКлиентСлужебный.ПодготовитьКОтправкеЭД(ДобавленныеФайлы, Истина);
							КолПодготовленных = КолПодготовленных + Подготовлен;
						КонецЕсли;
						КолПодписанных = КолПодписанных + Подписан;
					КонецЕсли;
					
				КонецЕсли;
				ВызватьОповещение = Истина;
				
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	Если ВызватьОповещение Тогда
		Оповестить("ОбновитьСостояниеЭД");
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Авторизация на сервере Такском

Функция ПолучитьМаркерОЭДО(Соглашение, Соединение = Неопределено, ПарольКСертификату = Неопределено) Экспорт
	
	Маркер = Неопределено;
	
	Если НЕ ЗначениеЗаполнено(Соединение) Тогда
		Соединение = ЭлектронныеДокументы1СТакскомСлужебный.ПолучитьСоединение();
	КонецЕсли;
	ПараметрыСоглашения = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Соглашение, "СертификатАбонента, Наименование");
	СертификатАбонента  = ПараметрыСоглашения.СертификатАбонента;
	Если ЗначениеЗаполнено(СертификатАбонента) Тогда
		ПараметрыСертификатаАбонента = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(СертификатАбонента,
			"ЗапомнитьПарольКСертификату, ПарольПользователя, ФайлСертификата");
		Если ПарольКСертификату = Неопределено Тогда
			Если ПараметрыСертификатаАбонента.ЗапомнитьПарольКСертификату Тогда
				ПарольКСертификату = ПараметрыСертификатаАбонента.ПарольПользователя;
			КонецЕсли;
		КонецЕсли;
		Если ПарольКСертификату <> Неопределено Тогда
			АдресРесурса = "CertificateLogin";
			ИмяФайлаРезультата = ЭлектронныеДокументыСлужебный.ТекущееИмяВременногоФайла("txt");
			СертификатПодписи = ЭлектронныеДокументыСлужебный.ТекущееИмяВременногоФайла("cer");
			
			ДвоичныеДанныеСертификата = ПараметрыСертификатаАбонента.ФайлСертификата.Получить();
			ДвоичныеДанныеСертификата.Записать(СертификатПодписи);
			
			Заголовки = "";
			ЭлектронныеДокументы1СТакскомСлужебный.ДобавитьпараметрВЗаголовок(Заголовки, "Integrator-Id",
				"1C_22BFE9D5-E77D-424A-BC6D-D8A3496C05FE");
			
			Попытка
				Соединение.ОтправитьДляОбработки(СертификатПодписи, "CertificateLogin", ИмяФайлаРезультата, Заголовки);
			Исключение
				ТекстСообщения = НСтр("ru = 'Ошибка авторизации на сервере оператора электронного документооборота Такском!
				|(подробности см. в Журнале регистрации).'");
				ЭлектронныеДокументы.ОбработатьИсключениеПоЭДНаСервере(НСтр("ru = 'авторизация на сервере Такском'"),
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()), ТекстСообщения);
					
				Возврат Неопределено;
			КонецПопытки;
			
			Маркер = РасшифроватьМаркер(ИмяФайлаРезультата, СертификатПодписи, ПарольКСертификату);
			
			УдалитьФайлы(ИмяФайлаРезультата);
			УдалитьФайлы(СертификатПодписи);
		КонецЕсли;
	Иначе
		
		ШаблонСообщения = НСтр("ru = 'Не указан сертификат оператора электронного документооборота Такском,
		|в соглашении об обмене электронными документами %1!'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения,
			ПараметрыСоглашения.Наименование);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
	Возврат Маркер;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Авторизация на сервере Такском

Функция РасшифроватьМаркер(ИмяФайлаРезультата, СертификатПодписи, ПарольКСертификатуОператора)
	
	Попытка
		МенеджерКриптографии = ЭлектроннаяЦифроваяПодписьКлиент.ПолучитьМенеджерКриптографии();
	Исключение
		ТекстСообщения = НСтр("ru = 'Код ошибки 100. Необходимо провести тест настроек сертификата.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат Неопределено;
	КонецПопытки;
	
	Если ЗначениеЗаполнено(ПарольКСертификатуОператора) Тогда
		МенеджерКриптографии.ПарольДоступаКЗакрытомуКлючу = ПарольКСертификатуОператора;
	КонецЕсли;
	Попытка
		РасшифрованныеДвоичныеДанные = МенеджерКриптографии.Расшифровать(ИмяФайлаРезультата);
	Исключение
		ТекстСообщения = НСтр("ru = 'Код ошибки 103. Необходимо провести тест настроек сертификата.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат Неопределено;
	КонецПопытки;
	
	ФайлРасшифрованногоМаркера = ЭлектронныеДокументыСлужебный.ТекущееИмяВременногоФайла("txt");
	РасшифрованныеДвоичныеДанные.Записать(ФайлРасшифрованногоМаркера);
	
	ФайлРезультата = Новый ТекстовыйДокумент;
	ФайлРезультата.Прочитать(ФайлРасшифрованногоМаркера, КодировкаТекста.UTF8);
	УдалитьФайлы(ФайлРасшифрованногоМаркера);
	Результат = ФайлРезультата.ПолучитьТекст();
	
	Возврат Результат;
	
КонецФункции