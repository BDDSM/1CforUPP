// Процедура - обработчик события "ПриВыводеСтроки"
//
Процедура ДействияФормыРедактироватьКод(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(Метаданные.Справочники.СерииНоменклатуры, ЭлементыФормы.СправочникСписок, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.СправочникСписок.Колонки.Код);
КонецПроцедуры
Процедура СправочникСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	//ИтогЗапроса = РегистрыСведений.СертификацияНоменклатуры.ПолучитьПоследнее(КонецДня(РабочаяДата), Новый Структура("Серия, ВидСертификата",ДанныеСтроки.Ссылка, Перечисления.ВидыСертификацииНоменклатуры.ВнешняяСертификация));
	ИтогЗапроса = УправлениеСертификациейНоменклатуры.ПолучитьСведенияОСертификате(
		ДанныеСтроки.Ссылка,
		Перечисления.ВидыСертификацииНоменклатуры.ВнешняяСертификация,
		КонецДня(РабочаяДата));
	
	НомерСертификата = СокрЛП(ИтогЗапроса.НомерСертификата);
	ДатаСертификата = Формат(ИтогЗапроса.ДатаСертификата,"ДЛФ=Д");
	Если ЗначениеЗаполнено(НомерСертификата) и ЗначениеЗаполнено(ДатаСертификата) Тогда
		ОформлениеСтроки.Ячейки.Сертификат.УстановитьТекст(НомерСертификата + " от " + ДатаСертификата);
	Иначе
		ОформлениеСтроки.Ячейки.Сертификат.УстановитьТекст(НомерСертификата + ДатаСертификата);
	КонецЕсли;
	
КонецПроцедуры // СправочникСписокПриВыводеСтроки()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ПриОткрытии Формы.
//
Процедура ПриОткрытии()

	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияКода(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные.Справочники.СерииНоменклатуры, ЭлементыФормы.СправочникСписок, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.СправочникСписок.Колонки.Код);
КонецПроцедуры //ПриОткрытии

// Процедура - обработчик события "ПередОткрытием" формы
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	Если РежимВыбора И НЕ ЗначениеЗаполнено(ПараметрВыборПоВладельцу) 
	  И ЭтаФорма.ВладелецФормы <> Неопределено
	  И ТипЗНЧ(ЭтаФорма.ВладелецФормы) = Тип("ПолеВвода")
	  И НЕ ЗначениеЗаполнено(ЭтаФорма.ВладелецФормы.ВыборПоВладельцу)
	  И ТипЗНЧ(ЭтаФорма.ВладелецФормы.ВыборПоВладельцу) = Тип("СправочникСсылка.Номенклатура") Тогда
		Предупреждение("Не выбрана номенклатура!");
		Отказ = Истина;
		Возврат;  
	КонецЕсли;
	
	Если РежимВыбора И НЕ ЗначениеЗаполнено(ПараметрВыборПоВладельцу) Тогда
		ФормаВыбораВладельца = Справочники.Номенклатура.ПолучитьФормуВыбора();
		ФормаВыбораВладельца.Заголовок = "Выберите элемент справочника Номенклатура, Серии которого Вы хотите выбирать.";
		//ПараметрВыборПоВладельцу = ФормаВыбораВладельца.ОткрытьМодально();
		ПараметрОтборПоВладельцу = ФормаВыбораВладельца.ОткрытьМодально();
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрОтборПоВладельцу) Тогда
	
		Предупреждение("Не выбрана номенклатура!");
		Отказ = Истина;
		
	ИначеЕсли НЕ ПараметрОтборПоВладельцу.ВестиУчетПоСериям Тогда

		Если ТипЗнч(ВладелецФормы) = Тип("Форма") Тогда
			Если ВладелецФормы.ЭлементыФормы.Найти("ФлажокВестиУчетПоСериям") <> Неопределено Тогда
				Если ВладелецФормы.ЭлементыФормы.ФлажокВестиУчетПоСериям.Значение Тогда
					ОтветПользователя = Вопрос("Перед работой с сериями необходимо записать элемент номенклатуры. Записать?",
					РежимДиалогаВопрос.ДаНетОтмена,,, "Вопрос");
					Если ОтветПользователя = КодВозвратаДиалога.Отмена 
						ИЛИ ОтветПользователя = КодВозвратаДиалога.Таймаут Тогда
						Отказ = Истина;
						Возврат;
					КонецЕсли;

					Если ОтветПользователя = КодВозвратаДиалога.Да Тогда
						Попытка
							ВладелецФормы.СправочникОбъект.Записать();
						Исключение
						КонецПопытки;
					КонецЕсли;

				КонецЕсли;
			КонецЕсли;
		КонецЕсли;

		Если НЕ ПараметрОтборПоВладельцу.ВестиУчетПоСериям Тогда
			Предупреждение("Для номенклатуры """ + ПараметрОтборПоВладельцу + """ не ведется учет по сериям!");
			Отказ = Истина;
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры // ПередОткрытием()