////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мФормироватьНаименованиеАвтоматически; // надо ли формировать автоматически наименование серии, или нет

Перем мТекущееОсновноеИзображение;
Перем мПустаяКартинка;

Перем мДокВнешн; // Документ сделавший движение по внешней    сертификации
Перем мДокВнутр; // Документ сделавший движение по внутренней сертификации

Перем ЭтоНовый;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура устанавливает в поле картинки основное изображение
//
Процедура ПоказатьОсновноеИзображение() Экспорт

	Если мТекущееОсновноеИзображение = Неопределено Тогда
		ЭлементыФормы.ОсновноеИзображение.Картинка = мПустаяКартинка;
	Иначе
		ЭлементыФормы.ОсновноеИзображение.Картинка = мТекущееОсновноеИзображение;
	КонецЕсли;

КонецПроцедуры // ПоказатьОсновноеИзображение()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ПриИзмененииДанных формы.
//
Процедура ПриИзмененииДанных()

	УстановитьФлагФормироватьНаименованиеАвтоматически();

КонецПроцедуры // ПриИзмененииДанных()

// Процедура - обработчик события "ПередОткрытием" формы
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	Если ЭтоНовый() Тогда
		ЗаполнитьГТДИСтрануИзВладельца(Истина);
		ЭтоНовый = Истина;
	Иначе	
		ЭтоНовый = Ложь;
	КонецЕсли;

КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	СписокКнопокФайлов = Новый СписокЗначений;
	СписокКнопокФайлов.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.Файлы);
	СписокКнопокФайлов.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.Файлы);
	РаботаСФайлами.ПолучитьКартинкуКнопкиОткрытияФайлов(Ссылка, СписокКнопокФайлов);
	
	ОбновлениеСертификации();
	
	ФлагРедактСерт = НЕ (Владелец.ТребуетсяВнешняяСертификация И ЭтоНовый());
	
	ЭлементыФормы.НомерСертификата.ТолькоПросмотр = ФлагРедактСерт;
	ЭлементыФормы.ДатаСертификата .ТолькоПросмотр = ФлагРедактСерт;
	ЭлементыФормы.ДатаСертификации.ТолькоПросмотр = ФлагРедактСерт;
	
	ФлагРедактСертВнутр = НЕ (Владелец.ТребуетсяВнутренняяСертификация И ЭтоНовый());
	
	ЭлементыФормы.НомерСертификатаВнутр.ТолькоПросмотр = ФлагРедактСертВнутр;
	ЭлементыФормы.ДатаСертификатаВнутр .ТолькоПросмотр = ФлагРедактСертВнутр;
	ЭлементыФормы.ДатаСертификацииВнутр.ТолькоПросмотр = ФлагРедактСертВнутр;
	
	ЭлементыФормы.ГиперссылкаЗаписьСертификации     .Доступность = Владелец.ТребуетсяВнешняяСертификация;
	ЭлементыФормы.ГиперссылкаЗаписьСертификацииВнутр.Доступность = Владелец.ТребуетсяВнутренняяСертификация;
	
	ЭлементыФормы.Панель1.Страницы.СтраницаСертификации.Доступность = Владелец.ТребуетсяВнешняяСертификация ИЛИ Владелец.ТребуетсяВнутренняяСертификация;
	
	мТекущееОсновноеИзображение = ОсновноеИзображение.Хранилище.Получить();
	ПоказатьОсновноеИзображение();
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияКода(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Код);
КонецПроцедуры // ПриОткрытии()

Процедура ПослеЗаписи(Отказ)

	Если ТипЗнч(ВладелецФормы) = Тип("ПолеВвода") Тогда
		ОповеститьОВыборе(Ссылка);
	КонецЕсли;

	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);

КонецПроцедуры//ПослеЗаписи()

// Процедура - обработчик события "ОбработкаОповещения" формы
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ОбновитьФорму" и (Источник = Ссылка или (ТипЗнч(Источник) = Тип("СправочникСсылка.СерииНоменклатуры") и Источник.Пустая())) Тогда

		ИмяОбновляемогоЭлемента = Параметр.ИмяЭлемента;

		Если ИмяОбновляемогоЭлемента = "ОсновноеИзображение" Тогда

			// обновляем картинку на первой странице
			Если мТекущееОсновноеИзображение <> ОсновноеИзображение.Хранилище.Получить() Тогда
				мТекущееОсновноеИзображение = ОсновноеИзображение.Хранилище.Получить();
				ПоказатьОсновноеИзображение();
			КонецЕсли;

		ИначеЕсли ИмяОбновляемогоЭлемента = "ИзмененСписокСправочникаХранилищеДопИнформации" Тогда

			СписокКнопокФайлов = Новый СписокЗначений;
			СписокКнопокФайлов.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.Файлы);
			СписокКнопокФайлов.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.Файлы);
			РаботаСФайлами.ПолучитьКартинкуКнопкиОткрытияФайлов(Ссылка, СписокКнопокФайлов);

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры // ОбработкаОповещения()

// Процедура - обработчик смены владельца
//
Процедура ВладелецПриИзменении(Элемент)

	ЗаполнитьГТДИСтрануИзВладельца()

КонецПроцедуры // ВладелецПриИзменении()

Процедура ДействияФормыРедактироватьКод(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
КонецПроцедуры
// Обработчик события элемента КоманднаяПанельФормы.Файлы.
//
Процедура ДействияФормыФайлы(Кнопка)

	Если ЭтоНовый() Тогда
		Предупреждение("Необходимо записать элемент серии!");
		Возврат;
	КонецЕсли;

	СтруктураДляСпискаИзображдений = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, Ссылка, Ложь, Ложь);
	СтруктураДляСпискаДополнительныхФайлов = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, Ссылка, Ложь, Ложь);
	ОбязательныеОтборы = Новый Структура("Объект", Ссылка);

	РаботаСФайлами.ОткрытьФормуСпискаФайловИИзображений(СтруктураДляСпискаИзображдений, СтруктураДляСпискаДополнительныхФайлов, ОбязательныеОтборы, ЭтаФорма);

КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если ТипЗнч(ЗначениеВыбора) = Тип("СправочникСсылка.ХранилищеДополнительнойИнформации") Тогда
		
		Если НЕ ОсновноеИзображение = ЗначениеВыбора Тогда
			ОсновноеИзображение = ЗначениеВыбора;
		КонецЕсли;
		
		мТекущееОсновноеИзображение = ОсновноеИзображение.Хранилище.Получить();
		ПоказатьОсновноеИзображение();
		
		СписокКнопокФайлов = Новый СписокЗначений;
		СписокКнопокФайлов.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.Файлы);
		СписокКнопокФайлов.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.Файлы);
		РаботаСФайлами.ПолучитьКартинкуКнопкиОткрытияФайлов(Ссылка, СписокКнопокФайлов);
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ

// Обработчик события ПриИзменении элемента Наименование.
//
Процедура НаименованиеПриИзменении(Элемент)

	УстановитьФлагФормироватьНаименованиеАвтоматически();

КонецПроцедуры // НаименованиеПриИзменении()

// Обработчик события НачалоВыбораИзСписка элемента Наименование.
//
Процедура НаименованиеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	// Формирование списка выбора.

	Список = Новый СписокЗначений();

	Список.Добавить(СформироватьНаименование());

	// Выбор из списка и обработка выбора.

	РезультатВыбора = ВыбратьИзСписка(Список, ЭлементыФормы.Наименование);

	Если РезультатВыбора <> Неопределено Тогда

		Наименование = РезультатВыбора.Значение;
		мФормироватьНаименованиеАвтоматически = Истина;

	КонецЕсли;

КонецПроцедуры // НаименованиеНачалоВыбораИзСписка()

// Обработчик события ПриИзменении элемента СрокГодности.
//
Процедура СрокГодностиПриИзменении(Элемент)

	СформироватьНаименованиеАвтоматически();

КонецПроцедуры // СрокГодностиПриИзменении()

// Обработчик события ПриИзменении элемента НомерГТД.
//
Процедура НомерГТДПриИзменении(Элемент)

	СформироватьНаименованиеАвтоматически();

КонецПроцедуры // НомерГТДПриИзменении()

// Обработчик события ПриИзменении элемента СтранаПроисхождения.
//
Процедура СтранаПроисхожденияПриИзменении(Элемент)

	СформироватьНаименованиеАвтоматически();

КонецПроцедуры // СтранаПроисхожденияПриИзменении()

// Процедура - обработчик события Нажатие картинки ОсновноеИзображение
//
Процедура ОсновноеИзображениеНажатие(Элемент)
	
	Если ЭтоНовый() Тогда
		Предупреждение("Необходимо записать элемент серии!");
		Возврат;
	КонецЕсли;

	РаботаСФайлами.ОткрытьФормуИзображения(ЭтаФорма, ОсновноеИзображение, Ссылка);
	
КонецПроцедуры // ОсновноеИзображениеНажатие()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ, ВЫЗЫВАЕМЫЕ ИЗ ОБРАБОТЧИКОВ

// Процедура проверяет, было ли наименование серии ранее сформировано автоматически или нет,
// и присваивает соответствующее значение переменной мФормироватьНаименованиеАвтоматически.
//
// Параметры:
//  Нет.
//
Процедура УстановитьФлагФормироватьНаименованиеАвтоматически()

	Если ПустаяСтрока(Наименование) 
	 ИЛИ Наименование = СформироватьНаименование() Тогда

		мФормироватьНаименованиеАвтоматически = Истина;
	Иначе
		мФормироватьНаименованиеАвтоматически = Ложь;
	КонецЕсли;

КонецПроцедуры // УстановитьФлагФормироватьНаименованиеАвтоматически()

// Процедура проверяет, необходимо ли формировать наименование серии автоматически или нет,
// и, если необходимо, формирует его.
//
// Параметры:
//  Нет.
//
Процедура СформироватьНаименованиеАвтоматически()

	Если мФормироватьНаименованиеАвтоматически Тогда
		Наименование = СформироватьНаименование();
	КонецЕсли;

КонецПроцедуры // СформироватьНаименованиеАвтоматически()

////////////////////////////////////////////////////////////////////////////////
// ПРОЧИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура заполняет номер ГТД и страну происхождения из элемента-владельца
//
Процедура ЗаполнитьГТДИСтрануИзВладельца(ТолькоНезаполненные = Ложь)

	Если ТолькоНезаполненные Тогда
		СтранаПроисхождения = ?(НЕ ЗначениеЗаполнено(СтранаПроисхождения), Владелец.СтранаПроисхождения, СтранаПроисхождения);
		НомерГТД = ?(НЕ ЗначениеЗаполнено(НомерГТД), Владелец.НомерГТД, НомерГТД);
	Иначе
		СтранаПроисхождения = Владелец.СтранаПроисхождения;
		НомерГТД = Владелец.НомерГТД;
	КонецЕсли;

КонецПроцедуры // ЗаполнитьГТДИСтрануИзВладельца()

//Процедура обновляет информацию о внешней сертификации
Процедура ОбновлениеСертификации()
	
	Если ЭтоНовый() Тогда
		ЭлементыФормы.ГиперссылкаЗаписьСертификации     .Заголовок = "Ввести сведения о сертификации...";
		ЭлементыФормы.ГиперссылкаЗаписьСертификацииВнутр.Заголовок = "Ввести сведения о сертификации...";
	Иначе
		
		СведенияВнутр = УправлениеСертификациейНоменклатуры.ПолучитьСведенияОСертификате(
			Ссылка,
			Перечисления.ВидыСертификацииНоменклатуры.ВнутренняяСертификация,
			ТекущаяДата());
			
		СведенияВнешн = УправлениеСертификациейНоменклатуры.ПолучитьСведенияОСертификате(
			Ссылка,
			Перечисления.ВидыСертификацииНоменклатуры.ВнешняяСертификация,
			ТекущаяДата());
		
		ЭлементыФормы.НомерСертификата.Значение = СведенияВнешн.НомерСертификата;
		ЭлементыФормы.ДатаСертификата .Значение = СведенияВнешн.ДатаСертификата;
		ЭлементыФормы.ДатаСертификации.Значение = СведенияВнешн.Период;
		Если СведенияВнешн["Регистратор"] = Неопределено Тогда
			ЭлементыФормы.ГиперссылкаЗаписьСертификации.Заголовок = "Ввести сведения о сертификации...";
		Иначе
			ЭлементыФормы.ГиперссылкаЗаписьСертификации.Заголовок = СведенияВнешн["Регистратор"];
		КонецЕсли;
		
		ЭлементыФормы.НомерСертификатаВнутр.Значение = СведенияВнутр.НомерСертификата;
		ЭлементыФормы.ДатаСертификатаВнутр .Значение = СведенияВнутр.ДатаСертификата;
		ЭлементыФормы.ДатаСертификацииВнутр.Значение = СведенияВнутр.Период;
		Если СведенияВнутр["Регистратор"] = Неопределено Тогда
			ЭлементыФормы.ГиперссылкаЗаписьСертификацииВнутр.Заголовок = "Ввести сведения о сертификации...";
		Иначе
			ЭлементыФормы.ГиперссылкаЗаписьСертификацииВнутр.Заголовок = СведенияВнутр["Регистратор"];
		КонецЕсли;
		
		мДокВнешн = СведенияВнешн["Регистратор"];
		мДокВнутр = СведенияВнутр["Регистратор"];
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьАнализСерии(Кнопка)
	
	ФормаОтчета = Отчеты.АнализСерии.ПолучитьФорму();
	ФормаОтчета.ЭлементыФормы.Номенклатура.Значение = Ссылка.Владелец;
	ФормаОтчета.ЭлементыФормы.Серия.Значение = Ссылка;
	ФормаОтчета.ЭтотОбъект.ДатаОтчета = ТекущаяДата();
	ФормаОтчета.ЭтотОбъект.СерияНоменклатуры = Ссылка;
	ФормаОтчета.ЭтотОбъект.СформироватьОтчет(ФормаОтчета.ЭлементыФормы.ОсновнойДокумент);
	ФормаОтчета.Открыть();
	
КонецПроцедуры

Процедура ГиперссылкаЗаписьСертификацииНажатие(Элемент)
	
	Если ЭтоНовый() Тогда
		РаботаСДиалогами.ЗаписатьНовыйОбъектВФорме(ЭтаФорма);
		Если ЭтоНовый() Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(мДокВнешн) Тогда
		
		СведенияВнешн = УправлениеСертификациейНоменклатуры.ПолучитьСведенияОСертификате(
			Ссылка,
			Перечисления.ВидыСертификацииНоменклатуры.ВнешняяСертификация,
			ТекущаяДата());
			
		мДокВнешн = СведенияВнешн["Регистратор"];
		
	КонецЕсли;
		
	Если НЕ ЗначениеЗаполнено(мДокВнешн) Тогда
				
		ФормаДок = Документы.СертификацияНоменклатуры.ПолучитьФормуНовогоДокумента(, ЭтотОбъект, ЭтаФорма);
		ФормаДок.ДокументОбъект.Заполнить(Ссылка);
		ФормаДок.ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийСертификацияНоменклатуры.Внешняя;
		ФормаДок.ПараметрОснование = Ссылка;
		ФормаДок.ЭтаФорма.ДоступностьВидаОперации = Ложь;
		ФормаДок.ОткрытьМодально();
				
	Иначе
				
		ФормаДок = мДокВнешн.ПолучитьФорму(, ЭтаФорма, ЭтотОбъект);
		ФормаДок.ОткрытьМодально(); 
		
	КонецЕсли;
		
	ОбновлениеСертификации();
			
КонецПроцедуры

Процедура ГиперссылкаЗаписьСертификацииВнутреннейНажатие(Элемент)
	
	Если ЭтоНовый() Тогда
		РаботаСДиалогами.ЗаписатьНовыйОбъектВФорме(ЭтаФорма);
		Если ЭтоНовый() Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(мДокВнутр) Тогда
		
		СведенияВнутр = УправлениеСертификациейНоменклатуры.ПолучитьСведенияОСертификате(
			Ссылка,
			Перечисления.ВидыСертификацииНоменклатуры.ВнутренняяСертификация,
			ТекущаяДата());
			
		мДокВнутр = СведенияВнутр["Регистратор"];
		
	КонецЕсли;
		
	Если НЕ ЗначениеЗаполнено(мДокВнутр) Тогда
				
		ФормаДок = Документы.СертификацияНоменклатуры.ПолучитьФормуНовогоДокумента(, ЭтотОбъект, ЭтаФорма);
		ФормаДок.ДокументОбъект.Заполнить(Ссылка);
		ФормаДок.ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийСертификацияНоменклатуры.Внутренняя;
		ФормаДок.ПараметрОснование = Ссылка;
		ФормаДок.ЭтаФорма.ДоступностьВидаОперации = Ложь;
		ФормаДок.ОткрытьМодально();
				
	Иначе
				
		ФормаДок = мДокВнутр.ПолучитьФорму(, ЭтаФорма, ЭтотОбъект);
		ФормаДок.ОткрытьМодально(); 
		
	КонецЕсли;
		
	ОбновлениеСертификации();
	
КонецПроцедуры

мПустаяКартинка = Новый Картинка;