Перем мНовыйКлючСвязи;

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

// Процедура управляет видимостью элементов диалога.
//
Процедура УправлениеДиалогом()
	
	ЭлементыФормы.АвтоподборНоменклатуры.ОтборСтрок.КлючСвязи.Установить(КлючСвязи);
	ЭлементыФормы.АвтоподборНоменклатуры.НастройкаОтбораСтрок.КлючСвязи.Доступность = Ложь;
	
	ЭлементыФормы.АвтоподборНоменклатурыОтходы.ОтборСтрок.КлючСвязи.Установить(КлючСвязи);
	ЭлементыФормы.АвтоподборНоменклатурыОтходы.НастройкаОтбораСтрок.КлючСвязи.Доступность = Ложь;
	
	Если ВариантАвтоподбора = Перечисления.ВариантыАвтоподбораНоменклатуры.ПолучитьИзСвойства Тогда
		ЭлементыФормы.ПанельЗначений.Свертка = РежимСверткиЭлементаУправления.Верх;
	Иначе
		ЭлементыФормы.ПанельЗначений.Свертка = РежимСверткиЭлементаУправления.Нет;
	КонецЕсли;
	
КонецПроцедуры // УправлениеДиалогом()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Проверим тип реквизита формы СтруктураПараметровФормы. Должен быть "Структура".
	// При неверном типе не будем запускать подбор.
	Если ТипЗнч(СтруктураИсходныхПараметров) <> Тип("Структура") Тогда
		
		Отказ = Истина;
		Возврат;

	КонецЕсли;
	
	СтруктураИсходныхПараметров.Свойство("НомерСтрокиТабличнойЧасти", 	НомерСтрокиТабличнойЧасти);
	СтруктураИсходныхПараметров.Свойство("ИмяТабличнойЧасти", 			ИмяТабличнойЧасти);
	
	Если НомерСтрокиТабличнойЧасти = 0 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если ИмяТабличнойЧасти = Неопределено Тогда
		ИмяТабличнойЧасти = "ИсходныеКомплектующие";
	КонецЕсли;
	
	СтрокаТабличнойЧасти = СправочникОбъект[ИмяТабличнойЧасти].Получить(НомерСтрокиТабличнойЧасти - 1);
	ВариантАвтоподбора = СтрокаТабличнойЧасти.ВариантАвтоподбора;
	Свойство = СтрокаТабличнойЧасти.Свойство;
	КлючСвязи = СтрокаТабличнойЧасти.КлючСвязи;
	Если КлючСвязи = 0 Тогда
		КлючСвязи = УчетСерийныхНомеров.ПолучитьНовыйКлючСвязи(мПараметрыСвязиСтрокТЧ, СправочникОбъект, ИмяТабличнойЧасти, Истина);
		мНовыйКлючСвязи = Истина;
	КонецЕсли;
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()
	
	УправлениеДиалогом();
	
	Если ИмяТабличнойЧасти = "ИсходныеКомплектующие" Тогда
		ЭлементыФормы.ПанельЗначений.ТекущаяСтраница = ЭлементыФормы.ПанельЗначений.Страницы.ИсходныеКомплектующие;
	Иначе
		ЭлементыФормы.ПанельЗначений.ТекущаяСтраница = ЭлементыФормы.ПанельЗначений.Страницы.ВозвратныеОтходы;
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "ПриПовторномОткрытии" формы.
//
Процедура ПриПовторномОткрытии(СтандартнаяОбработка)
	
	СтруктураИсходныхПараметров.Свойство("НомерСтрокиТабличнойЧасти", 	НомерСтрокиТабличнойЧасти);
	
	Если НомерСтрокиТабличнойЧасти = 0 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ИмяТабличнойЧасти = "ИсходныеКомплектующие";
	
	СтрокаТабличнойЧасти = СправочникОбъект[ИмяТабличнойЧасти].Получить(НомерСтрокиТабличнойЧасти - 1);
	ВариантАвтоподбора = СтрокаТабличнойЧасти.ВариантАвтоподбора;
	Свойство = СтрокаТабличнойЧасти.Свойство;
	КлючСвязи = СтрокаТабличнойЧасти.КлючСвязи;
	Если КлючСвязи = 0 Тогда
		КлючСвязи = УчетСерийныхНомеров.ПолучитьНовыйКлючСвязи(мПараметрыСвязиСтрокТЧ, СправочникОбъект, ИмяТабличнойЧасти, Истина);
		мНовыйКлючСвязи = Истина;
	КонецЕсли;
	
	УправлениеДиалогом();
	
КонецПроцедуры // ПриПовторномОткрытии()

// Процедура - обработчик события "ПередЗакрытием" формы.
//
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры // ПередЗакрытием()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при нажатии кнопки "ОК" командной панели формы.
//
Процедура ОсновныеДействияФормыОк(Кнопка)
	
	Закрыть();
	
	СтрокаТабличнойЧасти = СправочникОбъект[ИмяТабличнойЧасти].Получить(НомерСтрокиТабличнойЧасти - 1);
	Если мНовыйКлючСвязи Тогда
		СтрокаТабличнойЧасти.КлючСвязи = КлючСвязи;
	КонецЕсли;
	СтрокаТабличнойЧасти.ВариантАвтоподбора = ВариантАвтоподбора;
	СтрокаТабличнойЧасти.Свойство = Свойство;
	
	ТекстПредставления = Строка(ВариантАвтоподбора) + ": " + Строка(Свойство);
	СтрокаТабличнойЧасти.Номенклатура = ТекстПредставления;
	
КонецПроцедуры // ОсновныеДействияФормыОк()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик события "ПриИзменении" поля "ВариантАвтоподбора".
//
Процедура ВариантАвтоподбораПриИзменении(Элемент)
	
	УправлениеДиалогом();
	
КонецПроцедуры // ВариантАвтоподбораПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля "Свойство".
//
Процедура СвойствоПриИзменении(Элемент)
	
	Если ВариантАвтоподбора = Перечисления.ВариантыАвтоподбораНоменклатуры.ПолучитьИзСвойства
	   И ЗначениеЗаполнено(Элемент.Значение)
	   И Элемент.Значение.ТипЗначения <> Новый ОписаниеТипов("СправочникСсылка.Номенклатура") Тогда
		
		Предупреждение("Необходимо выбирать свойство с типом значения ""Справочник ссылка: Номенклатура""");
		Свойство = Неопределено;
		Возврат;
		
	КонецЕсли;
	
	Для Каждого СтрокаТабличнойЧасти Из АвтоподборНоменклатуры Цикл
		Если СтрокаТабличнойЧасти.КлючСвязи <> КлючСвязи Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТабличнойЧасти.Значение = Свойство.ТипЗначения.ПривестиЗначение(СтрокаТабличнойЧасти.Значение);
	КонецЦикла;
	
КонецПроцедуры // СвойствоПриИзменении()

// Процедура - обработчик события "НачалоВыбора" поля "Свойство".
//
Процедура СвойствоНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбора = ПланыВидовХарактеристик.СвойстваОбъектов.ПолучитьФормуВыбора(, Элемент);
	ФормаВыбора.Отбор.НазначениеСвойства.Установить(ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры);
	
	Если ЗначениеЗаполнено(Элемент.Значение) Тогда
		ФормаВыбора.ПараметрТекущаяСтрока = Элемент.Значение;
	КонецЕсли;
	
	ФормаВыбора.Открыть();
	
КонецПроцедуры // СвойствоНачалоВыбора()

// Процедура - обработчик события "ОбработкаВыбора" поля "Свойство".
//
Процедура СвойствоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВариантАвтоподбора = Перечисления.ВариантыАвтоподбораНоменклатуры.ПолучитьИзСвойства
	   И ВыбранноеЗначение.ТипЗначения <> Новый ОписаниеТипов("СправочникСсылка.Номенклатура") Тогда
		
		Предупреждение("Необходимо выбирать свойство с типом значения ""Справочник ссылка: Номенклатура""");
		СтандартнаяОбработка = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры // СвойствоОбработкаВыбора()

// Процедура - обработчик события "ПриНачалеРедактирования" табличной части "АвтоподборНоменклатуры".
//
Процедура АвтоподборНоменклатурыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	СтрокаТабличнойЧасти = Элемент.ТекущиеДанные;
	
	Если НоваяСтрока Тогда
		СтрокаТабличнойЧасти.КлючСвязи = КлючСвязи;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Свойство) Тогда
		СтрокаТабличнойЧасти.Значение = Свойство.ТипЗначения.ПривестиЗначение(СтрокаТабличнойЧасти.Значение);
	КонецЕсли;
	
КонецПроцедуры // АвтоподборНоменклатурыПриНачалеРедактирования()

// Процедура - обработчик события "ПриИзменении" поля "Номенклатура" табличной части "АвтоподборНоменклатуры".
//
Процедура АвтоподборНоменклатурыНоменклатураПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = ЭлементыФормы.АвтоподборНоменклатуры.ТекущиеДанные;
	Если СтрокаТабличнойЧасти.Номенклатура <> СтрокаТабличнойЧасти.ЕдиницаИзмерения.Владелец Тогда
		СтрокаТабличнойЧасти.ЕдиницаИзмерения = Неопределено;
	КонецЕсли;
	
	Если ТипЗнч(СтрокаТабличнойЧасти.Номенклатура) = Тип("СправочникСсылка.Номенклатура") 
	   И ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) Тогда
		СтрокаТабличнойЧасти.ЕдиницаИзмерения = СтрокаТабличнойЧасти.Номенклатура.ЕдиницаХраненияОстатков;
	КонецЕсли;
	
КонецПроцедуры // АвтоподборНоменклатурыНоменклатураПриИзменении()

// Процедура - обработчик события "ПриНачалеРедактирования" табличной части "АвтоподборНоменклатурыОтходы".
//
Процедура АвтоподборНоменклатурыОтходыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	СтрокаТабличнойЧасти = Элемент.ТекущиеДанные;
	
	Если НоваяСтрока Тогда
		СтрокаТабличнойЧасти.КлючСвязи = КлючСвязи;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Свойство) Тогда
		СтрокаТабличнойЧасти.Значение = Свойство.ТипЗначения.ПривестиЗначение(СтрокаТабличнойЧасти.Значение);
	КонецЕсли;
	
КонецПроцедуры // АвтоподборНоменклатурыОтходыПриНачалеРедактирования()

// Процедура - обработчик события "ПриИзменении" поля "Номенклатура" табличной части "АвтоподборНоменклатуры".
//
Процедура АвтоподборНоменклатурыОтходыНоменклатураПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = ЭлементыФормы.АвтоподборНоменклатурыОтходы.ТекущиеДанные;
	Если СтрокаТабличнойЧасти.Номенклатура <> СтрокаТабличнойЧасти.ЕдиницаИзмерения.Владелец Тогда
		СтрокаТабличнойЧасти.ЕдиницаИзмерения = Неопределено;
	КонецЕсли;
	
	Если ТипЗнч(СтрокаТабличнойЧасти.Номенклатура) = Тип("СправочникСсылка.Номенклатура") 
	   И ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) Тогда
		СтрокаТабличнойЧасти.ЕдиницаИзмерения = СтрокаТабличнойЧасти.Номенклатура.ЕдиницаХраненияОстатков;
	КонецЕсли;
	
КонецПроцедуры // АвтоподборНоменклатурыОтходыНоменклатураПриИзменении()

// Процедура - обработчик события "НачалоВыбора" поля "Значение" табличной части "АвтоподборНоменклатуры".
//
Процедура АвтоподборНоменклатурыЗначениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Если ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.ЗначенияСвойствОбъектов") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ФормаВыбора = Справочники.ЗначенияСвойствОбъектов.ПолучитьФормуВыбора(,Элемент);
		ФормаВыбора.Отбор.Владелец.Использование = истина;
		ФормаВыбора.Отбор.Владелец.Значение = Свойство;
		ФормаВыбора.Открыть();
		
	КонецЕсли;
	
КонецПроцедуры


мНовыйКлючСвязи = Ложь;