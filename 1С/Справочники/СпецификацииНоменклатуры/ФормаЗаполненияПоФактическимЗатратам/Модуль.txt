////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Функция формирует текст запроса по фактическим затратам на выпуск указанного количества продукции.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция СформироватьТекстЗапросаПоФактическимЗатратамНаПродукцию()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗатратыНаВыпуск.СтатьяЗатрат,
	|	ЗатратыНаВыпуск.Затрата КАК Материал,
	|	ЗатратыНаВыпуск.ХарактеристикаЗатраты КАК ХарактеристикаМатериала,
	|	ЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|	(
	|		&КоличествоПродукции *
	|		&Коэффициент *
	|		ВЫБОР КОГДА МАКСИМУМ(
	|			ЕСТЬNULL(ВыпускПродукции.Количество, 0) +
	|			ЕСТЬNULL(ВыпускПродукцииНаработка.Количество, 0)
	|			) = 0
	|		ТОГДА
	|			СУММА(ЗатратыНаВыпуск.Количество)
	|		ИНАЧЕ
	|			СУММА(ЗатратыНаВыпуск.Количество) /
	|			МАКСИМУМ(
	|				ЕСТЬNULL(ВыпускПродукции.Количество, 0) +
	|				ЕСТЬNULL(ВыпускПродукцииНаработка.Количество, 0)
	|				)	
	|		КОНЕЦ
	|	) КАК Количество
	|ИЗ (
	|	ВЫБРАТЬ
	|		ЗатратыНаВыпуск.СтатьяЗатрат,
	|		ЗатратыНаВыпуск.Затрата,
	|		ЗатратыНаВыпуск.ХарактеристикаЗатраты,
	|		СУММА(ЗатратыНаВыпуск.Количество) КАК Количество
	|	ИЗ
	|		РегистрНакопления.ЗатратыНаВыпускПродукции КАК ЗатратыНаВыпуск
	|		
	|	ГДЕ
	|		ЗатратыНаВыпуск.Период МЕЖДУ &НачДата И &КонДата
	|		И ЗатратыНаВыпуск.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОперацийЗатратыНаВыпускПродукции.ПрямыеЗатраты)
	|	{ГДЕ
	|		Подразделение,
	|		Продукция,
	|		ХарактеристикаПродукции,
	|		Спецификация
	|	}
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗатратыНаВыпуск.СтатьяЗатрат,
	|		ЗатратыНаВыпуск.Затрата,
	|		ЗатратыНаВыпуск.ХарактеристикаЗатраты
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗатратыНаВыпуск.СтатьяЗатрат,
	|		ЗатратыНаВыпуск.Затрата,
	|		ЗатратыНаВыпуск.ХарактеристикаЗатраты,
	|		ЗатратыНаВыпуск.КоличествоОстаток КАК Количество
	|	ИЗ
	|		РегистрНакопления.ЗатратыНаВыпускПродукцииНаработка.Остатки(&КонДата,
	|			{
	|			Подразделение,
	|			Продукция,
	|			ХарактеристикаПродукции
	|			}
	|		) КАК ЗатратыНаВыпуск
	|		
	|	) КАК ЗатратыНаВыпуск
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			СУММА(Количество) КАК Количество
	|		ИЗ
	|			РегистрНакопления.ВыпускПродукции КАК ВыпускПродукции
	|		ГДЕ
	|			ВыпускПродукции.Период МЕЖДУ &НачДата И &КонДата
	|			И ВыпускПродукции.КодОперации Не В (&ИсключаемыеКодыОпераций)
	|		{ГДЕ
	|			Подразделение,
	|			Продукция,
	|			ХарактеристикаПродукции,
	|			Спецификация
	|		}
	|		) КАК ВыпускПродукции
	|	ПО
	|		Истина
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			СУММА(КоличествоПриход) КАК Количество
	|		ИЗ
	|			РегистрНакопления.ВыпускПродукцииНаработка.Обороты(&НачДата, &КонДата, Период,
	|				{
	|				Подразделение,
	|				Продукция,
	|				ХарактеристикаПродукции
	|				}
	|			) КАК ВыпускПродукции
	|		) КАК ВыпускПродукцииНаработка
	|	ПО 
	|		ИСТИНА
	|	
	|СГРУППИРОВАТЬ ПО
	|	ЗатратыНаВыпуск.СтатьяЗатрат,
	|	ЗатратыНаВыпуск.Затрата,
	|	ЗатратыНаВыпуск.ХарактеристикаЗатраты
	|	
	|УПОРЯДОЧИТЬ ПО
	|	Затрата,
	|	ХарактеристикаЗатраты,
	|	СтатьяЗатрат
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // СформироватьТекстЗапросаПоФактическимЗатратамНаПродукцию()

// Функция формирует текст запроса по фактическим затратам на выпуск указанного количества продукции.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция СформироватьТекстЗапросаПоФактическимЗатратамНаПродукциюРасширеннаяАналитика()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	РегистрАналитикаУчетаЗатрат.СтатьяЗатрат,
	|	РегистрАналитикаУчетаЗатрат.Затрата КАК Материал,
	|	РегистрАналитикаУчетаЗатрат.ХарактеристикаЗатраты КАК ХарактеристикаМатериала,
	|	РегистрАналитикаУчетаЗатрат.Затрата.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|	(
	|		&КоличествоПродукции *
	|		&Коэффициент *
	|		ВЫБОР КОГДА СУММА(ЕСТЬNULL(ВыпускПродукции.КоличествоПриход, 0)) = 0 ТОГДА
	|			СУММА(ЗатратыНаВыпуск.КоличествоПриход)
	|		ИНАЧЕ
	|			СУММА(ЗатратыНаВыпуск.КоличествоПриход) /
	|			СУММА(ЕСТЬNULL(ВыпускПродукции.КоличествоПриход, 0))
	|		КОНЕЦ
	|	) КАК Количество
	|ИЗ
	|	РегистрНакопления.УчетЗатрат.Обороты(&НачДата, &КонДата, Период) КАК ЗатратыНаВыпуск
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			РегистрАналитикаВидаУчета.Ссылка
	|		ИЗ
	|			РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|		ГДЕ
	|			(РегистрАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.ЗатратыНаВыпуск)
	|			ИЛИ РегистрАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.ЗатратыПоНаработке))
	|			И РегистрАналитикаВидаУчета.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|		{
	|		ГДЕ
	|			Подразделение
	|		}
	|		) КАК РегистрАналитикаВидаУчета
	|	ПО 
	|		ЗатратыНаВыпуск.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			РегистрАналитикаРаспределенияЗатрат.Ссылка
	|		ИЗ
	|			РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрАналитикаРаспределенияЗатрат
	|		{
	|		ГДЕ
	|			Продукция,
	|			ХарактеристикаПродукции,
	|			Спецификация
	|		}
	|		) КАК РегистрАналитикаРаспределенияЗатрат
	|	ПО 
	|		ЗатратыНаВыпуск.АналитикаРаспределенияЗатрат = РегистрАналитикаРаспределенияЗатрат.Ссылка
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаЗатрат КАК РегистрАналитикаУчетаЗатрат
	|	ПО 
	|		ЗатратыНаВыпуск.АналитикаУчетаЗатрат = РегистрАналитикаУчетаЗатрат.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.УчетЗатрат.Обороты(&НачДата, &КонДата, Период,
	|			АналитикаВидаУчета В (
	|				ВЫБРАТЬ
	|					РегистрАналитикаВидаУчета.Ссылка
	|				ИЗ
	|					РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|				ГДЕ
	|					РегистрАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Выпуск)
	|					ИЛИ РегистрАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Наработка)
	|				{
	|				ГДЕ
	|					Подразделение
	|				}
	|			)
	|		) КАК ВыпускПродукции
	|	ПО
	|		ЗатратыНаВыпуск.АналитикаРаспределенияЗатрат = ВыпускПродукции.АналитикаРаспределенияЗатрат
	|		
	|СГРУППИРОВАТЬ ПО
	|	РегистрАналитикаУчетаЗатрат.СтатьяЗатрат,
	|	РегистрАналитикаУчетаЗатрат.Затрата,
	|	РегистрАналитикаУчетаЗатрат.ХарактеристикаЗатраты
	|		
	|УПОРЯДОЧИТЬ ПО
	|	Затрата,
	|	ХарактеристикаЗатраты,
	|	СтатьяЗатрат
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // СформироватьТекстЗапросаПоФактическимЗатратамНаПродукциюРасширеннаяАналитика()

// Функция получает построитель запроса по фактическим затратам на продукцию.
//
// Возвращаемое значение:
//	ПостроительЗапроса - Построитель запроса
//
Функция ПолучитьПостроительЗапросаПоФактическимЗатратамНаПродукцию()
	
	НачДата = ?(ЗначениеЗаполнено(ДатаНачалаПериода), НачалоДня(ДатаНачалаПериода), Дата(1980, 01, 01));
	КонДата = ?(ЗначениеЗаполнено(ДатаОкончанияПериода), КонецДня(ДатаОкончанияПериода), Дата(2099, 12, 31));
	
	ИспользоватьРасширеннуюАналитику = глЗначениеПеременной("ИспользоватьРасширеннуюАналитикуУчетаНоменклатурыИЗатрат") 
		И (глЗначениеПеременной("ДатаНачалаИспользованияРасширеннойАналитикиУчетаНоменклатурыИЗатрат") <= КонДата);
	
	Если ИспользоватьРасширеннуюАналитику Тогда
		ТекстЗапроса = СформироватьТекстЗапросаПоФактическимЗатратамНаПродукциюРасширеннаяАналитика();	
	Иначе
		ТекстЗапроса = СформироватьТекстЗапросаПоФактическимЗатратамНаПродукцию();
	КонецЕсли;
	
	ПостроительЗапроса = Новый ПостроительЗапроса;
	ПостроительЗапроса.Текст = ТекстЗапроса;
	ПостроительЗапроса.Параметры.Вставить("НачДата", НачДата);
	ПостроительЗапроса.Параметры.Вставить("КонДата", КонДата);
	ПостроительЗапроса.Параметры.Вставить("КоличествоПродукции", Количество);
	ПостроительЗапроса.Параметры.Вставить("Коэффициент", ЕдиницаИзмерения.Коэффициент);
	
	ИсключаемыеКодыОпераций = Новый Массив;
	ИсключаемыеКодыОпераций.Добавить(Перечисления.КодыОперацийВыпускПродукции.ВозвратМатериаловИзПроизводстваРасч);
	ИсключаемыеКодыОпераций.Добавить(Перечисления.КодыОперацийВыпускПродукции.ВозвратМатериаловИзПроизводстваФикс);
	ИсключаемыеКодыОпераций.Добавить(Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииПоФиксированнойСтоимости);
	ИсключаемыеКодыОпераций.Добавить(Перечисления.КодыОперацийВыпускПродукции.КорректировкаНЗПРасч);
	ИсключаемыеКодыОпераций.Добавить(Перечисления.КодыОперацийВыпускПродукции.КорректировкаНЗПФикс);
	ИсключаемыеКодыОпераций.Добавить(Перечисления.КодыОперацийВыпускПродукции.ОприходованиеНЗП);
	ИсключаемыеКодыОпераций.Добавить(Перечисления.КодыОперацийВыпускПродукции.СписаниеНЗП);
	ИсключаемыеКодыОпераций.Добавить(Перечисления.КодыОперацийВыпускПродукции.СписаниеНЗПФикс);
	ПостроительЗапроса.Параметры.Вставить("ИсключаемыеКодыОпераций", ИсключаемыеКодыОпераций);
	
	ПостроительЗапроса.Отбор.Добавить("Продукция");
	ПостроительЗапроса.Отбор.Добавить("ХарактеристикаПродукции");
	ПостроительЗапроса.Отбор.Добавить("Подразделение");
	ПостроительЗапроса.Отбор.Добавить("Спецификация");
	
	ПостроительЗапроса.Отбор.Продукция.Значение = Номенклатура;
	ПостроительЗапроса.Отбор.ХарактеристикаПродукции.Значение = ХарактеристикаНоменклатуры;
	ПостроительЗапроса.Отбор.Подразделение.Значение = Подразделение;
	ПостроительЗапроса.Отбор.Спецификация.Значение = Спецификация;
	
	ПостроительЗапроса.Отбор.Продукция.Использование = Истина;
	ПостроительЗапроса.Отбор.ХарактеристикаПродукции.Использование = ЗначениеЗаполнено(ХарактеристикаНоменклатуры);
	ПостроительЗапроса.Отбор.Подразделение.Использование = ЗначениеЗаполнено(Подразделение);
	ПостроительЗапроса.Отбор.Спецификация.Использование = ЗначениеЗаполнено(Спецификация);
	
	Возврат ПостроительЗапроса;
	
КонецФункции // ПолучитьПостроительЗапросаПоФактическимЗатратамНаПродукцию()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()
	
	ДатаПериода = НачалоМесяца(РабочаяДата) - 1;
	ДатаНачалаПериода = НачалоМесяца(ДатаПериода); // Начало предыдущего месяца
	ДатаОкончанияПериода = КонецМесяца(ДатаПериода); // Конец предыдущего месяца
	
	Если ВидСпецификации = Перечисления.ВидыСпецификаций.Сборочная
	   И ВыходныеИзделия.Количество() > 0
	Тогда
	
		СтрокаТабличнойЧасти = ВыходныеИзделия[0];
		Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ХарактеристикаНоменклатуры = СтрокаТабличнойЧасти.ХарактеристикаНоменклатуры;
		Количество = СтрокаТабличнойЧасти.Количество;
		ЕдиницаИзмерения = СтрокаТабличнойЧасти.ЕдиницаИзмерения;
		
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при нажатии кнопки "Заполнить" командной панели.
//
Процедура КоманднаяПанельФактЗатратыЗаполнить(Кнопка)
	
	ПолучитьПостроитель = ПолучитьПостроительЗапросаПоФактическимЗатратамНаПродукцию();
	РезультатЗапроса = ПолучитьПостроитель.Результат;
	
	ФактЗатраты.Очистить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Количество > 0 Тогда
			НоваяСтрока = ФактЗатраты.Добавить();
			НоваяСтрока.Материал = Выборка.Материал;
			НоваяСтрока.ХарактеристикаМатериала = Выборка.ХарактеристикаМатериала;
			НоваяСтрока.СтатьяЗатрат = Выборка.СтатьяЗатрат;
			НоваяСтрока.ЕдиницаИзмерения = Выборка.ЕдиницаИзмерения;
			НоваяСтрока.Количество = Выборка.Количество;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // КоманднаяПанельФактЗатратыЗаполнить()

// Процедура вызывается при нажатии кнопки "ОК" командной панели.
//
Процедура ОсновныеДействияФормыОсновныеДействияФормыОК(Кнопка)
	
	Закрыть(ФактЗатраты.Скопировать());
	
КонецПроцедуры // ОсновныеДействияФормыОсновныеДействияФормыОК()

// Процедура - обработчик события "Нажатие" кнопки настройки периода.
//
Процедура КнопкаНастройкаПериодаНажатие(Элемент)
	
	МассивДат = УправлениеОтчетами.ВвестиПериод(ДатаНачалаПериода, ДатаОкончанияПериода);
	
	Если ТипЗнч(МассивДат) = Тип("Массив") Тогда
		
		ДатаНачалаПериода = МассивДат[0];
		ДатаОкончанияПериода = МассивДат[1];
		
	КонецЕсли; 

КонецПроцедуры // КнопкаНастройкаПериодаНажатие()