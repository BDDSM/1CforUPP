////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мСтароеНаименование; //запоминаем наименование способа которое было при открытии формы
Перем мСведенияОСчетах;  // для получения сведений о счетах на время работы формы
Перем мСведенияОСтатьяхЗатрат;  // для получения сведений о статьях затрат на время работы формы

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Управляет видимостью элементов формы "Способ распределения затрат"
//
Процедура УстановитьВидимостьСпособаРаспределения(СчетДт)

	СведенияОСчете = БухгалтерскийУчетДополнительный.ПолучитьСведенияОСчете(мСведенияОСчетах, СчетДт);
	СведенияОСтатьеЗатрат = Неопределено;
	Для Ном = 1 по 3 Цикл
		Если ТипЗнч(ЭлементыФормы["СубконтоДт" + Ном].Значение)= Тип("СправочникСсылка.СтатьиЗатрат") Тогда
			СведенияОСтатьеЗатрат = БухгалтерскийУчет.ПолучитьСведенияОСтатьеЗатрат(мСведенияОСтатьяхЗатрат, ЭлементыФормы["СубконтоДт" + Ном].Значение);
		КонецЕсли;	
	КонецЦикла;
	
	Если СведенияОСтатьеЗатрат <> Неопределено Тогда
		УсловиеВидимости = СведенияОСтатьеЗатрат.ХарактерЗатрат = Перечисления.ХарактерЗатрат.ПроизводственныеРасходы;	
		ЭлементыФормы["СпособРаспределенияЗатрат"].Видимость		= УсловиеВидимости;
		ЭлементыФормы["НадписьСпособРаспределенияЗатрат"].Видимость	= УсловиеВидимости;
	Иначе
		ЭлементыФормы["СпособРаспределенияЗатрат"].Видимость		= Ложь;
		ЭлементыФормы["НадписьСпособРаспределенияЗатрат"].Видимость	= Ложь;
		
	КонецЕсли; 

КонецПроцедуры

Процедура УстановитьВидимостьСубконто(Счет, ДтКт)
	
	ВидыСубконтоСчета = Счет.ВидыСубконто;
	КоличествоСубконто = ВидыСубконтоСчета.Количество();
	Для Ном = 1 по 3 Цикл
		
		Если Ном <= КоличествоСубконто и ЗначениеЗаполнено(Счет) Тогда
			
			Если ВидыСубконтоСчета[Ном-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации Тогда
				СтрокаНадпись = "Сотрудники:";
				ЭлементыФормы["Субконто"+ДтКт+Ном].Видимость          = Ложь;
				ЭлементыФормы["Субконто"+ДтКт+Ном+"Строка"].Видимость = Истина;
				ЭлементыФормы["Субконто"+ДтКт+Ном+"Строка"].Значение  = "< подбирается автоматически >"
			ИначеЕсли ВидыСубконтоСчета[Ном-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидНачисленийОплатыТрудаПоСтатье255НК Тогда
				СтрокаНадпись = "Вид начислений:";
				ЭлементыФормы["Субконто"+ДтКт+Ном].Видимость          = Истина;
				ЭлементыФормы["Субконто"+ДтКт+Ном+"Строка"].Видимость = Ложь;
			Иначе
				СтрокаНадпись = Строка(ВидыСубконтоСчета[Ном-1].ВидСубконто)+":";
				ЭлементыФормы["Субконто"+ДтКт+Ном].Видимость          = Истина;
				ЭлементыФормы["Субконто"+ДтКт+Ном+"Строка"].Видимость = Ложь;
			КонецЕсли;
			
			ЭлементыФормы["НадписьСубконто"+ДтКт+Ном].Заголовок = СтрокаНадпись;
			ЭлементыФормы["НадписьСубконто"+ДтКт+Ном].Видимость = Истина;
			
		Иначе
			ЭлементыФормы["НадписьСубконто"+ДтКт+Ном].Видимость   = Ложь;
			ЭлементыФормы["Субконто"+ДтКт+Ном].Видимость          = Ложь;
			ЭлементыФормы["Субконто"+ДтКт+Ном+"Строка"].Видимость = Ложь;
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ОбработатьИзменениеСчета(Счет, ДтКт)
	
	УстановитьТипыСубконто(Счет, ДтКт);
	УстановитьВидимостьСубконто(Счет, ДтКт);
	Если ДтКт = "Дт" Тогда
		УстановитьВидимостьСпособаРаспределения(Счет)
	КонецЕсли; 

КонецПроцедуры

// Функция формирует наименование способа отражения
// Возвращаемое значение:
//   <Строка>   – наименование способа отражения
Функция ПолучитьНаименованиеСпособаОтражения()

	НаименовниеДебета = "";
	СубконтоДебета = "";
	Если ЗначениеЗаполнено(СчетДт) Тогда
		ВидыСубконтоСчета = СчетДт.ВидыСубконто;
		Для Ном = 1 по ВидыСубконтоСчета.Количество() Цикл
			Если ЗначениеЗаполнено(ЭтотОбъект["СубконтоДт"+Ном]) Тогда
				СубконтоДебета = СубконтоДебета + "<" + ЭтотОбъект["СубконтоДт"+Ном] + "> ";	
			ИначеЕсли ВидыСубконтоСчета[Ном-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации Тогда
				//пропускаем
			ИначеЕсли ВидыСубконтоСчета[Ном-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения Тогда	
				СубконтоДебета = СубконтоДебета + "<подб. авт.> ";
			Иначе
				СубконтоДебета = СубконтоДебета + "<...> ";
			КонецЕсли;	
		КонецЦикла;
		НаименовниеДебета = "Дт" + СчетДт + " " + СубконтоДебета;
	КонецЕсли;
	
	НаименовниеКредита = "";
	СубконтоКредита = "";
	Если ЗначениеЗаполнено(СчетКт) Тогда
		ВидыСубконтоСчета = СчетКт.ВидыСубконто;
		Для Ном = 1 по ВидыСубконтоСчета.Количество() Цикл
			Если ЗначениеЗаполнено(ЭтотОбъект["СубконтоКт"+Ном]) Тогда
				СубконтоКредита = СубконтоКредита + "<" + ЭтотОбъект["СубконтоКт"+Ном] + "> ";	
			ИначеЕсли ВидыСубконтоСчета[Ном-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации Тогда
				//пропускаем
			ИначеЕсли ВидыСубконтоСчета[Ном-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения Тогда	
				СубконтоКредита = СубконтоКредита + "<подб. авт.> ";
			Иначе
				СубконтоКредита = СубконтоКредита + "<...> ";
			КонецЕсли;	
		КонецЦикла;
		НаименовниеКредита = "Кт" + СчетКт + " " + СубконтоКредита;
	КонецЕсли;
	
	Возврат СОКРЛП(НаименовниеДебета + " " + НаименовниеКредита);


КонецФункции // ПолучитьНаименованиеСпособаОтражения()

Процедура ОткрытьФормуВыбораЗначенияСубконто(ВидыСубконтоСчета, НомерСубконто, ВладелецФормы)
	
	ФормаВыбора = Справочники.Субконто.ПолучитьФормуВыбора( ,ВладелецФормы, );
	ФормаВыбора.Отбор.Владелец.Установить(ВидыСубконтоСчета[НомерСубконто-1].ВидСубконто);
	ФормаВыбора.ВидСубконто = ВидыСубконтоСчета[НомерСубконто-1].ВидСубконто;
	ФормаВыбора.ЭлементыФормы.ВидСубконто.ТолькоПросмотр = Истина;
	ФормаВыбора.Открыть();	
	
КонецПроцедуры

Процедура УстановитьСчетДтНУ(Элемент)

	СчетДтНУ = БухгалтерскийУчетДополнительный.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ", Элемент.Значение));
	ОбработатьИзменениеСчета(СчетДтНУ, "ДтНУ");

КонецПроцедуры

Процедура УстановитьСчетКтНУ(Элемент)

	СчетКтНУ = БухгалтерскийУчетДополнительный.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ", Элемент.Значение));
	ОбработатьИзменениеСчета(СчетКтНУ, "КтНУ");

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	мСтароеНаименование = Наименование;
	
	Если Не ЭтоНовый() Тогда
		ЭтоСпособНеОтражатьВБухучете 			  = Ссылка = Справочники.СпособыОтраженияЗарплатыВРеглУчете.НеОтражатьВБухучете;
		ЭтоСпособРаспределятьПоБазовымНачислениям = Ссылка = Справочники.СпособыОтраженияЗарплатыВРеглУчете.РаспределятьПоБазовымНачислениям;
		ЭлементыФормы.Наименование.ТолькоПросмотр = Ссылка.Предопределенный;
		ЭлементыФормы.Наименование.КнопкаСпискаВыбора = Не Ссылка.Предопределенный;
	Иначе
		ЭтоСпособНеОтражатьВБухучете 			  = Ложь;
		ЭтоСпособРаспределятьПоБазовымНачислениям = Ложь;
	КонецЕсли;
	
	Если ЭтоСпособНеОтражатьВБухучете Тогда
		ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.НеОтражатьВБухучете;
	ИначеЕсли ЭтоСпособРаспределятьПоБазовымНачислениям Тогда
		ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.РаспределятьПоБазовымНачислениям;
	Иначе
		ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.НастройкаСпособаОтражения;
		УстановитьВидимостьСубконто(СчетДт,   "Дт");
		УстановитьВидимостьСубконто(СчетКт,   "Кт");
		УстановитьВидимостьСубконто(СчетДтНУ, "ДтНУ");
		УстановитьВидимостьСубконто(СчетКтНУ, "КтНУ");
		ТекущийЭлемент = ЭлементыФормы.СчетДт;
		УстановитьВидимостьСпособаРаспределения(СчетДт);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ПустаяСтрока(Наименование) Тогда
		Наименование = ПолучитьНаименованиеСпособаОтражения();
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПослеЗаписи()
	
	// оповестим форму вида расчета, для обновления отображения ЭУ ОтнесениеРасходовКДеятельностиЕНВД
	Оповестить("ОбновитьОтнесениеРасходовКДеятельностиЕНВД");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура НаименованиеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СписокВозможныхЗначений = Новый СписокЗначений;
	НаименованиеДтКт = "Дт" + СчетДт + " Кт" + СчетКт;
	СписокВозможныхЗначений.Добавить(НаименованиеДтКт);
	
	НаименованиеПоДтКт = ПолучитьНаименованиеСпособаОтражения();
	Если НаименованиеДтКт <> НаименованиеПоДтКт Тогда
		СписокВозможныхЗначений.Добавить(НаименованиеПоДтКт);
	КОнецЕсли;
	
	Если НаименованиеДтКт <> мСтароеНаименование и  НаименованиеПоДтКт <> мСтароеНаименование и ЗначениеЗаполнено(мСтароеНаименование) Тогда
		СписокВозможныхЗначений.Добавить(мСтароеНаименование);
	КонецЕсли;	
	
	Элемент.СписокВыбора = СписокВозможныхЗначений;
	
КонецПроцедуры

Процедура СчетДтОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = БухгалтерскийУчетДополнительный.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение)
КонецПроцедуры

Процедура СчетДтПриИзменении(Элемент)
	
	ОбработатьИзменениеСчета(Элемент.Значение, "Дт");
	УстановитьСчетДтНУ(Элемент);
	
КонецПроцедуры

Процедура СчетКтОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = БухгалтерскийУчетДополнительный.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение)
КонецПроцедуры

Процедура СчетКтПриИзменении(Элемент)
	
	ОбработатьИзменениеСчета(Элемент.Значение, "Кт");
	УстановитьСчетКтНУ(Элемент);
	
КонецПроцедуры

Процедура СчетДтНУПриИзменении(Элемент)
	ОбработатьИзменениеСчета(Элемент.Значение, "ДтНУ");
КонецПроцедуры

Процедура СчетДтНУОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = БухгалтерскийУчетДополнительный.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение)
КонецПроцедуры

Процедура СчетКтНУПриИзменении(Элемент)
	ОбработатьИзменениеСчета(Элемент.Значение, "КтНУ");
КонецПроцедуры

Процедура СчетКтНУОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = БухгалтерскийУчетДополнительный.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение)
КонецПроцедуры

Процедура СубконтоБухучетаПриИзменении(Элемент)
	
	ДтКт = Сред(Элемент.Имя,9,2);
	Если Элемент.Значение = Неопределено Тогда
		ОбработатьИзменениеСчета(?(ДтКт = "Дт", СчетДт, СчетКт), ДтКт);
	Иначе
		// заполним соответствующее субконто НУ
		НомерСубконто = Прав(Элемент.Имя,1);
		Если Не ЗначениеЗаполнено(ЭлементыФормы["Субконто"+ДтКт+"НУ"+НомерСубконто].Значение) Тогда
			ЭлементыФормы["Субконто"+ДтКт+"НУ"+НомерСубконто].Значение = Элемент.Значение;
			УстановитьТипыСубконто(СчетДтНУ, "ДтНУ");
		КонецЕсли;
		УстановитьВидимостьСпособаРаспределения(СчетДт);
	КонецЕсли;
	
КонецПроцедуры

Процедура СубконтоНУПриИзменении(Элемент)
	
	ДтКт = Сред(Элемент.Имя,9,2);
	Если Элемент.Значение = Неопределено Тогда
		ОбработатьИзменениеСчета(?(ДтКт = "Дт", СчетДтНУ, СчетКтНУ), ДтКт+"НУ");
	КонецЕсли;	
	
КонецПроцедуры

Процедура СубконтоБухучетаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Если ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.Субконто") Тогда
		
		СтандартнаяОбработка = Ложь;

		ДтКт = Сред(Элемент.Имя,9,2);
		НомерСубконто = Прав(Элемент.Имя,1);
		Если ДтКт = "Дт" Тогда
			ВидыСубконтоСчета = СчетДт.ВидыСубконто;
		Иначе	
			ВидыСубконтоСчета = СчетКт.ВидыСубконто;
		КонецЕсли;
		
		ОткрытьФормуВыбораЗначенияСубконто(ВидыСубконтоСчета, НомерСубконто, Элемент);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СубконтоНУНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Если ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.Субконто") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ДтКт = Сред(Элемент.Имя,9,2);
		НомерСубконто = Прав(Элемент.Имя,1);
		Если ДтКт = "Дт" Тогда
			ВидыСубконтоСчета = СчетДтНУ.ВидыСубконто;
		Иначе	
			ВидыСубконтоСчета = СчетКтНУ.ВидыСубконто;
		КонецЕсли;
		
		ОткрытьФормуВыбораЗначенияСубконто(ВидыСубконтоСчета, НомерСубконто, Элемент);
		
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мСведенияОСчетах = Новый Соответствие;
мСведенияОСтатьяхЗатрат = Новый Соответствие;