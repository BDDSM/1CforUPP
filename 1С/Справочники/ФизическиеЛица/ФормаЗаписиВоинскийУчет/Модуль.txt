////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	Если НаборЗаписей.Количество() = 0 тогда
		НаборЗаписей.Добавить();
		ЗаписьИзНабора 			= НаборЗаписей[0];
		ЗаписьИзНабора.Период  	= ПериодПриОткрытии;
	КонецЕсли;
	ЗаписьИзНабора 					= НаборЗаписей[0];
	Военкомат						= ЗаписьИзНабора.Военкомат;
	ВУС								= ЗаписьИзНабора.ВУС;
	Годность						= ЗаписьИзНабора.Годность;
	ЗабронированОрганизацией		= ЗаписьИзНабора.ЗабронированОрганизацией;
	Звание							= ЗаписьИзНабора.Звание;
	НаличиеМобпредписания			= ЗаписьИзНабора.НаличиеМобпредписания;
	ОтношениеКВоинскойОбязанности	= ЗаписьИзНабора.ОтношениеКВоинскойОбязанности;
	ОтношениеКВоинскомуУчету		= ЗаписьИзНабора.ОтношениеКВоинскомуУчету;
	Период 							= ?(ЗначениеЗаполнено(ЗаписьИзНабора.Период), ЗаписьИзНабора.Период, '19000101');
	КатегорияЗапаса					= ЗаписьИзНабора.КатегорияЗапаса;
	Состав							= ЗаписьИзНабора.Состав;
	НомерКомандыПартии				= ЗаписьИзНабора.НомерКомандыПартии;
	ФизЛицо							= ЗаписьИзНабора.Физлицо;
	
	Если ФизЛицо.Пустая() тогда
		ИндКнопки = ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Индекс(ЭлементыФормы.ОсновныеДействияФормы.Кнопки.КнопкаИстория);
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Удалить(ИндКнопки);
		
		ИндКнопки = ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Индекс(ЭлементыФормы.ОсновныеДействияФормы.Кнопки.РазделительИстория);
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Удалить(ИндКнопки);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ПодтвердитьИзменения(Кнопка)
	
	ЗаписьИзНабора 			= НаборЗаписей[0];
	// Если что-то поменяли тогда запишем 
	Если ВоенкоматПриОткрытии <> Военкомат ИЛИ
		ВУСПриОткрытии <> ВУС ИЛИ
		ГодностьПриОткрытии <> Годность ИЛИ
		ЗабронированОрганизациейПриОткрытии <> ЗабронированОрганизацией ИЛИ
		ЗваниеПриОткрытии <> Звание ИЛИ
		НаличиеМобпредписанияПриОткрытии <> НаличиеМобпредписания ИЛИ
		ОтношениеКВоинскойОбязанностиПриОткрытии <> ОтношениеКВоинскойОбязанности ИЛИ
		Период <> ПериодПриОткрытии ИЛИ
		ОтношениеКВоинскомуУчетуПриОткрытии <> ОтношениеКВоинскомуУчету Тогда
		
		ЗаписьИзНабора.Период  						 = Период;
		ЗаписьИзНабора.Военкомат					 = Военкомат;
		ЗаписьИзНабора.ВУС							 = ВУС;
		ЗаписьИзНабора.Годность						 = Годность;
		ЗаписьИзНабора.ЗабронированОрганизацией		 = ЗабронированОрганизацией;
		ЗаписьИзНабора.Звание 						 = Звание;
		ЗаписьИзНабора.НаличиеМобпредписания		 = НаличиеМобпредписания;
		ЗаписьИзНабора.ОтношениеКВоинскойОбязанности = ОтношениеКВоинскойОбязанности;
		ЗаписьИзНабора.ОтношениеКВоинскомуУчету		 = ОтношениеКВоинскомуУчету;
		ЗаписьИзНабора.КатегорияЗапаса				 = КатегорияЗапаса;
		ЗаписьИзНабора.Состав						 = Состав;
		ЗаписьИзНабора.НомерКомандыПартии			 = НомерКомандыПартии;
		
	КонецЕсли;
	
	// оповестим все формы, показывающие данные физлица, для которого 
	// редактируются связанные данные
	
	Оповестить("ОбновитьФорму", Новый Структура("ИмяЭлемента","ВоинскийУчет"), ОбщегоНазначенияЗК.ОпределитьОповещаемоеФизЛицо(ФизЛицо, ВладелецФормы));
	
	Закрыть();
	
КонецПроцедуры

Процедура КнопкаИсторияНажатие(Элемент)
	
	ФормаРегистра = РегистрыСведений.ВоинскийУчет.ПолучитьФормуСписка();
	ФормаРегистра.РегистрСведенийСписок.Отбор.ФизЛицо.Значение 					 = ФизЛицо;
	ФормаРегистра.РегистрСведенийСписок.Отбор.ФизЛицо.ВидСравнения 				 = ВидСравнения.Равно;
	ФормаРегистра.РегистрСведенийСписок.Отбор.ФизЛицо.Использование 			 = Истина;
	ФормаРегистра.ЭлементыФормы.РегистрСведенийСписок.НачальноеОтображениеСписка = НачальноеОтображениеСписка.Конец;
	
	ФормаРегистра.Открыть();
	
КонецПроцедуры