Перем ВалютаДляУстановкиКурса;


Процедура ПолучитьИсходныеКурсы()
	
	РегистрКурсов=РегистрыСведений.КурсыВалютПоСценариям;
	ОтборПоВалюте=Новый Структура;
	ОтборПоВалюте.Вставить("Валюта",ВалютаДляУстановкиКурса);
	ОтборПоВалюте.Вставить("Сценарий",Ссылка);		
	
	СтруктураКурсов=РегистрКурсов.ПолучитьПоследнее(ДатаНачалаУстановкиКурсов,ОтборПоВалюте);
	ИсходныйКурс=СтруктураКурсов.Курс;
	КратностьНаИнтервал= СтруктураКурсов.Кратность;

КонецПроцедуры 

Процедура ПоКнопкеОК(Кнопка)

	ТабИзменения=Новый ТаблицаЗначений;
	ТабИзменения.Колонки.Добавить("ДатаКурса");
	ТабИзменения.Колонки.Добавить("Курс");
	ТабИзменения.Колонки.Добавить("Кратность");

	БазовыйКурс=ИсходныйКурс;
	ДатаКурса=ДатаНачалаУстановкиКурсов;

	СтрокаКурсов=ТабИзменения.Добавить();
	СтрокаКурсов.ДатаКурса=ДатаНачалаУстановкиКурсов;
	СтрокаКурсов.Курс=ИсходныйКурс;
    СтрокаКурсов.Кратность=КратностьНаИнтервал;

	Для Индекс=1 По КоличествоПериодовЗаполнения Цикл

		ДатаКурса=ОбщегоНазначения.ДобавитьИнтервал(ДатаКурса,Периодичность,1);

		СтрокаКурсов=ТабИзменения.Добавить();
		СтрокаКурсов.ДатаКурса=ДатаКурса;
        СтрокаКурсов.Кратность=КратностьНаИнтервал;

		Если СпособЗаполнения=Перечисления.ВидыИзмененийПоПериодамБюджетирования.ЦепноеИзменение Тогда

			СтрокаКурсов.Курс=БазовыйКурс+БазовыйКурс*ПриращениеЗаПериод;
			БазовыйКурс=СтрокаКурсов.Курс;

		Иначе

			СтрокаКурсов.Курс=БазовыйКурс+ПриращениеЗаПериод*Индекс;

		КонецЕсли;

	КонецЦикла;

	СтруктураИзменений=Новый Структура;

	СтруктураНастройки=Новый Структура;
	СтруктураНастройки.Вставить("ИсходныйКурс"					,ИсходныйКурс);
	СтруктураНастройки.Вставить("КратностьНаИнтервал"			,КратностьНаИнтервал);
	СтруктураНастройки.Вставить("КоличествоПериодовЗаполнения"	,КоличествоПериодовЗаполнения);
    СтруктураНастройки.Вставить("ПриращениеЗаПериод"			,ПриращениеЗаПериод);
	СтруктураНастройки.Вставить("ДатаНачалаУстановкиКурсов"		,ДатаНачалаУстановкиКурсов);
	СтруктураНастройки.Вставить("СпособЗаполнения"				,СпособЗаполнения);

	СтруктураИзменений.Вставить("Настройка"	,СтруктураНастройки);
	СтруктураИзменений.Вставить("Данные"	,ТабИзменения);
	
	ОповеститьОВыборе(СтруктураИзменений);

КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	Если ТипЗнч(НачальноеЗначениеВыбора)=Тип("Структура") Тогда

		ИсходныйКурс						= НачальноеЗначениеВыбора.ИсходныйКурс;
		КратностьНаИнтервал					= НачальноеЗначениеВыбора.КратностьНаИнтервал;
		КоличествоПериодовЗаполнения		= НачальноеЗначениеВыбора.КоличествоПериодовЗаполнения;
		ПриращениеЗаПериод					= НачальноеЗначениеВыбора.ПриращениеЗаПериод;
		ДатаНачалаУстановкиКурсов			= НачальноеЗначениеВыбора.ДатаНачалаУстановкиКурсов;
		СпособЗаполнения					= НачальноеЗначениеВыбора.СпособЗаполнения;
		
	Иначе
		
		ДатаНачалаУстановкиКурсов=ОбщегоНазначения.ДатаНачалаПериода(РабочаяДата,Ссылка.Периодичность);
		
	КонецЕсли;

	ВалютаДляУстановкиКурса=ЭтаФорма.ВладелецФормы.ВалютаКурсов;
	ЭтаФорма.Заголовок="Установка курсов для валюты "+ВалютаДляУстановкиКурса.Наименование;
		
КонецПроцедуры

Процедура ДатаНачалаУстановкиКурсовПриИзменении(Элемент)

	Элемент.Значение=ОбщегоНазначения.ДатаНачалаПериода(Элемент.Значение,Периодичность); 
	ПолучитьИсходныеКурсы();

КонецПроцедуры

Процедура ДатаНачалаУстановкиКурсовРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;

	Элемент.Значение=ОбщегоНазначения.ДобавитьИнтервал(Элемент.Значение,Ссылка.Периодичность,Направление);
	ПолучитьИсходныеКурсы();
		
КонецПроцедуры