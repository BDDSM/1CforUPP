////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем ДанныеКалендаряИзменены;
Перем ПоказыватьНочныеКолонки;
Перем ПоказыватьВечерниеКолонки;

// Список соответствий 1 - пн, 2 - вт,.... 7 - вс.
Перем ДниНедели;

////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура обновляет строку, содержащую описание текущего графика
//
Процедура ОбновитьИнформационнуюСтроку()
	ИнфСтрока = "";
	Если ВидГрафика = Перечисления.ВидыРабочихГрафиков.КалендарныеДни Тогда
		ИнфСтрока = ИнфСтрока + "График по календарным дням. ";
	ИначеЕсли ВидГрафика = Перечисления.ВидыРабочихГрафиков.Пятидневка 
		И ПериодыСмены.Количество() = 5
		И ПериодыСмены[0].ДеньНедели = Перечисления.ДниНедели.Понедельник И ПериодыСмены[0].ВремяНачала = Дата(1,1,1,8,0,0) И ПериодыСмены[0].ВремяОкончания = Дата(1,1,1,16,0,0)
		И ПериодыСмены[1].ДеньНедели = Перечисления.ДниНедели.Вторник И ПериодыСмены[1].ВремяНачала = Дата(1,1,1,8,0,0) И ПериодыСмены[1].ВремяОкончания = Дата(1,1,1,16,0,0)
		И ПериодыСмены[2].ДеньНедели = Перечисления.ДниНедели.Среда И ПериодыСмены[2].ВремяНачала = Дата(1,1,1,8,0,0) И ПериодыСмены[2].ВремяОкончания = Дата(1,1,1,16,0,0)
		И ПериодыСмены[3].ДеньНедели = Перечисления.ДниНедели.Четверг И ПериодыСмены[3].ВремяНачала = Дата(1,1,1,8,0,0) И ПериодыСмены[3].ВремяОкончания = Дата(1,1,1,16,0,0)
		И ПериодыСмены[4].ДеньНедели = Перечисления.ДниНедели.Пятница И ПериодыСмены[4].ВремяНачала = Дата(1,1,1,8,0,0) И ПериодыСмены[4].ВремяОкончания = Дата(1,1,1,16,0,0) Тогда
		ИнфСтрока = ИнфСтрока + "График пятидневка, 40-часовая рабочая неделя, выходные суббота и воскресенье. ";
	ИначеЕсли ВидГрафика = Перечисления.ВидыРабочихГрафиков.Пятидневка Тогда
		ИнфСтрока = ИнфСтрока + "Вид графика - Пятидневка. ";
	ИначеЕсли ВидГрафика = Перечисления.ВидыРабочихГрафиков.Шестидневка Тогда
		ИнфСтрока = ИнфСтрока + "Вид графика - Шестидневка. ";		
	ИначеЕсли Смены.Количество() = 3 
		И Смены[0].Смена = Справочники.Смены.Смена24Часа
		И Смены[1].Смена = Справочники.Смены.ПустаяСсылка()
		И Смены[2].Смена = Справочники.Смены.ПустаяСсылка() Тогда
		ИнфСтрока = ИнфСтрока + "График сутки через двое. ";	
		ИнфСтрока = ИнфСтрока + "Дата отсчета - " + Формат(ДатаОтсчета, "ДЛФ=Д") + ". ";
	ИначеЕсли Смены.Количество() = 4 
		И Смены[0].Смена = Справочники.Смены.Смена24Часа
		И Смены[1].Смена = Справочники.Смены.ПустаяСсылка()
		И Смены[2].Смена = Справочники.Смены.ПустаяСсылка()
		И Смены[3].Смена = Справочники.Смены.ПустаяСсылка() Тогда
		ИнфСтрока = ИнфСтрока + "График сутки через трое. ";	
		ИнфСтрока = ИнфСтрока + "Дата отсчета - " + Формат(ДатаОтсчета, "ДЛФ=Д") + ". ";
	ИначеЕсли ВидГрафика = Перечисления.ВидыРабочихГрафиков.Сменный Тогда
		ИнфСтрока = ИнфСтрока + "Вид графика - Сменный. ";
		ИнфСтрока = ИнфСтрока + "Дата отсчета - " + Формат(ДатаОтсчета, "ДЛФ=Д") + ". ";
	Иначе	
		ИнфСтрока = ИнфСтрока + "Вид графика - не заполнен. ";
	КонецЕсли;

	Если НЕ ГрафикиРаботыПереопределяемый.ДополнитьИнформационнуюСтроку(ИнфСтрока, Ссылка) Тогда
		Если СуммированныйУчетРабочегоВремени Тогда
			ИнфСтрока = ИнфСтрока + "Суммированный учет рабочего времени. ";		
		КонецЕсли;
		Если СокращенноеРабочееВремя Тогда
			ИнфСтрока = ИнфСтрока + "Сокращенное рабочее время. ";		
		КонецЕсли;
		Если СокращеннаяРабочаяНеделя Тогда
			ИнфСтрока = ИнфСтрока + "Неполная рабочая неделя. ";		
		КонецЕсли;
		Если НеполныйРабочийДень Тогда
			ИнфСтрока = ИнфСтрока + "Неполный рабочий день. ";		
		КонецЕсли;
		Если НЕ ГрафикПолногоРабочегоВремени.Пустая() Тогда
			ИнфСтрока = ИнфСтрока + "График полного рабочего времени: " + ГрафикПолногоРабочегоВремени + ". ";		
		КонецЕсли;
		Если ЗначениеЗаполнено(НачалоДневныхЧасов)
			И (УчитыватьНочныеЧасы ИЛИ УчитыватьВечерниеЧасы) Тогда
			ИнфСтрока = ИнфСтрока + "Начало дневных часов: " + Формат(НачалоДневныхЧасов, "ДФ=Ч:мм") + ". ";		
		КонецЕсли;
		Если ЗначениеЗаполнено(НачалоВечернихЧасов)
			И УчитыватьВечерниеЧасы Тогда
			ИнфСтрока = ИнфСтрока + "Начало вечерних часов: " + Формат(НачалоВечернихЧасов, "ДФ=Ч:мм") + ". ";		
		КонецЕсли;
		Если ЗначениеЗаполнено(НачалоНочныхЧасов)
			И УчитыватьНочныеЧасы Тогда
			ИнфСтрока = ИнфСтрока + "Начало ночных часов: " + Формат(НачалоНочныхЧасов, "ДФ=Ч:мм") + ". ";		
		КонецЕсли;
    КонецЕсли;
	
	ЭлементыФормы.ПараметрыГрафика.Заголовок = ИнфСтрока;
КонецПроцедуры // ОбновитьИнформационнуюСтроку()

// Процедура устанавливает видимость ячеек с вечерними и ночными часами
//
Процедура ОбновитьВидимостьНочныхИВечернихКолонок()
	
	Для ИндексКолонки = 1 По 31 Цикл
		ЭлементыФормы.ТабличноеПолеГрафика.Колонки["ВЧ"+ИндексКолонки].Видимость = ПоказыватьВечерниеКолонки;
		ЭлементыФормы.ТабличноеПолеГрафика.Колонки["НЧ"+ИндексКолонки].Видимость = ПоказыватьНочныеКолонки;
	КонецЦикла;
	
	ЭлементыФормы.ТабличноеПолеГрафика.Колонки.ВечернихЧасовЗаМесяц.Видимость = ПоказыватьВечерниеКолонки;
	ЭлементыФормы.ТабличноеПолеГрафика.Колонки.НочныхЧасовЗаМесяц.Видимость = ПоказыватьНочныеКолонки;
	
	ЭлементыФормы.ТабличноеПолеГрафика.Колонки.ЧасовЗаДень.Видимость = ПоказыватьВечерниеКолонки ИЛИ ПоказыватьНочныеКолонки;
	ЭлементыФормы.ТабличноеПолеГрафика.Колонки.ИзНихВечерних.Видимость = ПоказыватьВечерниеКолонки;
	ЭлементыФормы.ТабличноеПолеГрафика.Колонки.ИзНихНочных.Видимость = ПоказыватьНочныеКолонки;
	
КонецПроцедуры // ОбновитьВидимостьНочныхИВечернихКолонок()

// Процедура очищает записи таблицы графика
//
Процедура КалендарьНаборЗаписейОчистить()
	Для Каждого СтрокаТаблицы Из КалендарьНаборЗаписей Цикл
		Для НомерДня = 1 По 31 Цикл
			СтрокаТаблицы["День" + НомерДня] = 0;
			СтрокаТаблицы["ВЧ" + НомерДня] = 0;
			СтрокаТаблицы["НЧ" + НомерДня] = 0;
		КонецЦикла;
		СтрокаТаблицы.ЧасовЗаМесяц = 0;
		СтрокаТаблицы.ВечернихЧасовЗаМесяц = 0;
		СтрокаТаблицы.НочныхЧасовЗаМесяц = 0;
		СтрокаТаблицы.ДнейЗаМесяц = 0;
	КонецЦикла;
КонецПроцедуры // КалендарьНаборЗаписейОчистить()

// Процедура отображает содержимое таблицы для записи в таблице значениий за месяц
Функция ОтразитьГодВНабореЗаписей(ДатаГода, ПрочитатьИзНабораЗаписей = Ложь)
	
	
	
	КалендарьНаборЗаписейОчистить();
	ДатаНачалаГода = НачалоГода(ДатаГода);
	ДатаКонцаГода = КонецГода(ДатаГода);
	Если ПрочитатьИзНабораЗаписей тогда
		// если не нашли в таблице, тогда прочитаем из регистра сведений
		ЗаполнитьТаблицуЗаИнтервал(ДатаНачалаГода, ДатаКонцаГода);
	КонецЕсли;
	
	ПоказыватьНочныеКолонки = УчитыватьНочныеЧасы;
	ПоказыватьВечерниеКолонки = УчитыватьВечерниеЧасы;
	КоличествоНаденныхДат = 0;
	
	Для Каждого СтрокаТаблицыДляЗаписи Из ТаблицаДляЗаписи Цикл
		Если СтрокаТаблицыДляЗаписи.Дата >= ДатаНачалаГода
			И СтрокаТаблицыДляЗаписи.Дата <= ДатаКонцаГода Тогда
			
			ТекущийМесяц = Месяц(СтрокаТаблицыДляЗаписи.Дата);
			ТекущийДень  = День(СтрокаТаблицыДляЗаписи.Дата);
			
			КалендарьНаборЗаписей[ТекущийМесяц-1]["День" + ТекущийДень] = СтрокаТаблицыДляЗаписи.Часы;
			КалендарьНаборЗаписей[ТекущийМесяц-1].ЧасовЗаМесяц = КалендарьНаборЗаписей[ТекущийМесяц-1].ЧасовЗаМесяц + СтрокаТаблицыДляЗаписи.Часы;
			Если СтрокаТаблицыДляЗаписи.Часы > 0 Тогда
				КалендарьНаборЗаписей[ТекущийМесяц-1].ДнейЗаМесяц = КалендарьНаборЗаписей[ТекущийМесяц-1].ДнейЗаМесяц + 1;
			КонецЕсли;
			
			КалендарьНаборЗаписей[ТекущийМесяц-1]["ВЧ" + ТекущийДень] = СтрокаТаблицыДляЗаписи.ВечерниеЧасы;
			КалендарьНаборЗаписей[ТекущийМесяц-1].ВечернихЧасовЗаМесяц = КалендарьНаборЗаписей[ТекущийМесяц-1].ВечернихЧасовЗаМесяц + СтрокаТаблицыДляЗаписи.ВечерниеЧасы;
			
			КалендарьНаборЗаписей[ТекущийМесяц-1]["НЧ" + ТекущийДень] = СтрокаТаблицыДляЗаписи.НочныеЧасы;
			КалендарьНаборЗаписей[ТекущийМесяц-1].НочныхЧасовЗаМесяц = КалендарьНаборЗаписей[ТекущийМесяц-1].НочныхЧасовЗаМесяц + СтрокаТаблицыДляЗаписи.НочныеЧасы;
			
			ПоказыватьВечерниеКолонки = ПоказыватьВечерниеКолонки ИЛИ СтрокаТаблицыДляЗаписи.ВечерниеЧасы > 0;
			ПоказыватьНочныеКолонки = ПоказыватьНочныеКолонки ИЛИ СтрокаТаблицыДляЗаписи.НочныеЧасы > 0;
			КоличествоНаденныхДат = КоличествоНаденныхДат + 1;
		КонецЕсли;
	КонецЦикла;
	
	ОбновитьВидимостьНочныхИВечернихКолонок();
	
	Возврат КоличествоНаденныхДат;
КонецФункции


// Процедура управляет доступностью реквизитов формы 
Процедура УстановитьДоступностьРеквизитов()
	
	ЭлементыФормы.ТабличноеПолеГрафика.ТолькоПросмотр = (ВидГрафика = Перечисления.ВидыРабочихГрафиков.КалендарныеДни);
	Если ЭтаФорма.ЭтоНовый() Тогда
		ЭлементыФормы.СсылкаИзменитьПараметрыЗаполнения.Видимость = Ложь;
	Иначе
		ЭлементыФормы.СсылкаИзменитьПараметрыЗаполнения.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры //УстановитьДоступностьРеквизитов

//Функция проверяет, заполнен ли график на указанный в форме год
Функция ПроверитьЗаполненностьГрафика(ТекущийГод)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГрафикРаботы", Ссылка);
	Запрос.УстановитьПараметр("НачалоГода",НачалоГода(ТекущийГод));
	Запрос.УстановитьПараметр("КонецГода",КонецГода(ТекущийГод));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ГрафикиРаботыПоВидамВремени.ОсновноеЗначение) КАК ОсновноеЗначение
	|ИЗ
	|	РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|ГДЕ
	|	ГрафикиРаботыПоВидамВремени.ГрафикРаботы = &ГрафикРаботы
	|	И ГрафикиРаботыПоВидамВремени.Месяц МЕЖДУ &НачалоГода И &КонецГода
	|	И ГрафикиРаботыПоВидамВремени.ОсновноеЗначение > 0";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Если Выборка.ОсновноеЗначение > 0 Тогда
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

// Процедура формирует таблицу для вывода графика
//
Процедура СформироватьТаблицуГрафика()
	
			
	//Заполнение месяцев
	
	ДатаМесяца = НачалоГода(ОбщегоНазначения.ПолучитьРабочуюДату());
	
	Для НомерМесяца = 1 По 12 Цикл
		
		
		НоваяСтрока = КалендарьНаборЗаписей.Добавить();
		НоваяСтрока.Месяц = Формат(ДатаМесяца, "ДФ=""ММММ""");
		НоваяСтрока.НомерМесяца = НомерМесяца;
		
		ДатаМесяца = ДобавитьМесяц(ДатаМесяца, 1);
		
	КонецЦикла;
	
КонецПроцедуры

//Процедура заполняет график по заданным параметрам
//
Процедура ЗаполнитьГрафик(ТекущийГод)
	
	НомерТекущегоГодаПриИзменении(ЭлементыФормы.НомерТекущегоГода);
	Отказ = Ложь;
	Если ПроверитьЗаполненностьГрафика(ТекущийГод)Тогда
		
		Вопрос = "График на " + Формат(ЭлементыФормы.НомерТекущегоГода.Значение, "ЧГ=5") + " год уже заполнен. Вы хотите перезаполнить график?";
		Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ДаНетОтмена);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Отказ = Ложь;
		Иначе
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если Не Отказ Тогда	
		ЗаписатьВФорме();
		ПоместитьТаблицуВТаблицуДляЗаписи(КалендарьНаборЗаписей, ТаблицаДляЗаписи, НачалоГода(ТекущийГод), КонецГода(ТекущийГод));
		ДатаНачалаИнтервала    	= НачалоГода(ТекущийГод);
		ДатаОкончанияИнтервала  = КонецГода(ТекущийГод);
		АвтозаполнениеКалендаря(ДатаНачалаИнтервала, ДатаОкончанияИнтервала);
		ДатаМесяца = ДатаНачалаИнтервала;
		Пока ДатаМесяца <= ДатаОкончанияИнтервала Цикл
			СоответствиеИнтервалыРедактирования.Вставить(ДатаМесяца, Истина);
			ДатаМесяца = ДобавитьМесяц(ДатаМесяца, 1);
		КонецЦикла;
		ОтразитьГодВНабореЗаписей(ДатаНачалаИнтервала);
		
		УстановитьДоступностьРеквизитов();
		
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Процедура пересчитывает итоговые ячейки таблицы значений, после изменения
// значений в ячейках.
//
Процедура ПересчитатьИтогиПоСтроке(ПересчитываемаяСтрока)
	
	ИтогоДней = 0;
	ИтогоЧасов = 0;
	ИтогоВечерних = 0;
	ИтогоНочных = 0;
	
	Для НомерДня = 1 По 31 Цикл
		
		ЗначениеЯчейки = ПересчитываемаяСтрока["День"+НомерДня];
		Если ЗначениеЯчейки <> 0 Тогда
			ИтогоДней = ИтогоДней + 1;
			ИтогоЧасов = ИтогоЧасов + ЗначениеЯчейки;
		КонецЕсли;
		
		ЗначениеЯчейки = ПересчитываемаяСтрока["ВЧ"+НомерДня];
		Если ЗначениеЯчейки <> 0 Тогда
			ИтогоВечерних = ИтогоВечерних + ЗначениеЯчейки;
		КонецЕсли;
		
		ЗначениеЯчейки = ПересчитываемаяСтрока["НЧ"+НомерДня];
		Если ЗначениеЯчейки <> 0 Тогда
			ИтогоНочных = ИтогоНочных + ЗначениеЯчейки;
		КонецЕсли;
	КонецЦикла;
	
	ПересчитываемаяСтрока.ВечернихЧасовЗаМесяц = ИтогоВечерних;
	ПересчитываемаяСтрока.НочныхЧасовЗаМесяц = ИтогоНочных;
	ПересчитываемаяСтрока.ДнейЗаМесяц = ИтогоДней;
	ПересчитываемаяСтрока.ЧасовЗаМесяц = ИтогоЧасов;
	
КонецПроцедуры // ПересчитатьИтогиПоСтроке()	
	
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ЗаполнитьГрафикНажатие(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Наименование) Тогда
		Предупреждение("Наименование графика не указано! Перед заполнением графика необходимо заполнить наименование.");
	Иначе
		
		Если НЕ ЗначениеЗаполнено(ДатаОтсчета) 
			Тогда ДатаОтсчета = ТекущийГод;
		КонецЕсли;
		Если ЭтаФорма.ЭтоНовый() Тогда
			ФормаЗаполнить = ПолучитьФорму("ФормаЗаполнить", ЭтаФорма);
			ЗначениеВозврата = ФормаЗаполнить.ОткрытьМодально();
			Если ЗначениеВозврата = "Заполнить" Тогда
				ЗаполнитьГрафик(ТекущийГод);
			КонецЕсли;
		Иначе
			ЗаполнитьГрафик(ТекущийГод);
		КонецЕсли;
		ОбновитьИнформационнуюСтроку();
		
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()

	ЭлементыФормы.ТабличноеПолеГрафика.Колонки.ЧасовЗаДень.Видимость = Ложь;
	СформироватьТаблицуГрафика();
	
	ТекущийГод = НачалоГода(РабочаяДата);
	НомерТекущегоГода = Год(ТекущийГод);
	ОтразитьГодВНабореЗаписей(ТекущийГод, Истина);
	
	ДанныеКалендаряИзменены = Ложь;
	ОбновитьИнформационнуюСтроку();
	
	УстановитьДоступностьРеквизитов();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ ИЗМЕНЕНИЯ ЗНАЧЕНИЙ РЕКВИЗИТОВ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО  ПОЛЯ КАЛЕНДАРЯ

Процедура ТабличноеПолеГрафикаПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ТекущийМесяц = НачалоМесяца(Дата(НомерТекущегоГода, ОформлениеСтроки.ДанныеСтроки.НомерМесяца, 1));
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоМесяца",НачалоМесяца(ТекущийМесяц));
	Запрос.УстановитьПараметр("КонецМесяца",КонецМесяца(ТекущийМесяц));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РегламентированныйПроизводственныйКалендарь.ВидДня,
	|	ДЕНЬНЕДЕЛИ(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря) КАК ДеньНедели
	|ИЗ
	|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &НачалоМесяца И &КонецМесяца
	|
	|УПОРЯДОЧИТЬ ПО
	|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря";
	
	Результат = Запрос.Выполнить();
	Данные = Результат.Выгрузить();
	ОформлениеСтроки.Ячейки.Итого.Видимость = Ложь;
	ОформлениеСтроки.Ячейки.Месяц.ВысотаЯчейки = 2;
	
	ИтогоДней 	  = 0;
	ИтогоЧасов    = 0;
	ИтогоВечерних = 0;
	ИтогоНочных   = 0;
	
	КоличествоДнейВМесяце = День(КонецМесяца(Дата(НомерТекущегоГода, ОформлениеСтроки.ДанныеСтроки.НомерМесяца, 1)));
	ДеньНеделиМесяца = ДеньНедели(НачалоМесяца(ТекущийМесяц));
	Для НомерДня = 1 По 31 Цикл
		
		ЗначениеЯчейки = ДанныеСтроки["День"+НомерДня];
		Если ЗначениеЯчейки <> 0 Тогда
			ОформлениеСтроки.Ячейки["День"+НомерДня].Текст = Строка(ЗначениеЯчейки);
			ИтогоДней = ИтогоДней + 1;
			ИтогоЧасов = ИтогоЧасов + ЗначениеЯчейки;
		КонецЕсли;
		
		ЗначениеЯчейки = ДанныеСтроки["ВЧ"+НомерДня];
		Если ЗначениеЯчейки <> 0 Тогда
			ОформлениеСтроки.Ячейки["ВЧ"+НомерДня].Текст = Строка(ЗначениеЯчейки);
			ИтогоВечерних = ИтогоВечерних + ЗначениеЯчейки;
		КонецЕсли;
		
		ЗначениеЯчейки = ДанныеСтроки["НЧ"+НомерДня];
		Если ЗначениеЯчейки <> 0 Тогда
			ОформлениеСтроки.Ячейки["НЧ"+НомерДня].Текст = Строка(ЗначениеЯчейки);
			ИтогоНочных = ИтогоНочных + ЗначениеЯчейки;
		КонецЕсли;
		
		
		Если НомерДня > КоличествоДнейВМесяце Тогда
			ОформлениеСтроки.Ячейки["День"+НомерДня].ТолькоПросмотр = Истина;
			ОформлениеСтроки.Ячейки["День"+НомерДня].ЦветФона = ЦветаСтиля.ФонНедоступнойСтрокиДокумента;
			
			ОформлениеСтроки.Ячейки["ВЧ"+НомерДня].ТолькоПросмотр = Истина;
			ОформлениеСтроки.Ячейки["ВЧ"+НомерДня].ЦветФона = ЦветаСтиля.ФонНедоступнойСтрокиДокумента;
			
			ОформлениеСтроки.Ячейки["НЧ"+НомерДня].ТолькоПросмотр = Истина;
			ОформлениеСтроки.Ячейки["НЧ"+НомерДня].ЦветФона = ЦветаСтиля.ФонНедоступнойСтрокиДокумента;
		Иначе
			Если Данные.Количество() > 0 Тогда
				  ВидДня = Данные[НомерДня - 1].ВидДня;
				Если ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Воскресенье 
					Или ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Суббота 
					Или ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник Тогда
					ОформлениеСтроки.Ячейки["НЧ"+НомерДня].ЦветФона = БледноКрасныйЦвет;
					ОформлениеСтроки.Ячейки["ВЧ"+НомерДня].ЦветФона = БледноКрасныйЦвет;
					ОформлениеСтроки.Ячейки["День"+НомерДня].ЦветФона = БледноКрасныйЦвет;
				Иначе
					ОформлениеСтроки.Ячейки["НЧ"+НомерДня].ЦветФона = Новый Цвет();	
					ОформлениеСтроки.Ячейки["ВЧ"+НомерДня].ЦветФона = Новый Цвет();	
					ОформлениеСтроки.Ячейки["День"+НомерДня].ЦветФона = Новый Цвет();	
				КонецЕсли;
			Иначе
				Если ДеньНеделиМесяца = 6 Или ДеньНеделиМесяца = 7 Тогда
					ОформлениеСтроки.Ячейки["НЧ"+НомерДня].ЦветФона = БледноКрасныйЦвет;
					ОформлениеСтроки.Ячейки["ВЧ"+НомерДня].ЦветФона = БледноКрасныйЦвет;
					ОформлениеСтроки.Ячейки["День"+НомерДня].ЦветФона = БледноКрасныйЦвет;
				Иначе
					ОформлениеСтроки.Ячейки["НЧ"+НомерДня].ЦветФона = Новый Цвет();	
					ОформлениеСтроки.Ячейки["ВЧ"+НомерДня].ЦветФона = Новый Цвет();	
					ОформлениеСтроки.Ячейки["День"+НомерДня].ЦветФона = Новый Цвет();	
				КонецЕсли;
			КонецЕсли;
			
			
			
		КонецЕсли;
		ДеньНеделиМесяца = (ДеньНеделиМесяца%7)+1;
	КонецЦикла;
	
	ОформлениеСтроки.Ячейки.ДнейЗаМесяц.УстановитьТекст(Строка(ИтогоДней));
	ОформлениеСтроки.Ячейки.ЧасовЗаМесяц.УстановитьТекст(Строка(ИтогоЧасов));
	ОформлениеСтроки.Ячейки.ВечернихЧасовЗаМесяц.УстановитьТекст(Строка(ИтогоВечерних));
	ОформлениеСтроки.Ячейки.НочныхЧасовЗаМесяц.УстановитьТекст(Строка(ИтогоНочных));
	
КонецПроцедуры

Процедура ТабличноеПолеГрафикаПередНачаломДобавления(Элемент, Отказ, Копирование)
	Отказ = Истина;
КонецПроцедуры

Процедура ТабличноеПолеГрафикаПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Если УчитыватьВечерниеЧасы ИЛИ УчитыватьНочныеЧасы Тогда
		Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
			ОформлениеСтроки.Ячейки.ЧасовЗаДень.УстановитьТекст("Часов за день");
			ОформлениеСтроки.Ячейки.ИзНихВечерних.УстановитьТекст("Из них вечерних");
			ОформлениеСтроки.Ячейки.ИзНихНочных.УстановитьТекст("Из них ночных");
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТабличноеПолеГрафикаПередНачаломИзменения(Элемент, Отказ)
	Если День(КонецМесяца(Дата(НомерТекущегоГода, Элемент.ТекущаяСтрока.НомерМесяца, 1))) < Число(СтрЗаменить(СтрЗаменить(СтрЗаменить(Элемент.ТекущаяКолонка.Имя, "День", ""), "ВЧ", ""), "НЧ", "")) Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

Процедура НомерТекущегоГодаПриИзменении(Элемент)
	
	Если ДанныеКалендаряИзменены Тогда
		// запомним текущие данные в таблице для записи
		СоответствиеИнтервалыРедактирования.Вставить(Дата(Год(ТекущийГод), 1, 1), Истина);
		СоответствиеИнтервалыРедактирования.Вставить(Дата(Год(ТекущийГод), 2, 1), Истина);
		СоответствиеИнтервалыРедактирования.Вставить(Дата(Год(ТекущийГод), 3, 1), Истина);
		СоответствиеИнтервалыРедактирования.Вставить(Дата(Год(ТекущийГод), 4, 1), Истина);
		СоответствиеИнтервалыРедактирования.Вставить(Дата(Год(ТекущийГод), 5, 1), Истина);
		СоответствиеИнтервалыРедактирования.Вставить(Дата(Год(ТекущийГод), 6, 1), Истина);
		СоответствиеИнтервалыРедактирования.Вставить(Дата(Год(ТекущийГод), 7, 1), Истина);
		СоответствиеИнтервалыРедактирования.Вставить(Дата(Год(ТекущийГод), 8, 1), Истина);
		СоответствиеИнтервалыРедактирования.Вставить(Дата(Год(ТекущийГод), 9, 1), Истина);
		СоответствиеИнтервалыРедактирования.Вставить(Дата(Год(ТекущийГод), 10, 1), Истина);
		СоответствиеИнтервалыРедактирования.Вставить(Дата(Год(ТекущийГод), 11, 1), Истина);
		СоответствиеИнтервалыРедактирования.Вставить(Дата(Год(ТекущийГод), 12, 1), Истина);
		ПоместитьТаблицуВТаблицуДляЗаписи(КалендарьНаборЗаписей, ТаблицаДляЗаписи, НачалоГода(ТекущийГод), КонецГода(ТекущийГод));
		ДанныеКалендаряИзменены = Ложь;
	КонецЕсли; 
	
	ТекущийГод = НачалоГода(Дата(НомерТекущегоГода, 1, 1));
	
	
	Если ОтразитьГодВНабореЗаписей(ТекущийГод) = 0 тогда
		ОтразитьГодВНабореЗаписей(ТекущийГод, Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Наименование) Тогда
		Отказ = Истина;
		Сообщить("Не заполнено наименование графика работы!");
	КонецЕсли;
	
	Если ДанныеКалендаряИзменены Тогда
		// запомним текущие данные в таблице для записи
		СоответствиеИнтервалыРедактирования.Вставить(Дата(НомерТекущегоГода, 1, 1), Истина);
		СоответствиеИнтервалыРедактирования.Вставить(Дата(НомерТекущегоГода, 2, 1), Истина);
		СоответствиеИнтервалыРедактирования.Вставить(Дата(НомерТекущегоГода, 3, 1), Истина);
		СоответствиеИнтервалыРедактирования.Вставить(Дата(НомерТекущегоГода, 4, 1), Истина);
		СоответствиеИнтервалыРедактирования.Вставить(Дата(НомерТекущегоГода, 5, 1), Истина);
		СоответствиеИнтервалыРедактирования.Вставить(Дата(НомерТекущегоГода, 6, 1), Истина);
		СоответствиеИнтервалыРедактирования.Вставить(Дата(НомерТекущегоГода, 7, 1), Истина);
		СоответствиеИнтервалыРедактирования.Вставить(Дата(НомерТекущегоГода, 8, 1), Истина);
		СоответствиеИнтервалыРедактирования.Вставить(Дата(НомерТекущегоГода, 9, 1), Истина);
		СоответствиеИнтервалыРедактирования.Вставить(Дата(НомерТекущегоГода, 10, 1), Истина);
		СоответствиеИнтервалыРедактирования.Вставить(Дата(НомерТекущегоГода, 11, 1), Истина);
		СоответствиеИнтервалыРедактирования.Вставить(Дата(НомерТекущегоГода, 12, 1), Истина);
		ПоместитьТаблицуВТаблицуДляЗаписи(КалендарьНаборЗаписей, ТаблицаДляЗаписи, НачалоГода(ТекущийГод), КонецГода(ТекущийГод));
		ДанныеКалендаряИзменены = Ложь;
	КонецЕсли; 

КонецПроцедуры

Процедура ТабличноеПолеГрафикаДеньПриИзменении(Элемент)
	ДанныеКалендаряИзменены = Истина;
	Модифицированность = Истина;
	ПересчитатьИтогиПоСтроке(ЭлементыФормы.ТабличноеПолеГрафика.ТекущаяСтрока);
КонецПроцедуры

Процедура ТабличноеПолеГрафикаПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

Процедура СсылкаИзменитьПараметрыЗаполненияНажатие(Элемент)
	
	ФормаЗаполнить = Справочники.ГрафикиРаботы.ПолучитьФорму("ФормаЗаполнить", ЭтаФорма);
	ФормаЗаполнить.ОткрыватьНастройки = Истина;
	ЗначениеВозврата = ФормаЗаполнить.ОткрытьМодально();
	
	Если ЗначениеВозврата = "Заполнить" Тогда
		НомерТекущегоГодаПриИзменении(ЭлементыФормы.НомерТекущегоГода);
		Отказ = Ложь;
		Если ПроверитьЗаполненностьГрафика(ТекущийГод)Тогда
			
			Вопрос = "График на " + Формат(ЭлементыФормы.НомерТекущегоГода.Значение, "ЧГ=5") + " год уже заполнен. Вы хотите перезаполнить график?";
			Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Да Тогда
				Отказ = Ложь;
			Иначе
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если Не Отказ Тогда	
			ЗаписатьВФорме();
			ПоместитьТаблицуВТаблицуДляЗаписи(КалендарьНаборЗаписей, ТаблицаДляЗаписи, НачалоГода(ТекущийГод), КонецГода(ТекущийГод));
			ДатаНачалаИнтервала    	= НачалоГода(ТекущийГод);
			ДатаОкончанияИнтервала  = КонецГода(ТекущийГод);
			АвтозаполнениеКалендаря(ДатаНачалаИнтервала, ДатаОкончанияИнтервала);
			ДатаМесяца = ДатаНачалаИнтервала;
			Пока ДатаМесяца <= ДатаОкончанияИнтервала Цикл
				СоответствиеИнтервалыРедактирования.Вставить(ДатаМесяца, Истина);
				ДатаМесяца = ДобавитьМесяц(ДатаМесяца, 1);
			КонецЦикла;
			ОтразитьГодВНабореЗаписей(ДатаНачалаИнтервала);
			
			УстановитьДоступностьРеквизитов();
			
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
	ОбновитьИнформационнуюСтроку();
	
КонецПроцедуры

Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	Если КалендарьнаборЗаписей.Итог("ДнейЗаМесяц") = 0 Тогда
		ТекстВопроса = "График на " + Формат(Год(ТекущийГод),"ЧГ=5") + " не заполнен";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОК);
		Возврат;
	КонецЕсли;	
	
	Если Модифицированность Тогда
		ТекстВопроса = "Перед печатью необходимо сохранить изменения. Сохранить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Если Ответ = КодВозвратаДиалога.ОК Тогда
			ЗаписатьВФорме();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ОтразитьГодВНабореЗаписей(ТекущийГод, Истина);

	ПечатныйДокумент = Печать(КалендарьНаборЗаписей);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

ДлинаСуток = 86400;
ПерваяДата = НачалоДня(ОбщегоНазначения.ПолучитьРабочуюДату());
ПерваяДата = ПерваяДата - ДеньНедели(ПерваяДата) * ДлинаСуток;
ДниНедели = Новый Соответствие;
Для ДеньНедели = 1 По 7 Цикл
	ДниНедели.Вставить(ДеньНедели, НРег(Формат(ПерваяДата + ДеньНедели * ДлинаСуток,"ДФ=ддд")));
КонецЦикла;

БледноКрасныйЦвет = Новый Цвет(255, 235, 235);
КрасныйЦвет = Новый Цвет(255, 220, 205);
СерыйЦвет = Новый Цвет(205, 205, 205);