Перем фСписокИсточниковПоИзмерению;

Перем СтруктураИзмерениеСправочник;
Перем ТипНоменклатуры; // Номенклатура или номенклатурные группы

// Изменяет видимость реквизитов в зависимости от значения реквизита "ВидРаспределения"
//
Процедура УправлениеДоступностьюРеквизитов()

	Если НЕ ИзмерениеБюджетирования.Пустая() Тогда
		
		ЭлементыФормы.ИсточникДанных.Доступность=Истина;
		ЭлементыФормы.ПоказательИсточника.Доступность=Истина;
		ЭлементыФормы.ЭлементыДляРаспределения.Доступность=Истина;
		
		Если ВидРаспределения=Перечисления.ВидыРаспределенийПоИзмерениямБюджетирования.Фиксированное Тогда
			
			ЭлементыФормы.ИсточникДанных.Доступность=Ложь;
			ЭлементыФормы.ПоказательИсточника.Доступность=Ложь;
			ЭлементыФормы.НадписьПоказатель.Доступность=Ложь;
			ЭлементыФормы.НадписьИсточникДанных.Доступность=Ложь;
			
			ЭлементыФормы.ЭлементыДляРаспределения.Колонки.ПроцентДляРаспределения.Видимость=Истина;
			ЭлементыФормы.Автозаполнение.Доступность=Истина;
			ЭлементыФормы.ПоВсемЭлементам.Доступность=Ложь;
			
			ЭлементыФормы.ИсточникДанных.Значение="";
			ЭлементыФормы.ПоказательИсточника.Значение="";
			
		Иначе
			
			ЭлементыФормы.ИсточникДанных.Доступность=Истина;
			ЭлементыФормы.ПоказательИсточника.Доступность=Истина;
			ЭлементыФормы.НадписьПоказатель.Доступность=Истина;
			ЭлементыФормы.НадписьИсточникДанных.Доступность=Истина;
			
			ЭлементыФормы.ЭлементыДляРаспределения.Колонки.ПроцентДляРаспределения.Видимость=Ложь;
			ЭлементыФормы.Автозаполнение.Доступность=Ложь;
			ЭлементыФормы.ПоВсемЭлементам.Доступность=Истина;
			Автозаполнение=Ложь;
							
			фСписокИсточниковПоИзмерению=Бюджетирование.СписокИсточниковДляИзмерения(ЭлементыФормы.ИзмерениеБюджетирования.Значение);
			
		КонецЕсли; 	
		
	Иначе
		
		ЭлементыФормы.ИсточникДанных.Доступность=Ложь;
		ЭлементыФормы.ПоказательИсточника.Доступность=Ложь;
		ЭлементыФормы.ЭлементыДляРаспределения.Доступность=Ложь;
		
КонецЕсли;

	
	Если ПоВсемЭлементам Тогда
	
		ЭлементыФормы.ЭлементыДляРаспределения.ТолькоПросмотр=Истина;
		ЭлементыФормы.КоманднаяПанельРаспределение.Доступность=Ложь;

	Иначе

		ЭлементыФормы.ЭлементыДляРаспределения.ТолькоПросмотр=Ложь;
	    ЭлементыФормы.КоманднаяПанельРаспределение.Доступность=Истина;
		
	КонецЕсли;

КонецПроцедуры // УправлениеДоступностьюРеквизитов()
 
Процедура ДействияФормыРедактироватьКод(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
	
КонецПроцедуры // ДействияФормыРедактироватьКод()

Процедура КоманднаяПанельРаспределениеПодбор(Кнопка)
	
	Если ЭлементыФормы.ИзмерениеБюджетирования.Значение.Пустая() Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если ИзмерениеБюджетирования=Перечисления.ИзмеренияБюджетирования.Номенклатура Тогда
		
		Если ЭлементыДляРаспределения.Количество()>0 И НЕ ЭлементыДляРаспределения[0].ЭлементУправленческойАналитики=Неопределено Тогда
			// Ориентируемся на тип первой строки.
			Справочник=ЭлементыДляРаспределения[0].ЭлементУправленческойАналитики.Метаданные().Имя;
			ФормаПодбора = Справочники[Справочник].ПолучитьФормуВыбора(, ЭтаФорма);
			
		Иначе
			
			СписокТипов = Новый СписокЗначений;
			СписокТипов.Добавить(Метаданные.Справочники.Номенклатура.Имя,Метаданные.Справочники.Номенклатура.Синоним);
			СписокТипов.Добавить(Метаданные.Справочники.НоменклатурныеГруппы.Имя,Метаданные.Справочники.НоменклатурныеГруппы.Синоним);
			
			ВыбранныйЭлемент = СписокТипов.ВыбратьЭлемент("Выберите детализацию");
			
			Если ВыбранныйЭлемент = Неопределено Тогда
				Возврат;
			КонецЕсли;
			
			// В качестве владельца формы выбора устанавливаем данный элемент формы, чтобы выбранное
			// значение было присвоено стандартно.
			ФормаПодбора = Справочники[ВыбранныйЭлемент.Значение].ПолучитьФормуВыбора(, ЭтаФорма);
			
		КонецЕсли;
		
	Иначе
		
		ВидСправочника=СтруктураИзмерениеСправочник[Строка(ИзмерениеБюджетирования)];
		
		ФормаПодбора=Справочники[ВидСправочника].ПолучитьФормуВыбора(, ЭтаФорма);
		
	КонецЕсли;
	
	ФормаПодбора.РежимВыбора = Истина;
	ФормаПодбора.ЗакрыватьПриВыборе = Ложь;
	
	ФормаПодбора.ПараметрВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.ГруппыИЭлементы;
	
	Если (НЕ ЭлементыФормы.ЭлементыДляРаспределения.ТекущиеДанные=Неопределено) И (ЗначениеЗаполнено(ЭлементыФормы.ЭлементыДляРаспределения.ТекущиеДанные.ЭлементУправленческойАналитики)) Тогда
		ФормаПодбора.ПараметрТекущаяСтрока=ЭлементыФормы.ЭлементыДляРаспределения.ТекущиеДанные.ЭлементУправленческойАналитики;
	КонецЕсли;
	
	ФормаПодбора.Открыть();

КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если ЭтоНовый() Тогда
		
		ВидРаспределения=Перечисления.ВидыРаспределенийПоИзмерениямБюджетирования.Фиксированное;
		
	ИначеЕсли ВидРаспределения=Перечисления.ВидыРаспределенийПоИзмерениямБюджетирования.ПоПоказателюИсточника
		
		И ИзмерениеБюджетирования<>"" 
		Тогда
		
		фСписокИсточниковПоИзмерению=Бюджетирование.СписокИсточниковДляИзмерения(ИзмерениеБюджетирования);
		
		ОбновитьСпискиВыбора();
		
	КонецЕсли; 
	
	УправлениеДоступностьюРеквизитов();
	
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)


	Если ЭлементыФормы.ЭлементыДляРаспределения.Значение.Найти(ЗначениеВыбора,"ЭлементУправленческойАналитики")<>Неопределено Тогда
		Возврат;
	КонецЕсли;

	НоваяСтрока = ЭлементыФормы.ЭлементыДляРаспределения.Значение.Добавить();
	НоваяСтрока.ЭлементУправленческойАналитики = ЗначениеВыбора;

	Если Автозаполнение Тогда
	
		Для каждого Элемент Из ЭлементыДляРаспределения Цикл

			Элемент.ПроцентДляРаспределения=100/ЭлементыДляРаспределения.Количество();
			
		КонецЦикла; 
	
	КонецЕсли; 

КонецПроцедуры

//Обновляет списки выбора для показателей источников данных
//
//
Процедура ОбновитьСпискиВыбора()
	
	Если Не ИсточникДанных.Пустая() Тогда
		
		СписокПоказателей=Новый СписокЗначений;
		
		Для каждого Показатель Из ИсточникДанных.Показатели Цикл
			
			Если Показатель.Использование Тогда
				СписокПоказателей.Добавить(Показатель.Имя, Показатель.Представление);
			КонецЕсли;
			
		КонецЦикла; 
		
		ЭлементыФормы.ПоказательИсточника.СписокВыбора=СписокПоказателей;
		
	КонецЕсли;
	
КонецПроцедуры // ОбновитьСпискиВыбора()

Процедура ИсточникДанныхНачалоВыбора(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка=Ложь;

	Если фСписокИсточниковПоИзмерению=Неопределено Тогда

		Возврат;

	КонецЕсли;

	ФормаВыбораИсточник= Справочники["ИсточникиДанныхДляРасчетовБюджетирования"].ПолучитьФормуВыбора(, Элемент,);
	ФормаВыбораИсточник.РежимВыбора = Истина;

	ФормаВыбораИсточник.Отбор.Наименование.ВидСравнения=ВидСравнения.ВСписке;
	ФормаВыбораИсточник.Отбор.Наименование.Значение      = фСписокИсточниковПоИзмерению;
	ФормаВыбораИсточник.Отбор.Наименование.Использование = Истина;
	ФормаВыбораИсточник.ПараметрВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Элементы;
	
	ФормаВыбораИсточник.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Наименование.Доступность=Ложь;
	Если ЗначениеЗаполнено(Элемент.Значение)Тогда
		ФормаВыбораИсточник.ПараметрТекущаяСтрока=Элемент.Значение;
	КонецЕсли;
	
	ФормаВыбораИсточник.Открыть();
	
КонецПроцедуры

Процедура ИзмерениеБюджетированияПриИзменении(Элемент)

	ЭлементыДляРаспределения.Очистить();
	ПоВсемЭлементам=Ложь;
	Автозаполнение=Ложь;
	ИсточникДанных=Справочники.ИсточникиДанныхДляРасчетовБюджетирования.ПустаяСсылка();
	ПоказательИсточника="";
	
	УправлениеДоступностьюРеквизитов();
	
	ИмяСправочника=Строка(ИзмерениеБюджетирования);
	
	Если ЗначениеЗаполнено(ИзмерениеБюджетирования) Тогда
				
		ВидСправочника=СтруктураИзмерениеСправочник[ИмяСправочника];
		
		Если ВидРаспределения=Перечисления.ВидыРаспределенийПоИзмерениямБюджетирования.ПоПоказателюИсточника Тогда
			
			фСписокИсточниковПоИзмерению=Бюджетирование.СписокИсточниковДляИзмерения(Элемент.Значение);
			
		КонецЕсли;
		
	Иначе
		
		 фСписокИсточниковПоИзмерению=Новый СписокЗначений;
		
	КонецЕсли;

КонецПроцедуры

Процедура ВидРаспределенияПриИзменении(Элемент)
	
	ПоВсемЭлементам=Ложь;
	Автозаполнение=Ложь;
	ИсточникДанных=Справочники.ИсточникиДанныхДляРасчетовБюджетирования.ПустаяСсылка();
	ПоказательИсточника="";
		
	УправлениеДоступностьюРеквизитов();
		
КонецПроцедуры

Процедура АвтозаполнениеПриИзменении(Элемент)

	Если Автозаполнение Тогда
	
		Для каждого Элемент Из ЭлементыДляРаспределения Цикл

			Элемент.ПроцентДляРаспределения=100/ЭлементыДляРаспределения.Количество();
			
		КонецЦикла; 
	
	КонецЕсли; 

КонецПроцедуры

Процедура ЭлементыДляРаспределенияПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
 Если Автозаполнение Тогда
	
		Для каждого Элемент Из ЭлементыДляРаспределения Цикл

			Элемент.ПроцентДляРаспределения=100/ЭлементыДляРаспределения.Количество();
			
		КонецЦикла; 
	
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЭлементыДляРаспределенияЭлементАналитикиНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	Если ЭлементыФормы.ИзмерениеБюджетирования.Значение.Пустая() Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если ИзмерениеБюджетирования=Перечисления.ИзмеренияБюджетирования.Номенклатура Тогда
		
		Если ЭлементыДляРаспределения.Количество()>0 И НЕ ЭлементыДляРаспределения[0].ЭлементУправленческойАналитики=Неопределено Тогда
			// Ориентируемся на тип первой строки.
			Справочник=ЭлементыДляРаспределения[0].ЭлементУправленческойАналитики.Метаданные().Имя;
			ФормаВыбора = Справочники[Справочник].ПолучитьФормуВыбора(,Элемент,);
			
		Иначе
			
			СписокТипов = Новый СписокЗначений;
			СписокТипов.Добавить(Метаданные.Справочники.Номенклатура.Имя,Метаданные.Справочники.Номенклатура.Синоним);
			СписокТипов.Добавить(Метаданные.Справочники.НоменклатурныеГруппы.Имя,Метаданные.Справочники.НоменклатурныеГруппы.Синоним);
			
			ВыбранныйЭлемент = ЭтаФорма.ВыбратьИзСписка(СписокТипов,Элемент);
			
			Если ВыбранныйЭлемент = Неопределено Тогда
				Возврат;
			КонецЕсли;
			
			// В качестве владельца формы выбора устанавливаем данный элемент формы, чтобы выбранное
			// значение было присвоено стандартно.
			ФормаВыбора = Справочники[ВыбранныйЭлемент.Значение].ПолучитьФормуВыбора(,Элемент,);
			
		КонецЕсли;
		
	Иначе
		
		
		ВидСправочника=СтруктураИзмерениеСправочник[Строка(ИзмерениеБюджетирования)];
		
		ФормаВыбора=Справочники[ВидСправочника].ПолучитьФормуВыбора(, Элемент);
	КонецЕсли;
	
	ФормаВыбора.РежимВыбора = Истина;
	ФормаВыбора.ЗакрыватьПриВыборе = Истина;
	
	ФормаВыбора.ПараметрВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.ГруппыИЭлементы;
	
	Если ЗначениеЗаполнено(ЭлементыФормы.ЭлементыДляРаспределения.ТекущиеДанные.ЭлементУправленческойАналитики) Тогда
		ФормаВыбора.ПараметрТекущаяСтрока=ЭлементыФормы.ЭлементыДляРаспределения.ТекущиеДанные.ЭлементУправленческойАналитики;
	КонецЕсли;
	
	ФормаВыбора.Открыть();
	
КонецПроцедуры

Процедура ПоВсемЭлементамПриИзменении(Элемент)
	
 		ЭлементыДляРаспределения.Очистить();
		УправлениеДоступностьюРеквизитов();
		
КонецПроцедуры

Процедура ИсточникДанныхПриИзменении(Элемент)
	
	ОбновитьСпискиВыбора();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ЭлементыФормы.ИзмерениеБюджетирования.СписокВыбора=Бюджетирование.ПолучитьСписокЭлементовПеречисленияОтбор("ИзмеренияБюджетирования", 
																	Новый Структура("Сценарий,Валюта"));
																	
	Если (ЗначениеЗаполнено(ИзмерениеБюджетирования)) И ВидРаспределения=Перечисления.ВидыРаспределенийПоИзмерениямБюджетирования.ПоПоказателюИсточника Тогда
		
		фСписокИсточниковПоИзмерению=Бюджетирование.СписокИсточниковДляИзмерения(ИзмерениеБюджетирования);
		
	КонецЕсли;																
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияКода(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Код);
	
КонецПроцедуры

Процедура ЭлементыДляРаспределенияПослеУдаления(Элемент)
	
	Если Автозаполнение Тогда
	
		Для каждого Элемент Из ЭлементыДляРаспределения Цикл

			Элемент.ПроцентДляРаспределения=100/ЭлементыДляРаспределения.Количество();
			
		КонецЦикла; 
	
	КонецЕсли;
		
КонецПроцедуры

Процедура ПослеЗаписи()
	
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);

КонецПроцедуры // ПослеЗаписи()

СтруктураИзмерениеСправочник=Новый Структура;
СтруктураИзмерениеСправочник.Вставить("ЦФО","Подразделения");
СтруктураИзмерениеСправочник.Вставить("Проект","Проекты");
СтруктураИзмерениеСправочник.Вставить("Контрагент","Контрагенты");
СтруктураИзмерениеСправочник.Вставить("Валюта","Валюты");
СтруктураИзмерениеСправочник.Вставить("Сценарий","СценарииПланирования");
СтруктураИзмерениеСправочник.Вставить("Номенклатура","Номенклатура");