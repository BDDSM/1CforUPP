////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// устанавливает отбор по актуальности вакансий
Процедура УстановитьОтборПоАктуальности()
	
	Элемент = ЭлементыФормы.ОтборПоАктуальности.Значение;
	СправочникСписок.Отбор.Закрыта.Значение = ЗначениеЗаполнено(Элемент) и Элемент;
	СправочникСписок.Отбор.Закрыта.Использование = ЗначениеЗаполнено(Элемент);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	ЗаявкиКандидатовПереопределяемый.УстановитьВидимостьЭлементовУправленияФормыСписка(ЭтаФорма);
	
	СохраненноеЗначениеОтборПоАктуальности = ЭлементыФормы.ОтборПоАктуальности.СписокВыбора.НайтиПоЗначению(ВосстановитьЗначение("Справочник.ЗаявкиКандидатов.ОтборЗакрыта"));
	Если СохраненноеЗначениеОтборПоАктуальности = НеОпределено Тогда
		ЭлементыФормы.ОтборПоАктуальности.Значение = ЭлементыФормы.ОтборПоАктуальности.СписокВыбора.Получить(0).Значение;
	Иначе
		ЭлементыФормы.ОтборПоАктуальности.Значение = СохраненноеЗначениеОтборПоАктуальности.Значение;
	КонецЕсли;
	
	УстановитьОтборПоАктуальности();
	
	ОтборОрганизация = ВосстановитьЗначение("Справочник.ЗаявкиКандидатов.ОтборОрганизация");
	Если ОтборОрганизация = Неопределено Тогда
		ОтборОрганизация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	КонецЕсли;
	ОтборОрганизацияИспользование = ВосстановитьЗначение("Справочник.ЗаявкиКандидатов.ОтборОрганизацияИспользование");
	Если ОтборОрганизацияИспользование = Неопределено Тогда
		ОтборОрганизацияИспользование = НЕ ОтборОрганизация.Пустая();
	КонецЕсли;
	
	Отбор.Организация.Значение		= ОтборОрганизация;
	Отбор.Организация.Использование	= ОтборОрганизацияИспользование;
	
	ТекущийЭлемент = ЭлементыФормы.СправочникСписок;
	
	УстановитьЗаголовкиОрганизацийВФорме();	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	СохранитьЗначение("Справочник.ЗаявкиКандидатов.ОтборЗакрыта",					ЭлементыФормы.ОтборПоАктуальности.Значение);
	СохранитьЗначение("Справочник.ЗаявкиКандидатов.ОтборОрганизация",				Отбор.Организация.Значение);
	СохранитьЗначение("Справочник.ЗаявкиКандидатов.ОтборОрганизацияИспользование",	Отбор.Организация.Использование);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

//Процедура - обработчик события "ПриИзменении" ЭУ ОтборПоАктуальности
Процедура ОтборПоАктуальностиПриИзменении(Элемент)
	
	УстановитьОтборПоАктуальности();
	
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
		
	Если Элемент.Значение = Неопределено Тогда
		Элемент.Значение = Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
	Отбор.Организация.Использование = Не Элемент.Значение.Пустая();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ СправочникСписок

Процедура СправочникСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Закрыта Тогда
		ОформлениеСтроки.ЦветТекста = WebЦвета.Серый;
	КонецЕсли;
	
	Если Элемент.Колонки.Важность.Видимость И Не ДанныеСтроки.Важность.Пустая() Тогда
		ОформлениеСтроки.Ячейки.Важность.ОтображатьКартинку	= Истина;
		ОформлениеСтроки.Ячейки.Важность.ИндексКартинки		= Перечисления.Важность.Индекс(ДанныеСтроки.Важность);
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьЗаголовкиОрганизацийВФорме()
	
	ЭлементыФормы.ОрганизацияФлаг.Заголовок = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация:");
	ЭлементыФормы.СправочникСписок.Колонки.Организация.ТекстШапки = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация");
КонецПроцедуры // УстановитьЗаголовкиОрганизацийВФорме()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

СправочникСписок.Колонки.Добавить("Закрыта");
СправочникСписок.Колонки.Добавить("Важность");

//список отборов по актуальности сотрудников
СписокОтборов = Новый СписокЗначений;
СписокОтборов.Добавить(Ложь,	"Кандидаты, по которым ведется работа");
СписокОтборов.Добавить(0,		"Все кандидаты");
СписокОтборов.Добавить(Истина,	"Кандидаты, по которым работа завершена");
ЭлементыФормы.ОтборПоАктуальности.СписокВыбора = СписокОтборов;