////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мОбновлятьВладельца;

// Переменная, хранящая последнее наименование должности
// Необходима для того, чтобы можно было менять реквизит Наименование при смене должности
// Если пользователь наименование не менял
Перем мПредыдущееНаименование;

Перем ДолжностьТребования, ДолжностьОбязанности, ДолжностьУсловия;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура устанавливает доступность реквизитов формы в зависимости от значения переключателей
//
Процедура УстановитьДоступностьРеквизитовФормы()
	
	ЭлементыФормы.Требования.Доступность	= УточнитьОписаниеВакансии;
	ЭлементыФормы.Обязанности.Доступность	= УточнитьОписаниеВакансии;
	ЭлементыФормы.Условия.Доступность		= УточнитьОписаниеВакансии;
	
КонецПроцедуры // УстановитьДоступностьРеквизитовФормы()

Процедура ОбновитьОписаниеВакансии()
	
	Выборка = ВакансииПереопределяемый.СформироватьЗапросПоОписаниюВакансии(ЭтотОбъект).Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Выборка);
	КонецЕсли;
	
	Выборка = ВакансииПереопределяемый.СформироватьЗапросПоОписаниюДолжности(ЭтотОбъект).Выбрать();
	
	Если Выборка.Следующий() Тогда
		ДолжностьТребования		= Выборка.Требования;
		ДолжностьОбязанности	= Выборка.Обязанности;
		ДолжностьУсловия		= Выборка.Условия;
	Иначе
		ДолжностьТребования		= "";
		ДолжностьОбязанности	= "";
		ДолжностьУсловия		= "";
	КонецЕсли;
	
	Если Не УточнитьОписаниеВакансии Тогда
		Если ПустаяСтрока(ВакансияТребования) Тогда
			ВакансияТребования	= "Не указаны";
		КонецЕсли;
		Если ПустаяСтрока(ВакансияОбязанности) Тогда
			ВакансияОбязанности	= "Не указаны";
		КонецЕсли;
		Если ПустаяСтрока(ВакансияУсловия) Тогда
			ВакансияУсловия		= "Не указаны";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ОбновитьОписаниеВакансии()

Процедура УстановитьВидимостьДатыЗакрытия()
	
	ЭлементыФормы.ДатаЗакрытия.Видимость = Закрыта;
	
КонецПроцедуры

Процедура ЗаполнитьНаименование()
	
	Если Не Подразделение.Пустая() И Организация.Пустая() Тогда
		Организация = Подразделение.Владелец;
	КонецЕсли;
	
	Если (ПустаяСтрока(Наименование) ИЛИ (мПредыдущееНаименование = Наименование)) И НЕ (Должность.Пустая() ИЛИ Подразделение.Пустая()) Тогда
		Наименование = "" + Должность + ", " + Подразделение;
	КонецЕсли;
	
	мПредыдущееНаименование = Наименование;
	
КонецПроцедуры

Процедура УстановитьЗаголовкиОрганизацийВФорме()
	
	ЭлементыФормы.НадписьОрганизация.Заголовок = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация:");
	ЭлементыФормы.НадписьОрганизация.Значение = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация:");
	ЭлементыФормы.Организация.Подсказка = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация");
	ЭлементыФормы.Подразделение.Подсказка = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Подразделение организации");
	
КонецПроцедуры // УстановитьЗаголовкиОрганизацийВФорме()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если ПараметрыОткрытия <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, ПараметрыОткрытия);
	КонецЕсли;
	
	Если Не ПравоДоступа("Чтение", ВакансииПереопределяемый.РегистрСведенийОРабочихМестах()) Тогда
		Отказ = Истина;
		РаботаСДиалогами.ВывестиПредупреждение("Нарушение прав доступа!");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);	
	
	ВакансииПереопределяемый.ПриОткрытииДополнительно(ЭтаФорма, ЭтотОбъект);
	
	Если ЭтоНовый() Тогда
		
		Если Ответственный.Пустая() Тогда
			Ответственный	= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
		КонецЕсли;
		
		ЗаполнитьНаименование();
		
		ДатаОткрытия = ОбщегоНазначения.ПолучитьРабочуюДату();
		
	КонецЕсли;
	
	ОбновитьОписаниеВакансии();
	
	УстановитьДоступностьРеквизитовФормы();
	
	мПредыдущееНаименование = Строка(Должность);
	
	УстановитьВидимостьДатыЗакрытия();
	
	УстановитьЗаголовкиОрганизацийВФорме();	
	
КонецПроцедуры // ПриОткрытии()

Процедура ПередЗаписью(Отказ)
	
	Если Закрыта И ДатаЗакрытия < ДатаОткрытия Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Дата закрытия вакансии не может быть раньше даты открытия вакансии");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если УточнитьОписаниеВакансии Тогда
		Требования	= ВакансияТребования;
		Обязанности	= ВакансияОбязанности;
		Условия		= ВакансияУсловия;
	Иначе
		Требования	= "";
		Обязанности	= "";
		Условия		= "";
	КонецЕсли;
	
	Если Модифицированность И ВладелецФормы <> Неопределено И НЕ ЭтоНовый() Тогда
		мОбновлятьВладельца = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаписи()
	
	Оповестить("ЗаписанаВакансия", , ВладелецФормы);
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	Если мОбновлятьВладельца Тогда
		ОповеститьОЗаписиНовогоОбъекта(Ссылка);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура ДействияФормыФайлы(Кнопка)

	Отказ = Ложь;

	Если ЭтоНовый() Тогда
		ТекстВопроса = "Перед вводом файлов и изображений необходимо записать элемент. Записать?";
		Ответ  = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Если Ответ = КодВозвратаДиалога.ОК Тогда
			Отказ = Не ЗаписатьВФорме();
		Иначе
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;

	Если НЕ Отказ Тогда
		СтруктураДляСпискаИзображений = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, Ссылка, Ложь, Ложь);
		СтруктураДляСпискаДополнительныхФайлов = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, Ссылка, Ложь, Ложь);
		ОбязательныеОтборы = Новый Структура("Объект", Ссылка);
		
		РаботаСФайлами.ОткрытьФормуСпискаФайловИИзображений(СтруктураДляСпискаИзображений, СтруктураДляСпискаДополнительныхФайлов, ОбязательныеОтборы, ЭтаФорма);
	КонецЕсли;

КонецПроцедуры

Процедура ДействияФормыРедактироватьКод(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ДолжностьПриИзменении(Элемент)
	
	ЗаполнитьНаименование();
	
КонецПроцедуры

Процедура ИспользоватьОписаниеВакансииИзДолжностиПриИзменении(Элемент)
	
	Если НЕ УточнитьОписаниеВакансии И (
		(ДолжностьТребования <> ВакансияТребования И ВакансияТребования <> "Не указаны") ИЛИ
		(ДолжностьОбязанности <> ВакансияОбязанности И ВакансияОбязанности <> "Не указаны") ИЛИ 
		(ДолжностьУсловия <> ВакансияУсловия И ВакансияУсловия <> "Не указаны")) Тогда
		ТекстВопроса = "При установке описания вакансии в соответствие с описанием должности, введенное в вакансию описание будет потеряно. Продолжить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ВакансияТребования		= ДолжностьТребования;
			ВакансияОбязанности		= ДолжностьОбязанности;
			ВакансияУсловия			= ДолжностьУсловия;
		Иначе
			УточнитьОписаниеВакансии = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если УточнитьОписаниеВакансии Тогда
		Если ВакансияТребования = "Не указаны" Тогда
			ВакансияТребования	= "";
		КонецЕсли;
		Если ВакансияОбязанности = "Не указаны" Тогда
			ВакансияОбязанности	= "";
		КонецЕсли;
		Если ВакансияУсловия = "Не указаны" Тогда
			ВакансияУсловия		= "";
		КонецЕсли;
	Иначе
		Если ПустаяСтрока(ВакансияТребования) Тогда
			ВакансияТребования	= "Не указаны";
		КонецЕсли;
		Если ПустаяСтрока(ВакансияОбязанности) Тогда
			ВакансияОбязанности	= "Не указаны";
		КонецЕсли;
		Если ПустаяСтрока(ВакансияУсловия) Тогда
			ВакансияУсловия		= "Не указаны";
		КонецЕсли;
	КонецЕсли;
	
	УстановитьДоступностьРеквизитовФормы();
	
КонецПроцедуры

Процедура ПодразделениеОчистка(Элемент, СтандартнаяОбработка)
	
	ВакансииПереопределяемый.ПодразделениеОчисткаДополнительно(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПодразделениеОрганизацииПриИзменении(Элемент)
	
	ЗаполнитьНаименование();
	
КонецПроцедуры

Процедура ЗакрытаПриИзменении(Элемент)
	
	Если Закрыта Тогда
		ДатаЗакрытия = ОбщегоНазначения.ПолучитьРабочуюДату();
	Иначе
		ДатаЗакрытия = 0;
	КонецЕсли;
	
	УстановитьВидимостьДатыЗакрытия();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мОбновлятьВладельца = Ложь;