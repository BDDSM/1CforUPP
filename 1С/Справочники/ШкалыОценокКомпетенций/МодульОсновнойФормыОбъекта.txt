////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Булево. Определяет возможность изменения шкалы оценок. 
Перем ВозможностьИзменений;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Шкала",	ЭтотОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 КАК Количество
	|ИЗ
	|	Справочник.КомпетенцииРаботников КАК КомпетенцииРаботников
	|ГДЕ
	|	КомпетенцииРаботников.ШкалаОценок = &Шкала";
	
	ВозможностьИзменений = Запрос.Выполнить().Пустой();
	
	ЭлементыФормы.ТабличноеПолеОценок.Колонки.ПриоритетОценки.ТолькоПросмотр = Не ВозможностьИзменений;
	
КонецПроцедуры //  ПриОткрытии

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Не ЭтаФорма.Модифицированность Тогда
		Возврат;
	КонецЕсли;
	
	// Проверить заполнения шкалы оценками.
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",	ЭтотОбъект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 КАК Количество
	|ИЗ
	|	Справочник.СоставОценочныхШкалКомпетенций КАК СоставОценочныхШкалКомпетенций
	|ГДЕ
	|	СоставОценочныхШкалКомпетенций.Владелец = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 0 Тогда
		СтандартнаяОбработка = Ложь;
		
		ТекстВопроса = "Не введен список оценок для данной шкалы. Шкалой невозможно будет пользоваться. Сохранить изменения?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена,, КодВозвратаДиалога.Да,);
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Записать();
		Иначе
			Отказ = Ответ = КодВозвратаДиалога.Отмена;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры //  ПередЗакрытием(Отказ, СтандартнаяОбработка)

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура ДействияФормыРедактироватьКод(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ТабличноеПолеОценок

// Проверяет возможность добавления элементов
Процедура ТабличноеПолеОценокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)
	
	// Проверить записан элемент справочника или нет.
	Если ЭтоНовый() Тогда
		Ответ = Вопрос("Перед началом ввода оценок надо записать новую шкалу оценок! Записать?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да,);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ЗаписатьВФорме();
		Иначе
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Отказ = Не ВозможностьИзменений;
	
КонецПроцедуры // ТабличноеПолеОценокПередНачаломДобавления

// Проверяет возможность удаления элементов
Процедура ТабличноеПолеОценокПередУдалением(Элемент, Отказ)
	
	Отказ = Не ВозможностьИзменений;
	
КонецПроцедуры // ТабличноеПолеОценокПередУдалением

Процедура ТабличноеПолеОценокПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Не НоваяСтрока Тогда
		Возврат;
	КонецЕсли;
	
	// проверка на новую строку.
	Если Элемент.ТекущиеДанные.ПриоритетОценки = 0 тогда
		
		МаксимальныйПриоритет = 0;
		ВыборкаШкал = Справочники.СоставОценочныхШкалКомпетенций.Выбрать(,Ссылка,,"Код");
		
		Пока ВыборкаШкал.Следующий() Цикл
			
			Если ВыборкаШкал.ПриоритетОценки > МаксимальныйПриоритет Тогда
				МаксимальныйПриоритет = ВыборкаШкал.ПриоритетОценки;
			КонецЕсли;
			
		КонецЦикла;
		
		Элемент.ТекущиеДанные.ПриоритетОценки = МаксимальныйПриоритет + 1;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ