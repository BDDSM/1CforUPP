Перем мТипФильтра;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

Процедура ДействияФормыРедактироватьКод(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
КонецПроцедуры

// Процедура установки видимости / доступности реквизитов
//
Процедура УстановкаВидимостиДоступности()
	
	Если БазаРаспределенияЗатрат = Перечисления.БазыРаспределенияЗатрат.Вручную Тогда
		ЭлементыФормы.ОсновнаяПанель.Страницы.Фильтры.Видимость = Ложь;
		ЭлементыФормы.ОсновнаяПанель.Страницы.Отбор.Видимость = Ложь;
	Иначе
		ЭлементыФормы.ОсновнаяПанель.Страницы.Фильтры.Видимость = Истина;
		ЭлементыФормы.ОсновнаяПанель.Страницы.Отбор.Видимость = Истина;
	КонецЕсли;
	
	Если БазаРаспределенияЗатрат = Перечисления.БазыРаспределенияЗатрат.ПоОбъемуВыпуска
	 ИЛИ БазаРаспределенияЗатрат = Перечисления.БазыРаспределенияЗатрат.ПоОбъемуПродаж
	 ИЛИ БазаРаспределенияЗатрат = Перечисления.БазыРаспределенияЗатрат.ПоОсновномуСырью Тогда
		ЭлементыФормы.ПоказательБазыРаспределения.Доступность = Истина;
		ЭлементыФормы.НадписьПоказательБазыРаспределения.Доступность = Истина;
		
		Если ПоказательБазыРаспределения = Перечисления.ВидыПоказателейБазыРаспределения.ЦеныНоменклатуры Тогда
			ЭлементыФормы.ТипЦен.Доступность = Истина;
			ЭлементыФормы.НадписьТипЦен.Доступность = Истина;
		Иначе
			ЭлементыФормы.ТипЦен.Доступность = Ложь;
			ЭлементыФормы.НадписьТипЦен.Доступность = Ложь;
		КонецЕсли;
		
	Иначе
		ЭлементыФормы.ПоказательБазыРаспределения.Доступность = Ложь;
		ЭлементыФормы.НадписьПоказательБазыРаспределения.Доступность = Ложь;
		ЭлементыФормы.ТипЦен.Доступность = Ложь;
		ЭлементыФормы.НадписьТипЦен.Доступность = Ложь;
		
	КонецЕсли;
	
	Если БазаРаспределенияЗатрат = Перечисления.БазыРаспределенияЗатрат.ПоОсновномуСырью Тогда
		ЭлементыФормы.ОсновноеСырье.Доступность = Истина;
		ЭлементыФормы.НадписьОсновноеСырье.Доступность = Истина;
	Иначе
		ЭлементыФормы.ОсновноеСырье.Доступность = Ложь;
		ЭлементыФормы.НадписьОсновноеСырье.Доступность = Ложь;
	КонецЕсли;
	
	Если БазаРаспределенияЗатрат = Перечисления.БазыРаспределенияЗатрат.Вручную Тогда
		ЭлементыФормы.ИзменитьНаПроцент.Доступность = Ложь;
		ЭлементыФормы.ИзменитьНаКоэффициент.Доступность = Ложь;
		ЭлементыФормы.ОкруглитьДо.Доступность = Ложь;
		ЭлементыФормы.РаспределятьНаПродукциюИзДавальческогоСырья.Доступность = Ложь;
		ЭлементыФормы.РаспределятьНаПродукциюСтороннегоПереработчика.Доступность = Ложь;
		ЭлементыФормы.РаспределятьНаСобственнуюПродукцию.Доступность = Ложь;
		ЭлементыФормы.РаспределятьНаНаработку.Доступность = Ложь;
	Иначе
		ЭлементыФормы.ИзменитьНаПроцент.Доступность = Истина;
		ЭлементыФормы.ИзменитьНаКоэффициент.Доступность = Истина;
		ЭлементыФормы.ОкруглитьДо.Доступность = Истина;
		ЭлементыФормы.РаспределятьНаПродукциюИзДавальческогоСырья.Доступность = Истина;
		ЭлементыФормы.РаспределятьНаПродукциюСтороннегоПереработчика.Доступность = Истина;
		ЭлементыФормы.РаспределятьНаСобственнуюПродукцию.Доступность = Истина;
		ЭлементыФормы.РаспределятьНаНаработку.Доступность = Истина;
	КонецЕсли;
	
	ЭлементыФормы.Процент.Доступность 			= ИзменитьНаПроцент;
	ЭлементыФормы.Коэффициент.Доступность 		= ИзменитьНаКоэффициент;
	ЭлементыФормы.ПорядокОкругления.Доступность = ОкруглитьДо;
	
	ЭлементыФормы.СпособРаспределенияЗатратПоПодразделениям.Доступность 		= РаспределятьНаПодчиненныеПодразделения;
	ЭлементыФормы.НадписьСпособРаспределенияЗатратПоПодразделениям.Доступность 	= РаспределятьНаПодчиненныеПодразделения;
	
	Если ТипФильтраПриРаспределенииЗатратНаВыпуск = Перечисления.ТипыФильтровПриРаспределенииЗатратНаВыпуск.НоменклатурныеГруппы Тогда
		ЭлементыФормы.Фильтры.Колонки.НоменклатурнаяГруппа.Видимость = Истина;
		ЭлементыФормы.Фильтры.Колонки.Продукция.Видимость = Ложь;
	Иначе
		ЭлементыФормы.Фильтры.Колонки.НоменклатурнаяГруппа.Видимость = Ложь;
		ЭлементыФормы.Фильтры.Колонки.Продукция.Видимость = Истина;
	КонецЕсли;
	
	Если БазаРаспределенияЗатрат = Перечисления.БазыРаспределенияЗатрат.ПоОбъемуВыпуска
	 ИЛИ БазаРаспределенияЗатрат = Перечисления.БазыРаспределенияЗатрат.ПоОбъемуПродаж Тогда
		ЭлементыФормы.ПоказательБазыРаспределения.СписокВыбора.Очистить();
		ЭлементыФормы.ПоказательБазыРаспределения.СписокВыбора.Добавить(Перечисления.ВидыПоказателейБазыРаспределения.НатуральныеЕдиницыИзмерения);
		ЭлементыФормы.ПоказательБазыРаспределения.СписокВыбора.Добавить(Перечисления.ВидыПоказателейБазыРаспределения.ЦеныНоменклатуры);
		ЭлементыФормы.ПоказательБазыРаспределения.СписокВыбора.Добавить(Перечисления.ВидыПоказателейБазыРаспределения.ФактическаяЦенаРеализации);
	ИначеЕсли БазаРаспределенияЗатрат = Перечисления.БазыРаспределенияЗатрат.ПоОсновномуСырью Тогда
		ЭлементыФормы.ПоказательБазыРаспределения.СписокВыбора.Очистить();
		ЭлементыФормы.ПоказательБазыРаспределения.СписокВыбора.Добавить(Перечисления.ВидыПоказателейБазыРаспределения.НатуральныеЕдиницыИзмерения);
		ЭлементыФормы.ПоказательБазыРаспределения.СписокВыбора.Добавить(Перечисления.ВидыПоказателейБазыРаспределения.ЦеныНоменклатуры);
	КонецЕсли;
	
Конецпроцедуры // УстановкаВидимостиДоступности()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы справочника.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьНачальныеНастройки(ПостроительОтчета);
	
	СтруктураНастроек = НастройкиПостроителя.Получить();
	Если ТипЗнч(СтруктураНастроек) = Тип("Структура") Тогда
		ПостроительОтчета.УстановитьНастройки(СтруктураНастроек.НастройкиПостроителя);
	КонецЕсли;
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы справочника.
//
Процедура ПриОткрытии()
	
	Если ЭтоНовый() Тогда
		
		ТипФильтраПриРаспределенииЗатратНаВыпуск = Перечисления.ТипыФильтровПриРаспределенииЗатратНаВыпуск.НоменклатурныеГруппы;
		СпособРаспределенияЗатратНаВыпуск = Перечисления.СпособыРаспределенияЗатратНаВыпуск.ПоОбъемуВыпускаПродукции;
		
		ИспользоватьПростоеРаспределение = Ложь;
		Модифицированность				 = Ложь;
		
	КонецЕсли;
	
	УстановкаВидимостиДоступности();
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияКода(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Код);
	
КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "ПередЗаписью" формы справочника.
//
Процедура ПередЗаписью(Отказ)
	
	СохранятьОтбор = Истина;
	Если БазаРаспределенияЗатрат = Перечисления.БазыРаспределенияЗатрат.Вручную Тогда
		СохранятьОтбор = Ложь;
		ПостроительОтчета.Отбор.Сбросить();
	КонецЕсли;

	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("НастройкиПостроителя", ПостроительОтчета.ПолучитьНастройки(СохранятьОтбор, Ложь,Ложь,Ложь,Ложь));
	СтруктураНастроек.Вставить("Отбор", ПостроительОтчета.Отбор);
	
	ХранилищеДанных = Новый ХранилищеЗначения(СтруктураНастроек);
	НастройкиПостроителя = ХранилищеДанных;
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()
	
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
	
КонецПроцедуры // ПослеЗаписи()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ТипФильтраПриРаспределенииЗатратНаВыпуск
//
Процедура ТипФильтраПриРаспределенииЗатратНаВыпускПриИзменении(Элемент)
	
	Если Элемент.Значение <> мТипФильтра Тогда
		Фильтры.Очистить();
	КонецЕсли;
	УстановкаВидимостиДоступности();
	
КонецПроцедуры // ТипФильтраПриРаспределенииЗатратНаВыпускПриИзменении()

// Процедура - обработчик события "НачалоВыбора" поля ТипФильтраПриРаспределенииЗатратНаВыпуск
//
Процедура ТипФильтраПриРаспределенииЗатратНаВыпускНачалоВыбора(Элемент, СтандартнаяОбработка)
	мТипФильтра = Элемент.Значение;
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбораИзСписка" поля ТипФильтраПриРаспределенииЗатратНаВыпуск
//
Процедура ТипФильтраПриРаспределенииЗатратНаВыпускНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	мТипФильтра = Элемент.Значение;
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля "БазаРаспределенияЗатрат".
//
Процедура БазаРаспределенияЗатратПриИзменении(Элемент)
	
	Если БазаРаспределенияЗатрат <> Перечисления.БазыРаспределенияЗатрат.ПоОсновномуСырью
	   И ЗначениеЗаполнено(ОсновноеСырье) Тогда
		ОсновноеСырье = Неопределено;
	КонецЕсли;
	
	Если БазаРаспределенияЗатрат <> Перечисления.БазыРаспределенияЗатрат.ПоОбъемуВыпуска
	   И БазаРаспределенияЗатрат <> Перечисления.БазыРаспределенияЗатрат.ПоОбъемуПродаж
	   И БазаРаспределенияЗатрат <> Перечисления.БазыРаспределенияЗатрат.ПоОсновномуСырью
	   И ЗначениеЗаполнено(ПоказательБазыРаспределения) Тогда
		ПоказательБазыРаспределения = Неопределено;
		ТипЦен = Неопределено;
	КонецЕсли;
	
	Если БазаРаспределенияЗатрат = Перечисления.БазыРаспределенияЗатрат.Вручную Тогда
		ИзменитьНаПроцент = Ложь;
		ИзменитьНаКоэффициент = Ложь;
		ОкруглитьДо = Ложь;
		РаспределятьНаПродукциюИзДавальческогоСырья = Ложь;
		РаспределятьНаПродукциюСтороннегоПереработчика = Ложь;
		РаспределятьНаСобственнуюПродукцию = Ложь;
		РаспределятьНаНаработку = Ложь;
	КонецЕсли;
	
	ЗаполнитьНачальныеНастройки(ПостроительОтчета);
	УстановкаВидимостиДоступности();
	
КонецПроцедуры // БазаРаспределенияЗатратПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля "ПоказательБазыРаспределения".
//
Процедура ПоказательБазыРаспределенияПриИзменении(Элемент)
	
	УстановкаВидимостиДоступности();
	
	Если ПоказательБазыРаспределения = Перечисления.ВидыПоказателейБазыРаспределения.ЦеныНоменклатуры
	   И ЗначениеЗаполнено(ТипЦен) Тогда
		ТипЦен = Неопределено;
	КонецЕсли;
	
КонецПроцедуры // ПоказательБазыРаспределенияПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ИзменитьНаПроцент".
//
Процедура ИзменитьНаПроцентПриИзменении(Элемент)
	
	УстановкаВидимостиДоступности();
	
КонецПроцедуры // ИзменитьНаПроцентПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ИзменитьНаКоэффициент".
//
Процедура ИзменитьНаКоэффициентПриИзменении(Элемент)
	
	УстановкаВидимостиДоступности();
	
КонецПроцедуры // ИзменитьНаКоэффициентПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ОкруглитьДо".
//
Процедура ОкруглитьДоПриИзменении(Элемент)
	
	УстановкаВидимостиДоступности();
	
КонецПроцедуры // ОкруглитьДоПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка "ИзменитьНаКоэффициент".
//
Процедура РаспределятьНаПодчиненныеПодразделенияПриИзменении(Элемент)
	
	УстановкаВидимостиДоступности();
	
КонецПроцедуры // РаспределятьНаПодчиненныеПодразделенияПриИзменении()

// Процедура - обработчик события "Очистка" поля "НаправлениеРаспределения".
//
Процедура НаправлениеРаспределенияОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

// Процедура - обработчик события "Очистка" поля "Применимость".
//
Процедура ПрименимостьОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры


ЭлементыФормы.ТипФильтраПриРаспределенииЗатратНаВыпуск.СписокВыбора.Добавить(Перечисления.ТипыФильтровПриРаспределенииЗатратНаВыпуск.ПустаяСсылка(), "На всю продукцию / номенклатурные группы");
ЭлементыФормы.ТипФильтраПриРаспределенииЗатратНаВыпуск.СписокВыбора.Добавить(Перечисления.ТипыФильтровПриРаспределенииЗатратНаВыпуск.НоменклатурныеГруппы, "На некоторые номенклатурные группы");
ЭлементыФормы.ТипФильтраПриРаспределенииЗатратНаВыпуск.СписокВыбора.Добавить(Перечисления.ТипыФильтровПриРаспределенииЗатратНаВыпуск.Продукция, "На некоторую продукцию");

ЭлементыФормы.Применимость.СписокВыбора.Добавить(Перечисления.ХарактерЗатрат.ПроизводственныеРасходы, 		"Для производственных расходов");
ЭлементыФормы.Применимость.СписокВыбора.Добавить(Перечисления.ХарактерЗатрат.ОбщепроизводственныеРасходы,	"Для косвенных расходов");
ЭлементыФормы.Применимость.СписокВыбора.Добавить(Перечисления.ХарактерЗатрат.ОбщехозяйственныеРасходы, 		"Для общехозяйственных расходов");
ЭлементыФормы.Применимость.СписокВыбора.Добавить(Перечисления.ХарактерЗатрат.КоммерческиеРасходы, 			"Для расходов на продажу");
ЭлементыФормы.Применимость.СписокВыбора.Добавить(Перечисления.ХарактерЗатрат.ПустаяСсылка(), 				"Для всех, кроме расходов на продажу");