Процедура ДействияФормыРедактироватьКод(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
	
КонецПроцедуры // ДействияФормыРедактироватьКод()

// Процедура управляет доступностью ЭУ в форме
//
// Параметры
//  нет
//
Процедура УправлениеДиалогом()
	
	Если ВидЗатрат = Перечисления.ВидыЗатрат.Материальные 
	   И ХарактерЗатрат = Перечисления.ХарактерЗатрат.ПроизводственныеРасходы Тогда
		ЭлементыФормы.СтатусМатериальныхЗатрат.Доступность = Истина;
		ЭлементыФормы.НадписьСтатусМатериальныхЗатрат.Доступность = Истина;
		ЭлементыФормы.СтатусМатериальныхЗатрат.ОтметкаНезаполненного = СтатусМатериальныхЗатрат.Пустая();
	Иначе
		ЭлементыФормы.СтатусМатериальныхЗатрат.Доступность = Ложь;
		ЭлементыФормы.НадписьСтатусМатериальныхЗатрат.Доступность = Ложь;
		ЭлементыФормы.СтатусМатериальныхЗатрат.ОтметкаНезаполненного = Ложь;
	КонецЕсли;
	
КонецПроцедуры // УправлениеДиалогом()

// Процедура обработчик события "ПриИзменении" реквизита "ВидЗатрат".
// 
Процедура ВидЗатратПриИзменении(Элемент)
	
	Если НЕ ВидЗатрат = Перечисления.ВидыЗатрат.Материальные Тогда
		СтатусМатериальныхЗатрат = Перечисления.СтатусыМатериальныхЗатратНаПроизводство.ПустаяСсылка();
	КонецЕсли;
	
	УправлениеДиалогом();
	
КонецПроцедуры // ВидЗатратПриИзменении()

// Процедура обработчик события "ПриИзменении" реквизита "ХарактерЗатрат".
// 
Процедура ХарактерЗатратПриИзменении(Элемент)
	
	Если ХарактерЗатрат <> Перечисления.ХарактерЗатрат.ПроизводственныеРасходы Тогда
		СтатусМатериальныхЗатрат = Перечисления.СтатусыМатериальныхЗатратНаПроизводство.ПустаяСсылка();
	КонецЕсли;
	
	УправлениеДиалогом();
	
КонецПроцедуры // ХарактерЗатратПриИзменении()

// Процедура заполняет список значений для поля "Характер затрат".
//
Процедура ЗаполнитьСписокХарактеровЗатрат()
	
	СписокВыбора = ЭлементыФормы.ХарактерЗатрат.СписокВыбора;
	СписокВыбора.Очистить();
	
	Для Каждого Значение Из Перечисления.ХарактерЗатрат Цикл
		
		Если Значение = Перечисления.ХарактерЗатрат.ЗаготовлениеИПриобретениеМЦ Тогда
			Продолжить;
		КонецЕсли;
		
		СписокВыбора.Добавить(Значение);
	
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьСписокХарактеровЗатрат()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ПриОткрытии Формы.
//
Процедура ПриОткрытии()

	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияКода(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Код);
	
	ЗаполнитьСписокХарактеровЗатрат();
	
КонецПроцедуры // ПриОткрытии()

// Процедура обработчик события "ПриИзмененииДанных" формы
// 
Процедура ПриИзмененииДанных()
	
	УправлениеДиалогом();
	
КонецПроцедуры

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()
	
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
	
КонецПроцедуры // ПослеЗаписи()