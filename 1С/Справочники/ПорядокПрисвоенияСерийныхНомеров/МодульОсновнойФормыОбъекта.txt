////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

Процедура ДействияФормыРедактироватьКод(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
КонецПроцедуры
// Процедура формирует текст в информационной надписи о примере серийного номера.
//
Процедура ОбновитьПодвал()
	
	СерийныйНомер = "";
	КоличествоЗнаков = 0;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ДатаВремя", 			ТекущаяДата());
	СтруктураПараметров.Вставить("Номенклатура", 		Неопределено);
	СтруктураПараметров.Вставить("Организация", 		Неопределено);
	СтруктураПараметров.Вставить("Подразделение", 		Неопределено);
	СтруктураПараметров.Вставить("НоменклатурнаяГруппа", Неопределено);
	
	Для Каждого Строка Из РазрядыСерийногоНомера Цикл
		
		ЗначениеРазряда = УчетСерийныхНомеров.ПолучитьЗначениеРазрядаСерийногоНомера(Строка.Источник, Строка.Значение, Строка.РазмерРазряда, СтруктураПараметров);
		
		Если ПустаяСтрока(ЗначениеРазряда) Тогда
			Для Сч = 1 По Строка.РазмерРазряда Цикл
				ЗначениеРазряда = ЗначениеРазряда + "*";
			КонецЦикла;
		КонецЕсли;
				
		СерийныйНомер = СерийныйНомер + ЗначениеРазряда;
		КоличествоЗнаков = КоличествоЗнаков + Строка.РазмерРазряда;
		
	КонецЦикла;
	
	ЭлементыФормы.ПримерСерийногоНомера.Значение = СерийныйНомер;
	ЭлементыФормы.КоличествоЗнаков.Значение = КоличествоЗнаков;

КонецПроцедуры // ОбновитьПодвал()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияКода(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Код);
КонецПроцедуры

// Процедура - обработчик события "ОбновлениеОтображения" формы.
//
Процедура ОбновлениеОтображения()
	
	ОбновитьПодвал();
	
КонецПроцедуры // ОбновлениеОтображения()

// Процедура - обработчик события ПередЗаписью формы.
//
Процедура ПередЗаписью(Отказ)

	Если КоличествоЗнаков > 20 Тогда
		ТекстСообщения = НСтр("ru = 'Количество знаков серийного номера не должно превышать 20'");
		ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()
	
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
	
КонецПроцедуры // ПослеЗаписи()

 ////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик события "ПриВыводеСтроки" табличного поля "Разряды серийного номера".
//
Процедура РазрядыСерийногоНомераПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Источник = Перечисления.ИсточникиЗначенийРазрядов.Значение
	 ИЛИ ДанныеСтроки.Источник = Перечисления.ИсточникиЗначенийРазрядов.ДатаВремя
	 ИЛИ ДанныеСтроки.Источник = Перечисления.ИсточникиЗначенийРазрядов.Разделитель
	 ИЛИ ДанныеСтроки.Источник = Перечисления.ИсточникиЗначенийРазрядов.Счетчик
	 ИЛИ ДанныеСтроки.Источник = Перечисления.ИсточникиЗначенийРазрядов.Номенклатура
	 ИЛИ ДанныеСтроки.Источник = Перечисления.ИсточникиЗначенийРазрядов.НоменклатурнаяГруппа
	 ИЛИ ДанныеСтроки.Источник = Перечисления.ИсточникиЗначенийРазрядов.Подразделение
	 ИЛИ ДанныеСтроки.Источник = Перечисления.ИсточникиЗначенийРазрядов.Организация Тогда
		ОформлениеСтроки.Ячейки.Значение.ТолькоПросмотр = Ложь;
	Иначе
		ОформлениеСтроки.Ячейки.Значение.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры // РазрядыСерийногоНомераПриВыводеСтроки()

// Процедура - обработчик события "ПриНачалеРедактирования" табличного поля "Разряды серийного номера".
//
Процедура РазрядыСерийногоНомераПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Строка = ЭлементыФормы.РазрядыСерийногоНомера.ТекущиеДанные;
	
	Если Строка.Источник = Перечисления.ИсточникиЗначенийРазрядов.Значение Тогда
		Маска = "";
		Если Строка.ТипРазряда = Перечисления.ТипыЗначенийРазрядов.Строка Тогда
			Для Сч = 1 По Строка.РазмерРазряда Цикл
				Маска = Маска + "N";
			КонецЦикла;
			Элемент.Колонки.Значение.ЭлементУправления.Маска = Маска;
		Иначе
			Элемент.Колонки.Значение.ЭлементУправления.Формат = "ЧЦ=" + Строка.РазмерРазряда;
		КонецЕсли;
	Иначе
		Элемент.Колонки.Значение.ЭлементУправления.Формат = "";
	КонецЕсли;
	
КонецПроцедуры // РазрядыСерийногоНомераПриНачалеРедактирования()

// Процедура - обработчик события "ПриИзменении" поля Тип разряда табличного поля "Разряды серийного номера".
//
Процедура РазрядыСерийногоНомераТипРазрядаПриИзменении(Элемент)
	
	Строка = ЭлементыФормы.РазрядыСерийногоНомера.ТекущиеДанные;
	НовоеЗначение = Строка.Значение;
	Если Строка.Источник = Перечисления.ИсточникиЗначенийРазрядов.Значение Тогда
		Если Строка.ТипРазряда = Перечисления.ТипыЗначенийРазрядов.Строка Тогда
			НовоеЗначение = Строка("");
		Иначе
			НовоеЗначение = Число(0);
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(Строка.Значение) <> ТипЗнч(НовоеЗначение) Тогда
		Строка.Значение = НовоеЗначение;
	КонецЕсли;
	
КонецПроцедуры // РазрядыСерийногоНомераТипРазрядаПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля Источник табличного поля "Разряды серийного номера".
//
Процедура РазрядыСерийногоНомераИсточникПриИзменении(Элемент)
	
	Строка = ЭлементыФормы.РазрядыСерийногоНомера.ТекущиеДанные;
	НовоеЗначение = Строка.Значение;
	Если Строка.Источник = Перечисления.ИсточникиЗначенийРазрядов.Значение Тогда
		Если Строка.ТипРазряда = Перечисления.ТипыЗначенийРазрядов.Строка Тогда
			НовоеЗначение = Строка("");
		Иначе
			НовоеЗначение = Число(0);
		КонецЕсли;
	ИначеЕсли Строка.Источник = Перечисления.ИсточникиЗначенийРазрядов.ДатаВремя Тогда
		НовоеЗначение = Перечисления.ФорматыДатаВремениЗначенияРазряда.ПустаяСсылка();
	ИначеЕсли Строка.Источник = Перечисления.ИсточникиЗначенийРазрядов.Разделитель Тогда
		НовоеЗначение = Перечисления.РазделителиРазрядовСерийногоНомера.ПустаяСсылка();
	ИначеЕсли Строка.Источник = Перечисления.ИсточникиЗначенийРазрядов.Номенклатура Тогда
		НовоеЗначение = Перечисления.ВидыЗначенийРазрядов.Код;
	ИначеЕсли Строка.Источник = Перечисления.ИсточникиЗначенийРазрядов.Организация Тогда
		НовоеЗначение = Перечисления.ВидыЗначенийРазрядов.Код;
	ИначеЕсли Строка.Источник = Перечисления.ИсточникиЗначенийРазрядов.Подразделение Тогда
		НовоеЗначение = Перечисления.ВидыЗначенийРазрядов.Код;
	ИначеЕсли Строка.Источник = Перечисления.ИсточникиЗначенийРазрядов.НоменклатурнаяГруппа Тогда
		НовоеЗначение = Перечисления.ВидыЗначенийРазрядов.Код;
	ИначеЕсли Строка.Источник = Перечисления.ИсточникиЗначенийРазрядов.Счетчик Тогда
		НовоеЗначение = Справочники.ВидыСчетчиковДляЗначенийРазрядов.ПустаяСсылка();
	Иначе
		НовоеЗначение = Неопределено;
	КонецЕсли;
	
	Если ТипЗнч(Строка.Значение) <> ТипЗнч(НовоеЗначение) Тогда
		Строка.Значение = НовоеЗначение;
	КонецЕсли;
	
КонецПроцедуры // РазрядыСерийногоНомераИсточникПриИзменении()

// Процедура - обработчик события "НачалоВыбора" поля Значение табличного поля "Разряды серийного номера".
//
Процедура РазрядыСерийногоНомераЗначениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Строка = ЭлементыФормы.РазрядыСерийногоНомера.ТекущиеДанные;
	Если Строка.Источник = Перечисления.ИсточникиЗначенийРазрядов.Номенклатура
	 ИЛИ Строка.Источник = Перечисления.ИсточникиЗначенийРазрядов.НоменклатурнаяГруппа
	 ИЛИ Строка.Источник = Перечисления.ИсточникиЗначенийРазрядов.Подразделение
	 ИЛИ Строка.Источник = Перечисления.ИсточникиЗначенийРазрядов.Организация Тогда
		СтандартнаяОбработка = Ложь;
		
		Список = Новый СписокЗначений;
		Список.Добавить(Перечисления.ВидыЗначенийРазрядов.Код);
		Если Строка.Источник = Перечисления.ИсточникиЗначенийРазрядов.Номенклатура Тогда
			Список.Добавить(Перечисления.ВидыЗначенийРазрядов.Артикул);
		КонецЕсли;
		Список.Добавить(Перечисления.ВидыЗначенийРазрядов.Свойство);
		
		ВыбранныйЭлемент = ЭтаФорма.ВыбратьИзСписка(Список, Элемент);
		
		Если ВыбранныйЭлемент = Неопределено Тогда // Отказ от выбора
			Возврат;
		КонецЕсли;
		
		Если ВыбранныйЭлемент.Значение = Перечисления.ВидыЗначенийРазрядов.Свойство Тогда
			ФормаВыбора = ПланыВидовХарактеристик.СвойстваОбъектов.ПолучитьФормуВыбора(,Элемент,);
			
			Если ЗначениеЗаполнено(Элемент.Значение) И ТипЗнч(Элемент.Значение) = Тип("ПланВидовХарактеристикСсылка.СвойстваОбъектов") Тогда
				ФормаВыбора.ПараметрТекущаяСтрока = Элемент.Значение;
			КонецЕсли;

			ФормаВыбора.Открыть();
		Иначе
			Строка.Значение = ВыбранныйЭлемент.Значение;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // РазрядыСерийногоНомераЗначениеНачалоВыбора()