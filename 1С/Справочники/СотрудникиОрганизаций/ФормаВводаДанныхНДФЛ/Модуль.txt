////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мСписокВыбораСтандартныхВычетов;
Перем мСписокВыбораСтандартныхВычетовНаДетей;
Перем мСписокОрганизацийПоРаботнику;
Перем мБылаДатаСтатусНалогоплательщикаПоНДФЛ;

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ЗаполнитьВычеты()
	
	Для каждого ЗаписьНабора Из НДФЛСтандартныеВычетыФизлиц Цикл
		ЗаполнитьЗначенияСвойств(СтандартныеВычеты.Добавить(), ЗаписьНабора);
	КонецЦикла;	
	
	Для каждого ЗаписьНабора Из НДФЛСтандартныеВычетыНаДетей Цикл
		ЗаполнитьЗначенияСвойств(СтандартныеВычетыНаДетей.Добавить(), ЗаписьНабора);
	КонецЦикла;
	
	СпрСтандартныеВычеты = Справочники.ВычетыНДФЛ;
	
	// подготовим списки вычетов для указания в т.п. стандартных вычетов
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВычетыНДФЛ.Ссылка,
	|	ВычетыНДФЛ.Код,
	|	ВычетыНДФЛ.Наименование
	|ИЗ
	|	Справочник.ВычетыНДФЛ КАК ВычетыНДФЛ
	|ГДЕ
	|	ВычетыНДФЛ.ГруппаВычета = &ГруппаВычета");
	
	Запрос.УстановитьПараметр("ГруппаВычета", Перечисления.ГруппыВычетовПоНДФЛ.Стандартные);
	Выборка = Запрос.Выполнить().Выбрать();		
	
	мСписокВыбораСтандартныхВычетов = Новый СписокЗначений;
	Пока Выборка.Следующий() Цикл
		мСписокВыбораСтандартныхВычетов.Добавить(Выборка.Ссылка,СокрЛП(Выборка.Код) + " (" + СокрЛП(Выборка.Наименование) + ")");
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ГруппаВычета", Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей);
	Выборка = Запрос.Выполнить().Выбрать();		
	
	мСписокВыбораСтандартныхВычетовНаДетей = Новый СписокЗначений;
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Ссылка = СпрСтандартныеВычеты.Код101 Тогда
			НаименованиеВычета = "на каждого ребенка в возрасте до 18 лет"
		ИначеЕсли Выборка.Ссылка = СпрСтандартныеВычеты.Код102 Тогда
			НаименованиеВычета = "удвоенный, на каждого ребенка в возрасте до 18 лет"
		ИначеЕсли Выборка.Ссылка = СпрСтандартныеВычеты.Код106 Тогда
			НаименованиеВычета = "на каждого ребенка-инвалида в возрасте до 18 лет"
		ИначеЕсли Выборка.Ссылка = СпрСтандартныеВычеты.Код107 Тогда
			НаименованиеВычета = "удвоенный, на каждого ребенка-инвалида в возрасте до 18 лет"
		Иначе
			НаименованиеВычета = СокрЛП(Выборка.Наименование);
		КонецЕсли;
		
		мСписокВыбораСтандартныхВычетовНаДетей.Добавить(Выборка.Ссылка, "(" + Выборка.Код + ") " + НаименованиеВычета);	
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьВычеты

Процедура ЗаполнитьСтатус()
	
	мТаблицаЗаписейСтатусНалогоплательщикаПоНДФЛ = СтатусФизЛицКакНалогоплательщиковНДФЛ.Выгрузить();
	
	// получим статус налогоплательщика по НДФЛ
	Если мТаблицаЗаписейСтатусНалогоплательщикаПоНДФЛ.Количество() > 0 Тогда
		// установим в форме последнее значение
		СтатусНалогоплательщикаПоНДФЛ     = мТаблицаЗаписейСтатусНалогоплательщикаПоНДФЛ[мТаблицаЗаписейСтатусНалогоплательщикаПоНДФЛ.Количество()-1].Статус;
		ДатаСтатусНалогоплательщикаПоНДФЛ = мТаблицаЗаписейСтатусНалогоплательщикаПоНДФЛ[мТаблицаЗаписейСтатусНалогоплательщикаПоНДФЛ.Количество()-1].Период;
	Иначе
		СтатусНалогоплательщикаПоНДФЛ     = Перечисления.СтатусыНалогоплательщиковПоНДФЛ.Резидент;
		ДатаСтатусНалогоплательщикаПоНДФЛ = НачалоГода(ОбщегоНазначения.ПолучитьРабочуюДату());
	КонецЕсли; 
	ПериодСтатусаНалогоплательщикаПоНДФЛ = РаботаСДиалогамиЗК.ПолучитьПредставлениеПериодаКакМесяцГодРодительныйПадеж(ДатаСтатусНалогоплательщикаПоНДФЛ);
	РасшифровкаНДФЛ = ФизическиеЛицаКлиент.ПолучитьОписаниеСтатусаНалогоплательщикаПоНДФЛ(СтатусНалогоплательщикаПоНДФЛ);
	
КонецПроцедуры // ЗаполнитьСтатус

Процедура ЗаполнитьДоходы()
	
	Год = Год(РабочаяДата);
	
	ДоходыТаблица = НДФЛДоходыПредыдущегоМестаРаботы.Выгрузить();
	
	ЗаполнитьТаблицуДоходовЗаГод(Год);
	
КонецПроцедуры // ЗаполнитьДоходы

Процедура ЗаполнитьСтраницу(ИмяСтраницы)
	
	Если ИмяСтраницы = "Вычеты" Тогда 
		ЗаполнитьВычеты();
	ИначеЕсли ИмяСтраницы = "Статус" Тогда
		ЗаполнитьСтатус();
	ИначеЕсли ИмяСтраницы = "Доходы" Тогда
		ЗаполнитьДоходы();
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьСтраницу

Процедура ПеренестиДоходыЗаГодВНабор()
	
	// перенесем введенные доходы в набор
	Если ДоходыЗаГод.Количество() > 0 Тогда
		СуммаСНачалаГода = 0;
		Для Каждого СтрокаДоходыЗаГод Из ДоходыЗаГод Цикл
			СтрокаДоходы = ДоходыТаблица.Найти(СтрокаДоходыЗаГод.МесяцНалоговогоПериода, "МесяцНалоговогоПериода");
			Если СтрокаДоходыЗаГод.Размер > 0 или СуммаСНачалаГода > 0 или СтрокаДоходы <> Неопределено Тогда
				Если СтрокаДоходы = Неопределено Тогда
					СтрокаДоходы = ДоходыТаблица.Добавить();
					СтрокаДоходы.МесяцНалоговогоПериода = СтрокаДоходыЗаГод.МесяцНалоговогоПериода;
				КонецЕсли;
				СуммаСНачалаГода = СуммаСНачалаГода + СтрокаДоходыЗаГод.Размер;
				Если СтрокаДоходы.Размер <> СуммаСНачалаГода Тогда
					Если СуммаСНачалаГода > 0 Тогда
						СтрокаДоходы.Размер = СуммаСНачалаГода;
					Иначе
						ДоходыТаблица.Удалить(СтрокаДоходы);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // ПеренестиДоходыЗаГодВНабор

Процедура ЗаполнитьТаблицуДоходовЗаГод(Год)
	
	Если ДоходыЗаГод.Количество() = 0 Тогда
		// если нет строк, надо их создать
		Для НомерМесяца = 1 По 12 Цикл
			ДоходыЗаГод.Добавить();
		КонецЦикла;
	КонецЕсли;
	
	// загрузим из набора доходы за выбранный год
	СуммаСНачалаГода = 0;
	Для НомерМесяца = 1 По 12 Цикл
		СтрокаТаблицы = ДоходыЗаГод[НомерМесяца - 1];
		СтрокаТаблицы.МесяцНалоговогоПериода = Дата(Год, НомерМесяца, 1);
		СтрокаНабора = ДоходыТаблица.Найти(СтрокаТаблицы.МесяцНалоговогоПериода, "МесяцНалоговогоПериода");
		Если СтрокаНабора <> Неопределено Тогда
			СтрокаТаблицы.Размер = СтрокаНабора.Размер - СуммаСНачалаГода;
		Иначе 
			СтрокаТаблицы.Размер = 0;
		КонецЕсли;
		СуммаСНачалаГода = СуммаСНачалаГода + СтрокаТаблицы.Размер;
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьТаблицуДоходовЗаГод

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если Не НастройкаПравДоступаПереопределяемый.ДоступнаРольРасчетчикаРегл() Тогда
		Предупреждение("Редактирование данных по НДФЛ недоступно!");
		Отказ = Истина;
	КонецЕсли;
	
	Если ПараметрыОткрытия <> Неопределено Тогда
		Страницы = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(ПараметрыОткрытия["Страницы"]);
		Для Каждого ИмяСтраницы Из Страницы Цикл
			ЭлементыФормы.ОсновнаяПанель.Страницы[ИмяСтраницы].Видимость = Истина;
			Если ИмяСтраницы = "Доходы" И Не НастройкаПравДоступаПереопределяемый.ДоступнаРольРасчетчикаРегл() Тогда
				ЭлементыФормы.ОсновнаяПанель.Страницы.Доходы.Видимость = Ложь;
				Продолжить;
			КонецЕсли;
			ЗаполнитьСтраницу(ИмяСтраницы);
		КонецЦикла;
		Если Страницы.Количество() = 1 Тогда
			ЭлементыФормы.ОсновнаяПанель.ОтображениеЗакладок = ОтображениеЗакладок.НеИспользовать;
		КонецЕсли;
		ПараметрыОткрытия.Свойство("Заголовок", Заголовок);
		Если ЭлементыФормы.ОсновнаяПанель.Страницы.Статус.Видимость Тогда
			ЭлементыФормы.ПанельДополнительногоЗначенияСтатуса.Свертка = ?(ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуВсехОрганизаций(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), "ИспользуетсяТрудЧленовЭкипажейМорскихСудов"), РежимСверткиЭлементаУправления.Нет, РежимСверткиЭлементаУправления.Верх)
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьИсториюЗначенийСтатусНалогоплательщикаПоНДФЛ" и Источник = ЭтаФорма Тогда
		ФизическиеЛицаКлиент.ОбработатьОповещениеОбИзмененииИсторииСтатусНалогоплательщикаПоНДФЛ(ЭтаФорма, Параметр);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыДействиеЗаписатьИЗакрыть(Кнопка)
	
	ПараметрыОповещения = Новый Структура("Физлицо", ФизлицоОбъект.Ссылка);
	
	Оповещения = Новый Массив;
	
	Если ЭлементыФормы.ОсновнаяПанель.Страницы.Вычеты.Видимость Тогда
		
		//проверим возможность записи набора записей по дате запрета редактирвоания
		Если НельзяРедактироватьДанныеПоДатеЗапретаРедактирования() Тогда
			ТекстВопроса = "Редактирование данных этого периода запрещено. Изменения не могут быть записаны! Закрыть форму, не сохраняя данные?";
			Если Вопрос(ТекстВопроса,РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
				Закрыть();
			КонецЕсли;
			Возврат;
		КонецЕсли;
		
		НДФЛСтандартныеВычетыФизлиц.Очистить();
		Для каждого СтрокаТаблицы Из СтандартныеВычеты Цикл
			ЗаписьНабора = НДФЛСтандартныеВычетыФизлиц.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьНабора, СтрокаТаблицы);
			ЗаписьНабора.Физлицо = ФизлицоОбъект.Ссылка;
		КонецЦикла;
		
		НДФЛСтандартныеВычетыНаДетей.Очистить();
		Для каждого СтрокаТаблицы Из СтандартныеВычетыНаДетей Цикл
			ЗаписьНабора = НДФЛСтандартныеВычетыНаДетей.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьНабора, СтрокаТаблицы);
			ЗаписьНабора.Физлицо = ФизлицоОбъект.Ссылка;
			ЗаписьНабора.КоличествоДетейЗавершения = 0;
		КонецЦикла;
		
		ПараметрыОповещения.Вставить("ПредоставлятьВычеты", ПредоставлятьВычеты);
		ПараметрыОповещения.Вставить("ДатаПредоставленияВычетов", ДатаПредоставленияВычетов);
		
		Оповещения.Добавить("ИзмененыВычетыНДФЛ");
		
	КонецЕсли;
	
	Если ЭлементыФормы.ОсновнаяПанель.Страницы.Статус.Видимость Тогда
		
		// обработаем статус налогоплательщика, запишем в таблицу данные, которые показывали в форме на дату
		СтруктураПоиска = Новый Структура("Период");
		СтруктураПоиска.Вставить("Период", ДатаСтатусНалогоплательщикаПоНДФЛ);
		МассивСтрок = мТаблицаЗаписейСтатусНалогоплательщикаПоНДФЛ.НайтиСтроки(СтруктураПоиска);
		Если МассивСтрок.Количество() > 0 Тогда
			СтрокаТаблицы = МассивСтрок[0];
			СтрокаТаблицы.Статус  = СтатусНалогоплательщикаПоНДФЛ;
		Иначе
			// в регистре еще нет записей о статусе по этому физлицу
			// добавим значение из формы в таблицу
			НоваяСтрока = мТаблицаЗаписейСтатусНалогоплательщикаПоНДФЛ.Добавить();
			НоваяСтрока.Физлицо = ФизлицоОбъект.Ссылка;
			НоваяСтрока.Период  = ДатаСтатусНалогоплательщикаПоНДФЛ;
			НоваяСтрока.Статус  = СтатусНалогоплательщикаПоНДФЛ;
			мТаблицаЗаписейСтатусНалогоплательщикаПоНДФЛ.Сортировать("Период");
		КонецЕсли;
		
		// если в наборе всего одна строка, и она содержит значения по умолчанию, 
		// нет необходимости ее записывать
		Если мТаблицаЗаписейСтатусНалогоплательщикаПоНДФЛ.Количество() = 1 Тогда
			Если мТаблицаЗаписейСтатусНалогоплательщикаПоНДФЛ[0].Статус = Перечисления.СтатусыНалогоплательщиковПоНДФЛ.Резидент
				И мТаблицаЗаписейСтатусНалогоплательщикаПоНДФЛ[0].Период = НачалоГода(ОбщегоНазначения.ПолучитьРабочуюДату()) Тогда
				мТаблицаЗаписейСтатусНалогоплательщикаПоНДФЛ.Удалить(мТаблицаЗаписейСтатусНалогоплательщикаПоНДФЛ[0]);
			КонецЕсли;
		КонецЕсли;

		СтатусФизЛицКакНалогоплательщиковНДФЛ.Загрузить(мТаблицаЗаписейСтатусНалогоплательщикаПоНДФЛ);
		
		Оповещения.Добавить("ИзмененСтатусНалогоплательщика");
		
	КонецЕсли;
	
	Если ЭлементыФормы.ОсновнаяПанель.Страницы.Доходы.Видимость Тогда
		
		ПеренестиДоходыЗаГодВНабор();
		
		НДФЛДоходыПредыдущегоМестаРаботы.Загрузить(ДоходыТаблица);
		
		Оповещения.Добавить("ИзмененыДоходыПредыдущегоМестаРаботы");
		
	КонецЕсли;
	
	Закрыть();
  	
	Для Каждого ИмяОповещения Из Оповещения Цикл
		Оповестить(ИмяОповещения, ПараметрыОповещения, ВладелецФормы);
	КонецЦикла;

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОГО ПОЛЯ СтандартныеВычеты

Процедура СтандартныеВычетыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.КодВычетаЛичный = Справочники.ВычетыНДФЛ.Код103;	
	КонецЕсли;
	
	Элемент.Колонки.ВычетыЛичныеПрименение.ЭлементУправления.Значение = ЗначениеЗаполнено(Элемент.ТекущиеДанные.КодВычетаЛичный);
	
КонецПроцедуры

Процедура СтандартныеВычетыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеСтроки.Ячейки.ВычетыЛичныеТекст.Видимость = Ложь;
	ОформлениеСтроки.Ячейки.ВычетыЛичныеПрименение.Значение = ЗначениеЗаполнено(ДанныеСтроки.КодВычетаЛичный);
	
КонецПроцедуры

Процедура СтандартныеВычетыВычетыЛичныеПрименениеПриИзменении(Элемент)
    Если Не Элемент.Значение  Тогда
        ЭлементыФормы.СтандартныеВычеты.ТекущиеДанные.КодВычетаЛичный = Справочники.ВычетыНДФЛ.ПустаяСсылка();
    Иначе
        ЭлементыФормы.СтандартныеВычеты.ТекущиеДанные.КодВычетаЛичный = Справочники.ВычетыНДФЛ.Код103;
    КонецЕсли;
КонецПроцедуры

Процедура СтандартныеВычетыКодВычетаЛичныйПриИзменении(Элемент)
	
	ЭлементыФормы.СтандартныеВычеты.Колонки.ВычетыЛичныеПрименение.ЭлементУправления.Значение = ЗначениеЗаполнено(Элемент.Значение);
	
КонецПроцедуры

// Процедура - обработчик события "Начало выбора" поля "КодВычетаЛичный".
//
Процедура СтандартныеВычетыКодВычетаЛичныйНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФормаВыбора = Справочники.ВычетыНДФЛ.ПолучитьФормуВыбора(, Элемент);
	ФормаВыбора.Отбор.Ссылка.ВидСравнения	= ВидСравнения.ВСписке;
	ФормаВыбора.Отбор.Ссылка.Значение		= мСписокВыбораСтандартныхВычетов;
	ФормаВыбора.Отбор.Ссылка.Использование	= Истина;
	ФормаВыбора.НачальноеЗначениеВыбора = Элемент.Значение;
	ФормаВыбора.Открыть();

КонецПроцедуры

// Процедура - обработчик события "Авто подбор текста" поля "КодВычетаЛичный".
//
Процедура СтандартныеВычетыКодВычетаЛичныйАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, Новый Структура("Ссылка",мСписокВыбораСтандартныхВычетов), Тип("СправочникСсылка.ВычетыНДФЛ"));

КонецПроцедуры

// Процедура - обработчик события "Окончание ввода текста" поля "КодВычетаЛичный".
//
Процедура СтандартныеВычетыКодВычетаЛичныйОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, Новый Структура("Ссылка",мСписокВыбораСтандартныхВычетов), ЭтаФорма, Тип("СправочникСсылка.ВычетыНДФЛ"), Ложь, Ложь, Неопределено, Ложь);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОГО ПОЛЯ СтандартныеВычетыНаДетей

Процедура СтандартныеВычетыНаДетейПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если НоваяСтрока Тогда
		ТекущиеДанные.КодВычета = Справочники.ВычетыНДФЛ.Код101;	
        ТекущиеДанные.КоличествоДетей = 1;
	КонецЕсли;
	
	Элемент.Колонки.ВычетыНаДетейПрименение.ЭлементУправления.Значение = ЗначениеЗаполнено(ТекущиеДанные.КоличествоДетей);
	
КонецПроцедуры

Процедура СтандартныеВычетыНаДетейПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеСтроки.Ячейки.ВычетыНаДетейТекст.Видимость = Ложь;
	ОформлениеСтроки.Ячейки.ВычетыНаДетейПрименение.Значение = ЗначениеЗаполнено(ДанныеСтроки.КоличествоДетей);
	
КонецПроцедуры

Процедура СтандартныеВычетыВычетыНаДетейПрименениеПриИзменении(Элемент)
	ТекущиеДанные = ЭлементыФормы.СтандартныеВычетыНаДетей.ТекущиеДанные;
	Если Не Элемент.Значение Тогда
        ТекущиеДанные.КоличествоДетей = 0;
    ИначеЕсли ТекущиеДанные.КодВычета = Справочники.ВычетыНДФЛ.ПустаяСсылка() Тогда
        ТекущиеДанные.КодВычета = Справочники.ВычетыНДФЛ.Код101;
        ТекущиеДанные.КоличествоДетей = 1;
	Иначе 	
        ТекущиеДанные.КоличествоДетей = 1;
	КонецЕсли;
КонецПроцедуры

// Процедура - обработчик события "Начало выбора" поля "КодВычетаНаДетей".
//
Процедура СтандартныеВычетыКодВычетаНаДетейНачалоВыбора(Элемент, СтандартнаяОбработка)
		
	СтандартнаяОбработка = Ложь;
	ФормаВыбора = Справочники.ВычетыНДФЛ.ПолучитьФормуВыбора(, Элемент);
	ФормаВыбора.Отбор.Ссылка.ВидСравнения	= ВидСравнения.ВСписке;
	ФормаВыбора.Отбор.Ссылка.Значение		= мСписокВыбораСтандартныхВычетовНаДетей;
	ФормаВыбора.Отбор.Ссылка.Использование	= Истина;
	ФормаВыбора.НачальноеЗначениеВыбора = Элемент.Значение;
	ФормаВыбора.Открыть();
	
КонецПроцедуры

Процедура СтандартныеВычетыКодВычетаНаДетейПриИзменении(Элемент)
	
	ЭлементыФормы.СтандартныеВычетыНаДетей.Колонки.ВычетыНаДетейПрименение.ЭлементУправления.Значение = ЗначениеЗаполнено(Элемент.Значение);	
	Если ЭлементыФормы.СтандартныеВычетыНаДетей.ТекущиеДанные.КоличествоДетей = 0 Тогда
		ЭлементыФормы.СтандартныеВычетыНаДетей.ТекущиеДанные.КоличествоДетей = 1;	
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "Авто подбор текста" поля "КодВычетаНаДетей".
//
Процедура СтандартныеВычетыКодВычетаНаДетейАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, Новый Структура("Ссылка",мСписокВыбораСтандартныхВычетовНаДетей), Тип("СправочникСсылка.ВычетыНДФЛ"));
	
КонецПроцедуры

// Процедура - обработчик события "Ввода текста" поля "КодВычетаНаДетей".
//
Процедура СтандартныеВычетыКодВычетаНаДетейОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, Новый Структура("Ссылка",мСписокВыбораСтандартныхВычетовНаДетей), ЭтаФорма, Тип("СправочникСсылка.ВычетыНДФЛ"), Ложь, Ложь, Неопределено, Ложь);
	
КонецПроцедуры

Процедура СтандартныеВычетыНаДетейПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для каждого ОформлениеСтроки Из ОформленияСтрок Цикл
	
		ОформлениеСтроки.Ячейки.КолонкаПериод.Видимость = Ложь;	
	
	КонецЦикла;
	
КонецПроцедуры

Процедура СтандартныеВычетыНаДетейПериодЗавершенияПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Элемент.Значение) Тогда
		Элемент.Значение = КонецМесяца(Элемент.Значение)
	КонецЕсли;
КонецПроцедуры

// Функция проверяет возможность записи наборов записей по дате запрета редактирования
Функция НельзяРедактироватьДанныеПоДатеЗапретаРедактирования()

	Отказ = Ложь;
	
	Если СтандартныеВычеты.Количество()>0 Тогда
		НаборДляПроверки = РегистрыСведений.НДФЛСтандартныеВычетыФизлиц.СоздатьНаборЗаписей();
		НаборДляПроверки.Отбор.Физлицо.Использование = Истина;
		НаборДляПроверки.Отбор.Физлицо.Значение = ФизлицоОбъект.Ссылка;
		Для каждого СтрокаТаблицы Из СтандартныеВычеты Цикл
			ЗаписьНабора = НаборДляПроверки.Добавить();
			ЗаписьНабора.Физлицо = ФизлицоОбъект.Ссылка;
			ЗаписьНабора.Период  = СтрокаТаблицы.Период;
			ЗаписьНабора.КодВычетаЛичный = СтрокаТаблицы.КодВычетаЛичный;
		КонецЦикла;
		НастройкаПравДоступа.ПроверкаПериодаЗаписейРегистров(НаборДляПроверки, Отказ, "РегистрСведений");
		Если Отказ Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если СтандартныеВычетыНаДетей.Количество()>0 Тогда
		НаборДляПроверки = РегистрыСведений.НДФЛСтандартныеВычетыНаДетей.СоздатьНаборЗаписей();
		НаборДляПроверки.Отбор.Физлицо.Использование = Истина;
		НаборДляПроверки.Отбор.Физлицо.Значение = ФизлицоОбъект.Ссылка;
		Для каждого СтрокаТаблицы Из СтандартныеВычетыНаДетей Цикл
			ЗаписьНабора = НаборДляПроверки.Добавить();
			ЗаписьНабора.Физлицо = ФизлицоОбъект.Ссылка;
			ЗаписьНабора.Период  = СтрокаТаблицы.Период;
			ЗаписьНабора.ПериодЗавершения  = СтрокаТаблицы.ПериодЗавершения;
			ЗаписьНабора.КодВычета = СтрокаТаблицы.КодВычета;
			ЗаписьНабора.КоличествоДетей = СтрокаТаблицы.КоличествоДетей;
			ЗаписьНабора.КоличествоДетейЗавершения = 0;
		КонецЦикла;
		НастройкаПравДоступа.ПроверкаПериодаЗаписейРегистров(НаборДляПроверки, Отказ, "РегистрСведений");
		Если Отказ Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции // НельзяРедактироватьДанныеПоДатеЗапретаРедактирования()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ СТРАНИЦЫ СТАТУСА

Процедура ПериодСтатусаНалогоплательщикаПоНДФЛПриИзменении(Элемент)
	
	ФизическиеЛицаКлиент.ОбработатьИзменениеПериодСтатусаНалогоплательщикаПоНДФЛ(ЭтаФорма);
	
КонецПроцедуры

Процедура ПериодСтатусаНалогоплательщикаПоНДФЛНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	мБылаДатаСтатусНалогоплательщикаПоНДФЛ = ДатаСтатусНалогоплательщикаПоНДФЛ;
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, ДатаСтатусНалогоплательщикаПоНДФЛ, ЭтаФорма);
	Если мБылаДатаСтатусНалогоплательщикаПоНДФЛ <> ДатаСтатусНалогоплательщикаПоНДФЛ Тогда
		Элемент.Значение = РаботаСДиалогамиЗК.ПолучитьПредставлениеПериодаКакМесяцГодРодительныйПадеж(Элемент.Значение);
		ФизическиеЛицаКлиент.ОбработатьИзменениеПериодСтатусаНалогоплательщикаПоНДФЛ(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПериодСтатусаНалогоплательщикаПоНДФЛОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

Процедура ОбработчикОжиданияПериодСтатусаНалогоплательщикаПоНДФЛРегулирование()
	
	ФизическиеЛицаКлиент.ОбработатьИзменениеПериодСтатусаНалогоплательщикаПоНДФЛ(ЭтаФорма);
	
КонецПроцедуры

Процедура ПериодСтатусаНалогоплательщикаПоНДФЛРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ДатаСтатусНалогоплательщикаПоНДФЛ = ДобавитьМесяц(ДатаСтатусНалогоплательщикаПоНДФЛ, Направление);
	ПериодСтатусаНалогоплательщикаПоНДФЛ = РаботаСДиалогамиЗК.ПолучитьПредставлениеПериодаКакМесяцГодРодительныйПадеж(ДатаСтатусНалогоплательщикаПоНДФЛ);
	
	ПодключитьОбработчикОжидания("ОбработчикОжиданияПериодСтатусаНалогоплательщикаПоНДФЛРегулирование", 0.1, Истина);
	
КонецПроцедуры

Процедура ПериодСтатусаНалогоплательщикаПоНДФЛАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	РаботаСДиалогами.ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);
		
КонецПроцедуры

Процедура ПериодСтатусаНалогоплательщикаПоНДФЛОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	РаботаСДиалогами.ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура РезидентПриИзменении(Элемент)
	ЭтаФорма.РасшифровкаНДФЛ = ФизическиеЛицаКлиент.ПолучитьОписаниеСтатусаНалогоплательщикаПоНДФЛ(СтатусНалогоплательщикаПоНДФЛ);
КонецПроцедуры

Процедура НадписьИсторияНажатие(Элемент)
	
	ПараметрИсторииЗначений = Новый Структура;
	ПараметрИсторииЗначений.Вставить("ИмяКолонки", "Физлицо");
	ПараметрИсторииЗначений.Вставить("Значение", ФизлицоОбъект.Ссылка);
	МассивИменаНевидимыхКолонок = Новый Массив;
	МассивИменаНевидимыхКолонок.Добавить("Физлицо");
	МассивИменаКолонокАвтоОтметкаНезаполненного = Новый Массив;
	ПорядокПредставленияПериода = "НачалоМесяца";
	
	РаботаСДиалогамиЗК.ОткрытьФормуИсторииЗначений(ЭтаФорма, Элемент, "СтатусНалогоплательщикаПоНДФЛ", мТаблицаЗаписейСтатусНалогоплательщикаПоНДФЛ,
										ПараметрИсторииЗначений, МассивИменаНевидимыхКолонок,
										МассивИменаКолонокАвтоОтметкаНезаполненного, ПорядокПредставленияПериода,
										"История изменения статуса налогоплательщика НДФЛ", ЭлементыФормы.ПериодСтатусаНалогоплательщикаПоНДФЛ.ТолькоПросмотр);
	
КонецПроцедуры // НадписьИсторияНажатие

Процедура ГодПриИзменении(Элемент)
	
	ПеренестиДоходыЗаГодВНабор();
	ЗаполнитьТаблицуДоходовЗаГод(Год);
	
КонецПроцедуры // ГодПриИзменении