////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обновляет заголовок формы по выбранному 
//  владельцу справочника
//
// Параметры: 
//  Нет.
//
// Возвращаемое значение:
//  Нет.
//
Процедура ОбновитьЗаголовок()
	
	Заголовок = "Подразделения " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("организации") + " " + Организация.Наименование;
	
	ПодразделенияОрганизацийПереопределяемый.ОбновитьДополнительно(ЭтаФорма);
	
КонецПроцедуры // ОбновитьЗаголовок()

// Процедура подбирает организацию для заполнения реквизита формы Организация
Процедура ПодобратьОрганизацию()
	
	// получим организацию заданную по умолчанию
	Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	Если Организация.Пустая() Или Не ОбщегоНазначения.ЭтоДоступнаяОрганизация(Организация) Тогда
		//для пользователя не задана организация по умолчанию, подберем первую разрешенную
		Организация = РаботаСДиалогами.ПодобратьОрганизацию();
	КонецЕсли;

КонецПроцедуры // ПодобратьОрганизацию()

Процедура УстановитьЗаголовкиОрганизацийВФорме()
	
	ЭлементыФормы.НадписьОрганизация.Заголовок = "Подразделения " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("организации");
	ЭлементыФормы.НадписьОрганизация.Значение = "Подразделения " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("организации");
	
КонецПроцедуры // УстановитьЗаголовкиОрганизацийВФорме()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	РаботаСДиалогами.УдалитьКнопкуПрава(ЭлементыФормы.ДействияФормы.Кнопки);
	
	// заполним организацию
	Если ПараметрВыборПоВладельцу <> Неопределено Тогда
		Организация = ПараметрВыборПоВладельцу
	ИначеЕсли ПараметрОтборПоВладельцу <> Неопределено Тогда
		Организация = ПараметрОтборПоВладельцу
	ИначеЕсли ЭтаФорма.ПараметрТекущаяСтрока <> Неопределено Тогда
		// перешли в список из формы элемента
		Организация = ЭтаФорма.ПараметрТекущаяСтрока.Владелец;
	ИначеЕсли Организация.Пустая() Тогда
		ПодобратьОрганизацию();
	КонецЕсли;
	
	ИзменениеАктуальностиЭлементовПереопределяемый.ФормаСпискаПередОткрытиемДополнительно(ЭтаФорма, Новый Действие("ДействияФормыНазначаемое"), СправочникСписок);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	// заполним организацию
	Если ПараметрВыборПоВладельцу <> Неопределено Тогда
		Организация = ПараметрВыборПоВладельцу
	ИначеЕсли ПараметрОтборПоВладельцу <> Неопределено Тогда
		Организация = ПараметрОтборПоВладельцу	
	ИначеЕсли Организация.Пустая() Тогда
		ПодобратьОрганизацию();
	КонецЕсли;
	
	ОбновитьЗаголовок();
	
	ЭлементыФормы.СправочникСписок.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни;
	УстановитьЗаголовкиОрганизацийВФорме();
	
	СправочникСписок.Порядок.Установить("Порядок");
	
	НазначаемоеДействие = Новый Действие("ДействияФормыНазначаемое");
	ПодразделенияОрганизацийПереопределяемый.ПриОткрытииДополнительно(ЭтаФорма, НазначаемоеДействие);
	
	ИзменениеАктуальностиЭлементовПереопределяемый.ФормаСпискаПриОткрытииДополнительно(ЭтаФорма, СправочникСписок);
	
КонецПроцедуры

Процедура ПриПовторномОткрытии()
	
	// заполним организацию
	Если ПараметрВыборПоВладельцу <> Неопределено Тогда
		Организация = ПараметрВыборПоВладельцу
	ИначеЕсли ПараметрОтборПоВладельцу <> Неопределено Тогда
		Организация = ПараметрОтборПоВладельцу
	ИначеЕсли ЭтаФорма.ПараметрТекущаяСтрока <> Неопределено Тогда
		// перешли в список из формы элемента
		Организация = ЭтаФорма.ПараметрТекущаяСтрока.Владелец;
	ИначеЕсли Организация.Пустая() Тогда
		ПодобратьОрганизацию();
	КонецЕсли;
	
	ОбновитьЗаголовок();
	
	ЭлементыФормы.СправочникСписок.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни;
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	ИзменениеАктуальностиЭлементовПереопределяемый.ФормаСпискаПриЗакрытииДополнительно(ЭтаФорма, СправочникСписок);
	
КонецПроцедуры

Процедура ДействияФормыПраваДоступаПользователейКоВсемуСправочнику(Кнопка)
	
	НастройкаПравДоступа.РедактироватьПраваДоступа(Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура ДействияФормыПраваДоступаПользователейКТекущемуЭлементу(Кнопка)
	
	Если Не ЭлементыФормы.СправочникСписок.ТекущиеДанные = Неопределено Тогда
		НастройкаПравДоступа.РедактироватьПраваДоступа(ЭлементыФормы.СправочникСписок.ТекущиеДанные.Ссылка);
	Иначе
		Предупреждение("Не выбрано подразделение для настройки прав доступа!");
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыПереместитьВверх(Кнопка)
	
	Если СправочникСписок.Порядок.Найти("Порядок") = Неопределено Тогда
		Предупреждение("Изменять порядок элементов можно только если установлена сортировка по порядку!");
		Возврат;
	КонецЕсли;
	
	ДанныеСтроки = ЭлементыФормы.СправочникСписок.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначения.ИзменитьПорядок(ДанныеСтроки.Ссылка, "Вверх");
	
КонецПроцедуры

Процедура ДействияФормыПереместитьВниз(Кнопка)
	
	Если СправочникСписок.Порядок.Найти("Порядок") = Неопределено Тогда
		Предупреждение("Изменять порядок элементов можно только если установлена сортировка по порядку!");
		Возврат;
	КонецЕсли;
	
	ДанныеСтроки = ЭлементыФормы.СправочникСписок.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначения.ИзменитьПорядок(ДанныеСтроки.Ссылка, "Вниз");
	
КонецПроцедуры

Процедура ДействияФормыНазначаемое(Кнопка)
	
	ПодразделенияОрганизацийПереопределяемый.ВыполнитьДополнительныеДействия(ЭтаФорма, Кнопка);
	
	ИзменениеАктуальностиЭлементовПереопределяемый.ВыполнитьДополнительныеДействияФормыСписка(Кнопка, ЭтаФорма, СправочникСписок);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// обновляем заголовок формы
Процедура ОрганизацияПриИзменении(Элемент)

	ОбновитьЗаголовок();
	
	//после смены организации раскроем все уровни иерархии
	ЭлементыФормы.СправочникСписок.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни;

КонецПроцедуры

Процедура СправочникСписокПриПолученииДанных(Элемент, ОформленияСтрок)
		
	ИзменениеАктуальностиЭлементовПереопределяемый.ФормаСпискаОформлениеСпискаДополнительно(ЭтаФорма, Элемент, ОформленияСтрок);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ