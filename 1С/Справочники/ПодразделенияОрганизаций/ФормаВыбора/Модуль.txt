////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обновляет заголовок формы по выбранному 
//  владельцу справочника
//
// Параметры: 
//  Нет.
//
// Возвращаемое значение:
//  Нет.
//
Процедура ОбновитьЗаголовок()

	Заголовок = "Список подразделений " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("организации") + " " + Организация.Наименование

КонецПроцедуры // ОбновитьЗаголовок()

// Процедура подбирает организацию для заполнения реквизита формы Организация
Процедура ПодобратьОрганизацию()
	
	// получим организацию заданную по умолчанию
	Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	Если Организация.Пустая() Тогда
		Организация = ПодразделенияОрганизацийПереопределяемый.ПодобратьОрганизацию(Организация);

	КонецЕсли;

КонецПроцедуры // ПодобратьОрганизацию()

Процедура УстановитьЗаголовкиОрганизацийВФорме()
	
	ЭлементыФормы.НадписьОрганизация.Заголовок = "Подразделения " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("организации");
	ЭлементыФормы.НадписьОрганизация.Значение = "Подразделения " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("организации");
КонецПроцедуры // УстановитьЗаголовкиОрганизацийВФорме()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// заполним организацию
	Если ПараметрВыборПоВладельцу <> Неопределено Тогда
		Организация = ПараметрВыборПоВладельцу;
		
	ИначеЕсли ПараметрОтборПоВладельцу <> Неопределено Тогда
		Организация = ПараметрОтборПоВладельцу;
		
	ИначеЕсли ЭтаФорма.ПараметрТекущаяСтрока <> Неопределено Тогда
		// перешли в список из формы элемента
		Организация = ЭтаФорма.ПараметрТекущаяСтрока.Владелец;
		
	ИначеЕсли ТипЗнч(НачальноеЗначениеВыбора) = Тип("СправочникСсылка.ПодразделенияОрганизаций") и Не НачальноеЗначениеВыбора.Пустая() Тогда
		Организация = НачальноеЗначениеВыбора.Владелец;
		
	ИначеЕсли Организация.Пустая() Тогда
		ПодобратьОрганизацию();
		
	КонецЕсли;
	
	ОбновитьЗаголовок();
	
	ИзменениеАктуальностиЭлементовПереопределяемый.ФормаСпискаПередОткрытиемДополнительно(ЭтаФорма, Новый Действие("ДополнительныеДействия"), СправочникСписок);
	
КонецПроцедуры

Процедура ПриПовторномОткрытии()
	
	// заполним организацию
	Если ПараметрВыборПоВладельцу <> Неопределено Тогда
		Организация = ПараметрВыборПоВладельцу;
		
	ИначеЕсли ПараметрОтборПоВладельцу <> Неопределено Тогда
		Организация = ПараметрОтборПоВладельцу;
		
	ИначеЕсли ЭтаФорма.ПараметрТекущаяСтрока <> Неопределено Тогда
		// перешли в список из формы элемента
		Организация = ЭтаФорма.ПараметрТекущаяСтрока.Владелец;
		
	ИначеЕсли ТипЗнч(НачальноеЗначениеВыбора) = Тип("СправочникСсылка.ПодразделенияОрганизаций") и Не НачальноеЗначениеВыбора.Пустая() Тогда
		Организация = НачальноеЗначениеВыбора.Владелец;
		
	ИначеЕсли Организация.Пустая() Тогда
		ПодобратьОрганизацию();
		
	КонецЕсли;
	
	ОбновитьЗаголовок();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	УстановитьЗаголовкиОрганизацийВФорме();
	
	СправочникСписок.Порядок.Установить("Порядок");
	
	ИзменениеАктуальностиЭлементовПереопределяемый.ФормаСпискаПриОткрытииДополнительно(ЭтаФорма, СправочникСписок);
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	ИзменениеАктуальностиЭлементовПереопределяемый.ФормаСпискаПриЗакрытииДополнительно(ЭтаФорма, СправочникСписок);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ, ОБЩИХ ДЛЯ ВСЕЙ ФОРМЫ

Процедура ДействияФормыИерархическийПросмотр(Кнопка)
	// Вставить содержимое обработчика.
	Если Кнопка.Пометка = Истина Тогда
		ЭлементыФормы.СправочникСписок.Дерево = Ложь;
	 	ЭлементыФормы.СправочникСписок.ИерархическийПросмотр = Ложь;
		Кнопка.Пометка = Ложь;
	Иначе
		ЭлементыФормы.СправочникСписок.Дерево = Истина;
	 	ЭлементыФормы.СправочникСписок.ИерархическийПросмотр = Истина;
		Кнопка.Пометка = Истина;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура ДополнительныеДействия(Элемент)
	
	ИзменениеАктуальностиЭлементовПереопределяемый.ВыполнитьДополнительныеДействияФормыСписка(Элемент, ЭтаФорма, СправочникСписок);
	
КонецПроцедуры // ДополнительныеДействия

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// обновляем заголовок формы
Процедура ОрганизацияПриИзменении(Элемент)

	ОбновитьЗаголовок()

КонецПроцедуры

Процедура СправочникСписокПриПолученииДанных(Элемент, ОформленияСтрок)
	
	ИзменениеАктуальностиЭлементовПереопределяемый.ФормаСпискаОформлениеСпискаДополнительно(ЭтаФорма, Элемент, ОформленияСтрок);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ