Процедура УправлениеЭлементамиУправленияРеквизитов()

	Если ВидСтроки=Перечисления.ВидыСтрокФинансовогоРасчета.ИсточникиДанныхДляРасчетов Тогда

		ЭлементыФормы.Измерение.Доступность=Истина;

		ЭлементыФормы.Формула.КнопкаВыбора=Ложь;
		ЭлементыФормы.Формула.КнопкаСпискаВыбора=Истина;
		ЭлементыФормы.Формула.Доступность=Истина;
		ЭлементыФормы.НадписьИзмерение.Заголовок="Источник:";
		ЭлементыФормы.НадписьФормула.Заголовок="Показатель";
		
		ЭлементыФормы.Измерение.АвтоОтметкаНезаполненного=Истина;
		ЭлементыФормы.Формула.АвтоОтметкаНезаполненного=Истина;

	ИначеЕсли ВидСтроки=Перечисления.ВидыСтрокФинансовогоРасчета.ОборотыПоСтатьеОборотов Тогда

		ЭлементыФормы.Измерение.Доступность=Истина;

		ЭлементыФормы.Формула.КнопкаВыбора=Ложь;
		ЭлементыФормы.Формула.КнопкаСпискаВыбора=Ложь;
		ЭлементыФормы.Формула.Доступность=Ложь;
		
		ЭлементыФормы.НадписьИзмерение.Заголовок="Статья оборотов:";
		ЭлементыФормы.НадписьФормула.Заголовок="";
		
		ЭлементыФормы.Измерение.АвтоОтметкаНезаполненного=Истина;
		ЭлементыФормы.Формула.АвтоОтметкаНезаполненного=Ложь;
		ЭлементыФормы.Формула.ОтметкаНезаполненного=Ложь;

	ИначеЕсли ВидСтроки=Перечисления.ВидыСтрокФинансовогоРасчета.ОстаткиОборотыПоПлануСчетов Тогда

		ЭлементыФормы.Измерение.Доступность=Истина;

		ЭлементыФормы.Формула.КнопкаВыбора=Ложь;
		ЭлементыФормы.Формула.КнопкаСпискаВыбора=Истина;
		ЭлементыФормы.Формула.Доступность=Истина;
		
		ЭлементыФормы.НадписьИзмерение.Заголовок="Счет:";
		ЭлементыФормы.НадписьФормула.Заголовок="Вид остатка/оборота:";
		
		ЭлементыФормы.Измерение.АвтоОтметкаНезаполненного=Истина;
		ЭлементыФормы.Формула.АвтоОтметкаНезаполненного=Истина;

	Иначе 

		ЭлементыФормы.Измерение.Доступность=Ложь;

		ЭлементыФормы.Формула.КнопкаВыбора=Истина;
		ЭлементыФормы.Формула.КнопкаСпискаВыбора=Ложь;
		ЭлементыФормы.Формула.Доступность=Истина;
		
		ЭлементыФормы.НадписьИзмерение.Заголовок="";
		ЭлементыФормы.НадписьФормула.Заголовок="Формула:";
		
		ЭлементыФормы.Измерение.АвтоОтметкаНезаполненного=Ложь;
		ЭлементыФормы.Измерение.ОтметкаНезаполненного=Ложь;

		ЭлементыФормы.Формула.АвтоОтметкаНезаполненного=Истина;

	КонецЕсли;

	Если НЕ (ЭлементыФормы.Измерение.Значение=Неопределено ИЛИ ЭлементыФормы.Измерение.Значение.Пустая())  Тогда
		
		Если ВидСтроки=Перечисления.ВидыСтрокФинансовогоРасчета.ИсточникиДанныхДляРасчетов Тогда
			
			СписокПоказателей=Новый СписокЗначений;
			
			Для каждого Показатель Из ЭлементыФормы.Измерение.Значение.Показатели Цикл
				
				Если Показатель.Использование Тогда
					СписокПоказателей.Добавить(Показатель.Имя, Показатель.Представление);
				КонецЕсли;
				
			КонецЦикла; 
			
			ЭлементыФормы.Формула.СписокВыбора=СписокПоказателей;
			
		ИначеЕсли ВидСтроки=Перечисления.ВидыСтрокФинансовогоРасчета.ОстаткиОборотыПоПлануСчетов Тогда
			
			СписокПоказателей=Новый СписокЗначений;
			
			СписокПоказателей.Добавить("КонечныйОстаток","Конечный остаток");
			СписокПоказателей.Добавить("КонечныйОстатокДт","Конечный остаток (Дт)");
			СписокПоказателей.Добавить("КонечныйОстатокКт","Конечный остаток (Кт)");
			СписокПоказателей.Добавить("КонечныйРазвернутыйОстатокДт","Конечный развернутый остаток (Дт)");
			СписокПоказателей.Добавить("КонечныйРазвернутыйОстатокКт","Конечный развернутый остаток (Кт)");
			СписокПоказателей.Добавить("НачальныйОстаток","Начальный остаток");
			СписокПоказателей.Добавить("НачальныйОстатокДт","Начальный остаток (Дт)");
			СписокПоказателей.Добавить("НачальныйОстатокКт","Начальный остаток (Кт)");
			СписокПоказателей.Добавить("НачальныйРазвернутыйОстатокДт","Начальный развернутый остаток (Дт)");
			СписокПоказателей.Добавить("НачальныйРазвернутыйОстатокКт","Начальный развернутый остаток (Кт)");
			СписокПоказателей.Добавить("Оборот","Оборот");
			СписокПоказателей.Добавить("ОборотДт","Оборот (Дт)");
			СписокПоказателей.Добавить("ОборотКт","Оборот (Кт)");
			
			ЭлементыФормы.Формула.СписокВыбора=СписокПоказателей;
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры // УправлениеЭлементамиУправленияРеквизитов()

Процедура ВидСтрокиПриИзменении(Элемент)

	Формула="";

	Если ВидСтроки=Перечисления.ВидыСтрокФинансовогоРасчета.ИсточникиДанныхДляРасчетов Тогда

		ЭлементыФормы.Измерение.Значение=Новый(Тип("СправочникСсылка.ИсточникиДанныхДляРасчетовБюджетирования"));

	ИначеЕсли ВидСтроки=Перечисления.ВидыСтрокФинансовогоРасчета.ОборотыПоСтатьеОборотов Тогда

		ЭлементыФормы.Измерение.Значение=Новый(Тип("СправочникСсылка.СтатьиОборотовПоБюджетам"));

	ИначеЕсли ВидСтроки=Перечисления.ВидыСтрокФинансовогоРасчета.ОстаткиОборотыПоПлануСчетов Тогда

		ЭлементыФормы.Измерение.Значение=Новый(Тип("ПланСчетовСсылка.Бюджетирование"));

	ИначеЕсли ВидСтроки=Перечисления.ВидыСтрокФинансовогоРасчета.РасчетПоДругимСтрокамОтчета Тогда		
				
		ЭлементыФормы.Измерение.Значение="";
		
	Иначе
		
	КонецЕсли;
	
	УправлениеЭлементамиУправленияРеквизитов();
	
КонецПроцедуры

Процедура ИзмерениеПриИзменении(Элемент)

	Если Наименование="" Тогда
		Наименование=Измерение;
	КонецЕсли;
	
	Формула="";

	УправлениеЭлементамиУправленияРеквизитов();

КонецПроцедуры



// Формирует список строк бюджета, использующих в расчетах значение текущей строки
//
// Параметры
//  СписокСтрок: список значений- текущий список
//
// Возвращаемое значение:                                         
//   СписокСтрок 
//
Процедура СписокИсключаемыхСтрок(СписокСтрок)
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	СтрокиРасчетаСтрокиРасчетаДляФормулы.Ссылка КАК СтрокаРасчета
	|ИЗ
	|	Справочник.СтрокиФинансовогоРасчета.СтрокиРасчетаДляФормулы КАК СтрокиРасчетаСтрокиРасчетаДляФормулы
	|
	|ГДЕ
	|	СтрокиРасчетаСтрокиРасчетаДляФормулы.Ссылка.Владелец = &Владелец И
	|	СтрокиРасчетаСтрокиРасчетаДляФормулы.Ссылка НЕ В(&СписокСтрок) И
	|	СтрокиРасчетаСтрокиРасчетаДляФормулы.СтрокаРасчета В(&СписокСтрок)";
	
	Запрос.УстановитьПараметр("Владелец",Владелец);
	Запрос.УстановитьПараметр("СписокСтрок",СписокСтрок);
	
	РезультатЗапроса=Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка=РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			СписокСтрок.Добавить(Выборка.СтрокаРасчета);
		КонецЦикла;
		СписокИсключаемыхСтрок(СписокСтрок);
	Иначе
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // СписокИсключаемыхСтрок()
 
Процедура ФормулаНачалоВыбора(Элемент, СтандартнаяОбработка)

	Форма = ПолучитьФорму("ФормаВводаФормулы", ЭтаФорма, "дляФормаВводаФормулы");

	Если Форма.Открыта() Тогда
		Форма.Активизировать();
		Если Вопрос("Предыдущая операция ввода формулы не завершена.
			|Завершить?",РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Да)=КодВозвратаДиалога.Да Тогда
			Форма.Закрыть();
		КонецЕсли;
	КонецЕсли;	
	
	НачальныйСписок=Новый СписокЗначений;
	НачальныйСписок.Добавить(Ссылка);
	
	СписокИсключаемыхСтрок(НачальныйСписок);
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	СтрокиРасчета.Код КАК Код,
	|	СтрокиРасчета.Ссылка КАК СтрокаРасчета
	|ИЗ
	|	Справочник.СтрокиФинансовогоРасчета КАК СтрокиРасчета
	|
	|ГДЕ
	|	СтрокиРасчета.Владелец = &Владелец И
	|	СтрокиРасчета.Ссылка НЕ В (&СписокИсключаемыхСтрок)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код";

	Запрос.УстановитьПараметр("Владелец",Владелец);
	Запрос.УстановитьПараметр("СписокИсключаемыхСтрок",НачальныйСписок);

	ТаблицаСтрок=Запрос.Выполнить().Выгрузить();
	СтруктураИсходная=Новый Структура;

	СтруктураИсходная.Вставить("ТаблицаСтрок",ТаблицаСтрок);
	СтруктураИсходная.Вставить("Текст",Формула);

	// Передача параметров в форму
	Форма.НачальноеЗначениеВыбора = СтруктураИсходная;
	Форма.РежимВыбора = Истина;
	Форма.Открыть();

КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)

	СтрокиРасчетаДляФормулы.Очистить();
	
	ЭлементыФормы.Формула.Значение=ЗначениеВыбора.Текст;
	
	Для каждого СтрокаРасчета Из ЗначениеВыбора.СтрокиРасчета Цикл
		
		Если СтрокиРасчетаДляФормулы.Найти(СтрокаРасчета.СтрокаРасчета,"СтрокаРасчета")=Неопределено Тогда
			
			НоваяСтрока=СтрокиРасчетаДляФормулы.Добавить();
			НоваяСтрока.СтрокаРасчета=СтрокаРасчета.СтрокаРасчета;
			
		КонецЕсли;
		
	КонецЦикла; 

КонецПроцедуры


Процедура ПриОткрытии()
	
	УправлениеЭлементамиУправленияРеквизитов();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если НЕ (ВидСтроки=Перечисления.ВидыСтрокФинансовогоРасчета.РасчетПоДругимСтрокамОтчета) Тогда
		СтрокиРасчетаДляФормулы.Очистить();
	КонецЕсли;
		
	Если ВидСтроки=Перечисления.ВидыСтрокФинансовогоРасчета.РасчетПоДругимСтрокамОтчета И НЕ ЭтотОбъект.Родитель.Пустая() Тогда
			
			ТекстВопроса = "Строки, значение которых рассчитывается по другим строкам бюджетов,
			|не должны входить в группы. Перенести?";
			Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
			Если Ответ = КодВозвратаДиалога.Да Тогда
				
				ЭтотОбъект.Родитель=Новый (Тип("СправочникСсылка.СтрокиФинансовогоРасчета"));
				
			Иначе
				
				Отказ=Истина;
				
			КонецЕсли;
			
		КонецЕсли;
	
КонецПроцедуры