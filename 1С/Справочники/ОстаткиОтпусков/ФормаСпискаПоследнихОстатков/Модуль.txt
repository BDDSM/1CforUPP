////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мРегламентноеЗадание;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ПриАктивизацииСтрокиСотрудника()
	
	Остатки.Очистить();
	СсылкаНаВыбранныеОстатки	= Неопределено;
	СотрудникПринятНаРаботу		= Истина;
	
	ДанныеСтроки = ЭлементыФормы.СотрудникиОрганизаций.ТекущиеДанные;
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементыФормы.НадписьСотрудник.Заголовок	= ДанныеСтроки.Наименование;
	
	Если ДанныеСтроки.ЭтоГруппа Тогда
		ЭлементыФормы.НадписьСотрудник.Заголовок	= "Группа " + ДанныеСтроки.Наименование;
		ЭлементыФормы.НадписьОстаток.Заголовок		= "";
		ЭлементыФормы.Остатки.Видимость				= Ложь;
		ЭлементыФормы.Изменить.Видимость			= Ложь;
		ЭлементыФормы.Остатки.Свертка				= РежимСверткиЭлементаУправления.Верх;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Физлицо",	ДанныеСтроки.Физлицо);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОстаткиОтпусковОстатки.Ссылка.ДатаАктуальности КАК ДатаАктуальности,
	|	ОстаткиОтпусковОстатки.ДатаНачалаРабочегоГода КАК ДатаНачалаРабочегоГода,
	|	ОстаткиОтпусковОстатки.ДатаОкончанияРабочегоГода,
	|	ОстаткиОтпусковОстатки.Количество,
	|	ОстаткиОтпусковОстатки.Ссылка
	|ИЗ
	|	Справочник.ОстаткиОтпусков.Остатки КАК ОстаткиОтпусковОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МАКСИМУМ(ОстаткиОтпусков.ДатаАктуальности) КАК ДатаАктуальности,
	|			ОстаткиОтпусков.Физлицо КАК Физлицо
	|		ИЗ
	|			Справочник.ОстаткиОтпусков КАК ОстаткиОтпусков
	|		ГДЕ
	|			ОстаткиОтпусков.Физлицо = &Физлицо
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ОстаткиОтпусков.Физлицо) КАК ОстаткиСрез
	|		ПО ОстаткиОтпусковОстатки.Ссылка.Физлицо = ОстаткиСрез.Физлицо
	|			И ОстаткиОтпусковОстатки.Ссылка.ДатаАктуальности = ОстаткиСрез.ДатаАктуальности
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаНачалаРабочегоГода";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Остатки.Добавить(), Выборка);
	КонецЦикла;
	
	СсылкаНаВыбранныеОстатки = Выборка.Ссылка;
	
	ОстаткиЗаполнены = Выборка.Количество() > 0;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МАКСИМУМ(Работники.ДатаПриема) КАК ДатаПриема
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Работники.Период) КАК ДатаПриема
	|	ИЗ
	|		РегистрСведений.Работники КАК Работники
	|	ГДЕ
	|		Работники.ФизЛицо = &ФизЛицо
	|		И Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		МАКСИМУМ(РаботникиОрганизаций.Период)
	|	ИЗ
	|		РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|	ГДЕ
	|		РаботникиОрганизаций.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
	|		И РаботникиОрганизаций.Сотрудник.Физлицо = &Физлицо
	|		И (НЕ РаботникиОрганизаций.Сотрудник.Физлицо В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						Работники.ФизЛицо
	|					ИЗ
	|						РегистрСведений.Работники КАК Работники
	|					ГДЕ
	|						Работники.ФизЛицо = &ФизЛицо
	|						И Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)))) КАК Работники
	|ГДЕ
	|	(НЕ Работники.ДатаПриема ЕСТЬ NULL )";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() И Выборка.ДатаПриема <> NULL Тогда
		Если Выборка.ДатаПриема >= НачалоГода(ОбщегоНазначения.ПолучитьРабочуюДату()) Тогда
			ЭлементыФормы.НадписьОстаток.Заголовок	= "Нет необходимости заполнять остатки прошлых лет, так как сотрудник принят в этом году";
			
		Иначе
			Если ОстаткиЗаполнены Тогда
				ЭлементыФормы.НадписьОстаток.Заголовок = "Остатки отпуска заполнены. Программа будет рассчитывать остатки для всех рабочих лет, следующих за последним рабочим годом, на который заполнены остатки";
			Иначе
				ЭлементыФормы.НадписьОстаток.Заголовок = "Остатки отпуска не заполнены. Программа будет рассчитывать остатки начиная с даты приема";
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		ЭлементыФормы.НадписьОстаток.Заголовок		= "Нет необходимости заполнять остатки прошлых лет, так как сотрудник не принят на работу";
		СотрудникПринятНаРаботу						= Ложь;
		
	КонецЕсли;
	
	ЭлементыФормы.Остатки.Видимость		= ОстаткиЗаполнены;
	ЭлементыФормы.Остатки.Свертка		= ?(ОстаткиЗаполнены, РежимСверткиЭлементаУправления.Нет, РежимСверткиЭлементаУправления.Верх);
	
	ЭлементыФормы.Изменить.Видимость	= СотрудникПринятНаРаботу;
	
КонецПроцедуры

Процедура ИзменитьОстатокОтпуска()
	
	ДанныеСтроки = ЭлементыФормы.СотрудникиОрганизаций.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеСтроки.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если Не СотрудникПринятНаРаботу Тогда
		Предупреждение("Нельзя именять остатки сотрудника, не принятого на работу!");
		Возврат;
	КонецЕсли;
	
	Если СсылкаНаВыбранныеОстатки = Неопределено Тогда
		Форма						= Справочники.ОстаткиОтпусков.ПолучитьФормуНовогоЭлемента(, ЭтаФорма);
		Форма.Физлицо				= ДанныеСтроки.Физлицо;
		Форма.ДатаАктуальности		= ОбщегоНазначения.ПолучитьРабочуюДату();
		
	Иначе
		Форма = СсылкаНаВыбранныеОстатки.ПолучитьОбъект().ПолучитьФорму(, ЭтаФорма);
		
	КонецЕсли;
	
	Форма.ОткрытьМодально();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	Если Не НастройкаПравДоступа.ДоступноПравоАдминистрирования() Тогда
		ЭлементыФормы.ДействияФормы.Кнопки.Удалить(2);
	КонецЕсли;
	Если Не ПользователиДополнительный.ДоступнаРольКадровикаУпр() Тогда
		ЭлементыФормы.ДействияФормы.Кнопки.Удалить(0);
	КонецЕсли;
	
	ЭлементыФормы.Остатки.Свертка	= РежимСверткиЭлементаУправления.Верх;
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененыОстаткиОтпусков" Тогда
		ПриАктивизацииСтрокиСотрудника();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура ДействияФормыРассчитатьОстаткиОтпусков(Кнопка)
	
	ТекстВопроса =
	"Сейчас программа автоматически заполнит остатки отпусков за те рабочие года, по которым еще не были заполнены остатки.
	|Заполнение позволит уменьшить время проведения документов и время формирования отчетов по отпускам, так как расчет остатков будет проводиться не с даты приема сотрудника на работу, а только для тех рабочих лет, для которых в справочнике не заполнены остатки.
	|Остатки за уже введенные рабочие года перезаполнены не будут.
	|
	|Заполнить остатки?";
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ПроцедурыУправленияПерсоналомДополнительный.ОбновитьОстаткиОтпусков();
	
	ПриАктивизацииСтрокиСотрудника();
	
КонецПроцедуры

Процедура ДействияФормыНастроитьАвтоматическийРасчет(Кнопка)
	
	Если мРегламентноеЗадание = Неопределено Тогда
		мРегламентноеЗадание = РегламентныеЗадания.НайтиПредопределенное("РасчетОстатковОтпусков");
	КонецЕсли;
	
	Диалог = Справочники.ОстаткиОтпусков.ПолучитьФорму("ФормаНастройкиАвтоматическогоЗаполнения");
	Диалог.Использование = мРегламентноеЗадание.Использование;
	Если Диалог.ОткрытьМодально() = "ОК" Тогда
		мРегламентноеЗадание.Использование = Диалог.Использование;
		мРегламентноеЗадание.Записать();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ИзменитьНажатие(Элемент)
	
	Если Не ПользователиДополнительный.ДоступнаРольКадровикаУпр() Тогда
		Предупреждение("Недостаточно прав для изменения остатков отпусков.
		|Изменять остатки может только пользователь с ролями 'Кадровик управленческих данных' или 'Полные права'!");
		Возврат;
	КонецЕсли;
	
	ИзменитьОстатокОтпуска();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ СотрудникиОрганизаций

Процедура СотрудникиОрганизацийПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ПриАктивизацииСтрокиСотрудника", 0.1, Истина);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ Остатки

Процедура ОстаткиПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеСтроки.Ячейки.ГодРаботы.Видимость = Ложь;
	
КонецПроцедуры

Процедура ОстаткиВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	ИзменитьОстатокОтпуска();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

СотрудникиОрганизаций.Колонки.Добавить("Физлицо");

СотрудникиОрганизаций.Отбор.Актуальность.Установить(Истина);