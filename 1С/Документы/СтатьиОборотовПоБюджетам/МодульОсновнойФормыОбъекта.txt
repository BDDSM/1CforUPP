Процедура ДействияФормыРедактироватьКод(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
КонецПроцедуры

// Обновляет списки выбора для показателей источников данных
//
//
Процедура ОбновитьСпискиВыбора()
	
	Если Не ИсточникДанныхДляФакта.Пустая() Тогда

		СписокПоказателей=Новый СписокЗначений;

		Для каждого Показатель Из ИсточникДанныхДляФакта.Показатели Цикл

			Если Показатель.Использование Тогда
				СписокПоказателей.Добавить(Показатель.Имя, Показатель.Представление);
			КонецЕсли;

		КонецЦикла; 

		ЭлементыФормы.ПоказательИсточникаДанныхДляФактаСум.СписокВыбора=СписокПоказателей;
		ЭлементыФормы.ПоказательИсточникаДанныхДляФактаКол.СписокВыбора=СписокПоказателей;
		
		СписокВалюта=Новый СписокЗначений;
		СписокВалюта.Добавить(Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ВалютаУправленческогоУчета,"Валюта управленческого учета");
		СписокВалюта.Добавить(Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ВалютаРегламентированногоУчета,"Валюта регламентированного учета");
		СписокВалюта.Добавить(Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ОсновнаяВалютаСтатьи,"Основная валюта статьи");
		
		Если НЕ ИсточникДанныхДляФакта.ИзмеренияИсточника.Найти(Перечисления.ИзмеренияБюджетирования.Валюта,"ИзмерениеБюджетирования")=Неопределено Тогда
			
			СписокВалюта.Добавить(Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ВалютаИсточникаДанных,"Валюта источника данных");
			
		КонецЕсли;
		
		ЭлементыФормы.СпособОпределенияВалютыОборотаФакт.СписокВыбора=СписокВалюта;
		
	Иначе
		
		ПоказательИсточникаДанныхДляФактаКол="";
		ПоказательИсточникаДанныхДляФактаСум="";
		КоэффициентДляФактаСум=0;
		СпособОпределенияВалютыОборотаФакт="";
		КоэффициентДляФактаКол=0;

	КонецЕсли;
	
	Если Не ИсточникДанныхДляЦены.Пустая() Тогда

		СписокПоказателей=Новый СписокЗначений;

		Для каждого Показатель Из ИсточникДанныхДляЦены.Показатели Цикл

			Если Показатель.Использование Тогда
				СписокПоказателей.Добавить(Показатель.Имя, Показатель.Представление);
			КонецЕсли;

		КонецЦикла; 

		ЭлементыФормы.ПоказательИсточникаДанныхДляЦены.СписокВыбора=СписокПоказателей;

	Иначе
		
		ПоказательИсточникаДанныхДляЦены="";
		
	КонецЕсли;
	
КонецПроцедуры // ОбновитьСпискиВыбора()
 
Процедура УправлениеДоступностьюРеквизитов()

	Если УчетПоКоличеству Тогда
		ЭлементыФормы.ЕдиницаИзмерения.Доступность=Истина;
		ЭлементыФормы.ПоказательИсточникаДанныхДляФактаКол.Доступность=Истина;
		ЭлементыФормы.КоэффициентДляФактаКол.Доступность=Истина;
	Иначе
        ЭлементыФормы.ЕдиницаИзмерения.Доступность=Ложь;
		ЭлементыФормы.ПоказательИсточникаДанныхДляФактаКол.Доступность=Ложь;
		ЭлементыФормы.КоэффициентДляФактаКол.Доступность=Ложь;
	КонецЕсли;

	Если УчетПоСумме Тогда
		ЭлементыФормы.ОсновнаяВалюта.Доступность=Истина;
		ЭлементыФормы.ПоказательИсточникаДанныхДляФактаСум.Доступность=Истина;
		ЭлементыФормы.КоэффициентДляФактаСум.Доступность=Истина;
	Иначе
        ЭлементыФормы.ОсновнаяВалюта.Доступность=Ложь;
		ЭлементыФормы.ПоказательИсточникаДанныхДляФактаСум.Доступность=Ложь;
		ЭлементыФормы.КоэффициентДляФактаСум.Доступность=Ложь;
	КонецЕсли;

	Если УчетПоКоличеству И УчетПоСумме Тогда
		ЭлементыФормы.ИсточникДанныхДляЦены.Доступность=Истина;
		ЭлементыФормы.ПоказательИсточникаДанныхДляЦены.Доступность=Истина;
	Иначе
        ЭлементыФормы.ИсточникДанныхДляЦены.Доступность=Ложь;
		ЭлементыФормы.ПоказательИсточникаДанныхДляЦены.Доступность=Ложь;
	КонецЕсли;

	Если РазделениеПоКонтрагентам Тогда
		ЭлементыФормы.ОсновнойКонтрагент.Доступность=Истина;
	Иначе
        ЭлементыФормы.ОсновнойКонтрагент.Доступность=Ложь;
	КонецЕсли;

	Если РазделениеПоНоменклатуре Тогда
		ЭлементыФормы.ОсновнаяНоменклатура.Доступность=Истина;
	Иначе
        ЭлементыФормы.ОсновнаяНоменклатура.Доступность=Ложь;
	КонецЕсли;
		
КонецПроцедуры // УправлениеДоступностьюРеквизитов()

Процедура ИсточникДанныхДляЦеныПриИзменении(Элемент)

	ПоказательИсточникаДанныхДляЦены="";
	ОбновитьСпискиВыбора();
	
КонецПроцедуры

Процедура ИсточникДанныхДляФактаПриИзменении(Элемент)

	ПоказательИсточникаДанныхДляФактаКол="";
	ПоказательИсточникаДанныхДляФактаСум="";
	КоэффициентДляФактаКол=0;
	КоэффициентДляФактаСум=0;
	СпособОпределенияВалютыОборотаФакт=Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ПустаяСсылка();
	
	ОбновитьСпискиВыбора();
	
КонецПроцедуры

Процедура ИсточникДанныхДляЦеныОчистка(Элемент, СтандартнаяОбработка)
	
    ПоказательИсточникаДанныхДляЦены="";
	
КонецПроцедуры

Процедура ИсточникДанныхДляФактаОчистка(Элемент, СтандартнаяОбработка)
	
    ПоказательИсточникаДанныхДляФактаСум="";
	ПоказательИсточникаДанныхДляФактаКол="";
	
	КоэффициентДляФактаКол=0;
	КоэффициентДляФактаСум=0;
	
КонецПроцедуры

Процедура УчетПоСуммеПриИзменении(Элемент)
	
	Если Не УчетПоСумме Тогда
	
		ИсточникДанныхДляЦены="";
		ПоказательИсточникаДанныхДляЦены="";
	
	КонецЕсли; 
	
КонецПроцедуры

Процедура УчетПоКоличествуПриИзменении(Элемент)
	
	Если Не УчетПоКоличеству Тогда
	
		ИсточникДанныхДляЦены="";
		ПоказательИсточникаДанныхДляЦены="";
	
	КонецЕсли; 
	
КонецПроцедуры

Процедура ШаблоныПроводокПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если НЕ НоваяСтрока ИЛИ НЕ ОтменаРедактирования Тогда
		
		Проводка=ЭлементыФормы.ШаблоныПроводок.ТекущиеДанные;
		
		Если Проводка.СчетДт.Пустая() И Проводка.СчетКт.Пустая() Тогда
			
			Сообщить("Не указаны счета проводки.");
			Отказ=Истина;

		ИначеЕсли (НЕ Проводка.СчетДт.Забалансовый И Проводка.СчетКт.Пустая())
			ИЛИ (НЕ Проводка.СчетКт.Забалансовый И Проводка.СчетДт.Пустая()) Тогда
			
			Сообщить("Балансовый счет не может корреспондировать с пустым счетом.");
			Отказ=Истина;
			
		ИначеЕсли (НЕ (Проводка.СчетДт.Забалансовый ИЛИ Проводка.СчетДт.Пустая()) И Проводка.СчетКт.Забалансовый)
			ИЛИ (НЕ (Проводка.СчетКт.Забалансовый ИЛИ Проводка.СчетКт.Пустая()) И Проводка.СчетДт.Забалансовый) Тогда
			
			Сообщить("Балансовый счет не может корреспондировать с забалансовым.");
			Отказ=Истина;
					
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолеВвода2ПриИзменении(Элемент)
	
	Если НаименованиеПолное="" Тогда
		НаименованиеПолное=Наименование;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ОбновитьСпискиВыбора();
	
КонецПроцедуры

// Обработчик события ПриОткрытии Формы.
//
Процедура ПриОткрытии()
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияКода(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Код);
КонецПроцедуры //ПриОткрытии

Процедура ОбновлениеОтображения()
	
	УправлениеДоступностьюРеквизитов();	
	
КонецПроцедуры

Процедура ПослеЗаписи()
	
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
	
КонецПроцедуры