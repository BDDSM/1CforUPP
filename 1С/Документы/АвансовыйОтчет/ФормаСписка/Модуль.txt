// Процедура печатает выбранный документ 
// Печатается та форма, которая была отпечатана при нажатии в документе кнопки
// печати по умолчанию
//
Процедура ДействиеПечать(Кнопка)

	Если ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокументИзФормыСписка(ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока.ПолучитьОбъект());

КонецПроцедуры // ДействиеПечать()

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;

	РаботаСДиалогами.НапечататьДвиженияДокумента(ЭлементыФормы.Список.ТекущиеДанные.Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура вызывается при выборе пункта подменю "Структура подчиненности" меню "Перейти".
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока);
	
КонецПроцедуры

// Процедура вызывается при нажатии на кнопку "файлы"
Процедура ДействияФормыФайлы(Кнопка)

	Если ЭлементыФормы.Список.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Ссылка = ЭлементыФормы.Список.ТекущаяСтрока.Ссылка;
	ФормаФайлов = Справочники.ХранилищеДополнительнойИнформации.ПолучитьФорму("ФормаСпискаФайловИИзображений", ЭтаФорма);

	ФормаФайлов.Изображения.Отбор.Объект.Использование                               = Истина;
	ФормаФайлов.Изображения.Отбор.Объект.Значение                                    = Ссылка;
	ФормаФайлов.ЭлементыФормы.Изображения.НастройкаОтбора.Объект.Доступность         = Ложь;
	ФормаФайлов.ЭлементыФормы.Изображения.Колонки.Объект.Видимость                   = Ложь;

	ФормаФайлов.ДополнительныеФайлы.Отбор.Объект.Использование                       = Истина;
	ФормаФайлов.ДополнительныеФайлы.Отбор.Объект.Значение                            = Ссылка;
	ФормаФайлов.ЭлементыФормы.ДополнительныеФайлы.НастройкаОтбора.Объект.Доступность = Ложь;
	ФормаФайлов.ЭлементыФормы.ДополнительныеФайлы.Колонки.Объект.Видимость           = Ложь;

	ОбязательныеОтборы = Новый Структура;
	ОбязательныеОтборы.Вставить("Объект", Ссылка);

	ФормаФайлов.ОбязательныеОтборы = ОбязательныеОтборы;

	ФормаФайлов.Открыть();

КонецПроцедуры

// Обработка нажатия кнопки "ВедомостьПоВзаиморасчетам"
//
Процедура ДействияФормыВедомостьПоВзаиморасчетам(Кнопка)

	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;

	ДокументСсылка = ЭлементыФормы.Список.ТекущиеДанные.Ссылка;
	ФизЛицо        = ДокументСсылка.ФизЛицо;

	Если НЕ ЗначениеЗаполнено(ФизЛицо) Тогда
		Предупреждение("Не выбрано подотчетное лицо в документе!");
		Возврат;
	КонецЕсли;

	Отчет = Отчеты.ВедомостьВзаиморасчетыСПодотчетнымиЛицами.Создать();
	Отчет.УстановитьНачальныеНастройки();
	Отчет.УниверсальныйОтчет.ОчиститьНастройкиПостроителя();
	
	// Период отчета - с основной даты отчета.
	Отчет.УниверсальныйОтчет.ДатаНач = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяДатаНачалаОтчетов");
	
	// Группировки - Организация и валюта взаиморасчетов.
	Отчет.УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	Отчет.УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Валюта");
	
	//Установим отбор по подотчетнику.
	Отчет.УниверсальныйОтчет.ДобавитьОтбор("ФизЛицо", Истина, ВидСравнения.Равно, ФизЛицо);
	
	Отчет.УниверсальныйОтчет.мВосстанавливатьНастройкиПриОткрытии = Ложь;
	
	ФормаОтчета = Отчет.ПолучитьФорму();
	ФормаОтчета.ОбновитьОтчет();
	ФормаОтчета.Открыть();


КонецПроцедуры // ДействияФормыВедомостьПоВзаиморасчетам()


// Процедура открывает журнал проводок БУ с отбором по текущему регистратору
//
Процедура ДействияФормыПроводкиДтКт(Кнопка)

	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	БухгалтерскийУчет.ОткрытьЖурналПроводок(ЭлементыФормы.Список.ТекущиеДанные.Ссылка);

КонецПроцедуры

// Процедура открывает журнал проводок НУ с отбором по текущему регистратору
//
Процедура ДействияФормыПроводкиДтКтНУ(Кнопка)

	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	БухгалтерскийУчет.ОткрытьЖурналПроводок(ЭлементыФормы.Список.ТекущиеДанные.Ссылка, "НУ");

КонецПроцедуры