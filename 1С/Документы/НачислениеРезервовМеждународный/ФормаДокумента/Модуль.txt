// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;



// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка,Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.Резервы,ЭлементыФормы.КоманднаяПанель1);
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧПоДеревуКнопок(мКнопкиЗаполненияТЧ,СоответствиеТЧ);
	
КонецПроцедуры


Процедура РезервыВидРезерваПриИзменении(Элемент)
    Если Элемент.Значение.СчетРезерва.Родитель = ПланыСчетов.Международный.Резервы Тогда
		ЭлементыФормы.Резервы.ТекущиеДанные.СчетОтнесенияРасходов = ПланыСчетов.Международный.НераспределеннаяПрибыль;
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Предупреждение("Не указана организация. Операция не записана.");
		Отказ = Истина;
		ТекущийЭлемент = ЭлементыФормы.Организация;
		Возврат;
	КонецЕсли; 
	
	Для Каждого ТекСтрокаРезервы Из Резервы Цикл
		Если НЕ ЗначениеЗаполнено(ТекСтрокаРезервы.ВидРезерва.СчетРезерва) Тогда
			Предупреждение("Не указан счет резерва " + ТекСтрокаРезервы.ВидРезерва + ". Документ не записан.");
			Отказ = Истина;
			Возврат;
		КонецЕсли; 

		Если НЕ ЗначениеЗаполнено(ТекСтрокаРезервы.СчетОтнесенияРасходов) Тогда
			Предупреждение("Не указан счет отнесения расходов резерва " + ТекСтрокаРезервы.ВидРезерва + ". Документ не записан.");
			Отказ = Истина;
			Возврат;
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
	
КонецПроцедуры // ПередОткрытием()

Процедура ПриОткрытии()

	
	Если НЕ ЭтоНовый() Тогда 
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	КонецЕсли;
	
	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ

		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, "Продажа");
	КонецЕсли;

	// Вывести в заголовке формы вид операции.
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	// Создать кнопки печати
	ФормированиеПечатныхФорм.СоздатьКнопкиПечати(ЭтотОбъект, ЭтаФорма);
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура ПослеЗаписи()

	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

Процедура ДействияФормыРедактироватьНомер(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
КонецПроцедуры
// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

Процедура СоставСубконтоНачалоВыбора(Элемент, СтандартнаяОбработка)
	Для Ном = 1 по 3 Цикл
		Если (ЭлементыФормы.Резервы.ТекущиеДанные.СчетОтнесенияРасходов.ВидыСубконто.Количество() > (Ном-1)) и (НЕ ЗначениеЗаполнено(ЭлементыФормы.Резервы.ТекущиеДанные["Субконто"+Ном])) Тогда
			Типы = ЭлементыФормы.Резервы.ТекущиеДанные.СчетОтнесенияРасходов.ВидыСубконто[Ном-1].ВидСубконто.ТипЗначения.Типы();
			ЭлементыФормы.Резервы.ТекущиеДанные["Субконто"+Ном] = Новый(Типы[0]);
		КонецЕсли;
	КонецЦикла
КонецПроцедуры

Процедура РезервыВалютаПриИзменении(Элемент)
	Если (ЗначениеЗаполнено(ЭлементыФормы.Резервы.ТекущиеДанные.Валюта)) и (ЗначениеЗаполнено(ЭлементыФормы.Резервы.ТекущиеДанные.ВалютнаяСумма)) Тогда
		ЭлементыФормы.Резервы.ТекущиеДанные.Сумма = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(ЭлементыФормы.Резервы.ТекущиеДанные.ВалютнаяСумма, ЭлементыФормы.Резервы.ТекущиеДанные.Валюта, глЗначениеПеременной("ВалютаМеждународногоУчета"), МодульВалютногоУчета.ПолучитьКурсВалюты(ЭлементыФормы.Резервы.ТекущиеДанные.Валюта, Дата).Курс, МодульВалютногоУчета.ПолучитьКурсВалюты(глЗначениеПеременной("ВалютаМеждународногоУчета"), Дата).Курс, МодульВалютногоУчета.ПолучитьКурсВалюты(ЭлементыФормы.Резервы.ТекущиеДанные.Валюта, Дата).Кратность, МодульВалютногоУчета.ПолучитьКурсВалюты(глЗначениеПеременной("ВалютаМеждународногоУчета"), Дата).Кратность);
	КонецЕсли;
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;
КонецПроцедуры

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать".
// Открывает форму выбора печатных форм объекта.
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ОткрытьФормуВыбораПечатныхФормОбъекта(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ОсновныеДействияФормыПечать() 

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)

	УниверсальныеМеханизмы.НапечататьДокументПоУмолчанию(ЭтотОбъект);

КонецПроцедуры