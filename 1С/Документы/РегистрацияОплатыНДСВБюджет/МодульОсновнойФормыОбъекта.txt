// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧОплатаПоДоговорамНалоговогоАгента;
Перем мКнопкиЗаполненияТЧОплатаДляСобственногоПотребления;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура устанавливает видимость элементов формы.
//
// Параметры:
//  Нет.
//
Процедура УстановитьВидимость()
	

КонецПроцедуры // УстановитьВидимость()

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ()
	
	мКнопкиЗаполненияТЧОплатаПоДоговорамНалоговогоАгента = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка,Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧОплатаПоДоговорамНалоговогоАгента"));
	мКнопкиЗаполненияТЧОплатаДляСобственногоПотребления = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка,Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧОплатаДляСобственногоПотребления"));
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.ОплатаПоДоговорамНалоговогоАгента, ЭлементыФормы.КоманднаяПанельПоДоговорамНалоговогоАгента.Кнопки.ПодменюЗаполнить);
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧПоДеревуКнопок(мКнопкиЗаполненияТЧОплатаПоДоговорамНалоговогоАгента, СоответствиеТЧ);
	
	СоответствиеТЧ.Очистить();
	СоответствиеТЧ.Вставить(ЭлементыФормы.ОплатаДляСобственногоПотребления, ЭлементыФормы.КоманднаяПанельПоДоговорамСобственногоПотребления.Кнопки.ПодменюЗаполнить);
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧПоДеревуКнопок(мКнопкиЗаполненияТЧОплатаДляСобственногоПотребления, СоответствиеТЧ);
	
КонецПроцедуры // УстановитьКнопкиПодменюЗаполненияТЧ()

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧОплатаПоДоговорамНалоговогоАгента(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧОплатаПоДоговорамНалоговогоАгента.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры // НажатиеНаДополнительнуюКнопкуЗаполненияТЧОплатаПоДоговорамНалоговогоАгента()

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧОплатаДляСобственногоПотребления(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧОплатаДляСобственногоПотребления.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры // НажатиеНаДополнительнуюКнопкуЗаполненияТЧОплатаДляСобственногоПотребления()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ 

// Процедура - обработчик события "ПриИзменении" поля ввода организации.
//
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭлементыФормы.Номер);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
КонецПроцедуры // ПередОткрытием()

Процедура ПриОткрытии()
	
	
	Если НЕ ЭтоНовый() Тогда 
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	КонецЕсли;
	
	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ

		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);

		УстановитьВремя(РежимАвтоВремя.Последним);

	КонецЕсли;
	
	// Параметры для выбора организации
	УчетПоВсемОрганизациям = Истина; // Для совместимости с БП
	
	// Проверка ведения однофирменности
	ЭлементыФормы.Организация.ТолькоПросмотр = НЕ УчетПоВсемОрганизациям;

	// Вывести в заголовке формы вид операции.
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

	УстановитьВидимость();
	
	// Установить активный реквизит.
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);

	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю1);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю1,ЭлементыФормы.Номер);
	
	// Создать кнопки печати
	ФормированиеПечатныхФорм.СоздатьКнопкиПечати(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда

		Предупреждение("Не указана организация. Операция не записана.");

		Отказ = Истина;

		ТекущийЭлемент = ЭлементыФормы.Организация;

		Возврат;

	КонецЕсли;

КонецПроцедуры

Процедура ПослеЗаписи()

	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭлементыФормы.Номер);

КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	СтраницаПанели  = ЭлементыФормы.НДСПоВидамДоговоров.Страницы;
	
	СтраницаПанели.ПоДоговорамНалоговогоАгента.Заголовок = "По договорам налогового агента ("   + ДокументОбъект.ОплатаПоДоговорамНалоговогоАгента.Количество() + " поз.)";
	СтраницаПанели.ДляСобственногоПотребления.Заголовок = "Для собственного потребления (" + ДокументОбъект.ОплатаДляСобственногоПотребления.Количество() + " поз.)";
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ ДЕЙСТВИЙ КОМАНДНОЙ ПАНЕЛИ 

Процедура ДействияФормыЗаполнитьДокумент(Кнопка)
	
	Если Ссылка.Проведен Тогда
		Ответ = Вопрос("Проведенный документ не может быть заполнен автоматически. Отменить проведение документа для заполнения?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ОплатаПоДоговорамНалоговогоАгента.Количество() > 0 
		или ОплатаДляСобственногоПотребления.Количество() >0
		Тогда
		ОтветНаВопрос = Вопрос("Заполненные ранее табличные поля документа будут очищены. Продолжить?", РежимДиалогаВопрос.ДаНет);
		Если ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьДокумент(, , , Ссылка.Проведен И Ответ = КодВозвратаДиалога.Да);
	
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

Процедура ДействияФормыРедактироватьНомер(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭлементыФормы.Номер);
КонецПроцедуры
// Процедура вызова структуры подчиненности документа
//
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
	
КонецПроцедуры

Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)
	
	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);
	
КонецПроцедуры

Процедура КоманднаяПанельПоДоговорамНалоговогоАгентаЗаполнить(Кнопка)
	
	Если Ссылка.Проведен Тогда
		Ответ = Вопрос("Проведенный документ не может быть заполнен автоматически. Отменить проведение документа для заполнения?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ОплатаПоДоговорамНалоговогоАгента.Количество() > 0 Тогда
		ОтветНаВопрос = Вопрос("Табличное поле будет очищено. Продолжить?", РежимДиалогаВопрос.ДаНет);
		Если ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьТабличнуюЧастьПоДоговорамНалоговогоАгента(Ссылка.Проведен И Ответ = КодВозвратаДиалога.Да);
	
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура КоманднаяПанельПоДоговорамСобственногоПотребленияЗаполнить(Кнопка)
	
	Если Ссылка.Проведен Тогда
		Ответ = Вопрос("Проведенный документ не может быть заполнен автоматически. Отменить проведение документа для заполнения?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ОплатаДляСобственногоПотребления.Количество() > 0 Тогда
		ОтветНаВопрос = Вопрос("Табличное поле будет очищено. Продолжить?", РежимДиалогаВопрос.ДаНет);
		Если ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьТабличнуюЧастьДляСобственногоПотребления(Ссылка.Проведен И Ответ = КодВозвратаДиалога.Да);
	
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНЫХ ЧАСТЕЙ

// Процедура - обработчик события "НачалоВыбора" поля ввода ДокументОплаты
//
Процедура ОплатаПоДоговорамНалоговогоАгентаДокументОплатыНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтрокаТабличнойЧасти = ЭлементыФормы.ОплатаПоДоговорамНалоговогоАгента.ТекущиеДанные;
	
	Отбор = Новый Структура("Организация", Организация);
	РаботаСДиалогами.НачалоВыбораЗначенияДокументаСоставногоТипа(ЭтотОбъект, ЭтаФорма, Элемент, СтандартнаяОбработка, Отбор, "ОплатаПоДоговорамНалоговогоАгента");

КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода СчетФактура
//
Процедура ОплатаПоДоговорамНалоговогоАгентаСчетФактураНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтрокаТабличнойЧасти = ЭлементыФормы.ОплатаПоДоговорамНалоговогоАгента.ТекущиеДанные;

	Отбор = Новый Структура("Организация,Контрагент,ДокументыПоДоговоруКонтрагента", Организация,СтрокаТабличнойЧасти.Поставщик, СтрокаТабличнойЧасти.ДоговорКонтрагента);
	РаботаСДиалогами.НачалоВыбораЗначенияДокументаСоставногоТипа(ЭтотОбъект, ЭтаФорма, Элемент, СтандартнаяОбработка, Отбор, "ОплатаПоДоговорамНалоговогоАгента");
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода ДокументОплаты
//
Процедура ОплатаДляСобственногоПотребленияДокументОплатыНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтрокаТабличнойЧасти = ЭлементыФормы.ОплатаДляСобственногоПотребления.ТекущиеДанные;
	Отбор = Новый Структура("Организация", Организация);
	
	РаботаСДиалогами.НачалоВыбораЗначенияДокументаСоставногоТипа(ЭтотОбъект, ЭтаФорма, Элемент, СтандартнаяОбработка, Отбор, "ОплатаДляСобственногоПотребления");
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода СчетФактура
//
Процедура ОплатаДляСобственногоПотребленияСчетФактураНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтрокаТабличнойЧасти = ЭлементыФормы.ОплатаДляСобственногоПотребления.ТекущиеДанные;
	Отбор = Новый Структура("Организация", Организация);

	РаботаСДиалогами.НачалоВыбораЗначенияДокументаСоставногоТипа(ЭтотОбъект, ЭтаФорма, Элемент, СтандартнаяОбработка, Отбор, "ОплатаДляСобственногоПотребления");
	
КонецПроцедуры

// Процедура - обработчик события "ОбработкаВыбора" поля ввода ДокументОплаты
//
Процедура ОплатаДляСобственногоПотребленияДокументОплатыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.ПлатежноеПоручениеИсходящее") Тогда
		Если ВыбранноеЗначение.ВидОперации <> Перечисления.ВидыОперацийППИсходящее.ПеречислениеНалога Тогда
			Сообщить("В документе можно выбирать документы оплаты с операцией ""перечисление налога""", СтатусСообщения.Важное);
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.ПлатежныйОрдерСписаниеДенежныхСредств") Тогда
		Если ВыбранноеЗначение.ВидОперации <> Перечисления.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ПеречислениеНалога Тогда
			Сообщить("В документе можно выбирать документы оплаты с операцией ""перечисление налога""", СтатусСообщения.Важное);
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ОбработкаВыбора" поля ввода ДокументОплаты
//
Процедура ОплатаПоДоговорамНалоговогоАгентаДокументОплатыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.ПлатежноеПоручениеИсходящее") Тогда
		Если ВыбранноеЗначение.ВидОперации <> Перечисления.ВидыОперацийППИсходящее.ПеречислениеНалога Тогда
			Сообщить("В документе можно выбирать документы оплаты с операцией ""перечисление налога""", СтатусСообщения.Важное);
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.ПлатежныйОрдерСписаниеДенежныхСредств") Тогда
		Если ВыбранноеЗначение.ВидОперации <> Перечисления.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ПеречислениеНалога Тогда
			Сообщить("В документе можно выбирать документы оплаты с операцией ""перечисление налога""", СтатусСообщения.Важное);
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать".
// Открывает форму выбора печатных форм объекта.
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ОткрытьФормуВыбораПечатныхФормОбъекта(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ОсновныеДействияФормыПечать()

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)

	УниверсальныеМеханизмы.НапечататьДокументПоУмолчанию(ЭтотОбъект);

КонецПроцедуры