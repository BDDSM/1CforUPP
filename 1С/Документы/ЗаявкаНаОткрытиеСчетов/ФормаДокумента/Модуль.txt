////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Соответствие русских букв латинским
Перем СоответствиеСимволов;


// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;

// Хранит элемент управления подменю печати
Перем мПодменюПечати;

// Хранит элемент управления кнопку печать по умолчанию
Перем мПечатьПоУмолчанию;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

// Хранит старое значение физ лица в строке табличной части
Перем мТекущееФизЛицо;

// Хранит ссылку на головную организацию
Перем мГоловнаяОрганизация;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ


Функция ПолучитьСтрокуНаЛатинском(Знач ИсходныйТекст)
	ИсходныйТекст = СокрЛП(ВРег(ИсходныйТекст));
	ГотовоеЗначение = "";
	ТекущийСимвол = "";
	ТекущийГотовыйСимвол = "";
	Для к = 1 по СтрДлина(ИсходныйТекст) Цикл
		ТекущийСимвол = Сред(ИсходныйТекст, к, 1);
		ТекущийГотовыйСимвол = СоответствиеСимволов.Получить(ТекущийСимвол);
		Если ТекущийГотовыйСимвол = Неопределено Тогда
			ГотовоеЗначение = ГотовоеЗначение + ТекущийСимвол;
		Иначе
			ГотовоеЗначение = ГотовоеЗначение + ТекущийГотовыйСимвол;
		КонецЕсли;
		
	КонецЦикла;
	Возврат ГотовоеЗначение;
КонецФункции // ПолучитьСтрокуНаЛатинском()

Процедура УстановитьЗаголовкиОрганизацийВФорме()
	
	ЭлементыФормы.НадписьОрганизация.Заголовок = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация:");
	ЭлементыФормы.НадписьОрганизация.Значение = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация:");
	ЭлементыФормы.БанковскийСчет.Подсказка = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Банковский счет организации в банке, на который будут перечислятся средства");
	ЭлементыФормы.Организация.Подсказка = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация");
	
КонецПроцедуры // УстановитьЗаголовкиОрганизацийВФорме()

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	
	мДеревоМакетов = УниверсальныеМеханизмы.ПолучитьДеревоМакетовПечати(Ссылка, Неопределено, Новый Действие("ОсновныеДействияФормыПечать"), Новый Действие("ОсновныеДействияФормыУстановитьПечатьПоУмолчанию"));

	УниверсальныеМеханизмы.УстановитьПодменюПечати    (мПодменюПечати, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов);
	УниверсальныеМеханизмы.УстановитьПечатьПоУмолчанию(мПечатьПоУмолчанию, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов, Метаданные().Имя,Новый Действие("ОсновныеДействияФормыПечатьПоУмолчанию"));

	Если Не мПодменюПечати = Неопределено Тогда
		УниверсальныеМеханизмы.СформироватьПодменю(мДеревоМакетов, мПодменюПечати,Истина,Истина);
	КонецЕсли;
	
КонецПроцедуры

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ()
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.РаботникиОрганизации,ЭлементыФормы.КоманднаяПанель1);
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧ(Ссылка, СоответствиеТЧ, Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();

	КоличествоСтрокВВидеВклада = СтрЧислоСтрок(ВидВклада);
	
	Если КоличествоСтрокВВидеВклада > 0 Тогда
		ВидВкладаСтрокой = СтрПолучитьСтроку(ВидВклада, 1);
	КонецЕсли;
	
	Если КоличествоСтрокВВидеВклада > 1 Тогда
		КодВида = СтрПолучитьСтроку(ВидВклада, 2);
	КонецЕсли;
	
	Если КоличествоСтрокВВидеВклада > 2 Тогда
		КодПодВида = СтрПолучитьСтроку(ВидВклада, 3);
	КонецЕсли;
	
	Если КоличествоСтрокВВидеВклада > 3 Тогда
		КодВалюты = СтрПолучитьСтроку(ВидВклада, 4);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ЭтоНовый() Тогда
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументовПереопределяемый.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"));
		
		ДатаВыплатыЗаработнойПлаты = 1;
		
	Иначе
		
		// Установить доступность формы с учетом даты запрета редактирования	
		РаботаСДиалогамиЗК.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
		
	КонецЕсли;
	
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	ЭлементыФормы.РаботникиОрганизации.Колонки.НомерЛицевогоСчета.Видимость = ВводНачальныхСведений;
	УстановитьЗаголовкиОрганизацийВФорме();
	
	// Получим и запомним ссылку на головную организацию
	мГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
	
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если ТипЗнч(ЗначениеВыбора) = Тип("СправочникСсылка.Валюты") Тогда
		КодВалюты = ЗначениеВыбора.Код;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ВидВклада = ВидВкладаСтрокой + Символы.ПС + КодВида + Символы.ПС + КодПодВида + Символы.ПС + КодВалюты;
	
КонецПроцедуры

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()
	
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры // ПослеЗаписи()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)
	
	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);
	
КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
	
КонецПроцедуры // ДействияФормыСтруктураПодчиненностиДокумента()

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры

// Процедура выполняет  открытие формы регистра ЛицевыеСчетаРаботниковОрганизации
// с отбором по данному документу
Процедура ДействияФормыЛицевыеСчетаРаботниковОрганизации(Кнопка)
	
	ФормаСписка = РегистрыСведений.ЛицевыеСчетаРаботниковОрганизации.ПолучитьФормуСписка();	
	ФормаСписка.Отбор.Документ.Установить(Ссылка);
	ФормаСписка.Открыть();
	
КонецПроцедуры


// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		
		УстановитьКнопкиПечати();
		
	КонецЕсли; 
	
КонецПроцедуры


// Процедура - вызывается при нажатии на кнопку "Подбор"
//
Процедура КоманднаяПанель1Подбор(Кнопка)
	
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(ЭлементыФормы.РаботникиОрганизации, Ссылка, Ложь, Дата, мГоловнаяОрганизация, 0,,,,Истина);
	
КонецПроцедуры

// Процедура - обработчик события нажатия на кн. Показвыать все поля
//
Процедура КоманднаяПанель1ПоказыватьВсеПоля(Кнопка)
	Кнопка.Пометка = Не Кнопка.Пометка;
	
	Если Кнопка.Пометка Тогда
		// устанавливаем видимость полям
		ЭлементыФормы.РаботникиОрганизации.Колонки.Должность.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.РабочийТелефон.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ДомашнийТелефон.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.Сумма.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ПризнакЗарплатный.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.КатегорияНаселения.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.БонусУчастника.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ТарифСледующийГод.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ТарифТекущийГод.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.БонусПрограмма.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ПризнакРассылки.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ИнтернетАдрес.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.СчетДебета.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.МобильныйТелефон.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ОператорСвязи.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.МобильныйБанк.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ПередачаБКИ.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.Резидент.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.Гражданство.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.МиграционнаяКарта.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.НомерМиграционнойКарты.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ДатаНачалаПребыванияМиграционнойКарты.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ДатаОкончанияПребыванияМиграционнойКарты.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.МиграционныйДокумент.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.КодМиграционногоДокумента.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.НомерМиграционногоДокумента.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ДатаНачалаПребыванияМиграционногоДокумента.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ДатаОкончанияПребыванияМиграционногоДокумента.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ПрогнозируемыйМесячныйДоход.Видимость = Истина;
		
	Иначе
		// убираем видимость полям
		ЭлементыФормы.РаботникиОрганизации.Колонки.Должность.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.РабочийТелефон.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ДомашнийТелефон.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.Сумма.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ПризнакЗарплатный.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.КатегорияНаселения.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.БонусУчастника.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ТарифСледующийГод.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ТарифТекущийГод.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.БонусПрограмма.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ПризнакРассылки.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ИнтернетАдрес.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.СчетДебета.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.МобильныйТелефон.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ОператорСвязи.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.МобильныйБанк.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ПередачаБКИ.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.Резидент.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.Гражданство.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.МиграционнаяКарта.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.НомерМиграционнойКарты.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ДатаНачалаПребыванияМиграционнойКарты.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ДатаОкончанияПребыванияМиграционнойКарты.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.МиграционныйДокумент.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.КодМиграционногоДокумента.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.НомерМиграционногоДокумента.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ДатаНачалаПребыванияМиграционногоДокумента.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ДатаОкончанияПребыванияМиграционногоДокумента.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ПрогнозируемыйМесячныйДоход.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры // КоманднаяПанель1ПоказыватьВсеПоля()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

Процедура ВводНачальныхСведенийПриИзменении(Элемент)
	
	ЭлементыФормы.РаботникиОрганизации.Колонки.НомерЛицевогоСчета.Видимость = ВводНачальныхСведений;
	
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;
	
	// Получим и запомним ссылку на головную организацию
	мГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
	
КонецПроцедуры

Процедура КодВалютыНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Справочники.Валюты.ПолучитьФормуВыбора(, ЭтаФорма).Открыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ РаботникиОрганизации

Процедура РаботникиОрганизацииПередНачаломИзменения(Элемент, Отказ)
	
	ТекущиеДанныеСтроки = Элемент.ТекущиеДанные;
	
	Если ТекущиеДанныеСтроки <> Неопределено Тогда
		мТекущееФизЛицо = ТекущиеДанныеСтроки.ФизЛицо;
	КонецЕсли;
	
КонецПроцедуры

Процедура РаботникиОрганизацииПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	мТекущееФизЛицо = Неопределено;
	
КонецПроцедуры

Процедура РаботникиОрганизацииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) <> Тип("СправочникСсылка.ФизическиеЛица") Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Физлицо = ВыбранноеЗначение;
	
	Если РаботникиОрганизации.НайтиСтроки(Новый Структура("ФизЛицо", ФизЛицо)).Количество() = 0 Тогда
		СтрокаТабличнойЧасти = РаботникиОрганизации.Добавить();
		СтрокаТабличнойЧасти.Физлицо = Физлицо;
		ЗаполнитьСтрокуПоФизическомуЛицу(СтрокаТабличнойЧасти);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ РаботникиОрганизации

Процедура РаботникиОрганизацииФизЛицоПриИзменении(Элемент)
	
	ЗаполнитьСтрокуПоФизическомуЛицу(ЭлементыФормы.РаботникиОрганизации.ТекущиеДанные);
	
КонецПроцедуры

Процедура ЗаполнитьЭмбоссированныйТекст(ДанныеТекущегоРаботникаОрганизации)
	
	ЗаполнятьЭмбосированныйТекст = Ложь;
	
	Если ДанныеТекущегоРаботникаОрганизации <> Неопределено Тогда
		
		Если ПустаяСтрока(ДанныеТекущегоРаботникаОрганизации.ЭмбоссированныйТекст1) Тогда
			ЗаполнятьЭмбосированныйТекст = Истина;
			
		Иначе
			Если ДанныеТекущегоРаботникаОрганизации.ФизЛицо <> Неопределено Тогда
				СрезФИО = РегистрыСведений.ФИОФизЛиц.СрезПоследних(ТекущаяДата(), Новый Структура("ФизЛицо", ДанныеТекущегоРаботникаОрганизации.ФизЛицо));
				Если СрезФИО.Количество() > 0 Тогда
					Если (ДанныеТекущегоРаботникаОрганизации.ЭмбоссированныйТекст1 <> ПолучитьСтрокуНаЛатинском(СрезФИО[0].Имя))
					   ИЛИ (ДанныеТекущегоРаботникаОрганизации.ЭмбоссированныйТекст2 <> ПолучитьСтрокуНаЛатинском(СрезФИО[0].Фамилия)) Тогда
						ЗаполнятьЭмбосированныйТекст = Истина;
						
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗаполнятьЭмбосированныйТекст Тогда
		
		СрезФИО = РегистрыСведений.ФИОФизЛиц.СрезПоследних(ТекущаяДата(), Новый Структура("ФизЛицо", ДанныеТекущегоРаботникаОрганизации.ФизЛицо));
		Если СрезФИО.Количество() > 0 Тогда
			ДанныеТекущегоРаботникаОрганизации.ЭмбоссированныйТекст1 = ПолучитьСтрокуНаЛатинском(СрезФИО[0].Имя);
			ДанныеТекущегоРаботникаОрганизации.ЭмбоссированныйТекст2 = ПолучитьСтрокуНаЛатинском(СрезФИО[0].Фамилия);
			Если ДанныеТекущегоРаботникаОрганизации.ФизЛицо.Пол = Перечисления.ПолФизическихЛиц.Женский Тогда
				ДанныеТекущегоРаботникаОрганизации.ЭмбоссированныйТекст3 = "MRS";
			Иначе 
				ДанныеТекущегоРаботникаОрганизации.ЭмбоссированныйТекст3 = "MR";
			КонецЕсли;	
				
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры //ЗаполнитьЭмбоссированныйТекст()

Процедура ЗаполнитьМиграционныйДокумент(ДанныеТекущегоРаботникаОрганизации)
	
	Если ДанныеТекущегоРаботникаОрганизации <> Неопределено И ДанныеТекущегоРаботникаОрганизации.ФизЛицо <> Неопределено Тогда
		
		ЗапросПаспортныхДанных = Новый Запрос( 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПаспортныеДанныеФизЛицСрезПоследних.Период КАК Период,
		|	ПаспортныеДанныеФизЛицСрезПоследних.ФизЛицо КАК ФизЛицо,
		|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументСерия КАК ДокументСерия,
		|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументНомер КАК ДокументНомер,
		|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументДатаВыдачи КАК ДокументДатаВыдачи,
		|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументКемВыдан КАК ДокументКемВыдан,
		|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументВид.КодИМНС КАК КодМиграционногоДокумента
		|ИЗ
		|	РегистрСведений.ПаспортныеДанныеФизЛиц.СрезПоследних КАК ПаспортныеДанныеФизЛицСрезПоследних
		|ГДЕ
		|	ПаспортныеДанныеФизЛицСрезПоследних.ФизЛицо = &ФизЛицо
		|	И (ПаспортныеДанныеФизЛицСрезПоследних.ДокументВид = ЗНАЧЕНИЕ(Справочник.ДокументыУдостоверяющиеЛичность.ИМНС12)
		|			ИЛИ ПаспортныеДанныеФизЛицСрезПоследних.ДокументВид = ЗНАЧЕНИЕ(Справочник.ДокументыУдостоверяющиеЛичность.ИМНС13)
		|			ИЛИ ПаспортныеДанныеФизЛицСрезПоследних.ДокументВид = ЗНАЧЕНИЕ(Справочник.ДокументыУдостоверяющиеЛичность.ИМНС15))");
		
		ЗапросПаспортныхДанных.УстановитьПараметр("ФизЛицо", ДанныеТекущегоРаботникаОрганизации.ФизЛицо);
		
		Выборка = ЗапросПаспортныхДанных.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			ДанныеТекущегоРаботникаОрганизации.КодМиграционногоДокумента = Выборка.КодМиграционногоДокумента;
			ДанныеТекущегоРаботникаОрганизации.НомерМиграционногоДокумента = Выборка.ДокументСерия + " " + Выборка.ДокументНомер;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуПоФизическомуЛицу(ДанныеТекущегоРаботникаОрганизации)
	
	Если ДанныеТекущегоРаботникаОрганизации <> Неопределено И ДанныеТекущегоРаботникаОрганизации.ФизЛицо <> Неопределено Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА СтатусФизЛицКакНалогоплательщиковНДФЛСрезПоследних.Статус ЕСТЬ NULL 
		|				ИЛИ СтатусФизЛицКакНалогоплательщиковНДФЛСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Резидент,
		|	ЕСТЬNULL(ГражданствоФизЛицСрезПоследних.Страна, """") КАК Гражданство,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА РаботникиОрганизацийСрезПоследних.Должность.Наименование
		|			ИНАЧЕ РаботникиОрганизацийСрезПоследних.ДолжностьЗавершения.Наименование
		|		КОНЕЦ, """") КАК Должность
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&ДатаСреза, ) КАК ГражданствоФизЛицСрезПоследних
		|		ПО ФизическиеЛица.Ссылка = ГражданствоФизЛицСрезПоследних.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ.СрезПоследних(&ДатаСреза, ) КАК СтатусФизЛицКакНалогоплательщиковНДФЛСрезПоследних
		|		ПО ФизическиеЛица.Ссылка = СтатусФизЛицКакНалогоплательщиковНДФЛСрезПоследних.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|				&ДатаСреза,
		|				Организация = &ГоловнаяОрганизация
		|					И Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК РаботникиОрганизацийСрезПоследних
		|		ПО ФизическиеЛица.Ссылка = РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо
		|			И (РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение))
		|ГДЕ
		|	ФизическиеЛица.Ссылка = &ФизическоеЛицо";
		
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
		Запрос.УстановитьПараметр("ДатаСреза", Дата);
		Запрос.УстановитьПараметр("ФизическоеЛицо", ДанныеТекущегоРаботникаОрганизации.ФизЛицо);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(ДанныеТекущегоРаботникаОрганизации, Выборка);
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнитьЭмбоссированныйТекст(ДанныеТекущегоРаботникаОрганизации);
	
	ЗаполнитьМиграционныйДокумент(ДанныеТекущегоРаботникаОрганизации);
	
КонецПроцедуры

Процедура РаботникиОрганизацииКодМиграционногоДокументаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбора = Справочники.ДокументыУдостоверяющиеЛичность.ПолучитьФормуВыбора("ФормаВыбора" , Элемент, Ссылка);
	ФормаВыбора.Открыть();
	
КонецПроцедуры

Процедура РаботникиОрганизацииКодМиграционногоДокументаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элемент.Значение = ВыбранноеЗначение.КодИМНС;
	
КонецПроцедуры

Процедура РаботникиОрганизацииПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеСтроки.Ячейки.ЭмбоссированныйТекст.Видимость = Ложь;
	ОформлениеСтроки.Ячейки.МиграционнаяКарта.Видимость = Ложь;
	ОформлениеСтроки.Ячейки.МиграционныйДокумент.Видимость = Ложь;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ


СоответствиеСимволов = Новый Соответствие;
СоответствиеСимволов.Вставить("А", "A");
СоответствиеСимволов.Вставить("Б", "B");
СоответствиеСимволов.Вставить("В", "V");
СоответствиеСимволов.Вставить("Г", "G");
СоответствиеСимволов.Вставить("Д", "D");
СоответствиеСимволов.Вставить("Е", "E");
СоответствиеСимволов.Вставить("Ё", "E");
СоответствиеСимволов.Вставить("Ж", "ZH");
СоответствиеСимволов.Вставить("З", "Z");
СоответствиеСимволов.Вставить("И", "I");
СоответствиеСимволов.Вставить("Й", "Y");
СоответствиеСимволов.Вставить("К", "K");
СоответствиеСимволов.Вставить("Л", "L");
СоответствиеСимволов.Вставить("М", "M");
СоответствиеСимволов.Вставить("Н", "N");
СоответствиеСимволов.Вставить("О", "O");
СоответствиеСимволов.Вставить("П", "P");
СоответствиеСимволов.Вставить("Р", "R");
СоответствиеСимволов.Вставить("С", "S");
СоответствиеСимволов.Вставить("Т", "T");
СоответствиеСимволов.Вставить("У", "U");
СоответствиеСимволов.Вставить("Ф", "F");
СоответствиеСимволов.Вставить("Х", "KH");
СоответствиеСимволов.Вставить("Ц", "TS");
СоответствиеСимволов.Вставить("Ч", "CH");
СоответствиеСимволов.Вставить("Ш", "SH");
СоответствиеСимволов.Вставить("Щ", "SHCH");
СоответствиеСимволов.Вставить("Ъ", "");
СоответствиеСимволов.Вставить("Ы", "Y");
СоответствиеСимволов.Вставить("Ь", "");
СоответствиеСимволов.Вставить("Э", "E");
СоответствиеСимволов.Вставить("Ю", "YU");
СоответствиеСимволов.Вставить("Я", "YA");