////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента; 
Перем мТекущийОтчетныйПериод; 

// Хранит соответствие, при помощи которого храним и показываем содержимое пачки
Перем СоответствиеСсылокИОбъектовПачек;

// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;

// Хранит элемент управления подменю печати
Перем мПодменюПечати;

// Хранит элемент управления кнопку печать по умолчанию
Перем мПечатьПоУмолчанию;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

// Хранит соответствие, при помощи которого получаем картинку для формы.
Перем СоответствиеКартинокИСЗВ4ТолькоПросмотр;

// Хранит ссылку на головную организацию
Перем мГоловнаяОрганизация;

Перем мЕстьДоступКНачислениям;

Перем мТаблицаСведенийПринятыхПФР;
Перем мМассивПрошлыхПериодов;
Перем мИменаПрошлыхПачек;

////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ПоказатьЭлементыФормы()

	СтажДоступенДляРедактирования = НастройкаПравДоступаПереопределяемый.ДоступнаРольКадровикаРегл();
	
	ЭтоНовыеФормы = ОтчетныйПериод >= ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами();
	Если СпециальныйДокумент2010года Тогда
		ЭлементыФормы.ПанельОписанияФорм.ТекущаяСтраница = ЭлементыФормы.ПанельОписанияФорм.Страницы.Страница2009;
		ЭлементыФормы.ПанельОписания.ТекущаяСтраница = ЭлементыФормы.ПанельОписания.Страницы.СтраницаСпециальная;
	ИначеЕсли ЭтоНовыеФормы Тогда
		Если НеСодержитСЗВ Тогда
			ЭлементыФормы.ПанельОписанияФорм.ТекущаяСтраница = ЭлементыФормы.ПанельОписанияФорм.Страницы.АДВ11;
		Иначе
			ЭлементыФормы.ПанельОписанияФорм.ТекущаяСтраница = ЭлементыФормы.ПанельОписанияФорм.Страницы.Страница2010;
		КонецЕсли;
		
		Если мЕстьДоступКНачислениям Тогда
			КнопкаПоказаАДВ11 = ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Файл.Кнопки.АДВ11;
			Если НеСодержитСЗВ Тогда
				КнопкаПоказаАДВ11.Текст = "АДВ-11";
			Иначе
				КнопкаПоказаАДВ11.Текст = "АДВ-6-2 (за 2009 г. - АДВ-11)";
			КонецЕсли;
			КнопкаПоказаАДВ11.Подсказка = "Показать файл " + КнопкаПоказаАДВ11.Текст;
			КнопкаПоказаАДВ11.Пояснение = КнопкаПоказаАДВ11.Подсказка;
			КнопкаЗаписиАДВ11 = ЭлементыФормы.ОсновныеДействияФормы.Кнопки.НаДискетку.Кнопки.АДВ11;
			КнопкаЗаписиАДВ11.Текст = КнопкаПоказаАДВ11.Текст;
			КнопкаЗаписиАДВ11.Подсказка = "Записать файл " + КнопкаЗаписиАДВ11.Текст;
			КнопкаЗаписиАДВ11.Пояснение = КнопкаЗаписиАДВ11.Подсказка;
		КонецЕсли;
	Иначе
		ЭлементыФормы.ПанельОписанияФорм.ТекущаяСтраница = ЭлементыФормы.ПанельОписанияФорм.Страницы.Страница2009;
		ЭлементыФормы.ПанельОписания.ТекущаяСтраница = ЭлементыФормы.ПанельОписания.Страницы.СтраницаОбычная;
	КонецЕсли;
	
	Если мЕстьДоступКНачислениям И Не СпециальныйДокумент2010года И ЭтоНовыеФормы Тогда
		ЭлементыФормы.ПанельСостояниеПачекДокументов.Свертка = РежимСверткиЭлементаУправления.Нет;
	Иначе
		ЭлементыФормы.ПанельСостояниеПачекДокументов.Свертка = РежимСверткиЭлементаУправления.Верх;
	КонецЕсли;
	
	Записан = Не ЭтоНовый();
	ЭлементыФормы.НомерПачки.АвтоОтметкаНезаполненного = Записан;
	ЭлементыФормы.НомерПачки.ОтметкаНезаполненного = Записан И Не ЗначениеЗаполнено(НомерПачки);
	
	Если Не ЭтоНовыеФормы Или СпециальныйДокумент2010года Тогда
		
		Если мЕстьДоступКНачислениям И НЕ СтажДоступенДляРедактирования И ПачкиДокументов.Количество() > 0 Тогда
			ЭлементыФормы.КоманднаяПанельПачки.Кнопки.Сформировать.Текст = "Заполнить взносы";
			ЭлементыФормы.КоманднаяПанельПачки.Кнопки.Сформировать.Подсказка = "Заполнить суммы взносов сотрудников";
		КонецЕсли;
		
		Кнопки = ЭлементыФормы.ОсновныеДействияФормы.Кнопки;
		Если СпециальныйДокумент2010года Тогда
			Если Кнопки.Найти("Записать") <> Неопределено Тогда
				Кнопки.Удалить(Кнопки.Записать);
				Кнопки.Удалить(Кнопки.НаДискетку);
				Кнопки.Удалить(Кнопки.ОК);
				Кнопки.Удалить(Кнопки.Проверить);
				Кнопки.Удалить(Кнопки.Файл);
				Кнопки.Закрыть.КнопкаПоУмолчанию = Истина;
			КонецЕсли;
			ЭлементыФормы.ПринятоВПФР.Доступность = Ложь;
		ИначеЕсли НЕ мЕстьДоступКНачислениям Тогда
			Если Кнопки.Найти("Проверить") <> Неопределено Тогда
				Кнопки.Удалить(Кнопки.Проверить);
				Кнопки.Удалить(Кнопки.Файл);
				Кнопки.Удалить(Кнопки.ОК);
				Кнопки.Удалить(Кнопки.НаДискетку);
				Кнопки.Удалить(Кнопки.Разделитель);
				Кнопки.Удалить(Кнопки.Разделитель2);
				Кнопки.Удалить(Кнопки.Разделитель3);
				Кнопки.Удалить(Кнопки.Разделитель4);
			КонецЕсли;
			Кнопки.Записать.КнопкаПоУмолчанию = Истина;
		КонецЕсли;
		
		Если НЕ мЕстьДоступКНачислениям Тогда
			
			ЭлементыФормы.ПринятоВПФР.Видимость = Ложь; 
			
			ЭлементыФормы.Панель1.Страницы.Расчеты.Видимость = Ложь;
			КоманднаяПанельПачки = ЭлементыФормы.КоманднаяПанельПачки.Кнопки;
			Если КоманднаяПанельПачки.Найти("Провести") <> Неопределено Тогда
				КоманднаяПанельПачки.Удалить(КоманднаяПанельПачки.Провести);
				КоманднаяПанельПачки.Удалить(КоманднаяПанельПачки.ОтменитьПроведение);
				КоманднаяПанельПачки.Удалить(КоманднаяПанельПачки.ПровестиПачки);
				КоманднаяПанельПачки.Удалить(КоманднаяПанельПачки.Разделитель3);
			КонецЕсли;
			
			ДействияФормы = ЭлементыФормы.ДействияФормы.Кнопки;
			Если ДействияФормы.Найти("Разделитель9") <> Неопределено Тогда
				ДействияФормы.Удалить(ДействияФормы.Разделитель9);
				ДействияФормы.Удалить(ДействияФормы.Действие10);
				ДействияФормы.Удалить(ДействияФормы.Действие11);
				ДействияФормы.Подменю.Кнопки.Удалить(ДействияФормы.Подменю.Кнопки.Действие13);
				ДействияФормы.Подменю.Кнопки.Удалить(ДействияФормы.Подменю.Кнопки.Действие14);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли мЕстьДоступКНачислениям Тогда  // с 2010 года
		Если ПринятоВПФР Тогда
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Закрыть.КнопкаПоУмолчанию = Истина;
		Иначе
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОК.КнопкаПоУмолчанию = Истина;
		КонецЕсли;
		ЭлементыФормы.ПринятоВПФР.Доступность = Проведен И Не ЗаполненПринятымиСведениями;
		ЭлементыФормы.ПанельСЗВ_АДВ.Видимость = ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ОтчетныйПериод) = КонецГода(ОтчетныйПериод);
	Иначе
		// кадровику не разрешаем почти ничего - все кнопки придется удалить
		
		КоманднаяПанельПачки = ЭлементыФормы.КоманднаяПанельПачки1.Кнопки;
		Если КоманднаяПанельПачки.Найти("Провести") <> Неопределено Тогда
			КоманднаяПанельПачки.Удалить(КоманднаяПанельПачки.Провести);
			КоманднаяПанельПачки.Удалить(КоманднаяПанельПачки.ОтменитьПроведение);
			КоманднаяПанельПачки.Удалить(КоманднаяПанельПачки.ПровестиПачки);
			КоманднаяПанельПачки.Удалить(КоманднаяПанельПачки.Разделитель3);
			МожноСчитатьВзносы = мЕстьДоступКНачислениям И (мМассивПрошлыхПериодов.Количество() = 0 Или мТаблицаСведенийПринятыхПФР.Количество() = мМассивПрошлыхПериодов.Количество());
			КоманднаяПанельПачки.ПодменюЗаполнить.Кнопки.ЗаполнитьВзносы.Доступность = МожноСчитатьВзносы;
		КонецЕсли;
		
		ДействияФормы = ЭлементыФормы.ДействияФормы.Кнопки;
		Если ДействияФормы.Найти("Разделитель9") <> Неопределено Тогда
			ДействияФормы.Удалить(ДействияФормы.Разделитель9);
			ДействияФормы.Удалить(ДействияФормы.Действие10);
			ДействияФормы.Удалить(ДействияФормы.Действие11);
			ДействияФормы.Подменю.Кнопки.Удалить(ДействияФормы.Подменю.Кнопки.Действие13);
			ДействияФормы.Подменю.Кнопки.Удалить(ДействияФормы.Подменю.Кнопки.Действие14);
		КонецЕсли;
		
		Кнопки = ЭлементыФормы.ОсновныеДействияФормы.Кнопки;
		Если Кнопки.Найти("Проверить") <> Неопределено Тогда
			Кнопки.Удалить(Кнопки.Проверить);
			Кнопки.Удалить(Кнопки.Файл);
			Кнопки.Удалить(Кнопки.ОК);
			Кнопки.Удалить(Кнопки.НаДискетку);
			Кнопки.Удалить(Кнопки.Разделитель);
			Кнопки.Удалить(Кнопки.Разделитель2);
			Кнопки.Удалить(Кнопки.Разделитель3);
			Кнопки.Удалить(Кнопки.Разделитель4);
		КонецЕсли;
		
		Если ПринятоВПФР Тогда
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Закрыть.КнопкаПоУмолчанию = Истина;
		Иначе 	
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Записать.КнопкаПоУмолчанию = Истина;
		КонецЕсли;
		ЭлементыФормы.ПринятоВПФР.Доступность = Ложь;
		
		ЭлементыФормы.ПанельСЗВ_АДВ.Видимость = ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ОтчетныйПериод) = КонецГода(ОтчетныйПериод);
		ЭлементыФормы.НеСодержитСЗВ.Доступность = Ложь;
		ЭлементыФормы.СодержитСЗВ.Доступность = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

// Обновляет доступность, элементов формы, связанных с физ.лицами. пачек, в
// соответствии с состоянием текущей активной пачки.
Процедура ОбновитьСостояниеЭУПоФизЛицам()
	ДокументОбъектДляПоказаФизЛицПроведен = ДокументОбъектДляПоказаФизлиц.Проведен;
	ЭлементыФормы.ФизлицаПачек.ТолькоПросмотр = ДокументОбъектДляПоказаФизЛицПроведен;
	ЭлементыФормы.ФизлицаПачек1.ТолькоПросмотр = ДокументОбъектДляПоказаФизЛицПроведен;
	ЭлементыФормы.КоманднаяПанельФизлицаПачек.Кнопки.Перенести.Доступность = НЕ ДокументОбъектДляПоказаФизЛицПроведен;
	ЭлементыФормы.КоманднаяПанельФизлицаПачек.Кнопки.ДействиеРедактироватьСЗВ_.Картинка = СоответствиеКартинокИСЗВ4ТолькоПросмотр.Получить(ДокументОбъектДляПоказаФизЛицПроведен);
	ЭлементыФормы.КоманднаяПанельФизлицаПачек1.Кнопки.Перенести.Доступность = НЕ ДокументОбъектДляПоказаФизЛицПроведен;
	ЭлементыФормы.КоманднаяПанельФизлицаПачек1.Кнопки.ДействиеРедактироватьСЗВ_.Картинка = СоответствиеКартинокИСЗВ4ТолькоПросмотр.Получить(ДокументОбъектДляПоказаФизЛицПроведен);
КонецПроцедуры

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.ПачкиДокументов,ЭлементыФормы.КоманднаяПанельПачки.Кнопки.ПодменюЗаполнить);
	СоответствиеТЧ.Вставить(ЭлементыФормы.ПачкиДокументов1,ЭлементыФормы.КоманднаяПанельПачки1.Кнопки.ПодменюЗаполнить);
	СоответствиеТЧ.Вставить(ЭлементыФормы.СведенияОЗадолженности,ЭлементыФормы.КоманднаяПанельРасчеты.Кнопки.ПодменюЗаполнить);
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧ(Ссылка, СоответствиеТЧ, Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
КонецПроцедуры

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	мДеревоМакетов = УниверсальныеМеханизмы.ПолучитьДеревоМакетовПечати(Ссылка, ПолучитьСтруктуруПечатныхФорм(), Новый Действие("ОсновныеДействияФормыПечать"), Новый Действие("ОсновныеДействияФормыУстановитьПечатьПоУмолчанию"));
	
	УниверсальныеМеханизмы.УстановитьПодменюПечати    (мПодменюПечати, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов);
	УниверсальныеМеханизмы.УстановитьПечатьПоУмолчанию(мПечатьПоУмолчанию, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов, Метаданные().Имя,Новый Действие("ОсновныеДействияФормыПечатьПоУмолчанию"));
	
	Если Не мПодменюПечати = Неопределено Тогда
		УниверсальныеМеханизмы.СформироватьПодменю(мДеревоМакетов, мПодменюПечати,Истина,Истина);
	КонецЕсли;
КонецПроцедуры

// Создает соответствие, содержащее для каждой ссылки на документ-пачку ее объект
Процедура ОбновитьСоответствиеПачек()
	
	СоответствиеСсылокИОбъектовПачек = Новый Соответствие;
	Для каждого Пачка Из ПачкиДокументов Цикл
		Если Не Пачка.ДокументПачка.Пустая() Тогда
			СоответствиеСсылокИОбъектовПачек.Вставить(Пачка.ДокументПачка,Пачка.ДокументПачка.ПолучитьОбъект()) 
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьЗаголовкиОрганизацийВФорме()
	
	ЭлементыФормы.НадписьОрганизация.Заголовок 	= ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация:");
	ЭлементыФормы.Организация.Подсказка 		= ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация");
	
КонецПроцедуры // УстановитьЗаголовкиОрганизацийВФорме()

Процедура ОбновитьНадписьСостоянияПачекДокументов()
	ПроцедурыПерсонифицированногоУчетаПолныеПрава.ПрочитатьСведенияПринятыеПФР(Организация, ОтчетныйПериод, мТаблицаСведенийПринятыхПФР, мИменаПрошлыхПачек, мМассивПрошлыхПериодов, мЕстьДоступКНачислениям);
	ПроцедурыПерсонифицированногоУчета.ОписаниеСостоянияПринятыхПФРДанных(мТаблицаСведенийПринятыхПФР.Количество(), мТаблицаСведенийПринятыхПФР, мМассивПрошлыхПериодов, мИменаПрошлыхПачек, ЭлементыФормы, Истина);
	МожноСчитатьВзносы = мЕстьДоступКНачислениям И (мМассивПрошлыхПериодов.Количество() = 0 Или мТаблицаСведенийПринятыхПФР.Количество() = мМассивПрошлыхПериодов.Количество());
	ЭлементыФормы.КоманднаяПанельПачки1.Кнопки.ПодменюЗаполнить.Кнопки.ЗаполнитьВзносы.Доступность = МожноСчитатьВзносы;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	Если ЭтоНовый() Тогда
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументовПереопределяемый.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"));
		Если Не ЗначениеЗаполнено(ОтчетныйПериод) Тогда
			ОтчетныйПериод = ПроцедурыПерсонифицированногоУчета.ПредшествующийОтчетныйПериодПерсучета(ОбщегоНазначения.ПолучитьРабочуюДату());
			ДатаДействия = Дата;
			ТипСведений = "ИСХД";
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ПроцедурыПерсонифицированногоУчета.ДанныеРуководителяОрганизации(Организация, Дата));
		КонецЕсли;
		ФорматФайла = Перечисления.ФорматФайлаПФР.Версия07;
		НомерПачки = "";
		ПринятоВПФР = Ложь;
	ИначеЕсли СпециальныйДокумент2010года Или ЗаполненПринятымиСведениями Или ПринятоВПФР Тогда 
		ТолькоПросмотр = Истина;
	Иначе
		// Установить доступность формы с учетом даты запрета редактирования	
		РаботаСДиалогамиЗК.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
	КонецЕсли;
	
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);

	СтруктураКолонок = Новый Структура();

	// Установить колонки, видимостью которых пользователь управлять не может.
	СтруктураКолонок.Вставить("ДокументПачка");
	СтруктураКолонок.Вставить("ТипФормДокументов");

	// Установить ограничение - изменять видимость колонок табличной части
	ОбработкаТабличныхЧастей.УстановитьИзменятьВидимостьКолонокТабЧасти(ЭлементыФормы.ПачкиДокументов.Колонки, СтруктураКолонок);

	СтруктураКолонок = Новый Структура();

	// Установить колонки, видимостью которых пользователь управлять не может.
	СтруктураКолонок.Вставить("Год");
	СтруктураКолонок.Вставить("ТипСтроки");
	СтруктураКолонок.Вставить("СтраховаяЧасть");
	СтруктураКолонок.Вставить("НакопительнаяЧасть");
	
	// Заполнить соответствия для картинок для открытия данных СЗВ4
	СоответствиеКартинокИСЗВ4ТолькоПросмотр = Новый Соответствие;
	СоответствиеКартинокИСЗВ4ТолькоПросмотр.Вставить(Истина, БиблиотекаКартинок.ПосмотретьСЗВ4);
	СоответствиеКартинокИСЗВ4ТолькоПросмотр.Вставить(Ложь, БиблиотекаКартинок.ОткрытьСЗВ4);
	
	// Установить ограничение - изменять видимость колонок табличной части
	ОбработкаТабличныхЧастей.УстановитьИзменятьВидимостьКолонокТабЧасти(ЭлементыФормы.СведенияОЗадолженности.Колонки, СтруктураКолонок);

	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента = Дата;
	мТекущийОтчетныйПериод = ОтчетныйПериод;
	МесяцСтрока = ПредставлениеПериода(НачалоГода(ОтчетныйПериод), ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ОтчетныйПериод), "ФП = Истина" );
	ФлажокПринятоВПФР = ПринятоВПФР;
	
	// Получим и запомним ссылку на головную организацию
	мГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);

	мЕстьДоступКНачислениям = НастройкаПравДоступаПереопределяемый.ДоступнаРольРасчетчикаРегл();
	
	// Установить активный реквизит.
	Если Не РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма) Тогда
		Если ОтчетныйПериод < ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами() Или СпециальныйДокумент2010года Тогда
			ТекущийЭлемент = ЭлементыФормы.ПачкиДокументов;
		Иначе
			ТекущийЭлемент = ЭлементыФормы.ПачкиДокументов1;
		КонецЕсли;
	КонецЕсли;
	
	ЭлементыФормы.СведенияОЗадолженности.Колонки.ДополнительныйТариф.Видимость = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуВсехОрганизаций(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), "ИспользуетсяТрудЧленовЛетныхЭкипажей");
	ЭлементыФормы.СведенияОЗадолженности1.Колонки.ДополнительныйТариф.Видимость = ЭлементыФормы.СведенияОЗадолженности.Колонки.ДополнительныйТариф.Видимость;
	СписокВариантов = Новый СписокЗначений;
	СписокВариантов.Добавить(Перечисления.РазделыАДВ11.ЗадолженностьНаНачало);
	СписокВариантов.Добавить(Перечисления.РазделыАДВ11.УплатаЗаПериод);
	СписокВариантов.Добавить(Перечисления.РазделыАДВ11.ЗадолженностьНаКонец);
	ЭлементыФормы.СведенияОЗадолженности1.Колонки.ТипСтроки.ЭлементУправления.ДоступныеЗначения = СписокВариантов;
	
	ОбновитьСоответствиеПачек();
	
	ОбновитьСостояниеЭУПоФизЛицам();
	
	ОбновитьНадписьСостоянияПачекДокументов();
	
	РегламентированнаяОтчетность.ПриОткрытииФормыРегламентированногоОтчетаПФР(ЭтаФорма, Новый Действие("КоманднаяПанельФормыДействиеОтправка"));
	
	ПоказатьЭлементыФормы();
	
	УстановитьЗаголовкиОрганизацийВФорме();
	
КонецПроцедуры

// Процедура - обработчик события "ПриЗаписи" формы.
//
Процедура ПриЗаписи(Отказ)
	
	Для каждого ПачкаИзТабличнойЧасти из ПачкиДокументов Цикл
		Объект = СоответствиеСсылокИОбъектовПачек.Получить(ПачкаИзТабличнойЧасти.ДокументПачка);
		Если (Объект <> Неопределено) И (Объект.Модифицированность()) тогда
			Попытка
				Объект.Записать(?(Объект.Проведен,РежимЗаписиДокумента.Проведение,РежимЗаписиДокумента.Запись));
			Исключение
			    Предупреждение("Не удалось записать " + Строка(Объект) );
				Отказ = Истина;
			КонецПопытки
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()

	// Установка кнопок печати
	УстановитьКнопкиПечати();
 
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
	Если ПринятоВПФР Тогда
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
	ПоказатьЭлементыФормы();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

Процедура НадписьПерейтиПодготовкаДанныхПФРНажатие(Элемент)
	
	Вопрос = "Перед переходом в рабочее место необходимо записать документ. Записать?";
	Если НЕ РегламентированнаяОтчетность.ТребованиеЗаписиДокументаУдовлетворено(ЭтотОбъект,Вопрос) тогда
		Возврат;
	КонецЕсли;
	
	Обработка = Обработки.ПодготовкаДанныхПФР2010.Создать();
	Обработка.Организация		= Организация;
	Обработка.ОтчетныйПериод	= ОтчетныйПериод;
	Обработка.ТипСведений		= Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ;
	
	Обработка.ПолучитьФорму("Форма").Открыть();
		
	Закрыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

// формирует файл по правилам ПФР (формат 4.00)
//
Процедура ОсновныеДействияФормыФайлАДВ11(Кнопка)
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	ПроцедурыПерсонифицированногоУчета.ПоказатьФайлДокумента(ЭтотОбъект,?(ОтчетныйПериод < ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами(),"Файл-пачка ведомости уплаты страховых взносов","Файл описи сведений, передаваемых страхователем в ПФР"));
КонецПроцедуры

// формирует файл по правилам ПФР (формат 4.00)
//
Процедура ОсновныеДействияФормыФайлСЗВ4(Кнопка)
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	Для каждого СтрокаТЧ Из ПачкиДокументов Цикл
		ПроцедурыПерсонифицированногоУчета.ПоказатьФайлДокумента(СтрокаТЧ.ДокументПачка.ПолучитьОбъект(),"Файл-пачка документов СЗВ " + СтрокаТЧ.ДокументПачка.Номер);
	КонецЦикла;
КонецПроцедуры

// формирует файл по правилам ПФР (формат 4.00)
//
Процедура ОсновныеДействияФормыВсеФайлы(Кнопка)
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	ПроцедурыПерсонифицированногоУчета.ПоказатьФайлДокумента(ЭтотОбъект,?(ОтчетныйПериод < ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами(),"Файл-пачка ведомости уплаты страховых взносов","Файл описи сведений, передаваемых страхователем в ПФР"));
	Для каждого СтрокаТЧ Из ПачкиДокументов Цикл
		ПроцедурыПерсонифицированногоУчета.ПоказатьФайлДокумента(СтрокаТЧ.ДокументПачка.ПолучитьОбъект(),"Файл-пачка документов СЗВ-4 " + СтрокаТЧ.ДокументПачка.Номер);
	КонецЦикла;
КонецПроцедуры

// Запускает тестирование файла программой проверки
//
Процедура ОсновныеДействияФормыПроверитьВCheckXML(Кнопка)
	
	ТекстВопросаСохранения = "Перед проверкой документ необходимо записать. Записать?";
	ТекстВопросаДействия = "Внимание!" + Символы.ПС + "В рамках одного документа невозможно провести весь комплекс предусмотренных ПФР проверок! " + Символы.ПС + "Для проведения полной проверки комплекта передаваемых сведений Вы можете перейти в рабочее место" + Символы.ПС + "Подготовка данных ПФР (рекомендуется) либо сейчас проверить только этот документ.";
	ТекстКнопкиДействия = "Проверить текущий документ";
	ЗаголовокОкна = "Проверка данных";
	
	Если ОтчетныйПериод < ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами() Или НеСодержитСЗВ Тогда
		Если НЕ РегламентированнаяОтчетность.ТребованиеЗаписиДокументаУдовлетворено(ЭтотОбъект,ТекстВопросаСохранения) тогда
			Возврат;
		КонецЕсли;
		ПроцедурыПерсонифицированногоУчета.ПроверитьФайлВCheckXML(ДокументОбъект, ЭтаФорма);
	ИначеЕсли Не ПроцедурыПерсонифицированногоУчета.ПереходВРабочееМестоПФРвОтветНаВопрос(ЭтотОбъект, ЭтаФорма, ТекстВопросаСохранения, ТекстВопросаДействия, ТекстКнопкиДействия, ЗаголовокОкна, Организация, ОтчетныйПериод, Год(ОтчетныйПериод), Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ) Тогда
		ПроцедурыПерсонифицированногоУчета.ПроверитьФайлВCheckXML(ДокументОбъект, ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

// копирует файл с "правильным" именем в указанное пользователем место
//
Процедура ОсновныеДействияФормыНаДискеткуАДВ11(Кнопка)
	
	ТекстВопросаСохранения = "Перед формированием файла документ необходимо записать. Записать?";
	ТекстВопросаДействия = "Внимание!" + Символы.ПС + "В ПФР необходимо передавать файлы перс.учета в одном пакете с расчетом РСВ-1! " + Символы.ПС + "Для формирования полного комплекта передаваемых сведений Вы можете перейти в рабочее место" + Символы.ПС + "Подготовка данных ПФР (рекомендуется) либо сейчас сохранить только этот файл.";
	ТекстКнопкиДействия = "Записать только файл АДВ-6-2";
	ЗаголовокОкна = "Формирование файлов";
	
	Если ОтчетныйПериод < ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами() Или НеСодержитСЗВ Тогда
		Если НЕ РегламентированнаяОтчетность.ТребованиеЗаписиДокументаУдовлетворено(ЭтотОбъект,ТекстВопросаСохранения) Тогда 
			Возврат;
		КонецЕсли;
		
		ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаКомментариев.УдалитьСообщения();
		
		Если ФорматФайла = Перечисления.ФорматФайлаПФР.Версия04 Тогда
			КодировкаФайла = КодировкаТекста.OEM;
		ИначеЕсли ФорматФайла = Перечисления.ФорматФайлаПФР.Версия07 Тогда
			КодировкаФайла = КодировкаТекста.ANSI;
		КонецЕсли;
		ПроцедурыПерсонифицированногоУчета.ЗаписатьФайлДокументаНаДискету(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"), ПроцедурыПерсонифицированногоУчета.ПолучитьИмяФайлаПФ(Ссылка, Год(ОтчетныйПериод)), КодировкаФайла);
	ИначеЕсли Не ПроцедурыПерсонифицированногоУчета.ПереходВРабочееМестоПФРвОтветНаВопрос(ЭтотОбъект, ЭтаФорма, ТекстВопросаСохранения, ТекстВопросаДействия, ТекстКнопкиДействия, ЗаголовокОкна, Организация, ОтчетныйПериод, Год(ОтчетныйПериод), Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ) Тогда
		ОбработкаСообщений = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаСообщений.УдалитьСообщения();
		ПроцедурыПерсонифицированногоУчета.ЗаписатьФайлДокументаНаДискету(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"), ПроцедурыПерсонифицированногоУчета.ПолучитьИмяФайлаПФ(Ссылка, Год(ОтчетныйПериод)), "windows-1251");
	КонецЕсли;
	
КонецПроцедуры

// копирует файл с "правильным" именем в указанное пользователем место
//
Процедура ОсновныеДействияФормыНаДискеткуСЗВ4(Кнопка)
	
	Если ПачкиДокументов.Количество() > 0 Тогда
		
		ЗаписыватьФайлы = Истина;
		
		ТекстВопросаСохранения = "Перед формированием файлов документ необходимо записать. Записать?";
		
		Если ОтчетныйПериод < ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами() Или НеСодержитСЗВ Тогда
			ЗаписыватьФайлы = РегламентированнаяОтчетность.ТребованиеЗаписиДокументаУдовлетворено(ЭтотОбъект,ТекстВопросаСохранения)
		Иначе
			ТекстВопросаДействия = "Внимание!" + Символы.ПС + "В ПФР необходимо передавать файлы перс.учета в одном пакете с расчетом РСВ-1! " + Символы.ПС + "Для формирования полного комплекта передаваемых сведений Вы можете перейти в рабочее место" + Символы.ПС + "Подготовка данных ПФР (рекомендуется) либо сейчас сохранить только файлы СЗВ-6-1(2).";
			ТекстКнопкиДействия = "Записать только файлы СЗВ-6-1(2)";
			ЗаголовокОкна = "Формирование файлов";
			ЗаписыватьФайлы = Не ПроцедурыПерсонифицированногоУчета.ПереходВРабочееМестоПФРвОтветНаВопрос(ЭтотОбъект, ЭтаФорма, ТекстВопросаСохранения, ТекстВопросаДействия, ТекстКнопкиДействия, ЗаголовокОкна, Организация, ОтчетныйПериод, Год(ОтчетныйПериод), Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ)
		КонецЕсли;
		
		Если Не ЗаписыватьФайлы Тогда
			Возврат
		КонецЕсли;
		
		ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаКомментариев.УдалитьСообщения();
		
		Длг = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
		
		Длг.Каталог = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнойКаталогФайлов");
		Длг.Заголовок = "Укажите каталог";
		
		Каталог = "";
		Если Длг.Выбрать() Тогда
			Каталог = Длг.Каталог+"\";
		Иначе 	
			Возврат
		КонецЕсли;
		
		Если ФорматФайла = Перечисления.ФорматФайлаПФР.Версия04 Тогда
			КодировкаФайла = КодировкаТекста.OEM;
		ИначеЕсли ФорматФайла = Перечисления.ФорматФайлаПФР.Версия07 Тогда
			КодировкаФайла = "windows-1251";
		КонецЕсли;
		
		Для каждого СтрокаТЧ Из ПачкиДокументов Цикл
			Объект = СоответствиеСсылокИОбъектовПачек.Получить(СтрокаТЧ.ДокументПачка);
			ПроцедурыПерсонифицированногоУчета.ЗаписатьФайлДокументаНаДискету(Объект, Неопределено, Каталог + ПроцедурыПерсонифицированногоУчета.ПолучитьИмяФайлаПФ(СтрокаТЧ.ДокументПачка, Год(Объект.ОтчетныйПериод)), КодировкаФайла, Ложь);
		КонецЦикла;
		РаботаСДиалогами.ВывестиПредупреждение("Файлы пачек записаны в каталог: " + Каталог);
		
	КонецЕсли;
	
КонецПроцедуры

// копирует файл с "правильным" именем в указанное пользователем место
//
Процедура ОсновныеДействияФормыВсеНаДискетку(Кнопка)
	
	ЗаписыватьФайлы = Истина;
	
	ТекстВопросаСохранения = "Перед формированием файлов документ необходимо записать. Записать?";
	
	Если ОтчетныйПериод < ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами() Или НеСодержитСЗВ Тогда
		ЗаписыватьФайлы = РегламентированнаяОтчетность.ТребованиеЗаписиДокументаУдовлетворено(ЭтотОбъект,ТекстВопросаСохранения) 
	Иначе
		ТекстВопросаДействия = "Внимание!" + Символы.ПС + "В ПФР необходимо передавать файлы перс.учета в одном пакете с расчетом РСВ-1! " + Символы.ПС + "Для формирования полного комплекта передаваемых сведений Вы можете перейти в рабочее место" + Символы.ПС + "Подготовка данных ПФР (рекомендуется) либо сейчас сохранить только файлы перс.учета.";
		ТекстКнопкиДействия = "Записать файлы перс.учета";
		ЗаголовокОкна = "Формирование файлов";
		ЗаписыватьФайлы = Не ПроцедурыПерсонифицированногоУчета.ПереходВРабочееМестоПФРвОтветНаВопрос(ЭтотОбъект, ЭтаФорма, ТекстВопросаСохранения, ТекстВопросаДействия, ТекстКнопкиДействия, ЗаголовокОкна, Организация, ОтчетныйПериод, Год(ОтчетныйПериод), Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ)
	КонецЕсли;
	
    Если Не ЗаписыватьФайлы Тогда
		Возврат
	КонецЕсли;
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	Длг = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	Длг.Каталог = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнойКаталогФайлов");
	Длг.Заголовок = "Укажите каталог";
	
	Каталог = "";
	Если Длг.Выбрать() Тогда
		Каталог = Длг.Каталог+"\";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Каталог) Тогда
		Возврат
	КонецЕсли;
	
	Если ФорматФайла = Перечисления.ФорматФайлаПФР.Версия04 Тогда
		КодировкаФайла = КодировкаТекста.OEM;
	ИначеЕсли ФорматФайла = Перечисления.ФорматФайлаПФР.Версия07 Тогда
		КодировкаФайла = "windows-1251";
	КонецЕсли;

	ПроцедурыПерсонифицированногоУчета.ЗаписатьФайлДокументаНаДискету(ЭтотОбъект, Неопределено, Каталог + ПроцедурыПерсонифицированногоУчета.ПолучитьИмяФайлаПФ(Ссылка, Год(ОтчетныйПериод)), КодировкаФайла, Ложь);
	Для каждого СтрокаТЧ Из ПачкиДокументов Цикл
		Объект = СоответствиеСсылокИОбъектовПачек.Получить(СтрокаТЧ.ДокументПачка);
		ПроцедурыПерсонифицированногоУчета.ЗаписатьФайлДокументаНаДискету(Объект, Неопределено, Каталог + ПроцедурыПерсонифицированногоУчета.ПолучитьИмяФайлаПФ(СтрокаТЧ.ДокументПачка, Год(Объект.ОтчетныйПериод)), КодировкаФайла, Ложь);
	КонецЦикла;
	
	РаботаСДиалогами.ВывестиПредупреждение("Файлы пачек записаны в каталог: " + Каталог);
	
КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		
		УстановитьКнопкиПечати();
		
	КонецЕсли; 
	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа.
//
Процедура ДатаПриИзменении(Элемент)

	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	Если Год(мТекущаяДатаДокумента) <> Год(Дата) Тогда
		НомерПачки = "";
	КонецЕсли;
	
	мТекущаяДатаДокумента = Дата;

КонецПроцедуры // ДатаПриИзменении

// Процедура - обработчик события "ПриИзменении" поля ввода организации.
//
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ПроцедурыПерсонифицированногоУчета.ДанныеРуководителяОрганизации(Организация, Дата));
	НомерПачки = "";
	РасчетСтраховыхВзносов = "";
	
	// Получим и запомним ссылку на головную организацию
	мГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
	
	РегламентированнаяОтчетность.ПриИзмененииОрганизацииВРегламентированномОтчетеПФР(ЭтаФорма, Новый Действие("КоманднаяПанельФормыДействиеОтправка"));
	
	ОбновитьНадписьСостоянияПачекДокументов();
	
КонецПроцедуры // ОрганизацияПриИзменении()

// Процедура - обработчик события "Регулирование" поля ввода периода регистрации.
//
Процедура ОтчетныйПериодРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	Если ОтчетныйПериод < '20100101' Тогда
		ОтчетныйПериод = ДобавитьМесяц(ОтчетныйПериод, Направление * 12);
	ИначеЕсли ОтчетныйПериод = '20100101' Тогда
		Если Направление = 1 Тогда
			ОтчетныйПериод = '20100701'
		Иначе 	
			ОтчетныйПериод = '20090101'
		КонецЕсли;
	ИначеЕсли ОтчетныйПериод = '20100701' Тогда
		ОтчетныйПериод = ДобавитьМесяц(ОтчетныйПериод, Направление * 6);
	ИначеЕсли ОтчетныйПериод = '20110101' И Направление = -1 Тогда
		ОтчетныйПериод = '20100701'
	Иначе
		ОтчетныйПериод = ДобавитьМесяц(ОтчетныйПериод, Направление * 3);
	КонецЕсли;
	Элемент.Значение = ПредставлениеПериода(НачалоГода(ОтчетныйПериод), ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ОтчетныйПериод), "ФП = Истина" );
	
	Если ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ОтчетныйПериод) <> КонецГода(ОтчетныйПериод) И НеСодержитСЗВ Тогда
		НеСодержитСЗВ = Ложь;
	ИначеЕсли ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ОтчетныйПериод) = КонецГода(ОтчетныйПериод)	И СведенияОЗадолженности.Количество() > 0 Тогда 
		НеСодержитСЗВ = Истина;
	КонецЕсли;
	
	Если мТекущийОтчетныйПериод <> ОтчетныйПериод Тогда
		РасчетСтраховыхВзносов = ""
	КонецЕсли;
	
	мТекущийОтчетныйПериод = ОтчетныйПериод;
	
	ОбновитьНадписьСостоянияПачекДокументов();
	ПоказатьЭлементыФормы();
	
КонецПроцедуры // ПериодРегистрацииРегулирование()

Процедура ПринятоВПФРПриИзменении(Элемент)
	
	ПринятоВПФР = ФлажокПринятоВПФР;
	
	Если Не ПринятоВПФР Тогда
		ТолькоПросмотр = Ложь;
		РаботаСДиалогамиЗК.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
	КонецЕсли;
	
	ПоказатьЭлементыФормы();
	
КонецПроцедуры

Процедура СодержитСЗВПриИзменении(Элемент)
	ПоказатьЭлементыФормы();
	УстановитьКнопкиПечати();
КонецПроцедуры

Процедура РасчетСтраховыхВзносовНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СоответствиеОтчетов = ПроцедурыПерсонифицированногоУчетаПолныеПрава.ОтчетыРСВ1ЗаОтчетныйПериод(Организация, ОтчетныйПериод);
	СписокВыбора = Новый СписокЗначений;
	Для каждого ЭлементКоллекции Из СоответствиеОтчетов Цикл
		СписокВыбора.Добавить(ЭлементКоллекции.Ключ, ЭлементКоллекции.Значение);
	КонецЦикла;
	СписокВыбора.СортироватьПоПредставлению();
	ЭлементСписка = ВыбратьИзСписка(СписокВыбора,Элемент,СписокВыбора.НайтиПоЗначению(Элемент.Значение));
	Если ЭлементСписка <> Неопределено Тогда
		Элемент.Значение = ЭлементСписка.Значение;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОЙ ЧАСТИ ПачкиДокумнетов

// подбираем уже подготовленные документы СЗВ-4
Процедура КоманднаяПанельПачкиЗаполнить(Кнопка)
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	Если ПачкиДокументов.Количество() > 0 Тогда
		Вопрос = "Имеющийся список пачек документов будет очищен. Продолжить?";
		Ответ = Вопрос(Вопрос, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	АвтозаполнениеПроведеннымиПачками();
	
	ОбновитьСоответствиеПачек();
	
	Если ПачкиДокументов.Количество() > 0 Тогда
		ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока = ПачкиДокументов[0];
		ДокументОбъектДляПоказаФизлиц = СоответствиеСсылокИОбъектовПачек.Получить(ЭлементыФормы.ПачкиДокументов.ТекущиеДанные.ДокументПачка);
	Иначе
		ДокументОбъектДляПоказаФизлиц = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

// формируем сведения и документы
Процедура КоманднаяПанельПачкиСформировать(Кнопка)
	
	Если ОтчетныйПериод >= ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами() Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		РаботаСДиалогами.ВывестиПредупреждение(ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Не указана организация!"));
		Возврат;
	КонецЕсли;
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	СтажДоступенДляРедактирования = НастройкаПравДоступаПереопределяемый.ДоступнаРольКадровикаРегл();
	
	Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указано ответственное лицо!", Ложь);
	КонецЕсли;
	
	Если СтажДоступенДляРедактирования Тогда
		Вопрос = "Имеющиеся данные о стаже и заработке сотрудников " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("организации") + " будут потеряны. Продолжить?";
	Иначе 	
		Вопрос = "Имеющиеся данные о заработке сотрудников " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("организации") + " будут потеряны. Продолжить?";
	КонецЕсли;
	
	Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Записать();
	
	АвтозаполнениеСведений();
	
	Если Не СтажДоступенДляРедактирования И ПачкиДокументов.Количество() > 0  Тогда
		Возврат // расчетчик без прав кадровика не должен переформировывать пачки, если они уже есть 
	КонецЕсли;
	
	АвтозаполнениеПачек(Ложь);
	
	Если ПачкиДокументов.Количество() > 0 Тогда
		ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока = ПачкиДокументов[0];
		ЭлементыФормы.ПачкиДокументов1.ТекущаяСтрока = ПачкиДокументов[0];
	КонецЕсли;
	
	ОбновитьСоответствиеПачек();
	
	ТекущиеДанные = ЭлементыФормы.ПачкиДокументов.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		ДокументОбъектДляПоказаФизлиц = СоответствиеСсылокИОбъектовПачек.Получить(ТекущиеДанные.ДокументПачка);
	Иначе
		ДокументОбъектДляПоказаФизлиц = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

// проводим все документы-пачки, упомянутые в т.ч. документа
Процедура КоманднаяПанельПачкиПровестиПачки(Кнопка)
	
	ОсталисьНепроведенныеПачки = Ложь;
	Для каждого СтрокаТЧ Из ПачкиДокументов Цикл
		Если Не ЗначениеЗаполнено(СтрокаТЧ.ДокументПачка) Тогда
			Продолжить;	
		КонецЕсли;
		Объект = СоответствиеСсылокИОбъектовПачек.Получить(СтрокаТЧ.ДокументПачка);
		Если Не Объект.Проведен Или Объект.Модифицированность() Тогда
			Попытка
				Объект.Записать(РежимЗаписиДокумента.Проведение)
			Исключение
				ОсталисьНепроведенныеПачки = Истина
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	
	Если ОсталисьНепроведенныеПачки Тогда
		Предупреждение("Не удалось провести все документы!")
	КонецЕсли;
	ОбновитьСостояниеЭУПоФизЛицам();
КонецПроцедуры

// проводим документ-пачку
Процедура КоманднаяПанельПачкиПровести(Кнопка)

	ЭтоСтарыеФормы = ОтчетныйПериод < ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами() Или СпециальныйДокумент2010года;
	Если ЭтоСтарыеФормы Тогда
		ТекущаяСтрока = ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока;
	Иначе
		ТекущаяСтрока = ЭлементыФормы.ПачкиДокументов1.ТекущаяСтрока;
	КонецЕсли;
	
	Если ТекущаяСтрока <> Неопределено тогда
		Если ЗначениеЗаполнено(ТекущаяСтрока.ДокументПачка) Тогда
			Попытка
				СоответствиеСсылокИОбъектовПачек.Получить(ТекущаяСтрока.ДокументПачка).Записать(РежимЗаписиДокумента.Проведение);
			Исключение
				Предупреждение("Провести документ не удалось!")
			КонецПопытки;
			
		Иначе
			Предупреждение("Не указан документ!")
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// отменяем проведение документа-пачки
Процедура КоманднаяПанельПачкиОтменитьПроведение(Кнопка)

	ЭтоСтарыеФормы = ОтчетныйПериод < ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами() Или СпециальныйДокумент2010года;
	Если ЭтоСтарыеФормы Тогда
		ТекущаяСтрока = ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока;
	Иначе
		ТекущаяСтрока = ЭлементыФормы.ПачкиДокументов1.ТекущаяСтрока;
	КонецЕсли;

	Если ТекущаяСтрока <> Неопределено тогда
		Если ЗначениеЗаполнено(ТекущаяСтрока.ДокументПачка) Тогда
			СоответствиеСсылокИОбъектовПачек.Получить(ТекущаяСтрока.ДокументПачка).Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Иначе
			Предупреждение("Не указан документ!")
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельПачки1ЗаполнитьВзносы(Кнопка)
	
	Если ПачкиДокументов.Количество() = 0 Тогда
		Возврат
	КонецЕсли;
	
	Вопрос = "Имеющиеся данные о суммах начисленных, уплаченных взносов по сотрудникам будут обновлены. Продолжить?";
	Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	МассивФизлиц = Новый Массив;
	
	Отказ = Ложь;
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	Заголовок = "Расчет начисленных/уплаченных взносов по документу " + СокрЛП(ЭтотОбъект);
	
	ПервыйОтчетныйПериод = ОтчетныйПериод;
	Для каждого Элемент Из СоответствиеСсылокИОбъектовПачек Цикл
		Док = Элемент.Значение;
		Если Док.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
			Продолжить;
		КонецЕсли;
		Если Док.Организация <> Организация Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке("Пачка (реестр) №" + Док.НомерПачки + " " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("оформлена на другую организацию!"), Отказ, Заголовок);
		КонецЕсли;
		Если Док.ОтчетныйПериод <> ОтчетныйПериод Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке("Пачка (реестр) №" + Док.НомерПачки + " оформлена для другого отчетного периода!", Отказ, Заголовок);
		ИначеЕсли Док.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ И Док.КорректируемыйПериод >= ОтчетныйПериод Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке("В корректирующей пачке (реестре) №" + Док.НомерПачки + " указан неверный корректируемый период!", Отказ, Заголовок);
		КонецЕсли;
		Для каждого СтрокаДокумента Из Док.РаботникиОрганизации Цикл
			МассивФизлиц.Добавить(СтрокаДокумента.Физлицо);
		КонецЦикла;
		Если Док.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ Тогда
			ПервыйОтчетныйПериод = Мин(ПервыйОтчетныйПериод,Док.КорректируемыйПериод)
		КонецЕсли;
	КонецЦикла;
	
	Если Отказ Тогда
		ОбработкаКомментариев.ПоказатьСообщения();
		Возврат
	КонецЕсли;
	
	СтруктураПоиска = Новый Структура("Физлицо,КатегорияЗастрахованныхЛиц");
	ТекущийОтчетныйПериод = ПервыйОтчетныйПериод;
	Пока ТекущийОтчетныйПериод <= ОтчетныйПериод Цикл
	
		ВзносыФизлиц = ПроцедурыПерсонифицированногоУчетаПолныеПрава.ДанныеОВзносахПоКатегориям(Дата, ТекущийОтчетныйПериод, ТекущийОтчетныйПериод, Организация, МассивФизлиц);
		ВзносыФизлиц.Индексы.Добавить("Физлицо,КатегорияЗастрахованныхЛиц");
		
		Для каждого Элемент Из СоответствиеСсылокИОбъектовПачек Цикл
			Док = Элемент.Значение;
			Если Док.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
				Продолжить;
			КонецЕсли;
			Если ТекущийОтчетныйПериод <> ?(Док.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ,ОтчетныйПериод,Док.КорректируемыйПериод) Тогда
				Продолжить;
			КонецЕсли;
			
			СтруктураПоиска.КатегорияЗастрахованныхЛиц = Док.КатегорияЗастрахованныхЛиц;
			
			Для каждого СтрокаДокумента Из Док.РаботникиОрганизации Цикл
				СтруктураПоиска.Физлицо = СтрокаДокумента.Физлицо;
				СтрокиФизлица = ВзносыФизлиц.НайтиСтроки(СтруктураПоиска);
				Если СтрокиФизлица.Количество() > 0 Тогда
					ЗаполнитьЗначенияСвойств(СтрокаДокумента, СтрокиФизлица[0]);
				Иначе
					СтрокаДокумента.НачисленоСтраховая = 0;
					СтрокаДокумента.УплаченоСтраховая = 0;
					СтрокаДокумента.НачисленоНакопительная = 0;
					СтрокаДокумента.УплаченоНакопительная = 0;
				КонецЕсли;
			КонецЦикла;
			
			Если Док.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ Тогда
				
				ДоначисленныеВзносы = ПроцедурыПерсонифицированногоУчета.ДоначисленныеВзносыДляКорректирующегоДокумента(Организация, Док.Дата, Док.КорректируемыйПериод, Док.КатегорияЗастрахованныхЛиц, Док.РаботникиОрганизации.Выгрузить(,"НомерСтроки,ФизЛицо,НачисленоНакопительная,НачисленоСтраховая,УплаченоНакопительная,УплаченоСтраховая"));

				Выборка = ДоначисленныеВзносы.Выбрать();
				Пока Выборка.Следующий() Цикл
					СтрокаТЧ = Док.РаботникиОрганизации.Найти(Выборка.НомерСтроки,"НомерСтроки");
					Если СтрокаТЧ <> Неопределено Тогда
						ЗаполнитьЗначенияСвойств(СтрокаТЧ, Выборка, "ДоначисленоСтраховая, ДоначисленоНакопительная, ДоУплаченоСтраховая, ДоУплаченоНакопительная");
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
		КонецЦикла;
		
		ТекущийОтчетныйПериод = ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ТекущийОтчетныйПериод) + 1;
		
	КонецЦикла;
	
КонецПроцедуры


// Процедура - обработчик события "ПриВыводеСтроки" строки таблицы пачек документов
Процедура ПачкиДокументовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ЯчейкиСтроки = ОформлениеСтроки.Ячейки;
	
	ТекущийДокументОбъект = СоответствиеСсылокИОбъектовПачек.Получить(ДанныеСтроки.ДокументПачка);
	Если ТекущийДокументОбъект <> Неопределено Тогда
		
		ДокументПроведен = ТекущийДокументОбъект.Проведен;
		ТекущаяПометкаУдаления = ТекущийДокументОбъект.ПометкаУдаления;
		ЯчейкиСтроки.НомерПачки.УстановитьТекст(ТекущийДокументОбъект.НомерПачки);
	Иначе
		ДокументПроведен = Ложь;
		ТекущаяПометкаУдаления = Ложь;
	КонецЕсли;
	
	ЯчейкиСтроки.ТерриториальныеУсловия.ТолькоПросмотр = ДанныеСтроки.ТипФормДокументов = "СЗВ-4-1" Или ДокументПроведен;
	ЯчейкиСтроки.ТипФормДокументов.ТолькоПросмотр = ДокументПроведен;
	ЯчейкиСтроки.ВидКорректировки.ТолькоПросмотр = ДокументПроведен;
	ЯчейкиСтроки.КомментарийПачки.ТолькоПросмотр = ДокументПроведен;
	
	ЯчейкиСтроки.Картинка.ОтображатьКартинку = Истина;
	ЯчейкиСтроки.Картинка.ИндексКартинки = 2*(Число(НЕ ДокументПроведен))-Число(ТекущаяПометкаУдаления);
	
КонецПроцедуры

// Процедура - обработчик события "ПриАктивизации" строки таблицы пачек документов
Процедура ПачкиДокументовПриАктивизацииСтроки(Элемент)
	
	НетСтроки = Элемент.ТекущиеДанные = Неопределено;
	ЭлементыФормы.ФизлицаПачек.ТолькоПросмотр = НетСтроки;
	ЭлементыФормы.ФизлицаПачек1.ТолькоПросмотр = НетСтроки;
	Если НетСтроки Тогда
		ДокументОбъектДляПоказаФизлиц = Неопределено;
	Иначе
		ДокументОбъектДляПоказаФизлиц = СоответствиеСсылокИОбъектовПачек.Получить(Элемент.ТекущиеДанные.ДокументПачка);
		ОбновитьСостояниеЭУПоФизЛицам();
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ПередУдалением" строки таблицы пачек документов
Процедура ПачкиДокументовПередУдалением(Элемент, Отказ)
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		СоответствиеСсылокИОбъектовПачек.Удалить(Элемент.ТекущиеДанные.ДокументПачка)
	КонецЕсли;
КонецПроцедуры

Процедура ПачкиДокументовПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если Элемент.ТекущаяКолонка.Имя = "ДокументПачка" Тогда
		Элемент.Колонки.ДокументПачка.ЭлементУправления.КнопкаОткрытия = Не ДокументОбъектДляПоказаФизЛиц.Ссылка.Пустая()
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОЙ ЧАСТИ ПачкиДокументов

// Процедура - обработчик события "ПриИзменении" поля ввода документа
Процедура ПачкиДокументовДокументПачкаПриИзменении(Элемент)
	
	ЭтоСтарыеФормы = ОтчетныйПериод < ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами() Или СпециальныйДокумент2010года;
	Если ЭтоСтарыеФормы Тогда
		ТекущаяСтрока = ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока;
	Иначе
		ТекущаяСтрока = ЭлементыФормы.ПачкиДокументов1.ТекущаяСтрока;
	КонецЕсли;

	Док = Элемент.Значение;
	
	Если ЗначениеЗаполнено(Док) Тогда
		
		Объект = СоответствиеСсылокИОбъектовПачек.Получить(Док);
		
		Если Объект = Неопределено Тогда
			ДокументОбъектДляПоказаФизлиц = Док.ПолучитьОбъект();
			СоответствиеСсылокИОбъектовПачек.Вставить(Док,ДокументОбъектДляПоказаФизлиц);
		Иначе
			ДокументОбъектДляПоказаФизлиц = Объект
		КонецЕсли;
		
		Если ДокументОбъектДляПоказаФизлиц.Организация <> Организация Тогда
	  		ОбщегоНазначения.СообщитьОбОшибке("Документ "+ Строка(ДокументОбъектДляПоказаФизлиц) + " оформлен на другую организацию!");
		КонецЕсли; 
		Если ДокументОбъектДляПоказаФизлиц.ОтчетныйПериод <> ОтчетныйПериод Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Отчетный период документа "+ Строка(ДокументОбъектДляПоказаФизлиц) + " не соответствует указанному!");
		КонецЕсли; 
		Если ЭтоСтарыеФормы Тогда
			Если ДокументОбъектДляПоказаФизлиц.ТипСведенийСЗВ <> ?(ТипСведений = "ИСХД", Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ) Тогда
		  		ОбщегоНазначения.СообщитьОбОшибке("Тип сведений документа "+ Строка(ДокументОбъектДляПоказаФизлиц) + " не соответствует указанному!");
			КонецЕсли; 
			ТекущаяСтрока.ТипФормДокументов = ДокументОбъектДляПоказаФизлиц.ТипФормДокументов;
			ТекущаяСтрока.ТерриториальныеУсловия = ДокументОбъектДляПоказаФизлиц.ТерриториальныеУсловия;
			ТекущаяСтрока.ВидКорректировки = ДокументОбъектДляПоказаФизлиц.ВидКорректировки;
			ТекущаяСтрока.КомментарийПачки = ДокументОбъектДляПоказаФизлиц.Комментарий;
		КонецЕсли;
		
		ОбновитьСостояниеЭУПоФизЛицам();
	Иначе
		
		ДокументОбъектДляПоказаФизлиц = Неопределено
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "Очистка" поля ввода документа
Процедура ПачкиДокументовДокументПачкаОчистка(Элемент, СтандартнаяОбработка)
	
	ТекущаяСтрока = ЭлементыФормы.ПачкиДокументов.ТекущиеДанные;
	ТекущаяСтрока.ТипФормДокументов = "";
	ТекущаяСтрока.ТерриториальныеУсловия = "";
	ТекущаяСтрока.ВидКорректировки = "";
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода документа
Процедура ПачкиДокументовДокументПачкаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ФормаВыбора = Документы.СведенияОТрудовомСтажеИЗаработкеСЗВ4.ПолучитьФормуВыбора(, Элемент);
	ФормаВыбора.НачальноеЗначениеВыбора = Элемент.Значение;
	ФормаВыбора.Отбор.Организация.Значение		= Организация;
	ФормаВыбора.Отбор.Организация.ВидСравнения	= ВидСравнения.Равно;
	ФормаВыбора.Отбор.Организация.Использование	= Истина;
	ФормаВыбора.Отбор.ОтчетныйПериод.Значение		= ОтчетныйПериод;
	ФормаВыбора.Отбор.ОтчетныйПериод.ВидСравнения	= ВидСравнения.Равно;
	ФормаВыбора.Отбор.ОтчетныйПериод.Использование	= Истина;
	ФормаВыбора.Открыть();
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

// Процедура - обработчик события "Открытие" поля ввода документа
Процедура ПачкиДокументовДокументПачкаОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ДокументОбъектДляПоказаФизЛиц.Ссылка.Пустая() Тогда
		Возврат
	КонецЕсли;
	ДокументОбъектДляПоказаФизЛиц.ПолучитьФорму().Открыть();
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода ТипФормДокументов
Процедура ПачкиДокументовТипФормДокументовНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить("СЗВ-4-1");
	СписокВыбора.Добавить("СЗВ-4-2");
	ЭлементСписка = ВыбратьИзСписка(СписокВыбора,Элемент,СписокВыбора.НайтиПоЗначению(Элемент.Значение));
	Если ЭлементСписка <> Неопределено Тогда
		Элемент.Значение = ЭлементСписка.Значение;
		ДокументОбъектДляПоказаФизЛиц.ТипФормДокументов = Элемент.Значение;
	КонецЕсли;
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода ТерриториальныеУсловия
Процедура ПачкиДокументовТерриториальныеУсловияПриИзменении(Элемент)
	ДокументОбъектДляПоказаФизЛиц.ТерриториальныеУсловия = Элемент.Значение;
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода ВидКорректировки
Процедура ПачкиДокументовВидКорректировкиНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить("");
	СписокВыбора.Добавить("КОРР");
	СписокВыбора.Добавить("ОТМН");
	ЭлементСписка = ВыбратьИзСписка(СписокВыбора,Элемент,СписокВыбора.НайтиПоЗначению(Элемент.Значение));
	Если ЭлементСписка <> Неопределено Тогда
		Элемент.Значение = ЭлементСписка.Значение;
		ДокументОбъектДляПоказаФизЛиц.ВидКорректировки = Элемент.Значение;
	КонецЕсли;
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода комментария
Процедура ПачкиДокументовКомментарийПачкиПриИзменении(Элемент)
	ДокументОбъектДляПоказаФизЛиц.Комментарий = Элемент.Значение;
КонецПроцедуры

Процедура ПачкиДокументов1ПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		
		ЯчейкиСтроки = ОформлениеСтроки.Ячейки;
		ДанныеСтроки = ОформлениеСтроки.ДанныеСтроки;
		
		ТекущийДокументОбъект = СоответствиеСсылокИОбъектовПачек.Получить(ДанныеСтроки.ДокументПачка);
		Если ТекущийДокументОбъект <> Неопределено Тогда
			
			ДокументПроведен = ТекущийДокументОбъект.Проведен;
			ТекущаяПометкаУдаления = ТекущийДокументОбъект.ПометкаУдаления;
			
			ЯчейкиСтроки.НомерПачки.УстановитьТекст(ТекущийДокументОбъект.НомерПачки);
			ЯчейкиСтроки.ТипФормДокументов.УстановитьТекст(ТекущийДокументОбъект.ТипФормДокументов);
			ЯчейкиСтроки.КатегорияЗастрахованныхЛиц.УстановитьТекст(ТекущийДокументОбъект.КатегорияЗастрахованныхЛиц);
			ЯчейкиСтроки.ТипСведенийСЗВ.УстановитьТекст(ТекущийДокументОбъект.ТипСведенийСЗВ);
			
		Иначе
			ДокументПроведен = Ложь;
			ТекущаяПометкаУдаления = Ложь;
			
			ЯчейкиСтроки.НомерПачки.УстановитьТекст("");
			ЯчейкиСтроки.ТипФормДокументов.УстановитьТекст("");
			ЯчейкиСтроки.КатегорияЗастрахованныхЛиц.УстановитьТекст("");
			ЯчейкиСтроки.ТипСведенийСЗВ.УстановитьТекст("");
			
		КонецЕсли;
		
		ЯчейкиСтроки.Картинка.ОтображатьКартинку = Истина;
		ЯчейкиСтроки.Картинка.ИндексКартинки = 2*(Число(НЕ ДокументПроведен))-Число(ТекущаяПометкаУдаления);
		
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОЙ ЧАСТИ ФизЛицаПачек

// открывает форму ввода данных СЗВ-4 для редактирования
Процедура КоманднаяПанельФизлицаПачекРедактироватьСЗВ_4(Кнопка)
	
	ЭтоСтарыеФормы = ОтчетныйПериод < ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами() Или СпециальныйДокумент2010года;
	Если ЭтоСтарыеФормы Тогда
		СтрокаФизлица = ЭлементыФормы.ФизлицаПачек.ТекущаяСтрока;
	Иначе
		СтрокаФизлица = ЭлементыФормы.ФизлицаПачек1.ТекущаяСтрока;
	КонецЕсли;
	
	Если СтрокаФизлица = Неопределено Тогда
		Предупреждение("Сотрудник не указан!");
		Возврат;
	КонецЕсли;
	
    Если ЗначениеЗаполнено(СтрокаФизлица.ФизЛицо) Тогда
		ФормаВводаДанныхСЗВ4 = ПолучитьОбщуюФорму("ФормаВводаДанныхСЗВ4", ЭтаФорма, "ФизЛицо"+ СтрокаФизлица.ФизЛицо);
		ФормаВводаДанныхСЗВ4.ФизЛицо = СтрокаФизлица.ФизЛицо;
		ФормаВводаДанныхСЗВ4.Организация = Организация;
		ФормаВводаДанныхСЗВ4.ТолькоЧтение = ДокументОбъектДляПоказаФизЛиц.Проведен;
		ФормаВводаДанныхСЗВ4.ОтчетныйПериод = ?(ДокументОбъектДляПоказаФизЛиц.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ, ДокументОбъектДляПоказаФизЛиц.КорректируемыйПериод, ОтчетныйПериод);
		ФормаВводаДанныхСЗВ4.КатегорияЗастрахованныхЛиц = ДокументОбъектДляПоказаФизЛиц.КатегорияЗастрахованныхЛиц;
		Если ЭтоСтарыеФормы И ДокументОбъектДляПоказаФизЛиц.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
			ФормаВводаДанныхСЗВ4.ИспользоватьМежрасчетныйПериод = Истина;
			ФормаВводаДанныхСЗВ4.ДатаОкончанияМежрасчетногоПериода = ДатаДействия;
		КонецЕсли;
		ФормаВводаДанныхСЗВ4.Открыть();
	Иначе 
		Предупреждение("Сотрудник не указан!")
	КонецЕсли;

КонецПроцедуры

// предлагаем перенести сотра в другую пачку
Процедура КоманднаяПанельФизлицаПачекПеренести(Кнопка)
	
	ЭтоСтарыеФормы = ОтчетныйПериод < ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами() Или СпециальныйДокумент2010года;
	Если ЭтоСтарыеФормы Тогда
		ТекущаяСтрока = ЭлементыФормы.ФизлицаПачек.ТекущаяСтрока;
	Иначе
		ТекущаяСтрока = ЭлементыФормы.ФизлицаПачек1.ТекущаяСтрока;
	КонецЕсли;

	Если ТекущаяСтрока <> Неопределено Тогда
		Если ЭтоСтарыеФормы Тогда
			ТекущийДок = ЭлементыФормы.ПачкиДокументов.ТекущиеДанные.ДокументПачка;
		Иначе
			ТекущийДок = ЭлементыФормы.ПачкиДокументов1.ТекущиеДанные.ДокументПачка;
		КонецЕсли;
		СпПачек = Новый СписокЗначений;
		Для каждого СтрокаТЧ Из ПачкиДокументов Цикл
			Если СтрокаТЧ.ДокументПачка <> ТекущийДок и Не СтрокаТЧ.ДокументПачка.Пустая() Тогда
				ДокОбъект = СоответствиеСсылокИОбъектовПачек.Получить(СтрокаТЧ.ДокументПачка);
				СпПачек.Добавить(СтрокаТЧ.ДокументПачка, ДокОбъект.ТипФормДокументов + " №" + ДокОбъект.НомерПачки);
			КонецЕсли;
		КонецЦикла;
		Если СпПачек.Количество() = 0 Тогда
			Предупреждение("В списке пачек присутствует единственная пачка. Перенос сотрудника невозможен!")
		ИначеЕсли СпПачек.Количество() = 1 Тогда
			НоваяПачка = СпПачек[0].Значение
		ИначеЕсли СпПачек.Количество() > 1 Тогда
			Если ЭтоСтарыеФормы Тогда
				ЭлементНоваяПачка = ВыбратьИзМеню(СпПачек,ЭлементыФормы.КоманднаяПанельФизлицаПачек);
			Иначе
				ЭлементНоваяПачка = ВыбратьИзМеню(СпПачек,ЭлементыФормы.КоманднаяПанельФизлицаПачек1);
			КонецЕсли;
			Если ЭлементНоваяПачка = Неопределено Тогда
				Возврат
			КонецЕсли;
			НоваяПачка = ЭлементНоваяПачка.Значение;
		КонецЕсли;
		Если НоваяПачка <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(СоответствиеСсылокИОбъектовПачек.Получить(НоваяПачка).РаботникиОрганизации.Добавить(),ТекущаяСтрока);
			СоответствиеСсылокИОбъектовПачек.Получить(ТекущийДок).РаботникиОрганизации.Удалить(ТекущаяСтрока);
			Обновить();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОЙ ЧАСТИ ФизЛицаПачек

// Процедура - обработчик события "НачалоВыбора" поля ввода физлица
// переопеределим выбор физлица на выбор из списка регистра сведений
//
Процедура ФизлицаПачекФизЛицоНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(Элемент, Ссылка, Истина, Дата, мГоловнаяОрганизация, 1, СтандартнаяОбработка, Элемент.Значение,, Истина);
	
КонецПроцедуры

Процедура ФизлицаПачекФизЛицоОткрытие(Элемент, СтандартнаяОбработка)
	
	ПроцедурыУправленияПерсоналом.ОбработкаОткрытияФизлица(Элемент, Ссылка, Элемент.Значение, мГоловнаяОрганизация, СтандартнаяОбработка);
	
КонецПроцедуры

// Процедура - обработчик события "АвтоПодборТекста" поля ввода физлица
// переопеределим выбор физлица на выбор из списка регистра сведений
//
Процедура ФизлицаПачекФизЛицоАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	ТекстАвтоПодбора = ПроцедурыУправленияПерсоналомПереопределяемый.ПодобратьФИОСотрудника(СтандартнаяОбработка, 1, Текст, Организация, Истина);
	
КонецПроцедуры

// Процедура - обработчик события "ОкончаниеВводаТекста" поля ввода физлица
// переопеределим выбор физлица на выбор из списка регистра сведений
//
Процедура ФизлицаПачекФизЛицоОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	Значение = ПроцедурыУправленияПерсоналомПереопределяемый.ПодобратьСписокСотрудников(СтандартнаяОбработка, 1, Текст, Организация, Истина);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОЙ ЧАСТИ СведенияОЗадолженности

Процедура КоманднаяПанельРасчетыЗадолженностьПередПФР(Кнопка)
	
	Если СведенияОЗадолженности.Количество() > 0 Тогда
		Вопрос = "Таблица расчетов с ПФР будет очищена. Продолжить?";
		Ответ = Вопрос(Вопрос, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	АвтозаполнениеСтрокЗадолженности();
	
КонецПроцедуры

Процедура КоманднаяПанельРасчеты2010ЗадолженностьПередПФР(Кнопка)
	
	Если Не ЗначениеЗаполнено(ОтчетныйПериод) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указан отчетный период!",,"Расчет задолженности перед ПФР");
		Возврат
	КонецЕсли;
	
	Если СведенияОЗадолженности.Количество() > 0 Тогда
		Вопрос = "Таблица расчетов с ПФР будет очищена. Продолжить?";
		Ответ = Вопрос(Вопрос, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	АвтозаполнениеСтрокЗадолженности();
	
	Если СведенияОЗадолженности.Количество() = 0 Тогда
		РаботаСДиалогами.ВывестиПредупреждение("Данных о задолженности за прошлые годы не обнаружено!")	
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
			
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МЕХАНИЗМА ЗАЩИЩЕННОГО ДОКУМЕНТООБОРОТА С ПФР

Процедура КоманднаяПанельФормыДействиеОтправка(Кнопка)
	
	РегламентированнаяОтчетность.ПриНажатииНаКнопкуОтправкиВРегламентированномОтчетеПФР(ЭтаФорма, Кнопка);
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если КонтекстЭДО <> Неопределено Тогда
		КонтекстЭДО.ОбработкаОповещенияФормыРегламентированногоОтчетаПФР(ЭтаФорма, ИмяСобытия, Параметр, Источник);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мТаблицаСведенийПринятыхПФР = Новый ТаблицаЗначений;
мТаблицаСведенийПринятыхПФР.Колонки.Добавить("Пачка");
мТаблицаСведенийПринятыхПФР.Колонки.Добавить("ОтчетныйПериод");