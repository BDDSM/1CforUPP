// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;



// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка,Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.ВыплатаЗаработнойПлаты,ЭлементыФормы.КоманднаяПанель1);
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧПоДеревуКнопок(мКнопкиЗаполненияТЧ,СоответствиеТЧ);
	
КонецПроцедуры


// Процедура выполняет действия, необходимые при выборе счета организации
//
// Параметры:
//  Нет.
//
Процедура ПриИзмененииСчетаОрганизации()
	
	Если СчетОрганизации.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Если Организация.Пустая() Тогда
		Организация=СчетОрганизации.Владелец;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СчетОрганизации)
	   И ЗначениеЗаполнено(Касса)
	   И СчетОрганизации.ВалютаДенежныхСредств <> Касса.ВалютаДенежныхСредств Тогда
		Сообщить("Не совпадают валюты расчетного счета и кассы! Поле кассы - очищено.");
		Касса="";
	КонецЕсли;
	
	ВалютаДокумента=СчетОрганизации.ВалютаДенежныхСредств;
	ЭлементыФормы.НадписьВалюта.Заголовок=СчетОрганизации.ВалютаДенежныхСредств.Наименование;
	
	СтруктураКурсаДокумента = МодульВалютногоУчета.ПолучитьКурсВалюты(ВалютаДокумента, ?(ДатаОплаты='00010101',Дата,КонецДня(ДатаОплаты)));	
		
КонецПроцедуры // ПриИзмененииСчетаОрганизации()

Процедура СчетОрганизацииПриИзменении(Элемент)
	
	ПриИзмененииСчетаОрганизации();
	
КонецПроцедуры

Процедура КассаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(СчетОрганизации)
	   И ЗначениеЗаполнено(Касса)
	   И СчетОрганизации.ВалютаДенежныхСредств <> Касса.ВалютаДенежныхСредств Тогда
		Сообщить("Не совпадают валюты расчетного счета и кассы! Поле расчетного счета - очищено.");
		СчетОрганизации="";
	КонецЕсли;
	
	ЭлементыФормы.НадписьВалюта.Заголовок=Касса.ВалютаДенежныхСредств.Наименование;
	ВалютаДокумента=Касса.ВалютаДенежныхСредств;
	
КонецПроцедуры

Процедура ВыплатаЗаработнойПлатыВедомостьПриИзменении(Элемент)
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	СУММА(ЗарплатаКВыплатеЗарплата.Сумма + ЗарплатаКВыплатеЗарплата.КомпенсацияЗаЗадержкуЗарплаты) КАК Сумма
	             |ИЗ
	             |	Документ.ЗарплатаКВыплатеОрганизаций.Зарплата КАК ЗарплатаКВыплатеЗарплата
	             |
	             |ГДЕ
	             |	ЗарплатаКВыплатеЗарплата.Ссылка = &Ссылка И
	             |	(НЕ(ЗарплатаКВыплатеЗарплата.ВыплаченностьЗарплаты = &ВыплаченностьЗарплаты))";
				 
	Запрос.УстановитьПараметр("Ссылка",Элемент.Значение);
	Запрос.УстановитьПараметр("ВыплаченностьЗарплаты",Перечисления.ВыплаченностьЗарплаты.Задепонировано);

	РезультатЗапроса=Запрос.Выполнить().Выбрать();
	Если РезультатЗапроса.Следующий() Тогда
		ЭлементыФормы.ВыплатаЗаработнойПлаты.ТекущиеДанные.СуммаКВыплате=РезультатЗапроса.Сумма;
	КонецЕсли;
				
КонецПроцедуры

Процедура ВыплатаЗаработнойПлатыВедомостьНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = Документы.ЗарплатаКВыплатеОрганизаций.ПолучитьФормуВыбора(,Элемент,);
	
	// Отфильтруем список документов по договору.
	ФормаВыбора.Отбор.Организация.Значение = Организация;
	ФормаВыбора.Отбор.Организация.Использование = Истина;
	
	// Отфильтруем список документов по договору.
	ФормаВыбора.Отбор.СпособВыплаты.Значение = Перечисления.СпособыВыплатыЗарплаты.ЧерезКассу;
	ФормаВыбора.Отбор.СпособВыплаты.Использование = Истина;
	
	ФормаВыбора.ЭлементыФормы.ДокументСписок.НастройкаОтбора.СпособВыплаты.Доступность=Ложь;
	ФормаВыбора.ЭлементыФормы.ДокументСписок.НастройкаОтбора.Организация.Доступность=Ложь;
	
	Если ЗначениеЗаполнено(ЭлементыФормы.ВыплатаЗаработнойПлаты.ТекущиеДанные.Ведомость)Тогда
		ФормаВыбора.ПараметрТекущаяСтрока=ЭлементыФормы.ВыплатаЗаработнойПлаты.ТекущиеДанные.Ведомость;
	КонецЕсли;
	
	ФормаВыбора.Открыть();
	
КонецПроцедуры

Процедура ВыплатаЗаработнойПлатыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	СуммаЗП=ВыплатаЗаработнойПлаты.Итог("СуммаКВыплате");
	
	Если СуммаЗП>СуммаДокумента Тогда
	
		СуммаДокумента=СуммаЗП;
	
	КонецЕсли; 
	
	ЭлементыФормы.НадписьИтогоЗП.Заголовок="Итого на выплату заработной платы: "+СуммаЗП+" "+Касса.ВалютаДенежныхСредств.Наименование;	
	
КонецПроцедуры

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
	
КонецПроцедуры // ПередОткрытием()

Процедура ПриОткрытии()
		
	Если НЕ ЭтоНовый() Тогда 
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		// Заполнить реквизиты значениями по умолчанию.
		
		ВалютаРегламентированногоУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета");
	
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);
		ПриИзмененииСчетаОрганизации();
				
	КонецЕсли;
	
	ЭлементыФормы.НадписьИтогоЗП.Заголовок="Итого на выплату заработной платы: "+ВыплатаЗаработнойПлаты.Итог("СуммаКВыплате")+" "+Касса.ВалютаДенежныхСредств.Наименование;
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	// Создать кнопки печати
	ФормированиеПечатныхФорм.СоздатьКнопкиПечати(ЭтотОбъект, ЭтаФорма);
	
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента("", ЭтотОбъект, ЭтаФорма);

	// Установить активный реквизит.
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если Ответственный.Пустая() Тогда
		Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

Процедура ДействияФормыРедактироватьНомер(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
КонецПроцедуры
// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

Процедура ОрганизацияПриИзменении(Элемент)
	
	СчетОрганизации=Организация.ОсновнойБанковскийСчет;
	
	Если Касса.Владелец <> Организация Тогда
		Касса = Справочники.Кассы.ПустаяСсылка();
	КонецЕсли;
	
	ПриИзмененииСчетаОрганизации();
	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;
	
КонецПроцедуры

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать".
// Открывает форму выбора печатных форм объекта.
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ОткрытьФормуВыбораПечатныхФормОбъекта(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ОсновныеДействияФормыПечать() 

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)

	УниверсальныеМеханизмы.НапечататьДокументПоУмолчанию(ЭтотОбъект);

КонецПроцедуры

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()

	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента("", ЭтотОбъект, ЭтаФорма);

КонецПроцедуры // ПослеЗаписи()