// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;


////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка,Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.НематериальныеАктивы,ЭлементыФормы.КоманднаяПанельОС.Кнопки.ПодменюЗаполнить);
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧПоДеревуКнопок(мКнопкиЗаполненияТЧ,СоответствиеТЧ);
	
КонецПроцедуры


Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(ПериодНачало, ?(ПериодКонец='0001-01-01', ПериодКонец, КонецДня(ПериодКонец)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.Редактировать();
	ПериодНачало = НастройкаПериода.ПолучитьДатуНачала();
	ПериодКонец = НастройкаПериода.ПолучитьДатуОкончания();
КонецПроцедуры

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
	
КонецПроцедуры // ПередОткрытием()

Процедура ПриОткрытии()

	
	Если НЕ ЭтоНовый() Тогда 
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	КонецЕсли;
	
	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ

		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, "Продажа");
	КонецЕсли;

	// Вывести в заголовке формы вид операции.
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	// Создать кнопки печати
	ФормированиеПечатныхФорм.СоздатьКнопкиПечати(ЭтотОбъект, ЭтаФорма);
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура ПослеЗаписи()

	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
	
КонецПроцедуры

Процедура НематериальныеАктивыСубконто1НачалоВыбора(Элемент, СтандартнаяОбработка)
	Для Ном = 1 по 3 Цикл
		Если (ЭлементыФормы.НематериальныеАктивы.ТекущиеДанные.СчетЗатрат.ВидыСубконто.Количество() > (Ном-1)) и (НЕ ЗначениеЗаполнено(ЭлементыФормы.НематериальныеАктивы.ТекущиеДанные["Субконто"+Ном])) Тогда
			Типы = ЭлементыФормы.НематериальныеАктивы.ТекущиеДанные.СчетЗатрат.ВидыСубконто[Ном-1].ВидСубконто.ТипЗначения.Типы();
			ЭлементыФормы.НематериальныеАктивы.ТекущиеДанные["Субконто"+Ном] = Новый(Типы[0]);
		КонецЕсли;
	КонецЦикла
КонецПроцедуры

Процедура НематериальныеАктивыСубконто1НовНачалоВыбора(Элемент, СтандартнаяОбработка)
	Для Ном = 1 по 3 Цикл
		Если (ЭлементыФормы.НематериальныеАктивы.ТекущиеДанные.СчетУчетаНовый.ВидыСубконто.Количество() > (Ном-1)) и (НЕ ЗначениеЗаполнено(ЭлементыФормы.НематериальныеАктивы.ТекущиеДанные["Субконто"+Ном+"Нов"])) Тогда
			Типы = ЭлементыФормы.НематериальныеАктивы.ТекущиеДанные.СчетУчетаНовый.ВидыСубконто[Ном-1].ВидСубконто.ТипЗначения.Типы();
			ЭлементыФормы.НематериальныеАктивы.ТекущиеДанные["Субконто"+Ном+"Нов"] = Новый(Типы[0]);
		КонецЕсли;
	КонецЦикла
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура КоманднаяПанельОСЗаполнить(Кнопка)
	Если НЕ ЗначениеЗаполнено(ПериодНачало) или НЕ ЗначениеЗаполнено(ПериодКонец) Тогда
		Предупреждение("Не выбран период!");
		Возврат;
	КонецЕсли;
	НематериальныеАктивы.Очистить();
	Счета = ПланыСчетов.Международный;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СУММА(МеждународныйОбороты.СуммаОборотДт) КАК СуммаОборотДт,
	               |	СУММА(МеждународныйОбороты.СуммаОборотКт) КАК СуммаОборотКт,
	               |	МеждународныйОбороты.Субконто1 КАК НМА,
	               |	МеждународныйОбороты.Регистратор,
	               |	МеждународныйОбороты.Счет
	               |ИЗ
	               |	РегистрБухгалтерии.Международный.Обороты(&НачалоПериода, &КонецПериода, Запись, Счет В ИЕРАРХИИ (&СчетаНМА), &НМА, Организация = &Организация, , ) КАК МеждународныйОбороты
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	МеждународныйОбороты.Субконто1,
	               |	МеждународныйОбороты.Регистратор,
	               |	МеждународныйОбороты.Счет";
	
	Запрос.УстановитьПараметр("НачалоПериода", ПериодНачало);
	Запрос.УстановитьПараметр("КонецПериода", ПериодКонец);
	Запрос.УстановитьПараметр("СчетаНМА", Счета.НематериальныеАктивы);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НМА", ПланыВидовХарактеристик.ВидыСубконтоМеждународные.НематериальныеАктивы);

	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СрезСведенийБУ = РегистрыСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.ПолучитьПоследнее(ПериодКонец, Новый Структура("НематериальныйАктив", Выборка.НМА));
		СрезСведенийМежд = РегистрыСведений.НематериальныеАктивыМеждународныйУчет.ПолучитьПоследнее(Выборка.Регистратор.Дата, Новый Структура("НематериальныйАктив", Выборка.НМА));

		СтрокаТП = НематериальныеАктивы.Добавить();
		СтрокаТП.НематериальныйАктив = Выборка.НМА;
		СтрокаТП.УчитыватьКакНМА = Истина;
		СтрокаТП.ПредполагаемыйОбъемПродукции = СрезСведенийБУ.ОбъемПродукцииРаботДляВычисленияАмортизации;
		СтрокаТП.СчетУчета = Выборка.Счет;
		СтрокаТП.СчетУчетаНовый = Выборка.Счет;
		СтрокаТП.Сумма = Выборка.СуммаОборотДт - Выборка.СуммаОборотКт;
		СтрокаТП.Субконто1Нов = Выборка.НМА;
		//СтрокаТП.Субконто2Нов = Выборка.Субконто2;
		//СтрокаТП.Субконто3Нов = Выборка.Субконто3;

		СтрокаТП.ДатаПринятияКУчету = Выборка.Регистратор.Дата;
		
		Если НЕ ЗначениеЗаполнено(СрезСведенийМежд.ПервоначальнаяСтоимость) Тогда
			СтрокаТП.ПервоначальнаяСтоимость = СтрокаТП.Сумма;
		ИначеЕсли НЕ (Ссылка.Проведен) Тогда
			СтрокаТП.ПервоначальнаяСтоимость = СрезСведенийМежд.ПервоначальнаяСтоимость + СтрокаТП.Сумма;
		Иначе
			СтрокаТП.ПервоначальнаяСтоимость = СрезСведенийМежд.ПервоначальнаяСтоимость;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

Процедура ДействияФормыРедактироватьНомер(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
КонецПроцедуры
// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

Процедура НематериальныеАктивыПредполагаемыйОбъемПродукцииПриИзменении(Элемент)
	Если ЭлементыФормы.НематериальныеАктивы.ТекущиеДанные.МетодНачисленияАмортизации <> Перечисления.СпособыНачисленияАмортизацииНМА.ПропорциональноОбъемуПродукции Тогда
		ЭлементыФормы.НематериальныеАктивы.ТекущиеДанные.ПредполагаемыйОбъемПродукции = 0;
		Предупреждение("Предполагаемый объем продукции заполняется только при методе начисления амортизации - пропорционально объему продукции.");
	КонецЕсли;
КонецПроцедуры

Процедура НематериальныеАктивыСчетЗатратПриИзменении(Элемент)
	ЭлементыФормы.НематериальныеАктивы.ТекущиеДанные.Субконто1 = Неопределено;
	ЭлементыФормы.НематериальныеАктивы.ТекущиеДанные.Субконто2 = Неопределено;
	ЭлементыФормы.НематериальныеАктивы.ТекущиеДанные.Субконто3 = Неопределено;
КонецПроцедуры

Процедура НематериальныеАктивыСчетУчетаНовыйПриИзменении(Элемент)
	ЭлементыФормы.НематериальныеАктивы.ТекущиеДанные.Субконто1Нов = Неопределено;
	ЭлементыФормы.НематериальныеАктивы.ТекущиеДанные.Субконто2Нов = Неопределено;
	ЭлементыФормы.НематериальныеАктивы.ТекущиеДанные.Субконто3Нов = Неопределено;
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;
КонецПроцедуры

Процедура НематериальныеАктивыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	ОформлениеСтроки.Ячейки.ПредполагаемыйОбъемПродукции.ТолькоПросмотр = (ДанныеСтроки.МетодНачисленияАмортизации <> Перечисления.СпособыНачисленияАмортизацииНМА.ПропорциональноОбъемуПродукции);
	ОформлениеСтроки.Ячейки.КоэффициентУскорения.ТолькоПросмотр = (ДанныеСтроки.МетодНачисленияАмортизации <> Перечисления.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка);
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Для каждого Стр из НематериальныеАктивы Цикл
		
		Если (НЕ Стр.УчитыватьКакНМА) и (НЕ ЗначениеЗаполнено(Стр.СчетУчетаНовый)) Тогда
			Сообщить("В строке № " + Стр.НомерСтроки + " не выбран новый счет учета.");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		Если (Стр.УчитыватьКакНМА) И (НЕ ЗначениеЗаполнено(Стр.СчетСниженияСтоимости)) Тогда
			Сообщить("В строке № " + Стр.НомерСтроки + " не указан счет снижения стоимости!");
			Отказ = Истина;
		КонецЕсли;
		
		Если (Стр.УчитыватьКакНМА) И (Стр.НачислятьАмортизацию) и (НЕ ЗначениеЗаполнено(Стр.СрокПолезногоИспользования)) Тогда
			Сообщить("В строке № " + Стр.НомерСтроки + " не указан срок полезного использования!");
			Отказ = Истина;
		КонецЕсли;
		
		Если (Стр.УчитыватьКакНМА) И (Стр.НачислятьАмортизацию) и (НЕ ЗначениеЗаполнено(Стр.СчетНачисленияАмортизации)) Тогда
			Сообщить("В строке № " + Стр.НомерСтроки + " не указан счет учет накопленной амортизации!");
			Отказ = Истина;
		КонецЕсли;
		
		Если (Стр.УчитыватьКакНМА) И (Стр.НачислятьАмортизацию) и (НЕ ЗначениеЗаполнено(Стр.МетодНачисленияАмортизации)) Тогда
			Сообщить("В строке № " + Стр.НомерСтроки + " не указан метод начисления амортизации!");
			Отказ = Истина;
		КонецЕсли;

		Если (Стр.УчитыватьКакНМА) И (Стр.НачислятьАмортизацию) и (НЕ ЗначениеЗаполнено(Стр.СчетЗатрат)) Тогда
			Сообщить("В строке № " + Стр.НомерСтроки + " не указан счет затрат!");
			Отказ = Истина;
		КонецЕсли;
		
		Если (Стр.УчитыватьКакНМА) и  
			(Стр.НачислятьАмортизацию) и 
			(Стр.МетодНачисленияАмортизации=Перечисления.СпособыНачисленияАмортизацииНМА.ПропорциональноОбъемуПродукции) 
			и (Стр.ПредполагаемыйОбъемПродукции=0) Тогда
			
			Сообщить("В строке № " + Стр.НомерСтроки + " не указан предполагаемый объем продукции для соответвующего метода амортизации.");
			Отказ = Истина;
			Возврат;
			
		КонецЕсли;
		
		Если (Стр.УчитыватьКакНМА) и  
			(Стр.НачислятьАмортизацию) и 
			(Стр.МетодНачисленияАмортизации=Перечисления.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка) 
			и (Стр.КоэффициентУскорения=0) Тогда
			
			Сообщить("В строке № " + Стр.НомерСтроки + " не указан коэффициент ускорения для метода уменьшаемого остатка.");
			Отказ = Истина;
			Возврат;
			
		КонецЕсли;
                        
	КонецЦикла;
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля дата 
// в диалоге документа.
//
Процедура ДатаПриИзменении(Элемент)
	
	УстановитьВремя(РежимАвтоВремя.Последним);
	
	Если (НачалоМесяца(Дата) <> ПериодНачало)
	 или (КонецМесяца(Дата) <> ПериодКонец) Тогда
		Ответ = Вопрос("Установить значение периода документа месяцем в который входит текущая дата?", РежимДиалогаВопрос.ДаНет,,,);
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ПериодНачало = НачалоМесяца(Дата);
			ПериодКонец = КонецМесяца(Дата);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры
// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать".
// Открывает форму выбора печатных форм объекта.
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ОткрытьФормуВыбораПечатныхФормОбъекта(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ОсновныеДействияФормыПечать() 

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)

	УниверсальныеМеханизмы.НапечататьДокументПоУмолчанию(ЭтотОбъект);

КонецПроцедуры