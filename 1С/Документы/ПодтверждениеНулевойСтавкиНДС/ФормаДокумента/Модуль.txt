////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

// Хранит значение параметра учетной политики НДСПриНеподтвержденииСверху на дату документа
Перем мНДСПриНеподтвержденииСверху;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ПолучитьПараметрНДСПриНеподтвержденииСверху(ПересчитатьСуммыНДС = Истина)
	
	Отказ = Ложь;
	ТекНДСПриНеподтвержденииСверху = мНДСПриНеподтвержденииСверху;
	Если ЗначениеЗаполнено(Организация) Тогда
		УчетнаяПолитикаНУ = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(Дата, Организация);
		мНДСПриНеподтвержденииСверху = ?(ЗначениеЗаполнено(УчетнаяПолитикаНУ), УчетнаяПолитикаНУ.НДСПриНеподтвержденииСверху, Ложь);
	Иначе
		мНДСПриНеподтвержденииСверху = Ложь;
	КонецЕсли;
	
	Если ПересчитатьСуммыНДС И мНДСПриНеподтвержденииСверху <> ТекНДСПриНеподтвержденииСверху Тогда
		СтрокиНеПодтверждено = Состав.НайтиСтроки(Новый Структура("Событие", Перечисления.СобытияПоНДСПродажи.НеПодтвержденаСтавка0));
		Если СтрокиНеПодтверждено.Количество() <> 0 Тогда
			Ответ = Вопрос("Изменился метод начисления НДС при невозможности подтверждения ставки НДС 0%. Пересчитать суммы НДС табличной части?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
			Если Ответ = КодВозвратаДиалога.Да Тогда
				Для Каждого СтрокаНеПодтверждено Из СтрокиНеПодтверждено Цикл
					Если мНДСПриНеподтвержденииСверху Тогда
						СтрокаНеПодтверждено.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
					Иначе
						СтрокаНеПодтверждено.СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118;
					КонецЕсли;
					СтрокаНеПодтверждено.СуммаНДС = УчетНДС.РассчитатьСуммуНДС(СтрокаНеПодтверждено.ПродажиСНДС0, Истина, Не мНДСПриНеподтвержденииСверху, УчетНДС.ПолучитьСтавкуНДС(СтрокаНеПодтверждено.СтавкаНДС));
				КонецЦикла;				
			КонецЕсли;			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка,Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.Состав,ЭлементыФормы.КоманднаяПанель.Кнопки.ПодменюЗаполнить);
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧПоДеревуКнопок(мКнопкиЗаполненияТЧ,СоответствиеТЧ);
	
КонецПроцедуры // УстановитьКнопкиПодменюЗаполненияТЧ()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()

	
	Если НЕ ЭтоНовый() Тогда 
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	КонецЕсли;
	
	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ

		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, "Продажа");
		ОтражатьВНалоговомУчете = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОтражатьДокументыВНалоговомУчете");

		УстановитьВремя(РежимАвтоВремя.Последним);
		
	КонецЕсли;
	
	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента = Дата;
	мЗаконодательство2006 = (Дата >= '20060101');
    ПолучитьПараметрНДСПриНеподтвержденииСверху(Ложь);

	// Вывести в заголовке формы вид операции.
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	// Установить активный реквизит.
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);

	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	// Создать кнопки печати
	ФормированиеПечатныхФорм.СоздатьКнопкиПечати(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()
	
	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры // ПослеЗаписи()

Процедура КоманднаяПанельЗаполнить(Кнопка)
	
	Если Ссылка.Проведен Тогда
		Ответ = Вопрос("Проведенный документ не может быть заполнен автоматически. Отменить проведение документа для заполнения?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьДокумент(, , , Ссылка.Проведен И Ответ = КодВозвратаДиалога.Да);
	
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // КоманднаяПанельЗаполнить()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТЧ Материалы

// Процедура - обработчик события "ПриВыводеСтроки" табличной части.
//
Процедура СоставПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Событие = Перечисления.СобытияПоНДСПродажи.ПодтвержденаСтавка0 Тогда
		ОформлениеСтроки.Ячейки.СтавкаНДС.Видимость = Ложь;
		ОформлениеСтроки.Ячейки.СтавкаНДС.ТолькоПросмотр = Истина;
		ОформлениеСтроки.Ячейки.НДС.Видимость = Ложь;
		ОформлениеСтроки.Ячейки.НДС.ТолькоПросмотр = Истина;
	Иначе
		ОформлениеСтроки.Ячейки.СтавкаНДС.Видимость = Истина;
		ОформлениеСтроки.Ячейки.СтавкаНДС.ТолькоПросмотр = Ложь;
		ОформлениеСтроки.Ячейки.НДС.Видимость = Истина;
		ОформлениеСтроки.Ячейки.НДС.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
КонецПроцедуры // СоставПриВыводеСтроки()

// Процедура - обработчик события "НачалоВыбораИзСписка" поля ввода "Событие"
// в строке табличной части.
//
Процедура СоставСобытиеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Элемент.СписокВыбора.Очистить();
	Элемент.СписокВыбора.Добавить(Перечисления.СобытияПоНДСПродажи.ПодтвержденаСтавка0);
	Элемент.СписокВыбора.Добавить(Перечисления.СобытияПоНДСПродажи.НеПодтвержденаСтавка0);
	
КонецПроцедуры // СоставСобытиеНачалоВыбораИзСписка()

// Процедура - обработчик события "НачалоВыбораИзСписка" поля ввода "ПродажиСНДС0"
// в строке табличной части.
//
Процедура СоставПродажиСНДС0ПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = ЭлементыФормы.Состав.ТекущиеДанные;
	СтрокаТабличнойЧасти.СуммаНДС = УчетНДС.РассчитатьСуммуНДС(СтрокаТабличнойЧасти.ПродажиСНДС0,
	                                                   Истина, Истина,
	                                                   УчетНДС.ПолучитьСтавкуНДС(СтрокаТабличнойЧасти.СтавкаНДС));
	
КонецПроцедуры // СоставПродажиСНДС0ПриИзменении()

// Процедура - обработчик события "НачалоВыбора" поля ввода "Событие"
// в строке табличной части.
//
Процедура СоставСобытиеПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = ЭлементыФормы.Состав.ТекущиеДанные;

	Если СтрокаТабличнойЧасти.Событие = Перечисления.СобытияПоНДСПродажи.НеПодтвержденаСтавка0 Тогда
		Если мНДСПриНеподтвержденииСверху Тогда
			СтрокаТабличнойЧасти.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
		Иначе
			СтрокаТабличнойЧасти.СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118;
		КонецЕсли;
		СтрокаТабличнойЧасти.СуммаНДС = УчетНДС.РассчитатьСуммуНДС(СтрокаТабличнойЧасти.ПродажиСНДС0, Истина, Не мНДСПриНеподтвержденииСверху, УчетНДС.ПолучитьСтавкуНДС(СтрокаТабличнойЧасти.СтавкаНДС));
	КонецЕсли;
	
КонецПроцедуры // СоставСобытиеПриИзменении()

// Процедура - обработчик события "НачалоВыбора" поля ввода "СчетФактура"
// в строке табличной части.
//
Процедура СоставСчетФактураНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ТекущаяСтрока = ЭлементыФормы.Состав.ТекущиеДанные;
	Отбор = Новый Структура("Организация, Контрагент", Организация, ТекущаяСтрока.Покупатель);

	РаботаСДиалогами.НачалоВыбораЗначенияДокументаСоставногоТипа(ЭтотОбъект, ЭтаФорма, Элемент, СтандартнаяОбработка, Отбор, "Состав");
	
КонецПроцедуры // СоставСчетФактураНачалоВыбора()

Процедура СоставСтавкаНДСНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Элемент.СписокВыбора.Очистить();
	Если мНДСПриНеподтвержденииСверху Тогда
		Элемент.СписокВыбора.Добавить(Перечисления.СтавкиНДС.НДС10);
		Элемент.СписокВыбора.Добавить(Перечисления.СтавкиНДС.НДС18);
		Элемент.СписокВыбора.Добавить(Перечисления.СтавкиНДС.НДС20);
	Иначе
		Элемент.СписокВыбора.Добавить(Перечисления.СтавкиНДС.НДС10_110);
		Элемент.СписокВыбора.Добавить(Перечисления.СтавкиНДС.НДС18_118);
		Элемент.СписокВыбора.Добавить(Перечисления.СтавкиНДС.НДС20_120);
	КонецЕсли;	
	
КонецПроцедуры

Процедура СоставСтавкаНДСПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = ЭлементыФормы.Состав.ТекущиеДанные;
	СтрокаТабличнойЧасти.СуммаНДС = УчетНДС.РассчитатьСуммуНДС(СтрокаТабличнойЧасти.ПродажиСНДС0,
	                                                   Истина, Истина,
	                                                   УчетНДС.ПолучитьСтавкуНДС(СтрокаТабличнойЧасти.СтавкаНДС));
													   
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

Процедура ДействияФормыРедактироватьНомер(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
КонецПроцедуры
// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура - обработчик события "ПриИзменении" поля дата 
// в диалоге документа.
//
Процедура ДатаПриИзменении(Элемент)
	
	УстановитьВремя(РежимАвтоВремя.Последним);
	
	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
	мТекущаяДатаДокумента = Дата; // запомним текущую дату документа для контроля номера документа
	
	мЗаконодательство2006 = (Дата >= '20060101');
	ПолучитьПараметрНДСПриНеподтвержденииСверху();
	
КонецПроцедуры // ДатаПриИзменении()

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	
	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;
	ПолучитьПараметрНДСПриНеподтвержденииСверху();

КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры // НажатиеНаДополнительнуюКнопкуЗаполненияТЧ()

// Процедура - обработчик нажатия на кнопку "Печать".
// Открывает форму выбора печатных форм объекта.
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ОткрытьФормуВыбораПечатныхФормОбъекта(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ОсновныеДействияФормыПечать() 

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)

	УниверсальныеМеханизмы.НапечататьДокументПоУмолчанию(ЭтотОбъект);

КонецПроцедуры
 
// Процедура открывает журнал проводок БУ с отбором по текущему регистратору
//
Процедура ДействияФормыПроводкиДтКт(Кнопка)

	БухгалтерскийУчет.ОткрытьЖурналПроводок(Ссылка);

КонецПроцедуры

// Процедура открывает журнал проводок НУ с отбором по текущему регистратору
//
Процедура ДействияФормыПроводкиДтКтНУ(Кнопка)

	БухгалтерскийУчет.ОткрытьЖурналПроводок(Ссылка, "НУ");

КонецПроцедуры