////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента; 

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

Перем ВерсияПостановления;

Перем мТекущийВидСчетаФактуры;

// Содержит значение функциональной опции "ИспользоватьОбменЭД"
Перем мИспользоватьОбменЭД; 

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ()
	
	СоответствиеТЧ      = Новый Соответствие;
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧ(
		Ссылка, СоответствиеТЧ, Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
КонецПроцедуры

Процедура УстановитьДоступныеВидыСчетаФактуры()

	ЭлементыФормы.ВидСчетаФактуры.ДоступныеЗначения.Очистить();
	ЭлементыФормы.ВидСчетаФактуры.ДоступныеЗначения.Добавить(Перечисления.ВидСчетаФактурыПолученного.НаПоступление);
	ЭлементыФормы.ВидСчетаФактуры.ДоступныеЗначения.Добавить(Перечисления.ВидСчетаФактурыПолученного.НаАванс);	
	Если Дата >= '20111001' Тогда	
		ЭлементыФормы.ВидСчетаФактуры.ДоступныеЗначения.Добавить(Перечисления.ВидСчетаФактурыПолученного.Корректировочный);
	КонецЕсли;

КонецПроцедуры

Функция МожноИспользоватьДоговорКонтрагента(ВыбранныйДоговорКонтрагента)
	
	Если ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный
		ИЛИ Исправление Тогда
		
		Если ВыбранныйДоговорКонтрагента.РасчетыВУсловныхЕдиницах 
			И ВыбранныйДоговорКонтрагента.ВалютаВзаиморасчетов <> мВалютаРегламентированногоУчета Тогда
			
			Если Исправление Тогда
				УточнениеСообщения = "исправленных";				
			Иначе
				УточнениеСообщения = "корректировочных"; 
			КонецЕсли;
			Предупреждение("Для договоров в условных единицах регистрация " 
				+ УточнениеСообщения + " счетов-фактур, оформленных в валюте, не поддерживается.");
			Возврат Ложь;			
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

Процедура НачалоВыбораДокументаОснования(Элемент, СтандартнаяОбработка, ВыбратьТекущуюКолонку = Ложь)
	
	СтандартнаяОбработка = Ложь;
	
	Отбор = Новый Структура();
	
	СписокТипов = ПолучитьСписокТиповПоВидуСчетаФактуры(ВидСчетаФактуры, Исправление);
	
	Если ЗначениеЗаполнено(Организация) Тогда
		Отбор.Вставить("Организация", Организация);
	КонецЕсли;
	Если ЗначениеЗаполнено(Контрагент) Тогда
		Отбор.Вставить("Контрагент", Контрагент);
	КонецЕсли;
	Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		Отбор.Вставить("ДокументыПоДоговоруКонтрагента", ДоговорКонтрагента);
	КонецЕсли;
	
	Отбор.Вставить("ПоставщикуВыставляетсяСчетФактураНаВозврат", Ложь);
	Отбор.Вставить("ПокупателемВыставляетсяСчетФактураНаВозврат", Истина);
	
	Если Исправление Тогда
		Отбор.Вставить("ВидОперации", Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки);
	КонецЕсли;
	Если ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный Тогда
		Отбор.Вставить("ВидОперации", Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение);
	КонецЕсли;	
	
	Если ВыбратьТекущуюКолонку Тогда
	    ЭлементыФормы.ДокументыОснования.ТекущаяКолонка = ЭлементыФормы.ДокументыОснования.Колонки.ДокументОснование;
	КонецЕсли;
	
	РаботаСДиалогами.НачалоВыбораЗначенияДокументаСоставногоТипа(
		ЭтотОбъект, ЭтаФорма, Элемент, СтандартнаяОбработка, Отбор, "ДокументыОснования", СписокТипов);
	
КонецПроцедуры

Процедура РассчитатьСуммуДокумента()
	
	СчетФактураКомитента = ТипЗнч(ДокументыОснования[0].ДокументОснование) = Тип("ДокументСсылка.ОтчетКомитентуОПродажах");
	
	Если ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаАванс
		ИЛИ (СчетФактураКомитента И НЕ ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный) Тогда
		
		Сумма    = Авансы.Итог("Сумма");
		СуммаНДС = Авансы.Итог("СуммаНДС");
		
		Если ВалютаДокумента <> мВалютаРегламентированногоУчета Тогда
			
			СтруктураКурсаВзаиморасчетов = МодульВалютногоУчета.ПолучитьКурсВалюты(ВалютаДокумента, Дата);
			СуммаДокумента = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(Сумма,
				мВалютаРегламентированногоУчета, ВалютаДокумента, 
				1, СтруктураКурсаВзаиморасчетов.Курс, 
				1, СтруктураКурсаВзаиморасчетов.Кратность);
			СуммаНДСДокумента = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СуммаНДС,
				мВалютаРегламентированногоУчета, ВалютаДокумента, 
				1, СтруктураКурсаВзаиморасчетов.Курс, 
				1, СтруктураКурсаВзаиморасчетов.Кратность);
		Иначе
										
			СуммаДокумента    = Сумма;
			СуммаНДСДокумента = СуммаНДС;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьВидимость()
	
	ЕстьНеВозврат = Ложь;
	Для Каждого СтрокаТЧ Из ДокументыОснования Цикл
		Если Не ТипЗнч(СтрокаТЧ.ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
			ЕстьНеВозврат = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Корректировочный = ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный;
	НаАванс          = ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаАванс;
	
	СчетФактураКомитента = ТипЗнч(ДокументыОснования[0].ДокументОснование) = Тип("ДокументСсылка.ОтчетКомитентуОПродажах");
	
	ЗаголовокГруппыАвансы = ?(СчетФактураКомитента, "Реквизиты счета-фактуры комитента", "Реквизиты счета-фактуры на аванс");
	
	ЭлементыФормы.ПлатежноРасчетныйДокумент1.Заголовок = ЗаголовокГруппыАвансы;
	ЭлементыФормы.ПлатежноРасчетныйДокумент2.Заголовок = ЗаголовокГруппыАвансы;
		
	УказанДокументОснование = ДокументыОснования.Количество() > 0 
		И ЗначениеЗаполнено(ДокументыОснования[0].ДокументОснование);

	ЭлементыФормы.Организация.ТолькоПросмотр = УказанДокументОснование;
	ЭлементыФормы.Контрагент.ТолькоПросмотр  = УказанДокументОснование 
		И ТипЗнч(ДокументыОснования[0].ДокументОснование) <> Тип("ДокументСсылка.АвансовыйОтчет");
	ЭлементыФормы.ДоговорКонтрагента.ТолькоПросмотр	= УказанДокументОснование И НЕ НаАванс;
		
	ЭлементыФормы.СписокДокументыОснования.Видимость = НЕ НаАванс И НЕ СчетФактураКомитента;
	
	ЭлементыФормы.ПанельДокументыОснования.ТекущаяСтраница = ?(СписокДокументыОснования,
		ЭлементыФормы.ПанельДокументыОснования.Страницы.НесколькоОснований,
		ЭлементыФормы.ПанельДокументыОснования.Страницы.ОдноОснование);
		
	ЭлементыФормы.ПанельДанныеАванс.ТекущаяСтраница = ?(НаАванс ИЛИ СчетФактураКомитента,
		?(СписокАвансы, ЭлементыФормы.ПанельДанныеАванс.Страницы.ДанныеАвансНесколько,
		ЭлементыФормы.ПанельДанныеАванс.Страницы.ДанныеАванс), 
		ЭлементыФормы.ПанельДанныеАванс.Страницы.ОписаниеВозможностей);
		
	КорректировочныйСчетФактураКомитента = (ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный И СчетФактураКомитента);
	
	ЭлементыФормы.НадписьСуммаСНДС.Видимость = НЕ КорректировочныйСчетФактураКомитента;
	ЭлементыФормы.СуммаСНДС.Видимость = НЕ КорректировочныйСчетФактураКомитента;
	ЭлементыФормы.НадписьСуммаНДС.Видимость = НЕ КорректировочныйСчетФактураКомитента;
	ЭлементыФормы.СуммаНДС.Видимость = НЕ КорректировочныйСчетФактураКомитента;
	ЭлементыФормы.НадписьСтавкаНДС.Видимость = НЕ КорректировочныйСчетФактураКомитента;
	ЭлементыФормы.СтавкаНДС.Видимость = НЕ КорректировочныйСчетФактураКомитента;
	
	ЭлементыФормы.СписокАвансы.Видимость = НЕ КорректировочныйСчетФактураКомитента;
	
	ЭлементыФормы.НадписьУвеличение.Видимость = КорректировочныйСчетФактураКомитента;
	ЭлементыФормы.Увеличение.Видимость = КорректировочныйСчетФактураКомитента;
	ЭлементыФормы.НадписьНДСУвеличение.Видимость = КорректировочныйСчетФактураКомитента;
	ЭлементыФормы.НДСУвеличение.Видимость = КорректировочныйСчетФактураКомитента;
	ЭлементыФормы.НадписьУменьшение.Видимость = КорректировочныйСчетФактураКомитента;
	ЭлементыФормы.Уменьшение.Видимость = КорректировочныйСчетФактураКомитента;
	ЭлементыФормы.НадписьНДСУменьшение.Видимость = КорректировочныйСчетФактураКомитента;
	ЭлементыФормы.НДСУменьшение.Видимость = КорректировочныйСчетФактураКомитента;
		
	ЕстьОснованиеАО = Ложь;
	Для каждого ТекущийДокументОснование Из ДокументыОснования Цикл
		ЕстьОснованиеАО = НЕ НаАванс 
			И ТипЗнч(ТекущийДокументОснование.ДокументОснование) = Тип("ДокументСсылка.АвансовыйОтчет");
	КонецЦикла; 	
	
	ЭлементыФормы.ДатаВходящего.ТолькоПросмотр	= ЕстьОснованиеАО;
	ЭлементыФормы.НомерВходящего.ТолькоПросмотр	= ЕстьОснованиеАО;
	
	// Эти элементы только для документов с 2012 г.
	
	ЭлементыФормы.НадписьСуммаНДСДокумента.Видимость = ВерсияПостановления = 2;
	ЭлементыФормы.СуммаНДСДокумента.Видимость        = ВерсияПостановления = 2;
	
	ЭлементыФормы.ПанельИсправление.Видимость = ВерсияПостановления = 2 И НЕ БланкСтрогойОтчетности;
	
	Если Дата < '20111001' Тогда
		
		ЭлементыФормы.ПанельИсправление.Видимость = Ложь;
		ЭлементыФормы.ПанельКорректировка.ТекущаяСтраница = ЭлементыФормы.ПанельКорректировка.Страницы.СтраницаОбычный;
		
	ИначеЕсли ВерсияПостановления = 1 Тогда
				
		ЭлементыФормы.ПанельИсправление.Видимость = ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный;
		
		ЭлементыФормы.ПанельИсправление.ТекущаяСтраница   = ЭлементыФормы.ПанельИсправление.Страницы.СтраницаКорректировка;
		ЭлементыФормы.ПанельКорректировка.ТекущаяСтраница = ЭлементыФормы.ПанельКорректировка.Страницы.СтраницаОбычный;
				
		
	Иначе // ВерсияПостановления = 2
		
		ЭлементыФормы.ПанельИсправление.Видимость = Истина;
		ЭлементыФормы.ПанельИсправление.ТекущаяСтраница = ЭлементыФормы.ПанельИсправление.Страницы.СтраницаИсправление;
		
		Если ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный Тогда
			ЭлементыФормы.ПанельКорректировка.ТекущаяСтраница = ЭлементыФормы.ПанельКорректировка.Страницы.СтраницаКорректировочный;
		ИначеЕсли Исправление Тогда
			ЭлементыФормы.ПанельКорректировка.ТекущаяСтраница = ЭлементыФормы.ПанельКорректировка.Страницы.СтраницаОбычный;
		Иначе				
			ЭлементыФормы.ПанельКорректировка.ТекущаяСтраница = ЭлементыФормы.ПанельКорректировка.Страницы.СтраницаОбычный;
		КонецЕсли;
	КонецЕсли;
	
	Если ВерсияПостановления = 2 Тогда
				
		ЭлементыФормы.НомерИсправления.Доступность = Исправление;
		ЭлементыФормы.ДатаИсправления.Доступность  = Исправление;
		ЭлементыФормы.НомерИсправления.АвтоОтметкаНезаполненного = Исправление И НЕ ЗначениеЗаполнено(НомерИсправления);
		Если НЕ ЭлементыФормы.НомерИсправления.АвтоОтметкаНезаполненного Тогда
			ЭлементыФормы.НомерИсправления.ОтметкаНезаполненного = Ложь;
		КонецЕсли;
		ЭлементыФормы.ДатаИсправления.АвтоОтметкаНезаполненного  = Исправление И НЕ ЗначениеЗаполнено(ДатаИсправления);
		Если НЕ ЭлементыФормы.ДатаИсправления.АвтоОтметкаНезаполненного Тогда
			ЭлементыФормы.ДатаИсправления.ОтметкаНезаполненного = Ложь;
		КонецЕсли;
		
		ЭлементыФормы.УчитыватьИсправлениеИсходногоДокумента.Доступность = Корректировочный;
		ЭлементыФормы.НомерИсправленияИсходногоДокумента.Доступность     = Корректировочный И УчитыватьИсправлениеИсходногоДокумента;
		ЭлементыФормы.ДатаИсправленияИсходногоДокумента.Доступность      = Корректировочный И УчитыватьИсправлениеИсходногоДокумента;
		ЭлементыФормы.НомерИсправленияИсходногоДокумента.АвтоОтметкаНезаполненного = Корректировочный И УчитыватьИсправлениеИсходногоДокумента;
		Если НЕ ЭлементыФормы.НомерИсправленияИсходногоДокумента.АвтоОтметкаНезаполненного Тогда
			ЭлементыФормы.НомерИсправленияИсходногоДокумента.ОтметкаНезаполненного = Ложь;
		КонецЕсли;
		ЭлементыФормы.ДатаИсправленияИсходногоДокумента.АвтоОтметкаНезаполненного  = Корректировочный И УчитыватьИсправлениеИсходногоДокумента;
		Если НЕ ЭлементыФормы.ДатаИсправленияИсходногоДокумента.АвтоОтметкаНезаполненного Тогда
			ЭлементыФормы.ДатаИсправленияИсходногоДокумента.ОтметкаНезаполненного = Ложь;
		КонецЕсли;
		
		ЭлементыФормы.СчетФактураБезНДС.Видимость  = НЕ НаАванс;
		ЭлементыФормы.СчетФактураБезНДС1.Видимость = НЕ НаАванс;
		
		Если Корректировочный Тогда
			ЭлементыФормы.ПанельИтоги.ТекущаяСтраница = ЭлементыФормы.ПанельИтоги.Страницы.СтраницаУвеличениеУменьшение;
		Иначе
			ЭлементыФормы.ПанельИтоги.ТекущаяСтраница = ЭлементыФормы.ПанельИтоги.Страницы.СтраницаВсего;
		КонецЕсли;
		
		ПанельСведенияОСчетеФактуреРежимСвертки = ?(БланкСтрогойОтчетности, РежимСверткиЭлементаУправления.Низ, РежимСверткиЭлементаУправления.Нет);
		
	ИначеЕсли Дата >= '20111001' Тогда
		
		ЭлементыФормы.СчетФактураБезНДС.Видимость  = Ложь;
		ЭлементыФормы.СчетФактураБезНДС1.Видимость = Ложь;
		
		Если Корректировочный Тогда
			ЭлементыФормы.ПанельИтоги.ТекущаяСтраница = ЭлементыФормы.ПанельИтоги.Страницы.СтраницаУвеличениеУменьшение;
		Иначе
			ЭлементыФормы.ПанельИтоги.ТекущаяСтраница = ЭлементыФормы.ПанельИтоги.Страницы.СтраницаВсего;
		КонецЕсли;
		
		ПанельСведенияОСчетеФактуреРежимСвертки = РежимСверткиЭлементаУправления.Низ;
		
	Иначе
		
		ЭлементыФормы.СчетФактураБезНДС.Видимость  = Ложь;
		ЭлементыФормы.СчетФактураБезНДС1.Видимость = Ложь;
		ЭлементыФормы.ПанельИтоги.ТекущаяСтраница  = ЭлементыФормы.ПанельИтоги.Страницы.СтраницаВсего;
		ПанельСведенияОСчетеФактуреРежимСвертки    = РежимСверткиЭлементаУправления.Низ;
		
	КонецЕсли;
	
	ЭлементыФормы.ПанельСведенияОСчетеФактуре.Свертка = ПанельСведенияОСчетеФактуреРежимСвертки;	
	
	ЭлементыФормы.ТекстСостоянияЭД.Видимость   = НЕ БланкСтрогойОтчетности;
	ЭлементыФормы.НадписьСостояниеЭД.Видимость = НЕ БланкСтрогойОтчетности;
	
	ЭлементыФормы.Контрагент.ТолькоПросмотр = ЭлементыФормы.Контрагент.ТолькоПросмотр ИЛИ БланкСтрогойОтчетности;
	ЭлементыФормы.ВидСчетаФактуры.Доступность = ЭлементыФормы.ВидСчетаФактуры.Доступность И НЕ БланкСтрогойОтчетности;
	ЭлементыФормы.ДокументОснование.ТолькоПросмотр = ЭлементыФормы.ДокументОснование.ТолькоПросмотр ИЛИ БланкСтрогойОтчетности;
	ЭлементыФормы.СписокДокументыОснования.Доступность = ЭлементыФормы.СписокДокументыОснования.Доступность И НЕ БланкСтрогойОтчетности;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
	// ЭлектронныеДокументы
	РаботаСДиалогами.УдалитьКнопкуЭД(ЭлементыФормы.ДействияФормы.Кнопки, мИспользоватьОбменЭД);
	// Конец ЭлектронныеДокументы
	
КонецПроцедуры 

Процедура ПриОткрытии()
	
	СчетФактураКомитента = ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтчетКомитентуОПродажах");
	
	Если НЕ ЭтоНовый() Тогда 
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	КонецЕсли;
	
	Если ДокументыОснования.Количество() = 0 Тогда
		ДокументыОснования.Добавить().ДокументОснование = ДокументОснование;
	КонецЕсли; 
	
	// Вывести в заголовке формы вид операции.
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

	ЭлементыФормы.ДокументыОснования.ТекущаяСтрока = ДокументыОснования[0];
	
	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента   = Дата;
	мТекущийВидСчетаФактуры = ВидСчетаФактуры;

	// Установить активный реквизит.
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);

	Если ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаАванс
		ИЛИ (СчетФактураКомитента И НЕ ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный) Тогда
		
		Если Авансы.Количество() = 0 Тогда
			Авансы.Добавить();
		КонецЕсли;
		ЭлементыФормы.Авансы.ТекущаяСтрока = Авансы[0];
		
	КонецЕсли;

	СписокДокументыОснования = ДокументыОснования.Количество() > 1;
	СписокАвансы             = Авансы.Количество() > 1;
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	// Создать кнопки печати
	ФормированиеПечатныхФорм.СоздатьКнопкиПечати(ЭтотОбъект, ЭтаФорма);
	
	УстановитьДоступныеВидыСчетаФактуры();
	
	ВерсияПостановления = УчетНДС.ПолучитьВерсиюПостановления(Дата);
	
	УчетНДС.ЗаполнитьСписокКодовВидовОпераций(Перечисления.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры, ЭлементыФормы.КодВидаОперации.СписокВыбора);
	
	УстановитьВидимость();
	
	// ЭлектронныеДокументы
	ТекстСостоянияЭД = ЭлектронныеДокументыКлиент.ПолучитьТекстСостоянияЭД(Ссылка, ЭтаФорма);
	// Конец ЭлектронныеДокументы

КонецПроцедуры 

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
		Возврат;
	КонецЕсли; 
			
	СтрокаСообщения = ПроверитьВозможностьЗаписиСФ(Отказ);
	
	Если Отказ Тогда
		Предупреждение(СтрокаСообщения);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПослеЗаписи()

	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(
		ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	// Если открыли данную форму из формы документа, то там надо поменять текст
	Если Не ВладелецФормы = Неопределено Тогда

		// Надо поменять текст про счет-фактуру в форме-владельце
		Если ТипЗнч(ВладелецФормы) = Тип("Форма") тогда
			ВладелецФормы.ЗаполнитьТекстПроСчетФактуру();
		КонецЕсли;

	КонецЕсли;
	
	// ЭлектронныеДокументы
	ТекстСостоянияЭД = ЭлектронныеДокументыКлиент.ПолучитьТекстСостоянияЭД(Ссылка, ЭтаФорма);
	// Конец ЭлектронныеДокументы

КонецПроцедуры 

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ЭлектронныеДокументы
	Если ИмяСобытия = "ОбновитьСостояниеЭД" Тогда
		ТекстСостоянияЭД = ЭлектронныеДокументыКлиент.ПолучитьТекстСостоянияЭД(Ссылка, ЭтаФорма);
	ИначеЕсли ИмяСобытия = "ОбновитьДокументИБПослеЗаполнения" Тогда
		ЭтаФорма.Прочитать();
	КонецЕсли;
	// Конец ЭлектронныеДокументы
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(
		ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
			
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры 

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
	
КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(
		мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя, "Имя", Истина), ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)

	УниверсальныеМеханизмы.НапечататьДокументПоУмолчанию(ЭтотОбъект);

КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ОткрытьФормуВыбораПечатныхФормОбъекта(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

// Процедура открывает список ЭД по текущему документу
//
Процедура ДействияФормыСписокЭлектронныхДокументов(Кнопка)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Уникальность", 	Ссылка.УникальныйИдентификатор());
	ПараметрыОткрытия.Вставить("Источник", 		ЭтаФорма);
	
	ЭлектронныеДокументыКлиент.ОткрытьДеревоЭД(Ссылка, ПараметрыОткрытия);
	
КонецПроцедуры

// Процедура выполняет перезаполнение документа по ЭД
//
Процедура ДействияФормыПерезаполнитьДаннымиИзЭД(Кнопка)
	
	ЭлектронныеДокументыКлиент.ПерезаполнитьДокумент(Ссылка, ЭтаФорма);
	
КонецПроцедуры

// Процедура выполняет открытие актуального ЭД
//
Процедура ДействияФормыОткрытьАктуальныйЭД(Кнопка)
	
	ЭлектронныеДокументыКлиент.ОткрытьАктуальныйЭД(Ссылка, ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

Процедура ДатаПриИзменении(Элемент)

	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(
		ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	мТекущаяДатаДокумента = Дата; // запомним текущую дату документа для контроля номера документа
	
	ВерсияПостановления = УчетНДС.ПолучитьВерсиюПостановления(Дата);
	Если ВерсияПостановления = 1 Тогда		
		Исправление = Ложь;
		НомерИсправления = 0;
		ДатаИсправления = '00010101';
		Если Дата < '20111001'
			И ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный Тогда
			ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаПоступление;
		КонецЕсли;
	КонецЕсли;	
	
	УстановитьДоступныеВидыСчетаФактуры();
		
	УстановитьВидимость();

КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	
	Если НЕ ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(
			ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;
	
КонецПроцедуры

Процедура КонтрагентПриИзменении(Элемент)
	
	СписокВидовДоговоров = Новый СписокЗначений;
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком);
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером);
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СКомитентом);
	УправлениеВзаиморасчетами.УстановитьДоговорКонтрагента(ДоговорКонтрагента, Контрагент,Организация, СписокВидовДоговоров);

КонецПроцедуры

Процедура ДоговорКонтрагентаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СписокВидовДоговоров = Новый СписокЗначений;
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком);
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером);
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СКомитентом);
	РаботаСДиалогами.НачалоВыбораЗначенияДоговораКонтрагента(
		ЭтотОбъект, ЭтаФорма, Элемент, Контрагент, ДоговорКонтрагента, СписокВидовДоговоров, СтандартнаяОбработка);

КонецПроцедуры

Процедура ДоговорКонтрагентаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Если НЕ МожноИспользоватьДоговорКонтрагента(ВыбранноеЗначение) Тогда
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВидСчетаФактурыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если НЕ МожноИспользоватьДоговорКонтрагента(ДоговорКонтрагента) Тогда
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ВидСчетаФактурыПриИзменении(Элемент)
	
	Если мТекущийВидСчетаФактуры = ВидСчетаФактуры Тогда
		Возврат;
	КонецЕсли;
		
	СписокТипов = ПолучитьСписокТиповПоВидуСчетаФактуры(ВидСчетаФактуры, Исправление);
		
	Если ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаАванс 
		И ДокументыОснования.Количество() > 0 Тогда
		
		Если ДокументыОснования.Количество() > 1 Тогда
			
			ТекстВопроса = "Несколько документов-оснований не может быть указано для счета-фактуры на выданный аванс. 
				|Для продолжения требуется очистить все документы-основания, кроме первого. Продолжить?";
			Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				ВидСчетаФактуры = мТекущийВидСчетаФактуры;
				Возврат;
			Иначе
				
				Если СписокТипов.Найти(ТипЗнч(ДокументыОснования[0].ДокументОснование)) = Неопределено 
					И ЗначениеЗаполнено(ДокументыОснования[0].ДокументОснование) Тогда
					ТекстВопроса = "Выбранный документ-основание не соответствует виду счета-фактуры. 
						|Для продолжения требуется очистить документ-основание. Продолжить?";
					Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
					Если Ответ = КодВозвратаДиалога.Нет Тогда
						ВидСчетаФактуры = мТекущийВидСчетаФактуры;
						Возврат;
					Иначе	
						ДокументыОснования.Очистить();
						ДокументыОснования.Добавить();
					КонецЕсли;	
				Иначе
					ДокументОснованиеПервый = ДокументыОснования[0].ДокументОснование;
					ДокументыОснования.Очистить();
					ДокументыОснования.Добавить();
					ДокументыОснования[0].ДокументОснование = ДокументОснованиеПервый;				
				КонецЕсли;
			КонецЕсли;
			
		Иначе
			
			Если СписокТипов.Найти(ТипЗнч(ДокументыОснования[0].ДокументОснование)) = Неопределено 
				И ЗначениеЗаполнено(ДокументыОснования[0].ДокументОснование) Тогда
				ТекстВопроса = "Выбранный документ-основание не соответствует виду счета-фактуры. 
					|Для продолжения требуется очистить документ-основание. Продолжить?";
				Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
				Если Ответ = КодВозвратаДиалога.Нет Тогда
					ВидСчетаФактуры = мТекущийВидСчетаФактуры;
					Возврат;
				Иначе	
					ДокументыОснования.Очистить();
					ДокументыОснования.Добавить();
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;	
		
		ЭлементыФормы.ДокументыОснования.ТекущаяСтрока = ДокументыОснования[0];
		
		СписокДокументыОснования = Ложь;		
			
	КонецЕсли;
	
	Если ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаАванс 
		ИЛИ (ТипЗнч(ДокументыОснования[0].ДокументОснование) = Тип("ДокументСсылка.ОтчетКомитентуОПродажах")
		И НЕ ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный) Тогда
		
		Если Авансы.Количество() = 0 Тогда
			Авансы.Добавить();
			ЭлементыФормы.Авансы.ТекущаяСтрока = Авансы[0];
		КонецЕсли;
		
	Иначе
		
		Если ТипЗнч(ДокументыОснования[0].ДокументОснование) <> Тип("ДокументСсылка.ОтчетКомитентуОПродажах") Тогда
			Авансы.Очистить();
			СуммаДокумента = 0;
		КонецЕсли;
		
		Если СписокТипов.Найти(ТипЗнч(ДокументыОснования[0].ДокументОснование)) = Неопределено
			И ЗначениеЗаполнено(ДокументыОснования[0].ДокументОснование) Тогда
			ТекстВопроса = "Выбранный документ-основание не соответствует виду счета-фактуры. 
			|Для продолжения требуется очистить документ-основание. Продолжить?";
			Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				ВидСчетаФактуры = мТекущийВидСчетаФактуры;
				Возврат;
			Иначе	
			    ДокументыОснования.Очистить();
				ДокументыОснования.Добавить();
			КонецЕсли;	
		КонецЕсли;	
		
		ЭлементыФормы.ДокументыОснования.ТекущаяСтрока = ДокументыОснования[0];
				
	КонецЕсли;
	
	Если ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаАванс Тогда
		НомерИсходногоДокумента = "";
		ДатаИсходногоДокумента = '00010101';
		УчитыватьИсправлениеИсходногоДокумента = Ложь;
		НомерИсправленияИсходногоДокумента = "";
		ДатаИсправленияИсходногоДокумента = '00010101';
	КонецЕсли;
	
	Если ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный Тогда
		Если ТипЗнч(ДокументыОснования[0].ДокументОснование) = Тип("ДокументСсылка.ОтчетКомитентуОПродажах") Тогда
			Авансы.Очистить();
		КонецЕсли;	
	КонецЕсли;
	
	мТекущийВидСчетаФактуры = ВидСчетаФактуры;
	
	УстановитьКодВидаОперации();
	
	УстановитьВидимость();	
	
КонецПроцедуры

Процедура ИсправлениеПриИзменении(Элемент)
	
	Если НЕ Исправление Тогда
		НомерИсправления = "";
		ДатаИсправления = '00010101';
	Иначе
		Если НЕ МожноИспользоватьДоговорКонтрагента(ДоговорКонтрагента) Тогда
			Исправление = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	УстановитьКодВидаОперации();
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура ИсправлениеИсходногоДокументаПриИзменении(Элемент)
	
	Если НЕ УчитыватьИсправлениеИсходногоДокумента Тогда
		НомерИсправленияИсходногоДокумента = "";
		ДатаИсправленияИсходногоДокумента  = '00010101';
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура СписокДокументыОснованияПриИзменении(Элемент)
	
	Если НЕ СписокДокументыОснования 
		И ДокументыОснования.Количество() > 1 Тогда
		
		ТекстВопроса = "Все строки документов-оснований, кроме первой, будут удалены.
			|Продолжить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			СписокДокументыОснования = Истина;
			Возврат;
		КонецЕсли;
		
		Пока ДокументыОснования.Количество() > 1 Цикл
			СтрокаУдаления = ДокументыОснования[1];
			ДокументыОснования.Удалить(СтрокаУдаления);
		КонецЦикла;
		
		ЭлементыФормы.ДокументыОснования.ТекущаяСтрока = ДокументыОснования[0];
		
		Если ВидСчетаФактуры <> Перечисления.ВидСчетаФактурыПолученного.НаАванс Тогда
			ОпределениеПараметровСчетаФактуры();
		КонецЕсли;
		
	Иначе
		
		ЭлементыФормы.ДокументыОснования.ТекущаяСтрока = ДокументыОснования[0];
		
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура ДокументОснованиеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	НачалоВыбораДокументаОснования(Элемент, СтандартнаяОбработка, Истина);
	
КонецПроцедуры

Процедура ДокументОснованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение)
		И (ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный ИЛИ Исправление) Тогда 
			
		Если ВыбранноеЗначение.Метаданные().Реквизиты.Найти("ДоговорКонтрагента") <> Неопределено
			И НЕ МожноИспользоватьДоговорКонтрагента(ВыбранноеЗначение.ДоговорКонтрагента) Тогда			
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДокументОснованиеПриИзменении(Элемент)
	
	Если ВидСчетаФактуры <> Перечисления.ВидСчетаФактурыПолученного.НаАванс Тогда
		
		СтараяОрганизация = Организация;
		ОпределениеПараметровСчетаФактуры();
		Если Организация <> СтараяОрганизация Тогда
			Номер = "";
		КонецЕсли;
		
	Иначе	
		
		СуммаДокумента = 0;
		Авансы.Очистить();
				
		ЗаполнитьСчетФактуруНаАванс();
		
		Если Авансы.Количество() = 0 Тогда
			Авансы.Добавить();
		КонецЕсли;
		ЭлементыФормы.Авансы.ТекущаяСтрока = Авансы[0];
		
	КонецЕсли;
	
	Если ТипЗнч(Элемент.Значение) = Тип("ДокументСсылка.ОтчетКомитентуОПродажах") Тогда
		Если Авансы.Количество() = 0 Тогда
			Авансы.Добавить();
		КонецЕсли;
		ЭлементыФормы.Авансы.ТекущаяСтрока = Авансы[0];
	КонецЕсли;
	
	УстановитьВидимость();

КонецПроцедуры

Процедура СписокАвансыНесколькоПриИзменении(Элемент)
	
	Если НЕ СписокАвансы 
		И Авансы.Количество() > 1 Тогда
		
		ТекстВопроса = "Все строки по суммам авансов, кроме первой, будут удалены.
			|Продолжить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			СписокАвансы = Истина;
			Возврат;
		КонецЕсли;
		
		Пока Авансы.Количество() > 1 Цикл
			СтрокаУдаления = Авансы[1];
			Авансы.Удалить(СтрокаУдаления);
		КонецЦикла;
		
		ЭлементыФормы.Авансы.ТекущаяСтрока = Авансы[0];
		
	Иначе
		
		ЭлементыФормы.Авансы.ТекущаяСтрока = Авансы[0];
		
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура СуммаСНДСПриИзменении(Элемент)
	
	ТекущиеДанные = ЭлементыФормы.Авансы.ТекущиеДанные;
	ТекущиеДанные.СуммаНДС = УчетНДС.РассчитатьСуммуНДС(
		ТекущиеДанные.Сумма, Истина, Истина, УчетНДС.ПолучитьСтавкуНДС(ТекущиеДанные.СтавкаНДС));
	
	РассчитатьСуммуДокумента();

КонецПроцедуры      

Процедура СтавкаНДСПриИзменении(Элемент)
	
	ТекущиеДанные = ЭлементыФормы.Авансы.ТекущиеДанные;
	ТекущиеДанные.СуммаНДС = УчетНДС.РассчитатьСуммуНДС(
		ТекущиеДанные.Сумма, Истина, Истина, УчетНДС.ПолучитьСтавкуНДС(ТекущиеДанные.СтавкаНДС));
		
	РассчитатьСуммуДокумента();

КонецПроцедуры

Процедура КодВидаОперацииНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущийКод = Элемент.СписокВыбора.НайтиПоЗначению(КодВидаОперации);
	ВыбранныйКод = ВыбратьИзСписка(Элемент.СписокВыбора, Элемент, ТекущийКод);
	Если ВыбранныйКод <> Неопределено Тогда
		КодВидаОперации = ВыбранныйКод.Значение;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТекстСостоянияЭДНажатие(Элемент)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Уникальность", 	Ссылка.УникальныйИдентификатор());
	ПараметрыОткрытия.Вставить("Источник", 		ЭтаФорма);
	
	ЭлектронныеДокументыКлиент.ОткрытьДеревоЭД(Ссылка, ПараметрыОткрытия);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОЙ ЧАСТИ "ДокументыОснования"

Процедура ДокументыОснованияПередУдалением(Элемент, Отказ)
	
	Отказ = ДокументыОснования.Количество() = 1;
	
КонецПроцедуры

Процедура ДокументыОснованияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Копирование Тогда
		Элемент.ТекущаяСтрока.ДокументОснование = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДокументыОснованияДокументОснованиеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	НачалоВыбораДокументаОснования(Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ДокументыОснованияДокументОснованиеПриИзменении(Элемент)
	
	// надо проверить, а не выбран ли уже в качестве документа основания этот документ
	ТекЗначение = Элемент.Значение;
	
	Если Не ЗначениеЗаполнено(ТекЗначение) Тогда
	    Возврат;
	КонецЕсли; 
	
	УжеВыбран = Ложь;
	Для Каждого СтрДокОснования Из ДокументыОснования Цикл
		Если (СтрДокОснования.ДокументОснование = ТекЗначение)
		   И (СтрДокОснования.НомерСтроки <> ЭлементыФормы.ДокументыОснования.ТекущаяСтрока.НомерСтроки) Тогда
			УжеВыбран = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если УжеВыбран Тогда
		Сообщить("Данный документ уже выбран в качестве документа-основания. Повторный выбор не допускается.");
		Элемент.Значение = Неопределено;
	КонецЕсли;
	
	ОпределениеПараметровСчетаФактуры();
	
	УстановитьВидимость();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОЙ ЧАСТИ "Авансы"

Процедура АвансыПередУдалением(Элемент, Отказ)
	
	Отказ = Авансы.Количество() = 1;
	
КонецПроцедуры

Процедура АвансыПослеУдаления(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры
 
Процедура АвансыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НЕ ОтменаРедактирования Тогда
		РассчитатьСуммуДокумента();
	КонецЕсли;
	
КонецПроцедуры

Процедура АвансыСуммаПриИзменении(Элемент)
	
	ТекущиеДанные = ЭлементыФормы.Авансы.ТекущиеДанные;
	ТекущиеДанные.СуммаНДС = УчетНДС.РассчитатьСуммуНДС(
		ТекущиеДанные.Сумма, Истина, Истина, УчетНДС.ПолучитьСтавкуНДС(ТекущиеДанные.СтавкаНДС));
	
КонецПроцедуры

Процедура АвансыСтавкаНДСПриИзменении(Элемент)
	
	ТекущиеДанные = ЭлементыФормы.Авансы.ТекущиеДанные;
	ТекущиеДанные.СуммаНДС = УчетНДС.РассчитатьСуммуНДС(
		ТекущиеДанные.Сумма, Истина, Истина, УчетНДС.ПолучитьСтавкуНДС(ТекущиеДанные.СтавкаНДС));
	
КонецПроцедуры


мИспользоватьОбменЭД = ПолучитьФункциональнуюОпцию("ИспользоватьОбменЭД");