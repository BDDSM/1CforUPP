////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мИспользоватьОбменЭД; // Переменная содержит значение функциональной опции "ИспользоватьОбменЭД"

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ 
//  Процедура печатает выбранный документ 
// Печатается та форма, которая была отпечатана при нажатии в документе кнопки
// печати по умолчанию
//
Процедура ДействияФормыДействиеПечать(Кнопка)

	Если ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокументИзФормыСписка(ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока.ПолучитьОбъект());

КонецПроцедуры // ДействиеПечать()

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	Если ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	РаботаСДиалогами.НапечататьДвиженияДокумента(ЭлементыФормы.Список.ТекущиеДанные.Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура вызывается при выборе пункта подменю "Структура подчиненности" меню "Перейти".
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(ЭлементыФормы.Список.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

// Процедура открывает список ЭД по текущему документу
//
Процедура ДействияФормыСписокЭлектронныхДокументов(Кнопка)
	
	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Ссылка = ЭлементыФормы.Список.ТекущиеДанные.Ссылка;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Уникальность", 	Ссылка.УникальныйИдентификатор());
	ПараметрыОткрытия.Вставить("Источник", 		ЭтаФорма);

	ЭлектронныеДокументыКлиент.ОткрытьСписокЭД(Ссылка, ПараметрыОткрытия)
	
КонецПроцедуры

Процедура ДействияФормыОткрытьАктуальныйЭД(Кнопка)
	
	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ЭлектронныеДокументыКлиент.ОткрытьАктуальныйЭД(ЭлементыФормы.Список.ТекущиеДанные.Ссылка, ЭтаФорма);
	
КонецПроцедуры

Процедура ДействияФормыПерезаполнитьДаннымиИзЭД(Кнопка)
	
	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭлектронныеДокументыКлиент.ПерезаполнитьДокумент(ЭлементыФормы.Список.ТекущиеДанные.Ссылка, ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТЧ Список

Процедура СписокПриПолученииДанных(Элемент, ОформленияСтрок)
	
	// ЭлектронныеДокументы
	Если НЕ мИспользоватьОбменЭД 
	 ИЛИ НЕ (Элемент.Колонки.СостояниеЭД.Видимость
	  ИЛИ Элемент.Колонки.ДействияСНашейСтороны.Видимость
	  ИЛИ Элемент.Колонки.ДействияСоСтороныДругогоУчастника.Видимость) Тогда
		Возврат;
	КонецЕсли;
	
	// Сформируем массив документов для получения состояния 
	ДокументыДляПолученияСостояния = Новый Массив();
	Для каждого ОформлениеСтроки из ОформленияСтрок Цикл
		ДокументыДляПолученияСостояния.Добавить(ОформлениеСтроки.ДанныеСтроки.Ссылка);
	КонецЦикла;
	
	СостоянияЭД = ЭлектронныеДокументы.ПолучитьТекстСостоянияЭДПоВладельцам(ДокументыДляПолученияСостояния, Истина);
	
	Для каждого оформлениеСтроки из ОформленияСтрок Цикл
		ОформлениеСтроки.Ячейки.СостояниеЭД.Видимость = Ложь;
		
		СостояниеЭД = СостоянияЭД[ОформлениеСтроки.ДанныеСтроки.Ссылка];
		ДействияСНашейСтороны 			  = ?(СостояниеЭД = Неопределено, "", СостояниеЭД.ДействияСНашейСтороны);
		ДействияСоСтороныДругогоУчастника = ?(СостояниеЭД = Неопределено, "", СостояниеЭД.ДействияСоСтороныДругогоУчастника);
		
		ОформлениеСтроки.Ячейки.ДействияСНашейСтороны.УстановитьТекст(ДействияСНашейСтороны);
		ОформлениеСтроки.Ячейки.ДействияСоСтороныДругогоУчастника.УстановитьТекст(ДействияСоСтороныДругогоУчастника);
		
	КонецЦикла
	// Конец ЭлектронныеДокументы
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриОткрытии" формы
//
// Параметры
//  Нет
//
Процедура ПриОткрытии()
	
	// ЭлектронныеДокументы
	Если НЕ мИспользоватьОбменЭД Тогда 
		ЭлементыФормы.Список.Колонки.СостояниеЭД.Видимость = Ложь;
		ЭлементыФормы.Список.Колонки.ДействияСНашейСтороны.Видимость = Ложь;
		ЭлементыФормы.Список.Колонки.ДействияСоСтороныДругогоУчастника.Видимость = Ложь;
	КонецЕсли;
	// ЭлектронныеДокументы
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ЭлектронныеДокументы
	Если ИмяСобытия = "ОбновитьСостояниеЭД" Тогда
		ДокументСписок.Обновить();	
	КонецЕсли;	
	// Конец ЭлектронныеДокументы
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// ЭлектронныеДокументы
	РаботаСДиалогами.УдалитьКнопкуЭД(ЭлементыФормы.ДействияФормы.Кнопки, мИспользоватьОбменЭД);
	// Конец ЭлектронныеДокументы
	
КонецПроцедуры
	
	
мИспользоватьОбменЭД = ПолучитьФункциональнуюОпцию("ИспользоватьОбменЭД");