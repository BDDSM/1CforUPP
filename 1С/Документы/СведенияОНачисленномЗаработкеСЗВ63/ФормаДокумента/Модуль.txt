////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента; 

// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;

// Хранит элемент управления подменю печати
Перем мПодменюПечати;

// Хранит элемент управления кнопку печать по умолчанию
Перем мПечатьПоУмолчанию;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

// Хранит ссылку на головную организацию
Перем мГоловнаяОрганизация;

Перем мТекущийСотрудник;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ПоказатьЭлементыФормы()

	Записан = Не ЭтоНовый();
	ЭлементыФормы.НомерПачки.АвтоОтметкаНезаполненного = Записан;
	ЭлементыФормы.НомерПачки.ОтметкаНезаполненного = Записан И Не ЗначениеЗаполнено(НомерПачки);
	
	Если ПринятоВПФР Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Закрыть.КнопкаПоУмолчанию = Истина;
	Иначе 	
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОК.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	ЭлементыФормы.ПринятоВПФР.Доступность = Проведен;
	
	Если СотрудникиОрганизации.Количество() = 0 Тогда
		
		ЭлементыФормы.СведенияОЗаработке.ОтборСтрок.ФизЛицо.Установить(Справочники.СотрудникиОрганизаций.ПустаяСсылка());
		ЭлементыФормы.СведенияОЗаработке.ТолькоПросмотр = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриИзмененииФизлица(СтрокаТабличнойЧасти, УстанавливатьОтбор = Истина)

	Если СтрокаТабличнойЧасти = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	НовыеДанные = ПроцедурыПерсонифицированногоУчета.ДанныеФизЛицаДляДокументаПерсучета(СтрокаТабличнойЧасти.Физлицо, Дата, Неопределено, Неопределено, Неопределено);
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,НовыеДанные);
	
	Для каждого СтрокаТЧ Из СведенияОЗаработке.НайтиСтроки(Новый Структура("ФизЛицо",мТекущийСотрудник)) Цикл
		СведенияОЗаработке.Удалить(СтрокаТЧ)
	КонецЦикла;
	
	РассчитатьЗаработок(СтрокаТабличнойЧасти, мГоловнаяОрганизация);
	Если УстанавливатьОтбор Тогда
		ЭлементыФормы.СведенияОЗаработке.ОтборСтрок.ФизЛицо.Установить(СтрокаТабличнойЧасти.ФизЛицо);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриИзмененииОрганизации()

   	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ПроцедурыПерсонифицированногоУчета.ДанныеРуководителяОрганизации(Организация, Дата));
	СписокКатегорийЗастрахованныхЛиц = ПроцедурыПерсонифицированногоУчета.КатегорииЗастрахованныхЛицОрганизации(Организация, мГоловнаяОрганизация, Дата(ОтчетныйПериод,1,1), КонецГода(Дата(ОтчетныйПериод,1,1)));
	КатегорияЗастрахованныхЛиц = СписокКатегорийЗастрахованныхЛиц[0].Значение;
	ЭлементыФормы.КатегорияЗастрахованныхЛиц.ДоступныеЗначения = СписокКатегорийЗастрахованныхЛиц;
	НомерПачки = "";
	ОписьАДВ62 = "";
КонецПроцедуры

Процедура УстановитьЗаголовкиОрганизацийВФорме()
	
	ЭлементыФормы.НадписьОрганизация.Заголовок 	= ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация:");
	ЭлементыФормы.Организация.Подсказка 		= ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация");
	
КонецПроцедуры // УстановитьЗаголовкиОрганизацийВФорме()

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.СотрудникиОрганизации,ЭлементыФормы.КоманднаяПанельСотрудникиОрганизации.Кнопки.Заполнить);
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧ(Ссылка, СоответствиеТЧ, Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
КонецПроцедуры

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	
	мДеревоМакетов = УниверсальныеМеханизмы.ПолучитьДеревоМакетовПечати(Ссылка, ПолучитьСтруктуруПечатныхФорм(), Новый Действие("ОсновныеДействияФормыПечать"), Новый Действие("ОсновныеДействияФормыУстановитьПечатьПоУмолчанию"));

	УниверсальныеМеханизмы.УстановитьПодменюПечати    (мПодменюПечати, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов);
	УниверсальныеМеханизмы.УстановитьПечатьПоУмолчанию(мПечатьПоУмолчанию, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов, Метаданные().Имя,Новый Действие("ОсновныеДействияФормыПечатьПоУмолчанию"));

	Если Не мПодменюПечати = Неопределено Тогда
		УниверсальныеМеханизмы.СформироватьПодменю(мДеревоМакетов, мПодменюПечати,Истина,Истина);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	Если ЭтоНовый() Тогда
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументовПереопределяемый.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"));
		Если Не ЗначениеЗаполнено(ОтчетныйПериод) Тогда
			ОтчетныйПериод = Макс(Год(ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами()),Год(ОбщегоНазначения.ПолучитьРабочуюДату()) - 1);
		КонецЕсли;
		Если ТипСведенийСЗВ.Пустая() Тогда
			ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ;
		КонецЕсли;	 
		Если ТипДоговора.Пустая() Тогда
			ТипДоговора = Перечисления.ТипДоговораСЗВ63.Трудовой;
		КонецЕсли;	 
		ФорматФайла = Перечисления.ФорматФайлаПФР.Версия07;
		НомерПачки = "";
		ПринятоВПФР = Ложь;
	ИначеЕсли Не ПринятоВПФР тогда
		// Установить доступность формы с учетом даты запрета редактирования	
		РаботаСДиалогамиЗК.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
	Иначе
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	ФлажокПринятоВПФР = ПринятоВПФР;

	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	УстановитьЗаголовкиОрганизацийВФорме();
	
	// Получим и запомним ссылку на головную организацию
	мГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента = Дата;
	мТекущийСотрудник = Справочники.ФизическиеЛица.ПустаяСсылка();
	
	Если ЭтоНовый() И КатегорияЗастрахованныхЛиц.Пустая() Тогда
		ПриИзмененииОрганизации();
	Иначе
		ЭлементыФормы.КатегорияЗастрахованныхЛиц.ДоступныеЗначения = ПроцедурыПерсонифицированногоУчета.КатегорииЗастрахованныхЛицОрганизации(Организация, мГоловнаяОрганизация, Дата(ОтчетныйПериод,1,1), КонецГода(Дата(ОтчетныйПериод,1,1)));
	КонецЕсли;
	
	// Установить активный реквизит.
	Если Не РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма) Тогда
		ТекущийЭлемент = ЭлементыФормы.СотрудникиОрганизации;
	КонецЕсли;
	
	РегламентированнаяОтчетность.ПриОткрытииФормыРегламентированногоОтчетаПФР(ЭтаФорма, Новый Действие("КоманднаяПанельФормыДействиеОтправка"));
	
	ПоказатьЭлементыФормы();
	
КонецПроцедуры

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()

	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
	Если ПринятоВПФР Тогда
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
	ПоказатьЭлементыФормы();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
			
КонецПроцедуры


// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		
		УстановитьКнопкиПечати();
		
	КонецЕсли; 
	
	
КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыФайл(Кнопка)
	ПроцедурыПерсонифицированногоУчета.ПоказатьФайлДокумента(ЭтотОбъект,"Файл-пачка документов СЗВ-6-3");
КонецПроцедуры

// Запускает тестирование файла программой проверки
//
Процедура ОсновныеДействияФормыПроверитьВCheckXML(Кнопка)
	
	ТекстВопросаСохранения = "Перед проверкой документ необходимо записать. Записать?";
	ТекстВопросаДействия = "Внимание!" + Символы.ПС + "В рамках одного документа невозможно провести весь комплекс предусмотренных ПФР проверок! " + Символы.ПС + "Для проведения полной проверки комплекта передаваемых сведений Вы можете перейти в рабочее место" + Символы.ПС + "Подготовка данных ПФР (рекомендуется) либо сейчас проверить только эту пачку.";
	ТекстКнопкиДействия = "Проверить текущую пачку";
	ЗаголовокОкна = "Проверка данных";
	
	Если Не ПроцедурыПерсонифицированногоУчета.ПереходВРабочееМестоПФРвОтветНаВопрос(ЭтотОбъект, ЭтаФорма, ТекстВопросаСохранения, ТекстВопросаДействия, ТекстКнопкиДействия, ЗаголовокОкна, Организация, ПроцедурыПерсонифицированногоУчета.НачалоОтчетногоПериодаПерсучета(Дата(ОтчетныйПериод, 12, 31)), ОтчетныйПериод, Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ) Тогда
		ПроцедурыПерсонифицированногоУчета.ПроверитьФайлВCheckXML(ДокументОбъект, ЭтаФорма);
	КонецЕсли;

КонецПроцедуры

// копирует файл с "правильным" именем в указанное пользователем место
//
Процедура ОсновныеДействияФормыНаДискетку(Кнопка)
	
	ТекстВопросаСохранения = "Перед формированием файла документ необходимо записать. Записать?";
	ТекстВопросаДействия = "Внимание!" + Символы.ПС + "В ПФР необходимо передавать файлы перс.учета в одном пакете с расчетом РСВ-1! " + Символы.ПС + "Для формирования полного комплекта передаваемых сведений Вы можете перейти в рабочее место" + Символы.ПС + "Подготовка данных ПФР (рекомендуется) либо сейчас сохранить только этот файл.";
	ТекстКнопкиДействия = "Записать только файл СЗВ-6-3";
	ЗаголовокОкна = "Формирование файлов";
	
	Если Не ПроцедурыПерсонифицированногоУчета.ПереходВРабочееМестоПФРвОтветНаВопрос(ЭтотОбъект, ЭтаФорма, ТекстВопросаСохранения, ТекстВопросаДействия, ТекстКнопкиДействия, ЗаголовокОкна, Организация, ПроцедурыПерсонифицированногоУчета.НачалоОтчетногоПериодаПерсучета(Дата(ОтчетныйПериод, 12, 31)), ОтчетныйПериод, Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ) Тогда
		ОбработкаСообщений = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаСообщений.УдалитьСообщения();
		ПроцедурыПерсонифицированногоУчета.ЗаписатьФайлДокументаНаДискету(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"), ПроцедурыПерсонифицированногоУчета.ПолучитьИмяФайлаПФ(Ссылка, ОтчетныйПериод), "windows-1251");
	КонецЕсли;
	
КонецПроцедуры


// Процедура - вызывается при нажатии на кнопку "Подбор"
//
Процедура КоманднаяПанельСотрудникиОрганизацииПодбор(Кнопка)
	
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(ЭлементыФормы.СотрудникиОрганизации, Ссылка, Ложь, Дата, мГоловнаяОрганизация, 1,,,, Истина);
	
КонецПроцедуры

Процедура КоманднаяПанельСотрудникиОрганизацииЗаполнитьЗаработок(Кнопка)
	
	Если СотрудникиОрганизации.Количество() = 0 Тогда
		СведенияОЗаработке.Очистить();
		Возврат;
	КонецЕсли;
	
	Если ТипДоговора.Пустая() Тогда
		РаботаСДиалогами.ВывестиПредупреждение("Не указан тип договора!");
		Возврат;
	КонецЕсли;
	
	Если КатегорияЗастрахованныхЛиц.Пустая() Тогда
		РаботаСДиалогами.ВывестиПредупреждение("Не указана категория застрахованных лиц!");
		Возврат;
	КонецЕсли;
	
	Вопрос = "Имеющиеся данные о заработке по застрахованным лицам будут обновлены. Продолжить?";
	Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	РассчитатьЗаработок();
	
КонецПроцедуры


Процедура КнопкаОбновитьДанныеОДоходахНажатие(Элемент)
	
	Если ТипДоговора.Пустая() Тогда
		РаботаСДиалогами.ВывестиПредупреждение("Не указан тип договора!");
		Возврат;
	КонецЕсли;
	
	Если КатегорияЗастрахованныхЛиц.Пустая() Тогда
		РаботаСДиалогами.ВывестиПредупреждение("Не указана категория застрахованных лиц!");
		Возврат;
	КонецЕсли;
	
	ПриИзмененииФизлица(ЭлементыФормы.СотрудникиОрганизации.ТекущаяСтрока);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа.
//
Процедура ДатаПриИзменении(Элемент)

	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	Если Год(мТекущаяДатаДокумента) <> Год(Дата) Тогда
		НомерПачки = "";
	КонецЕсли;
	
	мТекущаяДатаДокумента = Дата;

КонецПроцедуры // ДатаПриИзменении

// Процедура - обработчик события "ПриИзменении" поля ввода организации.
//
Процедура ОрганизацияПриИзменении(Элемент)

	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;
	
	// Получим и запомним ссылку на головную организацию
	мГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);

	ПриИзмененииОрганизации();
	
	РегламентированнаяОтчетность.ПриИзмененииОрганизацииВРегламентированномОтчетеПФР(ЭтаФорма, Новый Действие("КоманднаяПанельФормыДействиеОтправка"));
	
КонецПроцедуры // ОрганизацияПриИзменении()

Процедура ОтчетныйПериодПриИзменении(Элемент)
	СписокКатегорийЗастрахованныхЛиц = ПроцедурыПерсонифицированногоУчета.КатегорииЗастрахованныхЛицОрганизации(Организация, мГоловнаяОрганизация, Дата(ОтчетныйПериод,1,1), КонецГода(Дата(ОтчетныйПериод,1,1)));
	Если СписокКатегорийЗастрахованныхЛиц.НайтиПоЗначению(КатегорияЗастрахованныхЛиц) = Неопределено Тогда
		КатегорияЗастрахованныхЛиц = СписокКатегорийЗастрахованныхЛиц[0].Значение;
	КонецЕсли;
	ЭлементыФормы.КатегорияЗастрахованныхЛиц.ДоступныеЗначения = СписокКатегорийЗастрахованныхЛиц;
	ОписьАДВ62 = "";
КонецПроцедуры

Процедура ОписьАДВ62НачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	//Предложим для выбора список расчетов, имеющих способ расчета, соответствующий указанной форме оплаты
	ФормаВыбора = Документы.ПередачаСЗВ4вПФР.ПолучитьФормуВыбора("ФормаВыбора", Элемент, "дляДокументаСведенияОНачисленномЗаработкеСЗВ63");
	
	ФормаВыбора.НачальноеЗначениеВыбора = Элемент.Значение;
	
	ФормаВыбора.Отбор.Организация.ВидСравнения = ВидСравнения.Равно;
	ФормаВыбора.Отбор.Организация.Значение = Организация;
	ФормаВыбора.Отбор.Организация.Использование = Истина;
	ФормаВыбора.Отбор.ОтчетныйПериод.ВидСравнения = ВидСравнения.Равно;
	ФормаВыбора.Отбор.ОтчетныйПериод.Значение = ПроцедурыПерсонифицированногоУчета.НачалоОтчетногоПериодаПерсучета(Дата(ОтчетныйПериод,12,1));
	ФормаВыбора.Отбор.ОтчетныйПериод.Использование = Истина;

	ФормаВыбора.Открыть();
	
КонецПроцедуры

Процедура ПринятоВПФРПриИзменении(Элемент)
	
	ПринятоВПФР = ФлажокПринятоВПФР;
	
	Если Не ПринятоВПФР Тогда
		ТолькоПросмотр = Ложь;
		РаботаСДиалогамиЗК.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
	КонецЕсли;
	
	ПоказатьЭлементыФормы();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ

// Процедура - обработчик ожидания события "ПриАктивизацииСтроки"
//
Процедура ОбработчикОжиданияСотрудникиОрганизацииПриАктивизацииСтроки()
	
	ТекущаяСтрока = ЭлементыФормы.СотрудникиОрганизации.ТекущаяСтрока;
	
	НетОтображаемыхСтрок = ТекущаяСтрока = Неопределено;
	Если НетОтображаемыхСтрок Тогда
		мТекущийСотрудник = Справочники.ФизическиеЛица.ПустаяСсылка();
	Иначе 
		мТекущийСотрудник = ТекущаяСтрока.ФизЛицо;
	КонецЕсли;
	
	ЭлементыФормы.СведенияОЗаработке.ОтборСтрок.ФизЛицо.Установить(мТекущийСотрудник);
	ЭлементыФормы.СведенияОЗаработке.ТолькоПросмотр = ТолькоПросмотр Или НетОтображаемыхСтрок;
	
КонецПроцедуры

Процедура СотрудникиОрганизацииПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("ОбработчикОжиданияСотрудникиОрганизацииПриАктивизацииСтроки", 0.1, Истина);
КонецПроцедуры

Процедура СотрудникиОрганизацииПередУдалением(Элемент, Отказ)
	Для каждого СтрокаТЧ Из СведенияОЗаработке.НайтиСтроки(Новый Структура("ФизЛицо",Элемент.ТекущаяСтрока.ФизЛицо)) Цикл
		СведенияОЗаработке.Удалить(СтрокаТЧ)
	КонецЦикла;
КонецПроцедуры

Процедура СотрудникиОрганизацииПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если Не ОтменаРедактирования Тогда
		ТекущееФизЛицо = Элемент.ТекущаяСтрока.ФизЛицо;
		НомерСтроки = Элемент.ТекущаяСтрока.НомерСтроки;
		Для каждого СтрокаТЧ Из СотрудникиОрганизации Цикл
			Если НомерСтроки = СтрокаТЧ.НомерСтроки Тогда
				Продолжить;
			КонецЕсли;
			Отказ = ТекущееФизЛицо = СтрокаТЧ.ФизЛицо;
			Если Отказ Тогда
				РаботаСДиалогами.ВывестиПредупреждение("В пачке сотрудники не могут повторяться!");
				Возврат
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;
КонецПроцедуры

// Процедура - обработчик оповещения о выборе, присланного формой рег-ра сведений
//
Процедура СотрудникиОрганизацииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) <> Тип("СправочникСсылка.ФизическиеЛица") Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
		
	Физлицо = ВыбранноеЗначение;
		
	Если СотрудникиОрганизации.НайтиСтроки(Новый Структура("ФизЛицо", ФизЛицо)).Количество() = 0 Тогда
		СтрокаТабличнойЧасти = СотрудникиОрганизации.Добавить();
		СтрокаТабличнойЧасти.Физлицо = Физлицо;
		мТекущийСотрудник = Физлицо;
		ПриИзмененииФизлица(СтрокаТабличнойЧасти, Ложь);
		Если ЭлементыФормы.СотрудникиОрганизации.ТекущаяСтрока = Неопределено Тогда
			ЭлементыФормы.СотрудникиОрганизации.ТекущаяСтрока = СотрудникиОрганизации[0]
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры  // ТабличнаяЧастьОбработкаВыбора

Процедура СведенияОЗаработкеПередНачаломИзменения(Элемент, Отказ)
	Отказ = ЭлементыФормы.СотрудникиОрганизации.ТекущаяСтрока = Неопределено
КонецПроцедуры

Процедура СведенияОЗаработкеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущаяСтрока = Элемент.ТекущаяСтрока;
	Если НоваяСтрока И Не Копирование Тогда
        ТекущаяСтрока.Месяц = 1;
		ТекущаяСтрока.Физлицо = ЭлементыФормы.СотрудникиОрганизации.ТекущаяСтрока.Физлицо
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОЙ ЧАСТИ СотрудникиОрганизации

// Процедура - обработчик события "ПриИзменении" поля ввода физлица
// переопеределим выбор физлица на выбор из списка регистра сведений
//
Процедура СотрудникиОрганизацииФизЛицоПриИзменении(Элемент)
	ПриИзмененииФизлица(ЭлементыФормы.СотрудникиОрганизации.ТекущаяСтрока);
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода физлица
// переопеределим выбор физлица на выбор из списка регистра сведений
//
Процедура СотрудникиОрганизацииФизЛицоНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(Элемент, Ссылка, Истина, Дата, мГоловнаяОрганизация, 1, СтандартнаяОбработка, Элемент.Значение,, Истина);
	
КонецПроцедуры

Процедура СотрудникиОрганизацииФизЛицоОткрытие(Элемент, СтандартнаяОбработка)
	
	ПроцедурыУправленияПерсоналом.ОбработкаОткрытияФизлица(Элемент, Ссылка, Элемент.Значение, мГоловнаяОрганизация, СтандартнаяОбработка);
	
КонецПроцедуры

// Процедура - обработчик события "АвтоПодборТекста" поля ввода физлица
// переопеределим выбор физлица на выбор из списка регистра сведений
//
Процедура СотрудникиОрганизацииФизЛицоАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	ТекстАвтоПодбора = ПроцедурыУправленияПерсоналомПереопределяемый.ПодобратьФИОСотрудника(СтандартнаяОбработка, 1, Текст, Организация, Истина);
КонецПроцедуры

// Процедура - обработчик события "ОкончаниеВводаТекста" поля ввода физлица
// переопеределим выбор физлица на выбор из списка регистра сведений
//
Процедура СотрудникиОрганизацииФизЛицоОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	Значение = ПроцедурыУправленияПерсоналомПереопределяемый.ПодобратьСписокСотрудников(СтандартнаяОбработка, 1, Текст, Организация, Истина);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МЕХАНИЗМА ЗАЩИЩЕННОГО ДОКУМЕНТООБОРОТА С ПФР

Процедура КоманднаяПанельФормыДействиеОтправка(Кнопка)
	
	РегламентированнаяОтчетность.ПриНажатииНаКнопкуОтправкиВРегламентированномОтчетеПФР(ЭтаФорма, Кнопка);
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если КонтекстЭДО <> Неопределено Тогда
		КонтекстЭДО.ОбработкаОповещенияФормыРегламентированногоОтчетаПФР(ЭтаФорма, ИмяСобытия, Параметр, Источник);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ