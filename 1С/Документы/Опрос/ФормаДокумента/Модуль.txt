////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// хранит старое значение элемент "Типовая анкета"
Перем мСтараяТиповаяАнкета;

// Хранит последнюю установленную дату документа - для проверки перехода документа в другой период
Перем мТекущаяДатаДокумента;

// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;

// Хранит элемент управления подменю печати
Перем мПодменюПечати;

// Хранит элемент управления кнопку печать по умолчанию
Перем мПечатьПоУмолчанию;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

Перем мФормаОткрытаИзЗаявкиКандидата Экспорт;

Перем ЭтоОпрос;
Перем ЕстьОбязательныеВопросы;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	
	мДеревоМакетов = УниверсальныеМеханизмы.ПолучитьДеревоМакетовПечати(Ссылка, ПолучитьСтруктуруПечатныхФорм(), Новый Действие("ОсновныеДействияФормыПечать"), Новый Действие("ОсновныеДействияФормыУстановитьПечатьПоУмолчанию"));

	УниверсальныеМеханизмы.УстановитьПодменюПечати    (мПодменюПечати, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов);
	УниверсальныеМеханизмы.УстановитьПечатьПоУмолчанию(мПечатьПоУмолчанию, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов, Метаданные().Имя,Новый Действие("ОсновныеДействияФормыПечатьПоУмолчанию"));

	Если Не мПодменюПечати = Неопределено Тогда
		УниверсальныеМеханизмы.СформироватьПодменю(мДеревоМакетов, мПодменюПечати,Истина,Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьЗаголовокФормыДокумента()
	
	Если ТиповаяАнкета.Пустая() Тогда
		СтрокаЗаголовокФормы = "Опрос. ";
		
	Иначе
		СтрокаЗаголовокФормы = Строка(ТиповаяАнкета);
		
		Если ОпрашиваемоеЛицо = Неопределено ИЛИ ОпрашиваемоеЛицо.Пустая() Тогда
			СтрокаЗаголовокФормы = СтрокаЗаголовокФормы + ". ";
			
		Иначе
			СтрокаЗаголовокФормы = СтрокаЗаголовокФормы + ": " + Строка(ОпрашиваемоеЛицо) + ". ";
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		СтрокаЗаголовокФормы = СтрокаЗаголовокФормы + "Новый";
	Иначе
		Если Проведен Тогда
			СтрокаЗаголовокФормы = СтрокаЗаголовокФормы + "Проведен";
		Иначе
			СтрокаЗаголовокФормы = СтрокаЗаголовокФормы + "Не проведен";
		КонецЕсли;
	КонецЕсли;
		
	Заголовок = СтрокаЗаголовокФормы;

КонецПроцедуры


// Процедура изменяет видимость и доступность элементов управления в зависимости от вида анкеты
//
Процедура ИзменитьВидимостьДоступностьПоВидуАнкеты()
	
	Если РольДоступна("ПолныеПрава") ИЛИ РольДоступна("ПравоАдминистрирования") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ТиповаяАнкета.Пустая() И ТиповаяАнкета.ВидАнкеты = Перечисления.ВидыАнкет.Тестирование Тогда
		ЭлементыФормы.ПанельОтветов.ТекущаяСтраница		= ЭлементыФормы.ПанельОтветов.Страницы.Тестирование;
		ЭлементыФормы.ОпрашиваемоеЛицо.ТолькоПросмотр	= Истина;
		ЭлементыФормы.ТиповаяАнкета.ТолькоПросмотр		= Истина;
		
	Иначе
		ЭлементыФормы.ПанельОтветов.ТекущаяСтраница		= ЭлементыФормы.ПанельОтветов.Страницы.Опрос;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьСписокВопросов()
	
	Если НЕ РаботаСДиалогами.ЗаписатьНовыйОбъектВФорме(ЭтаФорма) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ДокументОпрос",	Ссылка);
	Запрос.УстановитьПараметр("ТиповаяАнкета",	ТиповаяАнкета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВопросыАнкеты.НомерСтроки КАК НомерСтроки,
	|	ВопросыАнкеты.Раздел КАК Раздел,
	|	ВопросыАнкеты.Вопрос КАК Вопрос,
	|	ОпросВопросы.Ответ,
	|	ОпросВопросы.ТиповойОтвет,
	|	-1 КАК НомерСтрокиВТаблице,
	|	NULL КАК КолонкаТаблицы,
	|	ВопросыАнкеты.ТипОтветаНаВопрос КАК ТипОтветаНаВопрос,
	|	NULL КАК НомерСтрокиКолонки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТиповыеАнкетыВопросыАнкеты.Раздел КАК Раздел,
	|		ТиповыеАнкетыВопросыАнкеты.Вопрос КАК Вопрос,
	|		ТиповыеАнкетыВопросыАнкеты.НомерСтроки КАК НомерСтроки,
	|		ТиповыеАнкетыВопросыАнкеты.Вопрос.ТипОтветаНаВопрос КАК ТипОтветаНаВопрос
	|	ИЗ
	|		Справочник.ТиповыеАнкеты.ВопросыАнкеты КАК ТиповыеАнкетыВопросыАнкеты
	|	ГДЕ
	|		ТиповыеАнкетыВопросыАнкеты.Ссылка = &ТиповаяАнкета) КАК ВопросыАнкеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Опрос.Вопросы КАК ОпросВопросы
	|		ПО ВопросыАнкеты.Вопрос = ОпросВопросы.Вопрос
	|			И (ОпросВопросы.Ссылка = &ДокументОпрос)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВопросыАнкеты.НомерСтроки,
	|	ВопросыАнкеты.Раздел,
	|	ВопросыАнкеты.Вопрос,
	|	ОпросСоставнойОтвет.Ответ,
	|	ОпросСоставнойОтвет.ТиповойОтвет,
	|	ОпросСоставнойОтвет.НомерСтрокиВТаблице,
	|	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы,
	|	ВопросыАнкеты.ТипОтветаНаВопрос,
	|	ВопросыДляАнкетированияКолонкиТаблицы.НомерСтроки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТиповыеАнкетыВопросыАнкеты.Раздел КАК Раздел,
	|		ТиповыеАнкетыВопросыАнкеты.Вопрос КАК Вопрос,
	|		ТиповыеАнкетыВопросыАнкеты.НомерСтроки КАК НомерСтроки,
	|		ТиповыеАнкетыВопросыАнкеты.Вопрос.ТипОтветаНаВопрос КАК ТипОтветаНаВопрос
	|	ИЗ
	|		Справочник.ТиповыеАнкеты.ВопросыАнкеты КАК ТиповыеАнкетыВопросыАнкеты
	|	ГДЕ
	|		ТиповыеАнкетыВопросыАнкеты.Ссылка = &ТиповаяАнкета) КАК ВопросыАнкеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Опрос.СоставнойОтвет КАК ОпросСоставнойОтвет
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы КАК КолонкаТаблицы,
	|				ВопросыДляАнкетированияКолонкиТаблицы.НомерСтроки КАК НомерСтроки,
	|				ВопросыДляАнкетированияКолонкиТаблицы.Ссылка.КоличествоСтрокТаблицы КАК КоличествоСтрокТаблицы
	|			ИЗ
	|				ПланВидовХарактеристик.ВопросыДляАнкетирования.КолонкиТаблицы КАК ВопросыДляАнкетированияКолонкиТаблицы
	|			ГДЕ
	|				ВопросыДляАнкетированияКолонкиТаблицы.Ссылка В
	|						(ВЫБРАТЬ
	|							ТиповыеАнкетыВопросыАнкеты.Вопрос
	|						ИЗ
	|							Справочник.ТиповыеАнкеты.ВопросыАнкеты КАК ТиповыеАнкетыВопросыАнкеты
	|						ГДЕ
	|							ТиповыеАнкетыВопросыАнкеты.Ссылка = &ТиповаяАнкета)) КАК ВопросыДляАнкетированияКолонкиТаблицы
	|			ПО ОпросСоставнойОтвет.Вопрос = ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы
	|		ПО ВопросыАнкеты.Вопрос = ОпросСоставнойОтвет.ВопросВладелец
	|			И (ОпросСоставнойОтвет.Ссылка = &ДокументОпрос)
	|ГДЕ
	|	(ВопросыДляАнкетированияКолонкиТаблицы.КоличествоСтрокТаблицы >= ОпросСоставнойОтвет.НомерСтрокиВТаблице
	|				И ОпросСоставнойОтвет.ВопросВладелец.ТипОтветаНаВопрос = ЗНАЧЕНИЕ(Перечисление.ТипыОтветаНаВопросАнкеты.Табличный)
	|			ИЛИ ОпросСоставнойОтвет.ВопросВладелец.ТипОтветаНаВопрос = ЗНАЧЕНИЕ(Перечисление.ТипыОтветаНаВопросАнкеты.НесколькоВариантовОтвета))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	НомерСтрокиВТаблице,
	|	НомерСтрокиКолонки
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Вопросы.Очистить();
	СоставнойОтвет.Очистить();
	
	СтруктураУсловийОтвета = Новый Структура;
	
	ВыборкаЗапроса = Запрос.Выполнить().Выбрать();
	Пока ВыборкаЗапроса.СледующийПоЗначениюПоля("НомерСтроки") Цикл
		Если ВыборкаЗапроса.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Табличный
		 ИЛИ ВыборкаЗапроса.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.НесколькоВариантовОтвета тогда
			НоваяСтрока = Вопросы.Добавить();
			НоваяСтрока.Вопрос			= ВыборкаЗапроса.Вопрос;
			НоваяСтрока.Ответ			= ВыборкаЗапроса.Ответ;
			
			Пока ВыборкаЗапроса.Следующий() Цикл
				Если НЕ ЗначениеЗаполнено(ВыборкаЗапроса.КолонкаТаблицы) И (ВыборкаЗапроса.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Табличный) тогда
					Продолжить;
				КонецЕСли;
				Если НЕ ЗначениеЗаполнено(ВыборкаЗапроса.ТиповойОтвет) И (ВыборкаЗапроса.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.НесколькоВариантовОтвета) тогда
					Продолжить;
				КонецЕсли;
				
				НоваяСтрока = СоставнойОтвет.Добавить();
				Если ВыборкаЗапроса.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.НесколькоВариантовОтвета тогда
					НоваяСтрока.Вопрос			= ВыборкаЗапроса.Вопрос;
				Иначе
					НоваяСтрока.Вопрос			= ВыборкаЗапроса.КолонкаТаблицы;
				КонецЕсли;
				
				НоваяСтрока.ВопросВладелец		= ВыборкаЗапроса.Вопрос;
				Если ЗначениеЗаполнено(ВыборкаЗапроса.ТиповойОтвет) тогда
					НоваяСтрока.ТиповойОтвет	= ВыборкаЗапроса.ТиповойОтвет;
				Иначе
					НазначитьТипОтвета(НоваяСтрока);
				КонецЕсли;
				НоваяСтрока.Ответ				= ВыборкаЗапроса.Ответ;
				НоваяСтрока.НомерСтрокиВТаблице	= ВыборкаЗапроса.НомерСтрокиВТаблице;
			КонецЦикла;
			
		Иначе
			НоваяСтрока = Вопросы.Добавить();
			НоваяСтрока.Вопрос	= ВыборкаЗапроса.Вопрос;
			
			Пока ВыборкаЗапроса.Следующий() Цикл
				Если НЕ ЗначениеЗаполнено(ВыборкаЗапроса.ТиповойОтвет) тогда
					НазначитьТипОтвета(НоваяСтрока);
					Продолжить;
				КонецЕсли;
				НоваяСтрока.ТиповойОтвет	= ВыборкаЗапроса.ТиповойОтвет;
				НоваяСтрока.Ответ			= ВыборкаЗапроса.Ответ;
			КонецЦикла;
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ИзменитьВидимостьДоступностьРеквизитаОпросЗавершен()
	
	Если НЕ мФормаОткрытаИзЗаявкиКандидата Тогда
		КнопкаЗавершитьОпрос = ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ЗавершитьОпрос;
		
		КнопкаЗавершитьОпрос.Пометка = ОпросЗавершен;
		
		Если Не ЭтоОпрос Тогда
			КнопкаЗавершитьОпрос.Текст = "Тестирование завершено";
		Иначе
			КнопкаЗавершитьОпрос.Текст = "Опрос завершен";
		КонецЕсли;
	КонецЕсли;
	
	Если Не (РольДоступна("ПолныеПрава") ИЛИ РольДоступна("ПравоАдминистрирования")) Тогда
		ТолькоПросмотр = ОпросЗавершен;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПрочитатьПараметрыАнкеты()
	
	ЭлементыФормы.ВопросыИОтветы.Колонки.Раздел.Видимость = Вопросы.НайтиСтроки(Новый Структура("Раздел",	Справочники.РазделыАнкеты.ПустаяСсылка())).Количество() <> Вопросы.Количество();
	
	ЭтоОпрос				= Истина;
	ЕстьОбязательныеВопросы	= Ложь;
	
	Если ТиповаяАнкета.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ТиповаяАнкета",	ТиповаяАнкета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТиповыеАнкеты.ВидАнкеты = ЗНАЧЕНИЕ(Перечисление.ВидыАнкет.Тестирование)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоОпрос,
	|	ВЫБОР
	|		КОГДА ОбязательныеВопросы.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьОбязательныеВопросы
	|ИЗ
	|	Справочник.ТиповыеАнкеты КАК ТиповыеАнкеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ТиповыеАнкетыВопросыАнкеты.Ссылка КАК Ссылка
	|		ИЗ
	|			Справочник.ТиповыеАнкеты.ВопросыАнкеты КАК ТиповыеАнкетыВопросыАнкеты
	|		ГДЕ
	|			ТиповыеАнкетыВопросыАнкеты.Ссылка = &ТиповаяАнкета
	|			И ТиповыеАнкетыВопросыАнкеты.Обязательный <> ЗНАЧЕНИЕ(Перечисление.ОбязательностьЗаполненияОтветаНаВопрос.НеОбязателенКЗаполнению)) КАК ОбязательныеВопросы
	|		ПО ТиповыеАнкеты.Ссылка = ОбязательныеВопросы.Ссылка
	|ГДЕ
	|	ТиповыеАнкеты.Ссылка = &ТиповаяАнкета";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЭтоОпрос				= Выборка.ЭтоОпрос;
		ЕстьОбязательныеВопросы	= Выборка.ЕстьОбязательныеВопросы;
	КонецЕсли;
	
	ОбновитьПредупреждениеФормы();
	
КонецПроцедуры

Процедура ОбновитьПредупреждениеФормы()
	
	НеЗаполненыОбязательныеОтветы = ПроверитьОбязательноЗаполняемыеОтветы(Ложь);
	
	ТекстПредупреждения = "";
	
	Если НеЗаполненыОбязательныеОтветы Тогда
		ТекстПредупреждения = ТекстПредупреждения + "Не заполнены ответы на обязательные вопросы";
	Иначе
		Если ЕстьОбязательныеВопросы Тогда
			ТекстПредупреждения = ТекстПредупреждения + "Заполнены ответы на все обязательные вопросы";
		Иначе
			ТекстПредупреждения = ТекстПредупреждения + "Нет вопросов, требующих обязательного заполнения";
		КонецЕсли;
	КонецЕсли;
	
	ЭлементыФормы.НадписьПредупреждение.Заголовок	= ТекстПредупреждения;
	
	Если НеЗаполненыОбязательныеОтветы Тогда
		ЭлементыФормы.ПолеКартинкиПредупреждение.Картинка	= БиблиотекаКартинок.СообщениеОшибка;
		ЭлементыФормы.НадписьПредупреждение.ЦветТекста		= ЦветаСтиля.ТекстСообщенияОПроблемах;
		
	Иначе
		ЭлементыФормы.ПолеКартинкиПредупреждение.Картинка	= БиблиотекаКартинок.СообщениеИнформация;
		ЭлементыФормы.НадписьПредупреждение.ЦветТекста		= ЦветаСтиля.ТекстСообщенияИнформации;
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
	Если мФормаОткрытаИзЗаявкиКандидата Тогда
		ЭлементыФормы.ПанельОсновная.Свертка	= РежимСверткиЭлементаУправления.Верх;
		ЭлементыФормы.ПанельРассылка.Свертка	= РежимСверткиЭлементаУправления.Низ;
	КонецЕсли;
	
	ПрочитатьПараметрыАнкеты();
	
	ОбновитьПредупреждениеФормы();
	
	Если мФормаОткрытаИзЗаявкиКандидата Тогда
		Кнопки = ЭлементыФормы.ОсновныеДействияФормы.Кнопки;
		
		Кнопки.Удалить(Кнопки.Индекс(Кнопки.ЗавершитьОпрос));
	КонецЕсли;
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()
	
	Если ЭтоНовый() Тогда
		ЗаполнениеДокументовПереопределяемый.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"));
		
	Иначе
		// Установить доступность формы с учетом даты запрета редактирования	
		РаботаСДиалогамиЗК.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
		
	КонецЕсли;
	
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	УстановитьЗаголовокФормыДокумента();

	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента = Дата;
	мСтараяТиповаяАнкета = ТиповаяАнкета;
	
	ИзменитьВидимостьДоступностьПоВидуАнкеты();
	
	ИзменитьВидимостьДоступностьРеквизитаОпросЗавершен();
	
	// Установить активный реквизит.
	Если Не РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма) Тогда
		Если ЭлементыФормы.ПанельОтветов.ТекущаяСтраница = ЭлементыФормы.ПанельОтветов.Страницы.Опрос Тогда
			ТекущийЭлемент = ЭлементыФормы.ВопросыИОтветы;
		Иначе
			ТекущийЭлемент = ЭлементыФормы.КнопкаНачатьТестирование;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Отказ = ПроверитьОбязательноЗаполняемыеОтветы();
	
КонецПроцедуры

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()
	
	УстановитьЗаголовокФормыДокумента();
	
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
	ОбновитьПредупреждениеФормы();
	
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если ТипЗнч(ЗначениеВыбора) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСтроки = ЭлементыФормы.ВопросыИОтветы.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТиповойОтвет = СокрЛП(ЗначениеВыбора.Поле1);
	ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(ЗначениеВыбора.Поле2);
	ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(ЗначениеВыбора.Поле3);
	ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(ЗначениеВыбора.Поле4);
	ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(ЗначениеВыбора.Поле5);
	ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(ЗначениеВыбора.Поле6);
	ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(ЗначениеВыбора.Поле7);
	ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(ЗначениеВыбора.Поле8);
	ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(ЗначениеВыбора.Поле9);
	ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(ЗначениеВыбора.Поле10);
	
	ДанныеСтроки.ТиповойОтвет = ТиповойОтвет;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры



// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		УстановитьКнопкиПечати();
	КонецЕсли;
	
КонецПроцедуры


Процедура ОсновныеДействияФормыЗавершитьОпрос(Кнопка)
	
	Если Не ОпросЗавершен Тогда
		ТекстВопроса = "Завершить опрос?";
	Иначе
		ТекстВопроса = "Вы уверены, что следует разрешить модифицирование документа?";
	КонецЕсли;
		
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ОпросЗавершен = Не ОпросЗавершен;
	
	ИзменитьВидимостьДоступностьРеквизитаОпросЗавершен();
	
	ЗаписатьВФорме();
	
КонецПроцедуры


Процедура ДействияФормыОбновитьСоставВопросов(Кнопка)
	
	ОбновитьСписокВопросов();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа
//
Процедура ДатаПриИзменении(Элемент = Неопределено)
	
	РаботаСДиалогами.ПроверитьНомерДокумента(ДокументОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
	мТекущаяДатаДокумента = Дата;
	
КонецПроцедуры // ДатаПриИзменении

Процедура ОпрашиваемоеЛицоНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.ЗаявкиКандидатов,	"Кандидаты");
	СписокДляВыбора.Добавить(Справочники.ФизическиеЛица,	"Физические лица");
	СписокДляВыбора.Добавить(Справочники.Контрагенты,		"Контрагенты");
	СписокДляВыбора.Добавить(Справочники.КонтактныеЛица,	"Контактные лица");
	
	ЭлементСписка = ВыбратьИзСписка(СписокДляВыбора,Элемент,);
	
	Если Не ЭлементСписка = Неопределено Тогда
		ФормаВыбора = ЭлементСписка.Значение.ПолучитьФормуВыбора( , Элемент, Ссылка);
		ФормаВыбора.ПараметрТекущаяСтрока	= ?(ТипЗнч(ЭлементСписка.Значение.ПустаяСсылка()) = ТипЗнч(Элемент.Значение), Элемент.Значение, Неопределено);
		ФормаВыбора.Открыть();
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполняет список вопросов по выбранной пользователем "Типовой анкете"
//
// Параметры:
//	Элемент		- элемент формы, который отображает типовую анкету.
//
Процедура ТиповаяАнкетаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ТиповаяАнкета) тогда
		Если Вопросы.Количество() > 0 тогда
			Если Вопрос("Список вопросов и ответов будет очищен и заполнен новыми данными! Продолжить?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет, ) = КодВозвратаДиалога.Да тогда
				Вопросы.Очистить();
				СоставнойОтвет.Очистить();
				
			Иначе
				ТиповаяАнкета = мСтараяТиповаяАнкета;
				Возврат;
				
			КонецЕсли;
		КонецЕсли;
		
		ЗаполнитьВопросыАнкеты(Элемент.Значение);
	КонецЕсли;
	мСтараяТиповаяАнкета = ТиповаяАнкета;
	
	УстановитьЗаголовокФормыДокумента();
	
	ПрочитатьПараметрыАнкеты();
	
	ИзменитьВидимостьДоступностьРеквизитаОпросЗавершен();
	
КонецПроцедуры

Процедура ОпрашиваемоеЛицоПриИзменении(Элемент)
	
	УстановитьЗаголовокФормыДокумента();
	
КонецПроцедуры


Процедура КнопкаНачатьТестированиеНажатие(Элемент)
	
	ФормаРедактированияОтвета = ПолучитьФорму("ФормаВводаОтветовТеста");
	ФормаРедактированияОтвета.ОткрытьМодально();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ВопросыИОтветы

// Процедура - обработчик события "ПередНачаломИзменения" табличного поля.
Процедура ВопросыИОтветыПередНачаломИзменения(Элемент, Отказ)
	
	Если Элемент.ТекущаяКолонка.Имя <> "ТиповойОтвет" Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСтроки = Элемент.ТекущиеДанные;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Вопрос",	ДанныеСтроки.Вопрос);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВопросыДляАнкетирования.ТипОтветаНаВопрос,
	|	ВопросыДляАнкетирования.ВидКонтактнойИнформации.Тип КАК ТипКонтактнойИнформации,
	|	ВопросыДляАнкетирования.ПолнаяФормулировка
	|ИЗ
	|	ПланВидовХарактеристик.ВопросыДляАнкетирования КАК ВопросыДляАнкетирования
	|ГДЕ
	|	ВопросыДляАнкетирования.Ссылка = &Вопрос";
	
	Вопрос = Запрос.Выполнить().Выбрать();
	Вопрос.Следующий();
	
	Если Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.КонтактнаяИнформация Тогда
		Отказ = Истина;
		
		Если Вопрос.ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.Адрес Тогда
			ФормаРедактированияОтвета = ПолучитьФорму("ФормаВводаОтветаАдрес");
			ФормаРедактированияОтвета.ТиповойОтвет = ДанныеСтроки.ТиповойОтвет;
			ФормаРедактированияОтвета.ОткрытьМодально();
			ДанныеСтроки.ТиповойОтвет = ФормаРедактированияОтвета.ТиповойОтвет;
			
		ИначеЕсли Вопрос.ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
			ФормаРедактированияОтвета = ПолучитьФорму("ФормаВводаОтветаТелефон");
			ФормаРедактированияОтвета.ТиповойОтвет = ДанныеСтроки.ТиповойОтвет;
			ФормаРедактированияОтвета.ОткрытьМодально();
			ДанныеСтроки.ТиповойОтвет = ФормаРедактированияОтвета.ТиповойОтвет;
			
		Иначе
			ЭлементыФормы.ВопросыИОтветы.ТекущаяКолонка.ЭлементУправления.КнопкаВыбора  = Ложь;
			ЭлементыФормы.ВопросыИОтветы.ТекущаяКолонка.ЭлементУправления.КнопкаОчистки = Ложь;
			
		КонецЕсли;
		
	ИначеЕсли Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Булево Тогда
		Отказ = Истина;
		
		ПредыдущееЗначение = ДанныеСтроки.ТиповойОтвет;
		Если ТипЗнч(ПредыдущееЗначение) <> Тип("Булево") Тогда
			ПредыдущееЗначение = Ложь;
		КонецЕсли;
		ДанныеСтроки.ТиповойОтвет = НЕ ПредыдущееЗначение;
		
	ИначеЕсли Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Текст тогда
		Отказ = Истина;
		
		ФормаРедактированияОтвета = ПолучитьФорму("ФормаВводаОтветаТекст");
		ФормаРедактированияОтвета.ТиповойОтвет = ДанныеСтроки.ТиповойОтвет;
		ФормаРедактированияОтвета.ОткрытьМодально();
		ДанныеСтроки.ТиповойОтвет = ФормаРедактированияОтвета.ТиповойОтвет;
		
	ИначеЕсли Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Строка Тогда
		ЭлементыФормы.ВопросыИОтветы.ТекущаяКолонка.ЭлементУправления.КнопкаВыбора  = Ложь;
		ЭлементыФормы.ВопросыИОтветы.ТекущаяКолонка.ЭлементУправления.КнопкаОчистки = Ложь;
		
	ИначеЕсли Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Число ИЛИ
			  Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Дата Тогда
		ЭлементыФормы.ВопросыИОтветы.ТекущаяКолонка.ЭлементУправления.КнопкаВыбора  = Истина;
		ЭлементыФормы.ВопросыИОтветы.ТекущаяКолонка.ЭлементУправления.КнопкаОчистки = Ложь;
		
	ИначеЕсли Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.ОдинИзВариантовОтвета Тогда
		Отказ = Истина;
		
		Запрос.УстановитьПараметр("Вопрос",	ДанныеСтроки.Вопрос);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВариантыОтветовОпросов.Ссылка КАК Ответ,
		|	ВариантыОтветовОпросов.Наименование,
		|	ВариантыОтветовОпросов.ТребуетРазвернутыйОтвет
		|ИЗ
		|	Справочник.ВариантыОтветовОпросов КАК ВариантыОтветовОпросов
		|ГДЕ
		|	ВариантыОтветовОпросов.Владелец = &Вопрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВариантыОтветовОпросов.Код";
		
		ФормаРедактированияОтвета = ПолучитьФорму("ФормаВводаОтветаСписок");
		ФормаРедактированияОтвета.ФормулировкаВопроса	= Вопрос.ПолнаяФормулировка;
		ФормаРедактированияОтвета.МассивОтветов			= Запрос.Выполнить().Выгрузить();
		ФормаРедактированияОтвета.ТиповойОтвет			= ДанныеСтроки.ТиповойОтвет;
		ФормаРедактированияОтвета.РазвернутыйОтвет		= ДанныеСтроки.Ответ;
		ФормаРедактированияОтвета.ОткрытьМодально();
		ДанныеСтроки.ТиповойОтвет	= ФормаРедактированияОтвета.ТиповойОтвет;
		ДанныеСтроки.Ответ			= ФормаРедактированияОтвета.РазвернутыйОтвет;
		
	ИначеЕсли Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.НесколькоВариантовОтвета Тогда
		Отказ = Истина;
		
		ФормаРедактированияОтвета = ПолучитьФорму("ФормаВводаОстальныхОтветов");
		ФормаРедактированияОтвета.Вопрос = ДанныеСтроки.Вопрос;
		ФормаРедактированияОтвета.ОткрытьМодально();
	
	ИначеЕсли Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Табличный Тогда
		Отказ = Истина;
		
		ФормаРедактированияОтвета = ПолучитьФорму("ФормаВводаОстальныхОтветов");
		ФормаРедактированияОтвета.Вопрос = ДанныеСтроки.Вопрос;
		ФормаРедактированияОтвета.ОткрытьМодально();
	
	Иначе
		ЭлементыФормы.ВопросыИОтветы.ТекущаяКолонка.ЭлементУправления.КнопкаВыбора  = Истина;
		ЭлементыФормы.ВопросыИОтветы.ТекущаяКолонка.ЭлементУправления.КнопкаОчистки = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВопросыИОтветыПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Если Не Элемент.Колонки.ТиповойОтвет.Видимость Тогда
		Возврат;
	КонецЕсли;
	
	МассивВопросов = Новый Массив;
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		ДанныеСтроки = ОформлениеСтроки.ДанныеСтроки;
		
		МассивВопросов.Добавить(ДанныеСтроки.Вопрос);
		ОформлениеСтроки.Ячейки.ТиповойОтвет.Текст =
			""+Формат(ДанныеСтроки.ТиповойОтвет, "ДФ=dd.MM.yyyy; ДП=; БЛ=Нет; БИ=Да")
			+ ?(ЗначениеЗаполнено(ДанныеСтроки.ТиповойОтвет) И НЕ ПустаяСтрока(ДанныеСтроки.Ответ), ": ", "")
			+ ?(ПустаяСтрока(ДанныеСтроки.Ответ), "", ДанныеСтроки.Ответ);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("СписокВопросов",	МассивВопросов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВопросыДляАнкетирования.Ссылка КАК Вопрос,
	|	ВопросыДляАнкетирования.ВидКонтактнойИнформации.Тип КАК ТипКИ
	|ИЗ
	|	ПланВидовХарактеристик.ВопросыДляАнкетирования КАК ВопросыДляАнкетирования
	|ГДЕ
	|	ВопросыДляАнкетирования.Ссылка В(&СписокВопросов)
	|	И ВопросыДляАнкетирования.ВидКонтактнойИнформации.Тип <> ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.ПустаяСсылка)";
	ТаблицаКИ = Запрос.Выполнить().Выгрузить();
	ТаблицаКИ.Индексы.Добавить("Вопрос");
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		ДанныеСтроки = ОформлениеСтроки.ДанныеСтроки;
		
		НайденнаяСтрока = ТаблицаКИ.Найти(ДанныеСтроки.Вопрос, "Вопрос");
		Если НайденнаяСтрока = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ОформлениеСтроки.Ячейки.ТиповойОтвет.Текст = Анкетирование.ПолучитьПредставлениеКИ(НайденнаяСтрока.ТипКИ, ДанныеСтроки.ТиповойОтвет);
	КонецЦикла;
	
КонецПроцедуры

Процедура ВопросыИОтветыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ОбновитьПредупреждениеФормы();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ ВопросыИОтветы

// Процедура - обработчик события "Очистка" поля ввода "Вопрос".
Процедура ВопросыИОтветыВопросОчистка(Элемент, СтандартнаяОбработка)
	
	ЭлементыФормы.ВопросыИОтветы.ТекущиеДанные.ТиповойОтвет = Справочники.ВариантыОтветовОпросов.ПустаяСсылка();
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "ТиповойОтвет".
// если типовой ответ не требует дополнительных пояснений - очистим развернутый ответ
Процедура ВопросыИОтветыТиповойОтветПриИзменении(Элемент)
	
	ДанныеСтроки = ЭлементыФормы.ВопросыИОтветы.ТекущиеДанные;
	
	Если Не ДанныеСтроки.Вопрос.Предопределенный Тогда
		Если ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.ВариантыОтветовОпросов") Тогда
			Если Не Элемент.Значение.ТребуетРазвернутыйОтвет Тогда
				ДанныеСтроки.Ответ = "";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВопросыИОтветыТиповойОтветОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЭлементыФормы.ВопросыИОтветы.ТекущиеДанные.ТиповойОтвет = ОбщегоНазначения.ПустоеЗначениеТипа(ЭлементыФормы.ВопросыИОтветы.ТекущиеДанные.Вопрос.ТипЗначения.Типы()[0]);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мФормаОткрытаИзЗаявкиКандидата = Ложь;