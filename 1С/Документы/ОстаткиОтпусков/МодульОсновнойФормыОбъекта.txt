////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мДлинаСуток;

Перем мКоличествоДнейОтпускаВГод;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ОбновитьРеквизитыПростойНастройкиПоДанным()
	
	ОстаткиПоследние = Остатки.Выгрузить();
	ОстаткиПоследние.Сортировать("ДатаОкончанияРабочегоГода УБЫВ");
	
	Если ОстаткиПоследние.Количество() = 0 Тогда
		ДатаОстатков	= НачалоГода(ТекущаяДата()) - 1;
	Иначе
		ДатаОстатков	= ОстаткиПоследние[0].ДатаОкончанияРабочегоГода;
	КонецЕсли;
	КоличествоДней		= Остатки.Итог("Количество");
	
КонецПроцедуры

Процедура ЗаполнитьТаблицуОстатковПослеПростогоВвода()
	
	Остатки.Очистить();
	
	Если КоличествоДней <= 0 Тогда
		Строка = Остатки.Добавить();
		Строка.ДатаОкончанияРабочегоГода	= ДатаОстатков;
		Строка.ДатаНачалаРабочегоГода		= НачалоГода(Строка.ДатаОкончанияРабочегоГода);
		Строка.Количество					= КоличествоДней;
		
		Возврат;
	КонецЕсли;
	
	КоличествоДнейДробное = КоличествоДней / мКоличествоДнейОтпускаВГод;
	
	КоличествоЛет = Цел(КоличествоДнейДробное) + ?(Цел(КоличествоДнейДробное) <> КоличествоДнейДробное, 1, 0);
	
	Для НомерГода = 1 По КоличествоЛет Цикл
		Строка = Остатки.Добавить();
		Строка.ДатаОкончанияРабочегоГода	= ?(НомерГода = КоличествоЛет, ДатаОстатков, ДобавитьМесяц(КонецГода(ДатаОстатков), -12 * (КоличествоЛет - НомерГода)));
		Строка.ДатаНачалаРабочегоГода		= НачалоГода(Строка.ДатаОкончанияРабочегоГода);
		Строка.Количество					= ?(НомерГода = 1, КоличествоДней - мКоличествоДнейОтпускаВГод * (КоличествоЛет - 1), мКоличествоДнейОтпускаВГод);
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	мКоличествоДнейОтпускаВГод = глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналу").КоличествоДнейОтпускаВГод;
	
	ОбновитьРеквизитыПростойНастройкиПоДанным();
	
	Заголовок = Строка(Физлицо);
	Если ПустаяСтрока(Наименование) Тогда
		Наименование = Строка(Физлицо) + ", " + Формат(ДатаАктуальности, "ДФ=dd.MM.yyyy");
	КонецЕсли;
	Если ЭтоНовый() Тогда
		ЗаполнитьТаблицуОстатковПослеПростогоВвода();
	КонецЕсли;
	
	Если ЭлементыФормы.ПанельОстатки.ТекущаяСтраница = ЭлементыФормы.ПанельОстатки.Страницы.ОдинОтпуск Тогда
		ТекущийЭлемент = ЭлементыФормы.КоличествоДней;
		
	Иначе
		ТекущийЭлемент = ЭлементыФормы.Остатки;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаписи()
	
	Оповестить("ИзмененыОстаткиОтпусков", , ВладелецФормы);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура Рассчитать(Кнопка)
	
	Если Остатки.Количество() > 0 Тогда
		ТекстВопроса = "Текущие остатки будут очищены. Перезаполнить остатки?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ТаблицаПериодов = Новый ТаблицаЗначений;
	ТаблицаПериодов.Колонки.Добавить("НомерСтроки",		Новый ОписаниеТипов("Число"));
	ТаблицаПериодов.Колонки.Добавить("Сотрудник",		Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ТаблицаПериодов.Колонки.Добавить("ДатаНачала",		Новый ОписаниеТипов("Дата"));
	ТаблицаПериодов.Колонки.Добавить("ДатаОкончания",	Новый ОписаниеТипов("Дата"));
	
	Строка = ТаблицаПериодов.Добавить();
	Строка.НомерСтроки		= -1;
	Строка.Сотрудник		= Физлицо;
	Строка.ДатаНачала		= ОбщегоНазначения.ПолучитьРабочуюДату();
	Строка.ДатаОкончания	= ОбщегоНазначения.ПолучитьРабочуюДату();
	
	Выборка = ПроцедурыУправленияПерсоналомДополнительный.ПодготовитьДанныеПоУправленческимОтпускам(ТаблицаПериодов, Истина, , , Ложь, Ложь);
	
	Остатки.Очистить();
	Если Выборка.Следующий() Тогда
		ВыборкаПоОстаткам = Выборка.Выбрать();
		Пока ВыборкаПоОстаткам.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(Остатки.Добавить(), ВыборкаПоОстаткам);
		КонецЦикла;
	КонецЕсли;
	
	ОбновитьРеквизитыПростойНастройкиПоДанным();
	
КонецПроцедуры

Процедура ЗаписатьИЗакрыть(Кнопка)
	
	Если Модифицированность Тогда
		Если Не ЗаписатьВФорме() Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

Процедура ЗаписатьБезЗакрытия(Кнопка)
	
	Если Модифицированность Тогда
		ЗаписатьВФорме();
	КонецЕсли;
	
КонецПроцедуры

Процедура ДетальныйВводНажатие(Элемент)
	
	ЭлементыФормы.ПанельОстатки.ТекущаяСтраница = ЭлементыФормы.ПанельОстатки.Страницы.ОтпускаСРабочимиГодами;
	ТекущийЭлемент = ЭлементыФормы.Остатки;
	
КонецПроцедуры

Процедура ПростойВводНажатие(Элемент)
	
	ЭлементыФормы.ПанельОстатки.ТекущаяСтраница = ЭлементыФормы.ПанельОстатки.Страницы.ОдинОтпуск;
	ТекущийЭлемент = ЭлементыФормы.КоличествоДней;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ДатаОстатковПриИзменении(Элемент)
	
	ЗаполнитьТаблицуОстатковПослеПростогоВвода();
	
КонецПроцедуры

Процедура КоличествоДнейПриИзменении(Элемент)
	
	ЗаполнитьТаблицуОстатковПослеПростогоВвода();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ Остатки

Процедура ОстаткиПослеУдаления(Элемент)
	
	ДанныеСтроки = Элемент.ТекущиеДанные;
	
	// Если строк остатков меньше двух, нет смысла пересчитывать
	Если Остатки.Количество() < 2 Тогда
		Возврат;
	КонецЕсли;
	
	НоваяДатаНачала = Остатки[0].ДатаОкончанияРабочегоГода + мДлинаСуток;
	
	ПерваяСтрока = Истина;
	Для Каждого СтрокаОстатка Из Остатки Цикл
		// первую строку пропускаем, корректировать рабочие года начнем со второй
		Если ПерваяСтрока Тогда
			ПерваяСтрока = Ложь;
			Продолжить;
		КонецЕсли;
		
		СтрокаОстатка.ДатаНачалаРабочегоГода	= НоваяДатаНачала;
		СтрокаОстатка.ДатаОкончанияРабочегоГода	= КонецГода(СтрокаОстатка.ДатаНачалаРабочегоГода);
		
		НоваяДатаНачала = СтрокаОстатка.ДатаОкончанияРабочегоГода + мДлинаСуток;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОстаткиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Не НоваяСтрока Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСтроки = ЭлементыФормы.Остатки.ТекущиеДанные;
	
	Если Остатки.Количество() > 1 Тогда
		ДанныеСтроки.ДатаНачалаРабочегоГода		= Остатки[Остатки.Количество()-2].ДатаОкончанияРабочегоГода + мДлинаСуток;
		ДанныеСтроки.ДатаОкончанияРабочегоГода	= КонецГода(ДанныеСтроки.ДатаНачалаРабочегоГода);
		
	Иначе
		ДанныеСтроки.ДатаНачалаРабочегоГода		= НачалоГода(ДобавитьМесяц(ОбщегоНазначения.ПолучитьРабочуюДату(), -12));
		ДанныеСтроки.ДатаОкончанияРабочегоГода	= КонецГода(ДанныеСтроки.ДатаНачалаРабочегоГода);
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ОстаткиПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеСтроки.Ячейки.ГодРаботы.Видимость = Ложь;
	
КонецПроцедуры

Процедура ОстаткиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока ИЛИ ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	Остатки.Сортировать("ДатаНачалаРабочегоГода");
	
	ДанныеСтроки = Элемент.ТекущиеДанные;
	
	// Если строк остатков меньше двух, нет смысла пересчитывать
	Если Остатки.Количество() < 2 Тогда
		Возврат;
	КонецЕсли;
	
	НоваяДатаНачала = Остатки[0].ДатаНачалаРабочегоГода;
	
	Для Каждого СтрокаОстатка Из Остатки Цикл
		СтрокаОстатка.ДатаНачалаРабочегоГода	= НоваяДатаНачала;
		СтрокаОстатка.ДатаОкончанияРабочегоГода	= КонецГода(СтрокаОстатка.ДатаНачалаРабочегоГода);
		
		НоваяДатаНачала = СтрокаОстатка.ДатаОкончанияРабочегоГода + мДлинаСуток;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОстаткиКоличествоПриИзменении(Элемент)
	
	ОбновитьРеквизитыПростойНастройкиПоДанным();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мДлинаСуток = 86400;