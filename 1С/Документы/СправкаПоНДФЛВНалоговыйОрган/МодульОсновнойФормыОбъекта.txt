////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента; 

// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;

// Хранит элемент управления подменю печати
Перем мПодменюПечати;

// Хранит элемент управления кнопку печать по умолчанию
Перем мПечатьПоУмолчанию;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

// Хранит ссылку на головную организацию
Перем мГоловнаяОрганизация;

Перем мОрганизацияЭтоЮрЛицо;
Перем мСписокВыбораОКАТОиКПП;

Перем мТекущийСотрудник;
Перем мТекущаяСтавка;
Перем мТекущийНомерСправки;
Перем мМаксимальныйНомерСправки;

Перем мСписокАвторскихВознаграждений; // Хранит авторские вознаграждения
Перем мСоответствиеДоходовИВычетов; // Хранит для кода дохода соответствующие ему коды вычетов
Перем мСписокВыбораСтандартныхВычетов;

Перем мОбработкаПодбораПоСтроке;
Перем мТекстПодбораПоСтроке;
Перем мПоследнееЗначениеЭлементаПодбораПоСтроке;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ВидимостьКнопкиШифрованиеИОтправкаВИФНС()
	
	ОбъектКнопка = ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Найти("КнопкаШифрованиеИОтправка");
	
	Если ОбъектКнопка <> Неопределено И Организация.ВидОбменаСКонтролирующимиОрганами <> Перечисления.ВидыОбменаСКонтролирующимиОрганами.ОбменЧерезСпринтер Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Удалить(ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Индекс(
															ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Найти("РазделительШифрованиеИОтправка")));
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Удалить(ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Индекс(ОбъектКнопка));
	ИначеЕсли ОбъектКнопка = Неопределено И Организация.ВидОбменаСКонтролирующимиОрганами = Перечисления.ВидыОбменаСКонтролирующимиОрганами.ОбменЧерезСпринтер Тогда
		РазделительШифрованиеИОтправка = ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Добавить("РазделительШифрованиеИОтправка", ТипКнопкиКоманднойПанели.Разделитель);
		КнопкаШифрованиеИОтправка = ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Добавить("КнопкаШифрованиеИОтправка", ТипКнопкиКоманднойПанели.Действие, 
															"Зашифровать и отправить в ИФНС", Новый Действие("ОсновныеДействияФормыКнопкаШифрованиеИОтправка"));
		КнопкаШифрованиеИОтправка.Пояснение = "";
		КнопкаШифрованиеИОтправка.Подсказка = "";
		Смещение = -ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Индекс(КнопкаШифрованиеИОтправка);
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Сдвинуть(РазделительШифрованиеИОтправка, Смещение);
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Сдвинуть(КнопкаШифрованиеИОтправка, Смещение);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВидимостьПолейСправки()
	
	ЭлементыФормы.ДолжностьПодписавшегоЛица.ТолькоПросмотр = Не мОрганизацияЭтоЮрЛицо;
	
	СправкиПоНДФЛ.НастроитьПолеВводаОКАТО(ЭлементыФормы.КодПоОКАТО, Организация, мСписокВыбораОКАТОиКПП);

	ЭлементыФормы.СотрудникиОрганизации.Колонки.Ставка.Видимость = НалоговыйПериод < 2011 Или СпециальныйДокумент2011года;
	ЭлементыФормы.ПанельИтоговыхСумм.ТекущаяСтраница = ?(НалоговыйПериод < 2011 Или СпециальныйДокумент2011года, ЭлементыФормы.ПанельИтоговыхСумм.Страницы.Страница2010, ЭлементыФормы.ПанельИтоговыхСумм.Страницы.Страница2011);
	
	ВидимостьСуммУдержано = НалоговыйПериод > 2010 И Не СпециальныйДокумент2011года И ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ЕжегоднаяОтчетность;
	ЭлементыФормы.ПанельПеречислено.Свертка = ?(ВидимостьСуммУдержано, РежимСверткиЭлементаУправления.Нет, РежимСверткиЭлементаУправления.Лево);
	ЭлементыФормы.ПанельУдержано.Свертка = ?(ВидимостьСуммУдержано, РежимСверткиЭлементаУправления.Нет, РежимСверткиЭлементаУправления.Верх);
	
	Если СотрудникиОрганизации.Количество() = 0 Тогда
		
		ЭлементыФормы.СведенияОДоходах.ОтборСтрок.НомерСправки.Установить(-1);
		ЭлементыФормы.СведенияОДоходах.ТолькоПросмотр = Истина;
		ЭлементыФормы.СведенияОВычетах.ОтборСтрок.НомерСправки.Установить(-1);
		ЭлементыФормы.СведенияОВычетах.ТолькоПросмотр = Истина;
		ЭлементыФормы.СуммыНалогов.ОтборСтрок.НомерСправки.Установить(-1);
		ЭлементыФормы.СуммыНалогов.ТолькоПросмотр = Истина;
		ЭлементыФормы.АдресРФВФорме.ТолькоПросмотр = Истина;
		ЭлементыФормы.АдресЗарубежомВФорме.ТолькоПросмотр = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьИтогиТекущейСтрокиСотрудника()
	
	ТекущаяСтрока = ЭлементыФормы.СотрудникиОрганизации.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		НомерСправки = ТекущаяСтрока.НомерСправки;
		СтруктураПоиска = Новый Структура("НомерСправки", НомерСправки);
		Если НалоговыйПериод < 2011 Или СпециальныйДокумент2011года Тогда
			ОбщСумма = 0;
			ОблСумма = 0;
			Для каждого СтрокаТЧ Из СведенияОДоходах.НайтиСтроки(СтруктураПоиска) Цикл
				ОбщСумма = ОбщСумма + СтрокаТЧ.СуммаДохода;
				ОблСумма = ОблСумма + СтрокаТЧ.СуммаДохода - СтрокаТЧ.СуммаВычета;
			КонецЦикла;
			Для каждого СтрокаТЧ Из СведенияОВычетах.НайтиСтроки(СтруктураПоиска) Цикл
				ОблСумма = ОблСумма - СтрокаТЧ.СуммаВычета;
			КонецЦикла;
			ТекущаяСтрока.ОбщаяСуммаДохода = ОбщСумма;
			ТекущаяСтрока.ОблагаемаяСуммаДохода = ОблСумма;
		Иначе
			СправкиПоНДФЛ.ОбновитьИтогиТекущейСправки(НомерСправки, ТекущаяСтрока.СтатусНалогоплательщика, СведенияОДоходах.Выгрузить(СтруктураПоиска), СведенияОВычетах.Выгрузить(СтруктураПоиска), СуммыНалогов);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОписатьДоходыОрганизации()
	
	ЭлементыФормы.ИнфоНадпись.Заголовок = СправкиПоНДФЛ.ОписаниеДоходовПоКодам(Организация, мГоловнаяОрганизация, мОрганизацияЭтоЮрЛицо, НалоговыйПериод, НачалоМесяца(Дата))	

КонецПроцедуры

Процедура ОпределитьМаксимальныйНомерСправки()

	мМаксимальныйНомерСправки = 0;
	Для каждого СтрокаТЧ Из СотрудникиОрганизации Цикл
		мМаксимальныйНомерСправки = Макс(мМаксимальныйНомерСправки, СтрокаТЧ.НомерСправки);
	КонецЦикла;

КонецПроцедуры // ОпределитьМаксимальныйНомерСправки()

Процедура ПриИзмененииКодаПоОКАТО()

	Если мОрганизацияЭтоЮрЛицо Тогда
		КодИФНС = СправкиПоНДФЛ.КодНалоговогоОрганаПоОКАТО_КППиОрганизации(Организация, мОрганизацияЭтоЮрЛицо, ОКАТО_КПП);
		ИмяФайла = СправкиПоНДФЛ.ИмяФайлаОбмена(Организация, Дата, мОрганизацияЭтоЮрЛицо, КодИФНС);
	КонецЕсли;

КонецПроцедуры

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ()
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.СотрудникиОрганизации,ЭлементыФормы.КоманднаяПанельСотрудникиОрганизации.Кнопки.ПодменюЗаполнить);
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧ(Ссылка, СоответствиеТЧ, Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
КонецПроцедуры

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	
	мДеревоМакетов = УниверсальныеМеханизмы.ПолучитьДеревоМакетовПечати(Ссылка, ПолучитьСтруктуруПечатныхФорм(), Новый Действие("ОсновныеДействияФормыПечать"), Новый Действие("ОсновныеДействияФормыУстановитьПечатьПоУмолчанию"));

	УниверсальныеМеханизмы.УстановитьПодменюПечати    (мПодменюПечати, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов);
	УниверсальныеМеханизмы.УстановитьПечатьПоУмолчанию(мПечатьПоУмолчанию, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов, Метаданные().Имя,Новый Действие("ОсновныеДействияФормыПечатьПоУмолчанию"));

	Если Не мПодменюПечати = Неопределено Тогда
		УниверсальныеМеханизмы.СформироватьПодменю(мДеревоМакетов, мПодменюПечати,Истина,Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьЗаголовкиОрганизацийВФорме()
	
	ЭлементыФормы.НадписьОрганизация.Заголовок 	= ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация:");
	ЭлементыФормы.Организация.Подсказка 		= ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация");
	ЭлементыФормы.КодПоОКАТО.Подсказка 			= ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Код по ОКАТО и КПП организации (или ее обособленного подразделения)");
	ЭлементыФормы.КоманднаяПанельСотрудникиОрганизации.Кнопки.ПодменюЗаполнить.Кнопки.ДействиеЗаполнить.Подсказка = "Заполнить физ.лицами, получавшими доходы " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("в организации");
	ЭлементыФормы.КоманднаяПанельСотрудникиОрганизации.Кнопки.ПодменюЗаполнить.Кнопки.ДействиеЗаполнить.Пояснение = "Заполнить физ.лицами, получавшими доходы " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("в организации");
	ЭлементыФормы.Телефон.Подсказка 			= "Телефон " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("организации");
	
КонецПроцедуры // УстановитьЗаголовкиОрганизацийВФорме()

// Функция формирует структуру параметров для ввода по подстроке
//
// Параметры
//  НЕТ
//
// Возвращаемое значение:
//	Структура имен и значений параметров
//
Функция ПолучитьСтруктуруПараметровПодбораПоСтроке(ИмяЭУ)

	Если ИмяЭУ = "КодДохода" Тогда
		СтруктураПараметров = Новый Структура("НеОтражаетсяВОтчетности2010", Ложь);
	КонецЕсли;

	Возврат СтруктураПараметров;

КонецФункции // ПолучитьСтруктуруПараметровПодбораПоСтроке()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	Если ЭтоНовый() Тогда
		
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументовПереопределяемый.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"));
		
		Если НалоговыйПериод = 0 Тогда 
			НалоговыйПериод = Макс(Год(Дата) - ?(Месяц(Дата) = 1, 1, 0), 2010);
			Если ЗначениеЗаполнено(Организация) Тогда
				мОрганизацияЭтоЮрЛицо = ОбщегоНазначенияПереопределяемый.ЭтоЮрЛицо(Организация);
				ЗаполнитьЗначенияСвойств(ЭтотОбъект, СправкиПоНДФЛ.ДанныеПодписывающихЛиц(Организация, Дата));
			КонецЕсли;
			ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ЕжегоднаяОтчетность;
		КонецЕсли;
		ПринятоНалоговымОрганом = Ложь;
		
	ИначеЕсли СпециальныйДокумент2011года Или ПринятоНалоговымОрганом тогда
		
		ТолькоПросмотр = Истина;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Закрыть.КнопкаПоУмолчанию = Истина;
		
	Иначе
		
		// Установить доступность формы с учетом даты запрета редактирования	
		РаботаСДиалогамиЗК.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
		
	КонецЕсли;
	
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);

	СтруктураКолонок = Новый Структура();

	// Установить колонки, видимостью которых пользователь управлять не может.
	СтруктураКолонок.Вставить("ФизЛицо");

	// Установить ограничение - изменять видимость колонок табличной части
	ОбработкаТабличныхЧастей.УстановитьИзменятьВидимостьКолонокТабЧасти(ЭлементыФормы.СотрудникиОрганизации.Колонки, СтруктураКолонок);
	
	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента = Дата;
	Если мОрганизацияЭтоЮрЛицо = Неопределено Тогда
		мОрганизацияЭтоЮрЛицо = ОбщегоНазначенияПереопределяемый.ЭтоЮрЛицо(Организация);
	КонецЕсли;
	// Получим и запомним ссылку на головную организацию
	мГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);

	ФлажокПринятоНалоговымОрганом = ПринятоНалоговымОрганом;
	
	ЭлементыФормы.СтатусНалогоплательщика.ДоступныеЗначения = ПроцедурыУправленияПерсоналом.ПолучитьСписокСтатусовФизлиц();
	ЭлементыФормы.ПринятоНалоговымОрганом.Доступность = Проведен И Не СпециальныйДокумент2011года;
	
	ОпределитьМаксимальныйНомерСправки();
	
	// Установить активный реквизит.
	Если Не РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма) Тогда
		ТекущийЭлемент = ЭлементыФормы.СотрудникиОрганизации;
	КонецЕсли;

	ВидимостьКнопкиШифрованиеИОтправкаВИФНС();
	РегламентированнаяОтчетность.ПриОткрытииФормыРегламентированногоОтчета2НДФЛ(ЭтаФорма, Новый Действие("КоманднаяПанельФормыДействиеОтправка"));
	
	ВидимостьПолейСправки();
	ОписатьДоходыОрганизации();
	Если Не ЗначениеЗаполнено(ОКАТО_КПП) И ЭтоНовый() И мСписокВыбораОКАТОиКПП.Количество() > 0 Тогда
		ОКАТО_КПП = мСписокВыбораОКАТОиКПП[0].Значение;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(КодИФНС) И ЭтоНовый() Тогда	
		КодИФНС = СправкиПоНДФЛ.КодНалоговогоОрганаПоОКАТО_КППиОрганизации(Организация, мОрганизацияЭтоЮрЛицо, ОКАТО_КПП);
		ИмяФайла = СправкиПоНДФЛ.ИмяФайлаОбмена(Организация, Дата, мОрганизацияЭтоЮрЛицо, КодИФНС);
	КонецЕсли;
	
	мСписокВыбораСтандартныхВычетов = СправкиПоНДФЛ.СписокСтандартныхВычетов();
	мСоответствиеДоходовИВычетов = СправкиПоНДФЛ.СоответствиеДоходовИВычетов(НалоговыйПериод);
	
	УстановитьЗаголовкиОрганизацийВФорме();
	
КонецПроцедуры

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
	ЭлементыФормы.ПринятоНалоговымОрганом.Доступность = Проведен И Не СпециальныйДокумент2011года;
	
	Если ПринятоНалоговымОрганом Тогда
	
		ТолькоПросмотр = Истина;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Закрыть.КнопкаПоУмолчанию = Истина;
	
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
			
КонецПроцедуры


// формирует файл сведений
//
Процедура ОсновныеДействияФормыФайл(Кнопка)
	
	ПроцедурыПерсонифицированногоУчета.ПоказатьФайлДокумента(ЭтотОбъект,"Файл сведений о доходах физлиц по форме 2-НДФЛ");
	                
КонецПроцедуры      

// копирует файл-пачку в указанное пользователем место
Процедура ОсновныеДействияФормыНаДискетку(Кнопка)
	
	Вопрос = "Перед формированием файла необходимо записать документ. Записать?";
	Если НЕ РегламентированнаяОтчетность.ТребованиеЗаписиДокументаУдовлетворено(ДокументОбъект,Вопрос) тогда
		Возврат;
	КонецЕсли;	 

	ЕстьОшибки = Ложь;
	ТекстФайла = РегламентированнаяОтчетность.ПолучитьТекстФайла(ЭтотОбъект,ЕстьОшибки);
	Если ЕстьОшибки тогда
		Возврат;
	КонецЕсли;

	Дерево2НДФЛ = ПроцедурыПерсонифицированногоУчета.ПреобразоватьВДеревоXML(ТекстФайла);
	Если Дерево2НДФЛ = Неопределено Тогда
		Возврат 
	КонецЕсли;
	
	Длг = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Длг.Каталог = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнойКаталогФайлов");
	Длг.Заголовок = "Укажите каталог";
	
	Если Длг.Выбрать() Тогда
		
		ИмяФайлаНаДиске = Длг.Каталог + "\" + ИмяФайла + ".xml";
		ТекстовыйДокумент = Новый ТекстовыйДокумент;
		ТекстовыйДокумент.УстановитьТекст(ТекстФайла); 
		ТекстовыйДокумент.Записать(ИмяФайлаНаДиске,КодировкаТекста.ANSI);
		Предупреждение("Файл обмена записан под именем: " + ИмяФайлаНаДиске);
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		
		УстановитьКнопкиПечати();
		
	КонецЕсли; 
	
	
КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура - действие кнопки КнопкаШифрованиеИОтправка командной панели ОсновныеДействияФормы.
// Процедура - действие назначается динамически с помощью объекта Действие из процедуры 
// ВидимостьКнопкиШифрованиеИОтправкаВИФНС().
//
Процедура ОсновныеДействияФормыКнопкаШифрованиеИОтправка(Кнопка)
	
	// Проверка реквизитов для интеграции с Такском
	Если Организация.ВидОбменаСКонтролирующимиОрганами <> Перечисления.ВидыОбменаСКонтролирующимиОрганами.ОбменЧерезСпринтер Тогда
		Предупреждение("В параметрах выбранной организации не включена возможность отправки отчетности через ПК ""Спринтер""!");
		Возврат;
	КонецЕсли;
	
	КодАбонента = Организация.ОбменКодАбонента;
	КаталогПрограммыЭлПочты = СокрЛП(Организация.ОбменКаталогПрограммыЭлектроннойПочты);
	КаталогОтправкиДанныхОтчетности = СокрЛП(Организация.ОбменКаталогОтправкиДанныхОтчетности);
	Если Прав(КаталогОтправкиДанныхОтчетности, 1) <> "\" Тогда
		КаталогОтправкиДанныхОтчетности = КаталогОтправкиДанныхОтчетности + "\";
	КонецЕсли;
	
	Если СтрДлина(КодАбонента) <> 7 Тогда 
		Предупреждение("Неверно задан логин абонента в параметрах интеграции с ПК ""Спринтер""!");
		Возврат;
	КонецЕсли;
	
	Файл1 = Новый Файл(КаталогПрограммыЭлПочты);
	Файл2 = Новый Файл(КаталогОтправкиДанныхОтчетности);
		
	Если ПустаяСтрока(КаталогПрограммыЭлПочты) ИЛИ НЕ Файл1.Существует() Тогда
		Предупреждение("Неверно задан каталог программы электронной почты!");
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(КаталогОтправкиДанныхОтчетности) Тогда
		Предупреждение("Не задан каталог отправки данных отчетности!");
		Возврат;
	КонецЕсли;
	
	Если НЕ Файл2.Существует() Тогда
		Попытка
			СоздатьКаталог(КаталогОтправкиДанныхОтчетности);
		Исключение
			Предупреждение("Не удалось создать каталог отправки данных отчетности!");
			Возврат;
		КонецПопытки;
	КонецЕсли;
	
	Файл4 = Новый Файл(КаталогПрограммыЭлПочты + "run_dipost.bat");
	
	Если НЕ Файл4.Существует() Тогда
		Предупреждение("В каталоге программы электронной почты не найден файл run_dipost.bat!");
		Возврат;
	КонецЕсли;
	
	ЕстьОшибки = Ложь;
	ТекстФайла = РегламентированнаяОтчетность.ПолучитьТекстФайла(ЭтотОбъект,ЕстьОшибки);
	Если ЕстьОшибки тогда
		Возврат;
	КонецЕсли;

	Дерево2НДФЛ = ПроцедурыПерсонифицированногоУчета.ПреобразоватьВДеревоXML(ТекстФайла);
	Если Дерево2НДФЛ = Неопределено Тогда
		Возврат 
	КонецЕсли;
	
	ИмяФайлаНаДиске = КаталогОтправкиДанныхОтчетности + "\" + ИмяФайла + ".xml";
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.УстановитьТекст(ТекстФайла); 
	ТекстовыйДокумент.Записать(ИмяФайлаНаДиске, КодировкаТекста.ANSI);
	
	Попытка
		ЗапуститьПриложение(КаталогПрограммыЭлПочты + "run_dipost.bat " + КаталогПрограммыЭлПочты + " " + Организация.ОбменКодАбонента + " -t", КаталогПрограммыЭлПочты);
		Предупреждение("Файлы успешно переданы в ПК ""Спринтер""!");
	Исключение
		Предупреждение("При запуске приложения для отправки отчетности произошла ошибка:" + Символы.ПС + ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
КонецПроцедуры


Процедура КоманднаяПанельСотрудникиОрганизацииДействиеЗаполнить(Кнопка)

	Если НалоговыйПериод > 2010 И ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ Тогда
		РаботаСДиалогами.ВывестиПредупреждение("Автоматически заполняются только справки для ежегодной отчетности." + Символы.ПС + "Справки о невозможности удержания налога заполняются вручную.");
		Возврат	
	КонецЕсли;
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	МассивТаблиц = Новый Массив;
	МассивТаблиц.Добавить(СотрудникиОрганизации);
	ТекстВопроса1 = "Автоматически заполнить документ можно только после его записи. Продолжить?";
	ТекстВопроса2 = "Существующий список справок о доходах будет очищен. Продолжить?";
	Если НЕ РаботаСДиалогами.ЗаписатьДокументОчиститьТаблицыПередВыполнениемДействия(ДокументОбъект, ЭтаФорма, МассивТаблиц, ТекстВопроса1, ТекстВопроса2) Тогда
		ОбработкаКомментариев.ПоказатьСообщения();
		Возврат;
	КонецЕсли;
	
	Автозаполнение();
	
	Если СотрудникиОрганизации.Количество() = 0 Тогда
		Сообщить("Не обнаружены данные для записи в документ.", СтатусСообщения.Важное )
	Иначе
		ЭлементыФормы.СотрудникиОрганизации.ТекущаяСтрока = СотрудникиОрганизации[0]
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельСотрудникиОрганизацииДействиеПронумеровать(Кнопка)
	Если НЕ РаботаСДиалогами.ЗаписатьДокументПередВыполнениемДействия(ДокументОбъект, ЭтаФорма, "Перенумеровать справки можно только после записи документа. Продолжить?") Тогда
		Возврат;
	КонецЕсли;
	ПронумероватьСправки();
	ОбработчикОжиданияСотрудникиОрганизацииПриАктивизацииСтроки();
    ОпределитьМаксимальныйНомерСправки();
КонецПроцедуры

Процедура КоманднаяПанельСотрудникиОрганизацииПодбор(Кнопка)
	
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(ЭлементыФормы.СотрудникиОрганизации, Ссылка, Ложь, Дата, ОбщегоНазначения.ГоловнаяОрганизация(Организация), 1,,,, Истина);

КонецПроцедуры


Процедура КнопкаОбновитьДанныеОДоходахНажатие(Элемент)
	ТекущаяСтрока = ЭлементыФормы.СотрудникиОрганизации.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		
		Если НалоговыйПериод > 2010 И ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ Тогда
			РаботаСДиалогами.ВывестиПредупреждение("Автоматически заполняются только справки для ежегодной отчетности." + Символы.ПС + "Справки о невозможности удержания налога заполняются вручную.");
			Возврат	
		КонецЕсли;
		
		ТекущийНомерСправки = ТекущаяСтрока.НомерСправки;
		СправкиПоНДФЛ.УдалитьДанныеСправки(ТекущийНомерСправки, СведенияОДоходах);	
		СправкиПоНДФЛ.УдалитьДанныеСправки(ТекущийНомерСправки, СведенияОВычетах);
		СправкиПоНДФЛ.УдалитьДанныеСправки(ТекущийНомерСправки, СуммыНалогов);
		СправкиПоНДФЛ.ПрочитатьДанныеСправки(ТекущаяСтрока, СведенияОДоходах, СведенияОВычетах, СуммыНалогов, НалоговыйПериод, Организация, мГоловнаяОрганизация, ОКАТО_КПП, НачалоМесяца(Дата))
	КонецЕсли;
КонецПроцедуры

Процедура КнопкаОбновитьДанныеСотрудникаНажатие(Элемент)
	ТекущаяСтрока = ЭлементыФормы.СотрудникиОрганизации.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		СправкиПоНДФЛ.ПрочитатьДанныеСотрудника(ТекущаяСтрока, Дата, НалоговыйПериод);
		Если ЗначениеЗаполнено(ТекущаяСтрока.Сотрудник) Тогда
			АдресРФВФорме = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(ТекущаяСтрока.АдресРФ);
			АдресЗарубежомВФорме = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(ТекущаяСтрока.АдресЗарубежом);
			Если НалоговыйПериод < 2011 И (ТекущаяСтрока.Ставка = Перечисления.НДФЛСтавки.Ставка30 Или ТекущаяСтрока.Ставка = Перечисления.НДФЛСтавки.Ставка15) И ТекущаяСтрока.СтатусНалогоплательщика <> Перечисления.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент Тогда
				ТекущаяСтрока.СтатусНалогоплательщика = Перечисления.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент
			КонецЕсли;
		Иначе 	
			АдресРФВФорме = "";
			АдресЗарубежомВФорме = "";
		КонецЕсли;
		ЭлементыФормы.АдресЗарубежомВФорме.ТолькоПросмотр = ТолькоПросмотр Или Не СправкиПоНДФЛ.ВводитсяАдресЗарубежом(ТекущаяСтрока)
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа.
//
Процедура ДатаПриИзменении(Элемент)

	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	мТекущаяДатаДокумента = Дата;
	
	ИмяФайла = СправкиПоНДФЛ.ИмяФайлаОбмена(Организация, Дата, мОрганизацияЭтоЮрЛицо, КодИФНС);
	ОписатьДоходыОрганизации();
	
КонецПроцедуры // ДатаПриИзменении

// Процедура - обработчик события "ПриИзменении" поля ввода организации.
//
Процедура ОрганизацияПриИзменении(Элемент)

	мОрганизацияЭтоЮрЛицо = ОбщегоНазначенияПереопределяемый.ЭтоЮрЛицо(Организация);
	// Получим и запомним ссылку на головную организацию
	мГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);

	ВидимостьПолейСправки();
	Если ЭлементыФормы.ДолжностьПодписавшегоЛица.ТолькоПросмотр Тогда
		ДолжностьПодписавшегоЛица = ""
	КонецЕсли;
	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;
	Если ЗначениеЗаполнено(Организация) Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, СправкиПоНДФЛ.ДанныеПодписывающихЛиц(Организация, Дата));
		Если мСписокВыбораОКАТОиКПП.Количество() > 0 Тогда
			ОКАТО_КПП = мСписокВыбораОКАТОиКПП[0].Значение
		Иначе
			ОКАТО_КПП = СправкиПоНДФЛ.СуммаОКАТОиКПП("","")
		КонецЕсли;
		КодИФНС = СправкиПоНДФЛ.КодНалоговогоОрганаПоОКАТО_КППиОрганизации(Организация, мОрганизацияЭтоЮрЛицо, ОКАТО_КПП);
		ИмяФайла = СправкиПоНДФЛ.ИмяФайлаОбмена(Организация, Дата, мОрганизацияЭтоЮрЛицо, КодИФНС);
		ОписатьДоходыОрганизации()	
	КонецЕсли;
	
	ВидимостьКнопкиШифрованиеИОтправкаВИФНС();
	РегламентированнаяОтчетность.ПриИзмененииОрганизацииВРегламентированномОтчете2НДФЛ(ЭтаФорма, Новый Действие("КоманднаяПанельФормыДействиеОтправка"));
	
КонецПроцедуры // ОрганизацияПриИзменении()

Процедура КодИФНСПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Организация) Тогда
		ИмяФайла = СправкиПоНДФЛ.ИмяФайлаОбмена(Организация, Дата, мОрганизацияЭтоЮрЛицо, КодИФНС);
	КонецЕсли;
КонецПроцедуры

Процедура НалоговыйПериодПриИзменении(Элемент)
	ВидимостьПолейСправки();
	ОписатьДоходыОрганизации();
КонецПроцедуры

Процедура КодПоОКАТОПриИзменении(Элемент)
	ПриИзмененииКодаПоОКАТО()
КонецПроцедуры

Процедура КодПоОКАТОНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлементСписка = ВыбратьИзСписка(мСписокВыбораОКАТОиКПП,Элемент,мСписокВыбораОКАТОиКПП.НайтиПоЗначению(ОКАТО_КПП));
	Если ЭлементСписка <> Неопределено Тогда
		ОКАТО_КПП = ЭлементСписка.Значение;
		ПриИзмененииКодаПоОКАТО();
	КонецЕсли;
КонецПроцедуры

Процедура ОснованиеДляПредставленияСправокПриИзменении(Элемент)
	ВидимостьПолейСправки()
КонецПроцедуры

Процедура ГражданствоПриИзменении(Элемент)
	Если ЭлементыФормы.СотрудникиОрганизации.ТекущиеДанные <> Неопределено Тогда
		ЭлементыФормы.АдресЗарубежомВФорме.ТолькоПросмотр = Не СправкиПоНДФЛ.ВводитсяАдресЗарубежом(ЭлементыФормы.СотрудникиОрганизации.ТекущиеДанные)
	КонецЕсли;
КонецПроцедуры

Процедура СтатусНалогоплательщикаПриИзменении(Элемент)
	Если ЭлементыФормы.СотрудникиОрганизации.ТекущиеДанные <> Неопределено Тогда
		ЭлементыФормы.АдресЗарубежомВФорме.ТолькоПросмотр = Не СправкиПоНДФЛ.ВводитсяАдресЗарубежом(ЭлементыФормы.СотрудникиОрганизации.ТекущиеДанные)
	КонецЕсли;
КонецПроцедуры

Процедура АдресРФВФормеНачалоВыбора(Элемент, СтандартнаяОбработка)
	Если ЭлементыФормы.СотрудникиОрганизации.ТекущиеДанные <> Неопределено Тогда
		СтруктураАдреса = Новый Структура("Значение", ЭлементыФормы.СотрудникиОрганизации.ТекущиеДанные.АдресРФ);
		УправлениеКонтактнойИнформацией.РедактироватьМодальноЭлементАдреса(СтруктураАдреса, ЭтаФорма, "ФормаРедактированияАдреса");
		ЭлементыФормы.СотрудникиОрганизации.ТекущиеДанные.АдресРФ = СтруктураАдреса.Значение;
		АдресРФВФорме = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(СтруктураАдреса.Значение);
	КонецЕсли;
КонецПроцедуры

Процедура АдресЗарубежомВФормеНачалоВыбора(Элемент, СтандартнаяОбработка)
	Если ЭлементыФормы.СотрудникиОрганизации.ТекущиеДанные <> Неопределено Тогда
		ОбработкаРедактированияАдреса = Обработки.РедактированиеКонтактнойИнформации.Создать();
		ОбработкаРедактированияАдреса.мВозвратСтруктуры = Истина;	
		ОбработкаРедактированияАдреса.Вид = Справочники.ВидыКонтактнойИнформации.ИнострАдресФизЛица;
		
		СтрАдрес = ЭлементыФормы.СотрудникиОрганизации.ТекущиеДанные.АдресЗарубежом;
		СтруктураАдреса = УправлениеКонтактнойИнформацией.ПолучитьСтруктуруАдресаИзСтроки(СтрАдрес);
		УправлениеКонтактнойИнформацией.ЗаполнитьОбъектРедактированияАдресаПоСтруктуре(ОбработкаРедактированияАдреса, СтруктураАдреса);
			
		ФормаРедактированияАдреса = ОбработкаРедактированияАдреса.ПолучитьФорму("ФормаЗаписиАдреса", ЭтаФорма, "ФормаРедактированияИноАдреса");
		// установим размеры формы для редактирования
		ФормаРедактированияАдреса.ЭлементыФормы.ПанельНастроекАдреса.Свертка = РежимСверткиЭлементаУправления.Верх;
		ФормаРедактированияАдреса.ЭлементыФормы.ПанельКомментарий.Свертка = РежимСверткиЭлементаУправления.Низ;
		ФормаРедактированияАдреса.Высота = 310;
		
		РезультатРедактирования = ФормаРедактированияАдреса.ОткрытьМодально();
		
		Если РезультатРедактирования = Истина Тогда
			СтрАдрес = УправлениеКонтактнойИнформацией.ПолучитьПолныйАдрес(ОбработкаРедактированияАдреса);
			ЭлементыФормы.СотрудникиОрганизации.ТекущиеДанные.АдресЗарубежом = СтрАдрес;
			АдресЗарубежомВФорме = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(СтрАдрес);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПринятоНалоговымОрганомПриИзменении(Элемент)
	ПринятоНалоговымОрганом = ФлажокПринятоНалоговымОрганом;
	Если Не ПринятоНалоговымОрганом Тогда
		ТолькоПросмотр = Ложь;
		РаботаСДиалогамиЗК.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОК.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ СотрудникиОрганизации
 
// Процедура - обработчик ожидания события "ПриАктивизацииСтроки"
//
Процедура ОбработчикОжиданияСотрудникиОрганизацииПриАктивизацииСтроки()
	
	ТекущаяСтрока = ЭлементыФормы.СотрудникиОрганизации.ТекущаяСтрока;
	НетОтображаемыхСтрок = ТекущаяСтрока = Неопределено;
	Если НетОтображаемыхСтрок Тогда
		ЭлементыФормы.СведенияОДоходах.ОтборСтрок.НомерСправки.Установить(-1);
		ЭлементыФормы.СведенияОВычетах.ОтборСтрок.НомерСправки.Установить(-1);
		ЭлементыФормы.СуммыНалогов.ОтборСтрок.НомерСправки.Установить(-1);
	Иначе 
		ЭлементыФормы.СведенияОДоходах.ОтборСтрок.НомерСправки.Установить(ТекущаяСтрока.НомерСправки);
		ЭлементыФормы.СведенияОВычетах.ОтборСтрок.НомерСправки.Установить(ТекущаяСтрока.НомерСправки);
		ЭлементыФормы.СуммыНалогов.ОтборСтрок.НомерСправки.Установить(ТекущаяСтрока.НомерСправки);
		АдресРФВФорме = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(ТекущаяСтрока.АдресРФ);
		АдресЗарубежомВФорме = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(ТекущаяСтрока.АдресЗарубежом);
	КонецЕсли;
	
	ЭлементыФормы.СведенияОВычетах.ТолькоПросмотр = ТолькоПросмотр Или НетОтображаемыхСтрок;
	ЭлементыФормы.СведенияОДоходах.ТолькоПросмотр = ТолькоПросмотр Или НетОтображаемыхСтрок;
	ЭлементыФормы.СуммыНалогов.ТолькоПросмотр = ТолькоПросмотр Или НетОтображаемыхСтрок;
	ЭлементыФормы.АдресРФВФорме.ТолькоПросмотр = ТолькоПросмотр Или НетОтображаемыхСтрок;
	ЭлементыФормы.АдресЗарубежомВФорме.ТолькоПросмотр = ТолькоПросмотр Или НетОтображаемыхСтрок Или Не СправкиПоНДФЛ.ВводитсяАдресЗарубежом(ТекущаяСтрока);
	
КонецПроцедуры

Процедура СотрудникиОрганизацииПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("ОбработчикОжиданияСотрудникиОрганизацииПриАктивизацииСтроки", 0.1, Истина);
КонецПроцедуры

Процедура СотрудникиОрганизацииПередУдалением(Элемент, Отказ)
	
	НомерСправки = Элемент.ТекущаяСтрока.НомерСправки;
	СправкиПоНДФЛ.УдалитьДанныеСправки(НомерСправки, СведенияОДоходах);	
	СправкиПоНДФЛ.УдалитьДанныеСправки(НомерСправки, СведенияОВычетах);
	СправкиПоНДФЛ.УдалитьДанныеСправки(НомерСправки, СуммыНалогов);
	АдресРФВФорме = "";
	АдресЗарубежомВФорме = "";
	
КонецПроцедуры

Процедура СотрудникиОрганизацииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущаяСтрока = Элемент.ТекущаяСтрока;
	Если НоваяСтрока Тогда
		мТекущийСотрудник = Справочники.СотрудникиОрганизаций.ПустаяСсылка();
		мТекущаяСтавка = Перечисления.НДФЛСтавки.ПустаяСсылка();
		мТекущийНомерСправки = -1;
		Если Не Копирование Тогда
			Если НалоговыйПериод < 2011 Или СпециальныйДокумент2011года Тогда
				ТекущаяСтрока.Ставка = Перечисления.НДФЛСтавки.Ставка13;
			КонецЕсли;
			ТекущаяСтрока.НомерСправки = мМаксимальныйНомерСправки + 1;
		КонецЕсли;
	Иначе
		мТекущийСотрудник = ТекущаяСтрока.Сотрудник;
		мТекущаяСтавка = ТекущаяСтрока.Ставка;
		мТекущийНомерСправки = ТекущаяСтрока.НомерСправки;
	КонецЕсли;
КонецПроцедуры

Процедура СотрудникиОрганизацииПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если Не ОтменаРедактирования Тогда
		НовыйНомерСправки = Элемент.ТекущаяСтрока.НомерСправки;
		НомерСтроки = Элемент.ТекущаяСтрока.НомерСтроки;
		Для каждого СтрокаТЧ Из СотрудникиОрганизации Цикл
			Если НомерСтроки = СтрокаТЧ.НомерСтроки Тогда
				Продолжить;
			КонецЕсли;
			Отказ = НовыйНомерСправки = СтрокаТЧ.НомерСправки;
			Если Отказ Тогда
				РаботаСДиалогами.ВывестиПредупреждение("Номера справок должны быть различными!");
				Возврат
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;
КонецПроцедуры

Процедура СотрудникиОрганизацииПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если Не ОтменаРедактирования Тогда
		ТекущаяСтрока = Элемент.ТекущаяСтрока;
		НовыйНомерСправки = ТекущаяСтрока.НомерСправки;
		Если мТекущийСотрудник <> ТекущаяСтрока.Сотрудник Или (НалоговыйПериод < 2011 Или СпециальныйДокумент2011года) И мТекущаяСтавка <> ТекущаяСтрока.Ставка Тогда
			СправкиПоНДФЛ.УдалитьДанныеСправки(мТекущийНомерСправки, СведенияОДоходах);	
			СправкиПоНДФЛ.УдалитьДанныеСправки(мТекущийНомерСправки, СведенияОВычетах);
			СправкиПоНДФЛ.УдалитьДанныеСправки(мТекущийНомерСправки, СуммыНалогов);
			Если мТекущийСотрудник <> ТекущаяСтрока.Сотрудник Тогда
				СправкиПоНДФЛ.ПрочитатьДанныеСотрудника(ТекущаяСтрока, Дата, НалоговыйПериод);
				Если ЗначениеЗаполнено(ТекущаяСтрока.Сотрудник) Тогда
					АдресРФВФорме = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(ТекущаяСтрока.АдресРФ);
					АдресЗарубежомВФорме = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(ТекущаяСтрока.АдресЗарубежом);
					Если НалоговыйПериод < 2011 И (ТекущаяСтрока.Ставка = Перечисления.НДФЛСтавки.Ставка30 Или ТекущаяСтрока.Ставка = Перечисления.НДФЛСтавки.Ставка15) И ТекущаяСтрока.СтатусНалогоплательщика <> Перечисления.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент Тогда
						ТекущаяСтрока.СтатусНалогоплательщика = Перечисления.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент
					КонецЕсли;
				Иначе 	
					АдресРФВФорме = "";
					АдресЗарубежомВФорме = "";
				КонецЕсли;
				ЭлементыФормы.АдресЗарубежомВФорме.ТолькоПросмотр = ТолькоПросмотр Или Не СправкиПоНДФЛ.ВводитсяАдресЗарубежом(ТекущаяСтрока)
			КонецЕсли;
			Если НалоговыйПериод < 2011 Или ОснованиеДляПредставленияСправок <> Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ Тогда
				СправкиПоНДФЛ.ПрочитатьДанныеСправки(ТекущаяСтрока, СведенияОДоходах, СведенияОВычетах, СуммыНалогов, НалоговыйПериод, Организация, мГоловнаяОрганизация, ОКАТО_КПП, НачалоМесяца(Дата));
			КонецЕсли;
		ИначеЕсли мТекущийНомерСправки <> НовыйНомерСправки Тогда
			ПроставитьНовыйНомерСправки(мТекущийНомерСправки, НовыйНомерСправки, СведенияОДоходах);
			ПроставитьНовыйНомерСправки(мТекущийНомерСправки, НовыйНомерСправки, СведенияОВычетах);
			ПроставитьНовыйНомерСправки(мТекущийНомерСправки, НовыйНомерСправки, СуммыНалогов);
		КонецЕсли;
		Если мТекущийНомерСправки <> НовыйНомерСправки Тогда
			ЭлементыФормы.СведенияОДоходах.ОтборСтрок.НомерСправки.Установить(НовыйНомерСправки);
			ЭлементыФормы.СведенияОВычетах.ОтборСтрок.НомерСправки.Установить(НовыйНомерСправки);
			ЭлементыФормы.СуммыНалогов.ОтборСтрок.НомерСправки.Установить(НовыйНомерСправки);
			мМаксимальныйНомерСправки = Макс(мМаксимальныйНомерСправки, НовыйНомерСправки);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура СотрудникиОрганизацииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) <> Тип("СправочникСсылка.ФизическиеЛица") Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
		
	Физлицо = ВыбранноеЗначение;
		
	Если СотрудникиОрганизации.НайтиСтроки(Новый Структура("Сотрудник", ФизЛицо)).Количество() = 0 Тогда
		СтрокаТабличнойЧасти = СотрудникиОрганизации.Добавить();
		СтрокаТабличнойЧасти.Сотрудник = Физлицо;
		Если НалоговыйПериод < 2011 Или СпециальныйДокумент2011года Тогда
			СтрокаТабличнойЧасти.Ставка = Перечисления.НДФЛСтавки.Ставка13;
		КонецЕсли;
		СтрокаТабличнойЧасти.НомерСправки = мМаксимальныйНомерСправки + 1;
		мМаксимальныйНомерСправки = мМаксимальныйНомерСправки + 1;
		СправкиПоНДФЛ.ПрочитатьДанныеСотрудника(СтрокаТабличнойЧасти, Дата, НалоговыйПериод);
		Если НалоговыйПериод < 2011 Или ОснованиеДляПредставленияСправок <> Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ Тогда
			СправкиПоНДФЛ.ПрочитатьДанныеСправки(СтрокаТабличнойЧасти, СведенияОДоходах, СведенияОВычетах, СуммыНалогов, НалоговыйПериод, Организация, мГоловнаяОрганизация, ОКАТО_КПП, НачалоМесяца(Дата));
		КонецЕсли;
		Если ЭлементыФормы.СотрудникиОрганизации.ТекущаяСтрока = Неопределено Тогда
			ЭлементыФормы.СотрудникиОрганизации.ТекущаяСтрока = СотрудникиОрганизации[0]
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ 
 
Процедура ПодчиненныеДанныеПередНачаломИзменения(Элемент, Отказ)
	Отказ = ЭлементыФормы.СотрудникиОрганизации.ТекущаяСтрока = Неопределено
КонецПроцедуры

Процедура СведенияОДоходахПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущаяСтрока = Элемент.ТекущаяСтрока;
	Если НоваяСтрока И Не Копирование Тогда
        ТекущаяСтрока.Месяц = 1;
		ТекущаяСтрока.НомерСправки = ЭлементыФормы.СотрудникиОрганизации.ТекущаяСтрока.НомерСправки
	КонецЕсли;
КонецПроцедуры

Процедура СведенияОДоходахПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если Не ОтменаРедактирования Тогда
		ОбновитьИтогиТекущейСтрокиСотрудника();
		Если НалоговыйПериод > 2010 И Не СпециальныйДокумент2011года Тогда
			Если ЭлементыФормы.СотрудникиОрганизации.ТекущаяСтрока <> Неопределено И ЭлементыФормы.СуммыНалогов.ТекущаяСтрока = Неопределено И СуммыНалогов.Количество() > 0 Тогда
				ЭлементыФормы.СуммыНалогов.ТекущаяСтрока = СуммыНалогов.Найти(ЭлементыФормы.СотрудникиОрганизации.ТекущаяСтрока.НомерСправки, "НомерСправки")
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура СведенияОДоходахПослеУдаления(Элемент)
	ОбновитьИтогиТекущейСтрокиСотрудника();	
КонецПроцедуры

Процедура СведенияОДоходахКодДоходаПриИзменении(Элемент)
	
	ТекущиеДанные = ЭлементыФормы.СведенияОДоходах.ТекущиеДанные;
	
	// для кода по умолчанию вычет проставлять не будем
	Если Элемент.Значение = Справочники.ДоходыНДФЛ.КодДоходаПоУмолчанию и НЕ ЗначениеЗаполнено(ТекущиеДанные.КодВычета) Тогда
		Возврат
	КонецЕсли;
	
	// Контролируем допустимость кода вычета
	СписокКодовВычетов = СправкиПоНДФЛ.СписокВычетовДляДохода(Элемент.Значение, мСоответствиеДоходовИВычетов, мСписокАвторскихВознаграждений, ЭлементыФормы.СотрудникиОрганизации.ТекущаяСтрока.СтатусНалогоплательщика);
	
	Если СписокКодовВычетов.Количество() = 1 Тогда
		// Если доступен только один код вычета, то возьмём его
		ТекущиеДанные.КодВычета = СписокКодовВычетов[0].Значение;	
	Иначе
		Если СписокКодовВычетов.НайтиПоЗначению(ТекущиеДанные.КодВычета) = Неопределено Тогда
			// Если ранее установленный код вычета не доступен, то очистим его
			ТекущиеДанные.КодВычета = Неопределено;
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

Процедура СведенияОДоходахКодДоходаНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ФормаВыбора = Справочники.ДоходыНДФЛ.ПолучитьФормуВыбора(, Элемент);
	ФормаВыбора.Отбор.НеОтражаетсяВОтчетности2010.ВидСравнения	= ВидСравнения.Равно;
	ФормаВыбора.Отбор.НеОтражаетсяВОтчетности2010.Значение		= Ложь;
	ФормаВыбора.Отбор.НеОтражаетсяВОтчетности2010.Использование	= Истина;
	ФормаВыбора.НачальноеЗначениеВыбора = Элемент.Значение;
	ФормаВыбора.Открыть();
КонецПроцедуры

Процедура СведенияОДоходахКодДоходаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, ПолучитьСтруктуруПараметровПодбораПоСтроке("КодДохода"), Тип("СправочникСсылка.ДоходыНДФЛ"));
КонецПроцедуры

Процедура СведенияОДоходахКодДоходаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	ПроцедурыПоискаПоСтроке.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, ПолучитьСтруктуруПараметровПодбораПоСтроке("КодДохода"), ЭтаФорма, Тип("СправочникСсылка.ДоходыНДФЛ"), мОбработкаПодбораПоСтроке, мТекстПодбораПоСтроке, мПоследнееЗначениеЭлементаПодбораПоСтроке, Ложь);
КонецПроцедуры

Процедура СведенияОДоходахКодВычетаНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокОтбора = СправкиПоНДФЛ.СписокВычетовДляДохода(ЭлементыФормы.СведенияОДоходах.ТекущаяСтрока.КодДохода, мСоответствиеДоходовИВычетов, мСписокАвторскихВознаграждений, ЭлементыФормы.СотрудникиОрганизации.ТекущаяСтрока.СтатусНалогоплательщика);
	Если СписокОтбора.Количество() > 0 Тогда
		ФормаВыбора = Справочники.ВычетыНДФЛ.ПолучитьФормуВыбора(, Элемент);
		ФормаВыбора.Отбор.Ссылка.ВидСравнения	= ВидСравнения.ВСписке;
		ФормаВыбора.Отбор.Ссылка.Значение		= СписокОтбора;
		ФормаВыбора.Отбор.Ссылка.Использование	= Истина;
		ФормаВыбора.НачальноеЗначениеВыбора = Элемент.Значение;
		ФормаВыбора.Открыть();
	Иначе	
		ЭлементСписка = ВыбратьИзСписка(СписокОтбора,Элемент,СписокОтбора.НайтиПоЗначению(Элемент.Значение));
		Если ЭлементСписка <> Неопределено Тогда
			Элемент.Значение = ЭлементСписка.Значение
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура СведенияОДоходахКодВычетаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, Новый Структура("Ссылка", СправкиПоНДФЛ.СписокВычетовДляДохода(ЭлементыФормы.СведенияОДоходах.ТекущаяСтрока.КодДохода, мСоответствиеДоходовИВычетов, мСписокАвторскихВознаграждений, ЭлементыФормы.СотрудникиОрганизации.ТекущаяСтрока.СтатусНалогоплательщика)), Тип("СправочникСсылка.ВычетыНДФЛ"));
КонецПроцедуры

Процедура СведенияОДоходахКодВычетаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	ПроцедурыПоискаПоСтроке.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, Новый Структура("Ссылка",СправкиПоНДФЛ.СписокВычетовДляДохода(ЭлементыФормы.СведенияОДоходах.ТекущаяСтрока.КодДохода, мСоответствиеДоходовИВычетов, мСписокАвторскихВознаграждений, ЭлементыФормы.СотрудникиОрганизации.ТекущаяСтрока.СтатусНалогоплательщика)), ЭтаФорма, Тип("СправочникСсылка.ВычетыНДФЛ"), Ложь, Ложь, Неопределено, Ложь);
КонецПроцедуры


Процедура СведенияОВычетахПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущаяСтрока = Элемент.ТекущаяСтрока;
	Если НоваяСтрока И Не Копирование Тогда
		ТекущаяСтрока.НомерСправки = ЭлементыФормы.СотрудникиОрганизации.ТекущаяСтрока.НомерСправки
	КонецЕсли;
КонецПроцедуры

Процедура СведенияОВычетахПослеУдаления(Элемент)
	ОбновитьИтогиТекущейСтрокиСотрудника();	
КонецПроцедуры

Процедура СведенияОВычетахКодВычетаНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ФормаВыбора = Справочники.ВычетыНДФЛ.ПолучитьФормуВыбора(, Элемент);
	ФормаВыбора.Отбор.Ссылка.ВидСравнения	= ВидСравнения.ВСписке;
	ФормаВыбора.Отбор.Ссылка.Значение		= мСписокВыбораСтандартныхВычетов;
	ФормаВыбора.Отбор.Ссылка.Использование	= Истина;
	ФормаВыбора.НачальноеЗначениеВыбора = Элемент.Значение;
	ФормаВыбора.Открыть();
КонецПроцедуры

Процедура СведенияОВычетахКодВычетаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, Новый Структура("Ссылка",мСписокВыбораСтандартныхВычетов), Тип("СправочникСсылка.ВычетыНДФЛ"));
КонецПроцедуры

Процедура СведенияОВычетахКодВычетаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	ПроцедурыПоискаПоСтроке.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, Новый Структура("Ссылка",мСписокВыбораСтандартныхВычетов), ЭтаФорма, Тип("СправочникСсылка.ВычетыНДФЛ"), Ложь, Ложь, Неопределено, Ложь);
КонецПроцедуры

Процедура СведенияОВычетахСуммаВычетаПриИзменении(Элемент)
	ОбновитьИтогиТекущейСтрокиСотрудника();	
КонецПроцедуры


Процедура СуммыНалоговПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущаяСтрока = Элемент.ТекущаяСтрока;
	Если НоваяСтрока Тогда
		ТекущиеСтроки = СуммыНалогов.НайтиСтроки(Новый Структура("НомерСправки", ЭлементыФормы.СотрудникиОрганизации.ТекущаяСтрока.НомерСправки));
		ИмеющиесяСтавки = Новый Массив;
		Для каждого СтрокаТЧ Из ТекущиеСтроки Цикл
			Если СтрокаТЧ.НомерСтроки = ТекущаяСтрока.НомерСтроки Тогда
				Продолжить;
			КонецЕсли;
			ИмеющиесяСтавки.Добавить(СтрокаТЧ.Ставка);
		КонецЦикла;
		Для каждого ЗначениеПеречисления Из Перечисления.НДФЛСтавки Цикл
			Если ИмеющиесяСтавки.Найти(ЗначениеПеречисления) = Неопределено Тогда
				ТекущаяСтрока.Ставка = ЗначениеПеречисления;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если Не Копирование Тогда
			ТекущаяСтрока.НомерСправки = ЭлементыФормы.СотрудникиОрганизации.ТекущаяСтрока.НомерСправки
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МЕХАНИЗМА ЗАЩИЩЕННОГО ДОКУМЕНТООБОРОТА С ФНС

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если КонтекстЭДО <> Неопределено Тогда
		КонтекстЭДО.ОбработкаОповещенияФормыРегламентированногоОтчета2НДФЛ(ЭтаФорма, ИмяСобытия, Параметр, Источник);
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельФормыДействиеОтправка(Кнопка)
	
	РегламентированнаяОтчетность.ПриНажатииНаКнопкуОтправкиВРегламентированномОтчете2НДФЛ(ЭтаФорма, Кнопка);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ИНИЦИАЛИЗАЦИЯ ФОРМЫ

// Все виды авторских 2201-2209
мСписокАвторскихВознаграждений = Новый Массив;
мСписокАвторскихВознаграждений.Добавить(Справочники.ДоходыНДФЛ.Код2201);
мСписокАвторскихВознаграждений.Добавить(Справочники.ДоходыНДФЛ.Код2202);
мСписокАвторскихВознаграждений.Добавить(Справочники.ДоходыНДФЛ.Код2203);
мСписокАвторскихВознаграждений.Добавить(Справочники.ДоходыНДФЛ.Код2204);
мСписокАвторскихВознаграждений.Добавить(Справочники.ДоходыНДФЛ.Код2205);
мСписокАвторскихВознаграждений.Добавить(Справочники.ДоходыНДФЛ.Код2206);
мСписокАвторскихВознаграждений.Добавить(Справочники.ДоходыНДФЛ.Код2207);
мСписокАвторскихВознаграждений.Добавить(Справочники.ДоходыНДФЛ.Код2208);
мСписокАвторскихВознаграждений.Добавить(Справочники.ДоходыНДФЛ.Код2209);