// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;


////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ


// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка,Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
	СоответствиеТЧ = Новый Соответствие;
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧПоДеревуКнопок(мКнопкиЗаполненияТЧ,СоответствиеТЧ);
	
КонецПроцедуры


// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
	
КонецПроцедуры // ПередОткрытием()

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()
	
	
	Если НЕ ЭтоНовый() Тогда 
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	КонецЕсли;
	
	Если (НЕ ЗначениеЗаполнено(Ответственный)) ИЛИ (НЕ ПараметрОбъектКопирования=Неопределено) Тогда
		Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
	КонецЕсли;
	
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	// Создать кнопки печати
	ФормированиеПечатныхФорм.СоздатьКнопкиПечати(ЭтотОбъект, ЭтаФорма);
	
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект,ЭтаФорма);
	
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ПриОткрытии

// Процедура - обработчик события "ПередЗаписью" формы.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если Ответственный.Пустая() Тогда
		Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
	КонецЕсли;
	
КонецПроцедуры



// Выполняет проверку на соответствие установленной даты фиксации
// максимальной дате фиксации бюджетов по выбранной комбинации измерений.
// В случае, когда дата фиксации меньше установленной, она становится равной
// дате начала следующего периода.
// Параметры: нет
//
Процедура ПроверкаДатыФиксации()
	
	Если Сценарий.Пустая() Тогда
		Возврат;
	КонецЕсли;
		
	Запрос=Новый Запрос;
	ТекстЗапроса="
	|ВЫБРАТЬ
	|	МАКСИМУМ(ГраницыПериодовБюджетирования.ГраницаФиксации) КАК ТекущаяГраницаФиксации
	|ИЗ
	|	РегистрСведений.ГраницыПериодовБюджетирования КАК ГраницыПериодовБюджетирования
	|
	|ГДЕ
	|	(ГраницыПериодовБюджетирования.Сценарий = &Сценарий) И
	|	(ГраницыПериодовБюджетирования.ЦФО = &ЦФО ИЛИ ГраницыПериодовБюджетирования.ЦФО = &ПустойЦФО) И
	|	(ГраницыПериодовБюджетирования.Проект = &Проект ИЛИ ГраницыПериодовБюджетирования.Проект = &ПустойПроект)";
	
	Запрос.Текст=ТекстЗапроса;

    Запрос.УстановитьПараметр("ЦФО",ЦФО);
    Запрос.УстановитьПараметр("ПустойЦФО",Новый(Тип("СправочникСсылка.Подразделения")));

	Запрос.УстановитьПараметр("Проект",Проект);
    Запрос.УстановитьПараметр("ПустойПроект",Новый(Тип("СправочникСсылка.Проекты")));	

	Запрос.УстановитьПараметр("Сценарий",Сценарий);
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() И (НЕ Результат.ТекущаяГраницаФиксации=NULL) И Результат.ТекущаяГраницаФиксации> ГраницаФиксации Тогда
		 ГраницаФиксации=ОбщегоНазначения.ДобавитьИнтервал(Результат.ТекущаяГраницаФиксации,Сценарий.Периодичность,1);
	КонецЕсли;
		
КонецПроцедуры // ПроверкаДатыФиксации()

Процедура СценарийПриИзменении(Элемент)
	
	ПроверкаДатыФиксации();
	
КонецПроцедуры

Процедура ЦФОПриИзменении(Элемент)
	
	ПроверкаДатыФиксации();
	
КонецПроцедуры

Процедура ПроектПриИзменении(Элемент)
	
	ПроверкаДатыФиксации();
	
КонецПроцедуры

Процедура ДатаНачалаПриИзменении(Элемент)
	
	Элемент.Значение=ОбщегоНазначения.ДатаНачалаПериода(Элемент.Значение,Сценарий.Периодичность);	
	ПроверкаДатыФиксации();
	
КонецПроцедуры

Процедура ДатаНачалаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;

	Элемент.Значение=ОбщегоНазначения.ДобавитьИнтервал(Элемент.Значение,Сценарий.Периодичность,Направление);
	ПроверкаДатыФиксации();
	
КонецПроцедуры

Процедура ДействияФормыРедактироватьНомер(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
КонецПроцедуры
// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать".
// Открывает форму выбора печатных форм объекта.
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ОткрытьФормуВыбораПечатныхФормОбъекта(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ОсновныеДействияФормыПечать() 

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)

	УниверсальныеМеханизмы.НапечататьДокументПоУмолчанию(ЭтотОбъект);

КонецПроцедуры

Процедура ПослеЗаписи()
	
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры