////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мДлинаСуток;

Перем мПоследнийВидЕжегодногоОтпуска;

Перем мКоличествоДнейОтпускаВГод;
Перем мСписокВидовЕжегодногоОтпуска;
Перем мОсновнойВидЕжегодногоОтпуска;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ОбновитьРеквизитыПростойНастройкиПоДанным()
	
	ОстаткиПоследние = Остатки.Выгрузить();
	ОстаткиПоследние.Сортировать("ДатаОкончанияРабочегоГода УБЫВ");
	
	Если ОстаткиПоследние.Количество() > 0 Тогда
		ДатаОстатков	= ОстаткиПоследние[0].ДатаОкончанияРабочегоГода;
	ИначеЕсли Не ЗначениеЗаполнено(ДатаОстатков) Тогда
		ДатаОстатков	= НачалоДня(ТекущаяДата()) - 1;
	КонецЕсли;
	КоличествоДней		= Остатки.Итог("Количество");
	
КонецПроцедуры

Процедура ЗаполнитьТаблицуОстатковПослеПростогоВвода()
	
	Остатки.Очистить();
	
	Если КоличествоДней <= 0 Тогда
		Строка = Остатки.Добавить();
		Строка.ВидЕжегодногоОтпуска			= мОсновнойВидЕжегодногоОтпуска;
		Строка.ДатаОкончанияРабочегоГода	= ДатаОстатков;
		Строка.ДатаНачалаРабочегоГода		= КонецДня(ДобавитьМесяц(Строка.ДатаОкончанияРабочегоГода, -12)) + 1;
		Строка.Количество					= КоличествоДней;
		
		Возврат;
	КонецЕсли;
	
	КоличествоДнейДробное = КоличествоДней / мКоличествоДнейОтпускаВГод[мОсновнойВидЕжегодногоОтпуска];
	
	КоличествоЛет = Цел(КоличествоДнейДробное) + ?(Цел(КоличествоДнейДробное) <> КоличествоДнейДробное, 1, 0);
	
	Для НомерГода = 1 По КоличествоЛет Цикл
		Строка = Остатки.Добавить();
		Строка.ВидЕжегодногоОтпуска			= мОсновнойВидЕжегодногоОтпуска;
		Строка.ДатаОкончанияРабочегоГода	= ?(НомерГода = КоличествоЛет, ДатаОстатков, ДобавитьМесяц(ДатаОстатков, -12 * (КоличествоЛет - НомерГода)));
		Строка.ДатаНачалаРабочегоГода		= КонецДня(ДобавитьМесяц(Строка.ДатаОкончанияРабочегоГода, -12)) + 1;
		Строка.Количество					= ?(НомерГода = 1, КоличествоДней - мКоличествоДнейОтпускаВГод[мОсновнойВидЕжегодногоОтпуска] * (КоличествоЛет - 1), мКоличествоДнейОтпускаВГод[мОсновнойВидЕжегодногоОтпуска]);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьРеквизитыПростойНастройкиСВидамиОтпусковПоДанным()
	
	ОстаткиПоследние = Остатки.Выгрузить();
	ОстаткиПоследние.Сортировать("ДатаОкончанияРабочегоГода УБЫВ");
	
	Если ОстаткиПоследние.Количество() > 0 Тогда
		ДатаОстатков	= ОстаткиПоследние[0].ДатаОкончанияРабочегоГода;
	ИначеЕсли Не ЗначениеЗаполнено(ДатаОстатков) Тогда
		ДатаОстатков	= НачалоДня(ТекущаяДата()) - 1;
	КонецЕсли;
	
	ОстаткиБезРабочихЛет.Очистить();
	Для Каждого ВидЕжегодногоОтпуска Из мСписокВидовЕжегодногоОтпуска Цикл
		НайденныеСтроки = ОстаткиПоследние.НайтиСтроки(Новый Структура("ВидЕжегодногоОтпуска", ВидЕжегодногоОтпуска));
		КоличествоДней = 0;
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			КоличествоДней = КоличествоДней + НайденнаяСтрока.Количество;
		КонецЦикла;
		
		Строка = ОстаткиБезРабочихЛет.Добавить();
		Строка.ВидЕжегодногоОтпуска	= ВидЕжегодногоОтпуска;
		Строка.Количество			= КоличествоДней;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьТаблицуОстатковСВидамиОтпусковПослеПростогоВвода()
	
	Остатки.Очистить();
	
	Для Каждого СтрокаОтпусков Из ОстаткиБезРабочихЛет Цикл
		Если СтрокаОтпусков.Количество <= 0 Тогда
			Строка = Остатки.Добавить();
			Строка.ВидЕжегодногоОтпуска			= СтрокаОтпусков.ВидЕжегодногоОтпуска;
			Строка.ДатаОкончанияРабочегоГода	= ДатаОстатков;
			Строка.ДатаНачалаРабочегоГода		= КонецДня(ДобавитьМесяц(Строка.ДатаОкончанияРабочегоГода, -12)) + 1;
			Строка.Количество					= СтрокаОтпусков.Количество;
			
			Продолжить;
		КонецЕсли;
		
		КоличествоДнейДробное = СтрокаОтпусков.Количество / мКоличествоДнейОтпускаВГод[СтрокаОтпусков.ВидЕжегодногоОтпуска];
		
		КоличествоЛет = Цел(КоличествоДнейДробное) + ?(Цел(КоличествоДнейДробное) <> КоличествоДнейДробное, 1, 0);
		
		Для НомерГода = 1 По КоличествоЛет Цикл
			Строка = Остатки.Добавить();
			Строка.ВидЕжегодногоОтпуска			= СтрокаОтпусков.ВидЕжегодногоОтпуска;
			Строка.ДатаОкончанияРабочегоГода	= ?(НомерГода = КоличествоЛет, ДатаОстатков, ДобавитьМесяц(ДатаОстатков, -12 * (КоличествоЛет - НомерГода)));
			Строка.ДатаНачалаРабочегоГода		= КонецДня(ДобавитьМесяц(Строка.ДатаОкончанияРабочегоГода, -12)) + 1;
			Строка.Количество					= ?(НомерГода = 1, СтрокаОтпусков.Количество - мКоличествоДнейОтпускаВГод[СтрокаОтпусков.ВидЕжегодногоОтпуска] * (КоличествоЛет - 1), мКоличествоДнейОтпускаВГод[СтрокаОтпусков.ВидЕжегодногоОтпуска]);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыЕжегодныхОтпусков.Ссылка КАК ВидЕжегодногоОтпуска,
	|	ВидыЕжегодныхОтпусков.КоличествоДнейОтпускаВГод,
	|	1 КАК Приоритет,
	|	ВидыЕжегодныхОтпусков.Код КАК Код
	|ИЗ
	|	Справочник.ВидыЕжегодныхОтпусков КАК ВидыЕжегодныхОтпусков
	|ГДЕ
	|	ВидыЕжегодныхОтпусков.ПредоставлятьОтпускВсемСотрудникам
	|	И НЕ ВидыЕжегодныхОтпусков.ПометкаУдаления
	|	И ВидыЕжегодныхОтпусков.СпособРасчетаОстаткаОтпуска = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОстаткаОтпуска.ПоКалендарнымДням)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДолжностиОрганизацийЕжегодныеОтпуска.ВидЕжегодногоОтпуска,
	|	ДолжностиОрганизацийЕжегодныеОтпуска.КоличествоДнейОтпускаВГод,
	|	2,
	|	ДолжностиОрганизацийЕжегодныеОтпуска.ВидЕжегодногоОтпуска.Код
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(, Сотрудник = &Сотрудник) КАК РаботникиОрганизацийСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДолжностиОрганизаций.ЕжегодныеОтпуска КАК ДолжностиОрганизацийЕжегодныеОтпуска
	|		ПО РаботникиОрганизацийСрезПоследних.Должность = ДолжностиОрганизацийЕжегодныеОтпуска.Ссылка
	|ГДЕ
	|	НЕ ДолжностиОрганизацийЕжегодныеОтпуска.ВидЕжегодногоОтпуска.ПометкаУдаления
	|	И ДолжностиОрганизацийЕжегодныеОтпуска.ВидЕжегодногоОтпуска.СпособРасчетаОстаткаОтпуска = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОстаткаОтпуска.ПоКалендарнымДням)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СотрудникиОрганизацийЕжегодныеОтпуска.ВидЕжегодногоОтпуска,
	|	СотрудникиОрганизацийЕжегодныеОтпуска.КоличествоДнейОтпускаВГод,
	|	3,
	|	СотрудникиОрганизацийЕжегодныеОтпуска.ВидЕжегодногоОтпуска.Код
	|ИЗ
	|	Справочник.СотрудникиОрганизаций.ЕжегодныеОтпуска КАК СотрудникиОрганизацийЕжегодныеОтпуска
	|ГДЕ
	|	СотрудникиОрганизацийЕжегодныеОтпуска.Ссылка = &Сотрудник
	|	И НЕ СотрудникиОрганизацийЕжегодныеОтпуска.ВидЕжегодногоОтпуска.ПометкаУдаления
	|	И СотрудникиОрганизацийЕжегодныеОтпуска.ВидЕжегодногоОтпуска.СпособРасчетаОстаткаОтпуска = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОстаткаОтпуска.ПоКалендарнымДням)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код,
	|	Приоритет УБЫВ";
	Выборка = Запрос.Выполнить().Выбрать();
	
	мКоличествоДнейОтпускаВГод = Новый Соответствие;
	мСписокВидовЕжегодногоОтпуска = Новый Массив;
	
	Пока Выборка.СледующийПоЗначениюПоля("ВидЕжегодногоОтпуска") Цикл
		мСписокВидовЕжегодногоОтпуска.Добавить(Выборка.ВидЕжегодногоОтпуска);
		
		Если Выборка.Следующий() Тогда
			мКоличествоДнейОтпускаВГод.Вставить(Выборка.ВидЕжегодногоОтпуска, Выборка.КоличествоДнейОтпускаВГод);
			
			// Если отпуск один, он и будет основной. Если отпусков несколько, эта переменная использоваться не будет.
			мОсновнойВидЕжегодногоОтпуска = Выборка.ВидЕжегодногоОтпуска;
		КонецЕсли;
	КонецЦикла;
	
	Если мКоличествоДнейОтпускаВГод.Количество() = 0 Тогда
		РаботаСДиалогами.ВывестиПредупреждение("Выбранному сотруднику ежегодные отпуска не предоставляются.");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если мКоличествоДнейОтпускаВГод.Количество() < 2 Тогда
		ОбновитьРеквизитыПростойНастройкиПоДанным();
		ЭлементыФормы.ПанельОстатки.ТекущаяСтраница = ЭлементыФормы.ПанельОстатки.Страницы.ОдинОтпуск;
		
	Иначе
		ОбновитьРеквизитыПростойНастройкиСВидамиОтпусковПоДанным();
		ЭлементыФормы.ПанельОстатки.ТекущаяСтраница = ЭлементыФормы.ПанельОстатки.Страницы.НесколькоОтпусков;
		
	КонецЕсли;
	
	Заголовок = Строка(Сотрудник);
	Если ПустаяСтрока(Наименование) Тогда
		Наименование = Строка(Сотрудник) + ", " + Формат(ДатаАктуальности, "ДФ=dd.MM.yyyy");
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		Если мКоличествоДнейОтпускаВГод.Количество() < 2 Тогда
			ЗаполнитьТаблицуОстатковПослеПростогоВвода();
			
		Иначе
			ЗаполнитьТаблицуОстатковСВидамиОтпусковПослеПростогоВвода();
			
		КонецЕсли;
	КонецЕсли;
	
	Если ЭлементыФормы.ПанельОстатки.ТекущаяСтраница = ЭлементыФормы.ПанельОстатки.Страницы.ОдинОтпуск Тогда
		ТекущийЭлемент = ЭлементыФормы.КоличествоДней;
		
	ИначеЕсли ЭлементыФормы.ПанельОстатки.ТекущаяСтраница = ЭлементыФормы.ПанельОстатки.Страницы.НесколькоОтпусков Тогда
		ТекущийЭлемент = ЭлементыФормы.ОстаткиБезРабочихЛет;
		
	Иначе
		ТекущийЭлемент = ЭлементыФормы.Остатки;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаписи()
	
	Оповестить("ИзмененыОстаткиОтпусковОрганизаций", , ВладелецФормы);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура Рассчитать(Кнопка)
	
	Если Остатки.Количество() > 0 Тогда
		ТекстВопроса = "Текущие остатки будут очищены. Перезаполнить остатки?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Результат = ОстаткиОтпусков.ОстатокОтпускаСотрудникаНаДату(Сотрудник, ДатаОстатков);
	
	Остатки.Очистить();
	Для Каждого Остаток Из Результат.ОстаткиВРазрезеРабочихЛетИВидовОтпусков Цикл
		Строка = Остатки.Добавить();
		Строка.ВидЕжегодногоОтпуска			= Остаток.ВидЕжегодногоОтпуска;
		Строка.Количество					= Остаток.ОсталосьДней;
		Строка.ДатаНачалаРабочегоГода		= Остаток.РабочийГодС;
		Строка.ДатаОкончанияРабочегоГода	= Остаток.РабочийГодПо;
	КонецЦикла;
	Остатки.Сортировать("ВидЕжегодногоОтпуска, ДатаОкончанияРабочегоГода");
	
	Если мКоличествоДнейОтпускаВГод.Количество() < 2 Тогда
		ОбновитьРеквизитыПростойНастройкиПоДанным();
		
	Иначе
		ОбновитьРеквизитыПростойНастройкиСВидамиОтпусковПоДанным();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьИЗакрыть(Кнопка)
	
	Если Модифицированность Тогда
		Если Не ЗаписатьВФорме() Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

Процедура ЗаписатьБезЗакрытия(Кнопка)
	
	Если Модифицированность Тогда
		ЗаписатьВФорме();
	КонецЕсли;
	
КонецПроцедуры

Процедура ДетальныйВводНажатие(Элемент)
	
	ЭлементыФормы.ПанельОстатки.ТекущаяСтраница = ЭлементыФормы.ПанельОстатки.Страницы.ОтпускаСРабочимиГодами;
	ТекущийЭлемент = ЭлементыФормы.Остатки;
	
КонецПроцедуры

Процедура ПростойВводНажатие(Элемент)
	
	Если мКоличествоДнейОтпускаВГод.Количество() < 2 Тогда
		ЭлементыФормы.ПанельОстатки.ТекущаяСтраница = ЭлементыФормы.ПанельОстатки.Страницы.ОдинОтпуск;
		ТекущийЭлемент = ЭлементыФормы.КоличествоДней;
		
	Иначе
		ЭлементыФормы.ПанельОстатки.ТекущаяСтраница = ЭлементыФормы.ПанельОстатки.Страницы.НесколькоОтпусков;
		ТекущийЭлемент = ЭлементыФормы.ОстаткиБезРабочихЛет;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ДатаОстатковПриИзменении(Элемент)
	
	ЗаполнитьТаблицуОстатковПослеПростогоВвода();
	
КонецПроцедуры

Процедура КоличествоДнейПриИзменении(Элемент)
	
	ЗаполнитьТаблицуОстатковПослеПростогоВвода();
	
КонецПроцедуры

Процедура ДатаОстатковПоВидамОтпусковПриИзменении(Элемент)
	
	ЗаполнитьТаблицуОстатковСВидамиОтпусковПослеПростогоВвода();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ОстаткиБезРабочихЛет

Процедура ОстаткиБезРабочихЛетКоличествоПриИзменении(Элемент)
	
	ЗаполнитьТаблицуОстатковСВидамиОтпусковПослеПростогоВвода();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ Остатки

Процедура ОстаткиПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	ДанныеСтроки = ЭлементыФормы.Остатки.ТекущиеДанные;
	
	Если ДанныеСтроки = Неопределено Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 2
		|	ВидыЕжегодныхОтпусков.Ссылка
		|ИЗ
		|	Справочник.ВидыЕжегодныхОтпусков КАК ВидыЕжегодныхОтпусков
		|ГДЕ
		|	(НЕ ВидыЕжегодныхОтпусков.ПометкаУдаления)";
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Количество() = 1 Тогда
			Выборка.Следующий();
			мПоследнийВидЕжегодногоОтпуска	= Выборка.Ссылка;
		КонецЕсли;
		
	Иначе
		мПоследнийВидЕжегодногоОтпуска = ДанныеСтроки.ВидЕжегодногоОтпуска;
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ОстаткиПослеУдаления(Элемент)
	
	ДанныеСтроки = Элемент.ТекущиеДанные;
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокиОстатков = Остатки.НайтиСтроки(Новый Структура("ВидЕжегодногоОтпуска",	ДанныеСтроки.ВидЕжегодногоОтпуска));
	
	// Если строк остатков меньше двух, нет смысла пересчитывать
	Если СтрокиОстатков.Количество() < 2 Тогда
		Возврат;
	КонецЕсли;
	
	НоваяДатаНачала = СтрокиОстатков[0].ДатаОкончанияРабочегоГода + мДлинаСуток;
	
	ПерваяСтрока = Истина;
	Для Каждого СтрокаОстатка Из СтрокиОстатков Цикл
		// первую строку пропускаем, корректировать рабочие года начнем со второй
		Если ПерваяСтрока Тогда
			ПерваяСтрока = Ложь;
			Продолжить;
		КонецЕсли;
		
		РазницаДат = СтрокаОстатка.ДатаОкончанияРабочегоГода - СтрокаОстатка.ДатаНачалаРабочегоГода;
		
		СтрокаОстатка.ДатаНачалаРабочегоГода	= НоваяДатаНачала;
		СтрокаОстатка.ДатаОкончанияРабочегоГода	= СтрокаОстатка.ДатаНачалаРабочегоГода + РазницаДат;
		
		НоваяДатаНачала = СтрокаОстатка.ДатаОкончанияРабочегоГода + мДлинаСуток;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОстаткиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Не НоваяСтрока Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСтроки = ЭлементыФормы.Остатки.ТекущиеДанные;
	
	ДанныеСтроки.ВидЕжегодногоОтпуска			= мПоследнийВидЕжегодногоОтпуска;
	
	СтрокиОстатков = Остатки.НайтиСтроки(Новый Структура("ВидЕжегодногоОтпуска",	ДанныеСтроки.ВидЕжегодногоОтпуска));
	
	Если СтрокиОстатков.Количество() > 1 Тогда
		ДанныеСтроки.ДатаНачалаРабочегоГода		= СтрокиОстатков[СтрокиОстатков.Количество()-2].ДатаОкончанияРабочегоГода + мДлинаСуток;
		ДанныеСтроки.ДатаОкончанияРабочегоГода	= ДобавитьМесяц(ДанныеСтроки.ДатаНачалаРабочегоГода, 12) - мДлинаСуток;
		
	Иначе
		ДанныеСтроки.ДатаНачалаРабочегоГода		= НачалоГода(ДобавитьМесяц(ОбщегоНазначения.ПолучитьРабочуюДату(), -12));
		ДанныеСтроки.ДатаОкончанияРабочегоГода	= ДобавитьМесяц(ДанныеСтроки.ДатаНачалаРабочегоГода, 12) - мДлинаСуток;
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ОстаткиПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеСтроки.Ячейки.ГодРаботы.Видимость = Ложь;
	
КонецПроцедуры

Процедура ОстаткиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока ИЛИ ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	Остатки.Сортировать("ВидЕжегодногоОтпуска, ДатаНачалаРабочегоГода");
	
	ДанныеСтроки = Элемент.ТекущиеДанные;
	
	СтрокиОстатков = Остатки.НайтиСтроки(Новый Структура("ВидЕжегодногоОтпуска",	ДанныеСтроки.ВидЕжегодногоОтпуска));
	
	// Если строк остатков меньше двух, нет смысла пересчитывать
	Если СтрокиОстатков.Количество() < 2 Тогда
		Возврат;
	КонецЕсли;
	
	НоваяДатаНачала = СтрокиОстатков[0].ДатаНачалаРабочегоГода;
	
	Для Каждого СтрокаОстатка Из СтрокиОстатков Цикл
		РазницаДат = СтрокаОстатка.ДатаОкончанияРабочегоГода - СтрокаОстатка.ДатаНачалаРабочегоГода;
		
		СтрокаОстатка.ДатаНачалаРабочегоГода	= НоваяДатаНачала;
		СтрокаОстатка.ДатаОкончанияРабочегоГода	= СтрокаОстатка.ДатаНачалаРабочегоГода + РазницаДат;
		
		НоваяДатаНачала = СтрокаОстатка.ДатаОкончанияРабочегоГода + мДлинаСуток;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОстаткиКоличествоПриИзменении(Элемент)
	
	Если мКоличествоДнейОтпускаВГод.Количество() < 2 Тогда
		ОбновитьРеквизитыПростойНастройкиПоДанным();
		
	Иначе
		ОбновитьРеквизитыПростойНастройкиСВидамиОтпусковПоДанным();
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мДлинаСуток = 86400;