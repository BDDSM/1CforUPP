////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Есть файлы по полису
Перем мПоказыватьФайлы;
Перем мЕстьФайлы;

// Переменные, используемые при добавлении файла
Перем мИмяФайла;
Перем мХранилищеФайла;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ОбновитьДанныеФизическогоЛица()
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Физлицо",	Физлицо);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ФизическиеЛицаСоставСемьи.Имя
	|ИЗ
	|	Справочник.ФизическиеЛица.СоставСемьи КАК ФизическиеЛицаСоставСемьи
	|ГДЕ
	|	ФизическиеЛицаСоставСемьи.Ссылка = &Физлицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическиеЛицаСоставСемьи.НомерСтроки";
	
	ЭлементыФормы.Родственник.СписокВыбора.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Имя"));
	
КонецПроцедуры

Процедура ИзменитьДоступностьОтВидаСтрахования()
	
	ДобровольноеСтрахование = ВидСтрахования = Перечисления.ВидыМедицинскогоСтрахования.Добровольное;
	
	ЭлементыФормы.ПрограммаСтрахования.Доступность		= ДобровольноеСтрахование;
	ЭлементыФормы.СтрахованиеСотрудника.Доступность		= ДобровольноеСтрахование;
	ЭлементыФормы.СтрахованиеРодственника.Доступность	= ДобровольноеСтрахование;
	ЭлементыФормы.Родственник.Доступность				= ДобровольноеСтрахование И СтрахованиеРодственника;
	
КонецПроцедуры

Процедура ОбновитьПредставлениеУдостоверенияЛичности()
	
	Если ЗначениеЗаполнено(ДокументВид)
		ИЛИ ЗначениеЗаполнено(ДокументСерия)
		ИЛИ ЗначениеЗаполнено(ДокументНомер)
		ИЛИ ЗначениеЗаполнено(ДокументДатаВыдачи)
		ИЛИ ЗначениеЗаполнено(ДокументКемВыдан)
		ИЛИ ЗначениеЗаполнено(ДокументКодПодразделения) Тогда
		
		УдостоверениеЛичности = "" + ДокументВид + ", серия: " + ДокументСерия + ", № " + ДокументНомер 
								+ ", выдан: " + Формат(ДокументДатаВыдачи,"ДФ='д ММММ гггг'; ДП='...'") + " года, " 
								+ ДокументКемВыдан + ", № подр. " + ДокументКодПодразделения;
		
	Иначе
		УдостоверениеЛичности = "";
		
	КонецЕсли;
	
	Если ПустаяСтрока(УдостоверениеЛичности) Тогда
		УдостоверениеЛичностиПредставление = "Ввести данные об удостоверении личности";
	Иначе
		УдостоверениеЛичностиПредставление = УдостоверениеЛичности;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДанныеФизлица() Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Физлицо",	Физлицо);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ФизическиеЛица.Пол,
	|	ФизическиеЛица.ДатаРождения
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	ФизическиеЛица.Ссылка = &Физлицо";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Выборка);
	
	ОбновитьДанныеФизическогоЛица();
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументВид,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументСерия,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументНомер,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументДатаВыдачи,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументКемВыдан,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументКодПодразделения,
	|	"","" + АдресаФактические.Поле1 + "","" + АдресаФактические.Поле2 + "","" + АдресаФактические.Поле3 + "","" + АдресаФактические.Поле4 + "","" + АдресаФактические.Поле5 + "","" + АдресаФактические.Поле6 + "","" + АдресаФактические.Поле7 + "","" + АдресаФактические.Поле8 + "","" + АдресаФактические.Поле9 + "","" + ВЫБОР
	|		КОГДА АдресаФактические.ТипДома В (ЗНАЧЕНИЕ(Перечисление.ТипыДомов.Дом), ЗНАЧЕНИЕ(Перечисление.ТипыДомов.ПустаяСсылка))
	|			ТОГДА ""дом""
	|		ИНАЧЕ ""владение""
	|	КОНЕЦ + "","" + ВЫБОР
	|		КОГДА АдресаФактические.ТипКорпуса В (ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.Корпус), ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.ПустаяСсылка))
	|			ТОГДА ""корпус""
	|		ИНАЧЕ ""строение""
	|	КОНЕЦ + "","" + ВЫБОР
	|		КОГДА АдресаФактические.ТипКвартиры В (ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.Квартира), ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.ПустаяСсылка))
	|			ТОГДА ""кв.""
	|		ИНАЧЕ ""оф.""
	|	КОНЕЦ КАК АдресФактический,
	|	ДомашниеТелефоны.Поле3 КАК ТелефонДомашний
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПаспортныеДанныеФизЛиц.СрезПоследних(, ФизЛицо = &ФизЛицо) КАК ПаспортныеДанныеФизЛицСрезПоследних
	|		ПО ФизическиеЛица.Ссылка = ПаспортныеДанныеФизЛицСрезПоследних.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ДомашниеТелефоны
	|		ПО ФизическиеЛица.Ссылка = ДомашниеТелефоны.Объект
	|			И (ДомашниеТелефоны.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонФизЛица))
	|			И (ДомашниеТелефоны.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресаФактические
	|		ПО ФизическиеЛица.Ссылка = АдресаФактические.Объект
	|			И (АдресаФактические.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресФизЛица))
	|			И (АдресаФактические.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|ГДЕ
	|	ФизическиеЛица.Ссылка = &Физлицо";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Выборка);
		ДокументКемВыдан = СокрЛП(ДокументКемВыдан);
	КонецЕсли;
	
	ОбновитьПредставлениеУдостоверенияЛичности();
	
КонецПроцедуры

Процедура УстановитьЗаголовкиОрганизацийВФорме()
	
	ЭлементыФормы.НадписьОрганизация.Заголовок = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация:");
	
КонецПроцедуры // УстановитьЗаголовкиОрганизацийВФорме()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	УстановитьЗаголовкиОрганизацийВФорме();
	
	ИзменитьДоступностьОтВидаСтрахования();
	
	Если Не ЭтоНовый() Тогда
		ОбновитьДанныеФизическогоЛица();
	КонецЕсли;
	
	Если ПустаяСтрока(УдостоверениеЛичности) Тогда
		УдостоверениеЛичностиПредставление = "Ввести данные об удостоверении личности";
	Иначе
		УдостоверениеЛичностиПредставление = УдостоверениеЛичности;
	КонецЕсли;
	
	АдресФактическийПредставление = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(АдресФактический);
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("Физлицо");
	СтруктураРеквизитов.Вставить("ВидСтрахования");
	Если ВидСтрахования = Перечисления.ВидыМедицинскогоСтрахования.Добровольное Тогда
		СтруктураРеквизитов.Вставить("ПрограммаСтрахования");
	КонецЕсли;
	СтруктураРеквизитов.Вставить("Код");
	СтруктураРеквизитов.Вставить("Наименование");
	СтруктураРеквизитов.Вставить("ДатаВыдачиПолиса");
	
	Если Не РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма, СтруктураРеквизитов) Тогда
		ТекущийЭлемент = ЭлементыФормы.Физлицо;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	Если Физлицо.Пустая() Тогда
		ОбщегоНазначения.ВывестиИнформациюОбОшибке("Не заполнено физическое лицо!", Отказ);
	КонецЕсли;
	Если Организация.Пустая() Тогда
		ОбщегоНазначения.ВывестиИнформациюОбОшибке(ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Не указана организация!"), Отказ);
	КонецЕсли;
	Если ВидСтрахования.Пустая() Тогда
		ОбщегоНазначения.ВывестиИнформациюОбОшибке("Не заполнен вид страхования!", Отказ);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ДатаВыдачиПолиса) Тогда
		ОбщегоНазначения.ВывестиИнформациюОбОшибке("Не заполнена дата выдачи полиса!", Отказ);
	КонецЕсли;
	Если СтрахованиеРодственника И ПустаяСтрока(Родственник) Тогда
		ОбщегоНазначения.ВывестиИнформациюОбОшибке("Не заполнен родственник!", Отказ);
	КонецЕсли;
	
	// Проверим, что сотрудник работает в организации
	Если Не Отказ И ВидСтрахования = Перечисления.ВидыМедицинскогоСтрахования.Обязательное Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Период",			ДатаВыдачиПолиса);
		Запрос.УстановитьПараметр("Организация",	ОбщегоНазначения.ГоловнаяОрганизация(Организация));
		Запрос.УстановитьПараметр("Физлицо",		Физлицо);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РаботникиОрганизацийСрезПоследних.Сотрудник
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|			&Период,
		|			Сотрудник.Физлицо = &Физлицо
		|				И Организация = &Организация) КАК РаботникиОрганизацийСрезПоследних";
		Результат = Запрос.Выполнить();
		
		Если Результат.Пустой() Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке("Указанное физическое лицо не работает в указанной организации!", Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	Если Отказ Тогда
		ОбработкаКомментариев.ПоказатьСообщения();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененДокументУдостоверяющийЛичность" И Параметр = ЭтаФорма Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Источник, "ДокументВид, ДокументСерия, ДокументНомер, ДокументДатаВыдачи, ДокументКемВыдан, ДокументКодПодразделения");
		ОбновитьПредставлениеУдостоверенияЛичности();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура ДействияФормыФайлы(Кнопка)

	Отказ = Ложь;

	Если ЭтоНовый() Тогда
		Вопрос = "Перед вводом файлов и изображений необходимо записать элемент. Записать?";
		Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ОКОтмена);
		Если Ответ = КодВозвратаДиалога.ОК Тогда
			Отказ = Не ЗаписатьВФорме();
		Иначе
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;

 	Если НЕ Отказ Тогда

		СтруктураДляСпискаИзображений = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, Ссылка, Ложь, Ложь);
		СтруктураДляСпискаДополнительныхФайлов = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, Ссылка, Ложь, Ложь);
		ОбязательныеОтборы = Новый Структура("Объект", Ссылка);
		
		РаботаСФайлами.ОткрытьФормуСпискаФайловИИзображений(СтруктураДляСпискаИзображений, СтруктураДляСпискаДополнительныхФайлов, ОбязательныеОтборы, ЭтаФорма);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ФизлицоПриИзменении(Элемент)
	
	ЗаполнитьДанныеФизлица();
	
КонецПроцедуры

Процедура ВидСтрахованияПриИзменении(Элемент)
	
	Если ВидСтрахования = Перечисления.ВидыМедицинскогоСтрахования.Обязательное Тогда
		СтрахованиеРодственника	= Ложь;
		ПрограммаСтрахования	= Справочники.ПрограммыМедицинскогоСтрахования.ПустаяСсылка();
		Родственник				= "";
	КонецЕсли;
	
	ИзменитьДоступностьОтВидаСтрахования();
	
КонецПроцедуры

Процедура СтрахованиеСотрудникаПриИзменении(Элемент)
	
	ИзменитьДоступностьОтВидаСтрахования();
	
КонецПроцедуры

Процедура РодственникПриИзменении(Элемент)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Физлицо",		Физлицо);
	
	Если ПустаяСтрока(Родственник) Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ФизическиеЛица.Наименование КАК ФИО,
		|	ФизическиеЛица.Пол,
		|	ФизическиеЛица.ДатаРождения
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	ФизическиеЛица.Ссылка = &Физлицо";
		Выборка = Запрос.Выполнить().Выбрать();
	
		Если Выборка.Следующий() Тогда
			Пол				= Выборка.Пол;
			Если Пол.Пустая() Тогда
				Пол				= ПроцедурыУправленияПерсоналом.ПолучитьПол(Выборка.ФИО);
			КонецЕсли;
			ДатаРождения	= Выборка.ДатаРождения;
		КонецЕсли;
	Иначе
		Запрос.УстановитьПараметр("Родственник",	Родственник);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ФизическиеЛицаСоставСемьи.ДатаРождения
		|ИЗ
		|	Справочник.ФизическиеЛица.СоставСемьи КАК ФизическиеЛицаСоставСемьи
		|ГДЕ
		|	ФизическиеЛицаСоставСемьи.Ссылка = &Физлицо
		|	И ФизическиеЛицаСоставСемьи.Имя ПОДОБНО &Родственник";
		Выборка = Запрос.Выполнить().Выбрать();
	
		Если Выборка.Следующий() Тогда
			Пол				= ПроцедурыУправленияПерсоналом.ПолучитьПол(Родственник);
			ДатаРождения	= Выборка.ДатаРождения;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура УдостоверениеЛичностиНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВвода	= ПолучитьФорму("РедактированиеДокументаУдостоверяющегоЛичность", ЭтаФорма);
	ЗаполнитьЗначенияСвойств(ФормаВвода, ЭтаФорма, "ДокументВид, ДокументСерия, ДокументНомер, ДокументДатаВыдачи, ДокументКемВыдан, ДокументКодПодразделения");
	ФормаВвода.Открыть();
	
КонецПроцедуры

Процедура АдресФактическийНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтруктураАдреса = Новый Структура;
	СтруктураАдреса.Вставить("Значение",	АдресФактический);
	
	УправлениеКонтактнойИнформацией.РедактироватьМодальноЭлементАдреса(СтруктураАдреса, ЭтаФорма, "ФормаРедактированияАдресаРегистрации");
	
	АдресФактический = СтруктураАдреса.Значение;
	
	АдресФактическийПредставление = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(АдресФактический);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ