Перем НовыйОбъект Экспорт;
Перем мНеПредопределенныеПоказатели;

Перем мОбработкаПодбораПоСтроке;
Перем мТекстПодбораПоСтроке;
Перем мПоследнееЗначениеЭлементаПодбораПоСтроке;

Перем мПрежниеЗначенияРеквизитов;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Функция формирует структуру параметров для для ввода головной организации по подстроке
//
// Параметры
//  НЕТ
//
// Возвращаемое значение:
//	Структура имен и значений параметров
//
Функция ПолучитьСтруктуруПараметровПодбораПоСтроке(ИмяЭУ = "СуммируемыйПоказатель")
	
	Если ИмяЭУ = "СуммируемыйПоказатель" Тогда
		
		СписокВидовПоказателей = Новый СписокЗначений;
		СписокВидовПоказателей.Добавить(Перечисления.ВидыПоказателейСхемМотивации.Общий);
		СписокВидовПоказателей.Добавить(Перечисления.ВидыПоказателейСхемМотивации.Индивидуальный);
		СписокВидовПоказателей.Добавить(Перечисления.ВидыПоказателейСхемМотивации.ПоПодразделению);
		
		СписокТиповПоказателей = Новый СписокЗначений;
		СписокТиповПоказателей.Добавить(Перечисления.ТипыПоказателейСхемМотивации.Денежный);
		СписокТиповПоказателей.Добавить(Перечисления.ТипыПоказателейСхемМотивации.Числовой);
		
		СписокВозможностейИзменения	= Новый СписокЗначений;
		СписокВозможностейИзменения.Добавить(Перечисления.ИзменениеПоказателейСхемМотивации.Ежемесячно);
		СписокВозможностейИзменения.Добавить(Перечисления.ИзменениеПоказателейСхемМотивации.Периодически);
		
		Если мНеПредопределенныеПоказатели = Неопределено Тогда
			ЗапомнитьНеПредопределенныеПоказатели();
		КонецЕсли;

		СтруктураПараметров = Новый Структура("ТипПоказателя,ТарифнаяСтавка,ВозможностьИзменения,Ссылка, ВидПоказателя", СписокТиповПоказателей, Ложь, СписокВозможностейИзменения, мНеПредопределенныеПоказатели, СписокВидовПоказателей);
		
	КонецЕсли;

	Возврат СтруктураПараметров;

КонецФункции // ПолучитьСтруктуруПараметровПодбораПоСтроке()


Процедура ПолучитьТекстПодсказки()
	
	ЭлементыФормы.НадписьПояснение.Заголовок = "Значением данного показателя будет сумма значений показателя """ + ОбщегоНазначения.ПолучитьПредставленияОбъектов(СуммируемыйПоказатель )+"""" + ?(СпособРасчетаСуммы = Перечисления.СпособыРасчетаСуммыПоказателей.ПоВсемСотрудникам," по всем сотрудникам", " по всей организации");

КонецПроцедуры

// Процедура заполняет список предопределенных показателей, по которым потом будет устанавливаться отбор с видом сравнения
//			НеВСписке в форме выбора показателей
//
Процедура ЗапомнитьНеПредопределенныеПоказатели()
	
	Запрос = Новый Запрос;
	
	мНеПредопределенныеПоказатели = Новый СписокЗначений;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПоказателиСхемМотивации.Ссылка
	|ИЗ
	|	Справочник.ПоказателиСхемМотивации КАК ПоказателиСхемМотивации
	|ГДЕ
	|	НЕ ПоказателиСхемМотивации.Предопределенный
	|	И ПоказателиСхемМотивации.ТипПоказателя <> Значение(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная)
	|	И ПоказателиСхемМотивации.ТипПоказателя <> Значение(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая)";
	
		
	Запрос.Текст = ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		мНеПредопределенныеПоказатели.Добавить(Выборка.Ссылка);
	КонецЦикла;
	мНеПредопределенныеПоказатели.Добавить(Ссылка);
	
	
КонецПроцедуры //ЗапомнитьПредопределенныеПоказатели

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ЗаполнитьРеквизиты()
	
	Если ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.Стаж И ВидПоказателя <> Перечисления.ВидыПоказателейСхемМотивации.Индивидуальный Тогда
		ВидПоказателя = Перечисления.ВидыПоказателейСхемМотивации.Индивидуальный;
	КонецЕсли;
		
КонецПроцедуры

Процедура УстановитьДоступностьЭУ()
	
	ПоказателиСхемМотивацииКлиент.ФормаЭлементаУстановитьДоступностьЭУ(ЭтаФорма);
	
	ПоказательЭтоШкала = ПоказателиСхемМотивацииКлиент.ЭтоШкала(ТипПоказателя);

	ВидимостьСуммируемогоПоказателя = (ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.СуммаПоказателя);
	
	ВидимостьСтажа = (ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.Стаж) Или Ссылка = Справочники.ПоказателиСхемМотивации.Стаж;
	
	ЭлементыФормы.ПанельДанных.Страницы.Использование.Видимость = ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.ТарифныйРазряд 
																Или (Предопределенный 
																	И Ссылка <> Справочники.ПоказателиСхемМотивации.Стаж 
																	И ТипПоказателя <> Перечисления.ТипыПоказателейСхемМотивации.Денежный);
	
	ЭлементыФормы.НадписьВидСтажа.Видимость = ВидимостьСтажа;
	ЭлементыФормы.ВидСтажа.Видимость = ВидимостьСтажа;
	ЭлементыФормы.НадписьСтажРаботы.Видимость = (Ссылка = Справочники.ПоказателиСхемМотивации.Стаж);
	ЭлементыФормы.ПанельДанных.Страницы.Стаж.Видимость = ВидимостьСтажа;

	ЭлементыФормы.ПанельДанных.Страницы.Валюта.Видимость = Не ВидимостьСтажа И ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.Денежный;
	
	ЭлементыФормы.ПанельДанных.Страницы.АнализПоказателей.Видимость= Не ВидимостьСтажа И Не Предопределенный И Не ПоказательЭтоШкала;
	ЭлементыФормы.Переключатель1.Доступность = ПоказательЭффективности И ВозможностьИзменения <> Перечисления.ИзменениеПоказателейСхемМотивации.Ежемесячно;
	ЭлементыФормы.Переключатель2.Доступность = ПоказательЭффективности И ВозможностьИзменения <> Перечисления.ИзменениеПоказателейСхемМотивации.Ежемесячно;
	ЭлементыФормы.ФактическийПоказатель.ТолькоПросмотр = (Не ПлановыйПоказатель) Или ВозможностьИзменения = Перечисления.ИзменениеПоказателейСхемМотивации.Ежемесячно;
	
	ЭлементыФормы.ПоказательЭффективности.Доступность = (ТипПоказателя<>Перечисления.ТипыПоказателейСхемМотивации.ТарифныйРазряд);
	
	ЭлементыФормы.НадписьПорядокВводаПоказателя.Видимость	= Не ВидимостьСуммируемогоПоказателя;
	ЭлементыФормы.ВозможностьИзменения.Видимость			= Не ВидимостьСуммируемогоПоказателя;
	
	ЭлементыФормы.ПанельДанных.Страницы.СуммовойПоказатель.Видимость = Не ВидимостьСтажа И (ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.СуммаПоказателя);

	ЭлементыФормы.СпособРасчетаСуммы.Видимость			= ВидимостьСуммируемогоПоказателя;
	ЭлементыФормы.НадписьСпособРасчетаСуммы.Видимость	= ВидимостьСуммируемогоПоказателя;
	
	ЭлементыФормы.НадписьСуммируемыйПоказатель.Видимость		= ВидимостьСуммируемогоПоказателя;
	ЭлементыФормы.СуммируемыйПоказатель.Видимость				= ВидимостьСуммируемогоПоказателя;
	
	ЭлементыФормы.ВидПоказателя.Доступность = (ТипПоказателя <> Перечисления.ТипыПоказателейСхемМотивации.Стаж);
	
	ЭлементыФормы.Валюта.АвтоОтметкаНезаполненного = ЗаполнениеВалютыОбязательно();
	
КонецПроцедуры //УстановитьДоступностьЭУ

Процедура УстановитьВозможностьИзменения(Значение)
	
	ПоказателиСхемМотивацииКлиент.ФормаЭлементаУстановитьВозможностьИзменения(Значение, ЭтаФорма);
	
	УстановитьДоступностьЭУ();
	
КонецПроцедуры //СоставитьСписокДоступныхЗначений

Функция ЗаполнениеВалютыОбязательно()
	
	ЗаполнениеВалютыОбязательно = Ложь;
	
	// валюта обязательна:
	//  - для новых показателей,
	//	- тех, которые "стали" денежными,
	//	- тех, которые остались денежными, и которых валюта была заполнена
	Если мПрежниеЗначенияРеквизитов = Неопределено Тогда 
		мПрежниеЗначенияРеквизитов = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Ссылка, "Валюта, ТипПоказателя");
	КонецЕсли;
	
	Если ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.Денежный  
		И (ЭтоНовый()	
		ИЛИ мПрежниеЗначенияРеквизитов.ТипПоказателя <> Перечисления.ТипыПоказателейСхемМотивации.Денежный	
		ИЛИ ЗначениеЗаполнено(мПрежниеЗначенияРеквизитов.Валюта)) Тогда
		ЗаполнениеВалютыОбязательно = Истина;
	КонецЕсли;
	
	Возврат ЗаполнениеВалютыОбязательно;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	УправлениеПоказателямиСхемМотивации.ПоказателиФормаЭлементаПередОткрытиемДополнительно(ЭтаФорма);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ЭтоНовый() Тогда
		Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
		Идентификатор = "";
	КонецЕсли;
	
	НовыйОбъект = Ложь;
	ПлановыйПоказатель = ЗначениеЗаполнено(ФактическийПоказатель);
	
	УстановитьДоступностьЭУ();
	
	ПоказателиСхемМотивацииКлиент.ФормаЭлементаПриОткрытии(ЭтаФорма);
	
	Если ПоказательЭффективности Тогда
		Расшифровка = "Данный показатель будет включён в отчёт ""Анализ показателей"""
	Иначе
		Расшифровка = "Данный показатель предназначен только для расчета зарплаты";
	КонецЕсли;
    ЭлементыФормы.НадписьРасшифровкаПоказательЭффективности.Заголовок = Расшифровка;

	ПолучитьТекстПодсказки();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	ПоказателиСхемМотивацииКлиент.ФормаЭлементаПриЗаписи(Отказ, ЭтаФорма);
	
КонецПроцедуры

Процедура ПослеЗаписи()
	
	ПоказателиСхемМотивацииКлиент.ФормаЭлементаПослеЗаписи(ЭтаФорма);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ЗаполнениеВалютыОбязательно() И НЕ ЗначениеЗаполнено(Валюта) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не заполнена валюта показателя!", Отказ);
	КонецЕсли;
	
	ПоказателиСхемМотивацииКлиент.ФормаЭлементаПередЗаписью(Отказ, ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
//  ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЕЙ

Процедура НаименованиеПриИзменении(Элемент)
	
	ПоказателиСхемМотивацииКлиент.ФормаЭлементаНаименованиеПриИзменении(Элемент, ЭтаФорма);

КонецПроцедуры

Процедура ТипПоказателяПриИзменении(Элемент)
	
	Если (ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая) Или (ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная) 
		ИЛИ (ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.ТарифныйРазряд) Тогда
		ВозможностьИзменения = Перечисления.ИзменениеПоказателейСхемМотивации.НеИзменяется;
		ВидПоказателя = Перечисления.ВидыПоказателейСхемМотивации.Индивидуальный;		
	ИначеЕсли  ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.СуммаПоказателя Тогда
		ВидПоказателя = Перечисления.ВидыПоказателейСхемМотивации.Общий;
		Если ЗначениеЗаполнено(СуммируемыйПоказатель) Тогда
			Если СуммируемыйПоказатель.ВозможностьИзменения = Перечисления.ИзменениеПоказателейСхемМотивации.Периодически Тогда
				ВозможностьИзменения = Перечисления.ИзменениеПоказателейСхемМотивации.Периодически;
			Иначе
				ВозможностьИзменения = Перечисления.ИзменениеПоказателейСхемМотивации.Ежемесячно;
			КонецЕсли;
		Иначе
			ВозможностьИзменения = Перечисления.ИзменениеПоказателейСхемМотивации.Ежемесячно;
		КонецЕсли;
		ЭлементыФормы.ВозможностьИзменения.АвтоВыборНезаполненного = Ложь;
		ЭлементыФормы.ВозможностьИзменения.АвтоОтметкаНезаполненного = Ложь;
		Если СпособРасчетаСуммы = Перечисления.СпособыРасчетаСуммыПоказателей.ПустаяСсылка() Тогда 
			СпособРасчетаСуммы = Перечисления.СпособыРасчетаСуммыПоказателей.ПоОрганизации;
		КонецЕсли;
	ИначеЕсли ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.Денежный И Не ЗначениеЗаполнено(Валюта) Тогда 
		Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
	КонецЕсли;
	
	Если ТипПоказателя <> Перечисления.ТипыПоказателейСхемМотивации.Денежный И ЗначениеЗаполнено(Валюта) Тогда 
		Валюта = Неопределено;
	КонецЕсли;
	
	Если ТипПоказателя <> Перечисления.ТипыПоказателейСхемМотивации.СуммаПоказателя И СуммируемыйПоказатель <> Справочники.ПоказателиСхемМотивации.ПустаяСсылка() Тогда
		СпособРасчетаСуммы = Перечисления.СпособыРасчетаСуммыПоказателей.ПустаяСсылка();
		СуммируемыйПоказатель	= Справочники.ПоказателиСхемМотивации.ПустаяСсылка();
	КонецЕсли;
	
	Если ТипПоказателя <> Перечисления.ТипыПоказателейСхемМотивации.Стаж И ВидСтажа <> Справочники.ВидыСтажа.ПустаяСсылка() Тогда
		ВидСтажа = Справочники.ВидыСтажа.ПустаяСсылка();
	КонецЕсли;
	
	ПоказателиСхемМотивацииКлиент.ПроверкаТарифнойСтавки(ТипПоказателя, ВозможностьИзменения, ТарифнаяСтавка);
	
	УстановитьДоступностьЭУ();
	
	ЗаполнитьРеквизиты();
	
	УправлениеПоказателямиСхемМотивации.ПоказателиФормаЭлементаПриИзмененииТипаПоказателяДополнительно(ЭтаФорма);
	
КонецПроцедуры

Процедура ВидПоказателяПриИзменении(Элемент)
	
	Если ВидПоказателя = Перечисления.ВидыПоказателейСхемМотивации.Индивидуальный И		
		ВозможностьИзменения = Перечисления.ИзменениеПоказателейСхемМотивации.Периодически Тогда
		ВозможностьИзменения = Перечисления.ИзменениеПоказателейСхемМотивации.Ежемесячно;
	Иначе
		ФактическийПоказатель = Справочники.ПоказателиСхемМотивации.ПустаяСсылка();
		ПлановыйПоказатель	= Ложь;
	КонецЕсли;
	
	УстановитьВозможностьИзменения(ВидПоказателя);
	
	ПоказателиСхемМотивацииКлиент.ФормаЭлементаВидПоказателяПриИзменении(Элемент, ЭтаФорма);
	
КонецПроцедуры

Процедура ВозможностьИзмененияПриИзменении(Элемент)
	
	Если ВозможностьИзменения = Перечисления.ИзменениеПоказателейСхемМотивации.Ежемесячно Тогда
		
		ФактическийПоказатель = Перечисления.ИзменениеПоказателейСхемМотивации.ПустаяСсылка();
		ПлановыйПоказатель	= Ложь;
		
	КонецЕсли;
	
	УстановитьДоступностьЭУ();
	
КонецПроцедуры

Процедура ПоказательЭффективностиПриИзменении(Элемент)
	Если ПоказательЭффективности Тогда
		Расшифровка = "Данный показатель будет включён в отчёт ""Анализ показателей"""
	Иначе
		ФактическийПоказатель = Справочники.ПоказателиСхемМотивации.ПустаяСсылка();
		ПлановыйПоказатель = Ложь;
		Расшифровка = "Данный показатель предназначен только для расчета зарплаты";
		Если ПлановыйПоказатель Тогда
			ПлановыйПоказатель = Ложь;
			ФактическийПоказатель = "";
		КонецЕсли;
	КонецЕсли;
    ЭлементыФормы.НадписьРасшифровкаПоказательЭффективности.Заголовок = Расшифровка;
	УстановитьДоступностьЭУ();
КонецПроцедуры

Процедура Переключатель1ПриИзменении(Элемент)
	ФактическийПоказатель = Перечисления.ИзменениеПоказателейСхемМотивации.ПустаяСсылка();
	УстановитьДоступностьЭУ();
КонецПроцедуры

Процедура ФактическийПоказательНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбора = Справочники.ПоказателиСхемМотивации.ПолучитьФормуВыбора();
	
	ФормаВыбора.Отбор.ФактическийПоказатель.Использование	= Истина;
	ФормаВыбора.Отбор.ФактическийПоказатель.ВидСравнения	= ВидСравнения.Равно;
	ФормаВыбора.Отбор.ФактическийПоказатель.Значение		= Справочники.ПоказателиСхемМотивации.ПустаяСсылка();
	
	ФормаВыбора.Отбор.ВозможностьИзменения.Использование	= Истина;
	ФормаВыбора.Отбор.ВозможностьИзменения.ВидСравнения		= ВидСравнения.Равно;
	ФормаВыбора.Отбор.ВозможностьИзменения.Значение			= Перечисления.ИзменениеПоказателейСхемМотивации.Ежемесячно;
		
	Если мНеПредопределенныеПоказатели = Неопределено Тогда
		ЗапомнитьНеПредопределенныеПоказатели();
	КонецЕсли;
	
	ФормаВыбора.Отбор.Ссылка.Использование	= Истина;
	ФормаВыбора.Отбор.Ссылка.ВидСравнения	= ВидСравнения.ВСписке;
	ФормаВыбора.Отбор.Ссылка.Значение		= мНеПредопределенныеПоказатели;
	
	ВыбранноеЗначение = ФормаВыбора.ОткрытьМодально();
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Элемент.Значение = ВыбранноеЗначение;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТарифнаяСтавкаПриИзменении(Элемент)
	
	ПоказателиСхемМотивацииКлиент.ФормаЭлементаТарифнаяСтавкаПриИзменении(Элемент, ЭтаФорма);
	
КонецПроцедуры

Процедура СпособРасчетаСуммыПриИзменении(Элемент)
	ПолучитьТекстПодсказки();
КонецПроцедуры

Процедура СуммируемыйПоказательНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбора = Справочники.ПоказателиСхемМотивации.ПолучитьФормуВыбора(,Элемент);
	
	ФормаВыбора.Отбор.ВидПоказателя.Использование			= Истина;
	ФормаВыбора.Отбор.ВидПоказателя.ВидСравнения			= ВидСравнения.НеРавно;
	ФормаВыбора.Отбор.ВидПоказателя.Значение				= Перечисления.ВидыПоказателейСхемМотивации.ДляВсехОрганизаций;
	
	СписокТиповПоказателей = Новый СписокЗначений;
	СписокТиповПоказателей.Добавить(Перечисления.ТипыПоказателейСхемМотивации.Денежный);
	СписокТиповПоказателей.Добавить(Перечисления.ТипыПоказателейСхемМотивации.Числовой);
	
	ФормаВыбора.Отбор.ТипПоказателя.Использование			= Истина;
	ФормаВыбора.Отбор.ТипПоказателя.ВидСравнения			= ВидСравнения.ВСписке;
	ФормаВыбора.Отбор.ТипПоказателя.Значение				= СписокТиповПоказателей;

	ФормаВыбора.Отбор.ТарифнаяСтавка.Использование			= Истина;
	ФормаВыбора.Отбор.ТарифнаяСтавка.ВидСравнения			= ВидСравнения.Равно;
	ФормаВыбора.Отбор.ТарифнаяСтавка.Значение				= Ложь;
	
	СписокВозможностейИзменения	= Новый СписокЗначений;
	СписокВозможностейИзменения.Добавить(Перечисления.ИзменениеПоказателейСхемМотивации.Ежемесячно);
	СписокВозможностейИзменения.Добавить(Перечисления.ИзменениеПоказателейСхемМотивации.Периодически);
	
	ФормаВыбора.Отбор.ВозможностьИзменения.Использование	= Истина;
	ФормаВыбора.Отбор.ВозможностьИзменения.ВидСравнения		= ВидСравнения.ВСписке;
	ФормаВыбора.Отбор.ВозможностьИзменения.Значение			= СписокВозможностейИзменения;
	
	Если мНеПредопределенныеПоказатели = Неопределено Тогда
		ЗапомнитьНеПредопределенныеПоказатели();
	КонецЕсли;
	
	ФормаВыбора.Отбор.Ссылка.Использование					= Истина;
	ФормаВыбора.Отбор.Ссылка.ВидСравнения					= ВидСравнения.ВСписке;
	ФормаВыбора.Отбор.Ссылка.Значение						= мНеПредопределенныеПоказатели;
	
	ФормаВыбора.Открыть();
	
КонецПроцедуры

Процедура СуммируемыйПоказательПриИзменении(Элемент)
	ПолучитьТекстПодсказки();
	Если ЗначениеЗаполнено(СуммируемыйПоказатель) Тогда
		Если СуммируемыйПоказатель.ВозможностьИзменения = Перечисления.ИзменениеПоказателейСхемМотивации.Периодически Тогда
			ВозможностьИзменения = Перечисления.ИзменениеПоказателейСхемМотивации.Периодически;
		Иначе
			ВозможностьИзменения = Перечисления.ИзменениеПоказателейСхемМотивации.Ежемесячно;
		КонецЕсли;
	Иначе
		ВозможностьИзменения = Перечисления.ИзменениеПоказателейСхемМотивации.Ежемесячно;
	КонецЕсли;
КонецПроцедуры

Процедура СуммируемыйПоказательАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)

	ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, ПолучитьСтруктуруПараметровПодбораПоСтроке(), Тип("СправочникСсылка.ПоказателиСхемМотивации"));
	
КонецПроцедуры

Процедура СуммируемыйПоказательОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, ПолучитьСтруктуруПараметровПодбораПоСтроке(), ЭтаФорма, Тип("СправочникСсылка.ПоказателиСхемМотивации"), мОбработкаПодбораПоСтроке, мТекстПодбораПоСтроке, мПоследнееЗначениеЭлементаПодбораПоСтроке, Ложь);
	
КонецПроцедуры
 
Процедура ВидСтажаПриИзменении(Элемент)
	
	ЭлементыФормы.НадписьРасшифровкаСтажа.Заголовок = "Значением данного показателя будет являться стаж вида: """ + ЭтаФорма.ВидСтажа + """";
	
КонецПроцедуры

Процедура ВалютаПриИзменении(Элемент)
	
	УправлениеПоказателямиСхемМотивации.ПоказателиФормаЭлементаПриИзмененииВалютыДополнительно(ЭтаФорма);
	
КонецПроцедуры

Процедура ДополнительныеДействия(Элемент)
	
	УправлениеПоказателямиСхемМотивации.ПоказателиФормаЭлементаВыполнитьДополнительныеДействия(Элемент, ЭтаФорма);	
	
КонецПроцедуры

УправлениеПоказателямиСхемМотивации.ПоказателиФормаЭлементаПриСозданииФормы(ЭтаФорма, Новый Действие("ДополнительныеДействия"));