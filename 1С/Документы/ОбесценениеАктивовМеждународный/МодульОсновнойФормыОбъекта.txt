// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;



// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка,Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.Состав,ЭлементыФормы.КоманднаяПанель1);
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧПоДеревуКнопок(мКнопкиЗаполненияТЧ,СоответствиеТЧ);
	
КонецПроцедуры


Процедура СоставОбъектНачалоВыбора(Элемент, СтандартнаяОбработка)
	СчетАмортизации = Неопределено;
	СчетОбъекта = Неопределено;

	СчетОбъекта = ЭлементыФормы.Состав.ТекущиеДанные.СчетУчета;
	СчетУчета = СчетОбъекта.Родитель; // общая группа
	Выборка = ПланыСчетов.Международный.Выбрать(СчетУчета);
	Пока Выборка.Следующий() Цикл
		Если Выборка.Вид = ВидСчета.Пассивный Тогда
			СчетАмортизации = Выборка.Ссылка;
		КонецЕсли;
	КонецЦикла;

	Для Ном = 1 по 3 Цикл
		Если (СчетОбъекта.ВидыСубконто.Количество() > Ном-1) и (НЕ ЗначениеЗаполнено(ЭлементыФормы.Состав.ТекущиеДанные["Субконто"+Ном])) Тогда
			Типы = СчетОбъекта.ВидыСубконто[Ном-1].ВидСубконто.ТипЗначения.Типы();
			ЭлементыФормы.Состав.ТекущиеДанные["Субконто"+Ном] = Новый(Типы[0]);
		КонецЕсли;
	КонецЦикла
КонецПроцедуры

Процедура СоставСчетУчетаНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если НЕ ЗначениеЗаполнено(ВидАктива) Тогда
		Предупреждение("Невозможно выбрать счет, т.к. не заполнен вид актива!",,"Внимание!");
	Иначе
		Для каждого Значение из Метаданные.Перечисления.ВидыАктивов.ЗначенияПеречисления Цикл
			Если Значение.Синоним = Строка(ВидАктива) Тогда
				СчетРодитель = ПланыСчетов.Международный[Значение.Имя];
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		ФормаВыбора = ПланыСчетов.Международный.ПолучитьФорму("ФормаВыбора");

		ФормаВыбора.ПараметрСчет       = СчетРодитель;
		ФормаВыбора.ВладелецФормы      = Элемент;
		ФормаВыбора.ЗакрыватьПриВыборе = Истина;
		ФормаВыбора.ЗакрыватьПриЗакрытииВладельца = Истина;
		ФормаВыбора.НачальноеЗначениеВыбора       = ?(НЕ ЗначениеЗаполнено(Элемент.Значение),СчетРодитель,Элемент.Значение);
		ФормаВыбора.РежимВыбора        = Истина;

		ФормаВыбора.Открыть();
	КонецЕсли;
КонецПроцедуры

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
	
КонецПроцедуры // ПередОткрытием()

Процедура ПриОткрытии()

	
	Если НЕ ЭтоНовый() Тогда 
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	КонецЕсли;
	
	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ

		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, "Продажа");

	КонецЕсли;

	// Вывести в заголовке формы вид операции.
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	// Создать кнопки печати
	ФормированиеПечатныхФорм.СоздатьКнопкиПечати(ЭтотОбъект, ЭтаФорма);
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура ПослеЗаписи()

	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Предупреждение("Не указана организация. Операция не записана.");
		Отказ = Истина;
		ТекущийЭлемент = ЭлементыФормы.Организация;
		Возврат;
	КонецЕсли; 
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

Процедура ДействияФормыРедактироватьНомер(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
КонецПроцедуры
// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

Процедура ВидАктиваНачалоВыбора(Элемент, СтандартнаяОбработка)
	Если Состав.Количество() > 0 Тогда
		Если Вопрос("При изменении вида актива необходимо очистить табличную часть. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			Состав.Очистить();
		Иначе
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Функция НайтиСубсчетРезерва(Счет)
	СчетРезерва = ПланыСчетов.Международный.НайтиПоКоду(Счет.Код + "X");
	Если НЕ ЗначениеЗаполнено(СчетРезерва) Тогда
		СчетРезерва = ПланыСчетов.Международный.НайтиПоКоду(Счет.Родитель.Код + "X");
	КонецЕсли;

	Возврат СчетРезерва;
КонецФункции

Процедура СоставСчетУчетаПриИзменении(Элемент)
	ЭлементыФормы.Состав.ТекущиеДанные.СчетРезерва = НайтиСубсчетРезерва(ЭлементыФормы.Состав.ТекущиеДанные.СчетУчета);
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;
КонецПроцедуры

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать".
// Открывает форму выбора печатных форм объекта.
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ОткрытьФормуВыбораПечатныхФормОбъекта(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ОсновныеДействияФормыПечать() 

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)

	УниверсальныеМеханизмы.НапечататьДокументПоУмолчанию(ЭтотОбъект);

КонецПроцедуры