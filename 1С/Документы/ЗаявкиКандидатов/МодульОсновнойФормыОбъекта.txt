////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мОбновлятьВладельца;

// Переменные механизма поиска по подстроке
Перем мОбработкаПодбораПоСтроке;
Перем мТекстПодбораПоСтроке;
Перем мПоследнееЗначениеЭлементаПодбораПоСтроке;

Перем мДатаКонтакта;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ПриИзмененииВакансии()
	
	ПолеВвода = ЭлементыФормы.Должность;
	ПолеВвода.ТолькоПросмотр		= Не Вакансия.Пустая();
	ПолеВвода.КнопкаВыбора			= Не ПолеВвода.ТолькоПросмотр;
	ПолеВвода.КнопкаОткрытия		= Не ПолеВвода.ТолькоПросмотр;
	ПолеВвода.ПропускатьПриВводе	= ПолеВвода.ТолькоПросмотр;
	ПолеВвода.Рамка					= ?(ПолеВвода.ТолькоПросмотр, РамкиСтиля.РамкаЭлементаТолькоПросмотр, РамкиСтиля.РамкаЭлементаУправления);
	ПолеВвода.ЦветФонаПоля			= ?(ПолеВвода.ТолькоПросмотр, ЦветаСтиля.ФонЭпицентра, ЦветаСтиля.ЦветФонаПоля);
	
	ПолеВвода = ЭлементыФормы.Подразделение;
	ПолеВвода.ТолькоПросмотр		= Не Вакансия.Пустая();
	ПолеВвода.КнопкаВыбора			= Не ПолеВвода.ТолькоПросмотр;
	ПолеВвода.КнопкаОткрытия		= Не ПолеВвода.ТолькоПросмотр;
	ПолеВвода.ПропускатьПриВводе	= ПолеВвода.ТолькоПросмотр;
	ПолеВвода.Рамка					= ?(ПолеВвода.ТолькоПросмотр, РамкиСтиля.РамкаЭлементаТолькоПросмотр, РамкиСтиля.РамкаЭлементаУправления);
	ПолеВвода.ЦветФонаПоля			= ?(ПолеВвода.ТолькоПросмотр, ЦветаСтиля.ФонЭпицентра, ЦветаСтиля.ЦветФонаПоля);
	
	ПолеВвода = ЭлементыФормы.Организация;
	ПолеВвода.ТолькоПросмотр		= Не Вакансия.Пустая();
	ПолеВвода.КнопкаВыбора			= Не ПолеВвода.ТолькоПросмотр;
	ПолеВвода.КнопкаОткрытия		= Не ПолеВвода.ТолькоПросмотр;
	ПолеВвода.ПропускатьПриВводе	= ПолеВвода.ТолькоПросмотр;
	ПолеВвода.Рамка					= ?(ПолеВвода.ТолькоПросмотр, РамкиСтиля.РамкаЭлементаТолькоПросмотр, РамкиСтиля.РамкаЭлементаУправления);
	ПолеВвода.ЦветФонаПоля			= ?(ПолеВвода.ТолькоПросмотр, ЦветаСтиля.ФонЭпицентра, ЦветаСтиля.ЦветФонаПоля);
	
	ПолеВвода = ЭлементыФормы.Ответственный;
	ПолеВвода.ТолькоПросмотр		= Не Вакансия.Пустая();
	ПолеВвода.КнопкаВыбора			= Не ПолеВвода.ТолькоПросмотр;
	ПолеВвода.ПропускатьПриВводе	= ПолеВвода.ТолькоПросмотр;
	ПолеВвода.Рамка					= ?(ПолеВвода.ТолькоПросмотр, РамкиСтиля.РамкаЭлементаТолькоПросмотр, РамкиСтиля.РамкаЭлементаУправления);
	ПолеВвода.ЦветФонаПоля			= ?(ПолеВвода.ТолькоПросмотр, ЦветаСтиля.ЦветФонаФормы, ЦветаСтиля.ЦветФонаПоля);
	
КонецПроцедуры

Функция ПолучитьСтруктуруПараметровПодбораПоСтроке()
	
	СтруктураПараметров = Новый Структура("Закрыта", Ложь);
	
	Возврат СтруктураПараметров;

КонецФункции // ПолучитьСтруктуруПараметровПодбораПоСтроке()

Процедура ПрочитатьТекущуюРаботуПоЗаявке(Таблица)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТекущаяРаботаПоЗаявкамКандидатов.Период,
	|	ТекущаяРаботаПоЗаявкамКандидатов.Описание,
	|	ТекущаяРаботаПоЗаявкамКандидатов.Состояние
	|ИЗ
	|	РегистрСведений.ТекущаяРаботаПоЗаявкамКандидатов КАК ТекущаяРаботаПоЗаявкамКандидатов
	|ГДЕ
	|	ТекущаяРаботаПоЗаявкамКандидатов.ЗаявкаКандидата = &ЗаявкаКандидата
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	Запрос.УстановитьПараметр("ЗаявкаКандидата",	Ссылка);
	
	Таблица = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

Процедура ЗаписатьТекущуюРаботуПоЗаявке(Таблица, Отказ)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.ТекущаяРаботаПоЗаявкамКандидатов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ЗаявкаКандидата.Установить(Ссылка);
	НаборЗаписей.Загрузить(Таблица);
	НаборЗаписей.мНеИзменятьСостояниеВЗаявке = Истина;
	
	Для Каждого Запись Из НаборЗаписей Цикл
		Запись.ЗаявкаКандидата	= Ссылка;
	КонецЦикла;
	
	ПервичныйНабор = НаборЗаписей.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ * ИЗ РегистрСведений.ТекущаяРаботаПоЗаявкамКандидатов ГДЕ ЗаявкаКандидата = &ЗаявкаКандидата";
	Запрос.УстановитьПараметр("ЗаявкаКандидата", Ссылка);
	
	Если Не НастройкаПравДоступа.СравнитьТаблицыНаборовЗаписей(Запрос.Выполнить().Выгрузить(), НаборЗаписей.Выгрузить()) Тогда
		
		Попытка
			НаборЗаписей.Записать();
		Исключение
			ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки(),, ("Элемент """ + СокрЛП(Ссылка) + """ не записан. Не записана текущая работа по кандидату."));
			// возвратим обратно данные набора
			НаборЗаписей.Загрузить(ПервичныйНабор);
			Отказ = Истина;
			Возврат;
		КонецПопытки;
		
		ПрочитатьТекущуюРаботуПоЗаявке(Таблица);
		
	Иначе
		НаборЗаписей.Загрузить(ПервичныйНабор);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
	
	Если ЭтоНовый() Тогда
		
		Если Не ЗначениеЗаполнено(ДатаОткрытия) Тогда
			ДатаОткрытия			= РабочаяДата;
		КонецЕсли;
		Если Важность.Пустая() Тогда
			Важность				= Перечисления.Важность.Средняя;
		КонецЕсли;
		
		Если Не Вакансия.Пустая() Тогда
			Должность		= Вакансия.Должность;
			Подразделение	= Вакансия.Подразделение;
			Организация		= Вакансия.Организация;
		КонецЕсли;
		
		Если Ответственный.Пустая() Тогда
			Ответственный	= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
		КонецЕсли;
		
		ЗаявкиКандидатовПереопределяемый.ДополнитьИнициализациюРеквизитов(ЭтотОбъект);
		
	Иначе
		ПрочитатьТекущуюРаботуПоЗаявке(ТекущаяРабота);
		
	КонецЕсли;
	
	ПриИзмененииВакансии();
	
	ЗаявкиКандидатовПереопределяемый.УстановитьВидимостьЭлементовУправленияФормыЭлемента(ЭтаФорма);
	
	ПерепискаВстречиОпросы.Отбор.ЗаявкаКандидата.Использование = Истина;
	
	Если ЭтоНовый() Тогда
		ПерепискаВстречиОпросы.Отбор.ЗаявкаКандидата.Значение = Справочники.ЗаявкиКандидатов.ПолучитьСсылку();
	Иначе
		ПерепискаВстречиОпросы.Отбор.ЗаявкаКандидата.Значение = Ссылка;
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("Наименование");
	СтруктураРеквизитов.Вставить("Состояние");
	Если Закрыта Тогда
		ТекущийЭлемент = ЭлементыФормы.РезультатЗакрытия;
	ИначеЕсли Не РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма, СтруктураРеквизитов) Тогда
		ТекущийЭлемент = ЭлементыФормы.Комментарий;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если Модифицированность И ВладелецФормы <> Неопределено И НЕ ЭтоНовый() Тогда
		мОбновлятьВладельца = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	ЗаписатьТекущуюРаботуПоЗаявке(ТекущаяРабота, Отказ);
	
КонецПроцедуры

Процедура ПослеЗаписи()
	
	ПерепискаВстречиОпросы.Отбор.ЗаявкаКандидата.Установить(Ссылка);
	
	Оповестить("ЗаписанаЗаявкаКандидата");
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	Если мОбновлятьВладельца Тогда
		ОповеститьОЗаписиНовогоОбъекта(Ссылка);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаписанаВакансия" И Источник = ЭтаФорма Тогда
		Должность		= Вакансия.Должность;
		Подразделение	= Вакансия.Подразделение;
		Организация		= Вакансия.Организация;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура ДействияФормыФайлы(Кнопка)

	Отказ = Ложь;

	Если ЭтоНовый() Тогда
		ТекстВопроса = "Перед вводом файлов и изображений необходимо записать элемент. Записать?";
		Ответ  = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Если Ответ = КодВозвратаДиалога.ОК Тогда
			Отказ = Не ЗаписатьВФорме();
		Иначе
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;

	Если НЕ Отказ Тогда
		СтруктураДляСпискаИзображений = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, Ссылка, Ложь, Ложь);
		СтруктураДляСпискаДополнительныхФайлов = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, Ссылка, Ложь, Ложь);
		ОбязательныеОтборы = Новый Структура("Объект", Ссылка);
		
		РаботаСФайлами.ОткрытьФормуСпискаФайловИИзображений(СтруктураДляСпискаИзображений, СтруктураДляСпискаДополнительныхФайлов, ОбязательныеОтборы, ЭтаФорма);
	КонецЕсли;

КонецПроцедуры

Процедура КоманднаяПанельПерепискаВстречиОпросыЗарегистрироватьРезультат(Кнопка)
	
	ДанныеСтроки = ЭлементыФормы.ПерепискаВстречиОпросы.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	мДатаКонтакта = НачалоДня(?(ДанныеСтроки.ДатаКонтакта = NULL, ДанныеСтроки.Дата, ДанныеСтроки.ДатаКонтакта));
	
	ЭлементыФормы.ТабличноеПолеТекущаяРабота.ДобавитьСтроку();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ПодразделениеОчистка(Элемент, СтандартнаяОбработка)
	
	ЗаявкиКандидатовПереопределяемый.ПолучитьПустоеПодразделение(Подразделение);
	
КонецПроцедуры

Процедура ПодразделениеОрганизацииПриИзменении(Элемент)
	
	Если Не Подразделение.Пустая() И Организация.Пустая() Тогда
		Организация = Подразделение.Владелец;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВакансияПриИзменении(Элемент)
	
	ПриИзмененииВакансии();
	
	Если Не Вакансия.Пустая() Тогда
		Должность		= Вакансия.Должность;
		Подразделение	= Вакансия.Подразделение;
		Организация		= Вакансия.Организация;
		Ответственный	= Вакансия.Ответственный;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВакансияАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, ПолучитьСтруктуруПараметровПодбораПоСтроке(), Тип("СправочникСсылка.Вакансии"));
	
КонецПроцедуры

Процедура ВакансияОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, ПолучитьСтруктуруПараметровПодбораПоСтроке(), ЭтаФорма, Тип("СправочникСсылка.Вакансии"), мОбработкаПодбораПоСтроке, мТекстПодбораПоСтроке, мПоследнееЗначениеЭлементаПодбораПоСтроке, Ложь);
	
КонецПроцедуры

Процедура ДействияФормыРедактироватьКод(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
КонецПроцедуры

Процедура КнопкаОткрытьРезюмеНажатие(Элемент)
	
	Если ЭтоНовый() тогда
		ТекстВопроса = "Перед редактированием резюме необходимо записать кандидата. Записать?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);

		Если Ответ = КодВозвратаДиалога.ОК Тогда
			Записать();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ТиповаяАнкета = Неопределено;
	
	Опрос = ПроцедурыУправленияПерсоналомПереопределяемый.НайтиРезюмеКандидата(Ссылка, ТиповаяАнкета);
	
	Если ТиповаяАнкета = Неопределено Тогда
		Предупреждение("Не указана анкета, которая используется в качестве резюме. Необходимо указать анкету в ""Настройках параметров учета""!");
		Возврат;
	КонецЕсли;
	
	Если Опрос = Неопределено Тогда
		ФормаОпроса = Документы.Опрос.ПолучитьФормуНовогоДокумента();
		ФормаОпроса.ОпрашиваемоеЛицо	= Ссылка;
		ФормаОпроса.ТиповаяАнкета		= ТиповаяАнкета;
		ФормаОпроса.ЗаполнитьВопросыАнкеты(ТиповаяАнкета);
		
	Иначе
		ФормаОпроса = Опрос.ПолучитьФорму();
		
	КонецЕсли;
	
	ФормаОпроса.мФормаОткрытаИзЗаявкиКандидата = Истина;
	ФормаОпроса.Открыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ТекущаяРабота

Процедура ТабличноеПолеТекущаяРаботаПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Если ЗначениеЗаполнено(мДатаКонтакта) Тогда // добавляем результат по документу
		СтрокаТаблицы = ТекущаяРабота.Найти(мДатаКонтакта, "Период");
		Если СтрокаТаблицы <> Неопределено Тогда
			Отказ = Истина;
			ЭлементыФормы.ТабличноеПолеТекущаяРабота.ТекущаяСтрока	= СтрокаТаблицы;
			ЭлементыФормы.ТабличноеПолеТекущаяРабота.ТекущаяКолонка	= ЭлементыФормы.ТабличноеПолеТекущаяРабота.Колонки[1];
			ЭлементыФормы.ТабличноеПолеТекущаяРабота.ИзменитьСтроку();
			мДатаКонтакта = Дата('00010101');
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТабличноеПолеТекущаяРаботаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Не Копирование Тогда
		ДанныеСтроки = Элемент.ТекущиеДанные;
		ДанныеСтроки.Период	= ?(ЗначениеЗаполнено(мДатаКонтакта), мДатаКонтакта, ОбщегоНазначения.ПолучитьРабочуюДату());
		мДатаКонтакта = Дата('00010101');
	КонецЕсли;
	
КонецПроцедуры

Процедура ТабличноеПолеТекущаяРаботаПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	МассивНайденныхСтрок = ТекущаяРабота.НайтиСтроки(Новый Структура("Период",	Элемент.ТекущиеДанные.Период));
	Если МассивНайденныхСтрок.Количество() > 1 Тогда
		Предупреждение("На одну дату можно зарегистрировать только один результат!");
		ЭлементыФормы.ТабличноеПолеТекущаяРабота.ТекущаяКолонка	= ЭлементыФормы.ТабличноеПолеТекущаяРабота.Колонки[0];
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТабличноеПолеТекущаяРаботаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяРабота.Сортировать("Период ВОЗР");
	
	Состояние = 0;
	
	Для Каждого ТекущаяСтрока Из ТекущаяРабота Цикл
		ТекущееСостояние = ТекущаяСтрока.Состояние;
		
		Если ТекущееСостояние = Неопределено ИЛИ ТекущееСостояние.Пустая() Тогда
			Продолжить;
		КонецЕсли;
		
		Состояние = ТекущееСостояние;
	КонецЦикла;
	
КонецПроцедуры

Процедура ТабличноеПолеТекущаяРаботаПослеУдаления(Элемент)
	
	Состояние = 0;
	
	Для Каждого ТекущаяСтрока Из ТекущаяРабота Цикл
		Если ТекущаяСтрока.Состояние.Пустая() Тогда
			Продолжить;
		КонецЕсли;
		
		Состояние = ТекущаяСтрока.Состояние;
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ПерепискаВстречиОпросы

Процедура ПерепискаВстречиОпросыПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Если ЭтоНовый() тогда
		ТекстВопроса = "Перед добавлением документа необходимо записать кандидата. Записать?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);

		Если Ответ = КодВозвратаДиалога.ОК Тогда
			Записать();
			
		Иначе
			Отказ = Истина;
			Возврат;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПерепискаВстречиОпросыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	УправлениеЭлектроннойПочтой.ПриВыводеСтрокиЭлектронногоПисьма(Элемент, ОформлениеСтроки, ДанныеСтроки);
	
КонецПроцедуры

Процедура ПерепискаВстречиОпросыПриПолученииДанных(Элемент, ОформленияСтрок)
	
	ЗаявкиКандидатовПереопределяемый.ВыполнитьОформлениеСтроки(Элемент, ОформленияСтрок);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мОбновлятьВладельца = Ложь;

ПерепискаВстречиОпросы.Колонки.Добавить("Комментарий");