Перем мТекущееРасширениеФайла;

//Хранит валюту источника до изменения
Перем СтараяВалютаИсточник;

Перем ФорматПериод; // Хранит форматную строку для вывода периода;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;




// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка,Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
	СоответствиеТЧ = Новый Соответствие;
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧПоДеревуКнопок(мКнопкиЗаполненияТЧ,СоответствиеТЧ);
	
КонецПроцедуры


// Изменяет доступность реквизитов формы в зависимости от внесенных значений
//
Процедура УправлениеДоступностьюРеквизитов()

	Если ЭлементыФормы.СтатьяОборотов.Значение.РазделениеПоКонтрагентам Тогда

		ЭлементыФормы.КонтрагентИсточник.Доступность=Истина;
		ЭлементыФормы.КонтрагентПриемник.Доступность=Истина;
		
	Иначе

		ЭлементыФормы.КонтрагентИсточник.Доступность=Ложь;
		ЭлементыФормы.КонтрагентПриемник.Доступность=Ложь;
        		
	КонецЕсли;

	Если ЭлементыФормы.СтатьяОборотов.Значение.РазделениеПоНоменклатуре Тогда

		ЭлементыФормы.НоменклатураИсточник.Доступность=Истина;
		ЭлементыФормы.НоменклатураПриемник.Доступность=Истина;

	Иначе

		ЭлементыФормы.НоменклатураИсточник.Доступность=Ложь;
		ЭлементыФормы.НоменклатураПриемник.Доступность=Ложь;

	КонецЕсли;

	Если ЭлементыФормы.СтатьяОборотов.Значение.УчетПоСумме Тогда
		
		ЭлементыФормы.Сумма.Доступность=Истина;
		ЭлементыФормы.ВалютаИсточник.Доступность=Истина;
		ЭлементыФормы.ВалютаПриемник.Доступность=Истина;
		
	Иначе
		
		ЭлементыФормы.Сумма.Доступность=Ложь;
		ЭлементыФормы.ВалютаИсточник.Доступность=Ложь;
		ЭлементыФормы.ВалютаПриемник.Доступность=Ложь;
		
	КонецЕсли;
	
	Если ЭлементыФормы.СтатьяОборотов.Значение.УчетПоКоличеству Тогда
		
		ЭлементыФормы.КоличествоИсточник.Доступность=Истина;
		ЭлементыФормы.ЕдиницаИзмеренияИсточник.Доступность=Истина;
		
		ЭлементыФормы.КоличествоПриемник.Доступность=Истина;
		ЭлементыФормы.ЕдиницаИзмеренияПриемник.Доступность=Истина;
		
	Иначе
		
		ЭлементыФормы.КоличествоИсточник.Доступность=Ложь;
		ЭлементыФормы.ЕдиницаИзмеренияИсточник.Доступность=Ложь;
		
		ЭлементыФормы.КоличествоПриемник.Доступность=Ложь;
		ЭлементыФормы.ЕдиницаИзмеренияПриемник.Доступность=Ложь;
		
	КонецЕсли;

	
КонецПроцедуры // УправлениеДоступностьюРеквизитов()

// Формирует информационную надпись суммы сценария
//
// Параметры: нет
//
Процедура СформироватьНадписьСуммыПриемник()
	
	СуммаПриемник=МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(Сумма, ВалютаИсточник, ВалютаПриемник, КурсИсточник, КурсПриемник, 
	               КратностьИсточник, КратностьПриемник);
	НадписьСуммаПриемник="Сумма приемника: "+СуммаПриемник+" "+ВалютаПриемник;
	
	ЭлементыФормы.НадписьСуммаПриемник.Заголовок=НадписьСуммаПриемник;
	ЭлементыФормы.ТекстВалютаИсточника.Заголовок=ВалютаИсточник.Наименование;
	
КонецПроцедуры // СформироватьНадписьСуммыПриемник()

Процедура СформироватьТекстПериода()
	
	Периодичность=Сценарий.Периодичность;
	
	Если Периодичность = Перечисления.Периодичность.Год Тогда
		ФорматПериод = "ДФ = ""гггг """"г.""""""";
	ИначеЕсли Периодичность = Перечисления.Периодичность.Квартал Тогда
		ФорматПериод = "ДФ = ""к"""" квартал"""" гггг """"г.""""""";
	ИначеЕсли Периодичность = Перечисления.Периодичность.Месяц Тогда
		ФорматПериод = "ДФ = ""ММММ гггг """"г.""""""";
	ИначеЕсли Периодичность = Перечисления.Периодичность.Неделя Тогда
		ФорматПериод = "ДФ = """"""Неделя с"""" дд.ММ.гггг """"""";
	КонецЕсли;
		
	ЭлементыФормы.Период.Заголовок= "" + Формат(ПериодПланирования, ФорматПериод);
	
КонецПроцедуры //

// Управляет реквизитом установки периода планирования
//
Процедура СпособВыводаПериода();
	
	Периодичность=Сценарий.Периодичность;
	
	Если Сценарий.Пустая() ИЛИ Периодичность=Перечисления.Периодичность.День Тогда
		
		// Элементы управления произвольным периодом
		ЭлементыФормы.ПериодПланирования.Видимость = Истина;
		
		// Элементы управления периодом
		ЭлементыФормы.Период.Видимость = Ложь;
		ЭлементыФормы.ПлюсПериод.Видимость = Ложь;
		ЭлементыФормы.МинусПериод.Видимость = Ложь;
		ЭлементыФормы.ВыборПериода.Видимость=Ложь;
		
	Иначе // периоды Месяц, Квартал, Год
		
		// Элементы управления датой
		ЭлементыФормы.ПериодПланирования.Видимость = Ложь;
		
		// Элементы управления периодом
		ЭлементыФормы.Период.Видимость = Истина;
		ЭлементыФормы.ПлюсПериод.Видимость = Истина;
		ЭлементыФормы.МинусПериод.Видимость = Истина;
		ЭлементыФормы.ВыборПериода.Видимость=Истина;
		
		СформироватьТекстПериода();
			
	КонецЕсли;
		
КонецПроцедуры // СпособВыводаПериода
 
 
// Устанавливает значение реквизита указанным для выбранного элемента справочника
// "СтатьиОборотов" значением по умолчанию.
//
// Параметры
//  Объект  – реквизит документа, для которого устанавливается значение.
//  Значение - значение по умолчанию
//
Процедура УстановитьЗначениеПоУмолчанию(Объект,Значение)
	
	Если Объект=Неопределено ИЛИ Объект.Пустая() Тогда
		
		Если ТипЗнч(Объект)=ТипЗнч(Значение) Тогда
			
			Объект=Значение;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьЗначениеПоУмолчанию()

Процедура ПериодПланированияРегулирование(Элемент, Направление, СтандартнаяОбработка)

	Если НЕ Сценарий.Пустая() Тогда
		
		СтандартнаяОбработка=Ложь;
		
		Элемент.Значение=ОбщегоНазначения.ДобавитьИнтервал(Элемент.Значение,Сценарий.Периодичность,Направление);
		
	КонецЕсли;

	ОбновитьКурсыДокумента();
	СформироватьНадписьСуммыПриемник();

КонецПроцедуры

Процедура СценарийПриИзменении(Элемент)

	Если НЕ Сценарий.Пустая() Тогда
		
		ЭлементыФормы.ПериодПланирования.Значение=ОбщегоНазначения.ДатаНачалаПериода(ЭлементыФормы.ПериодПланирования.Значение,Сценарий.Периодичность);
		
		
		УстановитьЗначениеПоУмолчанию(ВалютаИсточник,Сценарий.Валюта);
		УстановитьЗначениеПоУмолчанию(ВалютаПриемник,Сценарий.Валюта);
		
	Иначе
		
		УстановитьЗначениеПоУмолчанию(ВалютаИсточник,глЗначениеПеременной("ВалютаУправленческогоУчета"));
		УстановитьЗначениеПоУмолчанию(ВалютаПриемник,глЗначениеПеременной("ВалютаУправленческогоУчета"));
		
	КонецЕсли;
	
	СтараяВалютаИсточник=ВалютаИсточник;
	УправлениеДоступностьюРеквизитов();
	ОбновитьКурсыДокумента();
	СформироватьНадписьСуммыПриемник();
	
	Если Сценарий.ДетализацияПланирования=Перечисления.ДетализацияПланирования.НоменклатурныеГруппы 
		И НЕ ТипЗнч(НоменклатураИсточник)=Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
		НоменклатураИсточник=Новый(Тип("СправочникСсылка.НоменклатурныеГруппы"));
	ИначеЕсли НЕ ТипЗнч(НоменклатураИсточник)=Тип("СправочникСсылка.Номенклатура") Тогда
		НоменклатураИсточник=Новый(Тип("СправочникСсылка.Номенклатура"));
	КонецЕсли;
	
	Если Сценарий.ДетализацияПланирования=Перечисления.ДетализацияПланирования.НоменклатурныеГруппы 
		И НЕ ТипЗнч(НоменклатураПриемник)=Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
		НоменклатураПриемник=Новый(Тип("СправочникСсылка.НоменклатурныеГруппы"));
	ИначеЕсли НЕ ТипЗнч(НоменклатураПриемник)=Тип("СправочникСсылка.Номенклатура") Тогда
		НоменклатураПриемник=Новый(Тип("СправочникСсылка.Номенклатура"));
	КонецЕсли;
		
	СпособВыводаПериода();
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	

	Если ЭтоНовый() Тогда
		
		Если Сценарий.Пустая() Тогда
			
			ЭлементыФормы.ПериодПланирования.Значение=РабочаяДата;
			
			ВалютаИсточник=глЗначениеПеременной("ВалютаУправленческогоУчета");
			ВалютаПриемник=глЗначениеПеременной("ВалютаУправленческогоУчета");
			
		Иначе
			
			ВалютаИсточник=Сценарий.Валюта;
			ВалютаПриемник=Сценарий.Валюта;
			
			Если ПериодПланирования='00010101' Тогда
			
			ЭлементыФормы.ПериодПланирования.Значение=ОбщегоНазначения.ДатаНачалаПериода(РабочаяДата,Сценарий.Периодичность);
			
			КонецЕсли;
			
		КонецЕсли;	
				
	КонецЕсли;
	
	ОбновитьКурсыДокумента();
	СформироватьНадписьСуммыПриемник();
	
	
	СтараяВалютаИсточник=ВалютаИсточник;
	УправлениеДоступностьюРеквизитов();
	СпособВыводаПериода();
	
КонецПроцедуры

Процедура ПериодПланированияПриИзменении(Элемент)

	Если НЕ Сценарий.Пустая() Тогда
		Элемент.Значение=ОбщегоНазначения.ДатаНачалаПериода(Элемент.Значение,Сценарий.Периодичность);
	КонецЕсли;
	
	ОбновитьКурсыДокумента();
	СформироватьНадписьСуммыПриемник();

КонецПроцедуры

Процедура ПриОткрытии()
	
	
	Если НЕ ЭтоНовый() Тогда 
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	КонецЕсли;
	
	СписокКнопокФайлов = Новый СписокЗначений;
	СписокКнопокФайлов.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.Файлы);
	СписокКнопокФайлов.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.Файлы);
	РаботаСФайлами.ПолучитьКартинкуКнопкиОткрытияФайлов(Ссылка, СписокКнопокФайлов);
	
	Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Состояние) Тогда
		Состояние=Перечисления.СостоянияОбъектов.Подготовлен;
	КонецЕсли;
	

	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	// Создать кнопки печати
	ФормированиеПечатныхФорм.СоздатьКнопкиПечати(ЭтотОбъект, ЭтаФорма);
	
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект,ЭтаФорма);
	
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры


Процедура СтатьяОборотовПриИзменении(Элемент)
			
	УстановитьЗначениеПоУмолчанию(ЦФОИсточник,СтатьяОборотов.ОсновноеЦФО);
	УстановитьЗначениеПоУмолчанию(ПроектИсточник,СтатьяОборотов.ОсновнойПроект);
	
	УстановитьЗначениеПоУмолчанию(ЕдиницаИзмеренияИсточник,СтатьяОборотов.ЕдиницаИзмерения);
	УстановитьЗначениеПоУмолчанию(ЕдиницаИзмеренияПриемник,СтатьяОборотов.ЕдиницаИзмерения);

	
	Если НЕ СтатьяОборотов.ОсновнаяВалюта.Пустая() Тогда
		УстановитьЗначениеПоУмолчанию(ВалютаИсточник,СтатьяОборотов.ОсновнаяВалюта);
	Иначе
		УстановитьЗначениеПоУмолчанию(ВалютаИсточник,Сценарий.Валюта);
	КонецЕсли;
	
	УстановитьЗначениеПоУмолчанию(ВалютаПриемник,Сценарий.Валюта);
	
	ОбновитьКурсыДокумента();
	СформироватьНадписьСуммыПриемник();
	
	Если СтатьяОборотов.РазделениеПоКонтрагентам Тогда
		УстановитьЗначениеПоУмолчанию(КонтрагентИсточник,СтатьяОборотов.ОсновнойКонтрагент);
	Иначе
		КонтрагентИсточник="";
		КонтрагентПриемник="";
	КонецЕсли;
	
	Если СтатьяОборотов.РазделениеПоНоменклатуре И НЕ ЗначениеЗаполнено(НоменклатураИсточник) Тогда
		
		Если Сценарий.ДетализацияПланирования=Перечисления.ДетализацияПланирования.НоменклатурныеГруппы
			И ТипЗнч(СтатьяОборотов.ОсновнаяНоменклатура)= Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
			УстановитьЗначениеПоУмолчанию(НоменклатураИсточник,СтатьяОборотов.ОсновнаяНоменклатура);
		ИначеЕсли ТипЗнч(СтатьяОборотов.ОсновнаяНоменклатура)= Тип("СправочникСсылка.Номенклатура") Тогда
			УстановитьЗначениеПоУмолчанию(НоменклатураИсточник,СтатьяОборотов.ОсновнаяНоменклатура);
		КонецЕсли;
		
	КонецЕсли;
	
    Если НЕ СтатьяОборотов.УчетПоСумме Тогда
		
        ЭлементыФормы.Сумма.Значение=0;
		ЭлементыФормы.ВалютаИсточник.Значение="";
		ЭлементыФормы.ВалютаПриемник.Значение="";

	КонецЕсли;

	Если НЕ СтатьяОборотов.УчетПоКоличеству Тогда

		ЭлементыФормы.КоличествоИсточник.Значение=0;
        ЭлементыФормы.ЕдиницаИзмеренияИсточник.Значение="";
		
		ЭлементыФормы.КоличествоПриемник.Значение=0;
        ЭлементыФормы.ЕдиницаИзмеренияПриемник.Значение="";

	КонецЕсли;
	
	СтараяВалютаИсточник=ВалютаИсточник;
	УправлениеДоступностьюРеквизитов();
	
КонецПроцедуры

Процедура ВалютаИсточникПриИзменении(Элемент)
	
	Если ВалютаИсточник <>  СтараяВалютаИсточник Тогда
		
		// Надо предложить пересчитать сумму.
		Если (Не Сумма=0 И Вопрос("Изменилась валюта источника. Пересчитать сумму источника?", 
						РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да)= КодВозвратаДиалога.Да) Тогда
			ОбновитьКурсыИСуммуДокумента(СтараяВалютаИсточник);
		Иначе
			ОбновитьКурсыДокумента();
		КонецЕсли; 
		
	КонецЕсли;
	
	СтараяВалютаИсточник=ВалютаИсточник;
	СформироватьНадписьСуммыПриемник();

КонецПроцедуры

Процедура СуммаПриИзменении(Элемент)
	
	СформироватьНадписьСуммыПриемник();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

Процедура ДействияФормыРедактироватьНомер(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
КонецПроцедуры
// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура - обработчик события "Файлы".
//
Процедура ДействияФормыФайлы(Кнопка)
	
	Если Ссылка.Пустая() Тогда
		Предупреждение("Сначала запишите документ.");
		Возврат;
	КонецЕсли;
	
	СтруктураДляСпискаИзображдений = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, Ссылка, Ложь, Ложь);
	СтруктураДляСпискаДополнительныхФайлов = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, Ссылка, Ложь, Ложь);
	ОбязательныеОтборы = Новый Структура("Объект", Ссылка);
	
	РаботаСФайлами.ОткрытьФормуСпискаФайловИИзображений(СтруктураДляСпискаИзображдений, СтруктураДляСпискаДополнительныхФайлов, ОбязательныеОтборы, ЭтаФорма);

КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если ТипЗнч(ЗначениеВыбора) = Тип("Строка") И ЗначениеВыбора = "ИзмененСписокСправочникаХранилищеДопИнформации" Тогда
	
		СписокКнопокФайлов = Новый СписокЗначений;
		СписокКнопокФайлов.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.Файлы);
		СписокКнопокФайлов.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.Файлы);
		РаботаСФайлами.ПолучитьКартинкуКнопкиОткрытияФайлов(Ссылка, СписокКнопокФайлов);
	
	КонецЕсли; 
	
КонецПроцедуры

Процедура ВалютаПриемникПриИзменении(Элемент)
	
	ОбновитьКурсыДокумента();
	СформироватьНадписьСуммыПриемник();	
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "+" периода
//
Процедура ПлюсПериодНажатие(Элемент)
	ПериодПланирования = ОбщегоНазначения.ДобавитьИнтервал(ПериодПланирования,Сценарий.Периодичность,1);
	СформироватьТекстПериода();
	ОбновитьКурсыДокумента();
КонецПроцедуры

Процедура МинусПериодНажатие(Элемент)
	ПериодПланирования = ОбщегоНазначения.ДобавитьИнтервал(ПериодПланирования,Сценарий.Периодичность,-1);
	СформироватьТекстПериода();
	ОбновитьКурсыДокумента();
КонецПроцедуры

Процедура ВыборПериодаНажатие(Элемент)
	
	Если ВвестиДату(ПериодПланирования, "Начало периода",ЧастиДаты.Дата)  Тогда
		
		ПериодПланирования=ОбщегоНазначения.ДатаНачалаПериода(ПериодПланирования,Сценарий.Периодичность);
		СформироватьТекстПериода();
		ОбновитьКурсыДокумента();
		
	КонецЕсли;
		
КонецПроцедуры

Процедура НоменклатураИсточникНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	Если Сценарий.ДетализацияПланирования=Перечисления.ДетализацияПланирования.НоменклатурныеГруппы Тогда
		ФормаВыбора=Справочники.НоменклатурныеГруппы.ПолучитьФормуВыбора(,Элемент,);
		Если ЗначениеЗаполнено(Элемент.Значение) И ТипЗнч(Элемент.Значение)=Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
			ФормаВыбора.ПараметрТекущаяСтрока=Элемент.Значение;
		КонецЕсли;
	Иначе
		ФормаВыбора=Справочники.Номенклатура.ПолучитьФормуВыбора(,Элемент,);
		Если ЗначениеЗаполнено(Элемент.Значение) И ТипЗнч(Элемент.Значение)=Тип("СправочникСсылка.Номенклатура") Тогда
			ФормаВыбора.ПараметрТекущаяСтрока=Элемент.Значение;
		КонецЕсли;
	КонецЕсли;
	
	ФормаВыбора.РежимВыбора=Истина;
	ФормаВыбора.Открыть();
		
КонецПроцедуры

Процедура НоменклатураПриемникНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	Если Сценарий.ДетализацияПланирования=Перечисления.ДетализацияПланирования.НоменклатурныеГруппы Тогда
		ФормаВыбора=Справочники.НоменклатурныеГруппы.ПолучитьФормуВыбора(,Элемент,);
		Если ЗначениеЗаполнено(Элемент.Значение) И ТипЗнч(Элемент.Значение)=Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
			ФормаВыбора.ПараметрТекущаяСтрока=Элемент.Значение;
		КонецЕсли;
	Иначе
		ФормаВыбора=Справочники.Номенклатура.ПолучитьФормуВыбора(,Элемент,);
		Если ЗначениеЗаполнено(Элемент.Значение) И ТипЗнч(Элемент.Значение)=Тип("СправочникСсылка.Номенклатура") Тогда
			ФормаВыбора.ПараметрТекущаяСтрока=Элемент.Значение;
		КонецЕсли;
	КонецЕсли;
	
	ФормаВыбора.РежимВыбора=Истина;
	ФормаВыбора.Открыть();
		
КонецПроцедуры

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать".
// Открывает форму выбора печатных форм объекта.
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ОткрытьФормуВыбораПечатныхФормОбъекта(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ОсновныеДействияФормыПечать() 

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)

	УниверсальныеМеханизмы.НапечататьДокументПоУмолчанию(ЭтотОбъект);

КонецПроцедуры

Процедура ПослеЗаписи()
	
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры