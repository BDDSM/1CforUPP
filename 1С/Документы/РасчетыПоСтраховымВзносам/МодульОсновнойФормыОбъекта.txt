////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит последнюю установленную дату документа - для проверки перехода документа в другой период
Перем мТекущаяДатаДокумента;

// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;

// Хранит элемент управления подменю печати
Перем мПодменюПечати;

// Хранит элемент управления кнопку печать по умолчанию
Перем мПечатьПоУмолчанию;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

Перем мОстатокПФРСтраховая;
Перем мОстатокПФРНакопительная;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	
	мДеревоМакетов = УниверсальныеМеханизмы.ПолучитьДеревоМакетовПечати(Ссылка, Неопределено, Новый Действие("ОсновныеДействияФормыПечать"), Новый Действие("ОсновныеДействияФормыУстановитьПечатьПоУмолчанию"));

	УниверсальныеМеханизмы.УстановитьПодменюПечати    (мПодменюПечати, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов);
	УниверсальныеМеханизмы.УстановитьПечатьПоУмолчанию(мПечатьПоУмолчанию, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов, Метаданные().Имя,Новый Действие("ОсновныеДействияФормыПечатьПоУмолчанию"));

	Если Не мПодменюПечати = Неопределено Тогда
		УниверсальныеМеханизмы.СформироватьПодменю(мДеревоМакетов, мПодменюПечати,Истина,Истина);
	КонецЕсли;
	
КонецПроцедуры // УстановитьКнопкиПечати()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

Процедура ОбновитьОписаниеОстатковПФР(СПересчетомОстатков = Истина)
    Если ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаПФР Тогда
		
		Если СПересчетомОстатков Тогда
			СтруктураОстатков = ТекущиеОстатки(Организация, Дата, ВидПлатежа, Проведен, Ссылка, ДатаПлатежа);
			мОстатокПФРСтраховая = СтруктураОстатков.ПФРСтраховая;
		 	мОстатокПФРНакопительная = СтруктураОстатков.ПФРНакопительная;
		КонецЕсли;
		
		Описание = "";
		НедоплатаПоСтраховой = Макс(мОстатокПФРСтраховая - ПФРСтраховая,0);
		ПереплатаПоСтраховой = Макс(-мОстатокПФРСтраховая + ПФРСтраховая,0);
		НедоплатаПоНакопительной = Макс(мОстатокПФРНакопительная - ПФРНакопительная,0);
		ПереплатаПоНакопительной = Макс(-мОстатокПФРНакопительная + ПФРНакопительная,0);
		Если ПереплатаПоСтраховой = 0 И НедоплатаПоСтраховой = 0 Тогда
			РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьПредупреждениеСтраховая,ЭлементыФормы.ПолеКартинкиПредупреждениеСтраховая, "Задолженность либо переплата за прошлые периоды с учетом текущего платежа отсутствуют!", "Информация");
		Иначе
			ВажностьСообщения = "СообщениеОПроблемах";
			Если НедоплатаПоСтраховой > 0 Тогда
				Описание = "Задолженность за прошлые периоды с учетом текущего платежа составила: " + Формат(НедоплатаПоСтраховой,"ЧДЦ=2; ЧГ=0");
			КонецЕсли;
			Если ПереплатаПоСтраховой > 0 Тогда
				Описание = "Переплата с учетом текущего платежа составила: " + Формат(ПереплатаПоСтраховой,"ЧДЦ=2; ЧГ=0");
				Если ПереплатаПоСтраховой < 1 Тогда
					ВажностьСообщения = "Информация";
				КонецЕсли;
			КонецЕсли;
			РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьПредупреждениеСтраховая,ЭлементыФормы.ПолеКартинкиПредупреждениеСтраховая, Описание, ВажностьСообщения);
		КонецЕсли;
		Если ПереплатаПоНакопительной = 0 И НедоплатаПоНакопительной = 0 Тогда
			РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьПредупреждениеНакопительная,ЭлементыФормы.ПолеКартинкиПредупреждениеНакопительная, "Задолженность либо переплата за прошлые периоды с учетом текущего платежа отсутствуют!", "Информация");
		Иначе
			ВажностьСообщения = "СообщениеОПроблемах";
			Если НедоплатаПоНакопительной > 0 Тогда
				Описание = "Задолженность за прошлые периоды с учетом текущего платежа составила: " + Формат(НедоплатаПоНакопительной,"ЧДЦ=2; ЧГ=0");
			КонецЕсли;
			Если ПереплатаПоНакопительной > 0 Тогда
				Описание = "Переплата с учетом текущего платежа составила: " + Формат(ПереплатаПоНакопительной,"ЧДЦ=2; ЧГ=0");
				Если ПереплатаПоНакопительной < 1 Тогда
					ВажностьСообщения = "Информация";
				КонецЕсли;
			КонецЕсли;
			РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьПредупреждениеНакопительная,ЭлементыФормы.ПолеКартинкиПредупреждениеНакопительная, Описание, ВажностьСообщения);
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

Процедура ОбновитьОписаниеДатыПлатежа()

	Если ЗначениеЗаполнено(ДатаПлатежа) Тогда
		
		Квартал = Месяц(НачалоКвартала(ДатаПлатежа));
		НомерСтроки = Месяц(ДатаПлатежа) - Квартал + 1;
		ПериодОтчета = ?(Квартал = 1,"1-й квартал",?(Квартал = 4,"полугодие",?(Квартал = 7,"9 месяцев","год")));
		
		ЭлементыФормы.НадписьДатаПлатежаОписание.Заголовок = "Платеж будет учтен в строке 14" + НомерСтроки + " в РСВ-1 ПФР за " + ПериодОтчета;
		ЭлементыФормы.НадписьДатаПлатежаОписание3.Заголовок = "Платеж будет учтен в строке 14" + НомерСтроки + " в РВ-3 ПФР за " + ПериодОтчета;
		ЭлементыФормы.НадписьДатаПлатежаОписание1.Заголовок = "Платеж будет учтен в строках " + НомерСтроки + "-го месяца в 4-ФСС за " + ПериодОтчета;
		ЭлементыФормы.НадписьДатаПлатежаОписание2.Заголовок = "Платеж будет учтен в строке 14" + НомерСтроки + " в РСВ-1 ПФР за " + ПериодОтчета;
		
	Иначе
		ЭлементыФормы.НадписьДатаПлатежаОписание.Заголовок = "";
		ЭлементыФормы.НадписьДатаПлатежаОписание1.Заголовок = "";
		ЭлементыФормы.НадписьДатаПлатежаОписание2.Заголовок = "";
	КонецЕсли;
	
КонецПроцедуры

// Процедура устанавливает видимость для тех колонок в табличной части 
// "Товары", видимость которых определяется реквизитами документа.
//
// Параметры:
//  Нет.
//
Процедура УстановитьВидимость()

	ДоступныеЗначения = Новый СписокЗначений;
	Если ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.Начисление Тогда
		ЭлементыФормы.ПанельДанных.ТекущаяСтраница = ЭлементыФормы.ПанельДанных.Страницы.Начисление;
		ДоступныеЗначения = ЭлементыФормы.ВидПлатежа1.ДоступныеЗначения;
		ЭлементыФормы.НадписьОперация.Заголовок = "Операция начисления ""текущих платежей по взносам"" предназначена для ввода начальных остатков. Начислять взносы по результатам расчета заработной платы следует документом ""Начисление страховых взносов"".";
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.ДоначислениеВзносов Тогда
		ЭлементыФормы.ПанельДанных.ТекущаяСтраница = ЭлементыФормы.ПанельДанных.Страницы.ДоначислениеВзносов;
		ДоступныеЗначения = ЭлементыФормы.ВидПлатежа7.ДоступныеЗначения;
		ЭлементыФормы.НадписьОперация.Заголовок = "Операция предназначена для регистрации сумм доначисленных взносов (например, по актам проверок).";
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаПФР Тогда
		ЭлементыФормы.ПанельДанных.ТекущаяСтраница = ЭлементыФормы.ПанельДанных.Страницы.Уплата;
		ДоступныеЗначения = ЭлементыФормы.ВидПлатежа.ДоступныеЗначения;
		ЭлементыФормы.НадписьОперация.Заголовок = "Платежи по страховым взносам в каждый из фондов регистрируются отдельной операцией.";
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаФСС Тогда
		ЭлементыФормы.ПанельДанных.ТекущаяСтраница = ЭлементыФормы.ПанельДанных.Страницы.УплатаФСС;
		ДоступныеЗначения = ЭлементыФормы.ВидПлатежа4.ДоступныеЗначения;
		ЭлементыФормы.НадписьОперация.Заголовок = "Платежи по страховым взносам в каждый из фондов регистрируются отдельной операцией.";
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаФОМС Тогда
		ЭлементыФормы.ПанельДанных.ТекущаяСтраница = ЭлементыФормы.ПанельДанных.Страницы.УплатаФОМС;
		ДоступныеЗначения = ЭлементыФормы.ВидПлатежа5.ДоступныеЗначения;
		ЭлементыФормы.НадписьОперация.Заголовок = "Платежи по страховым взносам в каждый из фондов регистрируются отдельной операцией.";
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УдалитьУплата Тогда
		ЭлементыФормы.ПанельДанных.ТекущаяСтраница = ЭлементыФормы.ПанельДанных.Страницы.УстаревшиеДанные;
		ДоступныеЗначения = ЭлементыФормы.ВидПлатежа6.ДоступныеЗначения;
		ЭлементыФормы.НадписьОперация.Заголовок = "";
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.ПособияПоСтрахованию Тогда
		Если ГодРасчетногоПериода < Год(ПроведениеРасчетов.ДатаРасширенияПеречняЛьготныхТарифовСтраховыхВзносов()) Тогда
			ЭлементыФормы.ПанельДанных.ТекущаяСтраница = ЭлементыФормы.ПанельДанных.Страницы.ПособияПоСтрахованию;
			ДоступныеЗначения = ЭлементыФормы.ВидПлатежа2.ДоступныеЗначения;
		Иначе
			ЭлементыФормы.ПанельДанных.ТекущаяСтраница = ЭлементыФормы.ПанельДанных.Страницы.ПособияПоСтрахованию2011;
			ДоступныеЗначения = ЭлементыФормы.ВидПлатежа3.ДоступныеЗначения;
		КонецЕсли;
		ЭлементыФормы.НадписьОперация.Заголовок = "Операция предназначена для регистрации полученного из ФСС возмещения расходов по страхованию, сумм непринятых расходов по результатам проверки, а также для расходов по страхованию за отчетные периоды до начала эксплуатации.";
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаЕСН Тогда
		ЭлементыФормы.ПанельДанных.ТекущаяСтраница = ЭлементыФормы.ПанельДанных.Страницы.УстаревшиеДанные;
		ДоступныеЗначения = ЭлементыФормы.ВидПлатежа6.ДоступныеЗначения;
		ЭлементыФормы.НадписьОперация.Заголовок = "Операция предназначена для регистрации платежей в счет погашения задолженности по ЕСН, образовавшейся в 2001-2009 годах.";
	Иначе	
	КонецЕсли;

	Если ДоступныеЗначения.НайтиПоЗначению(ВидПлатежа) = Неопределено И ДоступныеЗначения.Количество() > 0 Тогда
		ВидПлатежа = ДоступныеЗначения[0].Значение
	КонецЕсли;
	
КонецПроцедуры // УстановитьВидимость()

Процедура УстановитьЗаголовкиОрганизацийВФорме()
	ЭлементыФормы.НадписьОрганизация.Заголовок = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация:");
КонецПроцедуры // УстановитьЗаголовкиОрганизацийВФорме()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	Если ЭтоНовый() Тогда
		
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументовПереопределяемый.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"));
		
		Если ВидПлатежа.Пустая() Тогда
			ВидПлатежа = Перечисления.ВидыПлатежейВГосБюджет.Налог
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(МесяцРасчетногоПериода) Тогда
			МесяцРасчетногоПериода = НачалоГода(ОбщегоНазначения.ПолучитьРабочуюДату())
		КонецЕсли;
	Иначе
		
		// Установить доступность формы с учетом даты запрета редактирования	
		РаботаСДиалогамиЗК.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);

	КонецЕсли;
	
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);

	// Заполним реквизит формы МесяцСтрока.
	МесяцСтрока = РаботаСДиалогами.ДатаКакМесяцПредставление(МесяцРасчетногоПериода);
	
	// Заполним реквизит формы ГодРасчетногоПериода.
	ГодРасчетногоПериода = Год(МесяцРасчетногоПериода);
	
	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(Строка(ВидОперации), ЭтотОбъект, ЭтаФорма);
	
	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента = Дата;
	
	ВидыНачисленийУплат = Новый СписокЗначений;
	ВидыНачисленийУплат.Добавить(Перечисления.ВидыПлатежейВГосБюджет.Налог);
	ВидыНачисленийУплат.Добавить(Перечисления.ВидыПлатежейВГосБюджет.ПениСам);
	ВидыНачисленийУплат.Добавить(Перечисления.ВидыПлатежейВГосБюджет.ПениАкт);
	ВидыНачисленийУплат.Добавить(Перечисления.ВидыПлатежейВГосБюджет.Штраф);
	ЭлементыФормы.ВидПлатежа1.ДоступныеЗначения = ВидыНачисленийУплат;
	
	ВидыНачисленийУплат = Новый СписокЗначений;
	ВидыНачисленийУплат.Добавить(Перечисления.ВидыПлатежейВГосБюджет.НалогСам);
	ВидыНачисленийУплат.Добавить(Перечисления.ВидыПлатежейВГосБюджет.НалогАкт);
	ЭлементыФормы.ВидПлатежа7.ДоступныеЗначения = ВидыНачисленийУплат;
	
	ВидыНачисленийУплат = Новый СписокЗначений;
	ВидыНачисленийУплат.Добавить(Перечисления.ВидыПлатежейВГосБюджет.Налог);
	ВидыНачисленийУплат.Добавить(Перечисления.ВидыПлатежейВГосБюджет.НалогСам);
	ВидыНачисленийУплат.Добавить(Перечисления.ВидыПлатежейВГосБюджет.НалогАкт);
	ВидыНачисленийУплат.Добавить(Перечисления.ВидыПлатежейВГосБюджет.ПениСам);
	ВидыНачисленийУплат.Добавить(Перечисления.ВидыПлатежейВГосБюджет.ПениАкт);
	ВидыНачисленийУплат.Добавить(Перечисления.ВидыПлатежейВГосБюджет.Штраф);
	ЭлементыФормы.ВидПлатежа4.ДоступныеЗначения = ВидыНачисленийУплат;
	ЭлементыФормы.ВидПлатежа6.ДоступныеЗначения = ВидыНачисленийУплат;
	
	ВидыНачисленийУплат = Новый СписокЗначений;
	ВидыНачисленийУплат.Добавить(Перечисления.ВидыПлатежейВГосБюджет.Налог);
	ВидыНачисленийУплат.Добавить(Перечисления.ВидыПлатежейВГосБюджет.НалогСам);
	ВидыНачисленийУплат.Добавить(Перечисления.ВидыПлатежейВГосБюджет.НалогАкт);
	ЭлементыФормы.ВидПлатежа.ДоступныеЗначения = ВидыНачисленийУплат;
	ЭлементыФормы.ВидПлатежа5.ДоступныеЗначения = ВидыНачисленийУплат;
	
	ВидыРасходов = Новый СписокЗначений;
	ВидыРасходов.Добавить(Перечисления.ВидыПлатежейВГосБюджет.ПолученоИзФонда);
	ВидыРасходов.Добавить(Перечисления.ВидыПлатежейВГосБюджет.НеПринято);
	ВидыРасходов.Добавить(Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию);
	ЭлементыФормы.ВидПлатежа2.ДоступныеЗначения = ВидыРасходов;
	ЭлементыФормы.ВидПлатежа3.ДоступныеЗначения = ВидыРасходов;
	
	ВидыОпераций = Новый СписокЗначений;
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаПФР);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаФСС);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаФОМС);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.Начисление);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.ПособияПоСтрахованию);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.ДоначислениеВзносов);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаЕСН);
	Если ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УдалитьУплата Тогда
		ВидыОпераций.Добавить(Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УдалитьУплата);
	КонецЕсли;
	ЭлементыФормы.ВидОперации.ДоступныеЗначения = ВидыОпераций;
	ЭлементыФормы.ВидОперации.СписокВыбора = ВидыОпераций;
	
	УстановитьВидимость();
	ОбновитьОписаниеДатыПлатежа();
 	ОбновитьОписаниеОстатковПФР();
	УстановитьЗаголовкиОрганизацийВФорме();
	
	ПоказыватьКолонкиДопТарифаПФР = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуВсехОрганизаций(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), "ИспользуетсяТрудЧленовЛетныхЭкипажей");
	ЭлементыФормы.ПФРПоДополнительномуТарифу1.Видимость = ПоказыватьКолонкиДопТарифаПФР;
	ЭлементыФормы.ПФРПоДополнительномуТарифу2.Видимость = ПоказыватьКолонкиДопТарифаПФР;
	ЭлементыФормы.НадписьПФРПоДополнительномуТарифу1.Видимость = ПоказыватьКолонкиДопТарифаПФР;
	ЭлементыФормы.НадписьПФРПоДополнительномуТарифу2.Видимость = ПоказыватьКолонкиДопТарифаПФР;
	ЭлементыФормы.ПанельАвиа.Свертка = ?(ПоказыватьКолонкиДопТарифаПФР, РежимСверткиЭлементаУправления.Нет, РежимСверткиЭлементаУправления.Верх);
	
	ПоказыватьКолонкиДляШахтеров = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуВсехОрганизаций(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), "ИспользуетсяТрудШахтеров");
	ЭлементыФормы.ПФРНаДоплатуКПенсииШахтерам.Видимость = ПоказыватьКолонкиДляШахтеров;
	ЭлементыФормы.ПФРНаДоплатуКПенсииШахтерам1.Видимость = ПоказыватьКолонкиДляШахтеров;
	ЭлементыФормы.ПФРНаДоплатуКПенсииШахтерам2.Видимость = ПоказыватьКолонкиДляШахтеров;
	ЭлементыФормы.НадписьПФРНаДоплатуКПенсииШахтерам.Видимость = ПоказыватьКолонкиДляШахтеров;
	ЭлементыФормы.НадписьПФРНаДоплатуКПенсииШахтерам1.Видимость = ПоказыватьКолонкиДляШахтеров;
	ЭлементыФормы.НадписьПФРНаДоплатуКПенсииШахтерам2.Видимость = ПоказыватьКолонкиДляШахтеров;
	
	ЭлементыФормы.ПанельДопТарифов.Свертка = ?(ПоказыватьКолонкиДопТарифаПФР Или ПоказыватьКолонкиДляШахтеров, РежимСверткиЭлементаУправления.Нет, РежимСверткиЭлементаУправления.Верх);
	
	// Установить активный реквизит.
	Если Не РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма) Тогда
		Если ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаПФР Тогда
			Если Не ЗначениеЗаполнено(ДатаПлатежа) Тогда
				ТекущийЭлемент = ЭлементыФормы.ДатаПлатежа;
			Иначе
				ТекущийЭлемент = ЭлементыФормы.ПФРСтраховая;
			КонецЕсли;
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаФСС Тогда
			Если Не ЗначениеЗаполнено(ДатаПлатежа) Тогда
				ТекущийЭлемент = ЭлементыФормы.ДатаПлатежа4;
			Иначе
				ТекущийЭлемент = ЭлементыФормы.ФСС;
			КонецЕсли;
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаФОМС Тогда
			Если Не ЗначениеЗаполнено(ДатаПлатежа) Тогда
				ТекущийЭлемент = ЭлементыФормы.ДатаПлатежа5;
			Иначе
				ТекущийЭлемент = ЭлементыФормы.ФФОМС;
			КонецЕсли;
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.Начисление Тогда
			Если Не ЗначениеЗаполнено(ДатаПлатежа) Тогда
				ТекущийЭлемент = ЭлементыФормы.ДатаПлатежа1;
			Иначе
				ТекущийЭлемент = ЭлементыФормы.ПФРСтраховая1;
			КонецЕсли;
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.ДоначислениеВзносов Тогда
			Если Не ЗначениеЗаполнено(ДатаПлатежа) Тогда
				ТекущийЭлемент = ЭлементыФормы.ДатаПлатежа7;
			Иначе
				ТекущийЭлемент = ЭлементыФормы.ПФРСтраховая3;
			КонецЕсли;
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаЕСН Или ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УдалитьУплата Тогда
			Если Не ЗначениеЗаполнено(ДатаПлатежа) Тогда
				ТекущийЭлемент = ЭлементыФормы.ДатаПлатежа6;
			Иначе
				ТекущийЭлемент = ЭлементыФормы.ПФРСтраховая2;
			КонецЕсли;
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.ПособияПоСтрахованию Тогда
			Если Не ЗначениеЗаполнено(ДатаПлатежа) Тогда
				ТекущийЭлемент = ЭлементыФормы.ДатаПлатежа3;
			Иначе
				ТекущийЭлемент = ЭлементыФормы.ФСС4;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()
 
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(Строка(ВидОперации), ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	ОбновитьОписаниеОстатковПФР();
	
КонецПроцедуры // ПослеЗаписи()

Процедура ОбновлениеОтображения()
	ОбновитьОписаниеДатыПлатежа();
	ОбновитьОписаниеОстатковПФР(Ложь);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры // ДействияФормыДействиеОткрытьСвойства()

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры // ДействияФормыДействиеОткрытьКатегории()

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
			
КонецПроцедуры


// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры // ОсновныеДействияФормыПечатьПоУмолчанию()

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры // ОсновныеДействияФормыПечать()

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		УстановитьКнопкиПечати();
	КонецЕсли;
	
КонецПроцедуры // ОсновныеДействияФормыУстановитьПечатьПоУмолчанию()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа.
//
Процедура ДатаПриИзменении(Элемент)

	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	мТекущаяДатаДокумента = Дата;
	ОбновитьОписаниеОстатковПФР();

КонецПроцедуры // ДатаПриИзменении()

Процедура ВидОперацииПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(ВидОперации) Тогда
		ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаПФР
	КонецЕсли;
	
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(Строка(ВидОперации), ЭтотОбъект, ЭтаФорма);
	
	УстановитьВидимость();
	ОбновитьОписаниеОстатковПФР();

КонецПроцедуры

Процедура ВидОперацииОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода организации.
//
Процедура ОрганизацияПриИзменении(Элемент)

	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;
	
	ОбновитьОписаниеОстатковПФР();
	
КонецПроцедуры // ОрганизацияПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля ввода периода регистрации.
//
Процедура МесяцРасчетногоПериодаПриИзменении(Элемент)
	
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(Элемент.Значение, МесяцРасчетногоПериода);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(МесяцРасчетногоПериода);
	
КонецПроцедуры // МесяцРасчетногоПериодаПриИзменении()

// Процедура - обработчик события "Регулирование" поля ввода периода регистрации.
//
Процедура МесяцРасчетногоПериодаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	МесяцРасчетногоПериода = ДобавитьМесяц(МесяцРасчетногоПериода, Направление);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(МесяцРасчетногоПериода);
	
КонецПроцедуры // МесяцРасчетногоПериодаРегулирование()

// Процедура - обработчик события "Очистка" поля ввода периода регистрации.
//
Процедура МесяцРасчетногоПериодаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры // МесяцРасчетногоПериодаОчистка()

// Процедура - обработчик события "НачалоВыбораИзСписка" поля ввода периода регистрации.
//
Процедура МесяцРасчетногоПериодаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, МесяцРасчетногоПериода, ЭтаФорма);
	
КонецПроцедуры // МесяцРасчетногоПериодаНачалоВыбораИзСписка()

// Процедура - обработчик события "АвтоПодборТекста" поля ввода периода регистрации.
//
Процедура МесяцРасчетногоПериодаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	РаботаСДиалогами.ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);
	
КонецПроцедуры // МесяцРасчетногоПериодаАвтоПодборТекста()

// Процедура - обработчик события "ОкончаниеВводаТекста" поля ввода периода регистрации.
//
Процедура МесяцРасчетногоПериодаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	РаботаСДиалогами.ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка);
	
КонецПроцедуры // МесяцРасчетногоПериодаОкончаниеВводаТекста()

Процедура ДатаПлатежаПриИзменении(Элемент)
	ОбновитьОписаниеОстатковПФР();
КонецПроцедуры

Процедура ВидПлатежаПриИзменении(Элемент)
	ОбновитьОписаниеОстатковПФР();
КонецПроцедуры

Процедура КнопкаЗаполнитьНажатие(Элемент)
	
	Отказ = Ложь;
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();

	Если Не ЗначениеЗаполнено(Организация) Тогда
		СтрокаСообщения = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Не указана организация!");
		ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаСообщения, Отказ, Заголовок);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВидПлатежа) Тогда
		ОбщегоНазначения.ВывестиИнформациюОбОшибке("Не указан вид платежа!", Отказ, Заголовок);
	КонецЕсли;
	
	Если Отказ Тогда
		ОбработкаКомментариев.ПоказатьСообщения();
		Возврат
	КонецЕсли;
	
	Автозаполнение();
	
КонецПроцедуры

Процедура ГодРасчетногоПериодаПриИзменении(Элемент)
	МесяцРасчетногоПериода = Дата(ГодРасчетногоПериода, 1, 1);
	УстановитьВидимость();
КонецПроцедуры

Процедура ГодРасчетногоПериодаОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ