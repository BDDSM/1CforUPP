Процедура НовыеОстаткиПоСчетамБюджетированияСчетПриИзменении(Элемент)
	
	Счет=Элемент.Значение;
	
	Для К=1 По 3 Цикл
		ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.ТекущиеДанные["Субконто"+К]=Неопределено;
	КонецЦикла;
		
	Для К = 0 По Счет.ВидыСубконто.Количество() - 1 Цикл
		
		ТипСубконто   = Счет.ВидыСубконто[К].ВидСубконто.ТипЗначения;
		Префикс=К+1;
		
		Если Счет.ВидыСубконто[К].ВидСубконто.Наименование="Номенклатура" Тогда // Выбираем по сценарию
			Если Сценарий.ДетализацияПланирования=Перечисления.ДетализацияПланирования.НоменклатурныеГруппы Тогда
				ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.ТекущиеДанные["Субконто"+Префикс]=Новый(Тип("СправочникСсылка.НоменклатурныеГруппы"));
			Иначе
				ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.ТекущиеДанные["Субконто"+Префикс]=Новый(Тип("СправочникСсылка.Номенклатура"));
			КонецЕсли
		Иначе
			
			ЭлементТЧ=	ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.ТекущиеДанные["Субконто"+Префикс];
			ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.ТекущиеДанные["Субконто"+Префикс]=ТипСубконто.ПривестиЗначение(ЭлементТЧ);
			
		КонецЕсли;
		
		ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.Колонки["Субконто"+Префикс].Доступность = Истина;

	КонецЦикла;
	
	МаксСубконто = Счет.Метаданные().МаксКоличествоСубконто - 1;
	
	Для К = Счет.ВидыСубконто.Количество() По МаксСубконто Цикл
		
		Префикс=К+1;
		ЭлементТЧ=	ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.ТекущаяСтрока["Субконто"+Префикс];
		ЭлементТЧ= Неопределено;

		ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.Колонки["Субконто"+Префикс].Доступность = Ложь;
		
	КонецЦикла;
	
	Если Счет.Валютный Тогда
		ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.Колонки.Валюта.Доступность = Истина;
		ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.Колонки.ВалютнаяСумма.Доступность = Истина;
	Иначе
		ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.ТекущиеДанные.Валюта=Неопределено;
		ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.ТекущиеДанные.ВалютнаяСумма=0;
		
		ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.Колонки.Валюта.Доступность = Ложь;
		ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.Колонки.ВалютнаяСумма.Доступность = Ложь;
	КонецЕсли;
	
	Если Счет.Количественный Тогда
	
		ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.Колонки.Количество.Доступность = Истина;
		
	Иначе
		
		ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.ТекущиеДанные.Количество=0;
		ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.Колонки.Количество.Доступность=Ложь;
	
	КонецЕсли; 
	
КонецПроцедуры

Процедура НовыеОстаткиПоСчетамБюджетированияПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Счет=Элемент.ТекущиеДанные.Счет;
	
	Если НЕ Счет.Пустая() Тогда
		
		Для К = 0 По Счет.ВидыСубконто.Количество() - 1 Цикл
			Префикс=К+1;

			Если ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.ТекущиеДанные["Субконто"+Префикс]=Неопределено Тогда
				
				ТипСубконто   = Счет.ВидыСубконто[К].ВидСубконто.ТипЗначения;
				
				Если Счет.ВидыСубконто[К].ВидСубконто.Наименование="Номенклатура" Тогда // Выбираем по сценарию
					Если Сценарий.ДетализацияПланирования=Перечисления.ДетализацияПланирования.НоменклатурныеГруппы Тогда
						ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.ТекущиеДанные["Субконто"+Префикс]=Новый(Тип("СправочникСсылка.НоменклатурныеГруппы"));
					Иначе
						ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.ТекущиеДанные["Субконто"+Префикс]=Новый(Тип("СправочникСсылка.Номенклатура"));
					КонецЕсли
				Иначе
					
					ЭлементТЧ=	ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.ТекущиеДанные["Субконто"+Префикс];
					ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.ТекущиеДанные["Субконто"+Префикс]=ТипСубконто.ПривестиЗначение(ЭлементТЧ);
					
				КонецЕсли;
				
			КонецЕсли;

						КолонкаТЧ=	ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.Колонки["Субконто"+Префикс];
			КолонкаТЧ.Доступность = Истина;
		КонецЦикла;
		
		МаксСубконто = Счет.Метаданные().МаксКоличествоСубконто - 1;
		Для К = Счет.ВидыСубконто.Количество() По МаксСубконто Цикл
			Префикс=К+1;
			КолонкаТЧ= ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.Колонки["Субконто"+Префикс];
			КолонкаТЧ.Доступность = Ложь;
		КонецЦикла;
		
	КонецЕсли;
	
	Если Счет.Валютный Тогда
		ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.Колонки.Валюта.Доступность = Истина;
		ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.Колонки.ВалютнаяСумма.Доступность = Истина;
	Иначе
		ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.Колонки.Валюта.Доступность = Ложь;
		ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.Колонки.ВалютнаяСумма.Доступность = Ложь;
	КонецЕсли;
	
	Если Счет.Количественный Тогда
	
		ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.Колонки.Количество.Доступность = Истина;
		
	Иначе
		
		ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.Колонки.Количество.Доступность=Ложь;
	
	КонецЕсли;
	
	Если Сценарий.Пустая() Тогда
		ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.Колонки.СуммаСценария.Доступность = Ложь;
	Иначе
		ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.Колонки.СуммаСценария.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры


// Инициализация курсов валют для пересчета
//
// Параметры: нет
//
Процедура ИнициализацияКурсов()
	
	ВалютаУпр=глЗначениеПеременной("ВалютаУправленческогоУчета");
	ВалютаСценария=Сценарий.Валюта;
	ВалютаРегл=мВалютаРегламентированногоУчета;
	
	СтруктураКурсыВалютыУпрУчета=Бюджетирование.КурсВалютыПоСценарию(ВалютаУпр,ДатаНачала,Сценарий);
	СтруктураКурсыВалютыРеглУчета=Бюджетирование.КурсВалютыПоСценарию(ВалютаРегл,ДатаНачала,Сценарий);
	СтруктураКурсыВалютыСценария=Бюджетирование.КурсВалютыПоСценарию(ВалютаСценария,ДатаНачала,Сценарий);
		
	КурсВалютыУпрУчета=СтруктураКурсыВалютыУпрУчета.Курс;
	КратностьВалютыУпрУчета=СтруктураКурсыВалютыУпрУчета.Кратность;
	
	КурсВалютыРеглУчета=СтруктураКурсыВалютыРеглУчета.Курс;
	КратностьВалютыРеглУчета=СтруктураКурсыВалютыРеглУчета.Кратность;
	
	КурсВалютыСценария=СтруктураКурсыВалютыСценария.Курс;
	КратностьВалютыСценария=СтруктураКурсыВалютыСценария.Кратность;
	
КонецПроцедуры // ИнициализацияКурсов()

// Рассчитывает баланс по устанавливаемым суммам
//
// Параметры: нет.
//
Процедура БалансКорректировки()

	БалансКорректировкиУпр=0;
	БалансКорректировкиСценарий=0;
	
	Для Каждого Строка Из НовыеОстаткиПоСчетамБюджетирования Цикл
		
		Если Строка.Счет.Забалансовый Тогда
			Продолжить;
		КонецЕсли;
		
		Если Строка.Счет.Вид=ВидСчета.Пассивный Тогда
			БалансКорректировкиУпр=БалансКорректировкиУпр-Строка.СуммаУпр;
			Если Не Сценарий.Пустая() Тогда
				БалансКорректировкиСценарий=БалансКорректировкиСценарий-Строка.СуммаСценария;
			КонецЕсли;
		Иначе
			БалансКорректировкиУпр=БалансКорректировкиУпр+Строка.СуммаУпр;
			Если Не Сценарий.Пустая() Тогда
				БалансКорректировкиСценарий=БалансКорректировкиСценарий+Строка.СуммаСценария;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	ЭлементыФормы.НадписьБалансУпр.Заголовок="Баланс (сумма упр.): "+Формат(БалансКорректировкиУпр,"ЧЦ=15; ЧДЦ=2");
	
	Если Не Сценарий.Пустая() тогда
		ЭлементыФормы.НадписьБалансСценарий.Заголовок="Баланс (сумма сценария): "+Формат(БалансКорректировкиСценарий,"ЧЦ=15; ЧДЦ=2");
	КонецЕсли;
				
КонецПроцедуры // БалансКорректировки()

Процедура НовыеОстаткиПоСчетамБюджетированияСуммаУпрПриИзменении(Элемент)
	
	РасчетСумм("СуммаУпр",ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.ТекущаяСтрока);
	
КонецПроцедуры

Процедура НовыеОстаткиПоСчетамБюджетированияВалютнаяСуммаПриИзменении(Элемент)
	
	РасчетСумм("ВалютнаяСумма",ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.ТекущаяСтрока);
	
КонецПроцедуры

Процедура НовыеОстаткиПоСчетамБюджетированияСуммаСценарияПриИзменении(Элемент)
	
	РасчетСумм("СуммаСценария",ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.ТекущаяСтрока);
	
КонецПроцедуры

Процедура НовыеОстаткиПоСчетамБюджетированияВалютаПриИзменении(Элемент)
	
	РасчетСумм("ВалютнаяСумма",ЭлементыФормы.НовыеОстаткиПоСчетамБюджетирования.ТекущаяСтрока);
	
КонецПроцедуры

Процедура НовыеОстаткиПоСчетамБюджетированияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	БалансКорректировки();
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	БалансКорректировки();
	
КонецПроцедуры

Процедура СценарийПриИзменении(Элемент)
	
	ИнициализацияКурсов();
	
КонецПроцедуры

Процедура ДатаНачалаПриИзменении(Элемент)
	
	Элемент.Значение=ОбщегоНазначения.ДатаНачалаПериода(Элемент.Значение,Сценарий.Периодичность);
	ИнициализацияКурсов();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	
	Если НЕ ЭтоНовый() Тогда 
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	КонецЕсли;
	
	ИнициализацияКурсов();
	БалансКорректировки();
	
	Если ЭтоНовый() И НЕ ЗначениеЗаполнено(ДатаНачала) Тогда
		ДатаНачала=ТекущаяДата();
	КонецЕсли;
	
	Если (НЕ ЗначениеЗаполнено(Ответственный)) ИЛИ (НЕ ПараметрОбъектКопирования=Неопределено) Тогда
		Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Состояние) Тогда
		Состояние=Перечисления.СостоянияОбъектов.Подготовлен;
	КонецЕсли;
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект,ЭтаФорма);
	
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура КоманднаяПанель1Заполнить(Кнопка)
	
	Если НЕ ЗначениеЗаполнено(ДатаНачала) Тогда
		Сообщить("Не указана дата корректировки остатков");
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПоДаннымИсточников();
	БалансКорректировки();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если Ответственный.Пустая() Тогда
		Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

Процедура ДействияФормыРедактироватьНомер(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
КонецПроцедуры
// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

Процедура ДатаНачалаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;

	Элемент.Значение=ОбщегоНазначения.ДобавитьИнтервал(Элемент.Значение,Сценарий.Периодичность,Направление);
	ИнициализацияКурсов();
	
КонецПроцедуры

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

Процедура ПослеЗаписи()
	
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры