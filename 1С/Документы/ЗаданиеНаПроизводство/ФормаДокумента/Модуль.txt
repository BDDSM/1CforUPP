////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента; 
Перем мКолонкиВыпускТехПроцесс;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка,Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.ВыпускТехПроцесс,ЭлементыФормы.КоманднаяПанельВыпускТехПроцесс.Кнопки.ПодменюЗаполнить);
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧПоДеревуКнопок(мКнопкиЗаполненияТЧ,СоответствиеТЧ);
	
КонецПроцедуры


Процедура ДействияФормыРедактироватьНомер(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭлементыФормы.Номер);
КонецПроцедуры
// Процедура вызывается при выборе пункта подменю "ПодменюВидаЗадания" командной панели
// формы. Процедура устанавливает значение реквизита ВидЗадания.
//
Процедура ДействияФормыДействиеУстановитьВидЗадания(Кнопка)

	Если Кнопка <> Неопределено Тогда // найти новое значение вида задания
		ВидЗадания = Перечисления.ВидыЗаданийНаПроизводство[Кнопка.Имя];
	КонецЕсли;

	// Отобразить в заголовке формы вид задания.
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(Строка(ВидЗадания), ЭтотОбъект, ЭтаФорма);

	// Установить видимость реквизитов по виду операции.
	УстановитьВидимостьДоступность();

КонецПроцедуры // ДействияФормыДействиеУстановитьВидЗадания()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обновляет параметры в форме подбора, если она открыта.
//
// Параметры:
//  Реквизит - измененный реквизит.
//
// Обработчик уставливается динамически методом "ПодключитьОбработчикИзмененияДанных"
// в процедуре "ОткрытьПодборНоменклатуры" общего модуля "ОбработкаТабличныхЧастей"
Процедура ОбновитьФормуПодбора(Реквизит)

	РаботаСДиалогами.ОбновитьПараметрыИФормуПодбора(ЭтотОбъект, ЭтаФорма, Реквизит);

КонецПроцедуры // ОбновитьФормуПодбора()

// Открывает форму подбора данных в табличные части документа
//
// Параметры:
//  ТабличнаяЧасть    - табличная часть, в которую надо добавлять подобранную позицию номенклатуры;
//
Процедура ДействиеПодбор(ТабличнаяЧасть)

	Перем Команда;

	СписокЗапросов = Новый СписокЗначений();
	СписокЗапросов.Добавить(,"По справочнику");

	Если ТабличнаяЧасть = ВыпускТехПроцесс Тогда
		
		Команда = "ПодборВТабличнуюЧастьВыпускТехПроцесс";
		ИмяТабличнойЧасти = "ВыпускТехПроцесс";
		
	КонецЕсли;

	ПредставлениеДок = Метаданные().Представление();

	СтруктураПараметровПодбора = Новый Структура();
	СтруктураПараметровПодбора.Вставить("Команда"            , Команда);
	СтруктураПараметровПодбора.Вставить("СписокВидовПодбора" , СписокЗапросов);

	// Параметры запросов.
	ВременнаяДатаРасчетов = ?(НачалоДня(Дата) = НачалоДня(ТекущаяДата()), Неопределено, Дата);
	СтруктураПараметровПодбора.Вставить("ДатаРасчетов"           , ВременнаяДатаРасчетов);
	СтруктураПараметровПодбора.Вставить("ЕстьЦена"               , Ложь);
	СтруктураПараметровПодбора.Вставить("ЕстьСерия"              , Ложь);
	СтруктураПараметровПодбора.Вставить("ПодбиратьУслуги"        , Истина);
	СтруктураПараметровПодбора.Вставить("ОтборУслугПоСправочнику", Ложь);
	СтруктураПараметровПодбора.Вставить("Заголовок"      , "Подбор номенклатуры в документ " + ПредставлениеДок + " № " + Номер + " (" + ИмяТабличнойЧасти + ")");

	РаботаСДиалогами.ОткрытьПодборНоменклатуры(ЭтаФорма, СтруктураПараметровПодбора, Метаданные());

КонецПроцедуры // ДействиеПодбор()

// Производит заполнение документа переданными из формы подбора данными.
//
// Параметры:
//  ТабличнаяЧасть    - табличная часть, в которую надо добавлять подобранную позицию номенклатуры;
//  ЗначениеВыбора    - структура, содержащая параметры подбора.
//
Процедура ОбработкаПодбора(ТабличнаяЧасть, ЗначениеВыбора)

	Перем Номенклатура, ЕдиницаИзмерения, Количество, Характеристика;

	// Получим параметры подбора из структуры подбора.
	ЗначениеВыбора.Свойство("Номенклатура", Номенклатура);
	ЗначениеВыбора.Свойство("ЕдиницаИзмерения", ЕдиницаИзмерения);
	ЗначениеВыбора.Свойство("Количество", Количество);
	ЗначениеВыбора.Свойство("Характеристика", Характеристика);

	// Ищем выбранную позицию в таблице подобранной номенклатуры.
	//  Если найдем - увеличим количество; не найдем - добавим новую строку.
	СтруктураОтбора = Новый Структура();

	Если Номенклатура.Услуга Тогда
		
		СтруктураОтбора = Новый Структура("Номенклатура", Номенклатура);
		
	Иначе
		
		СтруктураОтбора = Новый Структура("ЕдиницаИзмерения, ХарактеристикаНоменклатуры", ЕдиницаИзмерения, Характеристика);
		
	КонецЕсли;

	СтрокаТабличнойЧасти = ОбработкаТабличныхЧастей.НайтиСтрокуТабЧасти(ТабличнаяЧасть, СтруктураОтбора);
	
	Если СтрокаТабличнойЧасти = Неопределено Тогда
		
		// Не нашли - добавляем новую строку.
		СтрокаТабличнойЧасти = ТабличнаяЧасть.Добавить();
		СтрокаТабличнойЧасти.Номенклатура = Номенклатура;
		СтрокаТабличнойЧасти.Количество = Количество;
		СтрокаТабличнойЧасти.ЕдиницаИзмерения = ЕдиницаИзмерения;
		СтрокаТабличнойЧасти.Коэффициент = СтрокаТабличнойЧасти.ЕдиницаИзмерения.Коэффициент;
		СтрокаТабличнойЧасти.ХарактеристикаНоменклатуры = Характеристика;

		// Рассчитать реквизиты табличной части.
		ОбработкаТабличныхЧастей.РассчитатьКоличествоМестТабЧасти(СтрокаТабличнойЧасти, ЭтотОбъект);

	Иначе

		// Нашли, увеличиваем количество в первой найденной строке.
		СтрокаТабличнойЧасти.Количество = СтрокаТабличнойЧасти.Количество + Количество;

		// Рассчитать реквизиты табличной части.
		ОбработкаТабличныхЧастей.РассчитатьКоличествоМестТабЧасти(СтрокаТабличнойЧасти, ЭтотОбъект);

	КонецЕсли; // СтрокаТабличнойЧасти <> Неопределено

	Если ТабличнаяЧасть = ВыпускТехПроцесс Тогда
		
		ТабличнаяЧастьИмя = "ВыпускТехПроцесс";
		
	КонецЕсли;

	ЭлементыФормы[ТабличнаяЧастьИмя].ТекущаяСтрока = СтрокаТабличнойЧасти;
	ЭлементыФормы[ТабличнаяЧастьИмя].ТекущаяКолонка = ЭлементыФормы[ТабличнаяЧастьИмя].Колонки["Количество"];

КонецПроцедуры // ОбработкаПодбора()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

// Процедура - устанавливает видимость/доступность элементов формы
//
Процедура УстановитьВидимостьДоступность()
	
	Если ВидЗадания = Перечисления.ВидыЗаданийНаПроизводство.НаТехПроцесс Тогда
		ЭлементыФормы.ВыпускТехПроцесс.Колонки["Период"].Видимость = Истина;
		ЭлементыФормы.ВыпускТехПроцесс.Колонки["Период"].ИзменятьВидимость = Истина;
		ЭлементыФормы.ВыпускТехПроцесс.Колонки["ДатаОкончания"].Видимость = Истина;
		ЭлементыФормы.ВыпускТехПроцесс.Колонки["ДатаОкончания"].ИзменятьВидимость = Истина;
		ЭлементыФормы.ВыпускТехПроцесс.Колонки["РабочийЦентр"].Видимость = Истина;
		ЭлементыФормы.ВыпускТехПроцесс.Колонки["РабочийЦентр"].ИзменятьВидимость = Истина;
		ЭлементыФормы.ВыпускТехПроцесс.Колонки["Смена"].Видимость = Истина;
		ЭлементыФормы.ВыпускТехПроцесс.Колонки["Смена"].ИзменятьВидимость = Истина;
		ЭлементыФормы.ВыпускТехПроцесс.Колонки["ТехОперация"].Видимость = Истина;
		ЭлементыФормы.ВыпускТехПроцесс.Колонки["ТехОперация"].ИзменятьВидимость = Истина;
	Иначе
		ЭлементыФормы.ВыпускТехПроцесс.Колонки["Период"].Видимость = Ложь;
		ЭлементыФормы.ВыпускТехПроцесс.Колонки["Период"].ИзменятьВидимость = Ложь;
		ЭлементыФормы.ВыпускТехПроцесс.Колонки["ДатаОкончания"].Видимость = Ложь;
		ЭлементыФормы.ВыпускТехПроцесс.Колонки["ДатаОкончания"].ИзменятьВидимость = Ложь;
		ЭлементыФормы.ВыпускТехПроцесс.Колонки["РабочийЦентр"].Видимость = Ложь;
		ЭлементыФормы.ВыпускТехПроцесс.Колонки["РабочийЦентр"].ИзменятьВидимость = Ложь;
		ЭлементыФормы.ВыпускТехПроцесс.Колонки["Смена"].Видимость = Ложь;
		ЭлементыФормы.ВыпускТехПроцесс.Колонки["Смена"].ИзменятьВидимость = Ложь;
		ЭлементыФормы.ВыпускТехПроцесс.Колонки["ТехОперация"].Видимость = Ложь;
		ЭлементыФормы.ВыпускТехПроцесс.Колонки["ТехОперация"].ИзменятьВидимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры // ДоступностьЭлементовФормы()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
	Если ЭтоНовый() Тогда

		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);
		
		Если НЕ ЗначениеЗаполнено(ВидЗадания) Тогда
			
				
			ВедениеПланированияПроизводстваПоСменам = Константы.ВедениеПланированияПроизводстваПоСменам.Получить();
				
			
			Если ВедениеПланированияПроизводстваПоСменам Тогда
				
				ВидЗадания = Перечисления.ВидыЗаданийНаПроизводство.НаТехПроцесс;
				
			Иначе
				
				ВидЗадания = Перечисления.ВидыЗаданийНаПроизводство.НаВыпуск;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ДатаЗадания) Тогда
		
			ДатаЗадания = РабочаяДата;
			
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры // ПередОткрытием()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()
	
	
	Если НЕ ЭтоНовый() Тогда 
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	КонецЕсли;
	
	// Отобразить в заголовке формы вид задания.
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(Строка(ВидЗадания), ЭтотОбъект, ЭтаФорма);
	
	// Заполняем подменю, вызываемое нажатием кнопки "ВидЗадания" командной панели 
	// формы, значениями перечисления "Вид операции" данного вида документа.
	// В качестве обработки выбора вида операции назначается процедура 
	// ДействияФормыДействиеУстановитьВидЗадания модуля формы.
	РаботаСДиалогами.УстановитьПодменюВыбораВидаОперации(ЭлементыФормы.ДействияФормы.Кнопки.ПодменюВидаЗадания,
										  ВидЗадания.Метаданные().ЗначенияПеречисления,
										  Новый Действие("ДействияФормыДействиеУстановитьВидЗадания"));
	
	СтруктураКолонокВыпускТехПроцесс = Новый Структура();

	// Установить колонки, видимостью которых пользователь управлять не может.
	СтруктураКолонокВыпускТехПроцесс.Вставить("Номенклатура");
	СтруктураКолонокВыпускТехПроцесс.Вставить("Количество");
	СтруктураКолонокВыпускТехПроцесс.Вставить("ТехнологическаяОперация");

	// Установить ограничение - изменять видимость колонок для ТЧ ВыпускТехПроцесс
	ОбработкаТабличныхЧастей.УстановитьИзменятьВидимостьКолонокТабЧасти(ЭлементыФормы.ВыпускТехПроцесс.Колонки, СтруктураКолонокВыпускТехПроцесс);

	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента = Дата;

	УстановитьВидимостьДоступность();
	
	РаботаСДиалогами.УстановитьВидимостьХарактеристикиНоменклатуры(мКолонкиВыпускТехПроцесс);
	РаботаСДиалогами.УстановитьВидимостьПроекта(ЭтотОбъект, ЭлементыФормы, "ВыпускТехПроцесс.Проект");
	
	// Установить активный реквизит.
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);
	
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю1);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю1,ЭлементыФормы.Номер);
	
	// Создать кнопки печати
	ФормированиеПечатныхФорм.СоздатьКнопкиПечати(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "ОбработкаВыбора" формы.
//
Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Перем Команда;

	Если ТипЗнч(ЗначениеВыбора) = Тип("Структура") Тогда
		ЗначениеВыбора.Свойство("Команда", Команда);

		Если Команда = "ПодборВТабличнуюЧастьВыпускТехПроцесс" Тогда
			ОбработкаПодбора(ВыпускТехПроцесс, ЗначениеВыбора);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаВыбора()

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()

	// Отобразить в заголовке формы вид задания.
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(Строка(ВидЗадания), ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭлементыФормы.Номер);
	
КонецПроцедуры // ПослеЗаписи()

// Процедура - обработчик события "ОбновлениеОтображения" формы.
//
Процедура ОбновлениеОтображения()
	
	// Подсчитаем количество строк в табличных частях.
	Для каждого СтраницаПанели из ЭлементыФормы.ОсновнаяПанель.Страницы Цикл

		Если СтраницаПанели.Имя = "ВыпускТехПроцесс" Тогда
			СтраницаПанели.Заголовок = "Выпуск/Тех. процесс (" + ДокументОбъект.ВыпускТехПроцесс.Количество() + " поз.)";
		КонецЕсли;

	КонецЦикла;
	
КонецПроцедуры // ОбновлениеОтображения()

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТЧ ВЫПУСКТЕХПРОЦЕСС

// Процедура - обработчик события "ПриИзменении" поля ввода номенклатуры табличной части "ВыпускТехПроцесс"
//
Процедура ВыпускТехПроцессНоменклатураПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = ЭлементыФормы.ВыпускТехПроцесс.ТекущиеДанные;

	// Выполнить общие действия для всех документов при изменении номенклатуры.
	ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(СтрокаТабличнойЧасти, ЭтотОбъект);
	
	СтрокаТабличнойЧасти.ЕдиницаИзмерения = СтрокаТабличнойЧасти.Номенклатура.ЕдиницаХраненияОстатков;
	СтрокаТабличнойЧасти.Коэффициент      = СтрокаТабличнойЧасти.ЕдиницаИзмерения.Коэффициент;
	
КонецПроцедуры // ВыпускТехПроцессНоменклатураПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля ввода ЕдиницаИзмерения табличной части "ВыпускТехПроцесс"
//
Процедура ВыпускТехПроцессЕдиницаИзмеренияПриИзменении(Элемент)
	
	// Выполнить общие действия для всех документов при изменении Единица.
	ОбработкаТабличныхЧастей.ПриИзмененииЕдиницыТабЧасти(ЭлементыФормы.ВыпускТехПроцесс.ТекущиеДанные, ЭтотОбъект);
	
КонецПроцедуры // ВыпускТехПроцессЕдиницаИзмеренияПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля ввода количества
// в строке табличной части "ВыпускТехПроцесс".
//
Процедура ВыпускТехПроцессКоличествоПриИзменении(Элемент)
	
	// Рассчитать реквизиты табличной части.
	ОбработкаТабличныхЧастей.РассчитатьКоличествоМестТабЧасти(ЭлементыФормы.ВыпускТехПроцесс.ТекущиеДанные, ДокументОбъект);
	
КонецПроцедуры // ВыпускТехПроцессКоличествоПриИзменении()

// Процедура - обработчик события НачалоВыбора поля ввода Спецификация
// в табличной части "ВыпускТехПроцесс".
//
Процедура ВыпускТехПроцессСпецификацияНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	РаботаСДиалогами.НачалоВыбораЗначенияСпецификации(ЭлементыФормы.ВыпускТехПроцесс.ТекущиеДанные.Номенклатура, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры // ВыпускТехПроцессСпецификацияНачалоВыбора()

// Процедура - обработчик события "ПриИзменении" поля ввода конечной продукции
// в строке табличной части "ВыпускТехПроцесс".
//
Процедура ВыпускТехПроцессКонечнаяПродукцияПриИзменении(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ВыпускТехПроцесс.ТекущиеДанные;
	
	Если ТипЗнч(ТекущаяСтрока.КонечнаяПродукция) = Тип("СправочникСсылка.ОсновныеСредства")
	   И ТипЗнч(ТекущаяСтрока.Заказ) <> Тип("ДокументСсылка.ЗаказНаОбслуживаниеОС") Тогда
	   
		ТекущаяСтрока.Заказ = Документы.ЗаказНаОбслуживаниеОС.ПустаяСсылка();
		
	ИначеЕсли ТипЗнч(ТекущаяСтрока.КонечнаяПродукция) = Тип("СправочникСсылка.Номенклатура")
		    И ТипЗнч(ТекущаяСтрока.Заказ) <> Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			   
		ТекущаяСтрока.Заказ = Документы.ЗаказПокупателя.ПустаяСсылка();
		
	КонецЕсли;
	
КонецПроцедуры // ВыпускТехПроцессКонечнаяПродукцияПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля ввода заказа
// в строке табличной части "ВыпускТехПроцесс".
//
Процедура ВыпускТехПроцессЗаказПриИзменении(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ВыпускТехПроцесс.ТекущиеДанные;
	
	Если ТипЗнч(ТекущаяСтрока.Заказ) = Тип("ДокументСсылка.ЗаказНаОбслуживаниеОС")
	   И ТипЗнч(ТекущаяСтрока.КонечнаяПродукция) <> Тип("СправочникСсылка.ОсновныеСредства") Тогда
	   
		ТекущаяСтрока.КонечнаяПродукция = Справочники.ОсновныеСредства.ПустаяСсылка();
		
	ИначеЕсли ТипЗнч(ТекущаяСтрока.Заказ) = Тип("ДокументСсылка.ЗаказПокупателя")
	   И ТипЗнч(ТекущаяСтрока.КонечнаяПродукция) <> Тип("СправочникСсылка.Номенклатура") Тогда
			
		ТекущаяСтрока.КонечнаяПродукция = Справочники.Номенклатура.ПустаяСсылка();
		
	КонецЕсли;

КонецПроцедуры // ВыпускТехПроцессЗаказПриИзменении()

// Процедура - обработчик события "НачалоВыбора" поля ввода заказ
//
Процедура ВыпускТехПроцессЗаказНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ТекущаяСтрока = ЭлементыФормы.ВыпускТехПроцесс.ТекущиеДанные;
	
	Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.КонечнаяПродукция)
	 ИЛИ ТипЗнч(ТекущаяСтрока.КонечнаяПродукция) <> Тип("СправочникСсылка.ОсновныеСредства")
	 ИЛИ ТекущаяСтрока.Заказ = Неопределено Тогда
	 
	 	МассивИсключаемыхТипов = Новый Массив;
		Если ЗначениеЗаполнено(ТекущаяСтрока.КонечнаяПродукция) Тогда
			
			МассивИсключаемыхТипов.Добавить(Тип("ДокументСсылка.ЗаказНаОбслуживаниеОС"));
			
		КонецЕсли;
	 	
		УправлениеЗаказами.НачалоВыбораДокументаЗаказа(ЭтотОбъект, ЭтаФорма, Элемент, СтандартнаяОбработка, Новый Структура(), "ВыпускТехПроцесс", Новый Структура("ИсключаемыеТипы", МассивИсключаемыхТипов));
		
	КонецЕсли;
	
КонецПроцедуры // ВыпускТехПроцессЗаказНачалоВыбора()

// Процедура вызывается при нажатии кнопки "Подбор" командной панели
// табличного поля "ВыпускТехПроцесс", вызывает сервисный механизм для
// подбора номеклатуры в табличную часть "ВыпускТехПроцесс".
//
Процедура КоманднаяПанельВыпускТехПроцессПодбор(Кнопка)
	
	ДействиеПодбор(ВыпускТехПроцесс);

КонецПроцедуры // КоманднаяПанельВыпускТехПроцессПодбор()

Процедура КоманднаяПанельВыпускТехПроцессЗаполнить(Кнопка)
	
	ЗаполнитьТаблицуВыпускТехПроцесс();
	
КонецПроцедуры // КоманднаяПанельВыпускТехПроцессЗаполнить()

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
	
КонецПроцедуры // ДействияФормыСтруктураПодчиненностиДокумента()

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать".
// Открывает форму выбора печатных форм объекта.
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ОткрытьФормуВыбораПечатныхФормОбъекта(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ОсновныеДействияФормыПечать()

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)

	УниверсальныеМеханизмы.НапечататьДокументПоУмолчанию(ЭтотОбъект);

КонецПроцедуры

Процедура ВыпускТехПроцессПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	// Вставить содержимое обработчика.
	РаботаСДиалогами.ПоказатьКодАртикул(ЭлементыФормы.ВыпускТехПроцесс.Колонки, ОформлениеСтроки.Ячейки, ДанныеСтроки.Номенклатура);
КонецПроцедуры

мКолонкиВыпускТехПроцесс = ЭлементыФормы.ВыпускТехПроцесс.Колонки;