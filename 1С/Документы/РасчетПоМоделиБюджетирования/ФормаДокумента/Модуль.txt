Перем ФормаВводаФормулыКоличество;
Перем ФормаВводаФормулыСумма;
Перем ФорматПериод; // Хранит форматную строку для вывода периода;

Перем ТекущийИндекс;

Процедура УправлениеДоступностьюРеквизитов()

	Если ЭлементыФормы.ВидИзмененияПоЦФО.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета 
		ИЛИ ЭлементыФормы.ВидИзмененияПоЦФО.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПустаяСсылка()  Тогда
		ЭлементыФормы.ЗначениеИзмененияПоЦФО.Доступность=Ложь;
	Иначе
		ЭлементыФормы.ЗначениеИзмененияПоЦФО.Доступность=Истина;
	КонецЕсли;
	
	Если ЭлементыФормы.ВидИзмененияПоПроектам.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета 
		ИЛИ ЭлементыФормы.ВидИзмененияПоПроектам.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПустаяСсылка()  Тогда
		ЭлементыФормы.ЗначениеИзмененияПоПроектам.Доступность=Ложь;
	Иначе
		ЭлементыФормы.ЗначениеИзмененияПоПроектам.Доступность=Истина;
	КонецЕсли;
		
	Если ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущаяСтрока = Неопределено Тогда
		
		Если ОборотыПоСтатьямБюджетов.Количество()>0 Тогда
			ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущаяСтрока=ОборотыПоСтатьямБюджетов[0];
		Иначе
			Индекс=-1;
		КонецЕсли
		
	Иначе
		Индекс=ЭлементыФормы.ОборотыПоСтатьямБюджетов.Значение.Индекс(ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущаяСтрока);
	КонецЕсли;
	
	Если Индекс+1=ОборотыПоСтатьямБюджетов.Количество() Тогда
		ЭлементыФормы.КоманднаяПанельСтрока.Кнопки.СледующаяСтрока.Доступность=Ложь;
		Если ОборотыПоСтатьямБюджетов.Количество()>1 Тогда
			ЭлементыФормы.КоманднаяПанельСтрока.Кнопки.ПредыдущаяСтрока.Доступность=Истина;
		Иначе
			ЭлементыФормы.КоманднаяПанельСтрока.Кнопки.ПредыдущаяСтрока.Доступность=Ложь;
		КонецЕсли;
	ИначеЕсли Индекс=0 Тогда
		Если ОборотыПоСтатьямБюджетов.Количество()>1 Тогда
			ЭлементыФормы.КоманднаяПанельСтрока.Кнопки.СледующаяСтрока.Доступность=Истина;
		Иначе
			ЭлементыФормы.КоманднаяПанельСтрока.Кнопки.СледующаяСтрока.Доступность=Ложь;
		КонецЕсли;
	    ЭлементыФормы.КоманднаяПанельСтрока.Кнопки.ПредыдущаяСтрока.Доступность=Ложь;
	ИначеЕсли Индекс=-1 Тогда
		ЭлементыФормы.КоманднаяПанельСтрока.Кнопки.СледующаяСтрока.Доступность=Ложь;
	    ЭлементыФормы.КоманднаяПанельСтрока.Кнопки.ПредыдущаяСтрока.Доступность=Ложь;
	Иначе
		ЭлементыФормы.КоманднаяПанельСтрока.Кнопки.СледующаяСтрока.Доступность=Истина;
	    ЭлементыФормы.КоманднаяПанельСтрока.Кнопки.ПредыдущаяСтрока.Доступность=Истина;
	КонецЕсли;
	
	Если ТипЗнч(ОсновнойИсточникДанных)=Тип("СправочникСсылка.ИсточникиДанныхДляРасчетовБюджетирования") 
		И ОсновнойИсточникДанных.ПроизвольныйЗапрос Тогда
		
		ЭлементыФормы.ДополнительныеИсточникиДанных.Доступность=Ложь;
		
	Иначе
		
		ЭлементыФормы.ДополнительныеИсточникиДанных.Доступность=Истина;
		
	КонецЕсли;
	
	СтатьяОборотов=ЭлементыФормы.СтатьяОборотов.Значение;
	
	Если НЕ СтатьяОборотов.РазделениеПоНоменклатуре Тогда
		
		ЭлементыФормы.ВидИзмененияПоНоменклатуре.Доступность=Ложь;
		ЭлементыФормы.ЗначениеИзмененияПоНоменклатуре.Доступность=Ложь;
		
	Иначе
		
		ЭлементыФормы.ВидИзмененияПоНоменклатуре.Доступность=Истина;
		
		Если ЭлементыФормы.ВидИзмененияПоНоменклатуре.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета
			ИЛИ ЭлементыФормы.ВидИзмененияПоНоменклатуре.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПустаяСсылка() Тогда
			ЭлементыФормы.ЗначениеИзмененияПоНоменклатуре.Доступность=Ложь;
		Иначе
			ЭлементыФормы.ЗначениеИзмененияПоНоменклатуре.Доступность=Истина;
		КонецЕсли;
		
	КонецЕсли; 
	
	Если НЕ СтатьяОборотов.РазделениеПоКонтрагентам Тогда
		
		ЭлементыФормы.ВидИзмененияПоКонтрагентам.Доступность=Ложь;
		ЭлементыФормы.ЗначениеИзмененияПоКонтрагентам.Доступность=Ложь;
		
	Иначе
		
		ЭлементыФормы.ВидИзмененияПоКонтрагентам.Доступность=Истина;
		
		Если ЭлементыФормы.ВидИзмененияПоКонтрагентам.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета
			ИЛИ ЭлементыФормы.ВидИзмененияПоКонтрагентам.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПустаяСсылка()  Тогда
			ЭлементыФормы.ЗначениеИзмененияПоКонтрагентам.Доступность=Ложь;
		Иначе
			ЭлементыФормы.ЗначениеИзмененияПоКонтрагентам.Доступность=Истина;
		КонецЕсли;
		
	КонецЕсли;
		
	Если НЕ СтатьяОборотов.УчетПоСумме Тогда
		
		ЭлементыФормы.ВидИзмененияПоВалюте.Доступность=Ложь;
		ЭлементыФормы.ВидИзмененияПоВалюте.АвтоОтметкаНезаполненного=Ложь;
		ЭлементыФормы.ВидИзмененияПоВалюте.ОтметкаНезаполненного=Ложь;
		
		ЭлементыФормы.ЗначениеИзмененияПоВалюте.Доступность=Ложь;
		
	Иначе
		
		ЭлементыФормы.ВидИзмененияПоВалюте.Доступность=Истина;
		
		ЭлементыФормы.ВидИзмененияПоВалюте.АвтоОтметкаНезаполненного=Истина;
		ЭлементыФормы.ВидИзмененияПоВалюте.ОтметкаНезаполненного=НЕ ЗначениеЗаполнено(ЭлементыФормы.ВидИзмененияПоВалюте.Значение);
		
		Если ЭлементыФормы.ВидИзмененияПоВалюте.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета
			ИЛИ ЭлементыФормы.ВидИзмененияПоВалюте.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПустаяСсылка() Тогда
			ЭлементыФормы.ЗначениеИзмененияПоВалюте.Доступность=Ложь;
		Иначе
			ЭлементыФормы.ЗначениеИзмененияПоВалюте.Доступность=Истина;
		КонецЕсли;
		
	КонецЕсли; 


КонецПроцедуры
 

Процедура ФорматПериода()
	
	Периодичность=Сценарий.Периодичность;
	
	Если Периодичность = Перечисления.Периодичность.Год Тогда
		ФорматПериод = "ДФ = ""гггг """"г.""""""";
	ИначеЕсли Периодичность = Перечисления.Периодичность.Квартал Тогда
		ФорматПериод = "ДФ = ""к"""" квартал"""" гггг """"г.""""""";
	ИначеЕсли Периодичность = Перечисления.Периодичность.Месяц Тогда
		ФорматПериод = "ДФ = ""ММММ гггг """"г.""""""";
	ИначеЕсли Периодичность = Перечисления.Периодичность.Неделя Тогда
		ФорматПериод = "ДФ = """"""Неделя с"""" дд.ММ.гггг """"""";
	ИначеЕсли Периодичность = Перечисления.Периодичность.День Тогда
		ФорматПериод = "ДФ = ""дд.ММ.гггг """"г.""""""";
	Иначе
		ФорматПериод = "";
	КонецЕсли;
	
КонецПроцедуры //

// Удаляет ведущие нули из номера источника данных
// 
Функция УдалитьВедущиеНули(Знач ИсходныйНомер)
	
	ИсходныйНомер=СокрЛП(ИсходныйНомер);
	
	Пока Лев(ИсходныйНомер, 1)="0" Цикл
		ИсходныйНомер=Сред(ИсходныйНомер, 2);
	КонецЦикла;
	
	Возврат ИсходныйНомер;
	
КонецФункции // УдалитьВедущиеНули()

// Обновляет списки выбора видов распределения по измерениям
// в зависимости от источников данных
//
Процедура ОбновитьСпискиВыбора()

	Если НЕ ЗначениеЗаполнено(ОсновнойИсточникДанных) Тогда
		
		СписокВыбора=Новый СписокЗначений;
		СписокВыбора.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ФиксированноеЗначение);
		
		ЭлементыФормы.ВидИзмененияПоВалюте.СписокВыбора=СписокВыбора.Скопировать();
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.Колонки.ВидИзмененияПоВалюте.ЭлементУправления.СписокВыбора=СписокВыбора.Скопировать();
		
		СписокВыбора.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Распределение);
		СписокВыбора.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Умножение);
		
		ЭлементыФормы.ВидИзмененияПоНоменклатуре.СписокВыбора=СписокВыбора.Скопировать();
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.Колонки.ВидИзмененияПоНоменклатуре.ЭлементУправления.СписокВыбора=СписокВыбора.Скопировать();
			
		ЭлементыФормы.ВидИзмененияПоКонтрагентам.СписокВыбора=СписокВыбора.Скопировать();
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.Колонки.ВидИзмененияПоКонтрагентам.ЭлементУправления.СписокВыбора=СписокВыбора.Скопировать();
			
		ЭлементыФормы.ВидИзмененияПоЦФО.СписокВыбора=СписокВыбора;
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.Колонки.ВидИзмененияПоЦФО.ЭлементУправления.СписокВыбора=СписокВыбора;
		
		ЭлементыФормы.ВидИзмененияПоПроектам.СписокВыбора=СписокВыбора;
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.Колонки.ВидИзмененияПоПроектам.ЭлементУправления.СписокВыбора=СписокВыбора;
	
	ИначеЕсли ТипЗнч(ОсновнойИсточникДанных)=Тип("СправочникСсылка.ИсточникиДанныхДляРасчетовБюджетирования") Тогда
						
		// Список выбора для ЦФО	 
		СписокВыбораВидЦФО=Новый СписокЗначений;
		СписокВыбораВидЦФО.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ФиксированноеЗначение);
		
		Если НЕ ОсновнойИсточникДанных.ИзмеренияИсточника.Найти(Перечисления.ИзмеренияБюджетирования.ЦФО,
																"ИзмерениеБюджетирования")=Неопределено Тогда
			
			СписокВыбораВидЦФО.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета);
			
		КонецЕсли;
		
		СписокВыбораВидЦФО.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Распределение);
		СписокВыбораВидЦФО.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Умножение);
		
		ЭлементыФормы.ВидИзмененияПоЦФО.СписокВыбора=СписокВыбораВидЦФО;
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.Колонки.ВидИзмененияПоЦФО.ЭлементУправления.СписокВыбора=СписокВыбораВидЦФО;
		
		// Список выбора для проектов	 
		СписокВыбораВидПроекты=Новый СписокЗначений;
		СписокВыбораВидПроекты.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ФиксированноеЗначение);
		
		Если НЕ ОсновнойИсточникДанных.ИзмеренияИсточника.Найти(Перечисления.ИзмеренияБюджетирования.Проект,
																"ИзмерениеБюджетирования")=Неопределено Тогда
			
			СписокВыбораВидПроекты.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета);
			
		КонецЕсли;
		
		СписокВыбораВидПроекты.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Распределение);
		СписокВыбораВидПроекты.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Умножение);
		
		ЭлементыФормы.ВидИзмененияПоПроектам.СписокВыбора=СписокВыбораВидПроекты;
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.Колонки.ВидИзмененияПоПроектам.ЭлементУправления.СписокВыбора=СписокВыбораВидПроекты;
		
		// Список выбора для контрагентов	 
		СписокВыбораВидКонтрагенты=Новый СписокЗначений;
		СписокВыбораВидКонтрагенты.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ФиксированноеЗначение);
		
		Если НЕ ОсновнойИсточникДанных.ИзмеренияИсточника.Найти(Перечисления.ИзмеренияБюджетирования.Контрагент,
																"ИзмерениеБюджетирования")=Неопределено Тогда
			
			СписокВыбораВидКонтрагенты.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета);
			
		КонецЕсли;
		
		СписокВыбораВидКонтрагенты.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Распределение);
		СписокВыбораВидКонтрагенты.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Умножение);
				
		ЭлементыФормы.ВидИзмененияПоКонтрагентам.СписокВыбора=СписокВыбораВидКонтрагенты;
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.Колонки.ВидИзмененияПоКонтрагентам.ЭлементУправления.СписокВыбора=СписокВыбораВидКонтрагенты;
		
		// Список выбора для номенклатуры 
		СписокВыбораВидНоменклатура=Новый СписокЗначений;
		СписокВыбораВидНоменклатура.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ФиксированноеЗначение);
		
		Если НЕ ОсновнойИсточникДанных.ИзмеренияИсточника.Найти(Перечисления.ИзмеренияБюджетирования.Номенклатура,
																"ИзмерениеБюджетирования")=Неопределено Тогда
			
			СписокВыбораВидНоменклатура.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета);
			
		КонецЕсли;
		
		СписокВыбораВидНоменклатура.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Распределение);
		СписокВыбораВидНоменклатура.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Умножение);
				
		ЭлементыФормы.ВидИзмененияПоНоменклатуре.СписокВыбора=СписокВыбораВидНоменклатура;
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.Колонки.ВидИзмененияПоНоменклатуре.ЭлементУправления.СписокВыбора=СписокВыбораВидНоменклатура;

		
		// Список выбора для валюты	 
		СписокВыбораВидВалюты=Новый СписокЗначений;
		СписокВыбораВидВалюты.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ФиксированноеЗначение);
		
		Если НЕ ОсновнойИсточникДанных.ИзмеренияИсточника.Найти(Перечисления.ИзмеренияБюджетирования.Валюта,
																"ИзмерениеБюджетирования")=Неопределено Тогда
			
			СписокВыбораВидВалюты.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета);
			
		КонецЕсли;
		
		ЭлементыФормы.ВидИзмененияПоВалюте.СписокВыбора=СписокВыбораВидВалюты;
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.Колонки.ВидИзмененияПоВалюте.ЭлементУправления.СписокВыбора=СписокВыбораВидВалюты;
		
	ИначеЕсли ТипЗнч(ОсновнойИсточникДанных)=Тип("ДокументСсылка.БюджетнаяОперация") Тогда
		
		// Список выбора полный	 
		СписокВыбораПолный=Новый СписокЗначений;
		СписокВыбораПолный.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ФиксированноеЗначение);
		СписокВыбораПолный.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета);
		СписокВыбораПолный.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Распределение);
		СписокВыбораПолный.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Умножение);
				
		ЭлементыФормы.ВидИзмененияПоЦФО.СписокВыбора=СписокВыбораПолный;
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.Колонки.ВидИзмененияПоЦФО.ЭлементУправления.СписокВыбора=СписокВыбораПолный;
		
		ЭлементыФормы.ВидИзмененияПоПроектам.СписокВыбора=СписокВыбораПолный;
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.Колонки.ВидИзмененияПоПроектам.ЭлементУправления.СписокВыбора=СписокВыбораПолный;
		
		// Список выбора для контрагентов и номенклатуры	 
		СписокВыбораКонтрагенты=Новый СписокЗначений;
		СписокВыбораКонтрагенты.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ФиксированноеЗначение);
		СписокВыбораКонтрагенты.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Распределение);
		СписокВыбораКонтрагенты.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Умножение);
		
		Если ОсновнойИсточникДанных.СтатьяОборотов.РазделениеПоКонтрагентам Тогда
			
			СписокВыбораКонтрагенты.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета);
			
		КонецЕсли;
	
		ЭлементыФормы.ВидИзмененияПоКонтрагентам.СписокВыбора=СписокВыбораКонтрагенты;
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.Колонки.ВидИзмененияПоКонтрагентам.ЭлементУправления.СписокВыбора=СписокВыбораКонтрагенты;
		
		СписокВыбораНоменклатура=Новый СписокЗначений;
		СписокВыбораНоменклатура.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ФиксированноеЗначение);
		СписокВыбораНоменклатура.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Распределение);
		СписокВыбораНоменклатура.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Умножение);
		
		Если ОсновнойИсточникДанных.СтатьяОборотов.РазделениеПоНоменклатуре Тогда
			
			СписокВыбораНоменклатура.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета);
			
		КонецЕсли;
			
		ЭлементыФормы.ВидИзмененияПоНоменклатуре.СписокВыбора=СписокВыбораНоменклатура;
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.Колонки.ВидИзмененияПоНоменклатуре.ЭлементУправления.СписокВыбора=СписокВыбораНоменклатура;
		
		СписокВыбораВалюты=Новый СписокЗначений;
		СписокВыбораВалюты.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета);
		СписокВыбораВалюты.Добавить(Перечисления.ВидыИзмененияПлановПоИзмерениям.ФиксированноеЗначение);
		
		ЭлементыФормы.ВидИзмененияПоВалюте.СписокВыбора=СписокВыбораВалюты;
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.Колонки.ВидИзмененияПоВалюте.ЭлементУправления.СписокВыбора=СписокВыбораВалюты;
			
	КонецЕсли;
	
КонецПроцедуры // ОбновитьСпискиВыбора()

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

Процедура КоманднаяПанельСтрокаПредыдущаяСтрока(Кнопка)
	
	Если ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущаяСтрока=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НовыйИндекс=ЭлементыФормы.ОборотыПоСтатьямБюджетов.Значение.Индекс(ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущаяСтрока)-1;
			
	Если НовыйИндекс>=0 Тогда
		
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущаяСтрока=ЭлементыФормы.ОборотыПоСтатьямБюджетов.Значение.Получить(НовыйИндекс);
		
	КонецЕсли;
	
	Если НовыйИндекс=0 Тогда
		
		ЭлементыФормы.КоманднаяПанельСтрока.Кнопки.ПредыдущаяСтрока.Доступность=Ложь;		
		
	КонецЕсли;
	
	Если НовыйИндекс = ОборотыПоСтатьямБюджетов.Количество()-1 Тогда
		
		ЭлементыФормы.КоманднаяПанельСтрока.Кнопки.СледующаяСтрока.Доступность=Ложь;
		
	КонецЕсли;

КонецПроцедуры

Процедура КоманднаяПанельСтрокаСледующаяСтрока(Кнопка)
	
	Если ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущаяСтрока=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НовыйИндекс=ЭлементыФормы.ОборотыПоСтатьямБюджетов.Значение.Индекс(ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущаяСтрока)+1;
	
	Если НовыйИндекс <= ОборотыПоСтатьямБюджетов.Количество()-1 Тогда
		
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущаяСтрока=ЭлементыФормы.ОборотыПоСтатьямБюджетов.Значение.Получить(НовыйИндекс);
		
	КонецЕсли;
	
	Если НовыйИндекс=0 Тогда
		
		ЭлементыФормы.КоманднаяПанельСтрока.Кнопки.ПредыдущаяСтрока.Доступность=Ложь;
		
	КонецЕсли;
	
	Если НовыйИндекс=ОборотыПоСтатьямБюджетов.Количество()-1 Тогда
		
		ЭлементыФормы.КоманднаяПанельСтрока.Кнопки.СледующаяСтрока.Доступность=Ложь;
		
	КонецЕсли;

	
КонецПроцедуры

Процедура ФормулаКоличествоНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Форма = ПолучитьФорму("ФормаВводаФормулы", ЭтаФорма, "дляФормаВводаФормулы");

	Если Форма.Открыта() Тогда
		Форма.Активизировать();
		Если Вопрос("Предыдущая операция ввода формулы не завершена.
			|Завершить?",РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да)=КодВозвратаДиалога.Да Тогда
			Форма.Закрыть();
		КонецЕсли;
	КонецЕсли;	

	СтруктураИсходная=Новый Структура;

	СтруктураИсходная.Вставить("ТаблицаСтрок", Показатели.Выгрузить());
	СтруктураИсходная.Вставить("Текст",ЭлементыФормы.ФормулаКоличество.Значение);

	// Передача параметров в форму
	Форма.НачальноеЗначениеВыбора = СтруктураИсходная;
	Форма.РежимВыбора = Истина;
	
	ФормаВводаФормулыКоличество=Форма;
	
	Форма.Открыть();
	
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если Источник=ФормаВводаФормулыКоличество Тогда
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ФормулаКоличество=ЗначениеВыбора.Текст;
	ИначеЕсли Источник=ФормаВводаФормулыСумма Тогда
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ФормулаСумма=ЗначениеВыбора.Текст;
	КонецЕсли;
		
КонецПроцедуры

Процедура ОборотыПоСтатьямБюджетовФормулаКоличествоНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Форма = ПолучитьФорму("ФормаВводаФормулы", ЭтаФорма, "дляФормаВводаФормулы");

	Если Форма.Открыта() Тогда
		Форма.Активизировать();
		Если Вопрос("Предыдущая операция ввода формулы не завершена.
			|Завершить?",РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да)=КодВозвратаДиалога.Да Тогда
			Форма.Закрыть();
		КонецЕсли;
	КонецЕсли;	

	СтруктураИсходная=Новый Структура;

	СтруктураИсходная.Вставить("ТаблицаСтрок", Показатели.Выгрузить());
	СтруктураИсходная.Вставить("Текст",ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ФормулаКоличество);

	// Передача параметров в форму
	Форма.НачальноеЗначениеВыбора = СтруктураИсходная;
	Форма.РежимВыбора = Истина;
	
	ФормаВводаФормулыКоличество=Форма;
	
	Форма.Открыть();
		
КонецПроцедуры

Процедура ФормулаСуммаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Форма = ПолучитьФорму("ФормаВводаФормулы", ЭтаФорма, "дляФормаВводаФормулы");

	Если Форма.Открыта() Тогда
		Форма.Активизировать();
		Если Вопрос("Предыдущая операция ввода формулы не завершена.
			|Завершить?",РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да)=КодВозвратаДиалога.Да Тогда
			Форма.Закрыть();
		КонецЕсли;
	КонецЕсли;	

	СтруктураИсходная=Новый Структура;

	СтруктураИсходная.Вставить("ТаблицаСтрок", Показатели.Выгрузить());
	СтруктураИсходная.Вставить("Текст",ЭлементыФормы.ФормулаСумма.Значение);

	// Передача параметров в форму
	Форма.НачальноеЗначениеВыбора = СтруктураИсходная;
	Форма.РежимВыбора = Истина;
	
	ФормаВводаФормулыСумма=Форма;
	
	Форма.Открыть();
		
КонецПроцедуры

Процедура ОборотыПоСтатьямБюджетовФормулаСуммаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Форма = ПолучитьФорму("ФормаВводаФормулы", ЭтаФорма, "дляФормаВводаФормулы");

	Если Форма.Открыта() Тогда
		Форма.Активизировать();
		Если Вопрос("Предыдущая операция ввода формулы не завершена.
			|Завершить?",РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да)=КодВозвратаДиалога.Да Тогда
			Форма.Закрыть();
		КонецЕсли;
	КонецЕсли;	

	СтруктураИсходная=Новый Структура;

	СтруктураИсходная.Вставить("ТаблицаСтрок", Показатели.Выгрузить());
	СтруктураИсходная.Вставить("Текст",ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ФормулаСумма);

	// Передача параметров в форму
	Форма.НачальноеЗначениеВыбора = СтруктураИсходная;
	Форма.РежимВыбора = Истина;
	
	ФормаВводаФормулыСумма=Форма;
	
	Форма.Открыть();
		
КонецПроцедуры


Процедура ДействияФормыРедактироватьНомер(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
КонецПроцедуры
Процедура ДействияФормыРасчет(Кнопка)
	
	Если Ответственный.Пустая() Тогда
		Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
	КонецЕсли;
	
	Если Состояние.Пустая() Тогда
		Состояние=Перечисления.СостоянияОбъектов.Подготовлен;
	КонецЕсли;
	
	ВыполнитьРасчет();	
	
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

Процедура ДатаРасчетаПриИзменении(Элемент)
	
	Элемент.Значение=ОбщегоНазначения.ДатаНачалаПериода(Элемент.Значение,Сценарий.Периодичность);
	
КонецПроцедуры

Процедура ДатаРасчетаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;

	Элемент.Значение=ОбщегоНазначения.ДобавитьИнтервал(Элемент.Значение,Сценарий.Периодичность,Направление);
	
КонецПроцедуры

Процедура СценарийПриИзменении(Элемент)
	
	ДатаРасчета=ОбщегоНазначения.ДатаНачалаПериода(ДатаРасчета,Сценарий.Периодичность);
	ФорматПериода();
	
	Детализация=Сценарий.ДетализацияПланирования;
	
	Для Каждого Строка Из ОборотыПоСтатьямБюджетов Цикл
		
		Если ТипЗнч(Строка.ЗначениеИзмененияПоНоменклатуре)=Тип("СправочникСсылка.Номенклатура") 
			И Детализация=Перечисления.ДетализацияПланирования.НоменклатурныеГруппы Тогда
			
			Строка.ЗначениеИзмененияПоНоменклатуре=Справочники.НоменклатурныеГруппы.ПустаяСсылка();
			
		ИначеЕсли ТипЗнч(Строка.ЗначениеИзмененияПоНоменклатуре)=Тип("СправочникСсылка.НоменклатурныеГруппы") 
			И Детализация=Перечисления.ДетализацияПланирования.Номенклатура Тогда
			
			Строка.ЗначениеИзмененияПоНоменклатуре=Справочники.Номенклатура.ПустаяСсылка();
			
		КонецЕсли;
		
	КонецЦикла;
	
	УправлениеДоступностьюРеквизитов();
						
КонецПроцедуры

Процедура ОборотыПоСтатьямБюджетовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
		
	Если ДанныеСтроки.ВидИзмененияПоЦФО=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета 
		ИЛИ ДанныеСтроки.ВидИзмененияПоЦФО=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПустаяСсылка()  Тогда
		ОформлениеСтроки.Ячейки.ЗначениеИзмененияПоЦФО.ТолькоПросмотр=Истина;
	Иначе
		ОформлениеСтроки.Ячейки.ЗначениеИзмененияПоЦФО.ТолькоПросмотр=Ложь;
	КонецЕсли;
	
	Если ДанныеСтроки.ВидИзмененияПоПроектам=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета 
		ИЛИ ДанныеСтроки.ВидИзмененияПоПроектам=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПустаяСсылка()  Тогда
		ОформлениеСтроки.Ячейки.ЗначениеИзмененияПоПроектам.ТолькоПросмотр=Истина;
	Иначе
		ОформлениеСтроки.Ячейки.ЗначениеИзмененияПоПроектам.ТолькоПросмотр=Ложь;
	КонецЕсли;
			
	СтатьяОборотов=ДанныеСтроки.СтатьяОборотов;
	
	Если НЕ СтатьяОборотов.РазделениеПоНоменклатуре Тогда
		
		ОформлениеСтроки.Ячейки.ВидИзмененияПоНоменклатуре.ТолькоПросмотр=Истина;
		ОформлениеСтроки.Ячейки.ЗначениеИзмененияПоНоменклатуре.ТолькоПросмотр=Истина;
		
	Иначе
		
		ОформлениеСтроки.Ячейки.ВидИзмененияПоНоменклатуре.ТолькоПросмотр=Ложь;
		
		Если ДанныеСтроки.ВидИзмененияПоНоменклатуре=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета
			ИЛИ ДанныеСтроки.ВидИзмененияПоНоменклатуре=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПустаяСсылка() Тогда
			ОформлениеСтроки.Ячейки.ЗначениеИзмененияПоНоменклатуре.ТолькоПросмотр=Истина;
		Иначе
			ОформлениеСтроки.Ячейки.ЗначениеИзмененияПоНоменклатуре.ТолькоПросмотр=Ложь;
		КонецЕсли;
		
	КонецЕсли; 
	
	Если НЕ СтатьяОборотов.РазделениеПоКонтрагентам Тогда
		
		ОформлениеСтроки.Ячейки.ВидИзмененияПоКонтрагентам.ТолькоПросмотр=Истина;
		ОформлениеСтроки.Ячейки.ЗначениеИзмененияПоКонтрагентам.ТолькоПросмотр=Истина;
		
	Иначе
		
		ОформлениеСтроки.Ячейки.ВидИзмененияПоКонтрагентам.ТолькоПросмотр=Ложь;
		
		Если ДанныеСтроки.ВидИзмененияПоКонтрагентам=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета
			ИЛИ ДанныеСтроки.ВидИзмененияПоКонтрагентам=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПустаяСсылка()  Тогда
			ОформлениеСтроки.Ячейки.ЗначениеИзмененияПоКонтрагентам.ТолькоПросмотр=Истина;
		Иначе
			ОформлениеСтроки.Ячейки.ЗначениеИзмененияПоКонтрагентам.ТолькоПросмотр=Ложь;
		КонецЕсли;
		
	КонецЕсли;
		
	Если НЕ СтатьяОборотов.УчетПоСумме Тогда
		
		ОформлениеСтроки.Ячейки.ВидИзмененияПоВалюте.ТолькоПросмотр=Истина;
		ОформлениеСтроки.Ячейки.ЗначениеИзмененияПоВалюте.ТолькоПросмотр=Истина;
		
	Иначе
		
		ОформлениеСтроки.Ячейки.ВидИзмененияПоВалюте.ТолькоПросмотр=Ложь;
		
		Если ДанныеСтроки.ВидИзмененияПоВалюте=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета
			ИЛИ ДанныеСтроки.ВидИзмененияПоВалюте=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПустаяСсылка() Тогда
			ОформлениеСтроки.Ячейки.ЗначениеИзмененияПоВалюте.ТолькоПросмотр=Истина;
		Иначе
			ОформлениеСтроки.Ячейки.ЗначениеИзмененияПоВалюте.ТолькоПросмотр=Ложь;
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
			
	ОбновитьСпискиВыбора();
			
	Если ОборотыПоСтатьямБюджетов.Количество()=0 Тогда
		НоваяСтрока=ОборотыПоСтатьямБюджетов.Добавить();
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущаяСтрока=ОборотыПоСтатьямБюджетов[0];
	КонецЕсли;
	
КонецПроцедуры

Процедура ВидИзмененияПоЦФОПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Элемент.Значение) Тогда
		
		Если Элемент.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ФиксированноеЗначение Тогда
			
			ЭлементыФормы.ЗначениеИзмененияПоЦФО.Значение=Новый(Тип("СправочникСсылка.Подразделения"));
			
		ИначеЕсли Элемент.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета Тогда
			
			ЭлементыФормы.ЗначениеИзмененияПоЦФО.Значение="";
			
		Иначе
			
			ЭлементыФормы.ЗначениеИзмененияПоЦФО.Значение=Новый(Тип("СправочникСсылка.ПрофилиИзмененияПлановПоИзмерениям"));
			
		КонецЕсли;
		
	Иначе
		
		ЭлементыФормы.ЗначениеИзмененияПоЦФО.Значение=Неопределено;
		
	КонецЕсли;
	
	УправлениеДоступностьюРеквизитов();
	
КонецПроцедуры

Процедура ВидИзмененияПоПроектамПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Элемент.Значение) Тогда
		
		Если Элемент.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ФиксированноеЗначение Тогда
			
			ЭлементыФормы.ЗначениеИзмененияПоПроектам.Значение=Новый(Тип("СправочникСсылка.Проекты"));
			
		ИначеЕсли Элемент.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета Тогда
			
			ЭлементыФормы.ЗначениеИзмененияПоПроектам.Значение="";
			
		Иначе
			
			ЭлементыФормы.ЗначениеИзмененияПоПроектам.Значение=Новый(Тип("СправочникСсылка.ПрофилиИзмененияПлановПоИзмерениям"));
			
		КонецЕсли;
		
	Иначе
		
		ЭлементыФормы.ЗначениеИзмененияПоПроектам.Значение=Неопределено;
		
	КонецЕсли;
	
	УправлениеДоступностьюРеквизитов();
	
КонецПроцедуры


Процедура ОборотыПоСтатьямБюджетовВидИзмененияПоЦФОПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Элемент.Значение) Тогда
		
		Если Элемент.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ФиксированноеЗначение Тогда
			
			ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ЗначениеИзмененияПоЦФО=Новый(Тип("СправочникСсылка.Подразделения"));
			
		ИначеЕсли Элемент.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета Тогда
			
			ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ЗначениеИзмененияПоЦФО="";
			ЭлементыФормы.ЗначениеИзмененияПоПроектам.Доступность=Ложь;
			
		Иначе
			
			ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ЗначениеИзмененияПоЦФО=Новый(Тип("СправочникСсылка.ПрофилиИзмененияПлановПоИзмерениям"));
			
		КонецЕсли;
		
	Иначе
		
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ЗначениеИзмененияПоЦФО=Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОборотыПоСтатьямБюджетовВидИзмененияПоПроектамПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Элемент.Значение) Тогда
		
		Если Элемент.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ФиксированноеЗначение Тогда
			
			ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ЗначениеИзмененияПоПроектам=Новый(Тип("СправочникСсылка.Проекты"));
			
		ИначеЕсли Элемент.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета Тогда
			
			ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ЗначениеИзмененияПоПроектам="";
			ЭлементыФормы.ЗначениеИзмененияПоПроектам.Доступность=Ложь;
			
		Иначе
			
			ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ЗначениеИзмененияПоПроектам=Новый(Тип("СправочникСсылка.ПрофилиИзмененияПлановПоИзмерениям"));
			
		КонецЕсли;
		
	Иначе
		
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ЗначениеИзмененияПоПроектам=Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОборотыПоСтатьямБюджетовПриАктивизацииСтроки(Элемент)
	
	Если НЕ Элемент.ТекущаяСтрока=Неопределено Тогда
		
		ЭлементыФормы.ТекстНомерСтрокиОбороты.Заголовок="Строка "+Элемент.ТекущаяСтрока.НомерСтроки+" из "+ОборотыПоСтатьямБюджетов.Количество();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыПросмотрОпераций(Кнопка)
	
	Форма = ПолучитьФорму("ФормаПросмотрОпераций", ЭтаФорма,);
	Форма.ФорматПериод=ФорматПериод;
	Форма.Открыть();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	
	Если НЕ ЭтоНовый() Тогда 
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	КонецЕсли;
	
	ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущаяСтрока=ЭлементыФормы.ОборотыПоСтатьямБюджетов.Значение[0];
	
	ФорматПериода();
	
	Если (НЕ ЗначениеЗаполнено(Ответственный)) ИЛИ (НЕ ПараметрОбъектКопирования=Неопределено) Тогда
		Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Состояние) Тогда
		Состояние=Перечисления.СостоянияОбъектов.Подготовлен;
	КонецЕсли;
	
	ТекущийИндекс=1;
	
	Для Каждого Строка Из Показатели Цикл
		
		Если Найти(Строка.Код,"РО")>0 Тогда
			СтрокаИндекс=Число(Сред(Строка.Код,3));
			Если СтрокаИндекс>ТекущийИндекс тогда
				ТекущийИндекс=СтрокаИндекс;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	УправлениеДоступностьюРеквизитов();
		
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект,ЭтаФорма);
	
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура ЗначениеИзмененияПоВалютеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Если ЭлементыФормы.ВидИзмененияПоВалюте.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Распределение ИЛИ
		ЭлементыФормы.ВидИзмененияПоВалюте.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Умножение ТОГДА
		
		ФормаВыбораИсточник= Справочники["ПрофилиИзмененияПлановПоИзмерениям"].ПолучитьФормуВыбора(, Элемент,);
			СтандартнаяОбработка=Ложь;
			ФормаВыбораИсточник.Отбор.ИзмерениеБюджетирования.Значение=Перечисления.ИзмеренияБюджетирования.Валюта;
			ФормаВыбораИсточник.Отбор.ИзмерениеБюджетирования.Использование = Истина;
			ФормаВыбораИсточник.ЭлементыФормы.СправочникСписок.НастройкаОтбора.ИзмерениеБюджетирования.Доступность=Ложь;
			ФормаВыбораИсточник.ПараметрВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Элементы;
			
			ФормаВыбораИсточник.РежимВыбора=Истина;
			
			ФормаВыбораИсточник.Открыть();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗначениеИзмененияПоЦФОНачалоВыбора(Элемент, СтандартнаяОбработка)
			
	Если ЭлементыФормы.ВидИзмененияПоЦФО.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Распределение ИЛИ
		ЭлементыФормы.ВидИзмененияПоЦФО.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Умножение ТОГДА
		СтандартнаяОбработка=Ложь;
		ФормаВыбораИсточник= Справочники["ПрофилиИзмененияПлановПоИзмерениям"].ПолучитьФормуВыбора(, Элемент,);
			
			ФормаВыбораИсточник.Отбор.ИзмерениеБюджетирования.Значение=Перечисления.ИзмеренияБюджетирования.ЦФО;
			ФормаВыбораИсточник.Отбор.ИзмерениеБюджетирования.Использование = Истина;
			ФормаВыбораИсточник.ЭлементыФормы.СправочникСписок.НастройкаОтбора.ИзмерениеБюджетирования.Доступность=Ложь;
			ФормаВыбораИсточник.ПараметрВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Элементы;
			
			ФормаВыбораИсточник.РежимВыбора=Истина;
			
			ФормаВыбораИсточник.Открыть();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗначениеИзмененияПоПроектамНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Если ЭлементыФормы.ВидИзмененияПоПроектам.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Распределение ИЛИ
		ЭлементыФормы.ВидИзмененияПоПроектам.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Умножение ТОГДА
		СтандартнаяОбработка=Ложь;
		ФормаВыбораИсточник= Справочники["ПрофилиИзмененияПлановПоИзмерениям"].ПолучитьФормуВыбора(, Элемент,);
			
			ФормаВыбораИсточник.Отбор.ИзмерениеБюджетирования.Значение=Перечисления.ИзмеренияБюджетирования.Проект;
			ФормаВыбораИсточник.Отбор.ИзмерениеБюджетирования.Использование = Истина;
			ФормаВыбораИсточник.ЭлементыФормы.СправочникСписок.НастройкаОтбора.ИзмерениеБюджетирования.Доступность=Ложь;
			ФормаВыбораИсточник.ПараметрВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Элементы;
			
			ФормаВыбораИсточник.РежимВыбора=Истина;
			
			ФормаВыбораИсточник.Открыть();
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ЗначениеИзмененияПоКонтрагентамНачалоВыбора(Элемент, СтандартнаяОбработка)
		
	Если ЭлементыФормы.ВидИзмененияПоКонтрагентам.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Распределение ИЛИ
		ЭлементыФормы.ВидИзмененияПоКонтрагентам.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Умножение ТОГДА
		СтандартнаяОбработка=Ложь;

		ФормаВыбораИсточник= Справочники["ПрофилиИзмененияПлановПоИзмерениям"].ПолучитьФормуВыбора(, Элемент,);
			
			ФормаВыбораИсточник.Отбор.ИзмерениеБюджетирования.Значение=Перечисления.ИзмеренияБюджетирования.Контрагент;
			ФормаВыбораИсточник.Отбор.ИзмерениеБюджетирования.Использование = Истина;
			ФормаВыбораИсточник.ЭлементыФормы.СправочникСписок.НастройкаОтбора.ИзмерениеБюджетирования.Доступность=Ложь;
			ФормаВыбораИсточник.ПараметрВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Элементы;
			
			ФормаВыбораИсточник.РежимВыбора=Истина;
			
			ФормаВыбораИсточник.Открыть();
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ЗначениеИзмененияПоНоменклатуреНачалоВыбора(Элемент, СтандартнаяОбработка)
	
		
	Если ЭлементыФормы.ВидИзмененияПоНоменклатуре.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Распределение ИЛИ
		ЭлементыФормы.ВидИзмененияПоНоменклатуре.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Умножение ТОГДА
		СтандартнаяОбработка=Ложь;

					
			ФормаВыбораИсточник= Справочники["ПрофилиИзмененияПлановПоИзмерениям"].ПолучитьФормуВыбора(, Элемент,);
			
			ФормаВыбораИсточник.Отбор.ИзмерениеБюджетирования.Значение=Перечисления.ИзмеренияБюджетирования.Номенклатура;
			ФормаВыбораИсточник.Отбор.ИзмерениеБюджетирования.Использование = Истина;
			ФормаВыбораИсточник.ЭлементыФормы.СправочникСписок.НастройкаОтбора.ИзмерениеБюджетирования.Доступность=Ложь;
			ФормаВыбораИсточник.ПараметрВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Элементы;
			
			ФормаВыбораИсточник.РежимВыбора=Истина;
			
			ФормаВыбораИсточник.Открыть();
			
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ВидИзмененияПоВалютеПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Элемент.Значение) Тогда
		
		Если Элемент.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ФиксированноеЗначение Тогда
			
			ЭлементыФормы.ЗначениеИзмененияПоВалюте.Значение=Новый(Тип("СправочникСсылка.Валюты"));
			ЭлементыФормы.ЗначениеИзмененияПоВалюте.АвтоОтметкаНезаполненного=Истина;
			
		ИначеЕсли Элемент.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета Тогда
			
			ЭлементыФормы.ЗначениеИзмененияПоВалюте.Значение="";
			
			ЭлементыФормы.ЗначениеИзмененияПоВалюте.АвтоОтметкаНезаполненного=Ложь;
			
		Иначе
			
			ЭлементыФормы.ЗначениеИзмененияПоВалюте.Значение=Новый(Тип("СправочникСсылка.ПрофилиИзмененияПлановПоИзмерениям"));
			
		КонецЕсли;
		
	Иначе
		
		ЭлементыФормы.ЗначениеИзмененияПоВалюте.Значение=Неопределено;
		
	КонецЕсли;
	
	УправлениеДоступностьюРеквизитов();
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если Ответственный.Пустая() Тогда
		Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
	КонецЕсли;
	
КонецПроцедуры

Процедура ВидИзмененияПоКонтрагентамПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Элемент.Значение) Тогда
		
		Если Элемент.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ФиксированноеЗначение Тогда
			
			ЭлементыФормы.ЗначениеИзмененияПоКонтрагентам.Значение=Новый(Тип("СправочникСсылка.Контрагенты"));
			
		ИначеЕсли Элемент.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета Тогда
			
			ЭлементыФормы.ЗначениеИзмененияПоКонтрагентам.Значение="";
			
		Иначе
			
			ЭлементыФормы.ЗначениеИзмененияПоКонтрагентам.Значение=Новый(Тип("СправочникСсылка.ПрофилиИзмененияПлановПоИзмерениям"));
			
		КонецЕсли;
		
	Иначе
		
		ЭлементыФормы.ЗначениеИзмененияПоКонтрагентам.Значение=Неопределено;
		
	КонецЕсли;
	
	УправлениеДоступностьюРеквизитов();
		
КонецПроцедуры

Процедура ВидИзмененияПоНоменклатуреПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Элемент.Значение) Тогда
		
		Если Элемент.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ФиксированноеЗначение Тогда
			
			Если Сценарий.ДетализацияПланирования=Перечисления.ДетализацияПланирования.НоменклатурныеГруппы Тогда
				ЭлементыФормы.ЗначениеИзмененияПоНоменклатуре.Значение=Новый(Тип("СправочникСсылка.НоменклатурныеГруппы"));
			Иначе
				ЭлементыФормы.ЗначениеИзмененияПоНоменклатуре.Значение=Новый(Тип("СправочникСсылка.Номенклатура"));
			КонецЕсли;
			
			
		ИначеЕсли Элемент.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета Тогда
			
			ЭлементыФормы.ЗначениеИзмененияПоНоменклатуре.Значение="";
			
		Иначе
			
			ЭлементыФормы.ЗначениеИзмененияПоНоменклатуре.Значение=Новый(Тип("СправочникСсылка.ПрофилиИзмененияПлановПоИзмерениям"));
			
		КонецЕсли;
		
	Иначе
		
		ЭлементыФормы.ЗначениеИзмененияПоНоменклатуре.Значение=Неопределено;
		
	КонецЕсли;
	
	УправлениеДоступностьюРеквизитов();
	
КонецПроцедуры

Процедура ОборотыПоСтатьямБюджетовЗначениеИзмененияПоЦФОНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Если ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ВидИзмененияПоЦФО=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Распределение ИЛИ
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ВидИзмененияПоЦФО=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Умножение ТОГДА
		СтандартнаяОбработка=Ложь;
		ФормаВыбораИсточник= Справочники["ПрофилиИзмененияПлановПоИзмерениям"].ПолучитьФормуВыбора(, Элемент,);
			
			ФормаВыбораИсточник.Отбор.ИзмерениеБюджетирования.Значение=Перечисления.ИзмеренияБюджетирования.ЦФО;
			ФормаВыбораИсточник.Отбор.ИзмерениеБюджетирования.Использование = Истина;
			ФормаВыбораИсточник.ЭлементыФормы.СправочникСписок.НастройкаОтбора.ИзмерениеБюджетирования.Доступность=Ложь;
			ФормаВыбораИсточник.ПараметрВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Элементы;
			
			ФормаВыбораИсточник.РежимВыбора=Истина;
			
			ФормаВыбораИсточник.Открыть();
		
	КонецЕсли;	
		
КонецПроцедуры

Процедура ОборотыПоСтатьямБюджетовЗначениеИзмененияПоПроектамНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Если ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ВидИзмененияПоПроектам=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Распределение ИЛИ
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ВидИзмененияПоПроектам=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Умножение ТОГДА
		СтандартнаяОбработка=Ложь;
		ФормаВыбораИсточник= Справочники["ПрофилиИзмененияПлановПоИзмерениям"].ПолучитьФормуВыбора(, Элемент,);
			
			ФормаВыбораИсточник.Отбор.ИзмерениеБюджетирования.Значение=Перечисления.ИзмеренияБюджетирования.Проект;
			ФормаВыбораИсточник.Отбор.ИзмерениеБюджетирования.Использование = Истина;
			ФормаВыбораИсточник.ЭлементыФормы.СправочникСписок.НастройкаОтбора.ИзмерениеБюджетирования.Доступность=Ложь;
			ФормаВыбораИсточник.ПараметрВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Элементы;
			
			ФормаВыбораИсточник.РежимВыбора=Истина;
			
			ФормаВыбораИсточник.Открыть();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОборотыПоСтатьямБюджетовЗначениеИзмененияПоКонтрагентамНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Если ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ВидИзмененияПоКонтрагентам=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Распределение ИЛИ
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ВидИзмененияПоКонтрагентам=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Умножение ТОГДА
		СтандартнаяОбработка=Ложь;
		ФормаВыбораИсточник= Справочники["ПрофилиИзмененияПлановПоИзмерениям"].ПолучитьФормуВыбора(, Элемент,);
			
			ФормаВыбораИсточник.Отбор.ИзмерениеБюджетирования.Значение=Перечисления.ИзмеренияБюджетирования.Контрагент;
			ФормаВыбораИсточник.Отбор.ИзмерениеБюджетирования.Использование = Истина;
			ФормаВыбораИсточник.ЭлементыФормы.СправочникСписок.НастройкаОтбора.ИзмерениеБюджетирования.Доступность=Ложь;
			ФормаВыбораИсточник.ПараметрВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Элементы;
			
			ФормаВыбораИсточник.РежимВыбора=Истина;
			
			ФормаВыбораИсточник.Открыть();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОборотыПоСтатьямБюджетовЗначениеИзмененияПоНоменклатуреНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Если ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ВидИзмененияПоНоменклатуре=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Распределение ИЛИ
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ВидИзмененияПоНоменклатуре=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоПрофилю_Умножение ТОГДА
		СтандартнаяОбработка=Ложь;
		ФормаВыбораИсточник= Справочники["ПрофилиИзмененияПлановПоИзмерениям"].ПолучитьФормуВыбора(, Элемент,);
			
			ФормаВыбораИсточник.Отбор.ИзмерениеБюджетирования.Значение=Перечисления.ИзмеренияБюджетирования.Номенклатура;
			ФормаВыбораИсточник.Отбор.ИзмерениеБюджетирования.Использование = Истина;
			ФормаВыбораИсточник.ЭлементыФормы.СправочникСписок.НастройкаОтбора.ИзмерениеБюджетирования.Доступность=Ложь;
			ФормаВыбораИсточник.ПараметрВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Элементы;
			
			ФормаВыбораИсточник.РежимВыбора=Истина;
			
			ФормаВыбораИсточник.Открыть();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОборотыПоСтатьямБюджетовВидИзмененияПоКонтрагентамПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Элемент.Значение) Тогда
		
		Если Элемент.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ФиксированноеЗначение Тогда
			
			ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ЗначениеИзмененияПоКонтрагентам=Новый(Тип("СправочникСсылка.Контрагенты"));
			
		ИначеЕсли Элемент.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета Тогда
			
			ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ЗначениеИзмененияПоКонтрагентам="";
			ЭлементыФормы.ЗначениеИзмененияПоПроектам.Доступность=Ложь;
			
		Иначе
			
			ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ЗначениеИзмененияПоКонтрагентам=Новый(Тип("СправочникСсылка.ПрофилиИзмененияПлановПоИзмерениям"));
			
		КонецЕсли;
		
	Иначе
		
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ЗначениеИзмененияПоКонтрагентам=Неопределено;
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ОборотыПоСтатьямБюджетовВидИзмененияПоНоменклатуреПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Элемент.Значение) Тогда
		
		Если Элемент.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ФиксированноеЗначение Тогда
			
			Если Сценарий.ДетализацияПланирования=Перечисления.ДетализацияПланирования.НоменклатурныеГруппы Тогда
				
				ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ЗначениеИзмененияПоНоменклатуре=Новый(Тип("СправочникСсылка.НоменклатурныеГруппы"));
				
			Иначе
				
				ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ЗначениеИзмененияПоНоменклатуре=Новый(Тип("СправочникСсылка.Номенклатура"));
				
			КонецЕсли;
			
		ИначеЕсли Элемент.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета Тогда
			
			ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ЗначениеИзмененияПоНоменклатуре="";
			ЭлементыФормы.ЗначениеИзмененияПоПроектам.Доступность=Ложь;
			
		Иначе
			
			ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ЗначениеИзмененияПоНоменклатуре=Новый(Тип("СправочникСсылка.ПрофилиИзмененияПлановПоИзмерениям"));
			
		КонецЕсли;
		
	Иначе
		
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ЗначениеИзмененияПоНоменклатуре=Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОборотыПоСтатьямБюджетовВидИзмененияПоВалютеПриИзменении(Элемент)
		
	Если ЗначениеЗаполнено(Элемент.Значение) Тогда
		
		Если Элемент.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ФиксированноеЗначение Тогда
			
				
				ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ЗначениеИзмененияПоВалюте=Новый(Тип("СправочникСсылка.Валюты"));
				
						
		ИначеЕсли Элемент.Значение=Перечисления.ВидыИзмененияПлановПоИзмерениям.ПоИсточникуДанныхРасчета Тогда
			
			ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ЗначениеИзмененияПоВалюте="";
			ЭлементыФормы.ЗначениеИзмененияПоВалюте.Доступность=Ложь;
							
		КонецЕсли;
		
	Иначе
		
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ЗначениеИзмененияПоВалюте=Новый(Тип("СправочникСсылка.Валюты"));
		
	КонецЕсли;
			
КонецПроцедуры

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

Процедура ДополнительныеИсточникиДанныхИсточникДанныхНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	СписокТипов = Новый СписокЗначений;
	СписокТипов.Добавить(Метаданные.Документы.БюджетнаяОперация.Имя, Метаданные.Документы.БюджетнаяОперация.Синоним);
	
	СписокТипов.Добавить(Метаданные.Справочники.ИсточникиДанныхДляРасчетовБюджетирования.Имя, Метаданные.Справочники.ИсточникиДанныхДляРасчетовБюджетирования. Синоним);

	ВыбранныйЭлемент = ЭтаФорма.ВыбратьИзСписка(СписокТипов,Элемент);

	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ВыбранныйЭлемент.Значение = Метаданные.Документы.БюджетнаяОперация.Имя Тогда

		// В качестве владельца формы выбора устанавливаем данный элемент формы, чтобы выбранное
		// значение было присвоено стандартно.
		ФормаВыбора = Документы[ВыбранныйЭлемент.Значение].ПолучитьФормуВыбора(,Элемент,);
		
				
		Если ЗначениеЗаполнено(ЭлементыФормы.ДополнительныеИсточникиДанных.ТекущиеДанные.ИсточникДанных)
			И ТипЗнч(ЭлементыФормы.ДополнительныеИсточникиДанных.ТекущиеДанные.ИсточникДанных)=Тип("ДокументСсылка."+ВыбранныйЭлемент.Значение) Тогда
			
			ФормаВыбора.ПараметрТекущаяСтрока=ЭлементыФормы.ДополнительныеИсточникиДанных.ТекущиеДанные.ИсточникДанных;
			
		КонецЕсли;

	Иначе

		// В качестве владельца формы выбора устанавливаем данный элемент формы, чтобы выбранное
		// значение было присвоено стандартно.
		ФормаВыбора = Справочники[ВыбранныйЭлемент.Значение].ПолучитьФормуВыбора(,Элемент,);				
		ФормаВыбора.ПараметрВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Элементы;
		
		Если ЗначениеЗаполнено(ЭлементыФормы.ДополнительныеИсточникиДанных.ТекущиеДанные.ИсточникДанных)
			И ТипЗнч(ЭлементыФормы.ДополнительныеИсточникиДанных.ТекущиеДанные.ИсточникДанных)=Тип("СправочникСсылка."+ВыбранныйЭлемент.Значение) Тогда
			
			ФормаВыбора.ПараметрТекущаяСтрока=ЭлементыФормы.ДополнительныеИсточникиДанных.ТекущиеДанные.ИсточникДанных;
			
		КонецЕсли;

	КонецЕсли;
		
	ФормаВыбора.Открыть();
		
КонецПроцедуры


// Удаляет из списка показателей показатели, относящиеся к источнику с переданным кодом.
// Удаляет ссылки на эти показатели из формул расчета.
//
Процедура УдалитьПоказателиИсточника(КодИсточника)
	
	СтруктураПоиска=Новый Структура;
	СтруктураПоиска.Вставить("КодИсточника",КодИсточника);
	
	МассивПоказатели=Показатели.НайтиСтроки(СтруктураПоиска);
	
	Для Каждого СтрокаПоказатель Из МассивПоказатели Цикл
		
		//Удаляем ссылки в формулах
		Для Каждого СтрокаРасчет Из ОборотыПоСтатьямБюджетов Цикл
			СтрокаРасчет.ФормулаКоличество=СтрЗаменить(СтрокаРасчет.ФормулаКоличество,"["+СтрокаПоказатель.Код+"]","");
		    СтрокаРасчет.ФормулаСумма=СтрЗаменить(СтрокаРасчет.ФормулаСумма,"["+СтрокаПоказатель.Код+"]","");
		КонецЦикла;
		
		Показатели.Удалить(СтрокаПоказатель);
		
	КонецЦикла;

КонецПроцедуры // УдалитьПоказателиИсточника()

// Добавляет в список показателей доступные к использованию ресурсы источника
//
Процедура ЗаполнитьПоказателиИсточника(ИсточникДанных,КодИсточника)
	
	Если ТипЗнч(ИсточникДанных)=Тип("ДокументСсылка.БюджетнаяОперация") Тогда
		
		Индекс=1;
		
		Если ИсточникДанных.СтатьяОборотов.УчетПоКоличеству И Показатели.Найти(КодИсточника+Формат(Индекс,"ЧЦ=2; ЧВН="),"Код")=Неопределено Тогда			
			НовыйПоказатель=Показатели.Добавить();
			НовыйПоказатель.Код=КодИсточника+Формат(Индекс,"ЧЦ=2; ЧВН=");
			НовыйПоказатель.Представление=ИсточникДанных.СтатьяОборотов.Наименование+": кол - во";
			НовыйПоказатель.Значение=ИсточникДанных.Количество;
			НовыйПоказатель.Имя="БюджетнаяОперацияКоличество";
			НовыйПоказатель.КодИсточника=КодИсточника;
			НовыйПоказатель.ПредставлениеИсточника=Строка(ИсточникДанных);
			Индекс=Индекс+1;
		КонецЕсли;
		
		Если ИсточникДанных.СтатьяОборотов.УчетПоСумме И Показатели.Найти(КодИсточника+Формат(Индекс,"ЧЦ=2; ЧВН="),"Код")=Неопределено Тогда
			НовыйПоказатель=Показатели.Добавить();
			НовыйПоказатель.Код=КодИсточника+Формат(Индекс,"ЧЦ=2; ЧВН=");
			НовыйПоказатель.Представление=ИсточникДанных.СтатьяОборотов.Наименование+": сумма";
			НовыйПоказатель.Значение=ИсточникДанных.Сумма;
			НовыйПоказатель.Имя="БюджетнаяОперацияСумма";
			НовыйПоказатель.КодИсточника=КодИсточника;
			НовыйПоказатель.ПредставлениеИсточника=Строка(ИсточникДанных);
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ИсточникДанных)=Тип("СправочникСсылка.ИсточникиДанныхДляРасчетовБюджетирования") Тогда
		
		Индекс=1;
		
		Для каждого Показатель Из ИсточникДанных.Показатели Цикл
			
			Если Показатель.Использование И Показатели.Найти(КодИсточника+Формат(Индекс,"ЧЦ=2; ЧВН="),"Код")=Неопределено Тогда
				
				НовыйПоказатель=Показатели.Добавить();
				НовыйПоказатель.Код=КодИсточника+Формат(Индекс,"ЧЦ=2; ЧВН=");
				НовыйПоказатель.Представление=Показатель.Представление;
				НовыйПоказатель.Имя=Показатель.Имя;
				НовыйПоказатель.КодИсточника=КодИсточника;
				НовыйПоказатель.ПредставлениеИсточника=Строка(ИсточникДанных);
				
				Индекс=Индекс+1;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоказателиИсточника()

Процедура ДополнительныеИсточникиДанныхИсточникДанныхПриИзменении(Элемент)
	
	Если НЕ ПустаяСтрока(СокрЛП(ЭлементыФормы.ДополнительныеИсточникиДанных.ТекущиеДанные.КодИсточника)) Тогда
		
		УдалитьПоказателиИсточника(ЭлементыФормы.ДополнительныеИсточникиДанных.ТекущиеДанные.КодИсточника);
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Элемент.Значение) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Элемент.Значение)=Тип("ДокументСсылка.БюджетнаяОперация") Тогда
		
		ЭлементыФормы.ДополнительныеИсточникиДанных.ТекущиеДанные.КодИсточника="БО"+УдалитьВедущиеНули(Элемент.Значение.Номер);
		
	ИначеЕсли ТипЗнч(Элемент.Значение)=Тип("СправочникСсылка.ИсточникиДанныхДляРасчетовБюджетирования") Тогда
		
		ЭлементыФормы.ДополнительныеИсточникиДанных.ТекущиеДанные.КодИсточника="ИД"+УдалитьВедущиеНули(Элемент.Значение.Код);
		
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ДополнительныеИсточникиДанныхИсточникДанныхОчистка(Элемент, СтандартнаяОбработка)
	
	УдалитьПоказателиИсточника(ЭлементыФормы.ДополнительныеИсточникиДанных.ТекущиеДанные.КодИсточника);
	
КонецПроцедуры

Процедура ДополнительныеИсточникиДанныхПередУдалением(Элемент, Отказ)
	
	УдалитьПоказателиИсточника(ЭлементыФормы.ДополнительныеИсточникиДанных.ТекущиеДанные.КодИсточника);
	
КонецПроцедуры


Процедура ДополнительныеИсточникиДанныхПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Не ОтменаРедактирования Тогда
		
		Для Каждого СтрокаИсточник ИЗ ДополнительныеИсточникиДанных Цикл
			Если СтрокаИсточник.ИсточникДанных=Элемент.ТекущиеДанные.ИсточникДанных И НЕ СтрокаИсточник=Элемент.ТекущиеДанные Тогда
				Сообщить("Повторяющийся источник данных: "+Строка(Элемент.ТекущиеДанные.ИсточникДанных));
				Отказ=Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если Элемент.ТекущиеДанные.ИсточникДанных=ОсновнойИсточникДанных Тогда
			УдалитьПоказателиИсточника(ЭлементыФормы.ДополнительныеИсточникиДанных.ТекущиеДанные.КодИсточника);
			Сообщить("Повторяющийся источник данных: "+Строка(Элемент.ТекущиеДанные.ИсточникДанных));
			Отказ=Истина;
		КонецЕсли;
		Если не Отказ Тогда
			ЗаполнитьПоказателиИсточника(Элемент.ТекущиеДанные.ИсточникДанных,ЭлементыФормы.ДополнительныеИсточникиДанных.ТекущиеДанные.КодИсточника);
        КонецЕсли
	КонецЕсли;
		
КонецПроцедуры

Процедура ОсновнойИсточникДанныхНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	СписокТипов = Новый СписокЗначений;
	СписокТипов.Добавить(Метаданные.Документы.БюджетнаяОперация.Имя, Метаданные.Документы.БюджетнаяОперация.Синоним);
	
	СписокТипов.Добавить(Метаданные.Справочники.ИсточникиДанныхДляРасчетовБюджетирования.Имя, Метаданные.Справочники.ИсточникиДанныхДляРасчетовБюджетирования. Синоним);

	ВыбранныйЭлемент = ЭтаФорма.ВыбратьИзСписка(СписокТипов,Элемент);

	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ВыбранныйЭлемент.Значение = Метаданные.Документы.БюджетнаяОперация.Имя Тогда

		// В качестве владельца формы выбора устанавливаем данный элемент формы, чтобы выбранное
		// значение было присвоено стандартно.
		ФормаВыбора = Документы[ВыбранныйЭлемент.Значение].ПолучитьФормуВыбора(,Элемент,);
		
				
		Если ЗначениеЗаполнено(ОсновнойИсточникДанных)
			И ТипЗнч(ОсновнойИсточникДанных)=Тип("ДокументСсылка."+ВыбранныйЭлемент.Значение) Тогда
			
			ФормаВыбора.ПараметрТекущаяСтрока=ОсновнойИсточникДанных;
			
		КонецЕсли;

	Иначе

		// В качестве владельца формы выбора устанавливаем данный элемент формы, чтобы выбранное
		// значение было присвоено стандартно.
		ФормаВыбора = Справочники[ВыбранныйЭлемент.Значение].ПолучитьФормуВыбора(,Элемент,);				
		ФормаВыбора.ПараметрВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Элементы;
		
		Если ЗначениеЗаполнено(ОсновнойИсточникДанных)
			И ТипЗнч(ОсновнойИсточникДанных)=Тип("СправочникСсылка."+ВыбранныйЭлемент.Значение) Тогда
			
			ФормаВыбора.ПараметрТекущаяСтрока=ОсновнойИсточникДанных;
			
		КонецЕсли;

	КонецЕсли;
		
	ФормаВыбора.Открыть();
	
КонецПроцедуры

Процедура ОсновнойИсточникДанныхПриИзменении(Элемент)
	
	УдалитьПоказателиИсточника(КодОсновногоИсточника);
	
	Для Каждого СтрокаИсточник ИЗ ДополнительныеИсточникиДанных Цикл
		Если СтрокаИсточник.ИсточникДанных=ОсновнойИсточникДанных Тогда
			Сообщить("Повторяющийся источник данных: "+Строка(ОсновнойИсточникДанных));
			ОсновнойИсточникДанных=Неопределено;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ЗначениеЗаполнено(ОсновнойИсточникДанных) Тогда
		
		КодОсновногоИсточника="";	
		
	ИначеЕсли ТипЗнч(ОсновнойИсточникДанных)=Тип("ДокументСсылка.БюджетнаяОперация") Тогда
				
		КодОсновногоИсточника="БО"+УдалитьВедущиеНули(ОсновнойИсточникДанных.Номер);
		ЗаполнитьПоказателиИсточника(ОсновнойИсточникДанных,КодОсновногоИсточника);
		ОбновитьСпискиВыбора();
		
	ИначеЕсли ТипЗнч(ОсновнойИсточникДанных)=Тип("СправочникСсылка.ИсточникиДанныхДляРасчетовБюджетирования") Тогда
		
		Если ОсновнойИсточникДанных.ПроизвольныйЗапрос Тогда 
			// При использовании источника на основе пользовательского запроса дополнительные источники данных не используются
			Для Каждого СтрокаИсточник ИЗ ДополнительныеИсточникиДанных Цикл
				
				УдалитьПоказателиИсточника(СтрокаИсточник.КодИсточника);
				
			КонецЦикла;
			
			ДополнительныеИсточникиДанных.Очистить();
			
		КонецЕсли;
				
		КодОсновногоИсточника="ИД"+УдалитьВедущиеНули(ОсновнойИсточникДанных.Код);
		ЗаполнитьПоказателиИсточника(ОсновнойИсточникДанных,КодОсновногоИсточника);
		ОбновитьСпискиВыбора();
		
	КонецЕсли;
		
	ОборотыПоСтатьямБюджетов.Очистить();
	ЭтаФорма.Обновить();
	НоваяСтрока=ОборотыПоСтатьямБюджетов.Добавить();
	ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущаяСтрока=ОборотыПоСтатьямБюджетов[0];
	
	УправлениеДоступностьюРеквизитов();
	
КонецПроцедуры

Процедура ОсновнойИсточникДанныхОчистка(Элемент, СтандартнаяОбработка)
	
	УдалитьПоказателиИсточника(КодОсновногоИсточника);
	ОбновитьСпискиВыбора();
	
КонецПроцедуры

Процедура ПоказателиПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	ТекущийИндекс=ТекущийИндекс+1;
	
КонецПроцедуры

Процедура СтатьяОборотовПриИзменении(Элемент)
	
	СтатьяОборотов=Элемент.Значение;
	
	Если НЕ СтатьяОборотов.РазделениеПоНоменклатуре Тогда
		
		ЭлементыФормы.ВидИзмененияПоНоменклатуре.Значение="";
		ЭлементыФормы.ЗначениеИзмененияПоНоменклатуре.Значение=Неопределено;
			
	КонецЕсли;
	
	Если НЕ СтатьяОборотов.РазделениеПоКонтрагентам Тогда
		
		ЭлементыФормы.ВидИзмененияПоКонтрагентам.Значение="";
		ЭлементыФормы.ЗначениеИзмененияПоКонтрагентам.Значение=Неопределено;
			
	КонецЕсли;
	
	Если НЕ СтатьяОборотов.УчетПоСумме Тогда
		
		ЭлементыФормы.ВидИзмененияПоВалюте.Значение="";
		ЭлементыФормы.ЗначениеИзмененияПоВалюте.Значение="";
		
	КонецЕсли;
	
	УправлениеДоступностьюРеквизитов();
		
КонецПроцедуры

Процедура ПанельОборотыПоСтатьямПриСменеСтраницы(Элемент, ТекущаяСтраница)
	УправлениеДоступностьюРеквизитов();
КонецПроцедуры

Процедура ОборотыПоСтатьямБюджетовСтатьяОборотовПриИзменении(Элемент)
	
	СтатьяОборотов=Элемент.Значение;
	
	Если НЕ СтатьяОборотов.РазделениеПоНоменклатуре Тогда
		
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ВидИзмененияПоНоменклатуре="";
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ЗначениеИзмененияПоНоменклатуре=Неопределено;
			
	КонецЕсли;
	
	Если НЕ СтатьяОборотов.РазделениеПоКонтрагентам Тогда
		
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ВидИзмененияПоКонтрагентам="";
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ЗначениеИзмененияПоКонтрагентам=Неопределено;
			
	КонецЕсли;
	
	Если НЕ СтатьяОборотов.УчетПоСумме Тогда
		
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ВидИзмененияПоВалюте="";
		ЭлементыФормы.ОборотыПоСтатьямБюджетов.ТекущиеДанные.ЗначениеИзмененияПоВалюте="";
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаписи()
	
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры

Процедура ПоказателиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		
		Элемент.ТекущиеДанные.Код="РО"+Формат(ТекущийИндекс,"ЧЦ=2; ЧВН=");
		
	ИначеЕсли НЕ Элемент.ТекущиеДанные.КодИсточника="" Тогда
		
		СтандартнаяОбработка=Ложь;
		Возврат;
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПоказателиПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если НЕ ДанныеСтроки.КодИсточника="" Тогда
		
		Для Каждого Ячейка ИЗ ОформлениеСтроки.Ячейки Цикл
		
			Ячейка.ТолькоПросмотр=Истина;
		
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры