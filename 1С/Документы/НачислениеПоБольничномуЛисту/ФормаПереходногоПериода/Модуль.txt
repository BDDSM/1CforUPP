////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ПриИзмененииПроцентаОплатыПереходногоПериода()
	
	Если Начисления.Количество() > 0 Тогда
		Начисления.Очистить();
	КонецЕсли;
	Если ОтражениеНачислений.Количество() > 0 Тогда
		ОтражениеНачислений.Очистить();
	КонецЕсли;
	ОбновитьФормуДокумента();
	
КонецПроцедуры

Процедура ОбновитьФормуДокумента()
	
	Оповестить("ОбновитьФорму", Новый Структура("Команда","ОбновитьФорму"), Ссылка);
	                                                                             
КонецПроцедуры // ОбновитьФормуОтраженияВУчете()

Процедура ОбновитьЭлементыФормы()

	ТолькоПросмотр = ВладелецФормы.ТолькоПросмотр Или (ЯвляетсяПродолжениемБолезни И ЗначениеЗаполнено(ПервичныйБольничныйЛист));
	
	СписокПричинНетрудоспособности = Новый СписокЗначений;
	Если ПричинаНетрудоспособности.Пустая() Тогда
		СписокПричинНетрудоспособности.Добавить(Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание);
		СписокПричинНетрудоспособности.Добавить(Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком);
		СписокПричинНетрудоспособности.Добавить(Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам);
		СписокПричинНетрудоспособности.Добавить(Перечисления.ПричиныНетрудоспособности.ТравмаНаПроизводстве);
		СписокПричинНетрудоспособности.Добавить(Перечисления.ПричиныНетрудоспособности.ПособиеПриДолечивании);
		СписокПричинНетрудоспособности.Добавить(Перечисления.ПричиныНетрудоспособности.Карантин);
		СписокПричинНетрудоспособности.Добавить(Перечисления.ПричиныНетрудоспособности.Протезирование);
		СписокПричинНетрудоспособности.Добавить(Перечисления.ПричиныНетрудоспособности.ПоУходуЗаВзрослым);
	ИначеЕсли ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание 
		Или ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком 
		Или ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам Тогда
		СписокПричинНетрудоспособности.Добавить(ПричинаНетрудоспособности);
	ИначеЕсли ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ТравмаВБыту Тогда
		СписокПричинНетрудоспособности.Добавить(Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание);
	ИначеЕсли ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПособиеБезЗаболевания Тогда
		СписокПричинНетрудоспособности.Добавить(Перечисления.ПричиныНетрудоспособности.ПособиеПриДолечивании);
		СписокПричинНетрудоспособности.Добавить(Перечисления.ПричиныНетрудоспособности.Карантин);
		СписокПричинНетрудоспособности.Добавить(Перечисления.ПричиныНетрудоспособности.Протезирование);
		СписокПричинНетрудоспособности.Добавить(Перечисления.ПричиныНетрудоспособности.ПоУходуЗаВзрослым);
	КонецЕсли;
	ЭлементыФормы.ПричинаНетрудоспособностиПереходногоПериода.ДоступныеЗначения = СписокПричинНетрудоспособности;
	ЭлементыФормы.ПричинаНетрудоспособностиПереходногоПериода.ВысотаСпискаВыбора = СписокПричинНетрудоспособности.Количество();
	НадоВводитьСлучайУходаЗаРебенком = ПричинаНетрудоспособностиПереходногоПериода = Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком;
	ЭлементыФормы.СлучайУходаЗаБольнымРебенкомПереходногоПериода.ТолькоПросмотр = Не НадоВводитьСлучайУходаЗаРебенком;
	ЭлементыФормы.СлучайУходаЗаБольнымРебенкомПереходногоПериода.АвтоОтметкаНезаполненного = НадоВводитьСлучайУходаЗаРебенком;
	ЭлементыФормы.СлучайУходаЗаБольнымРебенкомПереходногоПериода.ОтметкаНезаполненного = НадоВводитьСлучайУходаЗаРебенком И СлучайУходаЗаБольнымРебенкомПереходногоПериода.Пустая();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	ОбновитьЭлементыФормы();
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ОбновитьФорму" Тогда
		Если ТипЗнч(Параметр) = Тип("Структура") Тогда
			
			Команда = "";
			Если Параметр.Свойство("Команда",Команда) Тогда  // Источник прислал структуру параметров с командой
				Если Команда = "ОбновитьФорму" и Источник = Ссылка Тогда
					ОбновитьЭлементыФормы();
				Иначе
				КонецЕсли;
			Иначе
			КонецЕсли;
			
		Иначе
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ

Процедура ОсновныеДействияФормыДействиеОК(Кнопка)
	Закрыть();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" причины нетрудоспособности
Процедура ПричинаНетрудоспособностиПереходногоПериодаПриИзменении(Элемент)
	
	НадоВводитьСлучайУходаЗаРебенком = Элемент.Значение = Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком;
    ЭлементыФормы.СлучайУходаЗаБольнымРебенкомПереходногоПериода.ТолькоПросмотр = Не НадоВводитьСлучайУходаЗаРебенком;
    ЭлементыФормы.СлучайУходаЗаБольнымРебенкомПереходногоПериода.АвтоОтметкаНезаполненного = НадоВводитьСлучайУходаЗаРебенком;
    ЭлементыФормы.СлучайУходаЗаБольнымРебенкомПереходногоПериода.ОтметкаНезаполненного = НадоВводитьСлучайУходаЗаРебенком И СлучайУходаЗаБольнымРебенкомПереходногоПериода.Пустая();
	Если Не НадоВводитьСлучайУходаЗаРебенком и Не СлучайУходаЗаБольнымРебенкомПереходногоПериода.Пустая() Тогда
		СлучайУходаЗаБольнымРебенкомПереходногоПериода = Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка()
	КонецЕсли;
	Если Начисления.Количество() > 0 Тогда
		Начисления.Очистить();
	КонецЕсли;
	Если ОтражениеНачислений.Количество() > 0 Тогда
		ОтражениеНачислений.Очистить();
	КонецЕсли;
	
	ОбновитьФормуДокумента();
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" процента оплаты
Процедура ПроцентОплатыПереходногоПериодаПриИзменении(Элемент)
	
	ПриИзмененииПроцентаОплатыПереходногоПериода();
	
КонецПроцедуры

Процедура ПроцентОплатыПереходногоПериодаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ТекущееЗначение = Элемент.Значение;
	Если Направление = 1 Тогда // увеличиваем значение
		Если ТекущееЗначение = 0 Тогда
			Элемент.Значение = 60;
		ИначеЕсли ТекущееЗначение = 60 Тогда
			Элемент.Значение = 80;
		ИначеЕсли ТекущееЗначение = 80 Тогда
			Элемент.Значение = 100;
		Иначе
			// далее увеличивать не будем 
		КонецЕсли;
	Иначе // = -1 - уменьшаем значение
		Если ТекущееЗначение = 100 Тогда
			Элемент.Значение = 80;
		ИначеЕсли ТекущееЗначение = 80 Тогда
			Элемент.Значение = 60;
		Иначе
			// далее уменьшать не будем 
		КонецЕсли;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
	ПриИзмененииПроцентаОплатыПереходногоПериода();
КонецПроцедуры

Процедура ОграничениеПособияПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Элемент.Значение) Тогда
		Элемент.Значение = Перечисления.ВидыОграниченияПособия.БезОграничений;
	КонецЕсли;
	
	Если Начисления.Количество() > 0 Тогда
		Начисления.Очистить();
	КонецЕсли;
	Если ОтражениеНачислений.Количество() > 0 Тогда
		ОтражениеНачислений.Очистить();
	КонецЕсли;
	ОбновитьФормуДокумента();
	
КонецПроцедуры // ОграничениеПособияПриИзменении()