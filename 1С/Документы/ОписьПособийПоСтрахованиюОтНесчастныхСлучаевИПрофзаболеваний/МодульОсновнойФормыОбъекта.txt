// Хранит последнюю установленную дату документа - для проверки перехода документа в другой период
Перем мТекущаяДатаДокумента;
// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;
// Хранит элемент управления подменю печати
Перем мПодменюПечати;
// Хранит элемент управления кнопку печать по умолчанию
Перем мПечатьПоУмолчанию;
// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

// Хранит ссылку на головную организацию
Перем мГоловнаяОрганизация;

////////////////////////////////////////////////////
// Общего назначений

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	мДеревоМакетов = УниверсальныеМеханизмы.ПолучитьДеревоМакетовПечати(Ссылка, ПолучитьСтруктуруПечатныхФорм(), Новый Действие("ОсновныеДействияФормыПечать"), Новый Действие("ОсновныеДействияФормыУстановитьПечатьПоУмолчанию"));
	УниверсальныеМеханизмы.УстановитьПодменюПечати(мПодменюПечати, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов);
	УниверсальныеМеханизмы.УстановитьПечатьПоУмолчанию(мПечатьПоУмолчанию, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов, Метаданные().Имя, Новый Действие("ОсновныеДействияФормыПечатьПоУмолчанию"));
	Если Не мПодменюПечати = Неопределено Тогда
		УниверсальныеМеханизмы.СформироватьПодменю(мДеревоМакетов, мПодменюПечати,Истина,Истина);
	КонецЕсли;
КонецПроцедуры

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ()
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.РаботникиОрганизации, ЭлементыФормы.КоманднаяПанельРаботникиОрганизации.Кнопки.ПодменюЗаполнить);
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧ(Ссылка, СоответствиеТЧ, Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
КонецПроцедуры

Процедура УстановитьЗаголовкиОрганизацийВФорме()
	ЭлементыФормы.НадписьОрганизация.Заголовок = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация:");
	ЭлементыФормы.Организация.Подсказка = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация");
КонецПроцедуры // УстановитьЗаголовкиОрганизацийВФорме()

////////////////////////////////////////////////////
// Обработчики событий формы

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок печати
	УстановитьКнопкиПечати(); // Универсальный механизм печати документов
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ(); // Универсальный механизм подключения процедур заполнения табличных частей
	
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()
	
	Если ЭтоНовый() Тогда
		
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументовПереопределяемый.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"));
		
		Если Не ЗначениеЗаполнено(РегистрационныйНомерФСС) И РаботникиОрганизации.Количество() = 0 И ЗначениеЗаполнено(Организация) Тогда
			ОбменСведениямиОПособияхСФСС.ЗаполнитьДанныеОрганизации(ЭтотОбъект, Ложь);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ТелефонСоставителя) Тогда
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ОбменСведениямиОПособияхСФСС.ДанныеСоставителяРеестра(Ответственный));
		КонецЕсли;
	Иначе
		
		// Установить доступность формы с учетом даты запрета редактирования	
		РаботаСДиалогамиЗК.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
		
	КонецЕсли;
	
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента = Дата;
	// Получим и запомним ссылку на головную организацию
	мГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
	
	ЭлементыФормы.КПП.АвтоОтметкаНезаполненного = ОбщегоНазначенияПереопределяемый.ЭтоЮрЛицо(Организация);
	ЭлементыФормы.КПП.ОтметкаНезаполненного = ЭлементыФормы.КПП.АвтоОтметкаНезаполненного И Не ЗначениеЗаполнено(КПП);
	
	УстановитьЗаголовкиОрганизацийВФорме();
	
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	Если Не РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма) Тогда
		ТекущийЭлемент = ЭлементыФормы.РаботникиОрганизации;
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()
	
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры // ПослеЗаписи()

///////////////////////////////////////////////////
// Обработчики элементов управления

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа.
//
Процедура ДатаПриИзменении(Элемент)

	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	мТекущаяДатаДокумента = Дата;

КонецПроцедуры // ДатаПриИзменении()

Процедура ОрганизацияПриИзменении(Элемент)
	
	Если Не ПустаяСтрока(Номер) Тогда
		
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта( ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
		
	КонецЕсли;
	
	ОбменСведениямиОПособияхСФСС.ЗаполнитьДанныеОрганизации(ЭтотОбъект, Ложь);
	ЭлементыФормы.КПП.АвтоОтметкаНезаполненного = ОбщегоНазначенияПереопределяемый.ЭтоЮрЛицо(Организация);
	ЭлементыФормы.КПП.ОтметкаНезаполненного = ЭлементыФормы.КПП.АвтоОтметкаНезаполненного И Не ЗначениеЗаполнено(КПП);
	мГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
	
КонецПроцедуры

Процедура ОтветственныйПриИзменении(Элемент)
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ОбменСведениямиОПособияхСФСС.ДанныеСоставителяРеестра(Ответственный));
КонецПроцедуры

Процедура КоманднаяПанельРаботникиОрганизацииПоЛисткамНетрудоспособности(Кнопка)
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	Если РаботникиОрганизации.Количество() > 0 Тогда
		ТекстВопроса = "Перед заполнением табличнaя часть будет очищена. Заполнить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
		
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		РаботникиОрганизации.Очистить();
	КонецЕсли;
	
	Автозаполнение();
	
	Если РаботникиОрганизации.Количество() = 0 Тогда
		Сообщить("Не обнаружены данные для записи в документ.", СтатусСообщения.Важное )
	Иначе
		ЭлементыФормы.РаботникиОрганизации.ТекущаяСтрока = РаботникиОрганизации[0]
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельСотрудникиОрганизацииПодбор(Кнопка)
	
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(ЭлементыФормы.РаботникиОрганизации, Ссылка, Ложь, Дата, ОбщегоНазначения.ГоловнаяОрганизация(Организация), 2);

КонецПроцедуры

Процедура ОбновитьДанныеЗЛНажатие(Элемент)
	ТекущаяСтрока = ЭлементыФормы.РаботникиОрганизации.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		Автозаполнение("ДанныеБольничного", ТекущаяСтрока);
	КонецЕсли;
КонецПроцедуры

Процедура ОбновитьДанныеСтрахователяНажатие(Элемент)
	ОбменСведениямиОПособияхСФСС.ЗаполнитьДанныеОрганизации(ЭтотОбъект, Ложь);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ РаботникиОрганизации
 
Процедура РаботникиОрганизацииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) <> Тип("СправочникСсылка.СотрудникиОрганизаций") Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
		
	Если РаботникиОрганизации.НайтиСтроки(Новый Структура("Сотрудник", ВыбранноеЗначение)).Количество() = 0 Тогда
		СтрокаТабличнойЧасти = РаботникиОрганизации.Добавить();
		СтрокаТабличнойЧасти.Сотрудник = ВыбранноеЗначение;
		Автозаполнение("ДанныеСотрудника", СтрокаТабличнойЧасти);
		Если ЭлементыФормы.РаботникиОрганизации.ТекущаяСтрока = Неопределено Тогда
			ЭлементыФормы.РаботникиОрганизации.ТекущаяСтрока = РаботникиОрганизации[0]
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура РаботникиОрганизацииСотрудникПриИзменении(Элемент)
	ТекущаяСтрока = ЭлементыФормы.РаботникиОрганизации.ТекущаяСтрока;
	ТекущийБольничный = ТекущаяСтрока.ЛистокНетрудоспособности;
	Автозаполнение("ДанныеСотрудника", ТекущаяСтрока);
	Если ОбщегоНазначения.ПолучитьЗначениеРеквизита(ТекущийБольничный, "Сотрудник") <> Элемент.Значение Тогда
		ТекущаяСтрока.ЛистокНетрудоспособности = "";
	КонецЕсли;
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода физлица
// переопеределим выбор физлица на выбор из списка регистра сведений
//
Процедура РаботникиОрганизацииСотрудникНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(Элемент, Ссылка, Истина, Дата, мГоловнаяОрганизация, 2, СтандартнаяОбработка, Элемент.Значение);
	
КонецПроцедуры // СотрудникНачалоВыбора()

// Процедура - обработчик события "АвтоПодборТекста" поля ввода физлица
// переопеределим выбор физлица на выбор из списка регистра сведений
//
Процедура РаботникиОрганизацииСотрудникАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	ТекстАвтоПодбора = ПроцедурыУправленияПерсоналомПереопределяемый.ПодобратьФИОСотрудника(СтандартнаяОбработка, 2, Текст, Организация);
	
КонецПроцедуры // СотрудникАвтоПодборТекста()

// Процедура - обработчик события "ОкончаниеВводаТекста" поля ввода физлица
// переопеределим выбор физлица на выбор из списка регистра сведений
//
Процедура РаботникиОрганизацииСотрудникОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	Значение = ПроцедурыУправленияПерсоналомПереопределяемый.ПодобратьСписокСотрудников(СтандартнаяОбработка, 2, Текст, Организация);
	
КонецПроцедуры // СотрудникОкончаниеВводаТекста()

Процедура РаботникиОрганизацииЛистокНетрудоспособностиПриИзменении(Элемент)
	Автозаполнение("ДанныеБольничного", ЭлементыФормы.РаботникиОрганизации.ТекущаяСтрока);
КонецПроцедуры

Процедура РаботникиОрганизацииЛистокНетрудоспособностиНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущаяСтрока = ЭлементыФормы.РаботникиОрганизации.ТекущаяСтрока;
	ФормаВыбораБольничногоЛиста = Документы.НачислениеПоБольничномуЛисту.ПолучитьФормуВыбора(, Элемент, ТекущаяСтрока);
	
	Если ЗначениеЗаполнено(ТекущаяСтрока.Сотрудник) Тогда
		ФормаВыбораБольничногоЛиста.Отбор.Сотрудник.Установить(ТекущаяСтрока.Сотрудник);
	КонецЕсли;
	Если ЗначениеЗаполнено(Организация) Тогда
		ФормаВыбораБольничногоЛиста.Отбор.Организация.Установить(Организация);
	КонецЕсли;
	
	ФормаВыбораБольничногоЛиста.Отбор.Проведен.Установить(Истина);
	
	ФормаВыбораБольничногоЛиста.Отбор.ПричинаНетрудоспособности.ВидСравнения = ВидСравнения.Равно;
	ФормаВыбораБольничногоЛиста.Отбор.ПричинаНетрудоспособности.Значение = Перечисления.ПричиныНетрудоспособности.ТравмаНаПроизводстве;
	ФормаВыбораБольничногоЛиста.Отбор.ПричинаНетрудоспособности.Использование = Истина;
	
	ФормаВыбораБольничногоЛиста.Отбор.ПериодРегистрации.ВидСравнения = ВидСравнения.БольшеИлиРавно;
	ФормаВыбораБольничногоЛиста.Отбор.ПериодРегистрации.Значение = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, "ДатаПередачиФССВыплатыПособий");
	ФормаВыбораБольничногоЛиста.Отбор.ПериодРегистрации.Использование = Истина;
	
	ФормаВыбораБольничногоЛиста.НачальноеЗначениеВыбора = Элемент.Значение;
	ФормаВыбораБольничногоЛиста.Порядок.Установить("Дата Убыв");
	ФормаВыбораБольничногоЛиста.Открыть();
	
КонецПроцедуры


///////////////////////////////////////////////////
// Универсальные механизмы

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)
	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);
КонецПроцедуры // ДействияФормыДействиеОткрытьСвойства()

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)
	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);
КонецПроцедуры // ДействияФормыДействиеОткрытьКатегории()

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		УстановитьКнопкиПечати();
	КонецЕсли; 
КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя, "Имя", Истина), ЭтотОбъект);
КонецПроцедуры