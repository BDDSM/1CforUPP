// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента;
Перем мТекущаяОрганизацияДокумента;

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа.
//
Процедура ДатаПриИзменении(Элемент)

	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	мТекущаяДатаДокумента = Дата; // запомним текущую дату документа для контроля номера документа

	УстановитьВидимость();
	
КонецПроцедуры // ДатаПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля ввода организации.
//
Процедура ОрганизацияПриИзменении(Элемент)

	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;

КонецПроцедуры // ОрганизацияПриИзменении()

Процедура ОрганизацияНачалоВыбора(Элемент, СтандартнаяОбработка)

	мТекущаяОрганизацияДокумента = Организация;

КонецПроцедуры

Процедура ПриОткрытии()

	
	Если НЕ ЭтоНовый() Тогда 
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	КонецЕсли;
	
	Если ЭтоНовый() Тогда

		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, "Продажа");

	КонецЕсли;

	мТекущаяДатаДокумента = Дата;
	
	РаботаСДиалогами.УстановитьВидимостьХарактеристикиНоменклатуры(ЭлементыФормы.ПартииТоваровНаСкладах.Колонки);
	РаботаСДиалогами.УстановитьВидимостьХарактеристикиНоменклатуры(ЭлементыФормы.ПартииТоваровПереданные.Колонки);
	РаботаСДиалогами.УстановитьВидимостьСерииНоменклатуры(ЭлементыФормы.ПартииТоваровНаСкладах.Колонки);
	
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	УстановитьВидимость();
	
	// Установить активный реквизит.
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
КонецПроцедуры

Процедура УстановитьВидимость()
	
	ЭлементыФормы.РасходыУСН.Страницы.НМА.Видимость = (Дата < Дата("20051231")) ИЛИ (РасходыНМА.Количество() > 0);
		
КонецПроцедуры

Процедура ДействияФормыРедактироватьНомер(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
КонецПроцедуры
// Процедура вызова структуры подчиненности документа
//
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
	
КонецПроцедуры

Процедура ПервоначальныеСведенияОСОсновноеСредствоПриИзменении(Элемент)
	
	СтрокаТЧ = ЭлементыФормы.ПервоначальныеСведенияОС.ТекущиеДанные;
	
	Если НЕ ЗначениеЗаполнено(СтрокаТЧ.ОсновноеСредство) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство", СтрокаТЧ.ОсновноеСредство);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.ОсновноеСредство,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.ПервоначальнаяСтоимостьУСН,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.СуммаНачисленнойАмортизации,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.СрокПолезногоИспользования,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.ДатаПриобретения,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.ПорядокВключенияСтоимостиВСоставРасходовУСН
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчетУСН.СрезПоследних(&Дата, Организация = &Организация И ОсновноеСредство = &ОсновноеСредство) КАК ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних";
	
	ОС = Запрос.Выполнить().Выгрузить();
	Если ОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаТЧ.ПервоначальнаяСтоимостьУСН = ОС[0].ПервоначальнаяСтоимостьУСН;
	СтрокаТЧ.СуммаНачисленнойАмортизации = ОС[0].СуммаНачисленнойАмортизации;
	СтрокаТЧ.СрокПолезногоИспользования = ОС[0].СрокПолезногоИспользования;
	СтрокаТЧ.ДатаПриобретения = ОС[0].ДатаПриобретения;
	СтрокаТЧ.ПорядокВключенияСтоимостиВСоставРасходовУСН = ОС[0].ПорядокВключенияСтоимостиВСоставРасходовУСН;
	
КонецПроцедуры

Процедура ПервоначальныеСведенияНМАНематериальныйАктивПриИзменении(Элемент)
	
	СтрокаТЧ = ЭлементыФормы.ПервоначальныеСведенияНМА.ТекущиеДанные;
	
	Если НЕ ЗначениеЗаполнено(СтрокаТЧ.НематериальныйАктив) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НематериальныйАктив", СтрокаТЧ.НематериальныйАктив);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияНМАНалоговыйУчетУСНСрезПоследних.НематериальныйАктив,
	|	ПервоначальныеСведенияНМАНалоговыйУчетУСНСрезПоследних.ПервоначальнаяСтоимостьУСН,
	|	ПервоначальныеСведенияНМАНалоговыйУчетУСНСрезПоследних.СуммаНачисленнойАмортизации,
	|	ПервоначальныеСведенияНМАНалоговыйУчетУСНСрезПоследних.СрокПолезногоИспользования,
	|	ПервоначальныеСведенияНМАНалоговыйУчетУСНСрезПоследних.ДатаПриобретения,
	|	ПервоначальныеСведенияНМАНалоговыйУчетУСНСрезПоследних.ПорядокВключенияСтоимостиВСоставРасходовУСН
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчетУСН.СрезПоследних(&Дата, Организация = &Организация И НематериальныйАктив = &НематериальныйАктив) КАК ПервоначальныеСведенияНМАНалоговыйУчетУСНСрезПоследних";
	
	НМА = Запрос.Выполнить().Выгрузить();
	Если НМА.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаТЧ.ПервоначальнаяСтоимостьУСН = НМА[0].ПервоначальнаяСтоимостьУСН;
	СтрокаТЧ.СуммаНачисленнойАмортизации = НМА[0].СуммаНачисленнойАмортизации;
	СтрокаТЧ.СрокПолезногоИспользования = НМА[0].СрокПолезногоИспользования;
	СтрокаТЧ.ДатаПриобретения = НМА[0].ДатаПриобретения;
	СтрокаТЧ.ПорядокВключенияСтоимостиВСоставРасходовУСН = НМА[0].ПорядокВключенияСтоимостиВСоставРасходовУСН;
	
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

Процедура ПослеЗаписи()
	
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры