////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента; 
Перем мСведенияОСтатьяхЗатрат;  // для получения сведений о статьях затрат на время работы формы

// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;

// Хранит элемент управления подменю печати
Перем мПодменюПечати;

// Хранит элемент управления кнопку печать по умолчанию
Перем мПечатьПоУмолчанию;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.ОтражениеВУчете,ЭлементыФормы.КоманднаяПанельОтражениеВУчете);
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧ(Ссылка, СоответствиеТЧ, Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
КонецПроцедуры

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	
	мДеревоМакетов = УниверсальныеМеханизмы.ПолучитьДеревоМакетовПечати(Ссылка, Неопределено, Новый Действие("ОсновныеДействияФормыПечать"), Новый Действие("ОсновныеДействияФормыУстановитьПечатьПоУмолчанию"));

	УниверсальныеМеханизмы.УстановитьПодменюПечати    (мПодменюПечати, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов);
	УниверсальныеМеханизмы.УстановитьПечатьПоУмолчанию(мПечатьПоУмолчанию, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов, Метаданные().Имя,Новый Действие("ОсновныеДействияФормыПечатьПоУмолчанию"));

	Если Не мПодменюПечати = Неопределено Тогда
		УниверсальныеМеханизмы.СформироватьПодменю(мДеревоМакетов, мПодменюПечати,Истина,Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыСуммамиКРаспределению()
	
	Зарплата	= 0;
	ЕСН			= 0;
	НДФЛ		= 0;
	
	Для Каждого Затрата Из СуммыКРаспределению Цикл
		Если Затрата.КатегорияЗатраты = Перечисления.КатегорииЗатраты.Зарплата Тогда
			Зарплата	= Затрата.Сумма;
			
		ИначеЕсли Затрата.КатегорияЗатраты = Перечисления.КатегорииЗатраты.ЕСН Тогда
			ЕСН			= Затрата.Сумма;
			
		ИначеЕсли Затрата.КатегорияЗатраты = Перечисления.КатегорииЗатраты.НДФЛ Тогда
			НДФЛ		= Затрата.Сумма;
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьВидимостьРеквизитовОтМетодаПланированияУчетаЗатрат()
	
	КассовыйМетод = мМетодПланированияУчетаЗатрат = Перечисления.МетодыПланированияУчетаЗатратНаПерсонал.КассовыйМетодБезВыделенияНалогов
					ИЛИ мМетодПланированияУчетаЗатрат = Перечисления.МетодыПланированияУчетаЗатратНаПерсонал.КассовыйМетодСВыделениемНалогов;
	
	Если КассовыйМетод Тогда
		КассовыйМетодБезВыделенияНалогов = мМетодПланированияУчетаЗатрат = Перечисления.МетодыПланированияУчетаЗатратНаПерсонал.КассовыйМетодБезВыделенияНалогов;
		
		ЭлементыФормы.НадписьЕСН.Видимость	= НЕ КассовыйМетодБезВыделенияНалогов;
		ЭлементыФормы.ЕСН.Видимость			= НЕ КассовыйМетодБезВыделенияНалогов;
		ЭлементыФормы.НадписьНДФЛ.Видимость	= НЕ КассовыйМетодБезВыделенияНалогов;
		ЭлементыФормы.НДФЛ.Видимость		= НЕ КассовыйМетодБезВыделенияНалогов;
		
		ЭлементыФормы.ПолеКартинкиИнформацияНалоги.Видимость	= КассовыйМетодБезВыделенияНалогов;
		ЭлементыФормы.НадписьИнформацияНалоги.Видимость			= КассовыйМетодБезВыделенияНалогов;
		ЭлементыФормы.НадписьСправка.Видимость					= КассовыйМетодБезВыделенияНалогов;
		
	Иначе
		ЭлементыФормы.ПанельКассовыйМетод.Свертка = РежимСверткиЭлементаУправления.Верх;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСуммуКРаспределению(КатегорияЗатраты, Сумма)
	
	СтрокаТЧ = СуммыКРаспределению.Найти(КатегорияЗатраты, "КатегорияЗатраты");
	Если СтрокаТЧ <> Неопределено Тогда
		СуммыКРаспределению.Удалить(СтрокаТЧ);
	КонецЕсли;
	Если Сумма > 0 Тогда
		СтрокаТЧ = СуммыКРаспределению.Добавить();
		СтрокаТЧ.КатегорияЗатраты	= КатегорияЗатраты;
		СтрокаТЧ.Сумма				= Сумма;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьВидимость()
	
	ЭлементыФормы.ОтражениеВУчете.Колонки.Проект.Видимость = УправлениеПроектами.ИспользоватьРаспределениеЗатратПоПроектам();
	
КонецПроцедуры // УстановитьВидимость()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
КонецПроцедуры // ПередОткрытием()

Процедура ПриОткрытии()
	
	Если НЕ ЭтоНовый() Тогда 
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	КонецЕсли;
	
	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ
		
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументовПереопределяемый.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"));
		
	Иначе
		// Установить доступность формы с учетом даты запрета редактирования	
		РаботаСДиалогамиЗК.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
		
		ЗаполнитьРеквизитыСуммамиКРаспределению();
		
	КонецЕсли;
	
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	УчетРасходовНаПерсоналПереопределяемый.ПриОткрытииФормыДокументаПланированияУчетаЗатратДополнительно(ЭтаФорма, ЭлементыФормы.ОтражениеВУчете);

	УстановитьВидимостьРеквизитовОтМетодаПланированияУчетаЗатрат();
	
	// Заполним реквизит формы МесяцСтрока.
	МесяцСтрока = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодРегистрации);
	
	СтруктураКолонок = Новый Структура();

	// Установить колонки, видимостью которых пользователь управлять не может.
	СтруктураКолонок.Вставить("КатегорияЗатраты");
	СтруктураКолонок.Вставить("Подразделение");
	СтруктураКолонок.Вставить("СтатьяЗатрат");
	СтруктураКолонок.Вставить("Сумма");

	// Установить ограничение - изменять видимость колонок для табличной части ОтражениеВУчете
	ОбработкаТабличныхЧастей.УстановитьИзменятьВидимостьКолонокТабЧасти(ЭлементыФормы.ОтражениеВУчете.Колонки, СтруктураКолонок);

	// Активизируем табличную часть
	ТекущийЭлемент = ЭлементыФормы.ОтражениеВУчете;

	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента = Дата;
	
	// Установить активный реквизит.
	Если Не РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма) Тогда
		ТекущийЭлемент = ЭлементыФормы.ОтражениеВУчете;
	КонецЕсли;
	
	ПредставлениеПериодаРегистрации = РаботаСДиалогами.ПолучитьПредставлениеПериодаРегистрации(ПериодРегистрации);
	УстановитьВидимость();

	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	// Создать кнопки печати
	ФормированиеПечатныхФорм.СоздатьКнопкиПечати(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура ПослеЗаписи()

	// Установка кнопок печати
	УстановитьКнопкиПечати();
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура КнопкаЗаполнитьНажатие(Элемент)
	
	Если ОтражениеВУчете.Количество() > 0 Тогда
	
		ТекстВопроса = "Перед заполнением табличная часть будут очищена. Заполнить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
		
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ОтражениеВУчете.Очистить();
	
	Автозаполнение();
	
	Если ОтражениеВУчете.Количество() = 0 Тогда
		Сообщить("Не обнаружены данные для записи в табличную часть документа.", СтатусСообщения.Важное);
	КонецЕсли;
	
КонецПроцедуры

Процедура КнопкаРассчитатьНажатие(Элемент)
	
	РаспределитьПоКассовомуМетоду();
	
	ЗаполнитьРеквизитыСуммамиКРаспределению();
	
КонецПроцедуры

Процедура НадписьСправкаНажатие(Элемент)
	
	ОткрытьСправку(Метаданные.Документы.ОтражениеЗарплатыВУпрУчете);
	
КонецПроцедуры

Процедура КнопкаОчиститьНажатие(Кнопка)
	
	Если ОтражениеВУчете.Количество() > 0 Тогда
		ТекстВопроса = "Табличная часть будет очищена. Продолжить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
		
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		
		ОтражениеВУчете.Очистить();
	КонецЕсли;
	
КонецПроцедуры

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
			
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		
		УстановитьКнопкиПечати();
		
	КонецЕсли; 
	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа.
//
Процедура ДатаПриИзменении(Элемент)

	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	мТекущаяДатаДокумента = Дата;

КонецПроцедуры // ДатаПриИзменении

// Процедура - обработчик события "ПриИзменении" поля ввода периода регистрации.
//
Процедура ПериодРегистрацииПриИзменении(Элемент)
	
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(Элемент.Значение, ПериодРегистрации);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодРегистрации);
	
КонецПроцедуры

// Процедура - обработчик события "Регулирование" поля ввода периода регистрации.
//
Процедура ПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ПериодРегистрации = ДобавитьМесяц(ПериодРегистрации, Направление);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодРегистрации);
	
КонецПроцедуры

// Процедура - обработчик события "Очистка" поля ввода периода регистрации.
//
Процедура ПериодРегистрацииОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбораИзСписка" поля ввода периода регистрации.
//
Процедура ПериодРегистрацииНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, ПериодРегистрации, ЭтаФорма);
КонецПроцедуры

// Процедура - обработчик события "АвтоПодборТекста" поля ввода периода регистрации.
//
Процедура ПериодРегистрацииАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	РаботаСДиалогами.ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);
КонецПроцедуры

// Процедура - обработчик события "ОкончаниеВводаТекста" поля ввода периода регистрации.
//
Процедура ПериодРегистрацииОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	РаботаСДиалогами.ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка);
КонецПроцедуры

Процедура ЗарплатаПриИзменении(Элемент)
	
	ЗаполнитьСуммуКРаспределению(Перечисления.КатегорииЗатраты.Зарплата, Элемент.Значение);
	
КонецПроцедуры

Процедура ЕСНПриИзменении(Элемент)
	
	ЗаполнитьСуммуКРаспределению(Перечисления.КатегорииЗатраты.ЕСН, Элемент.Значение);
	
КонецПроцедуры

Процедура НДФЛПриИзменении(Элемент)
	
	ЗаполнитьСуммуКРаспределению(Перечисления.КатегорииЗатраты.НДФЛ, Элемент.Значение);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ОтражениеВУчете

Процедура ОтражениеВУчетеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Не Копирование Тогда
		ДанныеСтроки = Элемент.ТекущиеДанные;
		ДанныеСтроки.КатегорияЗатраты	= Перечисления.КатегорииЗатраты.Зарплата;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтражениеВУчетеПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	СведенияОСтатьеЗатрат = БухгалтерскийУчет.ПолучитьСведенияОСтатьеЗатрат(мСведенияОСтатьяхЗатрат, ДанныеСтроки.СтатьяЗатрат);
	ОформлениеСтроки.Ячейки.СпособРаспределенияЗатрат.ТолькоПросмотр = Не (СведенияОСтатьеЗатрат <> Неопределено и СведенияОСтатьеЗатрат.ХарактерЗатрат = Перечисления.ХарактерЗатрат.ПроизводственныеРасходы);
	ОформлениеСтроки.Ячейки.ОбъектСтроительства.ТолькоПросмотр = Не (СведенияОСтатьеЗатрат <> Неопределено и СведенияОСтатьеЗатрат.ХарактерЗатрат = Перечисления.ХарактерЗатрат.ВложенияВоВнеоборотныеАктивы);
	УправлениеПроектами.УстановитьДоступностьПроектаВСтрокеТабЧасти(СведенияОСтатьеЗатрат.ХарактерЗатрат, ОформлениеСтроки, ЭлементыФормы.ОтражениеВУчете);

КонецПроцедуры

Процедура ОтражениеВУчетеСтатьяЗатратПриИзменении(Элемент)
	СведенияОСтатьеЗатрат = БухгалтерскийУчет.ПолучитьСведенияОСтатьеЗатрат(мСведенияОСтатьяхЗатрат, Элемент.Значение);
	Если Не (СведенияОСтатьеЗатрат <> Неопределено и СведенияОСтатьеЗатрат.ХарактерЗатрат = Перечисления.ХарактерЗатрат.ПроизводственныеРасходы) Тогда
	    ЭлементыФормы.ОтражениеВУчете.ТекущаяСтрока.СпособРаспределенияЗатрат = ""
	КонецЕсли;	
	Если Не (СведенияОСтатьеЗатрат <> Неопределено и СведенияОСтатьеЗатрат.ХарактерЗатрат = Перечисления.ХарактерЗатрат.ВложенияВоВнеоборотныеАктивы) Тогда
	    ЭлементыФормы.ОтражениеВУчете.ТекущаяСтрока.ОбъектСтроительства = ""
	КонецЕсли;
	СтрокаТабличнойЧасти = ЭлементыФормы.ОтражениеВУчете.ТекущиеДанные;
	Если ЭлементыФормы.ОтражениеВУчете.Колонки.Проект.Видимость Тогда
		УправлениеПроектами.УстановитьПроектПоУмолчанию(СтрокаТабличнойЧасти.Подразделение, СтрокаТабличнойЧасти.СтатьяЗатрат, СтрокаТабличнойЧасти.Проект);
	КонецЕсли;
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода "Проект"
//
Процедура ОтражениеВУчетеПроектНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	УправлениеПроектами.НачалоВыбораПроекта( ЭтаФорма, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры // ОтражениеВУчетеПроектНачалоВыбора()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мСведенияОСтатьяхЗатрат = Новый Соответствие;