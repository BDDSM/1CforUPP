Перем ПорядокСортировкиВидовВремени;


Процедура СортироватьЗначенияВВыбранномСпискеВидовВремени()
	
	Для Каждого ЭлементСписка Из ВыбранныеВидыВремени Цикл
		ИндексВМассиве = ПорядокСортировкиВидовВремени.Найти(ЭлементСписка.Значение);
		Если ИндексВМассиве = Неопределено Тогда
			ЭлементСписка.Представление = 21345;
		Иначе
			ЭлементСписка.Представление = Прав("000" + Строка(ИндексВМассиве), 3);
		КонецЕсли;
	КонецЦикла;
	ВыбранныеВидыВремени.СортироватьПоПредставлению();
	Для Каждого ЭлементСписка Из ВыбранныеВидыВремени Цикл
		ЭлементСписка.Представление = "";
	КонецЦикла
КонецПроцедуры // СортироватьЗначенияВВыбранномСпискеВидовВремени()

Процедура ВсеВидыВремениПриИзмененииФлажка(Элемент)
	РедактируемоеЗначение = Элемент.ТекущаяСтрока.Значение;
	Если Элемент.ТекущаяСтрока.Пометка Тогда
		Если ВыбранныеВидыВремени.Количество() > 5 Тогда
			Предупреждение("Число видов времени не должно превышать 6!");
			Элемент.ТекущаяСтрока.Пометка = Ложь;
		ИначеЕсли ВыбранныеВидыВремени.НайтиПоЗначению(РедактируемоеЗначение) = Неопределено Тогда
			ВыбранныеВидыВремени.Добавить(РедактируемоеЗначение, Элемент.ТекущаяСтрока.Представление);
		КонецЕсли;
	Иначе
		УдаляемоеЗначение = ВыбранныеВидыВремени.НайтиПоЗначению(РедактируемоеЗначение);
		Если УдаляемоеЗначение <> Неопределено Тогда
			ВыбранныеВидыВремени.Удалить(УдаляемоеЗначение);
		КонецЕсли;
	КонецЕсли;
	СортироватьЗначенияВВыбранномСпискеВидовВремени();
КонецПроцедуры

Процедура ПриОткрытии()
	
	
	
	// Заполнение списка ВсеВидыВремени
	//Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("ВыбранныеВидыВремени", ВыбранныеВидыВремени);
	//Запрос.Текст = "ВЫБРАТЬ
	//|	КлассификаторИспользованияРабочегоВремени.Ссылка,
	//|	ПРЕДСТАВЛЕНИЕ(КлассификаторИспользованияРабочегоВремени.Ссылка) КАК Представление,
	//|	ВЫБОР
	//|		КОГДА КлассификаторИспользованияРабочегоВремени.Ссылка В (&ВыбранныеВидыВремени)
	//|			ТОГДА ИСТИНА
	//|		ИНАЧЕ ЛОЖЬ
	//|	КОНЕЦ КАК Пометка
	//|ИЗ
	//|	Справочник.КлассификаторИспользованияРабочегоВремени КАК КлассификаторИспользованияРабочегоВремени
	//|ГДЕ
	//|	КлассификаторИспользованияРабочегоВремени.ПометкаУдаления = ЛОЖЬ
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	ВЫБОР
	//|		КОГДА КлассификаторИспользованияРабочегоВремени.Ссылка = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Работа)
	//|			ТОГДА 1
	//|		КОГДА КлассификаторИспользованияРабочегоВремени.Ссылка = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.РаботаНочныеЧасы)
	//|			ТОГДА 2
	//|		КОГДА КлассификаторИспользованияРабочегоВремени.Ссылка = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.НеявкиПоНевыясненнымПричинам)
	//|			ТОГДА 3
	//|		КОГДА КлассификаторИспользованияРабочегоВремени.Ссылка = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ОсновнойОтпуск)
	//|			ТОГДА 4
	//|		КОГДА КлассификаторИспользованияРабочегоВремени.Ссылка = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Командировка)
	//|			ТОГДА 5
	//|		КОГДА КлассификаторИспользованияРабочегоВремени.Ссылка = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Сверхурочные)
	//|			ТОГДА 6
	//|		КОГДА КлассификаторИспользованияРабочегоВремени.Ссылка = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Праздники)
	//|			ТОГДА 7
	//|		ИНАЧЕ 100
	//|	КОНЕЦ";
	//Выборка = Запрос.Выполнить().Выбрать();
	//
	//Пока Выборка.Следующий() Цикл
	//	ПорядокСортировкиВидовВремени.Добавить(Выборка.Ссылка);
	//	ВсеВидыВремени.Добавить(Выборка.Ссылка, Выборка.Представление, Выборка.Пометка);
	//КонецЦикла;
	Для Каждого ЭлементСписка Из ВыбранныеВидыВремени Цикл
		НайденныйЭлемент = ВсеВидыВремени.НайтиПоЗначению(ЭлементСписка.Значение);
		Если НайденныйЭлемент <> Неопределено Тогда
			НайденныйЭлемент.Пометка = Истина;
		КонецЕсли;
	КонецЦикла;
	ПорядокСортировкиВидовВремени = ВсеВидыВремени.ВыгрузитьЗначения();
	СортироватьЗначенияВВыбранномСпискеВидовВремени();
КонецПроцедуры

Процедура ОсновныеДействияФормыСохранить(Кнопка)
	Закрыть(ВыбранныеВидыВремени);
КонецПроцедуры

Процедура ВсеВидыВремениВыбор(Элемент, ЭлементСписка)
	ЭлементСписка.Значение.ПолучитьФорму().Открыть();
КонецПроцедуры

Процедура ВыбранныеВидыВремениВыбор(Элемент, ЭлементСписка)
	ЭлементСписка.Значение.ПолучитьФорму().Открыть();
КонецПроцедуры

Процедура ВыбранныеВидыВремениПриАктивизацииСтроки(Элемент)
	Если ЭлементыФормы.ВыбранныеВидыВремени.ТекущаяСтрока <> Неопределено Тогда
		ТекущийЭлементСписка = ВсеВидыВремени.НайтиПоЗначению(ЭлементыФормы.ВыбранныеВидыВремени.ТекущаяСтрока.Значение);
		Если ТекущийЭлементСписка <> Неопределено Тогда
			ЭлементыФормы.ВсеВидыВремени.ТекущаяСтрока = ТекущийЭлементСписка;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры



ПорядокСортировкиВидовВремени = Новый Массив;