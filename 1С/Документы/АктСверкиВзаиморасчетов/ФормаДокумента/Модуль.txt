// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента;

Перем мСтараяОрганизация;
Перем мСтарыйКонтрагент;
Перем мСтарыйДоговор;
Перем мСтараяСделка;

Процедура ДействияФормыРедактироватьНомер(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
КонецПроцедуры
Функция ОчиститьТабличныеЧасти()

	Если ПоДаннымКонтрагента.Количество() > 0 ИЛИ ПоДаннымОрганизации.Количество() > 0 Тогда

		ТекстВопроса = "Табличные части ""По данным организации"" и ""По данным контрагента"" будут очищены. Продолжить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат Ложь;
		КонецЕсли; 

		ПоДаннымОрганизации.Очистить();
		ПоДаннымКонтрагента.Очистить();
		
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка,Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.ПоДаннымОрганизации,ЭлементыФормы.КоманднаяПанельПоДаннымОрганизации.Кнопки.ПодменюЗаполнить);
	СоответствиеТЧ.Вставить(ЭлементыФормы.ПоДаннымКонтрагента,ЭлементыФормы.КоманднаяПанельПоДаннымКонтрагента.Кнопки.ПодменюЗаполнить);
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧПоДеревуКнопок(мКнопкиЗаполненияТЧ,СоответствиеТЧ);
	
КонецПроцедуры

Процедура УстановитьВидимость()

КонецПроцедуры

Процедура УстановитьДоступность()
	
	Если СверкаСогласована Тогда
		ЭлементыФормы.Контрагент.Доступность          = Ложь;
		ЭлементыФормы.ДоговорКонтрагента.Доступность  = Ложь;
		ЭлементыФормы.Сделка.Доступность              = Ложь;
		ЭлементыФормы.ВалютаДокумента.Доступность 	  = ложь;
		ЭлементыФормы.ОстатокНаНачало.Доступность     = Ложь;
		ЭлементыФормы.ДатаНачала.Доступность 		  = ложь;
		ЭлементыФормы.ДатаОкончания.Доступность 	  = ложь;
		ЭлементыФормы.КнопкаНастройкаПериода.Доступность = ложь;
		
		ЭлементыФормы.КоманднаяПанельПоДаннымОрганизации.Доступность	= Ложь;
		ЭлементыФормы.КоманднаяПанельПоДаннымКонтрагента.Доступность	= Ложь;
	Иначе
		ЭлементыФормы.Контрагент.Доступность          = Истина;
		ЭлементыФормы.ДоговорКонтрагента.Доступность  = Истина;
		Если ДоговорКонтрагента.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоДоговоруВЦелом Тогда
			ЭлементыФормы.Сделка.Доступность = Ложь;
		Иначе
			ЭлементыФормы.Сделка.Доступность = Истина;
		КонецЕсли;
		ЭлементыФормы.ВалютаДокумента.Доступность 	  = Истина;
		ЭлементыФормы.ОстатокНаНачало.Доступность     = Истина;
		ЭлементыФормы.ДатаНачала.Доступность 		  = Истина;
		ЭлементыФормы.ДатаОкончания.Доступность 	  = Истина;
		ЭлементыФормы.КнопкаНастройкаПериода.Доступность = Истина;
		
		ЭлементыФормы.КоманднаяПанельПоДаннымОрганизации.Доступность    = Истина;
		ЭлементыФормы.КоманднаяПанельПоДаннымКонтрагента.Доступность    = Истина;
	КонецЕсли;
	
	ЭлементыФормы.Организация.Доступность = не СверкаСогласована;

	ЭлементыФормы.ПоДаннымКонтрагента.ТолькоПросмотр = СверкаСогласована;
	ЭлементыФормы.ПоДаннымОрганизации.ТолькоПросмотр = СверкаСогласована;
	ЭлементыФормы.СписокСчетов.ТолькоПросмотр 		 = СверкаСогласована;
	
	ЭлементыФормы.КоманднаяПанельСписокСчетов.Доступность = не СверкаСогласована;

КонецПроцедуры

Процедура УстановитьПодписиВалют()
	
	Если НЕ ЗначениеЗаполнено(ВалютаДокумента) Тогда
		ПодписьВалюты = "("+СокрЛП(Строка(мВалютаРегламентированногоУчета))+")";
	Иначе
		ПодписьВалюты = "("+СокрЛП(Строка(ВалютаДокумента))+")";
	КонецЕсли; 
	
	ЭлементыФормы.ПоДаннымОрганизации.Колонки.Дебет.ТекстШапки = "Дебет "+ПодписьВалюты;
	ЭлементыФормы.ПоДаннымОрганизации.Колонки.Кредит.ТекстШапки = "Кредит "+ПодписьВалюты;
	
	ЭлементыФормы.ПоДаннымКонтрагента.Колонки.Дебет.ТекстШапки = "Дебет "+ПодписьВалюты;
	ЭлементыФормы.ПоДаннымКонтрагента.Колонки.Кредит.ТекстШапки = "Кредит "+ПодписьВалюты;
	
	ЭлементыФормы.НадписьОстатки.Значение = "Остатки "+ПодписьВалюты+":";
	ЭлементыФормы.НадписьОстаткиКонтрагент.Значение = "Остатки "+ПодписьВалюты+":";
	
КонецПроцедуры	

Процедура ПересчитатьОстатки()

	ОстатокНаКонец = ОстатокНаНачало + ПоДаннымОрганизации.Итог("Дебет") -  ПоДаннымОрганизации.Итог("Кредит");
	ЭлементыФормы.ОстатокНаНачалоКонтрагент.Значение = - ОстатокНаНачало;
	ЭлементыФормы.ОстатокНаКонец.Значение = ОстатокНаКонец;
	
	ОстатокНаКонецКонтрагент = - ОстатокНаНачало + ПоДаннымКонтрагента.Итог("Дебет") -  ПоДаннымКонтрагента.Итог("Кредит");
	ЭлементыФормы.ОстатокНаКонецКонтрагент.Значение = ОстатокНаКонецКонтрагент;
	
	Если Расхождение <> ОстатокНаКонец + ОстатокНаКонецКонтрагент Тогда
		Расхождение = ОстатокНаКонец + ОстатокНаКонецКонтрагент;
	КонецЕсли; 
	ЭлементыФормы.Расхождение.Значение = Расхождение;
	
	ЭлементыФормы.РасхождениеКонтрагент.Значение = Расхождение*(-1);

КонецПроцедуры

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	
	Если НЕ ЭтоНовый() Тогда 
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	КонецЕсли;
	
	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ

		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, "Продажа");
		//Заполнить таблицу счетов значениями по умолчанию
		ЗаполнитьСписокСчетовЗначениямиПоУмолчанию();
		
	КонецЕсли;

	мТекущаяДатаДокумента        = Дата;
	
	// Подписать колонки и реквизиты остатков.
	УстановитьПодписиВалют();
	
	// Вывести в заголовке формы вид операции.
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	// Пересчитать конечные остатки и расхождение
	ПересчитатьОстатки();
	
	УстановитьДоступность();
	
	мСтараяОрганизация = Организация;
	мСтарыйКонтрагент  = Контрагент;
	мСтарыйДоговор     = ДоговорКонтрагента;
	мСтараяСделка      = Сделка;
	
	//УстановитьДополнительныеКнопки(ЭтаФорма,ЭлементыФормы.ОсновныеДействияФормы,ЭлементыФормы.ДействияФормы,Истина);
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	// Создать кнопки печати
	ФормированиеПечатныхФорм.СоздатьКнопкиПечати(ЭтотОбъект, ЭтаФорма);
	
	// Установить активный реквизит.
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ПриОткрытии

Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	Если НП.Редактировать() Тогда
		ДатаНачала    = НП.ПолучитьДатуНачала();
		ДатаОкончания = НП.ПолучитьДатуОкончания();
	КонецЕсли;

КонецПроцедуры

Процедура ДатаНачалаПриИзменении(Элемент)

	НП.УстановитьПериод(ДатаНачала, ДатаОкончания, Истина);

КонецПроцедуры

Процедура ДатаОкончанияПриИзменении(Элемент)

	НП.УстановитьПериод(ДатаНачала, ДатаОкончания, Истина);

КонецПроцедуры

Процедура ПриИзмененииДоговора()

	Если ДоговорКонтрагента = мСтарыйДоговор Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ОчиститьТабличныеЧасти() Тогда
		ДоговорКонтрагента = мСтарыйДоговор;
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДоговорКонтрагента) 
	  И ВалютаДокумента <> мВалютаРегламентированногоУчета И ВалютаДокумента <> ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
		ВалютаДокумента = ДоговорКонтрагента.ВалютаВзаиморасчетов;
	КонецЕсли;
	
	Сделка = Неопределено;
	ПриИзмененииСделки();
	
	мСтарыйДоговор = ДоговорКонтрагента;
	
КонецПроцедуры

Процедура ДоговорКонтрагентаПриИзменении(Элемент)
	
	ПриИзмененииДоговора();
	УстановитьВидимость();
	УстановитьДоступность();
	
КонецПроцедуры

Процедура ПриИзмененииСделки()

	Если Сделка = мСтараяСделка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ОчиститьТабличныеЧасти() Тогда
		Сделка = мСтараяСделка;
		Возврат;
	КонецЕсли;
	
	мСтараяСделка = Сделка;
	
КонецПроцедуры

Процедура СделкаПриИзменении(Элемент)
	
	ПриИзмененииСделки();
	УстановитьВидимость();
	
КонецПроцедуры

Процедура СделкаНачалоВыбора(Элемент, СтандартнаяОбработка)

	Если ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем 
	 ИЛИ ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером Тогда
		СтрокаТипа = "ЗаказПокупателя";
	Иначе
		СтрокаТипа = "ЗаказПоставщику";
	КонецЕсли;

	Если ЗначениеЗаполнено(ДоговорКонтрагента)
	   И ЗначениеЗаполнено(ДоговорКонтрагента.ВедениеВзаиморасчетов)
	   И ДоговорКонтрагента.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказам Тогда

		СтандартнаяОбработка = Ложь;

		СтруктураОтбора = Новый Структура;
		СписокТипов = Новый СписокЗначений;
		Если ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем 
		 ИЛИ ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером Тогда
			СписокТипов.Добавить( "ЗаказПокупателя", Метаданные.Документы["ЗаказПокупателя"].Представление());
			СтруктураОтбора.Вставить( "ВидОперации", Перечисления.ВидыОперацийЗаказПокупателя.ПродажаКомиссия);
		Иначе
			СписокТипов.Добавить( "ЗаказПоставщику", Метаданные.Документы["ЗаказПоставщику"].Представление());
			СписокВидов = Новый СписокЗначений;
			СписокВидов.Добавить(Перечисления.ВидыОперацийЗаказПоставщику.ПокупкаКомиссия);
			СписокВидов.Добавить(Перечисления.ВидыОперацийЗаказПоставщику.Оборудование);
			СтруктураОтбора.Вставить( "ВидОперации", СписокВидов);
		КонецЕсли;

		РаботаСДиалогами.ОткрытьФормуДокументаСОтбором( ЭтаФорма, Элемент, СписокТипов, СтруктураОтбора);

	Иначе

		РаботаСДиалогами.НачалоВыбораЗначенияСделки(ЭтотОбъект, ЭтаФорма, Элемент, ДоговорКонтрагента, Сделка, СтандартнаяОбработка, 
							 "Приход", СтрокаТипа);
							 
	КонецЕсли;

КонецПроцедуры

Процедура ПредставительКонтрагентаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	УправлениеКонтактами.НачалоВыбораКонтактногоЛицаКонтрагента(Элемент, СтандартнаяОбработка, Контрагент);
	
КонецПроцедуры

Процедура ПриИзмененииВалютыДокумента()
	
	Если ВалютаДокумента <> мВалютаРегламентированногоУчета И ВалютаДокумента <> ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
		
		ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		ПриИзмененииДоговора();
		Если НЕ ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка() Тогда 
			ВалютаДокумента = ДоговорКонтрагента.ВалютаВзаиморасчетов;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура ВалютаДокументаПриИзменении(Элемент)
	
	ПриИзмененииВалютыДокумента();
	УстановитьВидимость();
	УстановитьДоступность();
	УстановитьПодписиВалют();
	
КонецПроцедуры

Процедура КоманднаяПанельПоДаннымОрганизацииЗаполнитьПоДаннымУправленческогоУчета(Кнопка)
	
	Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
		Предупреждение("Не выбран контрагент!");
		Возврат;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ВалютаДокумента) Тогда
		Предупреждение("Не выбрана валюта документа!");
		Возврат;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ДатаОкончания) Тогда
		Предупреждение("Не выбрана дата окончания периода сверки!");
		Возврат;
	КонецЕсли;

	Если ДатаОкончания < ДатаНачала Тогда
	    Предупреждение("Неверно задан период сверки расчетов!");
		Возврат;
	КонецЕсли;
	
	Если ПоДаннымОрганизации.Количество() > 0 Тогда
		
		ТекстВопроса = "Перед заполнением табличная часть будет очищена. Заполнить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли; 
		
		ПоДаннымОрганизации.Очистить();
	КонецЕсли;

	ЗаполнитьПоДаннымУправленческогоУчета();
    ПересчитатьОстатки();
КонецПроцедуры

Процедура КоманднаяПанельПоДаннымОрганизацииЗаполнитьПоДаннымБухгалтерскогоУчета(Кнопка)
	
	Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
		Предупреждение("Не выбран контрагент!");
		Возврат;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ВалютаДокумента) Тогда
		Предупреждение("Не выбрана валюта документа!");
		Возврат;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ДатаОкончания) Тогда
		Предупреждение("Не выбрана дата окончания периода сверки!");
		Возврат;
	КонецЕсли;

	Если ДатаОкончания < ДатаНачала Тогда
	    Предупреждение("Неверно задан период сверки расчетов!");
		Возврат;
	КонецЕсли;
	
	КоличествоСчетов = СписокСчетов.Количество();

	ФильтрСписокСчетов = Новый массив();
	Для каждого СтрокаСчета Из СписокСчетов Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаСчета.Счет) или СтрокаСчета.УчаствуетВРасчетах = Ложь Тогда
			Продолжить;
		Иначе
			ФильтрСписокСчетов.Добавить(СтрокаСчета.Счет);
		КонецЕсли; 
	КонецЦикла; 
		
	Если ФильтрСписокСчетов.Количество() = 0 Тогда
		Предупреждение("Неверно задан список счетов, по которым производится сверка!");
		Возврат;
	КонецЕсли;

	Если ПоДаннымОрганизации.Количество() > 0 Тогда
		
		ТекстВопроса = "Перед заполнением табличная часть будет очищена. Заполнить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли; 
		
		ПоДаннымОрганизации.Очистить();
	КонецЕсли;
	
	ЗаполнитьПоДаннымБухгалтерскогоУчета(ФильтрСписокСчетов);
	
	ПересчитатьОстатки();
КонецПроцедуры

Процедура КоманднаяПанельПоДаннымКонтрагентаДействиеПоДаннымОрганизации(Кнопка)
	
	Если ПоДаннымКонтрагента.Количество() > 0 Тогда

		ТекстВопроса = "Перед заполнением табличная часть будет очищена. Заполнить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли; 

		ПоДаннымКонтрагента.Очистить();
	КонецЕсли;

	ЗаполнитьПоДаннымОрганизации();
    ПересчитатьОстатки();
КонецПроцедуры

Процедура СверкаСогласованаПриИзменении(Элемент)
	УстановитьДоступность();
КонецПроцедуры

Процедура КоманднаяПанельСписокСчетовЗаполнитьПоУмолчанию(Кнопка)
	
	ЗаполнитьСписокСчетовЗначениямиПоУмолчанию(Истина);

КонецПроцедуры

Процедура СписокСчетовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	ОформлениеСтроки.Ячейки.Наименование.УстановитьТекст(ДанныеСтроки.Счет.Наименование);

КонецПроцедуры

Процедура СписокСчетовПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если НоваяСтрока Тогда
		ТД = Элемент.ТекущиеДанные;
		
		Если Не ТД=Неопределено Тогда
			ТД.УчаствуетВРасчетах = Истина;	
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

//Заполнить таблицу счетов значениями по умолчанию
Процедура ЗаполнитьСписокСчетовЗначениямиПоУмолчанию(ВыдаватьСообщения = Ложь)
	
	Если СписокСчетов.Количество() > 0 тогда
		Если ВыдаватьСообщения Тогда
		
			ТекстВопроса = "Перед заполнением табличная часть будет очищена. Заполнить?";
			Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
			Если Ответ <> КодВозвратаДиалога.Да Тогда
				Возврат;
			КонецЕсли; 
		КонецЕсли;
		
		СписокСчетов.Очистить();
		
	КонецЕсли;

	СчетаПоУмолчанию = Новый Массив();
	СчетаПоУмолчанию.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);
	СчетаПоУмолчанию.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками);
	СчетаПоУмолчанию.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоКраткосрочнымКредитамИЗаймам);
	СчетаПоУмолчанию.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоДолгосрочнымКредитамИЗаймам);
	СчетаПоУмолчанию.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами);
	
	Для Счетчик =1  По СчетаПоУмолчанию.Количество() Цикл
		СтрокаСчета = СписокСчетов.Добавить();
		СтрокаСчета.УчаствуетВРасчетах = Истина;
	КонецЦикла; 
	
	СписокСчетов.ЗагрузитьКолонку(СчетаПоУмолчанию,"Счет");
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ОткрытьФормуВыбораПечатныхФормОбъекта(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)

	УниверсальныеМеханизмы.НапечататьДокументПоУмолчанию(ЭтотОбъект);

КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	
	Если Организация = мСтараяОрганизация Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ОчиститьТабличныеЧасти() Тогда
		Организация = мСтараяОрганизация;
		Возврат;
	КонецЕсли;
	
	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;
	
	// Выполняем общие действия для всех документов при изменении Организация.
	ЗаполнениеДокументов.ПриИзмененииЗначенияОрганизации(ЭтотОбъект);
	
	УстановитьВидимость();
	УстановитьДоступность();
	
	мСтараяОрганизация = Организация;

КонецПроцедуры

Процедура ДатаПриИзменении(Элемент)
	
	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	РаботаСДиалогами.ПриИзмененииЗначенияДатыДокумента(ЭтотОбъект, мВалютаРегламентированногоУчета);

	мТекущаяДатаДокумента = Дата; // запомним текущую дату документа для контроля номера документа
	
	УстановитьВидимость();

КонецПроцедуры

Процедура ПриИзмененииКонтрагента()

	Если Контрагент = мСтарыйКонтрагент Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ОчиститьТабличныеЧасти() Тогда
		Контрагент = мСтарыйКонтрагент;
		Возврат;
	КонецЕсли;
	
	// Выполняем общие действия для всех документов при изменении Контрагента
	ЗаполнениеДокументов.ПриИзмененииЗначенияКонтрагента(ЭтотОбъект);
	
	ПриИзмененииДоговора();
	
	мСтарыйКонтрагент = Контрагент;

КонецПроцедуры

Процедура КонтрагентПриИзменении(Элемент)
	
	ПриИзмененииКонтрагента();
	УстановитьВидимость();
	УстановитьДоступность();
	
КонецПроцедуры

Процедура ОстатокНаНачалоПриИзменении(Элемент)
	ПересчитатьОстатки();
КонецПроцедуры

Процедура ПоДаннымОрганизацииПослеУдаления(Элемент)
	ПересчитатьОстатки();
КонецПроцедуры

Процедура ПоДаннымОрганизацииПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ПересчитатьОстатки();
КонецПроцедуры

Процедура ПоДаннымКонтрагентаПослеУдаления(Элемент)
	ПересчитатьОстатки();
КонецПроцедуры

Процедура ПоДаннымКонтрагентаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ПересчитатьОстатки();
КонецПроцедуры

Процедура ДоговорКонтрагентаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтруктураПараметров = Новый Структура("ВалютаВзаиморасчетов", Новый Структура("ЗначениеОтбора", ВалютаДокумента));
	РаботаСДиалогами.НачалоВыбораЗначенияДоговораКонтрагента(ЭтотОбъект, ЭтаФорма, Элемент, Контрагент, ДоговорКонтрагента,
	                                        Неопределено , СтандартнаяОбработка, СтруктураПараметров);
											
КонецПроцедуры

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()

	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

КонецПроцедуры // ПослеЗаписи()

НП = Новый НастройкаПериода;

мВалютаРегламентированногоУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета");
МетаданныеПоДокументам = Новый Соответствие();