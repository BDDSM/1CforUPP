Перем мТекущееРасширениеФайла;
Перем СтараяВалютаДокумента;
Перем ФорматПериод; // Хранит форматную строку для вывода периода;

// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;



// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка,Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.ТабЗависимыеОбороты,ЭлементыФормы.КоманднаяПанельЗависимости.Кнопки.ПодменюЗаполнить);
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧПоДеревуКнопок(мКнопкиЗаполненияТЧ,СоответствиеТЧ);
	
КонецПроцедуры


// Изменяет доступность реквизитов формы в зависимости от внесенных значений
//
Процедура УправлениеДоступностьюРеквизитов()
	
	Если СтатьяОборотов.Пустая() Тогда
		
		ЭлементыФормы.Контрагент.Доступность=Ложь;
		ЭлементыФормы.Номенклатура.Доступность=Ложь;
		ЭлементыФормы.Сумма.Доступность=Ложь;
		ЭлементыФормы.ВалютаДокумента.Доступность=Ложь;
		ЭлементыФормы.Количество.Доступность=Ложь;
		ЭлементыФормы.ЕдиницаИзмерения.Доступность=Ложь;
		ЭлементыФормы.Цена.Доступность=Ложь;
		
	КонецЕсли;
	
	Если СтатьяОборотов.РазделениеПоКонтрагентам Тогда

		ЭлементыФормы.Контрагент.Доступность=Истина;

	Иначе

		ЭлементыФормы.Контрагент.Доступность=Ложь;
        		
	КонецЕсли;

	Если СтатьяОборотов.РазделениеПоНоменклатуре Тогда

		ЭлементыФормы.Номенклатура.Доступность=Истина;

	Иначе

		ЭлементыФормы.Номенклатура.Доступность=Ложь;

	КонецЕсли;

	Если СтатьяОборотов.УчетПоСумме Тогда

		ЭлементыФормы.Сумма.Доступность=Истина;
		ЭлементыФормы.ВалютаДокумента.Доступность=Истина;
		
	Иначе

		ЭлементыФормы.Сумма.Доступность=Ложь;
		ЭлементыФормы.ВалютаДокумента.Доступность=Ложь;

	КонецЕсли;

	Если СтатьяОборотов.УчетПоКоличеству Тогда

		ЭлементыФормы.Количество.Доступность=Истина;
		ЭлементыФормы.ЕдиницаИзмерения.Доступность=Истина;

	Иначе

		ЭлементыФормы.Количество.Доступность=Ложь;
		ЭлементыФормы.ЕдиницаИзмерения.Доступность=Ложь;
		
	КонецЕсли;
	
	Если  СтатьяОборотов.УчетПоСумме И СтатьяОборотов.УчетПоКоличеству Тогда
		ЭлементыФормы.Цена.Доступность=Истина;
	Иначе
		ЭлементыФормы.Цена.Доступность=Ложь;
	КонецЕсли;
	
КонецПроцедуры // УправлениеДоступностьюРеквизитов()

// Формирует информационную надпись суммы сценария
//
// Параметры: нет
//
Процедура СформироватьНадписьСуммыСценария()
	
	Если СтатьяОборотов.УчетПоСумме Тогда
		
		ВалютаСценария=?(Сценарий.Пустая(),глЗначениеПеременной("ВалютаУправленческогоУчета"),Сценарий.Валюта);
		КурсыСценария=Бюджетирование.КурсВалютыПоСценарию(ВалютаСценария, ПериодПланирования, Сценарий);
		КурсСценария=КурсыСценария.Курс;
		КратностьСценария=КурсыСценария.Кратность;
		СуммаСценария=МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(Сумма, ВалютаДокумента, ВалютаСценария, КурсДокумента, КурсСценария, 
		КратностьДокумента, КратностьСценария);
		НадписьСуммаСценария="Сумма сценария: "+СуммаСценария+" "+ВалютаСценария;
		
		
	Иначе
		
		НадписьСуммаСценария="";
		
	КонецЕсли;
	
	ЭлементыФормы.НадписьСуммаСценария.Заголовок=НадписьСуммаСценария;
	
КонецПроцедуры // СформироватьНадписьСуммыСценария()

Процедура СформироватьТекстПериода()
	
	Периодичность=Сценарий.Периодичность;
	
	Если Периодичность = Перечисления.Периодичность.Год Тогда
		ФорматПериод = "ДФ = ""гггг """"г.""""""";
	ИначеЕсли Периодичность = Перечисления.Периодичность.Квартал Тогда
		ФорматПериод = "ДФ = ""к"""" квартал"""" гггг """"г.""""""";
	ИначеЕсли Периодичность = Перечисления.Периодичность.Месяц Тогда
		ФорматПериод = "ДФ = ""ММММ гггг """"г.""""""";
	ИначеЕсли Периодичность = Перечисления.Периодичность.Неделя Тогда
		ФорматПериод = "ДФ = """"""Неделя с"""" дд.ММ.гггг """"""";
	КонецЕсли;
		
	ЭлементыФормы.Период.Заголовок= "" + Формат(ПериодПланирования, ФорматПериод);
	
КонецПроцедуры // 

// Управляет реквизитом установки периода планирования
//
Процедура СпособВыводаПериода();
	
	Периодичность=Сценарий.Периодичность;
	
	Если Сценарий.Пустая() ИЛИ Периодичность=Перечисления.Периодичность.День Тогда
		
		// Элементы управления произвольным периодом
		ЭлементыФормы.ПериодПланирования.Видимость = Истина;
		
		// Элементы управления периодом
		ЭлементыФормы.Период.Видимость = Ложь;
		ЭлементыФормы.ПлюсПериод.Видимость = Ложь;
		ЭлементыФормы.МинусПериод.Видимость = Ложь;
		ЭлементыФормы.ВыборПериода.Видимость=Ложь;
		
	Иначе // периоды Месяц, Квартал, Год
		
		// Элементы управления датой
		ЭлементыФормы.ПериодПланирования.Видимость = Ложь;
		
		// Элементы управления периодом
		ЭлементыФормы.Период.Видимость = Истина;
		ЭлементыФормы.ПлюсПериод.Видимость = Истина;
		ЭлементыФормы.МинусПериод.Видимость = Истина;
		ЭлементыФормы.ВыборПериода.Видимость=Истина;
		
		СформироватьТекстПериода();
			
	КонецЕсли;
		
КонецПроцедуры // СпособВыводаПериода
 
 
// Устанавливает значение реквизита указанным для выбранного элемента справочника
// "СтатьиОборотов" значением по умолчанию.
//
// Параметры
//  Объект  – реквизит документа, для которого устанавливается значение.
//  Значение - значение по умолчанию
//
Процедура УстановитьЗначениеПоУмолчанию(Объект,Значение)
	
	Если Объект=Неопределено ИЛИ Объект.Пустая() Тогда
		
		Если ТипЗнч(Объект)=ТипЗнч(Значение) Тогда
			
			Объект=Значение;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьЗначениеПоУмолчанию()

Процедура УстановитьОтборДляЦены(ПостроительОтчета,ИзмерениеБюджетирования,ИзмеренияИсточника,ЗначениеИзмерения)
	
	СтрокаИзмерение=ИзмеренияИсточника.Найти(ИзмерениеБюджетирования,"ИзмерениеБюджетирования");
	
	Если (Не СтрокаИзмерение=Неопределено) И ПостроительОтчета.Отбор.Найти(СтрокаИзмерение.ИмяПоляИсточника)=Неопределено Тогда //Добавляем в построитель отбор по измерению
		
		НовыйОтбор=ПостроительОтчета.Отбор.Добавить(СтрокаИзмерение.ПутьКДанным,СтрокаИзмерение.ИмяПоляИсточника);
		НовыйОтбор.ВидСравнения=ВидСравнения.Равно;
		НовыйОтбор.Значение=ЗначениеИзмерения;
		НовыйОтбор.Использование=Истина;
		
	КонецЕсли;
			
КонецПроцедуры // УстановитьОтборДляЦены()

// Устанавливает значение реквизита "Цена" на основании данных источника,
// указанного в элементе справочника "СтатьяОборотов"
//
// Параметры: нет
//
Процедура УстановитьЦенуПоУмолчанию()
	
	ПостроительОтчета=Новый ПостроительОтчета;
	ИсточникДанных=СтатьяОборотов.ИсточникДанныхДляЦены;
	
	ПостроительОтчета.Текст=СтрЗаменить(ИсточникДанных.ТекстЗапроса,",День,",",,");// Убираем детализацию по периодам
	
	СохраненнаяНастройка=ИсточникДанных.НастройкиПостроителя.Получить();
	
	Если ТипЗнч(СохраненнаяНастройка.НастройкиПостроителя)=Тип("НастройкиПостроителяОтчета") Тогда
		
		Если ИсточникДанных.ПроизвольныйЗапрос Тогда
			
			ПостроительОтчета.ЗаполнитьНастройки();
			
		КонецЕсли;
		
		ПостроительОтчета.УстановитьНастройки(СохраненнаяНастройка.НастройкиПостроителя,Истина,Ложь,Истина,Истина);
		
		Для Каждого Параметр Из СохраненнаяНастройка.ПараметрыПостроителя Цикл
			ПостроительОтчета.Параметры.Вставить(Параметр.Ключ,Параметр.Значение);
		КонецЦикла;
		
	КонецЕсли;
	
	Для каждого Граница Из ИсточникДанных.ДатыОтбораДанныхИсточника Цикл
		
		Если Граница.НачальнаяГраницаОтсчета=Перечисления.ВидыГраницОтбораИсточникаПланирования.ФиксированнаяДата Тогда
			НачальнаяДатаГраницы=Граница.ДатаНачальнойГраницыОтсчета;
		ИначеЕсли Граница.НачальнаяГраницаОтсчета=Перечисления.ВидыГраницОтбораИсточникаПланирования.НачалоПериода Тогда
			НачальнаяДатаГраницы=ПериодПланирования;
		ИначеЕсли Граница.НачальнаяГраницаОтсчета=Перечисления.ВидыГраницОтбораИсточникаПланирования.КонецПериода Тогда
			НачальнаяДатаГраницы=ОбщегоНазначения.ДатаКонцаПериода(ПериодПланирования,Сценарий.Периодичность);
		КонецЕсли;
		
		Если НЕ Граница.СдвигВПериодах=0 Тогда
			
			Если Граница.НачальнаяГраницаОтсчета=Перечисления.ВидыГраницОтбораИсточникаПланирования.КонецПериода Тогда
				
				НачальнаяДатаГраницы=КонецДня(ОбщегоНазначения.ДобавитьИнтервал(НачальнаяДатаГраницы,Граница.ПериодСмещения,Граница.СдвигВПериодах));
				
			Иначе
				
				НачальнаяДатаГраницы=ОбщегоНазначения.ДобавитьИнтервал(НачальнаяДатаГраницы,Граница.ПериодСмещения,Граница.СдвигВПериодах);
				
			КонецЕсли;
			
		КонецЕсли;
		
		ПостроительОтчета.Параметры.Вставить(Граница.ИмяДатаГраницы,НачальнаяДатаГраницы);
		
	КонецЦикла;
	
	ПостроительОтчета.ВыбранныеПоля.Очистить();
	
	Если ИсточникДанных.ПроизвольныйЗапрос Тогда
		СтрокаПоказатель=ИсточникДанных.Показатели.Найти(СтатьяОборотов.ПоказательИсточникаДанныхДляЦены,"Имя");
		Если НЕ СтрокаПоказатель=Неопределено Тогда
			ПостроительОтчета.ВыбранныеПоля.Добавить(СтатьяОборотов.ПоказательИсточникаДанныхДляЦены);
		КонецЕсли;
	КонецЕсли;
	
	//Устанавливаем возможные отборы по аналитике документа
	
	ИзмеренияИсточника=ИсточникДанных.ИзмеренияИсточника;
	
	Если ЗначениеЗаполнено(ВалютаДокумента) Тогда
		УстановитьОтборДляЦены(ПостроительОтчета,Перечисления.ИзмеренияБюджетирования.Валюта,ИзмеренияИсточника,ВалютаДокумента);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Сценарий) Тогда
		УстановитьОтборДляЦены(ПостроительОтчета,Перечисления.ИзмеренияБюджетирования.Сценарий,ИзмеренияИсточника,Сценарий);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЦФО) Тогда
		УстановитьОтборДляЦены(ПостроительОтчета,Перечисления.ИзмеренияБюджетирования.ЦФО,ИзмеренияИсточника,ЦФО);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Проект) Тогда
		УстановитьОтборДляЦены(ПостроительОтчета,Перечисления.ИзмеренияБюджетирования.Проект,ИзмеренияИсточника,Проект);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		УстановитьОтборДляЦены(ПостроительОтчета,Перечисления.ИзмеренияБюджетирования.Контрагент,ИзмеренияИсточника,Контрагент);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		УстановитьОтборДляЦены(ПостроительОтчета,Перечисления.ИзмеренияБюджетирования.Номенклатура,ИзмеренияИсточника,Номенклатура);
	КонецЕсли;
		
	ПостроительОтчета.Выполнить();
	ТабИсточника=ПостроительОтчета.Результат.Выгрузить();
	
	Если НЕ Табисточника.Колонки.Найти(СтатьяОборотов.ПоказательИсточникаДанныхДляЦены)=Неопределено Тогда
				
		Если ТабИсточника.Количество()>0 Тогда
			Цена=ТабИсточника[0][СтатьяОборотов.ПоказательИсточникаДанныхДляЦены];
			Сумма=Количество*Цена;
			СформироватьНадписьСуммыСценария();
		КонецЕсли;
		
	Иначе
		
		Сообщить("Неверно указаны параметры получения цены по источнику данных.");
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьЦенуПоУмолчанию()

Процедура ПериодПланированияРегулирование(Элемент, Направление, СтандартнаяОбработка)

	СтандартнаяОбработка=Ложь;

	Элемент.Значение=ОбщегоНазначения.ДобавитьИнтервал(Элемент.Значение,Сценарий.Периодичность,Направление);

	ОбновитьКурсДокумента();

КонецПроцедуры

Процедура СценарийПриИзменении(Элемент)

	ЭлементыФормы.ПериодПланирования.Значение=ОбщегоНазначения.ДатаНачалаПериода(ЭлементыФормы.ПериодПланирования.Значение,Сценарий.Периодичность);
    УправлениеДоступностьюРеквизитов();
	СпособВыводаПериода();
	
	Если ВалютаДокумента.Пустая() Тогда
		ВалютаДокумента=Сценарий.Валюта;
	КонецЕсли;
	
	ОбновитьКурсДокумента();
	
	Если Сценарий.ДетализацияПланирования=Перечисления.ДетализацияПланирования.НоменклатурныеГруппы 
		И НЕ ТипЗнч(Номенклатура)=Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
		Номенклатура=Новый(Тип("СправочникСсылка.НоменклатурныеГруппы"));
	ИначеЕсли НЕ ТипЗнч(Номенклатура)=Тип("СправочникСсылка.Номенклатура") Тогда
		Номенклатура=Новый(Тип("СправочникСсылка.Номенклатура"));
	КонецЕсли;
	
	Если НЕ (СтатьяОборотов.ИсточникДанныхДляЦены.Пустая() ИЛИ СтатьяОборотов.ПоказательИсточникаДанныхДляЦены="")
		И (НЕ СтатьяОборотов.ИсточникДанныхДляЦены.ИзмеренияИсточника.Найти(Перечисления.ИзмеренияБюджетирования.Сценарий,"ИзмерениеБюджетирования")=Неопределено) Тогда
		УстановитьЦенуПоУмолчанию();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	

	Если ЭтоНовый() Тогда
		
		Если НЕ ЗначениеЗаполнено(Сценарий) Тогда
						
			ЭлементыФормы.ПериодПланирования.Значение=РабочаяДата;
			ВалютаДокумента=глЗначениеПеременной("ВалютаУправленческогоУчета");
			
		Иначе
			
			Если НЕ ЗначениеЗаполнено(ВалютаДокумента) Тогда
				
				ВалютаДокумента=Сценарий.Валюта;
				
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ПериодПланирования) Тогда
				
				ЭлементыФормы.ПериодПланирования.Значение=ОбщегоНазначения.ДатаНачалаПериода(РабочаяДата,Сценарий.Периодичность);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОбновитьКурсДокумента();
	СформироватьНадписьСуммыСценария();
		
	УправлениеДоступностьюРеквизитов();
	СпособВыводаПериода();
	СтараяВалютаДокумента=ВалютаДокумента;
	
КонецПроцедуры

Процедура ПериодПланированияПриИзменении(Элемент)

	Элемент.Значение=ОбщегоНазначения.ДатаНачалаПериода(Элемент.Значение,Сценарий.Периодичность);
	ОбновитьКурсДокумента();

КонецПроцедуры


Процедура ПриОткрытии()
	
	
	Если НЕ ЭтоНовый() Тогда 
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	КонецЕсли;
	
	СписокКнопокФайлов = Новый СписокЗначений;
	СписокКнопокФайлов.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.Файлы);
	СписокКнопокФайлов.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.Файлы);
	РаботаСФайлами.ПолучитьКартинкуКнопкиОткрытияФайлов(Ссылка, СписокКнопокФайлов);
	
	Если (НЕ ЗначениеЗаполнено(Ответственный)) ИЛИ (НЕ ПараметрОбъектКопирования=Неопределено) Тогда
		Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Состояние) Тогда
		Состояние=Перечисления.СостоянияОбъектов.Подготовлен;
	КонецЕсли;
	
	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента = Дата;
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	// Создать кнопки печати
	ФормированиеПечатныхФорм.СоздатьКнопкиПечати(ЭтотОбъект, ЭтаФорма);
	
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект,ЭтаФорма);
	
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура СтатьяОборотовПриИзменении(Элемент)
			
	Если НЕ ЗначениеЗаполнено(СтатьяОборотов) Тогда
		УправлениеДоступностьюРеквизитов();
		Возврат;
	КонецЕсли;
	
	УстановитьЗначениеПоУмолчанию(ЦФО,СтатьяОборотов.ОсновноеЦФО);
	УстановитьЗначениеПоУмолчанию(Проект,СтатьяОборотов.ОсновнойПроект);
	
	Если Сумма=0 и ЗначениеЗаполнено(СтатьяОборотов.ОсновнаяВалюта) Тогда
		ВалютаДокумента=СтатьяОборотов.ОсновнаяВалюта;
	КонецЕсли;
	
	УстановитьЗначениеПоУмолчанию(ЕдиницаИзмерения,СтатьяОборотов.ЕдиницаИзмерения);

	СтараяВалютаДокумента=ВалютаДокумента;
	ОбновитьКурсДокумента();
	
	Если СтатьяОборотов.РазделениеПоКонтрагентам Тогда
		УстановитьЗначениеПоУмолчанию(Контрагент,СтатьяОборотов.ОсновнойКонтрагент);
	Иначе
		Контрагент="";
	КонецЕсли;
	
	Если СтатьяОборотов.РазделениеПоНоменклатуре И НЕ ЗначениеЗаполнено(Номенклатура) Тогда
		
		Если Сценарий.ДетализацияПланирования=Перечисления.ДетализацияПланирования.НоменклатурныеГруппы
			И ТипЗнч(СтатьяОборотов.ОсновнаяНоменклатура)= Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
			УстановитьЗначениеПоУмолчанию(Номенклатура,СтатьяОборотов.ОсновнаяНоменклатура);
		ИначеЕсли ТипЗнч(СтатьяОборотов.ОсновнаяНоменклатура)= Тип("СправочникСсылка.Номенклатура") Тогда
			УстановитьЗначениеПоУмолчанию(Номенклатура,СтатьяОборотов.ОсновнаяНоменклатура);
		КонецЕсли;
		
	КонецЕсли;

	Если (НЕ СтатьяОборотов.ИсточникДанныхДляЦены.Пустая()) И (НЕ СтатьяОборотов.ПоказательИсточникаДанныхДляЦены="") Тогда
		УстановитьЦенуПоУмолчанию();
	КонецЕсли;
	
	Если НЕ СтатьяОборотов.УчетПоСумме Тогда
		
		Сумма=0;
		ВалютаДокумента="";
		КурсДокумента=0;
		
	КонецЕсли;

	Если НЕ СтатьяОборотов.УчетПоКоличеству Тогда

		Количество=0;
        ЕдиницаИзмерения="";
		
	КонецЕсли;
	
	УправлениеДоступностьюРеквизитов();
		
КонецПроцедуры


Процедура ВалютаДокументаПриИзменении(Элемент)
	
	Если НЕ ВалютаДокумента = СтараяВалютаДокумента Тогда
		
		Если НЕ (СтатьяОборотов.ИсточникДанныхДляЦены.Пустая() ИЛИ СтатьяОборотов.ПоказательИсточникаДанныхДляЦены="")
			И (НЕ СтатьяОборотов.ИсточникДанныхДляЦены.ИзмеренияИсточника.Найти(Перечисления.ИзмеренияБюджетирования.Валюта,"ИзмерениеБюджетирования")=Неопределено) Тогда
			УстановитьЦенуПоУмолчанию();
		КонецЕсли;
		
		// Надо предложить пересчитать сумму.
		
		Если (Не Сумма=0 И Вопрос("Изменилась валюта операции. Пересчитать сумму операции?", 
			РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да)= КодВозвратаДиалога.Да) Тогда
			ОбновитьКурсИСуммуДокумента(СтараяВалютаДокумента);
			
		Иначе
			ОбновитьКурсДокумента();
		КонецЕсли; 
		
	КонецЕсли;
	
	СформироватьНадписьСуммыСценария();
	
	СтараяВалютаДокумента=ВалютаДокумента;
		
КонецПроцедуры

Процедура ЦенаПриИзменении(Элемент)
	
	Сумма=Количество*Цена;
	СформироватьНадписьСуммыСценария();
	
КонецПроцедуры


Процедура СуммаПриИзменении(Элемент)
	
	СформироватьНадписьСуммыСценария();
	
	Если СтатьяОборотов.УчетПоКоличеству И СтатьяОборотов.УчетПоСумме И (НЕ Количество=0) Тогда
		Цена=Окр(Сумма/Количество,2);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

Процедура ДействияФормыРедактироватьНомер(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
КонецПроцедуры
// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

Процедура КоманднаяПанельЗависимостиЗаполнить(Кнопка)
	
	РассчитатьЗависимыеОбороты();

КонецПроцедуры

// Процедура - обработчик события "Файлы".
//
Процедура ДействияФормыФайлы(Кнопка)
	
	Если Ссылка.Пустая() Тогда
		Предупреждение("Сначала запишите документ.");
		Возврат;
	КонецЕсли;
	
	СтруктураДляСпискаИзображдений = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, Ссылка, Ложь, Ложь);
	СтруктураДляСпискаДополнительныхФайлов = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, Ссылка, Ложь, Ложь);
	ОбязательныеОтборы = Новый Структура("Объект", Ссылка);
	
	РаботаСФайлами.ОткрытьФормуСпискаФайловИИзображений(СтруктураДляСпискаИзображдений, СтруктураДляСпискаДополнительныхФайлов, ОбязательныеОтборы, ЭтаФорма);

КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если ТипЗнч(ЗначениеВыбора) = Тип("Строка") И ЗначениеВыбора = "ИзмененСписокСправочникаХранилищеДопИнформации" Тогда
	
		СписокКнопокФайлов = Новый СписокЗначений;
		СписокКнопокФайлов.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.Файлы);
		СписокКнопокФайлов.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.Файлы);
		РаботаСФайлами.ПолучитьКартинкуКнопкиОткрытияФайлов(Ссылка, СписокКнопокФайлов);
	
	КонецЕсли; 
	
КонецПроцедуры

Процедура КоличествоПриИзменении(Элемент)
	
	Сумма=Количество*Цена;
	СформироватьНадписьСуммыСценария();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
		
	Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Состояние) Тогда
		Состояние=Перечисления.СостоянияОбъектов.Подготовлен;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "+" периода
//
Процедура ПлюсПериодНажатие(Элемент)
	ПериодПланирования = ОбщегоНазначения.ДобавитьИнтервал(ПериодПланирования,Сценарий.Периодичность,1);
	СформироватьТекстПериода();
	ОбновитьКурсДокумента();
КонецПроцедуры

Процедура МинусПериодНажатие(Элемент)
	ПериодПланирования = ОбщегоНазначения.ДобавитьИнтервал(ПериодПланирования,Сценарий.Периодичность,-1);
	СформироватьТекстПериода();
	ОбновитьКурсДокумента();
КонецПроцедуры

Процедура ВыборПериодаНажатие(Элемент)
	
	Если ВвестиДату(ПериодПланирования, "Начало периода",ЧастиДаты.Дата)  Тогда
		
		ПериодПланирования=ОбщегоНазначения.ДатаНачалаПериода(ПериодПланирования,Сценарий.Периодичность);
		СформироватьТекстПериода();
		ОбновитьКурсДокумента();
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ТабЗависимыеОборотыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеСтроки.Ячейки.ПериодСтрока.ОтображатьТекст=Истина;
	ОформлениеСтроки.Ячейки.ПериодСтрока.Текст=Формат(ДанныеСтроки.ПериодПланирования,ФорматПериод);
	
КонецПроцедуры

Процедура НоменклатураНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	Если Сценарий.ДетализацияПланирования=Перечисления.ДетализацияПланирования.НоменклатурныеГруппы Тогда
		ФормаВыбора=Справочники.НоменклатурныеГруппы.ПолучитьФормуВыбора(,Элемент,);
		Если ЗначениеЗаполнено(Элемент.Значение) И ТипЗнч(Элемент.Значение)=Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
			ФормаВыбора.ПараметрТекущаяСтрока=Элемент.Значение;
		КонецЕсли;
	Иначе
		ФормаВыбора=Справочники.Номенклатура.ПолучитьФормуВыбора(,Элемент,);
		Если ЗначениеЗаполнено(Элемент.Значение) И ТипЗнч(Элемент.Значение)=Тип("СправочникСсылка.Номенклатура") Тогда
			ФормаВыбора.ПараметрТекущаяСтрока=Элемент.Значение;
		КонецЕсли;
	КонецЕсли;
	
	ФормаВыбора.РежимВыбора=Истина;
	ФормаВыбора.Открыть();
	
КонецПроцедуры

Процедура СтатьяОборотовОчистка(Элемент, СтандартнаяОбработка)
	
	УправлениеДоступностьюРеквизитов();
	
КонецПроцедуры

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры
Процедура ЦФОПриИзменении(Элемент)
	
	Если НЕ (СтатьяОборотов.ИсточникДанныхДляЦены.Пустая() ИЛИ СтатьяОборотов.ПоказательИсточникаДанныхДляЦены="")
		И (НЕ СтатьяОборотов.ИсточникДанныхДляЦены.ИзмеренияИсточника.Найти(Перечисления.ИзмеренияБюджетирования.ЦФО,"ИзмерениеБюджетирования")=Неопределено) Тогда
		УстановитьЦенуПоУмолчанию();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроектПриИзменении(Элемент)
	
	Если НЕ (СтатьяОборотов.ИсточникДанныхДляЦены.Пустая() ИЛИ СтатьяОборотов.ПоказательИсточникаДанныхДляЦены="")
		И (НЕ СтатьяОборотов.ИсточникДанныхДляЦены.ИзмеренияИсточника.Найти(Перечисления.ИзмеренияБюджетирования.Проект,"ИзмерениеБюджетирования")=Неопределено) Тогда
		УстановитьЦенуПоУмолчанию();
	КонецЕсли;
	
КонецПроцедуры

Процедура КонтрагентПриИзменении(Элемент)
	
	Если НЕ (СтатьяОборотов.ИсточникДанныхДляЦены.Пустая() ИЛИ СтатьяОборотов.ПоказательИсточникаДанныхДляЦены="")
		И (НЕ СтатьяОборотов.ИсточникДанныхДляЦены.ИзмеренияИсточника.Найти(Перечисления.ИзмеренияБюджетирования.Контрагент,"ИзмерениеБюджетирования")=Неопределено) Тогда
		УстановитьЦенуПоУмолчанию();
	КонецЕсли;
	
КонецПроцедуры

Процедура НоменклатураПриИзменении(Элемент)
	
	Если НЕ (СтатьяОборотов.ИсточникДанныхДляЦены.Пустая() ИЛИ СтатьяОборотов.ПоказательИсточникаДанныхДляЦены="")
		И (НЕ СтатьяОборотов.ИсточникДанныхДляЦены.ИзмеренияИсточника.Найти(Перечисления.ИзмеренияБюджетирования.Номенклатура,"ИзмерениеБюджетирования")=Неопределено) Тогда
		УстановитьЦенуПоУмолчанию();
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать".
// Открывает форму выбора печатных форм объекта.
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ОткрытьФормуВыбораПечатныхФормОбъекта(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ОсновныеДействияФормыПечать() 

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)

	УниверсальныеМеханизмы.НапечататьДокументПоУмолчанию(ЭтотОбъект);

КонецПроцедуры
 
Процедура ДатаПриИзменении(Элемент)
	
	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	мТекущаяДатаДокумента = Дата; // запомним текущую дату документа для контроля номера документа
	
КонецПроцедуры

Процедура ПослеЗаписи()
	
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры