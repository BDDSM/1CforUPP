Перем НП;

// Процедура - обработчик события нажатие по кнопке Файлы командной панели ДействияФормы.
//
Процедура ДействияФормыФайлы(Кнопка)
	
	Если ЭлементыФормы.ДокументСписок.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если ЭлементыФормы.ДокументСписок.ТекущаяСтрока.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;

	СтруктураДляСпискаИзображдений = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, ЭлементыФормы.ДокументСписок.ТекущаяСтрока.Ссылка, Ложь, Ложь);
	СтруктураДляСпискаДополнительныхФайлов = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, ЭлементыФормы.ДокументСписок.ТекущаяСтрока.Ссылка, Ложь, Ложь);
	ОбязательныеОтборы = Новый Структура("Объект", ЭлементыФормы.ДокументСписок.ТекущаяСтрока.Ссылка);
	
	РаботаСФайлами.ОткрытьФормуСпискаФайловИИзображений(СтруктураДляСпискаИзображдений, СтруктураДляСпискаДополнительныхФайлов, ОбязательныеОтборы, ЭтаФорма);

КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	Если ЭлементыФормы.ДокументСписок.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;

	РаботаСДиалогами.НапечататьДвиженияДокумента(ЭлементыФормы.ДокументСписок.ТекущиеДанные.Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура вызывается при выборе пункта подменю "Структура подчиненности" меню "Перейти".
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	Если ЭлементыФормы.ДокументСписок.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(ЭлементыФормы.ДокументСписок.ТекущиеДанные.Ссылка);
	
КонецПроцедуры


Процедура ДействияФормыОтбор(Кнопка)
	
	Если НЕ ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх Тогда
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх;
	Иначе
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Нет;
	КонецЕсли;
	
	Если ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх Тогда
		ЭлементыФормы.ДействияФормы.Кнопки.Отбор.Пометка = Ложь;
	Иначе
		ЭлементыФормы.ДействияФормы.Кнопки.Отбор.Пометка = Истина;
	КонецЕсли;


КонецПроцедуры

Процедура ДействияОборотыПоСтатьямДействие(Кнопка)
	
	Отчет=Отчеты.ОборотыПоСтатьямБюджетов.Создать();
	
	Если Отбор.Сценарий.Использование Тогда
		Отчет.Сценарий=Отбор.Сценарий.Значение;
	КонецЕсли;
	
	Если Отбор.ПериодПланирования.Использование Тогда
		Отчет.ДатаНач=Отбор.ПериодПланирования.ЗначениеС;
	    Отчет.ДатаКон=Отбор.ПериодПланирования.ЗначениеПо;
	КонецЕсли;
	
	Отчет.ВидДанныхОтчета=Перечисления.ВидыДанныхДляОтчетовБюджетированияИсточники.Сценарий;
	Отчет.ЗаполнитьНачальныеНастройки();
	
	ДобавитьОтборыВПостроитель(Отчет.ПостроительОтчета.Отбор,"СтатьяОборотов");
	ДобавитьОтборыВПостроитель(Отчет.ПостроительОтчета.Отбор,"ЦФО");
	ДобавитьОтборыВПостроитель(Отчет.ПостроительОтчета.Отбор,"Проект");
	ДобавитьОтборыВПостроитель(Отчет.ПостроительОтчета.Отбор,"Контрагент");
	
	НовыйОтбор=Отчет.ПостроительОтчета.Отбор.Добавить("Номенклатура");
	Новыйотбор.ВидСравнения=ВидСравнения.Равно;
	
	Если Отбор.Номенклатура.Значение=Неопределено Тогда
		Если Отбор.Сценарий.Значение.ДетализацияПланирования=Перечисления.ДетализацияПланирования.НоменклатурныеГруппы Тогда
			НовыйОтбор.Значение=Справочники.НоменклатурныеГруппы.ПустаяСсылка();
		Иначе
			НовыйОтбор.Значение=Справочники.Номенклатура.ПустаяСсылка();
		КонецЕсли;
	Иначе	
		НовыйОтбор.Значение=Отбор.Номенклатура.Значение;
	КонецЕсли;
	
	НовыйОтбор.Использование=Отбор.Номенклатура.Использование;
	
	НовыйОтбор=Отчет.ПостроительОтчета.Отбор.Добавить("Регистратор.Ответственный");
	Новыйотбор.ВидСравнения=ВидСравнения.Равно;
	НовыйОтбор.Значение=Отбор.Ответственный.Значение;
	НовыйОтбор.Использование=Отбор.Ответственный.Использование;
	
	Форма = Отчет.ПолучитьОсновнуюФорму();
    Форма.ОбновитьТаблицуОтчета();
	Форма.неВосстанавливатьНастройку=Истина;
	Форма.Открыть();
	
КонецПроцедуры

// Проверяет даты начала и конца ограничения оборотов и корректирует при необходимости
//
// Проверяет даты начала и конца ограничения оборотов и корректирует при необходимости
//
Процедура ПроверкаИнтервала()
	
	Если (Отбор.ПериодПланирования.ЗначениеПо='00010101') И (Отбор.ПериодПланирования.ЗначениеС<>'00010101') Тогда
		
		Отбор.ПериодПланирования.ЗначениеПо=ОбщегоНазначения.ДатаКонцаПериода(Отбор.ПериодПланирования.ЗначениеС,Отбор.Сценарий.Значение.Периодичность);
		
	ИначеЕсли (Отбор.ПериодПланирования.ЗначениеПо<>'00010101') И (Отбор.ПериодПланирования.ЗначениеС='00010101') Тогда
		
		Отбор.ПериодПланирования.ЗначениеС=ОбщегоНазначения.ДатаНачалаПериода(Отбор.ПериодПланирования.ЗначениеПо,Отбор.Сценарий.Значение.Периодичность);
		
	ИначеЕсли Отбор.ПериодПланирования.ЗначениеПо<Отбор.ПериодПланирования.ЗначениеС Тогда
		
		Если ЭтаФорма.ТекущийЭлемент.Имя="Отбор.ПериодПланирования.ЗначениеПо" Тогда
			
			Отбор.ПериодПланирования.ЗначениеС=ОбщегоНазначения.ДатаНачалаПериода(Отбор.ПериодПланирования.ЗначениеПо,Отбор.Сценарий.Значение.Периодичность);
			
		Иначе
			
			Отбор.ПериодПланирования.ЗначениеПо=ОбщегоНазначения.ДатаКонцаПериода(Отбор.ПериодПланирования.ЗначениеС,Отбор.Сценарий.Значение.Периодичность);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПроверкаИнтервала()

Процедура ОтборСценарийЗначениеПриИзменении(Элемент)
		
	Если НЕ Отбор.Сценарий.Значение=Справочники.СценарииПланирования.ПустаяСсылка() Тогда
		
		Отбор.ПериодПланирования.ЗначениеС=ОбщегоНазначения.ДатаНачалаПериода(Отбор.ПериодПланирования.ЗначениеС,Отбор.Сценарий.Значение.Периодичность);
		Отбор.ПериодПланирования.ЗначениеПо=ОбщегоНазначения.ДатаКонцаПериода(Отбор.ПериодПланирования.ЗначениеПо,Отбор.Сценарий.Значение.Периодичность);
				
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПериодПланированияСПриИзменении(Элемент)
	
	Элемент.Значение=ОбщегоНазначения.ДатаНачалаПериода(Элемент.Значение,Отбор.Сценарий.Значение.Периодичность);
	ПроверкаИнтервала();

КонецПроцедуры

Процедура ПериодПланированияСРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;

	Элемент.Значение=ОбщегоНазначения.ДобавитьИнтервал(Элемент.Значение,Отбор.Сценарий.Значение.Периодичность,Направление);
	
	ПроверкаИнтервала();
	
КонецПроцедуры

Процедура ПериодПланированияПоПриИзменении(Элемент)
	
	Элемент.Значение=ОбщегоНазначения.ДатаКонцаПериода(Элемент.Значение,Отбор.Сценарий.Значение.Периодичность);
	ПроверкаИнтервала();
	
КонецПроцедуры

Процедура ПериодПланированияПоРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;

	Элемент.Значение=ОбщегоНазначения.ДатаКонцаПериода(ОбщегоНазначения.ДобавитьИнтервал(Элемент.Значение,Отбор.Сценарий.Значение.Периодичность,Направление),Отбор.Сценарий.Значение.Периодичность);

	ПроверкаИнтервала();
	
КонецПроцедуры

Процедура ОтборНоменклатураНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	Если Отбор.Сценарий.Значение.ДетализацияПланирования=Перечисления.ДетализацияПланирования.НоменклатурныеГруппы Тогда
		ФормаВыбора=Справочники.НоменклатурныеГруппы.ПолучитьФормуВыбора(,Элемент,);
		Если ЗначениеЗаполнено(Элемент.Значение) И ТипЗнч(Элемент.Значение)=Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
			ФормаВыбора.ПараметрТекущаяСтрока=Элемент.Значение;
		КонецЕсли;
	Иначе
		ФормаВыбора=Справочники.Номенклатура.ПолучитьФормуВыбора(,Элемент,);
		Если ЗначениеЗаполнено(Элемент.Значение) И ТипЗнч(Элемент.Значение)=Тип("СправочникСсылка.Номенклатура") Тогда
			ФормаВыбора.ПараметрТекущаяСтрока=Элемент.Значение;
		КонецЕсли;
	КонецЕсли;
	
	ФормаВыбора.РежимВыбора=Истина;
	ФормаВыбора.Открыть();
		
КонецПроцедуры

// Процедура - обработчик нажатия кнопки настройки периода
//
Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	НП.УстановитьПериод(НачалоДня(Отбор.ПериодПланирования.ЗначениеС), ?(НЕ ЗначениеЗаполнено(Отбор.ПериодПланирования.ЗначениеПо), Отбор.ПериодПланирования.ЗначениеПо, КонецДня(Отбор.ПериодПланирования.ЗначениеПо)));
	
	Если НП.Редактировать() Тогда
		
		Если НЕ Отбор.Сценарий.Значение.Пустая() Тогда
			
			ДатаНачПериода = НП.ПолучитьДатуНачала();
			Если НЕ ЗначениеЗаполнено(ДатаНачПериода) Тогда
				Отбор.ПериодПланирования.ЗначениеС = ДатаНачПериода;
			Иначе
				Отбор.ПериодПланирования.ЗначениеС = ОбщегоНазначения.ДатаНачалаПериода(ДатаНачПериода,Отбор.Сценарий.Значение.Периодичность);
			КонецЕсли; 
			
			ДатаКонПериода = НП.ПолучитьДатуОкончания();
			Если НЕ ЗначениеЗаполнено(ДатаКонПериода) Тогда
				Отбор.ПериодПланирования.ЗначениеПо = ДатаКонПериода;
			Иначе
				Отбор.ПериодПланирования.ЗначениеПо = ОбщегоНазначения.ДатаКонцаПериода(ДатаКонПериода,Отбор.Сценарий.Значение.Периодичность);
			КонецЕсли; 
			
		Иначе
			Отбор.ПериодПланирования.ЗначениеС = НП.ПолучитьДатуНачала();
			Отбор.ПериодПланирования.ЗначениеПо = НП.ПолучитьДатуОкончания();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

Процедура УстановитьРеквизитДокумента(Документ,ИмяРеквизита)
	
	Если Отбор[ИмяРеквизита].Использование Тогда
		Если Отбор[ИмяРеквизита].ВидСравнения=ВидСравнения.Равно Тогда
			Документ[ИмяРеквизита]=Отбор[ИмяРеквизита].Значение;
		ИначеЕсли Отбор[ИмяРеквизита].ВидСравнения=ВидСравнения.ИнтервалВключаяГраницы Тогда
			Документ[ИмяРеквизита]=Отбор[ИмяРеквизита].ЗначениеС;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // УстановитьРеквизитДокумента()


Процедура ДокументСписокПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Если НЕ Копирование Тогда
		
		Документ=Документы.БюджетнаяОперация.СоздатьДокумент();
		УстановитьРеквизитДокумента(Документ,"Сценарий");
		УстановитьРеквизитДокумента(Документ,"ПериодПланирования");
		УстановитьРеквизитДокумента(Документ,"СтатьяОборотов");
        УстановитьРеквизитДокумента(Документ,"ЦФО");
		УстановитьРеквизитДокумента(Документ,"Проект");
		УстановитьРеквизитДокумента(Документ,"Контрагент");
		УстановитьРеквизитДокумента(Документ,"Номенклатура");
		УстановитьРеквизитДокумента(Документ,"Ответственный");
			
		ФормаДокумента=Документ.ПолучитьФорму();
		ФормаДокумента.Открыть();
		
		Отказ=Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыПакетныйВводБюджетныхОпераций(Кнопка)
	
	Обработка=Обработки.ПакетныйВводБюджетныхОпераций.Создать();
	
	Обработка.Сценарий=Отбор.Сценарий.Значение;
	
	Обработка.УстановитьПериод=Отбор.ПериодПланирования.Использование;
	Обработка.ПериодПланирования=Отбор.ПериодПланирования.ЗначениеС;
	
	Обработка.УстановитьКонтрагента=Отбор.Контрагент.Использование;
	Обработка.Контрагент=Отбор.Контрагент.Значение;
	
	Обработка.УстановитьНоменклатуру=Отбор.Номенклатура.Использование;
	Обработка.Номенклатура=Отбор.Номенклатура.Значение;
	
	Обработка.УстановитьОтветственного=Отбор.Ответственный.Использование;
	Обработка.Ответственный=Отбор.Ответственный.Значение;
	
	Обработка.УстановитьПроект=Отбор.Проект.Использование;
	Обработка.Проект=Отбор.Проект.Значение;
	
	Обработка.УстановитьСтатьюОборотов=Отбор.СтатьяОборотов.Использование;
	Обработка.СтатьяОборотов=Отбор.СтатьяОборотов.Значение;
	
	Обработка.УстановитьЦФО=Отбор.ЦФО.Использование;
	Обработка.ЦФО=Отбор.ЦФО.Значение;
	
	ФормаОбработки=Обработка.ПолучитьФорму();
	ФормаОбработки.Открыть();
		
КонецПроцедуры

Процедура ДобавитьОтборыВПостроитель(ОтборПостроитель,ИмяРеквизита)
	
	НовыйОтбор=ОтборПостроитель.Добавить(ИмяРеквизита);
	НовыйОтбор.Использование=Отбор[ИмяРеквизита].Использование;
	НовыйОтбор.ВидСравнения=Отбор[ИмяРеквизита].ВидСравнения;
	НовыйОтбор.ЗначениеС=Отбор[ИмяРеквизита].ЗначениеС;
	НовыйОтбор.ЗначениеПо=Отбор[ИмяРеквизита].ЗначениеПо;
	НовыйОтбор.Значение=Отбор[ИмяРеквизита].Значение;
	НовыйОтбор.Использование=Отбор[ИмяРеквизита].Использование;
	
КонецПроцедуры // ДобавитьОтборыВПостроитель();

Процедура ДействияФормыИзменениеДокументовБюджетирования(Кнопка)
	
	Обработка=Обработки.ИзменениеДокументовБюджетирования.Создать();
	Обработка.ВидДокумента="БюджетнаяОперация";
	Обработка.Сценарий=?(Отбор.Сценарий.Использование,Отбор.Сценарий.Значение,Справочники.СценарииПланирования.ПустаяСсылка());
	
	Если Отбор.ПериодПланирования.Использование Тогда
		Обработка.ДатаНач=Отбор.ПериодПланирования.ЗначениеС;
		Обработка.ДатаКон=Отбор.ПериодПланирования.ЗначениеПо;
	КонецЕсли;
	
	Обработка.ЗаполнитьНачальныеНастройки();
	
	ПостроительОтчета=Обработка.ПостроительОтчета;
	
	ДобавитьОтборыВПостроитель(ПостроительОтчета.Отбор,"СтатьяОборотов");
	ДобавитьОтборыВПостроитель(ПостроительОтчета.Отбор,"ЦФО");
	ДобавитьОтборыВПостроитель(ПостроительОтчета.Отбор,"Проект");
	ДобавитьОтборыВПостроитель(ПостроительОтчета.Отбор,"Контрагент");
	ДобавитьОтборыВПостроитель(ПостроительОтчета.Отбор,"Номенклатура");
	ДобавитьОтборыВПостроитель(ПостроительОтчета.Отбор,"Ответственный");
	
	ФормаОбработки=Обработка.ПолучитьФорму();
	ФормаОбработки.Открыть();
	
КонецПроцедуры



НП=Новый НастройкаПериода;
Отбор.ПериодПланирования.ВидСравнения=ВидСравнения.ИнтервалВключаяГраницы;