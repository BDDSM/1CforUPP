// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка,Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.РаспределениеПоЛабораториям,ЭлементыФормы.КоманднаяПанель);
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧПоДеревуКнопок(мКнопкиЗаполненияТЧ,СоответствиеТЧ);
	
КонецПроцедуры

// Устанавливает внешний вид экранной формы.
//
Процедура УстановитьВидимость()

	Флаг = ВидОперации = Перечисления.ВидыОперацийАктОтбораПробНоменклатуры.ДляВнешнейСертификации;
	ЭлементыФормы.НадписьОрганПоСертификации.Видимость = Флаг;
	ЭлементыФормы.ОрганПоСертификации.Видимость = Флаг;
	ЭлементыФормы.Панель.Страницы[0] .Видимость = Не Флаг;
	ЭлементыФормы.Панель.Страницы[1] .Видимость = Флаг;
	
	Если ВидОперации = Перечисления.ВидыОперацийАктОтбораПробНоменклатуры.ДляВнешнейСертификации Тогда
		 ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы[1];
	Иначе
         ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы[0];
	КонецЕсли;
	
КонецПроцедуры // УстановитьВидимость()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура ДействияФормыРедактироватьНомер(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭлементыФормы.Номер);
КонецПроцедуры
// Процедура вызывается при выборе пункта подменю "ПодменюВидаОперации" командной панели
// формы. Процедура устанавливает значение реквизита ВидОперации.
//
Процедура ДействияФормыДействиеУстановитьОперацию(Кнопка)

	Если Кнопка <>  Неопределено Тогда // найти новое значение вида операции
		Если ВидОперации <> Перечисления.ВидыОперацийАктОтбораПробНоменклатуры[Кнопка.Имя] Тогда
				ЗаявкаНаСертификациюНоменклатуры = Неопределено;
		КонецЕсли; 
		ВидОперации = Перечисления.ВидыОперацийАктОтбораПробНоменклатуры[Кнопка.Имя];
	КонецЕсли;

	// Отобразить в заголовке формы вид операции.
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(Строка(ВидОперации), ЭтотОбъект, ЭтаФорма);
	УстановитьВидимость();
	
КонецПроцедуры // ДействияФормыДействиеУстановитьОперацию()

// Процедура вызова структуры подчиненности документа
// 
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)

	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
	
КонецПроцедуры // ДействияФормыСтруктураПодчиненностиДокумента()

// Процедура вызывается при выборе пункта подменю из меню "Перейти".
// командной панели формы.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события ПередОткрытием формы
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
	
	Отказ = Не УправлениеСертификациейНоменклатуры.ИспользоватьСертификациюНоменклатуры(Истина);
	
	Если НЕ ЗначениеЗаполнено(ЗаявкаНаСертификациюНоменклатуры) и ЭтотОбъект.ЭтоНовый() Тогда
		ВидОперации = Перечисления.ВидыОперацийАктОтбораПробНоменклатуры.ДляВнешнейСертификации
	КонецЕсли;
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события ПриОткрытии формы
//
Процедура ПриОткрытии()
	
	
	Если НЕ ЭтоНовый() Тогда 
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);
	КонецЕсли;	
	// Заполняем подменю, вызываемое нажатием кнопки "Операция" командной панели 
	// формы, значениями перечисления "Вид операции" данного вида документа.
	// В качестве обработки выбора вида операции назначается процедура 
	// ДействияФормыДействиеУстановитьОперацию модуля формы.
	РаботаСДиалогами.УстановитьПодменюВыбораВидаОперации(ЭлементыФормы.ДействияФормы.Кнопки.ПодменюВидаОперации,
	                                    ВидОперации.Метаданные().ЗначенияПеречисления,
	                                    Новый Действие("ДействияФормыДействиеУстановитьОперацию"));

	// Вывести в заголовке формы вид операции.
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(Строка(ВидОперации), ЭтотОбъект, ЭтаФорма);
	
	УстановитьВидимость();
	
	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента = Дата;
	
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю1);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю1,ЭлементыФормы.Номер);
	
	// Создать кнопки печати
	ФормированиеПечатныхФорм.СоздатьКнопкиПечати(ЭтотОбъект, ЭтаФорма);
	
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ПриОткрытии()	

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()
	
	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(Строка(ВидОперации), ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭлементыФормы.Номер);
	
КонецПроцедуры // ПослеЗаписи()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода СерияНоменклатуры.
//
Процедура СерияНоменклатурыПриИзменении(Элемент)

	НормативныйДокумент = УправлениеСертификациейНоменклатуры.ПолучитьНормативныйДокумент( Номенклатура, Элемент.Значение);
	
КонецПроцедуры // СерияНоменклатурыПриИзменении()

// Процедура - обработчик события "ОбработкаВыбора" поля ввода Номенклатура.
//
Процедура НоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СерияНоменклатуры = Справочники.СерииНоменклатуры.ПустаяСсылка();
	НормативныйДокумент = УправлениеСертификациейНоменклатуры.ПолучитьНормативныйДокумент(ВыбранноеЗначение);
	
КонецПроцедуры//НоменклатураОбработкаВыбора()

// Процедура - обработчик события "НачалоВыбора" поля ввода ДокументОснование.
//
Процедура ДокументОснованиеНачалоВыбора(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ФормаЗаявки = Документы.ЗаявкаНаСертификациюНоменклатуры.ПолучитьФормуВыбора();
	Если ВидОперации = Перечисления.ВидыОперацийАктОтбораПробНоменклатуры.ДляВнешнейСертификации Тогда
		ФормаЗаявки.Отбор.ВидОперации.Значение = Перечисления.ВидыОперацийЗаявкаНаСертификациюНоменклатуры.Внешняя;	
	Иначе	
		ФормаЗаявки.Отбор.ВидОперации.Значение = Перечисления.ВидыОперацийЗаявкаНаСертификациюНоменклатуры.Внутренняя;	
	КонецЕсли;	
	ФормаЗаявки.Отбор.ВидОперации.Использование = Истина;
	
	ФормаЗаявки.ОткрытьМодально();
	ПолеЗаявок = ФормаЗаявки.ЭлементыФормы.ДокументСписок;
	Если НЕ ПолеЗаявок.ТекущиеДанные = Неопределено Тогда
		ЗаявкаНаСертификациюНоменклатуры = ПолеЗаявок.ТекущиеДанные.Ссылка;
	КонецЕсли;
	
КонецПроцедуры // ДокументОснованиеНачалоВыбора()

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа.
//
Процедура ДатаПриИзменении(Элемент)

	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭлементыФормы.Номер);
	мТекущаяДатаДокумента = Дата; // запомним текущую дату документа для контроля номера документа

КонецПроцедуры // ДатаПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля ввода организации.
//
Процедура ОрганизацияПриИзменении(Элемент)

	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭлементыФормы.Номер);
	КонецЕсли;
	
КонецПроцедуры // ОрганизацияПриИзменении()

// Процедура - обработчик события "ПриВыводеСтроки" табличной части "РаспределениеПоЛабораториям".
//
Процедура РаспределениеПоЛабораториямПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	Если Элемент.Колонки.ЕдиницаХранения.Видимость Тогда
		ОформлениеСтроки.Ячейки.ЕдиницаХранения.ОтображатьТекст = Истина;
		ОформлениеСтроки.Ячейки.ЕдиницаХранения.Текст = Номенклатура.ЕдиницаХраненияОстатков.Наименование;
	КонецЕсли;

КонецПроцедуры // РаспределениеПоЛабораториямПриВыводеСтроки()

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать".
// Открывает форму выбора печатных форм объекта.
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ОткрытьФормуВыбораПечатныхФормОбъекта(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ОсновныеДействияФормыПечать()

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)

	УниверсальныеМеханизмы.НапечататьДокументПоУмолчанию(ЭтотОбъект);

КонецПроцедуры