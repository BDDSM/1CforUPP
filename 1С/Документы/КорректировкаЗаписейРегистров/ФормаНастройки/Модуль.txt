Процедура ИнвертироватьОтметки(Список)
	
	Для каждого ЭлСписка Из Список Цикл
		ЭлСписка.Пометка = НЕ ЭлСписка.Пометка;
	КонецЦикла; 
	
КонецПроцедуры // ИнвертироватьОтметки
 
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	Если ИмяТекущейСтраницы<>"" Тогда
		ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы[ИмяТекущейСтраницы];
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ КОМАНДНОЙ ПАНЕЛИ ФОРМЫ

// Обработчик события элемента ОсновныеДействияФормы.ОК
//
Процедура ОсновныеДействияФормыОК(Кнопка)
	
	// Сначала удалим те, у которых сняли флажки
	УдаленныеНаборы = "";
	Для каждого СтрокаТаблицы Из ТЗРегистровНакопления Цикл
		ЭлементСписка = СписокРегистровНакопления.НайтиПоЗначению(СтрокаТаблицы.Имя);
		Если ЭлементСписка = Неопределено Тогда
			УдаленныеНаборы = УдаленныеНаборы + Символы.ПС + " - " + СтрокаТаблицы.Представление;
			Продолжить;
		КонецЕсли; 
		Если НЕ ЭлементСписка.Пометка Тогда
			УдаленныеНаборы = УдаленныеНаборы + Символы.ПС + " - " + СтрокаТаблицы.Представление;
			Продолжить;
		КонецЕсли; 
	КонецЦикла; 
	
	Если Не ПустаяСтрока(УдаленныеНаборы) Тогда
		
		ТекстВопроса = "Наборы записей следующих регистров накопления будут удалены:" + УдаленныеНаборы + Символы.ПС + "Продолжить?";
		
		ОтветНаВопрос = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
		Если ОтветНаВопрос <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли; 
	
	КонецЕсли; 
	
	// Сначала удалим те, у которых сняли флажки
	УдаленныеНаборы = "";
	Для каждого СтрокаТаблицы Из ТЗРегистровСведений Цикл
		ЭлементСписка = СписокРегистровСведений.НайтиПоЗначению(СтрокаТаблицы.Имя);
		Если ЭлементСписка = Неопределено Тогда
			УдаленныеНаборы = УдаленныеНаборы + Символы.ПС + " - " + СтрокаТаблицы.Представление;
			Продолжить;
		КонецЕсли; 
		Если НЕ ЭлементСписка.Пометка Тогда
			УдаленныеНаборы = УдаленныеНаборы + Символы.ПС + " - " + СтрокаТаблицы.Представление;
			Продолжить;
		КонецЕсли; 
	КонецЦикла; 
	
	Если Не ПустаяСтрока(УдаленныеНаборы) Тогда
		
		ТекстВопроса = "Наборы записей следующих регистров сведений будут удалены:" + УдаленныеНаборы + Символы.ПС + "Продолжить?";
		
		ОтветНаВопрос = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
		Если ОтветНаВопрос <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли; 
	
	КонецЕсли; 
	
	// Сначала удалим те, у которых сняли флажки
	УдаленныеНаборы = "";
	Для каждого СтрокаТаблицы Из ТЗРегистровБухгалтерии Цикл
		ЭлементСписка = СписокРегистровБухгалтерии.НайтиПоЗначению(СтрокаТаблицы.Имя);
		Если ЭлементСписка = Неопределено Тогда
			УдаленныеНаборы = УдаленныеНаборы + Символы.ПС + " - " + СтрокаТаблицы.Представление;
			Продолжить;
		КонецЕсли; 
		Если НЕ ЭлементСписка.Пометка Тогда
			УдаленныеНаборы = УдаленныеНаборы + Символы.ПС + " - " + СтрокаТаблицы.Представление;
			Продолжить;
		КонецЕсли; 
	КонецЦикла; 
	
	Если Не ПустаяСтрока(УдаленныеНаборы) Тогда
		
		ТекстВопроса = "Наборы записей следующих регистров бухгалтерии будут удалены:" + УдаленныеНаборы + Символы.ПС + "Продолжить?";
		
		ОтветНаВопрос = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
		Если ОтветНаВопрос <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли; 
	
	КонецЕсли; 
	
	
	ЭтаФорма.Закрыть(Истина);
	
КонецПроцедуры

// Процедура вызывается при нажатии кнопки "Отметить все регистры" командной панели
//
Процедура КоманднаяПанельРегистрыНакопленияДействиеОтметитьВсеРегистрыНакопления(Кнопка)
	
	СписокРегистровНакопления.ЗаполнитьПометки(Истина);
	
КонецПроцедуры

// Процедура вызывается при нажатии кнопки "Снять отметку со всех регистров" командной панели
//
Процедура КоманднаяПанельРегистрыНакопленияДействиеСнятьОтметкуСоВсехРегистровНакопления(Кнопка)
	
	СписокРегистровНакопления.ЗаполнитьПометки(Ложь);

КонецПроцедуры

// Процедура вызывается при нажатии кнопки "Инвертировать отметки" командной панели
//
Процедура КоманднаяПанельРегистрыНакопленияДействиеИнвертироватьОтметкиРегистровНакопления(Кнопка)
	
	ИнвертироватьОтметки(СписокРегистровНакопления);
	
КонецПроцедуры

// Процедура вызывается при нажатии кнопки "Отметить все регистры" командной панели
//
Процедура КоманднаяПанельРегистрыСведенийДействиеОтметитьВсеРегистрыСведений(Кнопка)
	
	СписокРегистровСведений.ЗаполнитьПометки(Истина);
	
КонецПроцедуры

// Процедура вызывается при нажатии кнопки "Снять отметку со всех регистров" командной панели
//
Процедура КоманднаяПанельРегистрыСведенийДействиеСнятьОтметкуСоВсехРегистровСведений(Кнопка)
	
	СписокРегистровСведений.ЗаполнитьПометки(Ложь);
	
КонецПроцедуры

// Процедура вызывается при нажатии кнопки "Инвертировать отметки" командной панели
//
Процедура КоманднаяПанельРегистрыСведенийДействиеИнвертироватьОтметкиРегистровСведений(Кнопка)

	ИнвертироватьОтметки(СписокРегистровСведений);
	
КонецПроцедуры

// Процедура вызывается при нажатии кнопки "Отметить все регистры" командной панели
//
Процедура КоманднаяПанельРегистрыБухгалтерииДействиеОтметитьВсеРегистрыБухгалтерии(Кнопка)
	
	СписокРегистровБухгалтерии.ЗаполнитьПометки(Истина);
	
КонецПроцедуры

// Процедура вызывается при нажатии кнопки "Снять отметку со всех регистров" командной панели
//
Процедура КоманднаяПанельРегистрыБухгалтерииДействиеСнятьОтметкуСоВсехРегистровБухгалтерии(Кнопка)
	
	СписокРегистровБухгалтерии.ЗаполнитьПометки(Ложь);
	
КонецПроцедуры

// Процедура вызывается при нажатии кнопки "Инвертировать отметки" командной панели
//
Процедура КоманднаяПанельРегистрыБухгалтерииДействиеИнвертироватьОтметкиРегистровБухгалтерии(Кнопка)
	
	ИнвертироватьОтметки(СписокРегистровБухгалтерии);
	
КонецПроцедуры