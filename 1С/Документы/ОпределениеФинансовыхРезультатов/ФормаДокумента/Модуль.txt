Перем мВалютаРегламентированногоУчета;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

////////////////////////////////////////////////////////////////////////////////
// УПРАВЛЕНИЕ ВНЕШНИМ ВИДОМ ФОРМЫ

// Установка видимости и доступности реквизитов формы.
//
Процедура УстановитьДоступность(флРедактирование)
	
	ЭлементыФормы.СписаниеУбытковПрошлыхЛет.Доступность 			 = ОтражатьВНалоговомУчете;
	ЭлементыФормы.ВключениеАмортизационнойПремииВРасходы.Доступность = ОтражатьВНалоговомУчете;
	
	Если флРедактирование И НЕ ОтражатьВНалоговомУчете Тогда
		Если СписаниеУбытковПрошлыхЛет Тогда
			СписаниеУбытковПрошлыхЛет = Ложь;
		КонецЕсли;
		Если ВключениеАмортизационнойПремииВРасходы Тогда
			ВключениеАмортизационнойПремииВРасходы = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(мУчетнаяПолитикаРегл) Тогда
		ЭлементыФормы.РасчетРезервовПоСомнительнымДолгам.Доступность = мУчетнаяПолитикаРегл.ФормироватьРезервыПоСомнительнымДолгамБУ ИЛИ мУчетнаяПолитикаРегл.ФормироватьРезервыПоСомнительнымДолгамНУ;
	Иначе
		ЭлементыФормы.РасчетРезервовПоСомнительнымДолгам.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры // УстановитьДоступность()

// Процедура проверяет настройки документа в зависимости от учетной политики организации.
//
Процедура УстановитьНастройкиИзУчетнойПолитикиОрганизации()

	мУчетнаяПолитикаРегл = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(Дата, Организация);
	Если НЕ ЗначениеЗаполнено(мУчетнаяПолитикаРегл) Тогда
		РасчетРезервовПоСомнительнымДолгам = Ложь;
		Возврат;
	КонецЕсли;	
	
	Если НЕ мУчетнаяПолитикаРегл.ФормироватьРезервыПоСомнительнымДолгамБУ
		 И НЕ мУчетнаяПолитикаРегл.ФормироватьРезервыПоСомнительнымДолгамНУ Тогда
		РасчетРезервовПоСомнительнымДолгам = Ложь; 	
	КонецЕсли;

КонецПроцедуры // ОпределитьНастройкиИзУчетнойПолитикиОрганизации()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка,Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
	СоответствиеТЧ = Новый Соответствие;
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧПоДеревуКнопок(мКнопкиЗаполненияТЧ,СоответствиеТЧ);
	
КонецПроцедуры

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();	
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()
	
	Если НЕ ЭтоНовый() Тогда 
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	КонецЕсли;
	
	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);
		ЗаполнитьВыполняемыеДействия();
	КонецЕсли;
	
	Если Проведен И НЕ ЭтаФорма.ТолькоПросмотр И Проверить_ДокументВыполняетУдаленныеОперации() Тогда
		ТекстСообщения = "Внимание! Документ """ + Ссылка + """   
		|содержит проводки, которые теперь формируются регламентным документом ""Закрытие года""
		|Перепроведение документа приведет к удалению части его движений.
		|Для создания документа ""Закрытие года"" на основании данного документа предусмотрена специальная обработка.
		|Запустить ее можно следующим образом:
		|1) Меню ""Справка - Дополнения к описанию"", нажать кнопку ""Вывести описание обновлений""
		|2) Перейти в раздел ""Новое в версии 1.2.15 - Операции выполняемые после обновления конфигурации""
		|3) Нажать на гиперссылку ""Открыть обработку Обновление документов выполнения регламентных операций""
		|4) Вручную добавить данный документ в список обрабатываемых документов, либо воспользоваться кнопкой ""Заполнить""
		|5) Нажать кнопку ""Выполнить""";
		ОбщегоНазначения.Сообщение(ТекстСообщения, Перечисления.ВидыСообщений.ВажнаяИнформация);
	КонецЕсли;	

	// Установить активный реквизит.
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);

	ПредставлениеПериодаРегистрации = РаботаСДиалогами.ПолучитьПредставлениеПериодаРегистрации(ПериодРегистрации);

	Если НЕ ЗначениеЗаполнено(мУчетнаяПолитикаРегл) Тогда
		мУчетнаяПолитикаРегл = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(Дата, Организация);
	КонецЕсли;
	
	УстановитьДоступность(Ложь);
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	// Создать кнопки печати
	ФормированиеПечатныхФорм.СоздатьКнопкиПечати(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "ПослеЗаписи" формы
//
Процедура ПослеЗаписи()

	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭлементыФормы.Номер);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода организации.
//
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если НЕ ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;
	
	УстановитьНастройкиИзУчетнойПолитикиОрганизации();
	
	УстановитьДоступность(Истина);
	
КонецПроцедуры

Процедура ДатаПриИзменении(Элемент)
	
	Если НачалоМесяца(ПериодРегистрации) <> НачалоМесяца(Дата) Тогда
		ПериодРегистрации = НачалоМесяца(Дата);
		ЭлементыФормы.ПредставлениеПериодаРегистрации.Значение = РаботаСДиалогами.ПолучитьПредставлениеПериодаРегистрации(ПериодРегистрации)
	КонецЕсли;	
	
	УстановитьНастройкиИзУчетнойПолитикиОрганизации();
	
	УстановитьДоступность(Истина);
	
КонецПроцедуры

Процедура ОтражатьВНалоговомУчетеПриИзменении(Элемент)
	
	УстановитьДоступность(Истина);
	
КонецПроцедуры


Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
	
КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры


// Процедура - обработчик нажатия на кнопку "Печать".
// Открывает форму выбора печатных форм объекта.
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ОткрытьФормуВыбораПечатныхФормОбъекта(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ОсновныеДействияФормыПечать() 

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)

	УниверсальныеМеханизмы.НапечататьДокументПоУмолчанию(ЭтотОбъект);

КонецПроцедуры


// Процедура открывает журнал проводок БУ с отбором по текущему регистратору
//
Процедура ДействияФормыПроводкиДтКт(Кнопка)

	БухгалтерскийУчет.ОткрытьЖурналПроводок(Ссылка);

КонецПроцедуры

Процедура ДействияФормыПроводкиДтКтНУ(Кнопка)
	
	БухгалтерскийУчет.ОткрытьЖурналПроводок(Ссылка, "НУ");

КонецПроцедуры


мВалютаРегламентированногоУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета");