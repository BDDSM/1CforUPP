Перем мСтруктураДляОтбораПоКатегориямПлатежи;
Перем мСтруктураДляОтбораПоКатегориямПоступления;


Процедура КоманднаяПанельНастройкакнВидДвижения(Кнопка)
	
	Если Кнопка.Пометка Тогда
		РаботаСДиалогами.УстановитьТекущуюСтраницу("Поступления",ЭлементыФормы.ПанельНастройка);
		ЭлементыФормы.КоманднаяПанельНастройка.Кнопки.кнВидДвижения.Текст="Перейти к платежам";
	Иначе
		РаботаСДиалогами.УстановитьТекущуюСтраницу("Платежи",ЭлементыФормы.ПанельНастройка);
		ЭлементыФормы.КоманднаяПанельНастройка.Кнопки.кнВидДвижения.Текст="Перейти к поступлениям";
	КонецЕсли;
	
	Кнопка.Пометка=Не Кнопка.Пометка;
	
КонецПроцедуры

Процедура КнопкаНастройкаПериодаНажатие(Элемент)
	
	ИмяДатаНач = СтрЗаменить(Элемент.Имя, "КнопкаНастройкаПериода", "") + "ДатаНач";
	ИмяДатаКон = СтрЗаменить(Элемент.Имя, "КнопкаНастройкаПериода", "") + "ДатаКон";
	
	МассивВозврата = УправлениеОтчетами.ВвестиПериод(ЭтаФорма[ИмяДатаНач], ЭтаФорма[ИмяДатаКон]);
	
	Если ТипЗнч(МассивВозврата) = Тип("Массив") Тогда
		
		ЭтаФорма[ИмяДатаНач] = МассивВозврата[0];
		ЭтаФорма[ИмяДатаКон] = МассивВозврата[1];
		
	КонецЕсли; 

КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

Процедура УправлениеДоступностьюЭлементовУправления(Элемент)
	
	ИмяЭлемента = Элемент.Имя;
	ДоступностьЭлементов = Элемент.Значение;
	
	Если ИмяЭлемента="Поступления" Тогда
		
		ЭлементыФормы.ПоступленияДатаНач.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПоступленияДатаКон.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьПоступленияПо.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.КнопкаНастройкаПериодаПоступления.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьПроцентПоступления.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПроцентПоступления.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.УстановитьСтатьюПоступления.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.СтатьяОборотовПоступления.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.УстановитьПроектПоступления.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПроектПоступления.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияПоступленияКонтрагенты.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияПоступленияДоговоры.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияПоступленияСделки.Доступность=ДоступностьЭлементов;
		
	ИначеЕсли ИмяЭлемента="ПланПоступления" Тогда
		
		ЭлементыФормы.ПланПоступленияДатаНач.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПланПоступленияДатаКон.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьПланПоступленияПо.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.КнопкаНастройкаПериодаПланПоступления.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьПроцентПланПоступления.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПроцентПланПоступления.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.УстановитьСтатьюПланПоступления.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.СтатьяОборотовПланПоступления.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.УстановитьПроектПланПоступления.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПроектПланПоступления.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияПланПоступленияКонтрагенты.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияПланПоступленияДоговоры.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияПланПоступленияСделки.Доступность=ДоступностьЭлементов;
		
	ИначеЕсли ИмяЭлемента="ОбъемПродаж" Тогда
		
		ЭлементыФормы.ОбъемПродажДатаНач.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ОбъемПродажДатаКон.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьОбъемПродажПо.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.КнопкаНастройкаПериодаОбъемПродаж.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьПроцентОбъемПродаж.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПроцентОбъемПродаж.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьСтатьяОбъемПродаж.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.СтатьяОборотовОбъемПродаж.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.УстановитьПроектОбъемПродаж.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПроектОбъемПродаж.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияОбъемПродажКонтрагенты.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияОбъемПродажДоговоры.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияОбъемПродажСделки.Доступность=ДоступностьЭлементов;
		
	ИначеЕсли ИмяЭлемента="ПланыПродаж" Тогда
		
		ЭлементыФормы.ПланыПродажДатаНач.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПланыПродажДатаКон.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьПланыПродажПо.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.КнопкаНастройкаПериодаПланыПродаж.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьПроцентПланыПродаж.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПроцентПланыПродаж.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьСтатьяПланыПродаж.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.СтатьяОборотовПланыПродаж.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.УстановитьПроектПланыПродаж.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПроектПланыПродаж.Доступность=ДоступностьЭлементов;
		
	ИначеЕсли ИмяЭлемента="ДебиторскаяЗадолженность" Тогда
		
		ЭлементыФормы.ДатаОстаткаДебиторскаяЗадолженность.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ОтборСуммДебиторскаяЗадолженность.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ВидОтбораДебиторскаяЗадолженность.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ГраницаОтбораДебиторскаяЗадолженность.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПроцентДебиторскаяЗадолженность.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.СтатьяОборотовДебиторскаяЗадолженность.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПроектДебиторскаяЗадолженность.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияДебиторскаяЗадолженностьДоговоры.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияДебиторскаяЗадолженностьКонтрагенты.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияДебиторскаяЗадолженностьСделки.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьПроцентДебиторскаяЗадолженность.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьСтатьяДебиторскаяЗадолженность.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьПроектДебиторскаяЗадолженность.Доступность=ДоступностьЭлементов;
		
		УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ОтборСуммДебиторскаяЗадолженность);
			
	ИначеЕсли ИмяЭлемента="ОтборСуммДебиторскаяЗадолженность" Тогда
		
		ЭлементыФормы.ВидОтбораДебиторскаяЗадолженность.Доступность=ДоступностьЭлементов И ДебиторскаяЗадолженность;
		ЭлементыФормы.ГраницаОтбораДебиторскаяЗадолженность.Доступность=ДоступностьЭлементов И ДебиторскаяЗадолженность;
		
	ИначеЕсли ИмяЭлемента="ЗаказыПокупателей" Тогда
		
		ЭлементыФормы.ЗаказыПокупателейДатаНач.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ЗаказыПокупателейДатаКон.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ОтборСуммЗаказыПокупателей.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ВидОтбораЗаказыПокупателей.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ГраницаОтбораЗаказыПокупателей.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПроцентЗаказыПокупателей.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.СтатьяОборотовЗаказыПокупателей.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПроектЗаказыПокупателей.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияЗаказыПокупателейДоговоры.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияЗаказыПокупателейКонтрагенты.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияЗаказыПокупателейСделки.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьПроцентЗаказыПокупателей.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьСтатьяЗаказыПокупателей.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьПроектЗаказыПокупателей.Доступность=ДоступностьЭлементов;
		
		УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ОтборСуммЗаказыПокупателей);		
	
	ИначеЕсли ИмяЭлемента="ОтборСуммЗаказыПокупателей" Тогда
		
		ЭлементыФормы.ВидОтбораЗаказыПокупателей.Доступность=ДоступностьЭлементов И ЗаказыПокупателей;
		ЭлементыФормы.ГраницаОтбораЗаказыПокупателей.Доступность=ДоступностьЭлементов И ЗаказыПокупателей;
		
	ИначеЕсли ИмяЭлемента="Платежи" Тогда
		
		ЭлементыФормы.ПлатежиДатаНач.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПлатежиДатаКон.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьПлатежиПо.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.КнопкаНастройкаПериодаПлатежи.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьПроцентПлатежи.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПроцентПлатежи.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.УстановитьСтатьюПлатежи.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.СтатьяОборотовПлатежи.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.УстановитьПроектПлатежи.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПроектПлатежи.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияПлатежиКонтрагенты.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияПлатежиДоговоры.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияПлатежиСделки.Доступность=ДоступностьЭлементов;
		
	ИначеЕсли ИмяЭлемента="ПланПлатежи" Тогда
		
		ЭлементыФормы.ПланПлатежиДатаНач.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПланПлатежиДатаКон.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьПланПлатежиПо.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.КнопкаНастройкаПериодаПланПлатежи.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьПроцентПланПлатежи.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПроцентПланПлатежи.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.УстановитьСтатьюПланПлатежи.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.СтатьяОборотовПланПлатежи.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.УстановитьПроектПланПлатежи.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПроектПланПлатежи.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияПланПлатежиКонтрагенты.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияПланПлатежиДоговоры.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияПланПлатежиСделки.Доступность=ДоступностьЭлементов;
		
	ИначеЕсли ИмяЭлемента="ОбъемЗакупок" Тогда
		
		ЭлементыФормы.ОбъемЗакупокДатаНач.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ОбъемЗакупокДатаКон.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьОбъемЗакупокПо.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.КнопкаНастройкаПериодаОбъемЗакупок.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьПроцентОбъемЗакупок.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПроцентОбъемЗакупок.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьСтатьяОбъемЗакупок.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.СтатьяОборотовОбъемЗакупок.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.УстановитьПроектОбъемЗакупок.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПроектОбъемЗакупок.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияОбъемЗакупокКонтрагенты.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияОбъемЗакупокДоговоры.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияОбъемЗакупокСделки.Доступность=ДоступностьЭлементов;
		
	ИначеЕсли ИмяЭлемента="ПланыЗакупок" Тогда
		
		ЭлементыФормы.ПланыЗакупокДатаНач.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПланыЗакупокДатаКон.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьПланыЗакупокПо.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.КнопкаНастройкаПериодаПланыЗакупок.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьПроцентПланыЗакупок.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПроцентПланыЗакупок.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьСтатьяПланыЗакупок.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.СтатьяОборотовПланыЗакупок.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.УстановитьПроектПланыЗакупок.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПроектПланыЗакупок.Доступность=ДоступностьЭлементов;
		
	ИначеЕсли ИмяЭлемента="КредиторскаяЗадолженность" Тогда
		
		ЭлементыФормы.ДатаОстаткаКредиторскаяЗадолженность.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ОтборСуммКредиторскаяЗадолженность.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ВидОтбораКредиторскаяЗадолженность.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ГраницаОтбораКредиторскаяЗадолженность.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПроцентКредиторскаяЗадолженность.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.СтатьяОборотовКредиторскаяЗадолженность.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПроектКредиторскаяЗадолженность.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияКредиторскаяЗадолженностьДоговоры.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияКредиторскаяЗадолженностьКонтрагенты.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияКредиторскаяЗадолженностьСделки.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьПроцентКредиторскаяЗадолженность.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьСтатьяКредиторскаяЗадолженность.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьПроектКредиторскаяЗадолженность.Доступность=ДоступностьЭлементов;
		
		УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ОтборСуммКредиторскаяЗадолженность);
		
	ИначеЕсли ИмяЭлемента="ОтборСуммКредиторскаяЗадолженность" Тогда
		
		ЭлементыФормы.ВидОтбораКредиторскаяЗадолженность.Доступность=ДоступностьЭлементов И КредиторскаяЗадолженность;
		ЭлементыФормы.ГраницаОтбораКредиторскаяЗадолженность.Доступность=ДоступностьЭлементов И КредиторскаяЗадолженность;
		
	ИначеЕсли ИмяЭлемента="ЗаказыПоставщикам" Тогда
		
		ЭлементыФормы.ЗаказыПоставщикамДатаНач.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ЗаказыПоставщикамДатаКон.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ОтборСуммЗаказыПоставщикам.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ВидОтбораЗаказыПоставщикам.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ГраницаОтбораЗаказыПоставщикам.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПроцентЗаказыПоставщикам.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.СтатьяОборотовЗаказыПоставщикам.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПроектЗаказыПоставщикам.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияЗаказыПоставщикамДоговоры.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияЗаказыПоставщикамКонтрагенты.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ДетализацияЗаказыПоставщикамСделки.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьПроцентЗаказыПоставщикам.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьСтатьяЗаказыПоставщикам.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьПроектЗаказыПоставщикам.Доступность=ДоступностьЭлементов;
		
		УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ОтборСуммЗаказыПоставщикам);
		
	ИначеЕсли ИмяЭлемента="ОтборСуммЗаказыПоставщикам" Тогда
		
		ЭлементыФормы.ВидОтбораЗаказыПоставщикам.Доступность=ДоступностьЭлементов И ЗаказыПоставщикам;
		ЭлементыФормы.ГраницаОтбораЗаказыПоставщикам.Доступность=ДоступностьЭлементов И ЗаказыПоставщикам;
		
	ИначеЕсли ИмяЭлемента="ЗаработнаяПлата" Тогда
		
		ЭлементыФормы.ДатаОстаткаЗаработнаяПлата.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПроцентЗаработнаяПлата.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.СтатьяОборотовЗаработнаяПлата.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.ПроектЗаработнаяПлата.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьПроцентЗаработнаяПлата.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьСтатьяЗаработнаяПлата.Доступность=ДоступностьЭлементов;
		ЭлементыФормы.НадписьПроектЗаработнаяПлата.Доступность=ДоступностьЭлементов;
		
	КонецЕсли;
		
		
КонецПроцедуры // УправлениеДоступностьюЭлементовУправления()

Процедура НастроитьПостроительПлатежи()
	
	Перем СтруктураДляОтбораПоКатегориям;
	Перем СоответствиеНазначений;
	
	ТекстОтбораДатаОплаты="";
	
	Если НЕ (ЗаказыПоставщикамДатаНач='00010101' ИЛИ ЗаказыПоставщикамДатаКон='00010101') Тогда
		
		ТекстОтбораДатаОплаты="И (Сделка.ДатаОплаты МЕЖДУ &ЗаказыПоставщикамДатаНач И &ЗаказыПоставщикамДатаКон)";
		
	ИначеЕсли НЕ ЗаказыПоставщикамДатаНач='00010101' Тогда
		
		ТекстОтбораДатаОплаты="И (Сделка.ДатаОплаты >= &ЗаказыПоставщикамДатаНач)";
		
	ИначеЕсли НЕ ЗаказыПоставщикамДатаКон='00010101' Тогда
		
		ТекстОтбораДатаОплаты="И (Сделка.ДатаОплаты <= &ЗаказыПоставщикамДатаКон)";
		
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ //РАЗЛИЧНЫЕ
	|	1 КАК Источник,
	|	"+?(ДетализацияОбъемЗакупокКонтрагенты,"ЗакупкиОбороты.Контрагент","&ПустойКонтрагент")+" КАК Контрагент,
	|	"+?(ДетализацияОбъемЗакупокДоговоры,"ЗакупкиОбороты.ДоговорКонтрагента","&ПустойДоговор")+" КАК ДоговорКонтрагента,
	|	"+?(ДетализацияОбъемЗакупокСделки,"ЗакупкиОбороты.ЗаказПоставщику","Неопределено")+" КАК Сделка,
	|	"+?(УстановитьПроектОбъемЗакупок,"&ПроектОбъемЗакупок","ЗакупкиОбороты.Проект")+" КАК Проект,
	|	&СтатьяОборотовОбъемЗакупок КАК СтатьяДвиженияДенежныхСредств,
	|	ЗакупкиОбороты.СтоимостьОборот * &ПроцентОбъемЗакупок КАК Стоимость
	|ИЗ
	|	РегистрНакопления.Закупки.Обороты(&ОбъемЗакупокДатаНач, &ОбъемЗакупокДатаКон,,
	|		&ОбъемЗакупок = Истина
	|		И (СтатусПартии=&Купленный ИЛИ СтатусПартии=&ПустойСтатусПартии)
	|		{Проект.* КАК ОбъемЗакупокПроект,
	|		Подразделение.* КАК ОбъемЗакупокПодразделение,
	|		ДоговорКонтрагента.* КАК ОбъемЗакупокДоговор,
	|		Контрагент.* КАК ОбъемЗакупокКонтрагент,
	|		ЗаказПоставщику.* КАК ОбъемЗакупокЗаказПоставщику,
	|		Номенклатура.* КАК ОбъемЗакупокНоменклатура,
	|		ХарактеристикаНоменклатуры.* КАК ОбъемЗакупокХарактеристикаНоменклатуры,
	|		ДокументЗакупки.* КАК ОбъемЗакупокДокументЗакупки}
	|	) КАК ЗакупкиОбороты
	|	//СОЕДИНЕНИЯ_ОБЪЕМЗАКУПОК
	|
	|{ГДЕ
	|	Проект.* КАК ОбъемЗакупокПроект,
	|	Подразделение.* КАК ОбъемЗакупокПодразделение,
	|	ДоговорКонтрагента.* КАК ОбъемЗакупокДоговор,
	|	Контрагент.* КАК ОбъемЗакупокКонтрагент,
	|	ЗаказПоставщику.* КАК ОбъемЗакупокЗаказПоставщику,
	|	Номенклатура.* КАК ОбъемЗакупокНоменклатура,
	|	ХарактеристикаНоменклатуры.* КАК ОбъемЗакупокХарактеристикаНоменклатуры,
	|	ДокументЗакупки.* КАК ОбъемЗакупокДокументЗакупки
	|	//СВОЙСТВА_ОБЪЕМЗАКУПОК
	|	//КАТЕГОРИИ_ОБЪЕМЗАКУПОК
	|}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //РАЗЛИЧНЫЕ
	|	2 КАК Источник,
	|	&ПустойКонтрагент КАК Контрагент,
	|	&ПустойДоговор КАК ДоговорКонтрагента,
	|	Неопределено КАК Сделка,
	|	"+?(УстановитьПроектПланыЗакупок,"&ПроектПланыЗакупок","ПланыЗакупокОбороты.Проект")+" КАК Проект,
	|	&СтатьяОборотовПланыЗакупок КАК СтатьяДвиженияДенежныхСредств,
	|	(ПланыЗакупокОбороты.СтоимостьОборот + ПланыЗакупокОбороты.НДСОборот) * &ПроцентПланыЗакупок КАК Стоимость
	|ИЗ
	|	РегистрНакопления.ПланыЗакупок.Обороты(&ПланыЗакупокДатаНач, &ПланыЗакупокДатаКон, ,
	|		&ПланыЗакупок = Истина
	|		{Сценарий.* КАК ПланыЗакупокСценарий,
	|		ДокументПланирования.Проект.* КАК ПланыЗакупокПроект,
	|		ДокументПланирования.Подразделение.* КАК ПланыЗакупокПодразделение,
	|		Номенклатура.* КАК ПланыЗакупокНоменклатура,
	|		ХарактеристикаНоменклатуры.* КАК ПланыЗакупокХарактеристикаНоменклатуры,
	|		ДокументПланирования.* КАК ПланыЗакупокДокументПланирования}
	|	) КАК ПланыЗакупокОбороты
	|	//СОЕДИНЕНИЯ_ПЛАНЫЗАКУПОК
	|
	|{ГДЕ
	|	Сценарий.* КАК ПланыЗакупокСценарий,
	|	ДокументПланирования.Проект.* КАК ПланыЗакупокПроект,
	|	ДокументПланирования.Подразделение.* КАК ПланыЗакупокПодразделение,
	|	Номенклатура.* КАК ПланыЗакупокНоменклатура,
	|	ХарактеристикаНоменклатуры.* КАК ПланыЗакупокХарактеристикаНоменклатуры,
	|	ДокументПланирования.* КАК ПланыЗакупокДокументПланирования
	|	//СВОЙСТВА_ПЛАНЫЗАКУПОК
	|	//КАТЕГОРИИ_ПЛАНЫЗАКУПОК
	|}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //РАЗЛИЧНЫЕ
	|	3 КАК Источник,
	|	"+?(ДетализацияПлатежиКонтрагенты,"ОборотДенежныхСредств.Контрагент","&ПустойКонтрагент")+" КАК Контрагент,
	|	"+?(ДетализацияПлатежиДоговоры,"ОборотДенежныхСредств.ДоговорКонтрагента","&ПустойДоговор")+" КАК ДоговорКонтрагента,
	|	"+?(ДетализацияПлатежиСделки,"ОборотДенежныхСредств.Сделка","Неопределено")+" КАК Сделка,
	|	"+?(УстановитьПроектПлатежи,"&ПроектПлатежи","ОборотДенежныхСредств.Проект")+" КАК Проект,
	|	"+?(УстановитьСтатьюПлатежи,"&СтатьяОборотовПлатежи","ОборотДенежныхСредств.СтатьяДвиженияДенежныхСредств")+" КАК СтатьяДвиженияДенежныхСредств,
    |	ОборотДенежныхСредств.СуммаУпрОборот*&ПроцентПлатежи КАК Стоимость
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныхСредств.Обороты(&ПлатежиДатаНач, &ПлатежиДатаКон,,
	|		&Платежи = Истина
	|		И ПриходРасход=&Расход
	|		{ВидДенежныхСредств КАК ПлатежиВидДенежныхСредств,
	|		БанковскийСчетКасса.* КАК ПлатежиБанковскийСчетКасса,
    |		ДоговорКонтрагента.* КАК ПлатежиДоговор,
	|		Контрагент.* КАК ПлатежиКонтрагент,
	|		Сделка.* КАК ПлатежиСделка,
	|		СтатьяДвиженияДенежныхСредств.* КАК ПлатежиСтатьяДвиженияДенежныхСредств,
    |		ДокументДвижения.* КАК ПлатежиДокументДвижения,
	|		Проект.* КАК ПлатежиПроект,
	|		ДокументПланированияПлатежа.ЦФО.* КАК ПлатежиПодразделение}
	|	) КАК ОборотДенежныхСредств
	|	//СОЕДИНЕНИЯ_ПЛАТЕЖИ
	|
	|{ГДЕ
	|		ВидДенежныхСредств КАК ПлатежиВидДенежныхСредств,
	|		БанковскийСчетКасса.* КАК ПлатежиБанковскийСчетКасса,
    |		ДоговорКонтрагента.* КАК ПлатежиДоговор,
	|		Контрагент.* КАК ПлатежиКонтрагент,
	|		Сделка.* КАК ПлатежиСделка,
	|		СтатьяДвиженияДенежныхСредств.* КАК ПлатежиСтатьяДвиженияДенежныхСредств,
    |		ДокументДвижения.* КАК ПлатежиДокументДвижения,
	|		Проект.* КАК ПлатежиПроект,
	|		ДокументПланированияПлатежа.ЦФО.* КАК ПлатежиПодразделение
	|	//СВОЙСТВА_ПЛАТЕЖИ
	|	//КАТЕГОРИИ_ПЛАТЕЖИ
	|}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //РАЗЛИЧНЫЕ
	|	4 КАК Источник,
	|	"+?(ДетализацияПланПлатежиКонтрагенты,"ПланОборотДенежныхСредств.Контрагент","&ПустойКонтрагент")+" КАК Контрагент,
	|	"+?(ДетализацияПланПлатежиДоговоры,"ПланОборотДенежныхСредств.ДоговорКонтрагента","&ПустойДоговор")+" КАК ДоговорКонтрагента,
	|	"+?(ДетализацияПланПлатежиСделки,"ПланОборотДенежныхСредств.Сделка","Неопределено")+" КАК Сделка,
	|	"+?(УстановитьПроектПланПлатежи,"&ПроектПланПлатежи","ПланОборотДенежныхСредств.Проект")+" КАК Проект,
	|	"+?(УстановитьСтатьюПланПлатежи,"&СтатьяОборотовПланПлатежи","ПланОборотДенежныхСредств.СтатьяДвиженияДенежныхСредств")+" КАК СтатьяДвиженияДенежныхСредств,
    |	ПланОборотДенежныхСредств.СуммаУпрОборот*&ПроцентПланПлатежи КАК Стоимость
	|ИЗ
	|	РегистрНакопления.ПланыДвиженияДенежныхСредств.Обороты(&ПланПлатежиДатаНач, &ПланПлатежиДатаКон,,
	|		&ПланПлатежи = Истина
	|		И ПриходРасход=&Расход
	|		{ВидДенежныхСредств КАК ПланПлатежиВидДенежныхСредств,
	|		ВалютаДенежныхСредств КАК ПланПлатежиВалютаДенежныхСредств,
    |		ДоговорКонтрагента.* КАК ПланПлатежиДоговор,
	|		Контрагент.* КАК ПланПлатежиКонтрагент,
	|		Сделка.* КАК ПланПлатежиСделка,
	|		СтатьяДвиженияДенежныхСредств.* КАК ПланПлатежиСтатьяДвиженияДенежныхСредств,
    |		ДокументПланирования.* КАК ПланПлатежиДокументПланирования,
	|		Проект.* КАК ПланПлатежиПроект}
	|	) КАК ПланОборотДенежныхСредств
	|	//СОЕДИНЕНИЯ_ПЛАН_ПЛАТЕЖИ
	|
	|{ГДЕ
	|		ВидДенежныхСредств КАК ПланПлатежиВидДенежныхСредств,
	|		ВалютаДенежныхСредств КАК ПланПлатежиВалютаДенежныхСредств,
    |		ДоговорКонтрагента.* КАК ПланПлатежиДоговор,
	|		Контрагент.* КАК ПланПлатежиКонтрагент,
	|		Сделка.* КАК ПланПлатежиСделка,
	|		СтатьяДвиженияДенежныхСредств.* КАК ПланПлатежиСтатьяДвиженияДенежныхСредств,
    |		ДокументПланирования.* КАК ПланПлатежиДокументПланирования,
	|		Проект.* КАК ПланПлатежиПроект
	|	//СВОЙСТВА_ПЛАН_ПЛАТЕЖИ
	|	//КАТЕГОРИИ_ПЛАН_ПЛАТЕЖИ
	|}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //РАЗЛИЧНЫЕ
	|	5 КАК Источник,
	|	"+?(ДетализацияКредиторскаяЗадолженностьКонтрагенты,"КредиторскаяЗадолженность.Контрагент","&ПустойКонтрагент")+" КАК Контрагент,
	|	"+?(ДетализацияКредиторскаяЗадолженностьДоговоры,"КредиторскаяЗадолженность.ДоговорКонтрагента","&ПустойДоговор")+" КАК ДоговорКонтрагента,
	|	"+?(ДетализацияКредиторскаяЗадолженностьСделки,"КредиторскаяЗадолженность.Сделка","Неопределено")+" КАК Сделка,
	|	&ПроектКредиторскаяЗадолженность КАК Проект,
	|	&СтатьяОборотовКредиторскаяЗадолженность КАК СтатьяДвиженияДенежныхСредств,
	|	КредиторскаяЗадолженность.СуммаУпрОстаток*(-1)* &ПроцентКредиторскаяЗадолженность КАК Стоимость
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаОстаткаКредиторскаяЗадолженность,
	|		&КредиторскаяЗадолженность = Истина
	|		{ДоговорКонтрагента.* КАК КредиторскаяЗадолженностьДоговор,
	|		Контрагент.* КАК КредиторскаяЗадолженностьКонтрагент,
	|		Сделка.* КАК КредиторскаяЗадолженностьСделка}
	|	) КАК КредиторскаяЗадолженность
	|	//СОЕДИНЕНИЯ_КРЕДИТОРСКАЯ_ЗАДОЛЖЕННОСТЬ
	| "+?(ОтборСуммКредиторскаяЗадолженность,"ГДЕ КредиторскаяЗадолженность.СуммаУпрОстаток*(-1)"+ВидОтбораКредиторскаяЗадолженность+"&ГраницаОтбораКредиторскаяЗадолженность","ГДЕ КредиторскаяЗадолженность.СуммаУпрОстаток<0")+"
	|{ГДЕ
	|		ДоговорКонтрагента.* КАК КредиторскаяЗадолженностьДоговор,
	|		Контрагент.* КАК КредиторскаяЗадолженностьКонтрагент,
	|		Сделка.* КАК КредиторскаяЗадолженностьСделка
	|	//СВОЙСТВА_КРЕДИТОРСКАЯ_ЗАДОЛЖЕННОСТЬ
	|	//КАТЕГОРИИ_КРЕДИТОРСКАЯ_ЗАДОЛЖЕННОСТЬ
	|}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //РАЗЛИЧНЫЕ
	|	6 КАК Источник,
	|	"+?(ДетализацияЗаказыПоставщикамКонтрагенты,"КредиторскаяЗадолженностьЗаказы.Контрагент","&ПустойКонтрагент")+" КАК Контрагент,
	|	"+?(ДетализацияЗаказыПоставщикамДоговоры,"КредиторскаяЗадолженностьЗаказы.ДоговорКонтрагента","&ПустойДоговор")+" КАК ДоговорКонтрагента,
	|	"+?(ДетализацияЗаказыПоставщикамСделки,"КредиторскаяЗадолженностьЗаказы.Сделка","Неопределено")+" КАК Сделка,
	|	&ПроектЗаказыПоставщикам КАК Проект,
	|	&СтатьяОборотовЗаказыПоставщикам КАК СтатьяДвиженияДенежныхСредств,
	|	КредиторскаяЗадолженностьЗаказы.СуммаУпрОстаток*(-1)* &ПроцентЗаказыПоставщикам КАК Стоимость
	|ИЗ
	|	РегистрНакопления.РасчетыСКонтрагентами.Остатки(,
	|		(НЕ Сделка=Неопределено) 
	|		И (Сделка ССЫЛКА Документ.ЗаказПоставщику) 
	|"+ТекстОтбораДатаОплаты+"
	|		И &ЗаказыПоставщикам = Истина
	|		{ДоговорКонтрагента.* КАК ЗаказыПоставщикамДоговор,
	|		Контрагент.* КАК ЗаказыПоставщикамКонтрагент,
	|		Сделка.* КАК ЗаказыПоставщикамСделка}
	|	) КАК КредиторскаяЗадолженностьЗаказы
	|	//СОЕДИНЕНИЯ_ЗАКАЗЫ_ПОСТАВЩИКАМ
	| "+?(ОтборСуммЗаказыПоставщикам,"ГДЕ КредиторскаяЗадолженностьЗаказы.СуммаУпрОстаток*(-1)"+ВидОтбораЗаказыПоставщикам+"&ГраницаОтбораЗаказыПоставщикам","ГДЕ КредиторскаяЗадолженностьЗаказы.СуммаУпрОстаток<0")+"
	|{ГДЕ
	|		ДоговорКонтрагента.* КАК ЗаказыПоставщикамДоговор,
	|		Контрагент.* КАК ЗаказыПоставщикамКонтрагент,
	|		Сделка.* КАК ЗаказыПоставщикамСделка
	|	//СВОЙСТВА_ЗАКАЗЫ_ПОСТАВЩИКАМ
	|	//КАТЕГОРИИ_ЗАКАЗЫ_ПОСТАВЩИКАМ
	|}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //РАЗЛИЧНЫЕ
	|	7 КАК Источник,
	|	&ПустойКонтрагент КАК Контрагент,
	|	&ПустойДоговор КАК ДоговорКонтрагента,
	|	Неопределено КАК Сделка,
	|	&ПроектЗаработнаяПлата КАК Проект,
	|	&СтатьяОборотовЗаработнаяПлата КАК СтатьяДвиженияДенежныхСредств,
	|	ЗаработнаяПлата.СуммаУпрОстаток*(-1)* &ПроцентЗаработнаяПлата КАК Стоимость
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСРаботниками.Остатки(&ДатаОстаткаЗаработнаяПлата,
	|		&ЗаработнаяПлата = Истина) КАК ЗаработнаяПлата
	|	ГДЕ ЗаработнаяПлата.СуммаУпрОстаток<0";
	
	СтруктураПредставлениеПолей = Новый Структура();
	
	// Объем закупок
	СтруктураПредставлениеПолей.Вставить("ОбъемЗакупокПроект",                     "Объем закупок - Проект");
	СтруктураПредставлениеПолей.Вставить("ОбъемЗакупокПодразделение",              "Объем закупок - Подразделение");
	СтруктураПредставлениеПолей.Вставить("ОбъемЗакупокДоговор",                    "Объем закупок - Договор");
	СтруктураПредставлениеПолей.Вставить("ОбъемЗакупокКонтрагент",                 "Объем закупок - Контрагент");
	СтруктураПредставлениеПолей.Вставить("ОбъемЗакупокЗаказПоставщику",            "Объем закупок - Заказ поставщику");
	СтруктураПредставлениеПолей.Вставить("ОбъемЗакупокНоменклатура",               "Объем закупок - Номенклатура");
	СтруктураПредставлениеПолей.Вставить("ОбъемЗакупокХарактеристикаНоменклатуры", "Объем закупок - Характеристика номенклатуры");
	СтруктураПредставлениеПолей.Вставить("ОбъемЗакупокДокументЗакупки",            "Объем закупок - Документ закупки");
	
	// Планы закупок
	СтруктураПредставлениеПолей.Вставить("ПланыЗакупокСценарий",                   "Планы закупок - Сценарий");
	СтруктураПредставлениеПолей.Вставить("ПланыЗакупокПроект",                     "Планы закупок - Проект");
	СтруктураПредставлениеПолей.Вставить("ПланыЗакупокПодразделение",              "Планы закупок - Подразделение");
	СтруктураПредставлениеПолей.Вставить("ПланыЗакупокНоменклатура",               "Планы закупок - Номенклатура");
	СтруктураПредставлениеПолей.Вставить("ПланыЗакупокХарактеристикаНоменклатуры", "Планы закупок - Характеристика номенклатуры");
	СтруктураПредставлениеПолей.Вставить("ПланыЗакупокДокументПланирования",       "Планы закупок - Документ планирования");
	
	// Платежи
	СтруктураПредставлениеПолей.Вставить("ПлатежиВидДенежныхСредств",               "Платежи за период - Наличные, безналичные");
	СтруктураПредставлениеПолей.Вставить("ПлатежиБанковскийСчетКасса", 				"Платежи за период - Банковский счет, касса");
	СтруктураПредставлениеПолей.Вставить("ПлатежиКонтрагент",            			"Платежи за период - Контрагент");
	СтруктураПредставлениеПолей.Вставить("ПлатежиДоговор",            				"Платежи за период - Договор контрагента");
	СтруктураПредставлениеПолей.Вставить("ПлатежиСделка",            				"Платежи за период - Сделка");
	СтруктураПредставлениеПолей.Вставить("ПлатежиСтатьяДвиженияДенежныхСредств",    "Платежи за период - Статья движения денежных средств");
	СтруктураПредставлениеПолей.Вставить("ПлатежиДокументДвижения",            		"Платежи за период - Документ движения");
	СтруктураПредставлениеПолей.Вставить("ПлатежиПроект",            				"Платежи за период - Проект");
	СтруктураПредставлениеПолей.Вставить("ПлатежиПодразделение",            		"Платежи за период - Подразделение");
	
	// Планы платежей
	СтруктураПредставлениеПолей.Вставить("ПланПлатежиВидДенежныхСредств",           "Планы платежей - Наличные, безналичные");
	СтруктураПредставлениеПолей.Вставить("ПланПлатежиВалютаДенежныхСредств",        "Планы платежей - Валюта платежа");
	СтруктураПредставлениеПолей.Вставить("ПланПлатежиКонтрагент",               	"Планы платежей - Контрагент");
	СтруктураПредставлениеПолей.Вставить("ПланПлатежиДоговор",              		"Планы платежей - Договор контрагента");	
	СтруктураПредставлениеПолей.Вставить("ПланПлатежиСделка", 						"Планы платежей - Сделка");
	СтруктураПредставлениеПолей.Вставить("ПланПлатежиСтатьяДвиженияДенежныхСредств","Планы платежей - Статья движения денежных средств");
    СтруктураПредставлениеПолей.Вставить("ПланПлатежиДокументПланирования", 		"Планы платежей - Документ планирования");
	СтруктураПредставлениеПолей.Вставить("ПланПлатежиПроект", 						"Планы платежей - Проект");
	
	// Кредиторская задолженность
	СтруктураПредставлениеПолей.Вставить("КредиторскаяЗадолженностьДоговор",        "Кредиторская задолженность - Договор контрагента");
	СтруктураПредставлениеПолей.Вставить("КредиторскаяЗадолженностьКонтрагент",     "Кредиторская задолженность - Контрагент");
	СтруктураПредставлениеПолей.Вставить("КредиторскаяЗадолженностьСделка",         "Кредиторская задолженность - Сделка");
	
	// Заказы поставщикам
	СтруктураПредставлениеПолей.Вставить("ЗаказыПоставщикамДоговор",        		"Заказы поставщикам - Договор контрагента");
	СтруктураПредставлениеПолей.Вставить("ЗаказыПоставщикамКонтрагент",     		"Заказы поставщикам - Контрагент");
	СтруктураПредставлениеПолей.Вставить("ЗаказыПоставщикамСделка",         		"Заказы поставщикам - Сделка");
	
	//Отборы по свойствам и категориям
	СоответствиеНазначений = Новый Соответствие;

	Если ИспользоватьСвойстваИКатегорииПлатежи Тогда
		
		ПВХ = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов;
		
		ТаблицаПолей = Новый ТаблицаЗначений;
		ТаблицаПолей.Колонки.Добавить("ПутьКДанным");
		ТаблицаПолей.Колонки.Добавить("Представление");
		ТаблицаПолей.Колонки.Добавить("Назначение");
		ТаблицаПолей.Колонки.Добавить("НетКатегорий");
		
		ТекстПоляКатегорий = "";
		ТекстПоляСвойств = "";
		
		// Объем закупок
		ТаблицаПолей.Очистить();
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		
		СтрокаТаблицы.ПутьКДанным = "ЗакупкиОбороты.Номенклатура";
		СтрокаТаблицы.Представление = "Номенклатура (закупки)";
		СтрокаТаблицы.Назначение = ПВХ.Справочник_Номенклатура;
		
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		СтрокаТаблицы.ПутьКДанным = "ЗакупкиОбороты.ХарактеристикаНоменклатуры";
		СтрокаТаблицы.Представление = "Характеристика номенклатуры (закупки)";
		СтрокаТаблицы.Назначение = ПВХ.Справочник_ХарактеристикиНоменклатуры;
		
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		СтрокаТаблицы.ПутьКДанным = "ЗакупкиОбороты.Контрагент";
		СтрокаТаблицы.Представление = "Контрагенты (закупки)";
		СтрокаТаблицы.Назначение = ПВХ.Справочник_Контрагенты;
		
		УправлениеОтчетами.ДобавитьВТекстСвойстваИКатегории(ТаблицаПолей, ТекстЗапроса, СтруктураПредставлениеПолей, СоответствиеНазначений, ПостроительОтчетаПлатежи.Параметры,, ТекстПоляКатегорий, ТекстПоляСвойств,, "//СВОЙСТВА_ОБЪЕМЗАКУПОК", "//КАТЕГОРИИ_ОБЪЕМЗАКУПОК", "//СОЕДИНЕНИЯ_ОБЪЕМЗАКУПОК",, СтруктураДляОтбораПоКатегориям);
		
		// Планы закупок
		ТаблицаПолей.Очистить();
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		
		СтрокаТаблицы.ПутьКДанным = "ПланыЗакупокОбороты.Номенклатура";
		СтрокаТаблицы.Представление = "Номенклатура (планы закупок)";
		СтрокаТаблицы.Назначение = ПВХ.Справочник_Номенклатура;
		
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		СтрокаТаблицы.ПутьКДанным = "ПланыЗакупокОбороты.ХарактеристикаНоменклатуры";
		СтрокаТаблицы.Представление = "Характеристика номенклатуры (планы закупок)";
		СтрокаТаблицы.Назначение = ПВХ.Справочник_ХарактеристикиНоменклатуры;
		
		УправлениеОтчетами.ДобавитьВТекстСвойстваИКатегории(ТаблицаПолей, ТекстЗапроса, СтруктураПредставлениеПолей, СоответствиеНазначений, ПостроительОтчетаПлатежи.Параметры,, ТекстПоляКатегорий, ТекстПоляСвойств,, "//СВОЙСТВА_ПЛАНЫЗАКУПОК", "//КАТЕГОРИИ_ПЛАНЫЗАКУПОК", "//СОЕДИНЕНИЯ_ПЛАНЫЗАКУПОК",, СтруктураДляОтбораПоКатегориям);
		
		// Оборот денежных средств
		ТаблицаПолей.Очистить();
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		
		СтрокаТаблицы.ПутьКДанным = "ОборотДенежныхСредств.Контрагент";
		СтрокаТаблицы.Представление = "Контрагенты (платежи за период)";
		СтрокаТаблицы.Назначение = ПВХ.Справочник_Контрагенты;
		
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		СтрокаТаблицы.ПутьКДанным = "ОборотДенежныхСредств.ДокументДвижения";
		СтрокаТаблицы.Представление = "Документ платежа (платежи за период)";
		СтрокаТаблицы.Назначение = ПВХ.Документы;
		
		УправлениеОтчетами.ДобавитьВТекстСвойстваИКатегории(ТаблицаПолей, ТекстЗапроса, СтруктураПредставлениеПолей, СоответствиеНазначений, ПостроительОтчетаПлатежи.Параметры,, ТекстПоляКатегорий, ТекстПоляСвойств,, "//СВОЙСТВА_ПЛАТЕЖИ", "//КАТЕГОРИИ_ПЛАТЕЖИ", "//СОЕДИНЕНИЯ_ПЛАТЕЖИ",, СтруктураДляОтбораПоКатегориям);
		
		// Планы движения денежных средств
		ТаблицаПолей.Очистить();
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		
		СтрокаТаблицы.ПутьКДанным = "ПланОборотДенежныхСредств.Контрагент";
		СтрокаТаблицы.Представление = "Контрагенты (планы платежей)";
		СтрокаТаблицы.Назначение = ПВХ.Справочник_Контрагенты;
		
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		СтрокаТаблицы.ПутьКДанным = "ПланОборотДенежныхСредств.ДокументПланирования";
		СтрокаТаблицы.Представление = "Документ планирования (планы платежей)";
		СтрокаТаблицы.Назначение = ПВХ.Документы;
		
		УправлениеОтчетами.ДобавитьВТекстСвойстваИКатегории(ТаблицаПолей, ТекстЗапроса, СтруктураПредставлениеПолей, СоответствиеНазначений, ПостроительОтчетаПлатежи.Параметры,, ТекстПоляКатегорий, ТекстПоляСвойств,, "//СВОЙСТВА_ПЛАН_ПЛАТЕЖИ", "//КАТЕГОРИИ_ПЛАН_ПЛАТЕЖИ", "//СОЕДИНЕНИЯ_ПЛАН_ПЛАТЕЖИ",, СтруктураДляОтбораПоКатегориям);

		// Кредиторская задолженность
		ТаблицаПолей.Очистить();
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		
		СтрокаТаблицы.ПутьКДанным = "КредиторскаяЗадолженность.ДоговорКонтрагента.Владелец";
		СтрокаТаблицы.Представление = "Контрагенты (кредиторская задолженность)";
		СтрокаТаблицы.Назначение = ПВХ.Справочник_Контрагенты;
			
		УправлениеОтчетами.ДобавитьВТекстСвойстваИКатегории(ТаблицаПолей, ТекстЗапроса, СтруктураПредставлениеПолей, СоответствиеНазначений, ПостроительОтчетаПлатежи.Параметры,, ТекстПоляКатегорий, ТекстПоляСвойств,, "//СВОЙСТВА_КРЕДИТОРСКАЯ_ЗАДОЛЖЕННОСТЬ", "//КАТЕГОРИИ_КРЕДИТОРСКАЯ_ЗАДОЛЖЕННОСТЬ", "//СОЕДИНЕНИЯ_КРЕДИТОРСКАЯ_ЗАДОЛЖЕННОСТЬ",, СтруктураДляОтбораПоКатегориям);
		
		// Заказы поставщикам
		ТаблицаПолей.Очистить();
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		
		СтрокаТаблицы.ПутьКДанным = "КредиторскаяЗадолженностьЗаказы.ДоговорКонтрагента.Владелец";
		СтрокаТаблицы.Представление = "Контрагенты (заказы поставщикам)";
		СтрокаТаблицы.Назначение = ПВХ.Справочник_Контрагенты;
		
		СтрокаТаблицы.ПутьКДанным = "КредиторскаяЗадолженностьЗаказы.Сделка";
		СтрокаТаблицы.Представление = "Заказы поставщикам";
		СтрокаТаблицы.Назначение = ПВХ.Документы;
			
		УправлениеОтчетами.ДобавитьВТекстСвойстваИКатегории(ТаблицаПолей, ТекстЗапроса, СтруктураПредставлениеПолей, СоответствиеНазначений, ПостроительОтчетаПлатежи.Параметры,, ТекстПоляКатегорий, ТекстПоляСвойств,, "//СВОЙСТВА_ЗАКАЗЫ_ПОСТАВЩИКАМ", "//КАТЕГОРИИ_ЗАКАЗЫ_ПОСТАВЩИКАМ", "//СОЕДИНЕНИЯ_ЗАКАЗЫ_ПОСТАВЩИКАМ",, СтруктураДляОтбораПоКатегориям);
		
	КонецЕсли;
	
	Если ПустаяСтрока(ТекстЗапроса) = Ложь Тогда
		
		ПостроительОтчетаПлатежи.Текст = ТекстЗапроса;
		
	КонецЕсли;
	
	ПостроительОтчетаПлатежи.Параметры.Вставить("Расход",Перечисления.ВидыДвиженийПриходРасход.Расход);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ПустойКонтрагент",Справочники.Контрагенты.ПустаяСсылка());
	ПостроительОтчетаПлатежи.Параметры.Вставить("ПустойДоговор",Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	ПостроительОтчетаПлатежи.Параметры.Вставить("Купленный",Перечисления.СтатусыПартийТоваров.Купленный);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ПустойСтатусПартии",Перечисления.СтатусыПартийТоваров.ПустаяСсылка());
	
	УправлениеОтчетами.УстановитьТипыЗначенийСвойствИКатегорийДляОтбора(ПостроительОтчетаПлатежи, ТекстПоляКатегорий, ТекстПоляСвойств, СоответствиеНазначений, СтруктураПредставлениеПолей);
	
	УправлениеОтчетами.ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчетаПлатежи);
	
	мСтруктураДляОтбораПоКатегориямПлатежи=СтруктураДляОтбораПоКатегориям;
	
КонецПроцедуры // НастроитьПостроительПлатежи()

Процедура НастроитьПостроительПоступления()
	
	Перем СтруктураДляОтбораПоКатегориям;
	Перем СоответствиеНазначений;
	
	ТекстОтбораДатаОплаты="";
	
	Если НЕ (ЗаказыПокупателейДатаНач='00010101' ИЛИ ЗаказыПокупателейДатаКон='00010101') Тогда
		
		ТекстОтбораДатаОплаты="И (Сделка.ДатаОплаты МЕЖДУ &ЗаказыПокупателейДатаНач И &ЗаказыПокупателейДатаКон)";
		
	ИначеЕсли НЕ ЗаказыПокупателейДатаНач='00010101' Тогда
		
		ТекстОтбораДатаОплаты="И (Сделка.ДатаОплаты >= &ЗаказыПокупателейДатаНач)";
		
	ИначеЕсли НЕ ЗаказыПокупателейДатаКон='00010101' Тогда
		
		ТекстОтбораДатаОплаты="И (Сделка.ДатаОплаты <= &ЗаказыПокупателейДатаКон)";
		
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ //РАЗЛИЧНЫЕ
	|	1 КАК Источник,
	|	"+?(ДетализацияОбъемПродажКонтрагенты,"ПродажиОбороты.Контрагент","&ПустойКонтрагент")+" КАК Контрагент,
	|	"+?(ДетализацияОбъемПродажДоговоры,"ПродажиОбороты.ДоговорКонтрагента","&ПустойДоговор")+" КАК ДоговорКонтрагента,
	|	"+?(ДетализацияОбъемПродажСделки,"ПродажиОбороты.ЗаказПокупателя","Неопределено")+" КАК Сделка,
	|	"+?(УстановитьПроектОбъемПродаж,"&ПроектОбъемПродаж","ПродажиОбороты.Проект")+" КАК Проект,
	|	&СтатьяОборотовОбъемПродаж КАК СтатьяДвиженияДенежныхСредств,
	|	ПродажиОбороты.СтоимостьОборот * &ПроцентОбъемПродаж КАК Стоимость
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(&ОбъемПродажДатаНач, &ОбъемПродажДатаКон,,
	|		&ОбъемПродаж = Истина
	|		{Проект.* КАК ОбъемПродажПроект,
	|		Подразделение.* КАК ОбъемПродажПодразделение,
	|		ДоговорКонтрагента.* КАК ОбъемПродажДоговор,
	|		Контрагент.* КАК ОбъемПродажКонтрагент,
	|		ЗаказПокупателя.* КАК ОбъемПродажЗаказПокупателя,
	|		Номенклатура.* КАК ОбъемПродажНоменклатура,
	|		ХарактеристикаНоменклатуры.* КАК ОбъемПродажХарактеристикаНоменклатуры,
	|		ДокументПродажи.* КАК ОбъемПродажДокументПродажи}
	|	) КАК ПродажиОбороты
	|	//СОЕДИНЕНИЯ_ОБЪЕМПРОДАЖ
	|
	|{ГДЕ
	|	Проект.* КАК ОбъемПродажПроект,
	|	Подразделение.* КАК ОбъемПродажПодразделение,
	|	ДоговорКонтрагента.* КАК ОбъемПродажДоговор,
	|	Контрагент.* КАК ОбъемПродажКонтрагент,
	|	ЗаказПокупателя.* КАК ОбъемПродажЗаказПокупателя,
	|	Номенклатура.* КАК ОбъемПродажНоменклатура,
	|	ХарактеристикаНоменклатуры.* КАК ОбъемПродажХарактеристикаНоменклатуры,
	|	ДокументПродажи.* КАК ОбъемПродажДокументПродажи
	|	//СВОЙСТВА_ОБЪЕМПРОДАЖ
	|	//КАТЕГОРИИ_ОБЪЕМПРОДАЖ
	|}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //РАЗЛИЧНЫЕ
	|	2 КАК Источник,
	|	&ПустойКонтрагент КАК Контрагент,
	|	&ПустойДоговор КАК ДоговорКонтрагента,
	|	Неопределено КАК Сделка,
	|	"+?(УстановитьПроектПланыПродаж,"&ПроектПланыПродаж","ПланыПродажОбороты.Проект")+" КАК Проект,
	|	&СтатьяОборотовПланыПродаж КАК СтатьяДвиженияДенежныхСредств,
	|	(ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот) * &ПроцентПланыПродаж КАК Стоимость
	|ИЗ
	|	РегистрНакопления.ПланыПродаж.Обороты(&ПланыПродажДатаНач, &ПланыПродажДатаКон, ,
	|		&ПланыПродаж = Истина
	|		{Сценарий.* КАК ПланыПродажСценарий,
	|		ДокументПланирования.Проект.* КАК ПланыПродажПроект,
	|		ДокументПланирования.Подразделение.* КАК ПланыПродажПодразделение,
	|		Номенклатура.* КАК ПланыПродажНоменклатура,
	|		ХарактеристикаНоменклатуры.* КАК ПланыПродажХарактеристикаНоменклатуры,
	|		ДокументПланирования.* КАК ПланыПродажДокументПланирования}
	|	) КАК ПланыПродажОбороты
	|	//СОЕДИНЕНИЯ_ПЛАНЫПРОДАЖ
	|
	|{ГДЕ
	|	Сценарий.* КАК ПланыПродажСценарий,
	|	ДокументПланирования.Проект.* КАК ПланыПродажПроект,
	|	ДокументПланирования.Подразделение.* КАК ПланыПродажПодразделение,
	|	Номенклатура.* КАК ПланыПродажНоменклатура,
	|	ХарактеристикаНоменклатуры.* КАК ПланыПродажХарактеристикаНоменклатуры,
	|	ДокументПланирования.* КАК ПланыПродажДокументПланирования
	|	//СВОЙСТВА_ПЛАНЫПРОДАЖ
	|	//КАТЕГОРИИ_ПЛАНЫПРОДАЖ
	|}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //РАЗЛИЧНЫЕ
	|	3 КАК Источник,
	|	"+?(ДетализацияПоступленияКонтрагенты,"ОборотДенежныхСредств.Контрагент","&ПустойКонтрагент")+" КАК Контрагент,
	|	"+?(ДетализацияПоступленияДоговоры,"ОборотДенежныхСредств.ДоговорКонтрагента","&ПустойДоговор")+" КАК ДоговорКонтрагента,
	|	"+?(ДетализацияПоступленияСделки,"ОборотДенежныхСредств.Сделка","Неопределено")+" КАК Сделка,
	|	"+?(УстановитьПроектПоступления,"&ПроектПоступления","ОборотДенежныхСредств.Проект")+" КАК Проект,
	|	"+?(УстановитьСтатьюПоступления,"&СтатьяОборотовПоступления","ОборотДенежныхСредств.СтатьяДвиженияДенежныхСредств")+" КАК СтатьяДвиженияДенежныхСредств,
    |	ОборотДенежныхСредств.СуммаУпрОборот*&ПроцентПоступления КАК Стоимость
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныхСредств.Обороты(&ПоступленияДатаНач, &ПоступленияДатаКон,,
	|		&Поступления = Истина
	|		И ПриходРасход=&Приход
	|		{ВидДенежныхСредств КАК ПоступленияВидДенежныхСредств,
	|		БанковскийСчетКасса.* КАК ПоступленияБанковскийСчетКасса,
    |		ДоговорКонтрагента.* КАК ПоступленияДоговор,
	|		Контрагент.* КАК ПоступленияКонтрагент,
	|		Сделка.* КАК ПоступленияСделка,
	|		СтатьяДвиженияДенежныхСредств.* КАК ПоступленияСтатьяДвиженияДенежныхСредств,
    |		ДокументДвижения.* КАК ПоступленияДокументДвижения,
	|		Проект.* КАК ПоступленияПроект,
	|		ДокументПланированияПлатежа.ЦФО.* КАК ПоступленияПодразделение}
	|	) КАК ОборотДенежныхСредств
	|	//СОЕДИНЕНИЯ_ПОСТУПЛЕНИЯ
	|
	|{ГДЕ
	|		ВидДенежныхСредств КАК ПоступленияВидДенежныхСредств,
	|		БанковскийСчетКасса.* КАК ПоступленияБанковскийСчетКасса,
    |		ДоговорКонтрагента.* КАК ПоступленияДоговор,
	|		Контрагент.* КАК ПоступленияКонтрагент,
	|		Сделка.* КАК ПоступленияСделка,
	|		СтатьяДвиженияДенежныхСредств.* КАК ПоступленияСтатьяДвиженияДенежныхСредств,
    |		ДокументДвижения.* КАК ПоступленияДокументДвижения,
	|		Проект.* КАК ПоступленияПроект,
	|		ДокументПланированияПлатежа.ЦФО.* КАК ПоступленияПодразделение
	|	//СВОЙСТВА_ПОСТУПЛЕНИЯ
	|	//КАТЕГОРИИ_ПОСТУПЛЕНИЯ
	|}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //РАЗЛИЧНЫЕ
	|	4 КАК Источник,
	|	"+?(ДетализацияПланПоступленияКонтрагенты,"ПланОборотДенежныхСредств.Контрагент","&ПустойКонтрагент")+" КАК Контрагент,
	|	"+?(ДетализацияПланПоступленияДоговоры,"ПланОборотДенежныхСредств.ДоговорКонтрагента","&ПустойДоговор")+" КАК ДоговорКонтрагента,
	|	"+?(ДетализацияПланПоступленияСделки,"ПланОборотДенежныхСредств.Сделка","Неопределено")+" КАК Сделка,
	|	"+?(УстановитьПроектПланПоступления,"&ПроектПланПоступления","ПланОборотДенежныхСредств.Проект")+" КАК Проект,
	|	"+?(УстановитьСтатьюПланПоступления,"&СтатьяОборотовПланПоступления","ПланОборотДенежныхСредств.СтатьяДвиженияДенежныхСредств")+" КАК СтатьяДвиженияДенежныхСредств,
    |	ПланОборотДенежныхСредств.СуммаУпрОборот*&ПроцентПланПоступления КАК Стоимость
	|ИЗ
	|	РегистрНакопления.ПланыДвиженияДенежныхСредств.Обороты(&ПланПоступленияДатаНач, &ПланПоступленияДатаКон,,
	|		&ПланПоступления = Истина
	|		И ПриходРасход=&Приход
	|		{ВидДенежныхСредств КАК ПланПоступленияВидДенежныхСредств,
	|		ВалютаДенежныхСредств КАК ПланПоступленияВалютаДенежныхСредств,
    |		ДоговорКонтрагента.* КАК ПланПоступленияДоговор,
	|		Контрагент.* КАК ПланПоступленияКонтрагент,
	|		Сделка.* КАК ПланПоступленияСделка,
	|		СтатьяДвиженияДенежныхСредств.* КАК ПланПоступленияСтатьяДвиженияДенежныхСредств,
    |		ДокументПланирования.* КАК ПланПоступленияДокументПланирования,
	|		Проект.* КАК ПланПоступленияПроект}
	|	) КАК ПланОборотДенежныхСредств
	|	//СОЕДИНЕНИЯ_ПЛАН_ПОСТУПЛЕНИЯ
	|
	|{ГДЕ
	|		ВидДенежныхСредств КАК ПланПоступленияВидДенежныхСредств,
	|		ВалютаДенежныхСредств КАК ПланПоступленияВалютаДенежныхСредств,
    |		ДоговорКонтрагента.* КАК ПланПоступленияДоговор,
	|		Контрагент.* КАК ПланПоступленияКонтрагент,
	|		Сделка.* КАК ПланПоступленияСделка,
	|		СтатьяДвиженияДенежныхСредств.* КАК ПланПоступленияСтатьяДвиженияДенежныхСредств,
    |		ДокументПланирования.* КАК ПланПоступленияДокументПланирования,
	|		Проект.* КАК ПланПоступленияПроект
	|	//СВОЙСТВА_ПЛАН_ПОСТУПЛЕНИЯ
	|	//КАТЕГОРИИ_ПЛАН_ПОСТУПЛЕНИЯ
	|}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //РАЗЛИЧНЫЕ
	|	5 КАК Источник,
	|	"+?(ДетализацияДебиторскаяЗадолженностьКонтрагенты,"ДебиторскаяЗадолженность.ДоговорКонтрагента.Владелец","&ПустойКонтрагент")+" КАК Контрагент,
	|	"+?(ДетализацияДебиторскаяЗадолженностьДоговоры,"ДебиторскаяЗадолженность.ДоговорКонтрагента","&ПустойДоговор")+" КАК ДоговорКонтрагента,
	|	"+?(ДетализацияДебиторскаяЗадолженностьСделки,"ДебиторскаяЗадолженность.Сделка","Неопределено")+" КАК Сделка,
	|	&ПроектДебиторскаяЗадолженность КАК Проект,
	|	&СтатьяОборотовДебиторскаяЗадолженность КАК СтатьяДвиженияДенежныхСредств,
	|	ДебиторскаяЗадолженность.СуммаУпрОстаток* &ПроцентДебиторскаяЗадолженность КАК Стоимость
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаОстаткаДебиторскаяЗадолженность,
	|		&ДебиторскаяЗадолженность = Истина
	|		{ДоговорКонтрагента.* КАК ДебиторскаяЗадолженностьДоговор,
	|		ДоговорКонтрагента.Владелец.* КАК ДебиторскаяЗадолженностьКонтрагент,
	|		Сделка.* КАК ДебиторскаяЗадолженностьСделка}
	|	) КАК ДебиторскаяЗадолженность
	|	//СОЕДИНЕНИЯ_ДЕБИТОРСКАЯ_ЗАДОЛЖЕННОСТЬ
	| "+?(ОтборСуммДебиторскаяЗадолженность,"ГДЕ ДебиторскаяЗадолженность.СуммаУпрОстаток"+ВидОтбораДебиторскаяЗадолженность+"&ГраницаОтбораДебиторскаяЗадолженность","ГДЕ ДебиторскаяЗадолженность.СуммаУпрОстаток>0")+"
	|{ГДЕ
	|		ДоговорКонтрагента.* КАК ДебиторскаяЗадолженностьДоговор,
	|		ДоговорКонтрагента.Владелец.* КАК ДебиторскаяЗадолженностьКонтрагент,
	|		Сделка.* КАК ДебиторскаяЗадолженностьСделка
	|	//СВОЙСТВА_ДЕБИТОРСКАЯ_ЗАДОЛЖЕННОСТЬ
	|	//КАТЕГОРИИ_ДЕБИТОРСКАЯ_ЗАДОЛЖЕННОСТЬ
	|}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //РАЗЛИЧНЫЕ
	|	6 КАК Источник,
	|	"+?(ДетализацияЗаказыПокупателейКонтрагенты,"ДебиторскаяЗадолженностьЗаказы.ДоговорКонтрагента.Владелец","&ПустойКонтрагент")+" КАК Контрагент,
	|	"+?(ДетализацияЗаказыПокупателейДоговоры,"ДебиторскаяЗадолженностьЗаказы.ДоговорКонтрагента","&ПустойДоговор")+" КАК ДоговорКонтрагента,
	|	"+?(ДетализацияЗаказыПокупателейСделки,"ДебиторскаяЗадолженностьЗаказы.Сделка","Неопределено")+" КАК Сделка,
	|	&ПроектЗаказыПокупателей КАК Проект,
	|	&СтатьяОборотовЗаказыПокупателей КАК СтатьяДвиженияДенежныхСредств,
	|	ДебиторскаяЗадолженностьЗаказы.СуммаУпрОстаток*&ПроцентЗаказыПокупателей КАК Стоимость
	|ИЗ
	|	РегистрНакопления.РасчетыСКонтрагентами.Остатки(,
	|		(НЕ Сделка=Неопределено) 
	|		И (Сделка ССЫЛКА Документ.ЗаказПокупателя) 
	|"+ТекстОтбораДатаОплаты+"
	|		И &ЗаказыПокупателей = Истина
	|		{ДоговорКонтрагента.* КАК ЗаказыПокупателейДоговор,
	|		ДоговорКонтрагента.Владелец.* КАК ЗаказыПокупателейКонтрагент,
	|		Сделка.* КАК ЗаказыПокупателейСделка}
	|	) КАК ДебиторскаяЗадолженностьЗаказы
	|	//СОЕДИНЕНИЯ_ЗАКАЗЫ_ПОКУПАТЕЛЕЙ
	| "+?(ОтборСуммЗаказыПокупателей,"ГДЕ ДебиторскаяЗадолженностьЗаказы.СуммаУпрОстаток"+ВидОтбораЗаказыПокупателей+"&ГраницаОтбораЗаказыПокупателей","ГДЕ ДебиторскаяЗадолженностьЗаказы.СуммаУпрОстаток>0")+"
	|{ГДЕ
	|		ДоговорКонтрагента.* КАК ЗаказыПокупателейДоговор,
	|		ДоговорКонтрагента.Владелец.* КАК ЗаказыПокупателейКонтрагент,
	|		Сделка.* КАК ЗаказыПокупателейСделка
	|	//СВОЙСТВА_ЗАКАЗЫ_ПОКУПАТЕЛЕЙ
	|	//КАТЕГОРИИ_ЗАКАЗЫ_ПОКУПАТЕЛЕЙ
	|}";	
	
	СтруктураПредставлениеПолей = Новый Структура();
	
	// Объем продаж
	СтруктураПредставлениеПолей.Вставить("ОбъемПродажПроект",                     "Объем продаж - Проект");
	СтруктураПредставлениеПолей.Вставить("ОбъемПродажПодразделение",              "Объем продаж - Подразделение");
	СтруктураПредставлениеПолей.Вставить("ОбъемПродажДоговор",                    "Объем продаж - Договор");
	СтруктураПредставлениеПолей.Вставить("ОбъемПродажКонтрагент",                 "Объем продаж - Контрагент");
	СтруктураПредставлениеПолей.Вставить("ОбъемПродажЗаказПокупателя",            "Объем продаж - Заказ покупателя");
	СтруктураПредставлениеПолей.Вставить("ОбъемПродажНоменклатура",               "Объем продаж - Номенклатура");
	СтруктураПредставлениеПолей.Вставить("ОбъемПродажХарактеристикаНоменклатуры", "Объем продаж - Характеристика номенклатуры");
	СтруктураПредставлениеПолей.Вставить("ОбъемПродажДокументЗакупки",            "Объем продаж - Документ закупки");
	
	// Планы продаж
	СтруктураПредставлениеПолей.Вставить("ПланыПродажСценарий",                   "Планы продаж - Сценарий");
	СтруктураПредставлениеПолей.Вставить("ПланыПродажПроект",                     "Планы продаж - Проект");
	СтруктураПредставлениеПолей.Вставить("ПланыПродажПодразделение",              "Планы продаж - Подразделение");
	СтруктураПредставлениеПолей.Вставить("ПланыПродажНоменклатура",               "Планы продаж - Номенклатура");
	СтруктураПредставлениеПолей.Вставить("ПланыПродажХарактеристикаНоменклатуры", "Планы продаж - Характеристика номенклатуры");
	СтруктураПредставлениеПолей.Вставить("ПланыПродажДокументПланирования",       "Планы продаж - Документ планирования");
	
	// Поступления
	СтруктураПредставлениеПолей.Вставить("ПоступленияВидДенежныхСредств",               "Поступления за период - Наличные, безналичные");
	СтруктураПредставлениеПолей.Вставить("ПоступленияБанковскийСчетКасса", 				"Поступления за период - Банковский счет, касса");
	СтруктураПредставлениеПолей.Вставить("ПоступленияКонтрагент",            			"Поступления за период - Контрагент");
	СтруктураПредставлениеПолей.Вставить("ПоступленияДоговор",            				"Поступления за период - Договор контрагента");
	СтруктураПредставлениеПолей.Вставить("ПоступленияСделка",            				"Поступления за период - Сделка");
	СтруктураПредставлениеПолей.Вставить("ПоступленияСтатьяДвиженияДенежныхСредств",    "Поступления за период - Статья движения денежных средств");
	СтруктураПредставлениеПолей.Вставить("ПоступленияДокументДвижения",            		"Поступления за период - Документ движения");
	СтруктураПредставлениеПолей.Вставить("ПоступленияПроект",            				"Поступления за период - Проект");
	СтруктураПредставлениеПолей.Вставить("ПоступленияПодразделение",            		"Поступления за период - Подразделение");
	
	// Планы платежей
	СтруктураПредставлениеПолей.Вставить("ПланПоступленияВидДенежныхСредств",           "Планы поступлений - Наличные, безналичные");
	СтруктураПредставлениеПолей.Вставить("ПланПоступленияВалютаДенежныхСредств",        "Планы поступлений - Валюта платежа");
	СтруктураПредставлениеПолей.Вставить("ПланПоступленияКонтрагент",               	"Планы поступлений - Контрагент");
	СтруктураПредставлениеПолей.Вставить("ПланПоступленияДоговор",              		"Планы поступлений - Договор контрагента");	
	СтруктураПредставлениеПолей.Вставить("ПланПоступленияСделка", 						"Планы поступлений - Сделка");
	СтруктураПредставлениеПолей.Вставить("ПланПоступленияСтатьяДвиженияДенежныхСредств","Планы поступлений - Статья движения денежных средств");
    СтруктураПредставлениеПолей.Вставить("ПланПоступленияДокументПланирования", 		"Планы поступлений - Документ планирования");
	СтруктураПредставлениеПолей.Вставить("ПланПоступленияПроект", 						"Планы поступлений - Проект");
	
	// Дебиторская задолженность
	СтруктураПредставлениеПолей.Вставить("ДебиторскаяЗадолженностьДоговор",        		"Дебиторская задолженность - Договор контрагента");
	СтруктураПредставлениеПолей.Вставить("ДебиторскаяЗадолженностьКонтрагент",     		"Дебиторская задолженность - Контрагент");
	СтруктураПредставлениеПолей.Вставить("ДебиторскаяЗадолженностьСделка",         		"Дебиторская задолженность - Сделка");
	
	// Заказы поставщикам
	СтруктураПредставлениеПолей.Вставить("ЗаказыПокупателейДоговор",        			"Заказы покупателей - Договор контрагента");
	СтруктураПредставлениеПолей.Вставить("ЗаказыПокупателейКонтрагент",     			"Заказы покупателей - Контрагент");
	СтруктураПредставлениеПолей.Вставить("ЗаказыПокупателейСделка",         			"Заказы покупателей - Сделка");
	
	//Отборы по свойствам и категориям
	СоответствиеНазначений = Новый Соответствие;

	Если ИспользоватьСвойстваИКатегорииПоступления Тогда
		
		ПВХ = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов;
		
		ТаблицаПолей = Новый ТаблицаЗначений;
		ТаблицаПолей.Колонки.Добавить("ПутьКДанным");
		ТаблицаПолей.Колонки.Добавить("Представление");
		ТаблицаПолей.Колонки.Добавить("Назначение");
		ТаблицаПолей.Колонки.Добавить("НетКатегорий");
		
		ТекстПоляКатегорий = "";
		ТекстПоляСвойств = "";
		
		// Объем закупок
		ТаблицаПолей.Очистить();
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		
		СтрокаТаблицы.ПутьКДанным = "ПродажиОбороты.Номенклатура";
		СтрокаТаблицы.Представление = "Номенклатура (продажи)";
		СтрокаТаблицы.Назначение = ПВХ.Справочник_Номенклатура;
		
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		СтрокаТаблицы.ПутьКДанным = "ПродажиОбороты.ХарактеристикаНоменклатуры";
		СтрокаТаблицы.Представление = "Характеристика номенклатуры (продажи)";
		СтрокаТаблицы.Назначение = ПВХ.Справочник_ХарактеристикиНоменклатуры;
		
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		СтрокаТаблицы.ПутьКДанным = "ПродажиОбороты.Контрагент";
		СтрокаТаблицы.Представление = "Контрагенты (продажи)";
		СтрокаТаблицы.Назначение = ПВХ.Справочник_Контрагенты;
		
		УправлениеОтчетами.ДобавитьВТекстСвойстваИКатегории(ТаблицаПолей, ТекстЗапроса, СтруктураПредставлениеПолей, СоответствиеНазначений, ПостроительОтчетаПоступления.Параметры,, ТекстПоляКатегорий, ТекстПоляСвойств,, "//СВОЙСТВА_ОБЪЕМПРОДАЖ", "//КАТЕГОРИИ_ОБЪЕМПРОДАЖ", "//СОЕДИНЕНИЯ_ОБЪЕМПРОДАЖ",, СтруктураДляОтбораПоКатегориям);
		
		// Планы закупок
		ТаблицаПолей.Очистить();
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		
		СтрокаТаблицы.ПутьКДанным = "ПланыПродажОбороты.Номенклатура";
		СтрокаТаблицы.Представление = "Номенклатура (планы продаж)";
		СтрокаТаблицы.Назначение = ПВХ.Справочник_Номенклатура;
		
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		СтрокаТаблицы.ПутьКДанным = "ПланыПродажОбороты.ХарактеристикаНоменклатуры";
		СтрокаТаблицы.Представление = "Характеристика номенклатуры (планы продаж)";
		СтрокаТаблицы.Назначение = ПВХ.Справочник_ХарактеристикиНоменклатуры;
		
		УправлениеОтчетами.ДобавитьВТекстСвойстваИКатегории(ТаблицаПолей, ТекстЗапроса, СтруктураПредставлениеПолей, СоответствиеНазначений, ПостроительОтчетаПоступления.Параметры,, ТекстПоляКатегорий, ТекстПоляСвойств,, "//СВОЙСТВА_ПЛАНЫПРОДАЖ", "//КАТЕГОРИИ_ПЛАНЫПРОДАЖ", "//СОЕДИНЕНИЯ_ПЛАНЫПРОДАЖ",, СтруктураДляОтбораПоКатегориям);
		
		// Оборот денежных средств
		ТаблицаПолей.Очистить();
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		
		СтрокаТаблицы.ПутьКДанным = "ОборотДенежныхСредств.Контрагент";
		СтрокаТаблицы.Представление = "Контрагенты (поступления за период)";
		СтрокаТаблицы.Назначение = ПВХ.Справочник_Контрагенты;
		
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		СтрокаТаблицы.ПутьКДанным = "ОборотДенежныхСредств.ДокументДвижения";
		СтрокаТаблицы.Представление = "Документ поступления (поступления за период)";
		СтрокаТаблицы.Назначение = ПВХ.Документы;
		
		УправлениеОтчетами.ДобавитьВТекстСвойстваИКатегории(ТаблицаПолей, ТекстЗапроса, СтруктураПредставлениеПолей, СоответствиеНазначений, ПостроительОтчетаПоступления.Параметры,, ТекстПоляКатегорий, ТекстПоляСвойств,, "//СВОЙСТВА_ПОСТУПЛЕНИЯ", "//КАТЕГОРИИ_ПОСТУПЛЕНИЯ", "//СОЕДИНЕНИЯ_ПОСТУПЛЕНИЯ",, СтруктураДляОтбораПоКатегориям);
		
		// Планы движения денежных средств
		ТаблицаПолей.Очистить();
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		
		СтрокаТаблицы.ПутьКДанным = "ПланОборотДенежныхСредств.Контрагент";
		СтрокаТаблицы.Представление = "Контрагенты (планы поступлений)";
		СтрокаТаблицы.Назначение = ПВХ.Справочник_Контрагенты;
		
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		СтрокаТаблицы.ПутьКДанным = "ПланОборотДенежныхСредств.ДокументПланирования";
		СтрокаТаблицы.Представление = "Документ планирования (планы поступлений)";
		СтрокаТаблицы.Назначение = ПВХ.Документы;
		
		УправлениеОтчетами.ДобавитьВТекстСвойстваИКатегории(ТаблицаПолей, ТекстЗапроса, СтруктураПредставлениеПолей, СоответствиеНазначений, ПостроительОтчетаПоступления.Параметры,, ТекстПоляКатегорий, ТекстПоляСвойств,, "//СВОЙСТВА_ПЛАН_ПОСТУПЛЕНИЯ", "//КАТЕГОРИИ_ПЛАН_ПОСТУПЛЕНИЯ", "//СОЕДИНЕНИЯ_ПЛАН_ПОСТУПЛЕНИЯ",, СтруктураДляОтбораПоКатегориям);

		// Дебиторская задолженность
		ТаблицаПолей.Очистить();
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		
		СтрокаТаблицы.ПутьКДанным = "ДебиторскаяЗадолженность.ДоговорКонтрагента.Владелец";
		СтрокаТаблицы.Представление = "Контрагенты (дебиторская задолженность)";
		СтрокаТаблицы.Назначение = ПВХ.Справочник_Контрагенты;
			
		УправлениеОтчетами.ДобавитьВТекстСвойстваИКатегории(ТаблицаПолей, ТекстЗапроса, СтруктураПредставлениеПолей, СоответствиеНазначений, ПостроительОтчетаПоступления.Параметры,, ТекстПоляКатегорий, ТекстПоляСвойств,, "//СВОЙСТВА_ДЕБИТОРСКАЯ_ЗАДОЛЖЕННОСТЬ", "//КАТЕГОРИИ_ДЕБИТОРСКАЯ_ЗАДОЛЖЕННОСТЬ", "//СОЕДИНЕНИЯ_ДЕБИТОРСКАЯ_ЗАДОЛЖЕННОСТЬ",, СтруктураДляОтбораПоКатегориям);
		
		// Заказы покупателей
		ТаблицаПолей.Очистить();
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		
		СтрокаТаблицы.ПутьКДанным = "ДебиторскаяЗадолженностьЗаказы.ДоговорКонтрагента.Владелец";
		СтрокаТаблицы.Представление = "Контрагенты (заказы покупателей)";
		СтрокаТаблицы.Назначение = ПВХ.Справочник_Контрагенты;
		
		СтрокаТаблицы.ПутьКДанным = "ДебиторскаяЗадолженностьЗаказы.Сделка";
		СтрокаТаблицы.Представление = "Заказы покупателей";
		СтрокаТаблицы.Назначение = ПВХ.Документы;
			
		УправлениеОтчетами.ДобавитьВТекстСвойстваИКатегории(ТаблицаПолей, ТекстЗапроса, СтруктураПредставлениеПолей, СоответствиеНазначений, ПостроительОтчетаПоступления.Параметры,, ТекстПоляКатегорий, ТекстПоляСвойств,, "//СВОЙСТВА_ЗАКАЗЫ_ПОКУПАТЕЛЕЙ", "//КАТЕГОРИИ_ЗАКАЗЫ_ПОКУПАТЕЛЕЙ", "//СОЕДИНЕНИЯ_ЗАКАЗЫ_ПОКУПАТЕЛЕЙ",, СтруктураДляОтбораПоКатегориям);
		
	КонецЕсли;
	
	Если ПустаяСтрока(ТекстЗапроса) = Ложь Тогда
		
		ПостроительОтчетаПоступления.Текст = ТекстЗапроса;
		
	КонецЕсли;
	
	ПостроительОтчетаПоступления.Параметры.Вставить("Приход",Перечисления.ВидыДвиженийПриходРасход.Приход);
	ПостроительОтчетаПоступления.Параметры.Вставить("ПустойКонтрагент",Справочники.Контрагенты.ПустаяСсылка());
	ПостроительОтчетаПоступления.Параметры.Вставить("ПустойДоговор",Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	
	УправлениеОтчетами.УстановитьТипыЗначенийСвойствИКатегорийДляОтбора(ПостроительОтчетаПоступления, ТекстПоляКатегорий, ТекстПоляСвойств, СоответствиеНазначений, СтруктураПредставлениеПолей);
	
	УправлениеОтчетами.ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчетаПоступления);
	
	мСтруктураДляОтбораПоКатегориямПлатежи=СтруктураДляОтбораПоКатегориям;
	
КонецПроцедуры // НастроитьПостроительПоступления()

Процедура УстановитьПараметрыПостроителяПоступления()
	
	ПостроительОтчетаПоступления.Параметры.Вставить("СтатьяОборотовОбъемПродаж",СтатьяОборотовОбъемПродаж);
	ПостроительОтчетаПоступления.Параметры.Вставить("ПроектОбъемПродаж",ПроектОбъемПродаж);
	ПостроительОтчетаПоступления.Параметры.Вставить("ПроцентОбъемПродаж",ПроцентОбъемПродаж/100);
	ПостроительОтчетаПоступления.Параметры.Вставить("ОбъемПродаж",ОбъемПродаж);
	ПостроительОтчетаПоступления.Параметры.Вставить("ОбъемПродажДатаНач",ОбъемПродажДатаНач);
	ПостроительОтчетаПоступления.Параметры.Вставить("ОбъемПродажДатаКон",ОбъемПродажДатаКон);
	
	ПостроительОтчетаПоступления.Параметры.Вставить("СтатьяОборотовПланыПродаж",СтатьяОборотовПланыПродаж);
	ПостроительОтчетаПоступления.Параметры.Вставить("ПроектПланыПродаж",ПроектПланыПродаж);
	ПостроительОтчетаПоступления.Параметры.Вставить("ПроцентПланыПродаж",ПроцентПланыПродаж/100);
	ПостроительОтчетаПоступления.Параметры.Вставить("ПланыПродаж",ПланыПродаж);
	ПостроительОтчетаПоступления.Параметры.Вставить("ПланыПродажДатаНач",ПланыПродажДатаНач);
	ПостроительОтчетаПоступления.Параметры.Вставить("ПланыПродажДатаКон",ПланыПродажДатаКон);
	
	ПостроительОтчетаПоступления.Параметры.Вставить("СтатьяОборотовПоступления",СтатьяОборотовПоступления);
	ПостроительОтчетаПоступления.Параметры.Вставить("ПроектПоступления",ПроектПоступления);
	ПостроительОтчетаПоступления.Параметры.Вставить("ПроцентПоступления",ПроцентПоступления/100);
	ПостроительОтчетаПоступления.Параметры.Вставить("Поступления",Поступления);
	ПостроительОтчетаПоступления.Параметры.Вставить("ПоступленияДатаНач",ПоступленияДатаНач);
	ПостроительОтчетаПоступления.Параметры.Вставить("ПоступленияДатаКон",ПоступленияДатаКон);
	
	ПостроительОтчетаПоступления.Параметры.Вставить("СтатьяОборотовПланПоступления",СтатьяОборотовПланПоступления);
	ПостроительОтчетаПоступления.Параметры.Вставить("ПроектПланПоступления",ПроектПланПоступления);
	ПостроительОтчетаПоступления.Параметры.Вставить("ПроцентПланПоступления",ПроцентПланПоступления/100);
	ПостроительОтчетаПоступления.Параметры.Вставить("ПланПоступления",ПланПоступления);
	ПостроительОтчетаПоступления.Параметры.Вставить("ПланПоступленияДатаНач",ПланПоступленияДатаНач);
	ПостроительОтчетаПоступления.Параметры.Вставить("ПланПоступленияДатаКон",ПланПоступленияДатаКон);
	
	ПостроительОтчетаПоступления.Параметры.Вставить("СтатьяОборотовДебиторскаяЗадолженность",СтатьяОборотовДебиторскаяЗадолженность);
	ПостроительОтчетаПоступления.Параметры.Вставить("ПроектДебиторскаяЗадолженность",ПроектДебиторскаяЗадолженность);
	ПостроительОтчетаПоступления.Параметры.Вставить("ПроцентДебиторскаяЗадолженность",ПроцентДебиторскаяЗадолженность/100);
	ПостроительОтчетаПоступления.Параметры.Вставить("ДебиторскаяЗадолженность",ДебиторскаяЗадолженность);
	ПостроительОтчетаПоступления.Параметры.Вставить("ДатаОстаткаДебиторскаяЗадолженность",ДатаОстаткаДебиторскаяЗадолженность);
	ПостроительОтчетаПоступления.Параметры.Вставить("ГраницаОтбораДебиторскаяЗадолженность",ГраницаОтбораДебиторскаяЗадолженность);

	ПостроительОтчетаПоступления.Параметры.Вставить("СтатьяОборотовЗаказыПокупателей",СтатьяОборотовЗаказыПокупателей);
	ПостроительОтчетаПоступления.Параметры.Вставить("ПроектЗаказыПокупателей",ПроектЗаказыПокупателей);
	ПостроительОтчетаПоступления.Параметры.Вставить("ПроцентЗаказыПокупателей",ПроцентЗаказыПокупателей/100);
	ПостроительОтчетаПоступления.Параметры.Вставить("ЗаказыПокупателей",ЗаказыПокупателей);
	ПостроительОтчетаПоступления.Параметры.Вставить("ЗаказыПокупателейДатаНач",ЗаказыПокупателейДатаНач);
	ПостроительОтчетаПоступления.Параметры.Вставить("ЗаказыПокупателейДатаКон",ЗаказыПокупателейДатаКон);
	ПостроительОтчетаПоступления.Параметры.Вставить("ГраницаОтбораЗаказыПокупателей",ГраницаОтбораЗаказыПокупателей);
	
КонецПроцедуры // УстановитьПараметрыПостроителяПоступления()

Процедура УстановитьПараметрыПостроителяПлатежи()
	
	ПостроительОтчетаПлатежи.Параметры.Вставить("СтатьяОборотовОбъемЗакупок",СтатьяОборотовОбъемЗакупок);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ПроектОбъемЗакупок",ПроектОбъемЗакупок);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ПроцентОбъемЗакупок",ПроцентОбъемЗакупок/100);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ОбъемЗакупок",ОбъемЗакупок);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ОбъемЗакупокДатаНач",ОбъемЗакупокДатаНач);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ОбъемЗакупокДатаКон",ОбъемЗакупокДатаКон);
	
	ПостроительОтчетаПлатежи.Параметры.Вставить("СтатьяОборотовПланыЗакупок",СтатьяОборотовПланыЗакупок);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ПроектПланыЗакупок",ПроектПланыЗакупок);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ПроцентПланыЗакупок",ПроцентПланыЗакупок/100);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ПланыЗакупок",ПланыЗакупок);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ПланыЗакупокДатаНач",ПланыЗакупокДатаНач);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ПланыЗакупокДатаКон",ПланыЗакупокДатаКон);
	
	ПостроительОтчетаПлатежи.Параметры.Вставить("СтатьяОборотовПлатежи",СтатьяОборотовПлатежи);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ПроектПлатежи",ПроектПлатежи);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ПроцентПлатежи",ПроцентПлатежи/100);
	ПостроительОтчетаПлатежи.Параметры.Вставить("Платежи",Платежи);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ПлатежиДатаНач",ПлатежиДатаНач);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ПлатежиДатаКон",ПлатежиДатаКон);
	
	ПостроительОтчетаПлатежи.Параметры.Вставить("СтатьяОборотовПланПлатежи",СтатьяОборотовПланПлатежи);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ПроектПланПлатежи",ПроектПланПлатежи);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ПроцентПланПлатежи",ПроцентПланПлатежи/100);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ПланПлатежи",ПланПлатежи);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ПланПлатежиДатаНач",ПланПлатежиДатаНач);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ПланПлатежиДатаКон",ПланПлатежиДатаКон);
	
	ПостроительОтчетаПлатежи.Параметры.Вставить("СтатьяОборотовКредиторскаяЗадолженность",СтатьяОборотовКредиторскаяЗадолженность);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ПроектКредиторскаяЗадолженность",ПроектКредиторскаяЗадолженность);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ПроцентКредиторскаяЗадолженность",ПроцентКредиторскаяЗадолженность/100);
	ПостроительОтчетаПлатежи.Параметры.Вставить("КредиторскаяЗадолженность",КредиторскаяЗадолженность);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ДатаОстаткаКредиторскаяЗадолженность",ДатаОстаткаКредиторскаяЗадолженность);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ГраницаОтбораКредиторскаяЗадолженность",ГраницаОтбораКредиторскаяЗадолженность);

	ПостроительОтчетаПлатежи.Параметры.Вставить("СтатьяОборотовЗаказыПоставщикам",СтатьяОборотовЗаказыПоставщикам);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ПроектЗаказыПоставщикам",ПроектЗаказыПоставщикам);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ПроцентЗаказыПоставщикам",ПроцентЗаказыПоставщикам/100);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ЗаказыПоставщикам",ЗаказыПоставщикам);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ЗаказыПоставщикамДатаНач",ЗаказыПоставщикамДатаНач);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ЗаказыПоставщикамДатаКон",ЗаказыПоставщикамДатаКон);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ГраницаОтбораЗаказыПоставщикам",ГраницаОтбораЗаказыПоставщикам);
	
	ПостроительОтчетаПлатежи.Параметры.Вставить("СтатьяОборотовЗаработнаяПлата",СтатьяОборотовЗаработнаяПлата);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ПроектЗаработнаяПлата",ПроектЗаработнаяПлата);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ПроцентЗаработнаяПлата",ПроцентЗаработнаяПлата/100);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ЗаработнаяПлата",ЗаработнаяПлата);
	ПостроительОтчетаПлатежи.Параметры.Вставить("ДатаОстаткаЗаработнаяПлата",ДатаОстаткаЗаработнаяПлата);
	
КонецПроцедуры // УстановитьПараметрыПостроителяПлатежи()


Процедура ПриОткрытии()
	
	// Настраиваем доступность элементов управления
	// Платежи
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.Платежи);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ПланПлатежи);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ОбъемЗакупок);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ПланыЗакупок);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.КредиторскаяЗадолженность);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ОтборСуммКредиторскаяЗадолженность);
    УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ЗаказыПоставщикам);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ОтборСуммЗаказыПоставщикам);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ЗаработнаяПлата);
	// Поступления
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.Поступления);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ПланПоступления);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ОбъемПродаж);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ПланыПродаж);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ДебиторскаяЗадолженность);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ОтборСуммДебиторскаяЗадолженность);
    УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ЗаказыПокупателей);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ОтборСуммЗаказыПокупателей);
	
	ЭлементыФормы.КоманднаяПанельНастройка.Кнопки.кнВидДвижения.Пометка=Ложь;
	ЭлементыФормы.КоманднаяПанельНастройка.Кнопки.кнВидДвижения.Текст="Перейти к платежам";
	
КонецПроцедуры

Процедура ИспользоватьСвойстваИКатегорииПлатежиПриИзменении(Элемент)
	
	НастроитьПостроительПлатежи();
	
КонецПроцедуры

Процедура ИспользоватьСвойстваИКатегорииПоступленияПриИзменении(Элемент)
	
	НастроитьПостроительПоступления();
	
КонецПроцедуры

Процедура ПлатежиПриИзменении(Элемент)
	
	УправлениеДоступностьюЭлементовУправления(Элемент);
	
КонецПроцедуры

Процедура ПланПлатежиПриИзменении(Элемент)
	
	УправлениеДоступностьюЭлементовУправления(Элемент);
	
КонецПроцедуры

Процедура ОбъемЗакупокПриИзменении(Элемент)
		
	УправлениеДоступностьюЭлементовУправления(Элемент);
	
КонецПроцедуры

Процедура ПланыЗакупокПриИзменении(Элемент)
		
	УправлениеДоступностьюЭлементовУправления(Элемент);
	
КонецПроцедуры

Процедура КредиторскаяЗадолженностьПриИзменении(Элемент)
		
	УправлениеДоступностьюЭлементовУправления(Элемент);
	
КонецПроцедуры

Процедура ОтборСуммКредиторскаяЗадолженностьПриИзменении(Элемент)
		
	УправлениеДоступностьюЭлементовУправления(Элемент);
	
КонецПроцедуры

Процедура ЗаказыПоставщикамПриИзменении(Элемент)
		
	УправлениеДоступностьюЭлементовУправления(Элемент);
	
КонецПроцедуры

Процедура ОтборСуммЗаказыПоставщикамПриИзменении(Элемент)
		
	УправлениеДоступностьюЭлементовУправления(Элемент);
	
КонецПроцедуры

Процедура ЗаработнаяПлатаПриИзменении(Элемент)
		
	УправлениеДоступностьюЭлементовУправления(Элемент);
	
КонецПроцедуры

Процедура ПоступленияПриИзменении(Элемент)
		
	УправлениеДоступностьюЭлементовУправления(Элемент);
	
КонецПроцедуры

Процедура ПланПоступленияПриИзменении(Элемент)
		
	УправлениеДоступностьюЭлементовУправления(Элемент);
	
КонецПроцедуры

Процедура ОбъемПродажПриИзменении(Элемент)
		
	УправлениеДоступностьюЭлементовУправления(Элемент);
	
КонецПроцедуры

Процедура ПланыПродажПриИзменении(Элемент)
		
	УправлениеДоступностьюЭлементовУправления(Элемент);
	
КонецПроцедуры

Процедура ДебиторскаяЗадолженностьПриИзменении(Элемент)
		
	УправлениеДоступностьюЭлементовУправления(Элемент);
	
КонецПроцедуры

Процедура ОтборСуммДебиторскаяЗадолженностьПриИзменении(Элемент)
		
	УправлениеДоступностьюЭлементовУправления(Элемент);
	
КонецПроцедуры

Процедура ЗаказыПокупателейПриИзменении(Элемент)
		
	УправлениеДоступностьюЭлементовУправления(Элемент);
	
КонецПроцедуры

Процедура ОтборСуммЗаказыПокупателейПриИзменении(Элемент)
		
	УправлениеДоступностьюЭлементовУправления(Элемент);
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СтруктураСохраненныеНастройки=Новый Структура;
	СтруктураДанныеФормы=Новый Структура;
	
	Для Каждого Элемент Из ЭлементыФормы Цикл
		Если НЕ ПустаяСтрока(Элемент.Данные) Тогда
			
			Если НЕ Найти(Элемент.Данные,"ПостроительОтчета")>0 Тогда		
				СтруктураДанныеФормы.Вставить(Элемент.Имя,Элемент.Значение);
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	СтруктураСохраненныеНастройки.Вставить("СтруктураДанныеФормы",СтруктураДанныеФормы);
	СтруктураСохраненныеНастройки.Вставить("НастройкиПостроительПлатежи",ПостроительОтчетаПлатежи.ПолучитьНастройки(Истина,Ложь,Ложь,Ложь));
	СтруктураСохраненныеНастройки.Вставить("НастройкиПостроительПоступления",ПостроительОтчетаПоступления.ПолучитьНастройки(Истина,Ложь,Ложь,Ложь));
	
	ХранилищеДанных  = Новый ХранилищеЗначения(СтруктураСохраненныеНастройки);
	СохранитьЗначение("План_ДДС_НастройкиЗаполнения",ХранилищеДанных);
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ХранилищеДанных=ВосстановитьЗначение("План_ДДС_НастройкиЗаполнения");
	
	Если ТипЗнч(ХранилищеДанных)=Тип("ХранилищеЗначения") Тогда
		СохраненныеНастройки=ХранилищеДанных.Получить();
		Если ТипЗнч(СохраненныеНастройки)=Тип("Структура") Тогда
			
			СтруктураДанных=СохраненныеНастройки.СтруктураДанныеФормы;
			
			Для Каждого Элемент Из СтруктураДанных Цикл
				
				ЭлементыФормы[Элемент.Ключ].Значение=Элемент.Значение;
				
			КонецЦикла;
			
			НастроитьПостроительПлатежи();
			НастроитьПостроительПоступления();
			
			ПостроительОтчетаПлатежи.УстановитьНастройки(СохраненныеНастройки.НастройкиПостроительПлатежи,Истина,Ложь,Ложь,Ложь);
			ПостроительОтчетаПоступления.УстановитьНастройки(СохраненныеНастройки.НастройкиПостроительПоступления,Истина,Ложь,Ложь,Ложь);
			
		КонецЕсли;
		
	Иначе
		
		НастроитьПостроительПлатежи();
		НастроитьПостроительПоступления();
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ОсновныеДействияФормыВыполнить(Кнопка)
			
	НастроитьПостроительПлатежи();
	НастроитьПостроительПоступления();
				
	УстановитьПараметрыПостроителяПлатежи();
	УстановитьПараметрыПостроителяПоступления();
	
	Если НЕ УправлениеОтчетами.ЗадатьПараметрыОтбораПоКатегориям(ПостроительОтчетаПлатежи, мСтруктураДляОтбораПоКатегориямПлатежи) Тогда
		//повторные отборы по категориям
		Предупреждение("Отбор платежей: по одной категории нельзя устанавливать два отбора", 60);
		Возврат;
	КонецЕсли;
	
	Если НЕ УправлениеОтчетами.ЗадатьПараметрыОтбораПоКатегориям(ПостроительОтчетаПоступления, мСтруктураДляОтбораПоКатегориямПоступления) Тогда
		//повторные отборы по категориям
		Предупреждение("Отбор поступлений: по одной категории нельзя устанавливать два отбора", 60);
		Возврат;
	КонецЕсли;
	
	ПостроительОтчетаПоступления.Выполнить();
	ПостроительОтчетаПлатежи.Выполнить();
	
	ТабПоступления=ПостроительОтчетаПоступления.Результат.Выгрузить();
	ТабПлатежи=ПостроительОтчетаПлатежи.Результат.Выгрузить();
	
	ТабДвижения=ВладелецФормы.ДвиженияДенежныхСредств;	
	
	ТекстВопроса="Очистить табличную часть документа перед добавлением?";
	Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Да Тогда
		ТабДвижения.Очистить();
	КонецЕсли;
	
	ВалютаУпрУчета=глЗначениеПеременной("ВалютаУправленческогоУчета");
	ВалютаДокумента=ВладелецФормы.ВалютаДокумента;
	
	// Получаем курсы валют
		СтруктураГруппаВалют = Новый Структура;
		СтруктураГруппаВалют.Вставить("ВалютаУпрУчета",ВалютаУпрУчета.Код);
		СтруктураГруппаВалют.Вставить("ВалютаДокумента",ВалютаДокумента.Код);
		
		СтруктураКурсыВалют=УправлениеДенежнымиСредствами.ПолучитьКурсыДляГруппыВалют(СтруктураГруппаВалют,ВладелецФормы.ДатаПланирования);
	
		КоэффИзмененияСуммаПоступления = 1 + ?(ИзменитьРезультатРасчетаСуммыПоступления, ИзменитьРезультатРасчетаСуммыПроцентПоступления / 100, 0);
		КоэффИзмененияСуммаПлатежи = 1 + ?(ИзменитьРезультатРасчетаСуммыПлатежи, ИзменитьРезультатРасчетаСуммыПроцентПлатежи / 100, 0);
	
	// Добавляем поступления
		
	Для Каждого Строка ИЗ ТабПоступления Цикл
		
		Если Строка.Стоимость=Null Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаДвижение=ТабДвижения.Добавить();
		СтрокаДвижение.ПриходРасход=Перечисления.ВидыДвиженийПриходРасход.Приход;
		СтрокаДвижение.ВидОперации=Перечисления.ВидыОперацийПланируемоеПоступлениеДС.ОплатаПокупателя;
		СтрокаДвижение.СтатьяДвиженияДенежныхСредств=Строка.СтатьяДвиженияДенежныхСредств;
		СтрокаДвижение.Проект=Строка.Проект;
		СтрокаДвижение.Контрагент=Строка.Контрагент;
		СтрокаДвижение.ДоговорКонтрагента=Строка.ДоговорКонтрагента;
		СтрокаДвижение.Сделка=Строка.Сделка;
		
		Если ВалютаДокумента=ВалютаУпрУчета Тогда
			СуммаПлан=Строка.Стоимость;
		Иначе
			СуммаПлан=МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(Строка.Стоимость,ВалютаУпрУчета,ВалютаДокумента,
												СтруктураКурсыВалют.ВалютаУпрУчетаКурс,СтруктураКурсыВалют.ВалютаДокументаКурс,
		                                        СтруктураКурсыВалют.ВалютаУпрУчетаКратность,СтруктураКурсыВалют.ВалютаДокументаКратность);
												
		КонецЕсли;
											
		СтрокаДвижение.Сумма=Окр(СуммаПлан*КоэффИзмененияСуммаПоступления, РезультатРасчетаСуммыОкруглитьДоПоступления, 2);
		
	КонецЦикла;
	
	// Добавляем поступления
		
	Для Каждого Строка ИЗ ТабПлатежи Цикл
		
		СтрокаДвижение=ТабДвижения.Добавить();
		СтрокаДвижение.ПриходРасход=Перечисления.ВидыДвиженийПриходРасход.Расход;
		СтрокаДвижение.ВидОперации=Перечисления.ВидыОперацийЗаявкиНаРасходование.ОплатаПоставщику;
		СтрокаДвижение.СтатьяДвиженияДенежныхСредств=Строка.СтатьяДвиженияДенежныхСредств;
		СтрокаДвижение.Проект=Строка.Проект;
		СтрокаДвижение.Контрагент=Строка.Контрагент;
		СтрокаДвижение.ДоговорКонтрагента=Строка.ДоговорКонтрагента;
		СтрокаДвижение.Сделка=Строка.Сделка;
		
		Если ВалютаДокумента=ВалютаУпрУчета Тогда
			СуммаПлан=Строка.Стоимость;
		Иначе
			СуммаПлан=МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(Строка.Стоимость,ВалютаУпрУчета,ВалютаДокумента,
												СтруктураКурсыВалют.ВалютаУпрУчетаКурс,СтруктураКурсыВалют.ВалютаДокументаКурс,
		                                        СтруктураКурсыВалют.ВалютаУпрУчетаКратность,СтруктураКурсыВалют.ВалютаДокументаКратность);
												
		КонецЕсли;
											
		СтрокаДвижение.Сумма=Окр(СуммаПлан*КоэффИзмененияСуммаПлатежи, РезультатРасчетаСуммыОкруглитьДоПлатежи, 2);
		
	КонецЦикла;
				
КонецПроцедуры