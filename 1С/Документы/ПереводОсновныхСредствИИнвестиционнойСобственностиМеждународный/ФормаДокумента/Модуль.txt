// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;


////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка,Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.ОсновныеСредства,ЭлементыФормы.КоманднаяПанельОС.Кнопки.ПодменюЗаполнить);
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧПоДеревуКнопок(мКнопкиЗаполненияТЧ,СоответствиеТЧ);
	
КонецПроцедуры


Процедура КоманднаяПанельОСЗаполнить(Кнопка)
	ОсновныеСредства.Очистить();
	Счета = ПланыСчетов.Международный;
	
	МассивСчетов = Новый Массив();
	МассивСчетов.Добавить(Счета.Земля); //1011
	МассивСчетов.Добавить(Счета.Здания); //10121
	МассивСчетов.Добавить(Счета.СооруженияИОборудование); //10131
	МассивСчетов.Добавить(Счета.МашиныИИнструменты); //10141
	МассивСчетов.Добавить(Счета.АвтотранспортныеСредства); //10151
	МассивСчетов.Добавить(Счета.ВложенияВЛизинговоеОборудование); //10161
	МассивСчетов.Добавить(Счета.ПрочиеОсновныеСредства); //10171
	МассивСчетов.Добавить(Счета.ИнвестиционнаяСобственность); //1021

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	МеждународныйОбороты.Счет,
	               |	МеждународныйОбороты.Субконто1 КАК ОС,
	               |	МеждународныйОбороты.КорСчет,
	               |	МеждународныйОбороты.КорСубконто1,
	               |	СУММА(МеждународныйОбороты.СуммаОборотДт) КАК СуммаОборотДт,
	               |	СУММА(МеждународныйОбороты.СуммаОборотКт) КАК СуммаОборотКт,
	               |	МеждународныйОбороты.Регистратор
	               |ИЗ
	               |	РегистрБухгалтерии.Международный.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Счет В ИЕРАРХИИ (&Счет), &ОС, Организация = &Организация, КорСчет В ИЕРАРХИИ (&КорСчет), &ОС) КАК МеждународныйОбороты
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	МеждународныйОбороты.Счет,
	               |	МеждународныйОбороты.Субконто1,
	               |	МеждународныйОбороты.КорСчет,
	               |	МеждународныйОбороты.КорСубконто1,
	               |	МеждународныйОбороты.Регистратор";
	
	Запрос.УстановитьПараметр("НачалоПериода", ПериодНачало);
	Запрос.УстановитьПараметр("КонецПериода", ПериодКонец);
	Запрос.УстановитьПараметр("Счет", МассивСчетов);
	Запрос.УстановитьПараметр("КорСчет", Счета.ИнвестиционнаяСобственность);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОС", ПланыВидовХарактеристик.ВидыСубконтоМеждународные.ОсновныеСредства);

	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СрезСведенийМестонахождение = РегистрыСведений.МестонахождениеОСБухгалтерскийУчет.ПолучитьПоследнее(ПериодКонец, Новый Структура("ОсновноеСредство", Выборка.ОС));
		СрезСведенийНачислятьАмортизациюБУ = РегистрыСведений.НачислениеАмортизацииОСБухгалтерскийУчет.ПолучитьПоследнее(ПериодКонец, Новый Структура("ОсновноеСредство", Выборка.ОС));
        СрезСведенийПараметрыАмортизацииБУ = РегистрыСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.ПолучитьПоследнее(ПериодКонец, Новый Структура("ОсновноеСредство", Выборка.ОС));
		СрезСведенийМежд = РегистрыСведений.ОсновныеСредстваМеждународныйУчет.ПолучитьПоследнее((Дата-1),Новый Структура("ОсновноеСредство", Выборка.ОС));

		СтрокаТП = ОсновныеСредства.Добавить();
		СтрокаТП.ОсновноеСредство = Выборка.ОС;
		СтрокаТП.МестонахождениеОбъекта = СрезСведенийМестонахождение.Местонахождение;
		СтрокаТП.МОЛ = СрезСведенийМестонахождение.МОЛ;
		СтрокаТП.СрокПолезногоИспользования = СрезСведенийМежд.СрокПолезногоИспользования;
		СтрокаТП.НачислятьАмортизацию = СрезСведенийМежд.НачислятьАмортизацию;
		СтрокаТП.ПредполагаемыйОбъемПродукции = СрезСведенийМежд.ПредполагаемыйОбъемПродукции;
		СтрокаТП.СчетУчета = Выборка.Счет;
		СтрокаТП.ЛиквидационнаяСтоимость = СрезСведенийМежд.ЛиквидационнаяСтоимость;
		СтрокаТП.СчетСниженияСтоимости = СрезСведенийМежд.СчетСниженияСтоимости;
		СтрокаТП.КоэффициентУскорения = СрезСведенийМежд.КоэффициентУскорения;
		
		Если Выборка.СуммаОборотДт <> 0 Тогда
			СтрокаТП.НаправлениеПереводаОСиИС = Перечисления.НаправлениеПереводаОСиИС.ИзИнвестиционнойСобственностиВОсновныеСредства;
			
			БухИтоги = Обработки.БухгалтерскиеИтоги.Создать();
			БухИтоги.РассчитатьИтоги("Международный", "КонечныйОстатокКт", "Сумма", "Счет,Субконто1", Дата, Дата, , СрезСведенийМежд.СчетНачисленияАмортизации, , , ,"Организация", Организация);
			СтрокаТП.СуммаНачисленнойАмортизации = БухИтоги.ПолучитьИтог("СуммаКонечныйОстатокКт", "Счет,Субконто1", СрезСведенийМежд.СчетНачисленияАмортизации, Выборка.ОС);
			
		ИначеЕсли Выборка.СуммаОборотКт <> 0 Тогда
			СтрокаТП.НаправлениеПереводаОСиИС = Перечисления.НаправлениеПереводаОСиИС.ИзОсновныхСредствВИнвестиционнуюСобственность;

			БухИтоги = Обработки.БухгалтерскиеИтоги.Создать();
			БухИтоги.РассчитатьИтоги("Международный", "КонечныйОстатокКт", "Сумма", "Счет,Субконто1", Дата, Дата, , СрезСведенийМежд.СчетНачисленияАмортизации, , , ,"Организация", Организация);
			СтрокаТП.СуммаНачисленнойАмортизации = БухИтоги.ПолучитьИтог("СуммаКонечныйОстатокКт", "Счет,Субконто1", СрезСведенийМежд.СчетНачисленияАмортизации, Выборка.ОС);
			
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(ПериодНачало, ?(ПериодКонец='0001-01-01', ПериодКонец, КонецДня(ПериодКонец)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.Редактировать();
	ПериодНачало = НастройкаПериода.ПолучитьДатуНачала();
	ПериодКонец = НастройкаПериода.ПолучитьДатуОкончания();
КонецПроцедуры

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
	
КонецПроцедуры // ПередОткрытием()

Процедура ПриОткрытии()

	
	Если НЕ ЭтоНовый() Тогда 
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	КонецЕсли;
	
	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ

		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, "Продажа");
	КонецЕсли;

	// Вывести в заголовке формы вид операции.
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	// Создать кнопки печати
	ФормированиеПечатныхФорм.СоздатьКнопкиПечати(ЭтотОбъект, ЭтаФорма);
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура ПослеЗаписи()

	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
	
КонецПроцедуры

Процедура ОсновныеСредстваСубконто1НачалоВыбора(Элемент, СтандартнаяОбработка)
	Для Ном = 1 по 3 Цикл
		Если (ЭлементыФормы.ОсновныеСредства.ТекущиеДанные.СчетЗатрат.ВидыСубконто.Количество() > (Ном-1)) и (НЕ ЗначениеЗаполнено(ЭлементыФормы.ОсновныеСредства.ТекущиеДанные["Субконто"+Ном])) Тогда
			Типы = ЭлементыФормы.ОсновныеСредства.ТекущиеДанные.СчетЗатрат.ВидыСубконто[Ном-1].ВидСубконто.ТипЗначения.Типы();
			ЭлементыФормы.ОсновныеСредства.ТекущиеДанные["Субконто"+Ном] = Новый(Типы[0]);
		КонецЕсли;
	КонецЦикла
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

 
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

Процедура ДействияФормыРедактироватьНомер(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
КонецПроцедуры
// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

Процедура ОрганизацияНачалоВыбора(Элемент, СтандартнаяОбработка)
	Если ОсновныеСредства.Количество()>0 Тогда
		Если Вопрос("При смене организации необходимо очистить табличную часть документа. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			ОсновныеСредства.Очистить();
		Иначе
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ОсновныеСредстваОсновноеСредствоПриИзменении(Элемент)
	ТД = ЭлементыФормы.ОсновныеСредства.ТекущиеДанные;
	СрезСведенийМежд = РегистрыСведений.ОсновныеСредстваМеждународныйУчет.ПолучитьПоследнее((Дата-1), Новый Структура("ОсновноеСредство", ТД.ОсновноеСредство));
	ТД.МестонахождениеОбъекта = СрезСведенийМежд.МестонахождениеОбъекта;
	ТД.МОЛ = СрезСведенийМежд.МОЛ;
	ТД.СчетУчета = СрезСведенийМежд.СчетУчета;
	ТД.СрокПолезногоИспользования = СрезСведенийМежд.СрокПолезногоИспользования;
	ТД.НачислятьАмортизацию = СрезСведенийМежд.НачислятьАмортизацию;
	ТД.МетодНачисленияАмортизации = СрезСведенийМежд.МетодНачисленияАмортизации;
	ТД.СчетНачисленияАмортизации = СрезСведенийМежд.СчетНачисленияАмортизации;
	ТД.ЛиквидационнаяСтоимость = СрезСведенийМежд.ЛиквидационнаяСтоимость;
	ТД.СчетЗатрат = СрезСведенийМежд.СчетЗатрат;
	ТД.ПредполагаемыйОбъемПродукции = СрезСведенийМежд.ПредполагаемыйОбъемПродукции;
	ТД.Субконто1 = СрезСведенийМежд.Субконто1;
	ТД.Субконто2 = СрезСведенийМежд.Субконто2;
	ТД.Субконто3 = СрезСведенийМежд.Субконто3;
	ТД.СуммаНачисленнойАмортизации = СрезСведенийМежд.СуммаНачисленнойАмортизации;
	ТД.СчетСниженияСтоимости = СрезСведенийМежд.СчетСниженияСтоимости;
	ТД.КоэффициентУскорения = СрезСведенийМежд.КоэффициентУскорения;
КонецПроцедуры

Процедура ОсновныеСредстваПредполагаемыйОбъемПродукцииПриИзменении(Элемент)
	Если ЭлементыФормы.ОсновныеСредства.ТекущиеДанные.МетодНачисленияАмортизации <> Перечисления.МетодыНачисленияАмортизацииОСМеждународный.ПропорциональноОбъемуПродукции Тогда
		ЭлементыФормы.ОсновныеСредства.ТекущиеДанные.ПредполагаемыйОбъемПродукции = 0;
		Предупреждение("Предполагаемый объем продукции заполняется только при методе начисления амортизации - пропорционально объему продукции.");
	КонецЕсли;
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;
КонецПроцедуры

Процедура ОсновныеСредстваМетодАмортизацииПриИзменении(Элемент)
	Если НЕ (ЭлементыФормы.ОсновныеСредства.ТекущиеДанные.МетодНачисленияАмортизации = Перечисления.МетодыНачисленияАмортизацииОСМеждународный.ПропорциональноОбъемуПродукции) Тогда
		ЭлементыФормы.ОсновныеСредства.ТекущиеДанные.ПредполагаемыйОбъемПродукции = 0;		
	КонецЕсли;
	Если НЕ (ЭлементыФормы.ОсновныеСредства.ТекущиеДанные.МетодНачисленияАмортизации = Перечисления.МетодыНачисленияАмортизацииОСМеждународный.УменьшаемогоОстатка) Тогда
		ЭлементыФормы.ОсновныеСредства.ТекущиеДанные.КоэффициентУскорения = 0;
	КонецЕсли;
КонецПроцедуры

Процедура ОсновныеСредстваПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	ОформлениеСтроки.Ячейки.ПредполагаемыйОбъемПродукции.ТолькоПросмотр = (ДанныеСтроки.МетодНачисленияАмортизации <> Перечисления.МетодыНачисленияАмортизацииОСМеждународный.ПропорциональноОбъемуПродукции);
	ОформлениеСтроки.Ячейки.КоэффициентУскорения.ТолькоПросмотр = (ДанныеСтроки.МетодНачисленияАмортизации <> Перечисления.МетодыНачисленияАмортизацииОСМеждународный.УменьшаемогоОстатка);
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля дата 
// в диалоге документа.
//
Процедура ДатаПриИзменении(Элемент)
	
	УстановитьВремя(РежимАвтоВремя.Последним);
	
	Если (НачалоМесяца(Дата) <> ПериодНачало)
	 или (КонецМесяца(Дата) <> ПериодКонец) Тогда
		Ответ = Вопрос("Установить значение периода документа месяцем в который входит текущая дата?", РежимДиалогаВопрос.ДаНет,,,);
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ПериодНачало = НачалоМесяца(Дата);
			ПериодКонец = КонецМесяца(Дата);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать".
// Открывает форму выбора печатных форм объекта.
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ОткрытьФормуВыбораПечатныхФормОбъекта(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ОсновныеДействияФормыПечать() 

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)

	УниверсальныеМеханизмы.НапечататьДокументПоУмолчанию(ЭтотОбъект);

КонецПроцедуры