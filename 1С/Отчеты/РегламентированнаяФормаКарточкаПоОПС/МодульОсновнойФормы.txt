////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мОбработкаПодбораПоСтроке;
Перем мТекстПодбораПоСтроке;
Перем мПоследнееЗначениеЭлементаПодбораПоСтроке;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Функция формирует структуру параметров для для ввода головной организации по подстроке
//
// Параметры
//  НЕТ
//
// Возвращаемое значение:
//   Структура имен и значений параметров
//
Функция ПолучитьСтруктуруПараметровПодбораПоСтроке()

	СтруктураПараметров = Новый Структура("ГоловнаяОрганизация", Справочники.Организации.ПустаяСсылка());
	
	Возврат СтруктураПараметров;

КонецФункции // ПолучитьСтруктуруПараметровПодбораПоСтроке()()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНЫХ ПАНЕЛЕЙ

// Процедура-обработчик события нажатия кнопки "Сформировать"
Процедура ДействияФормыСформировать(Кнопка)
	СформироватьОтчет(ЭлементыФормы.ДокументРезультат);
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "На принтер"
Процедура ДействияФормыНаПринтер(Кнопка)
	
	ЭлементыФормы.ДокументРезультат.Напечатать();

КонецПроцедуры

// Обработчик события элемента КоманднаяПанельФормы.НовыйОтчет.
//
Процедура ДействияФормыНовыйОтчет(Кнопка)
	
	Если Метаданные.НайтиПоПолномуИмени(ЭтотОбъект .Метаданные().ПолноеИмя()) = Неопределено Тогда
			
		Предупреждение("Данный отчет является внешней обработкой." + Символы.ПС + "Открытие нового отчета возможно только для объектов конфигурации.");
		Возврат;
			
	Иначе
			
		НовыйОтчет = Отчеты[ЭтотОбъект.Метаданные().Имя].Создать();
			
	КонецЕсли;
	
	ФормаНовогоОтчета = НовыйОтчет.ПолучитьФорму();
	ФормаНовогоОтчета.Открыть();

КонецПроцедуры // КоманднаяПанельФормыДействиеНовыйОтчет()

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "При открытии" формы отчета.
//
Процедура ПриОткрытии()

	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Организация = ОбщегоНазначения.ГоловнаяОрганизация(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация"));
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(НалоговыйПериод) Тогда
		НалоговыйПериод = Мин(Год(ОбщегоНазначения.ПолучитьРабочуюДату()), 2009);
	КонецЕсли; 
	
КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "Обработка выбора" формы отчета.
//
Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	Если ТипЗнч(ЗначениеВыбора) = Тип("Структура") Тогда
		Физлицо = ЗначениеВыбора.Физлицо;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ДИАЛОГА


Процедура ОрганизацияНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокВыбора = ПроцедурыУправленияПерсоналом.ПолучитьСписокГоловныхОрганизаций();
	ЭлементСписка = ВыбратьИзСписка(СписокВыбора,Элемент,СписокВыбора.НайтиПоЗначению(Элемент.Значение));
	Если ЭлементСписка <> Неопределено Тогда
		Элемент.Значение = ЭлементСписка.Значение
	КонецЕсли;
КонецПроцедуры

Процедура ОрганизацияОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, ПолучитьСтруктуруПараметровПодбораПоСтроке(), ЭтаФорма, Тип("СправочникСсылка.Организации"), мОбработкаПодбораПоСтроке, мТекстПодбораПоСтроке, мПоследнееЗначениеЭлементаПодбораПоСтроке, Ложь);
	
КонецПроцедуры

Процедура ОрганизацияАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, ПолучитьСтруктуруПараметровПодбораПоСтроке(), Тип("СправочникСсылка.Организации"));
	
КонецПроцедуры

Процедура ДокументРезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	ЗаполнениеРегламентированнойОтчетности.ВывестиОтчетРасшифровку("РегламентированнаяФормаКарточкаПоОПС", ЭтотОбъект, ЭтаФорма, Расшифровка, СтандартнаяОбработка);	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мОбработкаПодбораПоСтроке                 = Ложь;
мТекстПодбораПоСтроке                     = "";
мПоследнееЗначениеЭлементаПодбораПоСтроке = Неопределено;