/////////////////////////////////////////////////////////////////////////
// общие процедуры и функции
/////////////////////////////////////////////////////////////////////////

// Обновляет таблицу отчета
//
// Параметры:
//	Нет.
//
Процедура ОбновитьОтчет() Экспорт

	НеЗаполнятьНастройкиПриОткрытии = Не Открыта();
	
	СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка);

	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ДокументРезультат;
	
КонецПроцедуры // ОбновитьОтчет()

// Управляет пометками кнопок ком. панели
//
// Параметры:
//	Нет.
//
Процедура УправлениеПометкамиКнопокКоманднойПанели()
	
	Если ПоказыватьЗаголовок Тогда
		
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка = Истина;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Заголовок.Пометка = Истина;

	Иначе
		
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка = Ложь;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Заголовок.Пометка = Ложь;

	КонецЕсли;
	
КонецПроцедуры // УправлениеПометкамиКнопокКоманднойПанели()

Процедура ВыводЗаголовка()

	// Перезаполнять заголовок можно только у "чистого" отчета
	Если ЭлементыФормы.ДокументРезультат.ВысотаТаблицы = 0 Тогда

		ОбластьЗаголовка = СформироватьЗаголовок();
		ВысотаЗаголовка = ОбластьЗаголовка.ВысотаТаблицы;
		ЭлементыФормы.ДокументРезультат.Вывести(ОбластьЗаголовка);
		
	КонецЕсли;


	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ЭлементыФормы.ДокументРезультат.Область(1,,ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;
	
	УправлениеПометкамиКнопокКоманднойПанели();
	
КонецПроцедуры // ВыводЗаголовка()

// Процедура формирует заголовок формы отчета с учетом настроек
//
// Параметры:
//  Нет.
//
Процедура СформироватьЗаголовокФормы()

	// Вывод заголовка, описателя периода и фильтров и заголовка
	Если ДатаНач = '00010101000000' И ДатаКон = '00010101000000' Тогда

		ОписаниеПериода     = "Период не установлен";

	Иначе

		Если ДатаНач = '00010101000000' ИЛИ ДатаКон = '00010101000000' Тогда

			ОписаниеПериода = "" + Формат(ДатаНач, "ДФ = ""дд.ММ.гггг""; ДП = ""...""") 
							+ " - "      + Формат(ДатаКон, "ДФ = ""дд.ММ.гггг""; ДП = ""...""");

		Иначе

			Если ДатаНач <= ДатаКон Тогда
				ОписаниеПериода = "" + ПредставлениеПериода(НачалоДня(ДатаНач), КонецДня(ДатаКон), "ФП = Истина");
			Иначе
				ОписаниеПериода = "Неправильно задан период!"
			КонецЕсли;

		КонецЕсли;

	КонецЕсли;

	Заголовок = ЗаголовокОтчета()+" (" + ОписаниеПериода + ") " +  ?(ЗначениеЗаполнено(Организация.НаименованиеПолное), Организация.НаименованиеПолное, Организация);
	
КонецПроцедуры // СформироватьЗаголовокФормы()()


/////////////////////////////////////////////////////////////////////////
// обработчики событий элементов формы
/////////////////////////////////////////////////////////////////////////


Процедура Сформировать(Кнопка)
	
	ОбновитьОтчет();
	
КонецПроцедуры

Процедура НастройкаПериодаНажатие(Элемент)
	
	Если НП.Редактировать() Тогда

		ДатаНач = НП.ПолучитьДатуНачала();
		ДатаКон = НП.ПолучитьДатуОкончания();

	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельФормыЗаголовок(Кнопка)
	
	ПоказыватьЗаголовок = Не ПоказыватьЗаголовок;
	
	ВыводЗаголовка();
	
КонецПроцедуры

Процедура КоманднаяПанельФормыНастройка(Кнопка)
	
	ФормаНастройка = ПолучитьФорму("ФормаНастройка");
	ФормаНастройка.ВладелецФормы = ЭтаФорма;

	СтруктураСНастройками = СформироватьСтруктуруДляСохраненияНастроек();

	СтараяДатаКон = ДатаКон;
	СтараяДатаНач = ДатаНач;
	
	РезультатОткрытия = ФормаНастройка.ОткрытьМодально();

	Если РезультатОткрытия = Истина Тогда

		ОбновитьОтчет();

	Иначе
		
		// Форму закрыли эскейпом или по "Закрыть" - восстановим настройки, отчет формировать не будем!
		// Восстанавливаем сохраненные значения
		
		ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками);
		
		ДатаКон = СтараяДатаКон;
		ДатаНач = СтараяДатаНач;
		
	КонецЕсли;

КонецПроцедуры

Процедура ДокументРезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Если ТипЗнч(Расшифровка) = Тип("СписокЗначений") Тогда
		Если Расшифровка.Количество() = 1 Тогда
			ВыбранноеЗначение = Расшифровка[0];
		Иначе
			ВыбранноеЗначение = Расшифровка.ВыбратьЭлемент("Выберите расшифровку",Расшифровка[0]);
		КонецЕсли;
		Если ВыбранноеЗначение <> Неопределено Тогда
			ВыбраннаяРасшифровка = ВыбранноеЗначение.Значение;
		Иначе
			СтандартнаяОбработка = Ложь;
			Возврат;
		КонецЕсли;
	ИначеЕсли ТипЗнч(Расшифровка) = Тип("Структура")
		ИЛИ ТипЗнч(Расшифровка) = Тип("Соответствие") Тогда
		
		ВыбраннаяРасшифровка = Расшифровка;
	КонецЕсли;

	Если ТипЗнч(ВыбраннаяРасшифровка) = Тип("Структура") 
		ИЛИ ТипЗнч(ВыбраннаяРасшифровка) = Тип("Соответствие") Тогда

		// Добавим общую расшифровку из левого верхнего угла
		ОбщаяРасшифровка = Элемент.Область(1,1).Расшифровка;

		Если ТипЗнч(ОбщаяРасшифровка) = Тип("Структура") 
			ИЛИ ТипЗнч(ОбщаяРасшифровка) = Тип("Соответствие") Тогда

			Для Каждого Элемент Из ОбщаяРасшифровка Цикл
				ВыбраннаяРасшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
			КонецЦикла;

		КонецЕсли;

		СтандартнаяОбработка = Ложь;
		
		Отчет = Отчеты[ВыбраннаяРасшифровка["ИмяОбъекта"]].Создать();
		
		ФормаОтчета = Отчет.ПолучитьФорму(, , Новый УникальныйИдентификатор());
		
		Попытка
			
			Отчет.Настроить(ВыбраннаяРасшифровка);
			
			ФормаОтчета.ПоказыватьЗаголовок = ПоказыватьЗаголовок;
			
			ФормаОтчета.ОбновитьОтчет();
			
		Исключение
		КонецПопытки;
		
		ФормаОтчета.Открыть();

	КонецЕсли;

КонецПроцедуры


/////////////////////////////////////////////////////////////////////////
// обработчики событий формы
/////////////////////////////////////////////////////////////////////////

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ТиповыеОтчеты.НазначитьФормеУникальныйКлючИдентификации(ЭтаФорма);
	
	Если РегламентированнаяОтчетность.ИДКонфигурации() <> "БП" Тогда
		// Проверка ведения однофирменности
		УчетПоВсемОрганизациям = Истина;
	КонецЕсли;

	Если НЕ НеЗаполнятьНастройкиПриОткрытии Тогда
		
		ПоказыватьЗаголовок = Истина;
		
		СтруктураОбщихПараметров = ВосстановитьЗначение("ОбщиеПараметрыОтчетов"+ИмяРегистраБухгалтерии);
		
		ВосстановитьНастройкиИзСтруктуры(СтруктураОбщихПараметров);
		
		ВысотаЗаголовка = 0;
		
	КонецЕсли;
	
	НП.УстановитьПериод(НачалоДня(ДатаНач), ?(ДатаКон = '00010101', ДатаКон, КонецДня(ДатаКон)));
	
	БухгалтерскиеОтчеты.ПоддержкаОднофирменностиДляБухОтчетов(ЭтаФорма, Организация, УчетПоВсемОрганизациям, НЕ НеЗаполнятьНастройкиПриОткрытии);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если НЕ НеЗаполнятьНастройкиПриОткрытии Тогда
		ВыводЗаголовка();
		СформироватьЗаголовокФормы();
	КонецЕсли;
	
	УправлениеПометкамиКнопокКоманднойПанели();
	
КонецПроцедуры

Процедура ПередСохранениемЗначений(Отказ)
	
	СохраненныеНастройки = СформироватьСтруктуруДляСохраненияНастроек();
	
КонецПроцедуры

Процедура ПослеВосстановленияЗначений()
	
	// Если настройка восстанавливается, когда открывается форма сформированного отчета, игнорируем
	Если НеЗаполнятьНастройкиПриОткрытии Тогда
		Возврат;
	КонецЕсли;
	
	ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки);
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	СформироватьЗаголовокФормы();
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СтруктураОбщихПараметров = СформироватьСтруктуруДляСохраненияНастроек();
	
	СохранитьЗначение("ОбщиеПараметрыОтчетов"+ИмяРегистраБухгалтерии, СтруктураОбщихПараметров);
	
КонецПроцедуры