////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Устанавливает доступность разделов отчета в соответствии с уже выбранными
//
Процедура УстановитьДоступность()
	
	ЭлементыФормы.АнализЛиквидностиИПлатежеспособности.Доступность=ВыводитьБаланс;
	ЭлементыФормы.АнализДоходностиИРентабельности.Доступность=ВыводитьПрибылиИУбытки;
	
	ЭлементыФормы.АнализОборачиваемости.Доступность=ВыводитьБаланс И ВыводитьПрибылиИУбытки;
	ЭлементыФормы.АнализИспользованияКапитала.Доступность=ВыводитьБаланс И ВыводитьПрибылиИУбытки;
		
КонецПроцедуры // УстановитьДоступность()

// Проверяет даты начала и конца ограничения оборотов и корректирует при необходимости
//
Процедура ПроверкаИнтервала(Дата1,Дата2,Периодичность)
	
	Если (Дата2='00010101') И (Дата1<>'00010101') Тогда
		
		Дата2=ОбщегоНазначения.ДатаКонцаПериода(Дата1,Периодичность);
		
	ИначеЕсли (Дата2<>'00010101') И (Дата1='00010101') Тогда
		
		Дата1=ОбщегоНазначения.ДатаНачалаПериода(Дата2,Периодичность);
		
	ИначеЕсли Дата2<Дата1 Тогда
		
		Если ЭтаФорма.ТекущийЭлемент.Имя="Дата2" Тогда
			
			Дата1=ОбщегоНазначения.ДатаНачалаПериода(Дата2,Периодичность);
			
		Иначе
			
			Дата2=ОбщегоНазначения.ДатаКонцаПериода(Дата1,Периодичность);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПроверкаИнтервала()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ


// Процедура - обработчик нажатия кнопки настройки периода
//
Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	Если НП.Редактировать() Тогда
		
		Если НЕ Сценарий.Пустая() Тогда
			
			ДатаНач=ОбщегоНазначения.ДатаНачалаПериода(НП.ПолучитьДатуНачала(),Сценарий.Периодичность);
			ДатаКон=ОбщегоНазначения.ДатаКонцаПериода(НП.ПолучитьДатуОкончания(),Сценарий.Периодичность);
		Иначе
			
			ДатаНач = НП.ПолучитьДатуНачала();
			ДатаКон = НП.ПолучитьДатуОкончания();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

Процедура ДатаНачалаПриИзменении(Элемент)
	
	Элемент.Значение=ОбщегоНазначения.ДатаНачалаПериода(Элемент.Значение,Сценарий.Периодичность);
	ПроверкаИнтервала(ДатаНач,ДатаКон,Сценарий.Периодичность);
	
КонецПроцедуры

Процедура ДатаНачалаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;

	Элемент.Значение=ОбщегоНазначения.ДобавитьИнтервал(Элемент.Значение,Сценарий.Периодичность,Направление);
	
	ПроверкаИнтервала(ДатаНач,ДатаКон,Сценарий.Периодичность);

КонецПроцедуры

Процедура ДатаКонцаПриИзменении(Элемент)
	
	Элемент.Значение=ОбщегоНазначения.ДатаКонцаПериода(Элемент.Значение,Сценарий.Периодичность);
	ПроверкаИнтервала(ДатаНач,ДатаКон,Сценарий.Периодичность);
	
КонецПроцедуры

Процедура ДатаКонцаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;

	Элемент.Значение=ОбщегоНазначения.ДатаКонцаПериода(ОбщегоНазначения.ДобавитьИнтервал(Элемент.Значение,Сценарий.Периодичность,Направление),Сценарий.Периодичность);

	ПроверкаИнтервала(ДатаНач,ДатаКон,Сценарий.Периодичность);
	
КонецПроцедуры

Процедура СценарийПриИзменении(Элемент)
	
	Если НЕ Сценарий.Пустая() Тогда
		
		ДатаНач = ОбщегоНазначения.ДатаНачалаПериода(?(НЕ ЗначениеЗаполнено(ДатаНач), ТекущаяДата(), ДатаНач),Сценарий.Периодичность);
		ДатаКон = ОбщегоНазначения.ДатаКонцаПериода(?(НЕ ЗначениеЗаполнено(ДатаКон), ТекущаяДата(), ДатаКон),Сценарий.Периодичность);
		
	КонецЕсли;	
			
КонецПроцедуры

Процедура КнопкаОКНажатие(Элемент)
	
	Закрыть(Истина);	
	
КонецПроцедуры

Процедура ВыводитьБалансПриИзменении(Элемент)
	
	Если НЕ ВыводитьБаланс Тогда
		АнализЛиквидностиИПлатежеспособности=Ложь;
		АнализИспользованияКапитала=Ложь;
		АнализОборачиваемости=Ложь;
	КонецЕсли;
	
	УстановитьДоступность();
		
КонецПроцедуры

Процедура ВыводитьПрибылиИУбыткиПриИзменении(Элемент)
	
	Если НЕ ВыводитьПрибылиИУбытки Тогда
		АнализДоходностиИРентабельности=Ложь;
		АнализИспользованияКапитала=Ложь;
		АнализОборачиваемости=Ложь;
	КонецЕсли;
	
	УстановитьДоступность();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	УстановитьДоступность();
	
КонецПроцедуры

Процедура СценарийСравнениеПрибылиПриИзменении(Элемент)
	
	Если НЕ СценарийСравнениеПрибыли.Пустая() Тогда
		
		ДатаНачСравнениеПрибыли=ОбщегоНазначения.ДатаНачалаПериода(?(НЕ ЗначениеЗаполнено(ДатаНачСравнениеПрибыли), ТекущаяДата(), ДатаНачСравнениеПрибыли),СценарийСравнениеПрибыли.Периодичность);
		ДатаКонСравнениеПрибыли=ОбщегоНазначения.ДатаКонцаПериода(?(НЕ ЗначениеЗаполнено(ДатаКонСравнениеПрибыли), ТекущаяДата(), ДатаКонСравнениеПрибыли),СценарийСравнениеПрибыли.Периодичность);
		
	КонецЕсли;	
		
КонецПроцедуры

Процедура ДатаНачСравнениеПрибылиПриИзменении(Элемент)
	
	Элемент.Значение=ОбщегоНазначения.ДатаНачалаПериода(Элемент.Значение,СценарийСравнениеПрибыли.Периодичность);
	ПроверкаИнтервала(ДатаНачСравнениеПрибыли,ДатаКонСравнениеПрибыли,СценарийСравнениеПрибыли.Периодичность);
	
КонецПроцедуры

Процедура ДатаКонСравнениеПрибылиПриИзменении(Элемент)
	
	Элемент.Значение=ОбщегоНазначения.ДатаКонцаПериода(Элемент.Значение,СценарийСравнениеПрибыли.Периодичность);
	ПроверкаИнтервала(ДатаНачСравнениеПрибыли,ДатаКонСравнениеПрибыли,СценарийСравнениеПрибыли.Периодичность);
	
КонецПроцедуры

Процедура ДатаНачСравнениеПрибылиРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;

	Элемент.Значение=ОбщегоНазначения.ДатаНачалаПериода(ОбщегоНазначения.ДобавитьИнтервал(Элемент.Значение,СценарийСравнениеПрибыли.Периодичность,Направление),СценарийСравнениеПрибыли.Периодичность);

	ПроверкаИнтервала(ДатаНачСравнениеПрибыли,ДатаКонСравнениеПрибыли,СценарийСравнениеПрибыли.Периодичность);

	
КонецПроцедуры

Процедура ДатаКонСравнениеПрибылиРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;

	Элемент.Значение=ОбщегоНазначения.ДатаКонцаПериода(ОбщегоНазначения.ДобавитьИнтервал(Элемент.Значение,СценарийСравнениеПрибыли.Периодичность,Направление),СценарийСравнениеПрибыли.Периодичность);

	ПроверкаИнтервала(ДатаНачСравнениеПрибыли,ДатаКонСравнениеПрибыли,СценарийСравнениеПрибыли.Периодичность);
	
КонецПроцедуры

Процедура КнопкаНастройкаПериодаСравнениеНажатие(Элемент)
	
	Если НП.Редактировать() Тогда
		
		Если НЕ СценарийСравнениеПрибыли.Пустая() Тогда
			
			ДатаНачНастройки = НП.ПолучитьДатуНачала();
			Если НЕ ЗначениеЗаполнено(ДатаНачНастройки) Тогда
				ДатаНачСравнениеПрибыли = ДатаНачНастройки;
			Иначе
				ДатаНачСравнениеПрибыли=ОбщегоНазначения.ДатаНачалаПериода(ДатаНачНастройки,СценарийСравнениеПрибыли.Периодичность);
			КонецЕсли; 
			
			ДатаКонНастройки = НП.ПолучитьДатуОкончания();
			Если НЕ ЗначениеЗаполнено(ДатаКонНастройки) Тогда
				ДатаНачСравнениеПрибыли = ДатаКонНастройки;
			Иначе
				ДатаКонСравнениеПрибыли=ОбщегоНазначения.ДатаКонцаПериода(ДатаКонНастройки,СценарийСравнениеПрибыли.Периодичность);
			КонецЕсли; 
			
		Иначе
			
			ДатаНачСравнениеПрибыли = НП.ПолучитьДатуНачала();
			ДатаКонСравнениеПрибыли = НП.ПолучитьДатуОкончания();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры