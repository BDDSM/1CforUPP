Перем ВысотаЗаголовка;
Перем ПоказыватьЗаголовок;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ВыводЗаголовка()

	// Перезаполнять заголовок можно только у "чистого" отчета
	Если ЭлементыФормы.ДокументРезультат.ВысотаТаблицы = 0 Тогда
		ВнешняяОбработкаОбъект.СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, Истина);
	КонецЕсли;

	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ЭлементыФормы.ДокументРезультат.Область(1,,ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;

	УправлениеПометкамиКнопокКоманднойПанели();

КонецПроцедуры // ВыводЗаголовка()

Процедура УправлениеПометкамиКнопокКоманднойПанели()

	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка                = ПоказыватьЗаголовок;
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Заголовок.Пометка = ПоказыватьЗаголовок;

КонецПроцедуры // УправлениеПометкамиКнопокКоманднойПанели()

Процедура ЗаполнитьСписокУсловийПолучения()

	// Заполним список условий полученя если он пуст.
	Если УсловияВыбытия.Количество() = 0 Тогда 

		УсловияВыбытия.Добавить(Перечисления.УсловияПоступленияИВыбытияИмущества.ЗаПлату,                   "С последующей оплатой");
		УсловияВыбытия.Добавить(Перечисления.УсловияПоступленияИВыбытияИмущества.Товароообмен,              "Товарообмен");
		УсловияВыбытия.Добавить(Перечисления.УсловияПоступленияИВыбытияИмущества.Возврат,                   "Возврат от покупателя");
		УсловияВыбытия.Добавить(Перечисления.УсловияПоступленияИВыбытияИмущества.СписаниеИмущества,         "Списание имущества за непригодностью");
		УсловияВыбытия.Добавить(Перечисления.УсловияПоступленияИВыбытияИмущества.ПоДоговоруЗайма,           "Передача по договору займа");
		УсловияВыбытия.Добавить(Перечисления.УсловияПоступленияИВыбытияИмущества.ВкладВУставныйКапитал,     "Вклад в уставный капитал");
		УсловияВыбытия.Добавить(Перечисления.УсловияПоступленияИВыбытияИмущества.ВкладВПростоеТоварищество, "Вклад в простое товарищество");
		УсловияВыбытия.Добавить(Перечисления.УсловияПоступленияИВыбытияИмущества.Недостачи,                 "Недостачи");
		УсловияВыбытия.Добавить(Перечисления.УсловияПоступленияИВыбытияИмущества.ПередачаОбособленномуПодразделению, "Передача обособленному подразделению");
		УсловияВыбытия.Добавить(Перечисления.УсловияПоступленияИВыбытияИмущества.Другие,                    "Другие существенные условия");
		УсловияВыбытия.Добавить(Перечисления.УсловияПоступленияИВыбытияИмущества.НеОблагается,              "По деятельности, не облагаемой налогом на прибыль ");

		УсловияВыбытия.ЗаполнитьПометки(Истина);

	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьСписокВидовРасходов()

	// Заполним список видов расходов если он пуст.
	Если ВидыДоходов.Количество() = 0 Тогда 

		// Внеоборотные активы
		ВидыДоходов.Добавить("Выручка от реализации товаров (работ, услуг) собственного производства");
		ВидыДоходов.Добавить("Выручка от реализации покупных товаров");
		ВидыДоходов.Добавить("Выручка от реализации имущественных прав");
		ВидыДоходов.Добавить("Выручка от реализации прочего имущества");
		ВидыДоходов.Добавить("Выручка от реализации ОС");
		ВидыДоходов.Добавить("Выручка от реализации НМА");
		ВидыДоходов.Добавить("Выручка от реализации объектов строительства");
		ВидыДоходов.Добавить("Выручка от реализации прав требования");
		ВидыДоходов.Добавить("Выручка от уступки права до наступления срока платежа");
		ВидыДоходов.Добавить("Выручка от уступки права после наступления срока платежа");
		ВидыДоходов.Добавить("Выручка от реализации ЦБ");
		ВидыДоходов.Добавить("Доход не возникает");

		ВидыДоходов.ЗаполнитьПометки(Истина);

	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	НП.УстановитьПериод(ДатаНач, ДатаКон);

	Если НП.Редактировать() Тогда

		ДатаНач = НП.ПолучитьДатуНачала();
		ДатаКон = НП.ПолучитьДатуОкончания();

	КонецЕсли;

КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ НАЖАТИЯ КНОПОК КОМАНДНОЙ ПАНЕЛИ

Процедура КоманднаяПанельФормыНастройка(Кнопка)

	ФормаНастройка = ПолучитьФорму("ФормаНастройка", ЭтаФорма);

	ФормаНастройка.ОткрытьМодально();

КонецПроцедуры // КоманднаяПанельФормыНастройка()

Процедура КоманднаяПанельФормыСформировать(Элемент)
// Проверка на пустые значения
	Если ДатаНач = '00010101000000' Тогда
		Предупреждение("Дата начала периода не может быть пустой");
		Возврат;
	КонецЕсли;

	Если ДатаКон = '00010101000000' Тогда
		Предупреждение("Дата окончания периода не может быть пустой");
		Возврат;
	КонецЕсли;
	ВнешняяОбработкаОбъект.СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка);

	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ДокументРезультат;

КонецПроцедуры

Процедура КоманднаяПанельЗаголовок(Кнопка)

	ПоказыватьЗаголовок = Не ПоказыватьЗаголовок;
	ВыводЗаголовка();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием()

	ПоказыватьЗаголовок = ИСТИНА;

КонецПроцедуры

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()

	ВыводЗаголовка();

	ЗаполнитьСписокУсловийПолучения();
	ЗаполнитьСписокВидовРасходов();
	Если НЕ ЗначениеЗаполнено(Организация) Тогда 
		Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнаяОрганизация");
	КонецЕсли;
КонецПроцедуры