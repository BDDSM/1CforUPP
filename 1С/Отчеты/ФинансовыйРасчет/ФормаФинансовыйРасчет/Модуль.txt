Перем ВысотаЗаголовка;
Перем ИдентификаторОкнаРасшифровки;
Перем ФормаНастройка;
Перем СтруктураРеквизитов;
Перем НеВосстанавливатьНастройку Экспорт;
Перем СтруктураСвязиЭлементовСДанными;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Управляет пометками кнопок ком. панели
//
// Параметры:
//	Нет.
//
Процедура УправлениеПометкамиКнопокКоманднойПанели()
	
	Если ПоказыватьЗаголовок Тогда
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка = Истина;
	Иначе
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка = Ложь;
	КонецЕсли;
		
КонецПроцедуры // УправлениеПометкамиКнопокКоманднойПанели()

// Обновляет таблицу отчета
//
// Параметры:
//	Нет.
//
Процедура ОбновитьОтчет() Экспорт

	СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка);

	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ЭлементыФормы.ДокументРезультат.Область(1,,ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;
	
	ВысотаТаблицы=ЭлементыФормы.ДокументРезультат.ВысотаТаблицы;
	ШиринаТаблицы=ЭлементыФормы.ДокументРезультат.ШиринаТаблицы;
	
	Если ЭлементыФормы.ДокументРезультат.Область(ВысотаТаблицы,2,ВысотаТаблицы,2).Текст="ИТОГО:" Тогда
		 ЭлементыФормы.ДокументРезультат.УдалитьОбласть(ЭлементыФормы.ДокументРезультат.Область(ВысотаТаблицы,1,ВысотаТаблицы,ШиринаТаблицы));
		 ЭлементыФормы.ДокументРезультат.Область(ВысотаТаблицы-1,2,ВысотаТаблицы-1,ШиринаТаблицы).ГраницаСнизу=Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,2);
	КонецЕсли;

	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ДокументРезультат;

	УправлениеПометкамиКнопокКоманднойПанели();
	
КонецПроцедуры // ОбновитьОтчет()

//  Управляет выводом заголовка
//
// Параметры:
//	Нет.
//
Процедура ВыводЗаголовка()

	ЗаполнитьНачальныеНастройки();
	
	// Перезаполнять заголовок можно только у "чистого" отчета
	Если ЭлементыФормы.ДокументРезультат.ВысотаТаблицы = 0 Тогда

		СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, Истина);
		
	КонецЕсли;

	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ЭлементыФормы.ДокументРезультат.Область(1,,ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;

	УправлениеПометкамиКнопокКоманднойПанели();
	
КонецПроцедуры // ВыводЗаголовка()

// Заполняет список периодов для разворота
//
Функция ПолучитьСписокПериодов()
	
	СписокВыбора=Новый СписокЗначений;
	СписокВыбора.Добавить("");
	
	СписокПериодов=Новый СписокЗначений;
	СписокПериодов.Добавить("День");
	СписокПериодов.Добавить("Неделя");
	СписокПериодов.Добавить("Месяц");
	СписокПериодов.Добавить("Квартал");
	СписокПериодов.Добавить("Год");
		
	Если НЕ СписокПериодов.НайтиПоЗначению(Строка(Сценарий.Периодичность))=Неопределено Тогда
		
		НачальныйИндекс=СписокПериодов.Индекс(СписокПериодов.НайтиПоЗначению(Строка(Сценарий.Периодичность)));
		
	Иначе
		
		НачальныйИндекс=0;
		
	КонецЕсли;
	
	Для Сч=НачальныйИндекс По СписокПериодов.Количество()-1 Цикл
		
		ТекущаяПериодичность=СписокПериодов.Получить(Сч).Значение;
		Для Каждого Строка Из СписокПериодичность Цикл
			
			Если Строка.Значение=ТекущаяПериодичность Тогда
				
				СписокВыбора.Добавить(Строка.Ключ);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат СписокВыбора;
	
КонецФункции 

// Формирует текст заголовка
//
// Параметры:
//	Нет.
//
Процедура СформироватьЗаголовокФормы()

	Заголовок = УправлениеОтчетами.СформироватьЗаголовокОсновнойФормы(ДатаНач, ДатаКон, мНазваниеОтчета, 0);

КонецПроцедуры // СформироватьЗаголовокФормы()

// Формирует структуру, в которую складываются настройки
//
Функция СформироватьСтруктуруДляСохраненияНастроек() Экспорт
	
	СтруктНастр = Новый Структура;
	СтруктНастр.Вставить("ЗаголовокПомечен", ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка);	
	Возврат СтруктНастр;
	
КонецФункции

// Заполняет настройки из структуры - кроме состояния панели "Отбор"
//
Процедура ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт

	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка = СтруктураСНастройками.ЗаголовокПомечен;
	
КонецПроцедуры

// Проверяет даты начала и конца ограничения оборотов и корректирует при необходимости
//
Процедура ПроверкаИнтервала()
	
	Если (ДатаКон='00010101') И (ДатаНач<>'00010101') Тогда
		
		ДатаКон=ОбщегоНазначения.ДатаКонцаПериода(ДатаНач,Сценарий.Периодичность);
		
	ИначеЕсли (ДатаКон<>'00010101') И (ДатаНач='00010101') Тогда
		
		ДатаНач=ОбщегоНазначения.ДатаНачалаПериода(ДатаКон,Сценарий.Периодичность);
		
	ИначеЕсли ДатаКон<ДатаНач Тогда
		
		Если ЭтаФорма.ТекущийЭлемент.Имя="ДатаКон" Тогда
			
			ДатаНач=ОбщегоНазначения.ДатаНачалаПериода(ДатаКон,Сценарий.Периодичность);
			
		Иначе
			
			ДатаКон=ОбщегоНазначения.ДатаКонцаПериода(ДатаНач,Сценарий.Периодичность);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПроверкаИнтервала()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ НАЖАТИЯ КНОПОК КОМАНДНОЙ ПАНЕЛИ

// Процедура - обработчик нажатия кнопки "Настройка".
//
Процедура КоманднаяПанельФормыНастройка(Кнопка)
	
	//ВызовСтандартнойНастройки(ЭтаФорма);
	
	ФормаНастройка = ПолучитьФорму("ФормаНастройка", ЭтаФорма);

	СтруктураСНастройками = СформироватьСтруктуруДляСохраненияНастроек();

	СтараяДатаКон = ДатаКон;
	СтараяДатаНач = ДатаНач;
	
	РезультатОткрытия = ФормаНастройка.ОткрытьМодально();

	Если РезультатОткрытия = Истина Тогда

		ОбновитьОтчет();

	Иначе
		//форму закрыли эскейпом или по "Закрыть" - восстановим настройки, отчет формировать не будем!
		//восстанавливаем значения
		НеВосстанавливатьНастройку = Ложь;
		ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками);
		ДатаКон = СтараяДатаКон;
		ДатаНач = СтараяДатаНач;
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик нажатия кнопки "Обновить".
//
Процедура КоманднаяПанельФормыОбновить(Кнопка)

	ОбновитьОтчет();

КонецПроцедуры // ВыполнитьНажатие()

// Процедура - обработчик нажатия кнопки "Заголовок".
//
Процедура КоманднаяПанельЗаголовок(Кнопка)
	ПоказыватьЗаголовок = Не ПоказыватьЗаголовок;
	ВыводЗаголовка();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ


// Процедура - обработчик обновления данных формы
//
Процедура ОбновлениеОтображения()

	СформироватьЗаголовокФормы();
	
КонецПроцедуры // ОбновлениеОтображения()


// Процедура - обработчик события при открытии формы
//
Процедура ПриОткрытии()
	УстановилиСверткуИзНастройки = Ложь;
	
	Если НЕ (НеВосстанавливатьНастройку = Истина) Тогда
		//отработаем сворачивание панели "Отбор"...
		Если ТипЗнч(СохраненныеНастройки) = Тип("Структура") Тогда

			УстановилиСверткуИзНастройки = истина;
			//Это, что выше, не работает при еще не открытой форме.
			УправлениеПОметкамиКнопокКоманднойПанели();

		КонецЕсли;
	Иначе
		//в следующий раз настройку мы все-таки восстановим - форма уже открыта...
		НеВосстанавливатьНастройку = Ложь;
		
	КонецЕсли;
		
	УправлениеПометкамиКнопокКоманднойПанели();
		
КонецПроцедуры

// Процедура - обработчик события перед сохранением значений формы
//
Процедура ПередСохранениемЗначений(Отказ)

	СохраненныеНастройки = СформироватьСтруктуруДляСохраненияНастроек();

КонецПроцедуры // ПередСохранениемЗначений()

// Процедура - обработчик события после восстановления значений формы
//
Процедура ПослеВосстановленияЗначений()

	Если НеВосстанавливатьНастройку<>Истина Тогда

		Если ТипЗнч(СохраненныеНастройки) = Тип("Структура") Тогда

			ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки);					
					
		КонецЕсли;
		
		Если Открыта() Тогда
				//Это, что выше, не работает при еще не открытой форме.
				УправлениеПометкамиКнопокКоманднойПанели();
			КонецЕсли;
			
		ЭлементыФормы.ГруппировкаГоризонтальная.СписокВыбора=ПолучитьСписокПериодов();
		СформироватьЗаголовокФормы();
		ВыводЗаголовка();
		ЗаполнитьНачальныеНастройки();

	КонецЕсли; 

КонецПроцедуры // ПослеВосстановленияЗначений()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик нажатия кнопки настройки периода
//
Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	Если НП.Редактировать() Тогда
		
		Если НЕ Сценарий.Пустая() Тогда
			
			ДатаНач=ОбщегоНазначения.ДатаНачалаПериода(НП.ПолучитьДатуНачала(),Сценарий.Периодичность);
			ДатаКон=ОбщегоНазначения.ДатаКонцаПериода(НП.ПолучитьДатуОкончания(),Сценарий.Периодичность);
		Иначе
			
			ДатаНач = НП.ПолучитьДатуНачала();
			ДатаКон = НП.ПолучитьДатуОкончания();
			
		КонецЕсли;
		
		ЗаполнитьНачальныеНастройки();
		
	КонецЕсли;
	
КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

Процедура ДатаНачалаПриИзменении(Элемент)
	
	Элемент.Значение=ОбщегоНазначения.ДатаНачалаПериода(Элемент.Значение,Сценарий.Периодичность);
	ПроверкаИнтервала();
	
КонецПроцедуры

Процедура ДатаНачалаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;

	Элемент.Значение=ОбщегоНазначения.ДобавитьИнтервал(Элемент.Значение,Сценарий.Периодичность,Направление);
	
	ПроверкаИнтервала();
	
	ЗаполнитьНачальныеНастройки();

КонецПроцедуры

Процедура ДатаКонцаПриИзменении(Элемент)
	
	Элемент.Значение=ОбщегоНазначения.ДатаКонцаПериода(Элемент.Значение,Сценарий.Периодичность);
	ПроверкаИнтервала();
		
КонецПроцедуры

Процедура ДатаКонцаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;

	Элемент.Значение=ОбщегоНазначения.ДатаКонцаПериода(ОбщегоНазначения.ДобавитьИнтервал(Элемент.Значение,Сценарий.Периодичность,Направление),Сценарий.Периодичность);

	ПроверкаИнтервала();
	
	ЗаполнитьНачальныеНастройки();
	
КонецПроцедуры

Процедура СценарийПриИзменении(Элемент)
	
	Если НЕ Сценарий.Пустая() Тогда
		
		ДатаНач=ОбщегоНазначения.ДатаНачалаПериода(ДатаНач,Сценарий.Периодичность);
		ДатаКон=ОбщегоНазначения.ДатаКонцаПериода(ДатаКон,Сценарий.Периодичность);
		
	КонецЕсли;
	
	ГруппировкаГоризонтальная="";
		
	ЭлементыФормы.ГруппировкаГоризонтальная.СписокВыбора=ПолучитьСписокПериодов();
			
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьНачальныеНастройки();
	СформироватьЗаголовокФормы();
	
КонецПроцедуры

Процедура ВидФинансовогоРасчетаПриИзменении(Элемент)
	
	ЗаполнитьНачальныеНастройки();
	СформироватьЗаголовокФормы();
	
КонецПроцедуры




// Список доступных показателей
СписокПоказателей=Новый СписокЗначений;
СписокПоказателей.Добавить("СуммаУпр","Сумма в валюте упр. учета");
СписокПоказателей.Добавить("СуммаСценария","Сумма в валюте сценария");

ЭлементыФормы.ПоказательОтчета.СписокВыбора = СписокПоказателей;

ЭлементыФормы.ГруппировкаГоризонтальная.СписокВыбора=ПолучитьСписокПериодов();