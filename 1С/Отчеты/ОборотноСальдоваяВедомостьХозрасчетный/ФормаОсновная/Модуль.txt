Перем ВысотаЗаголовка;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ


// Обновляет таблицу отчета
//
// Параметры:
//	Нет.
//
Процедура ОбновитьОтчет() Экспорт
	
	СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка);

	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ДокументРезультат;
	
	БухгалтерскиеОтчеты.УправлениеПометкамиКнопокЗаголовковКоманднойПанели(ЭтаФорма, ПоказыватьЗаголовок);
	
КонецПроцедуры // ОбновитьОтчет()

//  Управляет выводом заголовка
//
// Параметры:
//	Нет.
//
Процедура ВыводЗаголовка()

	БухгалтерскиеОтчеты.ОбработатьВыводЗаголовка(ЭтаФорма, ЭтотОбъект, ВысотаЗаголовка, ПоказыватьЗаголовок);
	
КонецПроцедуры // ВыводЗаголовка()

// Формирует заголовок формы
//
// Параметры:
//	Нет.
//
Процедура СформироватьЗаголовокФормы()

	ОписаниеПериода = БухгалтерскиеОтчеты.СформироватьСтрокуОграниченийПоДатамДляФормы(ДатаНач, ДатаКон);
	
	Заголовок = ЗаголовокОтчета()+" (" + ОписаниеПериода + ") " +  ?(ЗначениеЗаполнено(Организация.НаименованиеПолное), Организация.НаименованиеПолное, Организация);

КонецПроцедуры // СформироватьЗаголовокФормы()

// процедура устанавливает параметры из структуры данных
Процедура УстановитьПараметрыОтчетаИзСтруктуры(СтруктураПараметров, Знач УстанавливатьДаты = Ложь)
	
	// Тип восстановленного значения должен быть Структура
	Если ТипЗнч(СтруктураПараметров) <> Тип("Структура") Тогда 
		Возврат;
	КонецЕсли;

	СтруктураПараметров.Свойство("Организация", Организация);
	СтруктураПараметров.Свойство("ПоВалютам", ПоВалютам);
	СтруктураПараметров.Свойство("ПоЗабалансовымСчетам", ПоЗабалансовымСчетам);
	СтруктураПараметров.Свойство("ПоСубсчетамИСубконто", ПоСубсчетамИСубконто);
	СтруктураПараметров.Свойство("ВыводитьРазвернутоеСальдо", ВыводитьРазвернутоеСальдо);
	
	БухгалтерскиеОтчеты.ЗаполнитьТаблицуНастроекСвойств(ЭтотОбъект, "ПравилаВыводаИтогов",       СтруктураПараметров);
	БухгалтерскиеОтчеты.ЗаполнитьТаблицуНастроекСвойств(ЭтотОбъект, "ПравилаРазвернутогоСальдо", СтруктураПараметров);
	
	Если УстанавливатьДаты Тогда
		
		СтруктураПараметров.Свойство("ДатаНач", ДатаНач);
		СтруктураПараметров.Свойство("ДатаКон", ДатаКон);
		
	КонецЕсли;
	
КонецПроцедуры

//Функция сохраняет параметры отчета в структуру
Функция ПоместитьПараметрыОтчетаВСтруктуру(Знач СохранятьДаты = Ложь)

	СтруктураОбщихПараметров = Новый Структура;
	СтруктураОбщихПараметров.Вставить("Организация", Организация);
	СтруктураОбщихПараметров.Вставить("ВыводитьРазвернутоеСальдо", ВыводитьРазвернутоеСальдо);
	СтруктураОбщихПараметров.Вставить("ПоЗабалансовымСчетам", ПоЗабалансовымСчетам);
	СтруктураОбщихПараметров.Вставить("ПоВалютам", ПоВалютам);
	СтруктураОбщихПараметров.Вставить("ПоСубсчетамИСубконто", ПоСубсчетамИСубконто);
	
	СтруктураОбщихПараметров.Вставить("ПравилаВыводаИтогов", ПравилаВыводаИтогов.Скопировать());
	СтруктураОбщихПараметров.Вставить("ПравилаРазвернутогоСальдо", ПравилаРазвернутогоСальдо.Скопировать());
	
	Если СохранятьДаты Тогда
		
		СтруктураОбщихПараметров.Вставить("ДатаНач", ДатаНач);
		СтруктураОбщихПараметров.Вставить("ДатаКон", Макс(ДатаНач, ДатаКон));
		
	КонецЕсли;
	
	Возврат СтруктураОбщихПараметров;
    
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	РаботаСДиалогами.ОбработчикНастройкаПериодаНажатие(ДатаНач, ДатаКон);
	
КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ НАЖАТИЯ КНОПОК КОМАНДНОЙ ПАНЕЛИ

Процедура КоманднаяПанельФормыНастройка(Кнопка)

	ФормаНастройка = ПолучитьФорму("ФормаНастройка", ЭтаФорма);
	
	Если ФормаНастройка.ОткрытьМодально() =  Истина Тогда

		ОбновитьОтчет();

	КонецЕсли;

КонецПроцедуры // КоманднаяПанельФормыНастройка()

Процедура КоманднаяПанельФормыСформировать(Кнопка)

	ОбновитьОтчет();

КонецПроцедуры // КоманднаяПанельФормыСформировать()

Процедура КоманднаяПанельЗаголовок(Кнопка)

	ПоказыватьЗаголовок = Не ПоказыватьЗаголовок;
	ВыводЗаголовка();

КонецПроцедуры // КоманднаяПанельЗаголовок()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
        
Процедура ПриЗакрытии()

	СтруктураОбщихПараметров = ПоместитьПараметрыОтчетаВСтруктуру(Истина);
	СохранитьЗначение("ОбщиеПараметрыОтчетов"+ИмяРегистраБухгалтерии, СтруктураОбщихПараметров);

КонецПроцедуры // ПриЗакрытии()

Процедура ОбновлениеОтображения()

	СформироватьЗаголовокФормы();

КонецПроцедуры // ОбновлениеОтображения()

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	ТиповыеОтчеты.НазначитьФормеУникальныйКлючИдентификации(ЭтаФорма);
	
	Если РегламентированнаяОтчетность.ИДКонфигурации() <> "БП" Тогда
		// Проверка ведения однофирменности
		УчетПоВсемОрганизациям = Истина;
	Иначе
		УчетПоВсемОрганизациям = глЗначениеПеременной("УчетПоВсемОрганизациям");		
	КонецЕсли;

	СтруктураОбщихПараметров = ВосстановитьЗначение("ОбщиеПараметрыОтчетов"+ИмяРегистраБухгалтерии);
	УстановитьПараметрыОтчетаИзСтруктуры(СтруктураОбщихПараметров, Истина);
    	
	ПоказыватьЗаголовок = Истина;
	
	ВысотаЗаголовка = 0;
	
	БухгалтерскиеОтчеты.ПоддержкаОднофирменностиДляБухОтчетов(ЭтаФорма, Организация, УчетПоВсемОрганизациям);

КонецПроцедуры // ПередОткрытием()

Процедура ПриОткрытии()
	
	ОбновитьОтчет();
	СформироватьЗаголовокФормы();
    	
КонецПроцедуры // ПриОткрытии()

Процедура ПередСохранениемЗначений(Отказ)

	СохраняемыеРеквизиты = ПоместитьПараметрыОтчетаВСтруктуру();
    
КонецПроцедуры // ПередСохранениемЗначений()

Процедура ПослеВосстановленияЗначений()
	
	УстановитьПараметрыОтчетаИзСтруктуры(СохраняемыеРеквизиты);
	
КонецПроцедуры // ПослеВосстановленияЗначений()

Процедура ДокументРезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	БухгалтерскиеОтчеты.ДокументРезультатОбработкаРасшифровкиОборотноСальдовойВедомости(Элемент, Расшифровка, 
		СтандартнаяОбработка, ПоказыватьЗаголовок);
	
КонецПроцедуры