Перем ЦветДопроведенные, ЦветНедопроведенные, ЦветГраницыЗапрета, ЦветТекущаяДата;
Перем ДлинаСуток;
Перем ТекстЗапросаКоличествоНедопроведенныхДокументов;
//ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

//Обработчик нажатия на кнопку Сформировать
Процедура КнопкаСформироватьНажатие(Кнопка)
	СформироватьДиаграмму();
КонецПроцедуры

//Обработчик нажатия на кнопку Диагностика
Процедура КоманднаяПанельОсновнаяСтатистика(Кнопка)
	СтатистикаОтложенногоПроведения();
КонецПроцедуры

//Обработчик события ОбработкаРасшифровки поля диаграммы
Процедура ДиаграммаГантаОбработкаРасшифровки(Элемент, Расшифровки, СтандартнаяОбработка, Дата)
	Если (Расшифровки = "ОткрытьДатыЗапрета") ИЛИ
		(ТипЗнч(Расшифровки) = Тип("Массив") И Расшифровки.Найти("ОткрытьДатыЗапрета") <> Неопределено) Тогда //при щелчке на отрезке переменная Расшифровки содержит массив
		СтандартнаяОбработка = Ложь;
		Форма = ПолучитьОбщуюФорму("УстановкаДатыЗапретаИзмененияДанных");
		Попытка
			Форма.Открыть();
		Исключение
		КонецПопытки;
		Возврат;
	КонецЕсли;
	Если ТипЗнч(Расшифровки) = Тип("Массив") Тогда
		СтандартнаяОбработка = Ложь;
		Если Расшифровки.Найти("ОткрытьНастройкуПрограммы") <> Неопределено Тогда
			Форма = РегистрыСведений.НастройкаОтложенногоПроведения.ПолучитьФормуСписка();
			Попытка
				Форма.Открыть();
			Исключение
			КонецПопытки;
			Возврат;
		КонецЕсли;
		Для каждого ЭлементМассива из Расшифровки цикл   
			Если ТипЗнч(ЭлементМассива) = Тип("Структура") И ЭлементМассива.Действие = "ОткрытьДопроведение" Тогда
				ОбработкаДопроведения = Обработки.ДопроведениеДокументов.Создать();
				Попытка
					ОбработкаДопроведения.ПолучитьФорму().Открыть();
				Исключение
				КонецПопытки;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

//Обработчик события ПриОткрытии формы
Процедура ПриОткрытии()
	//Определим цвета, используемые на диаграмме
	ЦветДопроведенные 					= ЭлементыФормы.НадписьДопроведено.ЦветФона; 
	ЦветНедопроведенные 				= ЭлементыФормы.НадписьНеДопроведено.ЦветФона; 
	ЦветГраницыЗапрета 					= ЭлементыФормы.НадписьГраницаЗапрета.ЦветФона; 
	ЦветТекущаяДата 					= ЭлементыФормы.НадписьТекущаяДата.ЦветФона; 
КонецПроцедуры

//СЛУЖЕБНЫЕ

//Процедура формирует диаграмму
Процедура СформироватьДиаграмму() Экспорт
	Диаграмма = ЭлементыФормы.ДиаграммаГанта;
	Диаграмма.Обновление = Ложь;
	
	Диаграмма.Очистить();
	МинДата 	= ТекущаяДата();
	МаксДата 	= КонецДня(ТекущаяДата());
	Диаграмма.ИнтервалыФона.Очистить();
    Серия = Диаграмма.Серии.Добавить();
	
	//Получим общую дату запрета изменения данных (необходимо для построения отрезка с датами запрета)
	ОбщаяДатаЗапрета = Неопределено;
	ГраницыИзмененияДанных = ПараметрыСеанса.ГраницыЗапретаИзмененияДанных.Получить();
	Если ГраницыИзмененияДанных <> Неопределено Тогда
		ОбщаяДатаЗапрета = ГраницыИзмененияДанных["ОбщаяДатаЗапретаРедактирования"]; 
	Иначе
		//Для пользователя с полными правами даты запрета в параметре сеанса не хранятся - получим общую дату запрета отдельным запросом
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1 
		|	ГраницаЗапретаИзменений
		|ИЗ 
		|	РегистрСведений.ГраницыЗапретаИзмененияДанных
		|ГДЕ Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|    И Пользователь = НЕОПРЕДЕЛЕНО
		|УПОРЯДОЧИТЬ ПО ГраницаЗапретаИзменений";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ОбщаяДатаЗапрета = Выборка.ГраницаЗапретаИзменений;
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПустаяДата", Дата("00010101000000"));
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НастройкаОтложенногоПроведения.Организация 														КАК Организация,
	|   НастройкаОтложенногоПроведения.ДатаНачалаДействия 												КАК ДатаНачалаОтложенногоПроведения,
	|	ЕстьNULL(ГраницыЗапретаИзмененияДанных.МинимальнаяГраницаЗапретаИзменений, &ПустаяДата) 		КАК МинимальнаяГраницаЗапретаИзменений,
	|	ЕстьNULL(ГраницыЗапретаИзмененияДанных.МаксимальнаяГраницаЗапретаИзменений, &ПустаяДата) 		КАК МаксимальнаяГраницаЗапретаИзменений
	|ИЗ 
	|	РегистрСведений.НастройкаОтложенногоПроведения 													КАК НастройкаОтложенногоПроведения
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	//Подзапрос выбирает минимальную и максимальную из дат запрета, установленных для организаций
	|        (ВЫБРАТЬ Организация 								КАК Организация,
	|			Минимум(ГраницаЗапретаИзменений) 				КАК МинимальнаяГраницаЗапретаИзменений,
	|			Максимум(ГраницаЗапретаИзменений) 				КАК МаксимальнаяГраницаЗапретаИзменений
	|        ИЗ РегистрСведений.ГраницыЗапретаИзмененияДанных 
	|        СГРУППИРОВАТЬ ПО Организация
	|	     ) 																							КАК ГраницыЗапретаИзмененияДанных
	|	ПО ГраницыЗапретаИзмененияДанных.Организация = НастройкаОтложенногоПроведения.Организация
	|УПОРЯДОЧИТЬ ПО НастройкаОтложенногоПроведения.Организация";

	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		Предупреждение("Отложенное проведение не используется!",,"Диаграмма отложенного проведения");
		Возврат;
	КонецЕсли;
	
	Пока Выборка.Следующий() цикл
		//Точка - организация
		Точка = Диаграмма.УстановитьТочку(Выборка.Организация);
		Точка.Расшифровка = Выборка.Организация;
		Точка.Шрифт = Новый Шрифт(Точка.Шрифт,,,Истина); 			//Добавим жирность шрифту
		ДатаНачалаОтложенногоПроведения = Выборка.ДатаНачалаОтложенногоПроведения;
		ДатаОкончания 					= ТекущаяДата();
		ГраницаОтложенногоПроведения = ОтложенноеПроведениеДокументов.ПолучитьДатуПервогоНедопроведенногоДокумента(Выборка.Организация,ДатаНачалаОтложенногоПроведения);
		
		Значение = Диаграмма.ПолучитьЗначение(Точка, Серия);
		
		//Определим мин дату исходя из начала действия отложенного проведения по организации
		Если МинДата > ДатаНачалаОтложенногоПроведения Тогда
			МинДата = НачалоДня(ДатаНачалаОтложенногоПроведения - ДлинаСуток);
		КонецЕсли;

		//Добавим интервал - допроведенные документы
		Интервал 		= Значение.Добавить();
		Интервал.Цвет 	= ЦветДопроведенные;
		Интервал.Начало = НачалоДня(ДатаНачалаОтложенногоПроведения);
		Если НЕ ЗначениеЗаполнено(ГраницаОтложенногоПроведения) Тогда
			Интервал.Конец 	= КонецДня(ДатаОкончания);
		Иначе	
			Интервал.Конец 	= Мин(НачалоДня(ГраницаОтложенногоПроведения)-1,КонецДня(ДатаОкончания));
		КонецЕсли;	
		Интервал.Расшифровка = "ОткрытьНастройкуПрограммы";
		УстановитьТекстИнтервала(Интервал, "Допроведение выполнено: ");
		СкорректироватьГраницыДиаграммы(МинДата,МаксДата,Интервал);
		
		
		//Добавим интервал - недопроведенные документы 
		//Начало интервала - дата первого недопроведенного документа 
		Если  ЗначениеЗаполнено(ГраницаОтложенногоПроведения) Тогда
		    //Определим количество недопроведенных документов
			ЗапросКоличество = Новый Запрос();
			ЗапросКоличество.Текст = ТекстЗапросаКоличествоНедопроведенныхДокументов;
			ЗапросКоличество.УстановитьПараметр("Организация",	Выборка.Организация);
			ЗапросКоличество.УстановитьПараметр("ДатаНачала",	НачалоДня(ГраницаОтложенногоПроведения));
			ЗапросКоличество.УстановитьПараметр("ДатаОкончания",КонецДня(ДатаОкончания));
			//В выборке будет только один элемент
			ВыборкаКоличество = ЗапросКоличество.Выполнить().Выбрать();
			ВыборкаКоличество.Следующий();

			Интервал = Значение.Добавить();
			Интервал.Цвет 	= ЦветНедопроведенные;
			Интервал.Начало = НачалоДня(ГраницаОтложенногоПроведения);
			Интервал.Конец 	= КонецДня(ДатаОкончания);
			УстановитьТекстИнтервала(Интервал, "Допроведение не выполнено: ");
			СкорректироватьГраницыДиаграммы(МинДата,МаксДата,Интервал);
			Интервал.Текст = Интервал.Текст + "; Документов - " + ВыборкаКоличество.КоличествоДокументов + " шт.";
			Интервал.Расшифровка = новый Структура("Действие, Организация, ГраницаДопроведения", "ОткрытьДопроведение", Выборка.Организация, ГраницаОтложенногоПроведения);
		КонецЕсли;
		
		//Добавим отрезок - даты запрета изменения данных: от общей границы запрета изменений/первой даты запрета изменения до последней из дат запрета редактирования
		МинимальнаяДатаЗапретаПоОрганизации 	= Выборка.МинимальнаяГраницаЗапретаИзменений;
		МаксимальнаяДатаЗапретаПоОрганизации 	= Выборка.МаксимальнаяГраницаЗапретаИзменений;
		Если ЗначениеЗаполнено(МаксимальнаяДатаЗапретаПоОрганизации) ИЛИ ЗначениеЗаполнено(ОбщаяДатаЗапрета) Тогда
			Точка = Диаграмма.УстановитьТочку("Запрет изменения данных ("+Выборка.Организация+")", Выборка.Организация);
			Точка.Текст = "Запрет изменения данных";
			ЗначениеОтрезокДатыЗапрета = Диаграмма.ПолучитьЗначение(Точка, Серия);
			Точка.Расшифровка = "ОткрытьДатыЗапрета";
			
			Интервал 		= ЗначениеОтрезокДатыЗапрета.Добавить();
			Интервал.Цвет 	= ЦветГраницыЗапрета;
			Если ЗначениеЗаполнено(МаксимальнаяДатаЗапретаПоОрганизации) Тогда
				НачалоОтрезка 	= НачалоДня(?(ОбщаяДатаЗапрета = Неопределено,МинимальнаяДатаЗапретаПоОрганизации,ОбщаяДатаЗапрета));		
			    КонецОтрезка 	= КонецДня(МаксимальнаяДатаЗапретаПоОрганизации);
				ТекстИнтервала 	= "Редактирование разрешено только некоторым пользователям ";
			Иначе
				//Дат запрета по организации нет - покажем только общую дату запрета
				НачалоОтрезка 	= НачалоДня(ОбщаяДатаЗапрета);		
			    КонецОтрезка 	= КонецДня(ОбщаяДатаЗапрета);
				ТекстИнтервала 	= "Общая дата запрета изменения данных";
			КонецЕсли;
			
			Интервал.Начало 	= НачалоОтрезка;
			Интервал.Конец 		= КонецОтрезка;
			УстановитьТекстИнтервала(Интервал, ТекстИнтервала);
			Интервал.Расшифровка = "ОткрытьДатыЗапрета";
			СкорректироватьГраницыДиаграммы(МинДата,МаксДата,Интервал);
		КонецЕсли;
	КонецЦикла;
	
	//Покажем текущую дату
	ИнтервалФона = Диаграмма.ИнтервалыФона.Добавить(НачалоДня(ТекущаяДата()), КонецДня(ТекущаяДата()));
	ИнтервалФона.Цвет = ЦветТекущаяДата;
	Если КонецДня(ТекущаяДата()) > МаксДата Тогда
		МаксДата = КонецДня(ТекущаяДата())+ДлинаСуток; 
	КонецЕсли;
	
	//Установим интервал диаграммы
	Диаграмма.УстановитьПолныйИнтервал(МинДата,МаксДата);
	
	Диаграмма.ПоказатьУровеньТочек(0);
	
	Диаграмма.ОтображатьЗаголовок = Ложь;
	Диаграмма.ОтображатьЛегенду = Ложь;
	
	// Включаем обновление диаграммы.
	Диаграмма.Обновление = Истина;

КонецПроцедуры

//Процедура заполняет текст интервала - подсказку которая появится при наведении мышью на интервал
Процедура УстановитьТекстИнтервала(Интервал, Префикс)
	Интервал.Текст = Префикс + 
					Формат(Интервал.Начало,"ДФ=dd.MM")
					+?(НачалоДня(Интервал.Начало) <> НачалоДня(Интервал.Конец)," - "+Формат(Интервал.Конец,"ДФ=dd.MM"),"");
КонецПроцедуры

//Процедура изменяет минимальную и максимальную даты диаграммы исходя из текущего интервала
Процедура СкорректироватьГраницыДиаграммы(МинДата,МаксДата,Интервал)
	Если ЗначениеЗаполнено(Интервал.Начало) И МинДата > Интервал.Начало Тогда
		МинДата = НачалоДня(Интервал.Начало-ДлинаСуток);
	КонецЕсли;
	Если ЗначениеЗаполнено(Интервал.Конец) И МаксДата < Интервал.Конец Тогда
		МаксДата = КонецДня(Интервал.Конец+ДлинаСуток);
	КонецЕсли;
КонецПроцедуры

//Процедура выводит отчет - статистику отложенного проведения
Процедура СтатистикаОтложенногоПроведения()
	ТабРезультат = Новый ТаблицаЗначений;
	ТабРезультат.Колонки.Добавить("Организация", 	Новый ОписаниеТипов("СправочникСсылка.Организации"));

	ТабРезультат.Колонки.Добавить("ДатаНач", 											Новый ОписаниеТипов("Дата"));
    ТабРезультат.Колонки.Добавить("Граница", 											Новый ОписаниеТипов("Дата"));
    ТабРезультат.Колонки.Добавить("ГраницаДоДатыНачала",								Новый ОписаниеТипов("Дата"));
    ТабРезультат.Колонки.Добавить("КоличествоДокументов", 								Новый ОписаниеТипов("Число"));
	ТабРезультат.Колонки.Добавить("КоличествоДокументовНедопроведено", 					Новый ОписаниеТипов("Число"));
    ТабРезультат.Колонки.Добавить("КоличествоДокументовНедопроведеноДоНачалаДействия", 	Новый ОписаниеТипов("Число"));
	
	//Текст запроса для определения общего количества документов
	//В отложенном проведении участвуют документы, которые удовлетворяют перечисленным ниже условиям
	//- Для данного вида документа предусмотрено отложенное проведение (является регистратором для регистра ДокументыТребующиеДопроведения)
	//- Проведен, 
	//- Организация - для которой действует отложенное проведение
	//- Дата документа больше или равна дате начала отложенного проведения 
	 ШаблонПодзапроса = "
		 |ВЫБРАТЬ  
		|	Ссылка 					КАК Регистратор, 
		|	Ссылка.Дата 			КАК Дата,
		|	Ссылка.МоментВремени 	КАК МоментВремени
		|ИЗ Документ.%ИмяДокумента%
		|ГДЕ 
		|	Организация = &Организация 
		|	И Дата >= &ДатаНачала 
		|	И Проведен И ОтражатьВБухгалтерскомУчете
		|ОБЪЕДИНИТЬ ВСЕ";

	ТекстЗапросаКоличествоДокументовВсего = "";
	//Текст запроса складывается объединением из идентичных запросов по документам, поддерживающим отложенное проведение
	РегистрМД = РегистрыСведений.ДокументыТребующиеДопроведения.СоздатьНаборЗаписей().Метаданные();
	Для каждого ДокументМД из Метаданные.Документы цикл
		Если НЕ ДокументМД.Движения.Содержит(РегистрМД) Тогда
			Продолжить;
		КонецЕсли;
		ТекстЗапросаКоличествоДокументовВсего = ТекстЗапросаКоличествоДокументовВсего + 
					стрЗаменить(ШаблонПодзапроса,"%ИмяДокумента%",ДокументМД.Имя);
	КонецЦикла;
	//Уберем из текста запроса последний ОБЪЕДИНИТЬ ВСЕ
	ТекстЗапросаКоличествоДокументовВсего = Лев(ТекстЗапросаКоличествоДокументовВсего, стрДлина(ТекстЗапросаКоличествоДокументовВсего) - 14);
	
	ТекстЗапросаКоличествоДокументовВсего = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО(Различные Подзапрос.Регистратор) 			КАК КОличествоДокументов 
	|ИЗ 
	|	("+ТекстЗапросаКоличествоДокументовВсего+") 			КАК Подзапрос
	|";


	//Получим список организаций, для которых действует отложенное проведение
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организация 									КАК Организация,
	|	ДатаНачалаДействия  							КАК ДатаНач
    |ИЗ 
	|	РегистрСведений.НастройкаОтложенногоПроведения 	КАК НастройкаОтложенногоПроведения
    |УПОРЯДОЧИТЬ ПО Организация";
    Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		Предупреждение("Отложенное проведение не используется!",,"Статистика");
		Возврат;
	КонецЕсли;

	Пока Выборка.Следующий() цикл
		Нстр = ТабРезультат.Добавить();
		ЗаполнитьЗначенияСвойств(Нстр,Выборка);
		
		ГраницаОтложенногоПроведения = ОтложенноеПроведениеДокументов.ПолучитьДатуПервогоНедопроведенногоДокумента(Выборка.Организация, Нстр.ДатаНач);
		Нстр.Граница = ГраницаОтложенногоПроведения;
		//Определим количество недопроведенных документов в интервале допроведения
		Если ЗначениеЗаполнено(ГраницаОтложенногоПроведения) Тогда
			ЗапросКоличество = Новый Запрос();
			ЗапросКоличество.Текст = ТекстЗапросаКоличествоНедопроведенныхДокументов;
			ЗапросКоличество.УстановитьПараметр("Организация",	Выборка.Организация);
			ЗапросКоличество.УстановитьПараметр("ДатаНачала",	НачалоДня(Нстр.ДатаНач));
			ЗапросКоличество.УстановитьПараметр("ДатаОкончания",ТекущаяДата());

			//В выборке будет только один элемент
			ВыборкаКоличество = ЗапросКоличество.Выполнить().Выбрать();
			ВыборкаКоличество.Следующий();

			Нстр.КоличествоДокументовНедопроведено = ВыборкаКоличество.КоличествоДокументов;
		КонецЕсли;
		//Определим количество недопроведенных документов до даты начала отложенного проведения
		ЗапросКоличество = Новый Запрос();
		ЗапросКоличество.Текст = ТекстЗапросаКоличествоНедопроведенныхДокументов;
		ЗапросКоличество.УстановитьПараметр("Организация",	Выборка.Организация);
		ЗапросКоличество.УстановитьПараметр("ДатаНачала",	Дата("00010101000000"));
		ЗапросКоличество.УстановитьПараметр("ДатаОкончания",	НачалоДня(Нстр.ДатаНач));

		//В выборке будет только один элемент
		ВыборкаКоличество = ЗапросКоличество.Выполнить().Выбрать();
		ВыборкаКоличество.Следующий();
		Нстр.КоличествоДокументовНедопроведеноДоНачалаДействия = ВыборкаКоличество.КоличествоДокументов;
		//Определим дату первого недопроведенного документа до даты начала действия отложенного проведения
		Если ВыборкаКоличество.КоличествоДокументов > 0 Тогда
			Нстр.ГраницаДоДатыНачала = ОтложенноеПроведениеДокументов.ПолучитьДатуПервогоНедопроведенногоДокумента(Выборка.Организация, Дата("00010101000000"), НачалоДня(Нстр.ДатаНач));
		КонецЕсли;
		
		
		//Определим общее количество документов
        ЗапросКоличество = Новый Запрос();
		ЗапросКоличество.Текст = ТекстЗапросаКоличествоДокументовВсего;
		ЗапросКоличество.УстановитьПараметр("Организация",	Выборка.Организация);
		ЗапросКоличество.УстановитьПараметр("ДатаНачала",	НачалоДня(Нстр.ДатаНач));
		//В выборке будет только один элемент
		ВыборкаКоличество = ЗапросКоличество.Выполнить().Выбрать();
		ВыборкаКоличество.Следующий();
		Нстр.КоличествоДокументов = ВыборкаКоличество.КоличествоДокументов;
	КонецЦикла;
	
		
	Таблица = Новый ТабличныйДокумент;
	Макет = ОтчетОбъект.ПолучитьМакет("МакетДиагностика");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	Таблица.Вывести(ОбластьШапка);
	Для каждого СтрокаТаблицы из ТабРезультат цикл
		ОбластьОрганизация = Макет.ПолучитьОбласть("Организация");
		ОбластьОрганизация.Параметры.Организация 	= СтрокаТаблицы.Организация;

		Таблица.Вывести(ОбластьОрганизация);
		Таблица.НачатьГруппуСтрок("Параметр",Истина);
		
		Область = Макет.ПолучитьОбласть("Параметр");
		Область.Параметры.ИмяПараметра = "Дата начала отложенного проведения";
		Область.Параметры.ЗначениеПараметра = Формат(СтрокаТаблицы.ДатаНач,"ДФ=dd.MM.yy");
		Таблица.Вывести(Область);

		Область.Параметры.ИмяПараметра = "Общее количество документов";
		Область.Параметры.ЗначениеПараметра = СтрокаТаблицы.КоличествоДокументов;
        Таблица.Вывести(Область);

		Область = Макет.ПолучитьОбласть("Параметр");
		Область.Параметры.ИмяПараметра = "Количество недопроведенных документов";
		Область.Параметры.ЗначениеПараметра = СтрокаТаблицы.КоличествоДокументовНедопроведено;
		Если СтрокаТаблицы.КоличествоДокументовНедопроведено > 0 Тогда
			Область.Параметры.РезультатДиагностики = "Требуется допроведение документов с " + Формат(СтрокаТаблицы.Граница, "ДФ=dd.MM.yy");
		Иначе
			Область.Параметры.РезультатДиагностики = "Допроведение не требуется";
			Область.Область("Примечание").ЦветТекста = Область.Область("Основная").ЦветТекста;
		КонецЕсли;
        Таблица.Вывести(Область);

		Область = Макет.ПолучитьОбласть("Параметр");
		Область.Параметры.ИмяПараметра = "Количество недопроведенных документов с датой раньше даты начала действия отложенного проведения";
		Область.Параметры.ЗначениеПараметра = СтрокаТаблицы.КоличествоДокументовНедопроведеноДоНачалаДействия;
		Если СтрокаТаблицы.КоличествоДокументовНедопроведеноДоНачалаДействия Тогда
			Область.Параметры.РезультатДиагностики = "Требуется перепроведение документов с " + 
												Формат(СтрокаТаблицы.ГраницаДоДатыНачала, "ДФ=dd.MM.yy")+ 
												" по " + Формат(СтрокаТаблицы.ДатаНач - 1, "ДФ=dd.MM.yy");
		КонецЕсли;
		
		Таблица.Вывести(Область);
		
		Таблица.ЗакончитьГруппуСтрок();
   КонецЦикла;
   Таблица.ТолькоПросмотр = Истина;
   Таблица.ОтображатьЗаголовки = Ложь;
   Таблица.ОтображатьСетку = Ложь;
   Таблица.Область(,1,,1).Видимость = Ложь;
   Таблица.Показать("Статистика");

КонецПроцедуры

ТекстЗапросаКоличествоНедопроведенныхДокументов = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Регистратор) КАК КоличествоДокументов
		|ИЗ
		|	РегистрСведений.ДокументыТребующиеДопроведения 
		|ГДЕ Организация = &Организация И Активность
		|	И Период <= &ДатаОкончания И Период >= &ДатаНачала
		|";
ДлинаСуток = 60*60*24;