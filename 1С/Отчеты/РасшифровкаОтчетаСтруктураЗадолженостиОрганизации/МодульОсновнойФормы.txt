Процедура ОбновитьОтчет() Экспорт
	
	НачалоПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("НачалоПериода")).Значение;
	КонецПериода  = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КонецПериода")).Значение;
	
	Если НачалоПериода > КонецПериода тогда
		Сообщить("Неправильно указан период.");
		Возврат;
	КонецЕсли;
	
	Если ФормированиеПечатныхФормЗК.ЗаполненРегламентированныйПроизводственныйКалендарь(НачалоПериода, КонецПериода) тогда 
		СФормироватьОтчет(ЭлементыФормы.Результат, ДанныеРасшифровки);
	Иначе
		Сообщить("Не заполнен регламентированный производственный календарь");
	КонецЕсли;
	
КонецПроцедуры //ОбновитьОтчет()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события перед открытием формы
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ИнициализацияОтчета();
	ЭтаФорма.ЭлементыФормы.Результат.Защита = УправлениеДопПравамиПользователей.ЗащитаТаблиц();
	
КонецПроцедуры //ПередОткрытием()

Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	Перем ВыполненноеДействие;

	// Запретим стандартную обработку расшифровки
	СтандартнаяОбработка = Ложь;

	// Создадим и инициализируем обработчик расшифровки
	ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки, Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	
	ДоступныеДействия = Новый Массив();
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение);
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Расшифровать);
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Упорядочить);
	
	// Осуществим выбор действия расшифровки пользователем
	Настройки = ОбработкаРасшифровки.Выполнить(Расшифровка, ВыполненноеДействие, ДоступныеДействия);
	
	Если Настройки <> Неопределено Тогда
		// Пользователь выбрал действие, для которого нужно менять настройки

		Если ВыполненноеДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.Упорядочить Тогда
			
			ФормированиеПечатныхФормЗК.ПеренестиПорядокВОтчет(Настройки);
			
			// Если требуется упорядочить - упорядочим в текущем отчете
			КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
			СформироватьОтчет(ЭлементыФормы.Результат, ДанныеРасшифровки);

		Иначе
            // При других действиях - создадим новый отчет, откроем форму, сформируем отчет в ней
			Отчет = Отчеты[Метаданные().Имя].Создать();
			Отчет.КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
			Форма = Отчет.ПолучитьФорму();
			Форма.ОбновитьОтчет();
			Форма.Открыть();

		КонецЕсли;
	КонецЕсли;
КонецПроцедуры