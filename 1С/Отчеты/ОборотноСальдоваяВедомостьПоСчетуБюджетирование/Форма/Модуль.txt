// Процедура формирует заголовок формы отчета с учетом настроек
//
// Параметры:
//  Нет.
//
Процедура СформироватьЗаголовокФормы()

	ОписаниеПериода = БухгалтерскиеОтчеты.СформироватьСтрокуОграниченийПоДатамДляФормы(ДатаНач, ДатаКон);

	Заголовок = "Оборотно-сальдовая ведомость по счету " + Счет + " " 
	+ Метаданные.РегистрыБухгалтерии[ИмяРегистраБухгалтерии].ПланСчетов.Представление()+" (" + ОписаниеПериода + ") " + ?(Сценарий.Пустая(), "по фактическим данным", Сценарий);
	
КонецПроцедуры // СформироватьЗаголовокФормы()()

// Обновляет таблицу отчета
//
// Параметры:
//	Нет.
//
Процедура ОбновитьОтчет() Экспорт

	НеЗаполнятьНастройкиПриОткрытии = Истина;
	
	СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка);

	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ДокументРезультат;
	
КонецПроцедуры // ОбновитьОтчет()

Процедура ВыводЗаголовка()

	БухгалтерскиеОтчеты.ОбработатьВыводЗаголовка(ЭтаФорма, ЭтотОбъект, ВысотаЗаголовка, ПоказыватьЗаголовок);
	
КонецПроцедуры // ВыводЗаголовка()

Процедура СчетПриИзменении(Элемент)
	ОбработкаВыбораСчета();
КонецПроцедуры

Процедура Сформировать(Кнопка)
	ОбновитьОтчет();
КонецПроцедуры

Процедура Настройка(Кнопка)
	ФормаНастройка = ПолучитьФорму("ФормаНастройка");
	Если ФормаНастройка.ОткрытьМодально() = Истина Тогда
		СформироватьОтчет(ЭлементыФормы.ДокументРезультат);
	КонецЕсли;
КонецПроцедуры

Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	РаботаСДиалогами.ОбработчикНастройкаПериодаНажатие(ДатаНач, ДатаКон);
	
КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

Процедура ПередСохранениемЗначений(Отказ)
	СохраненныеНастройки = Новый Структура(
	"Счет, Сценарий, ПоСубсчетам, ПоВалютам, ПоКоличеству, НастройкиПостроителяОтчета",
	Счет, Сценарий, ПоСубсчетам, ПоВалютам, ПоКоличеству, ПостроительОтчета.ПолучитьНастройки(Истина, Истина, Истина, Истина));
КонецПроцедуры

Процедура ПослеВосстановленияЗначений()
	
	// Если настройка восстанавливается, когда форма открывается извне, 
	// то не восстанавливаем.
	Если Не Открыта() И (НеЗаполнятьНастройкиПриОткрытии) Тогда
		Возврат;
	КонецЕсли;
	
	СохраненныеНастройки.Свойство("Счет", Счет);
	СохраненныеНастройки.Свойство("Сценарий", Сценарий);
	СохраненныеНастройки.Свойство("ПоСубсчетам", ПоСубсчетам);
	СохраненныеНастройки.Свойство("ПоВалютам",   ПоВалютам);
	СохраненныеНастройки.Свойство("ПоКоличеству",ПоКоличеству);
	
	// После установки счета и флагов можно заполнять текст построителя
	ЗаполнитьНачальныеНастройки();
	
	НастройкиПостроителяОтчета = Неопределено;
	СохраненныеНастройки.Свойство("НастройкиПостроителяОтчета", НастройкиПостроителяОтчета);
	Если НастройкиПостроителяОтчета<> Неопределено Тогда
		ПостроительОтчета.УстановитьНастройки(НастройкиПостроителяОтчета, Истина, Истина, Истина, Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельЗаголовок(Кнопка)
	ПоказыватьЗаголовок = Не ПоказыватьЗаголовок;
	ВыводЗаголовка();
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ТиповыеОтчеты.НазначитьФормеУникальныйКлючИдентификации(ЭтаФорма);
	
	Если НЕ НеЗаполнятьНастройкиПриОткрытии Тогда
		
		ПоказыватьЗаголовок = Истина;
		
		СтруктураОбщихПараметров = ВосстановитьЗначение("ОбщиеПараметрыОтчетов"+ИмяРегистраБухгалтерии);
		Если ТипЗнч(СтруктураОбщихПараметров) = Тип("Структура") Тогда
			
			СтруктураОбщихПараметров.Свойство("Сценарий", Сценарий);
			СтруктураОбщихПараметров.Свойство("Счет", Счет);
			СтруктураОбщихПараметров.Свойство("ПоказыватьЗаголовок", ПоказыватьЗаголовок);
			СтруктураОбщихПараметров.Свойство("ДатаНач", ДатаНач);
			СтруктураОбщихПараметров.Свойство("ДатаКон", ДатаКон);
			ОбработкаВыбораСчета();
			
		КонецЕсли;
		
		ВысотаЗаголовка = 0;
		
	КонецЕсли; 
    
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если НЕ НеЗаполнятьНастройкиПриОткрытии Тогда
		ВыводЗаголовка();
		СформироватьЗаголовокФормы();
	КонецЕсли;
	
	БухгалтерскиеОтчеты.УправлениеПометкамиКнопокЗаголовковКоманднойПанели(ЭтаФорма, ПоказыватьЗаголовок);
    		
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СтруктураОбщихПараметров = Новый Структура;
	СтруктураОбщихПараметров.Вставить("Сценарий", Сценарий);
	СтруктураОбщихПараметров.Вставить("ДатаНач", ДатаНач);
	СтруктураОбщихПараметров.Вставить("ДатаКон", ДатаКон);
	СтруктураОбщихПараметров.Вставить("Счет",    Счет);
	
	СохранитьЗначение("ОбщиеПараметрыОтчетов"+ИмяРегистраБухгалтерии, СтруктураОбщихПараметров);
	
КонецПроцедуры

Процедура ОбновлениеОтображения()

	СформироватьЗаголовокФормы();

КонецПроцедуры

Процедура ДокументРезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)

	БухгалтерскиеОтчеты.ДокументРезультатОбработкаРасшифровкиОборотноСальдовойВедомости(Элемент, Расшифровка, СтандартнаяОбработка, ПоказыватьЗаголовок);

КонецПроцедуры