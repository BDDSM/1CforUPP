////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

// Управление видимостью и доступностью элементов формы.
//
Процедура УстановитьВидимость()
	
	ЭлементыФормы.Ответственный.Доступность = МОЛ.Пустая();
	
КонецПроцедуры // УстановитьВидимость()

////////////////////////////////////////////////////////////////////////////////
// ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура формирует обложку и остальные страницы инвентарной книги.
//
Процедура Сформировать()
	
	СформироватьОбложкуИнвентарнойКнигиОС(ЭлементыФормы.Обложка);
	
	СформироватьСтраницыИнвентарнойКнигиОС(ЭлементыФормы.ВсеСтраницы);
	
КонецПроцедуры // Сформировать()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ФОРМЫ

// Обработчик события Нажатие кнопки ВыбПериод. Вызывает диалог выбора периода.
//
Процедура ВыбПериодНажатие(Элемент)
	
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачалоПериода, ?(КонецПериода='0001-01-01', КонецПериода, КонецДня(КонецПериода)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.Редактировать();
	НачалоПериода = НастройкаПериода.ПолучитьДатуНачала();
	КонецПериода = НастройкаПериода.ПолучитьДатуОкончания();
	
КонецПроцедуры // ВыбПериодНажатие()

// Обработчик события ПриИзменении поля ввода МОЛ.
//
Процедура МОЛПриИзменении()
	
	Если НЕ МОЛ.Пустая() Тогда
		Ответственный = МОЛ;
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры // МОЛПриИзменении()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ПередОткрытием формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
	Подразделение = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновноеПодразделение");
	
КонецПроцедуры // ПередОткрытием()

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()
	
	УстановитьВидимость();
	
КонецПроцедуры // ПриОткрытии()