// Структура содержащая данные о связи элементов управления быстрых отборов с данными
Перем СтруктураСвязиЭлементовСДанными;

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Управляет пометками кнопок ком. панели
//
// Параметры:
//	Нет.
//
Процедура УправлениеПометкамиКнопокКоманднойПанели()
	
	Если ПоказыватьЗаголовок Тогда
		ЭлементыФормы.КоманднаяПанель.Кнопки.Заголовок.Пометка = Истина;
		ЭлементыФормы.КоманднаяПанель.Кнопки.Подменю.Кнопки.Заголовок.Пометка = Истина;

	Иначе
		ЭлементыФормы.КоманднаяПанель.Кнопки.Заголовок.Пометка = Ложь;
		ЭлементыФормы.КоманднаяПанель.Кнопки.Подменю.Кнопки.Заголовок.Пометка = Ложь;

	КонецЕсли;

	Если ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх Тогда
		ЭлементыФормы.КоманднаяПанель.Кнопки.Отбор.Пометка = Ложь;
		ЭлементыФормы.КоманднаяПанель.Кнопки.Подменю.Кнопки.Отбор.Пометка = Ложь;
	Иначе
		ЭлементыФормы.КоманднаяПанель.Кнопки.Отбор.Пометка = Истина;
		ЭлементыФормы.КоманднаяПанель.Кнопки.Подменю.Кнопки.Отбор.Пометка = Истина;
	КонецЕсли;
	
КонецПроцедуры // УправлениеПометкамиКнопокКоманднойПанели()

// Процедура заполняет данными ПолеТабличногоДокумента отчета
//
Процедура Сформировать(Кнопка)

	СформироватьОтчет(ЭлементыФормы.ПолеТабличногоДокумента);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ПередОткрытием формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ НеЗаполнятьНастройкиПриОткрытии Тогда
		ДатаНачала = НачалоДня(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнаяДатаНачалаОтчетов"));
		ДатаКонца = КонецДня(ТекущаяДата());
		Если ДатаНачала > ДатаКонца Тогда
			ДатаНачала = ДатаКонца;
		КонецЕсли; 
	КонецЕсли; 
	
	ЗаполнитьНачальныеНастройки();
	
	НП.УстановитьПериод(ДатаНачала, ДатаОкончания);
	
КонецПроцедуры

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()

	УправлениеОтчетами.УстановитьСвязьПолейБыстрогоОтбораНаФорме(ЭлементыФормы, ПостроительОтчета.Отбор, СтруктураСвязиЭлементовСДанными, "ОбработкаОбъект.ПостроительОтчета.Отбор");
	
	Если НЕ НеЗаполнятьНастройкиПриОткрытии Тогда
		ДатаНачала = НачалоДня(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнаяДатаНачалаОтчетов"));
		ДатаОкончания = КонецДня(ТекущаяДата());
	КонецЕсли; 
	
	ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх;
	
	УправлениеПометкамиКнопокКоманднойПанели();

	Если ПоказателиОтчета.Найти(Истина, "ИспользованиеПоказателя") = Неопределено Тогда
		Для каждого СтрокаПоказателя Из ПоказателиОтчета Цикл
			СтрокаПоказателя.ИспользованиеПоказателя= Истина;
		КонецЦикла; 
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события ПередСохранениемЗначений формы.
//
Процедура ПередСохранениемЗначений(Отказ)

	СохраненныеНастройки = Новый Структура;

	СохраненныеНастройки.Вставить("ИспользоватьСвойстваИКатегории", ИспользоватьСвойстваИКатегории);
	СохраненныеНастройки.Вставить("ПоказыватьЗаголовок"           , ПоказыватьЗаголовок);
	СохраненныеНастройки.Вставить("НастройкиПостроителя"          , ПостроительОтчета.ПолучитьНастройки());
	СохраненныеНастройки.Вставить("РаскрашиватьГруппировки"       , РаскрашиватьГруппировки);
	СохраненныеНастройки.Вставить("ПоказателиОтчета"              , ПоказателиОтчета.Выгрузить());
	СохраненныеНастройки.Вставить("НастройкиДиаграммы"            , НастройкиДиаграммы);

КонецПроцедуры

// Обработчик события ПослеВосстановленияЗначений формы.
//
Процедура ПослеВосстановленияЗначений()

	Перем ТаблицаОтчета;

	Если НЕ НеЗаполнятьНастройкиПриОткрытии Тогда
	
		Если ТипЗнч(СохраненныеНастройки) = Тип("Структура") Тогда
			
			СохраненныеНастройки.Свойство("ИспользоватьСвойстваИКатегории", ИспользоватьСвойстваИКатегории);
			
			ЗаполнитьНачальныеНастройки();
			
			ПостроительОтчета.УстановитьНастройки(СохраненныеНастройки.НастройкиПостроителя);
			
			СохраненныеНастройки.Свойство("НастройкиДиаграммы"     , НастройкиДиаграммы);
			СохраненныеНастройки.Свойство("ПоказыватьЗаголовок"    , ПоказыватьЗаголовок);
			СохраненныеНастройки.Свойство("РаскрашиватьГруппировки", РаскрашиватьГруппировки);
			СохраненныеНастройки.Свойство("ПоказателиОтчета"       , ТаблицаОтчета);
			ПоказателиОтчета.Загрузить(ТаблицаОтчета);
			
		КонецЕсли; 
	
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события ОбработкаОповещения формы.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененТекстЗапроса" Тогда

		// Перезаполним привязку отбора к данным
		Для Каждого Элемент Из СтруктураСвязиЭлементовСДанными Цикл
		
			ЭлементыФормы[Элемент.Ключ].Данные = Элемент.Значение;
		
		КонецЦикла;
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ КОМАНДНОЙ ПАНЕЛИ ФОРМЫ

// Обработчик события элемента КоманднаяПанельФормы.Настройка.
//
Процедура КоманднаяПанельФормыНастройка(Кнопка)

	
	ОтветОтФормы = ОбработкаОбъект.ПолучитьФорму("ФормаНастройки", ЭтаФорма).ОткрытьМодально();
	
	Если ОтветОтФормы = Истина Тогда
		СформироватьОтчет(ЭлементыФормы.ПолеТабличногоДокумента);
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события элемента КоманднаяПанель.Заголовок.
//
Процедура КоманднаяПанельЗаголовок(Кнопка)

	ПоказыватьЗаголовок = НЕ ПоказыватьЗаголовок;
	ИзменитьВидимостьЗаголовка(ЭлементыФормы.ПолеТабличногоДокумента);
	УправлениеПометкамиКнопокКоманднойПанели();
	
КонецПроцедуры

// Обработчик события элемента КоманднаяПанельФормы.Отбор.
//
Процедура КоманднаяПанельОтбор(Кнопка)

	Если НЕ ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх Тогда
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх;
	Иначе
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Нет;
	КонецЕсли;

	УправлениеПометкамиКнопокКоманднойПанели();
	
КонецПроцедуры

// Обработчик события элемента КоманднаяПанель.Диаграмма.
//
Процедура КоманднаяПанельДиаграмма(Кнопка)
	
	Если ТипЗнч(мДеревоДиаграммы) <> Тип("ДеревоЗначений") Тогда
		Предупреждение("Сначала сформируйте отчет");
		Возврат;
	КонецЕсли;
	
	Если мДеревоДиаграммы.Строки.Количество() = 0 Тогда
		Предупреждение("Нет данных для построения диаграммы.");
		Возврат;
	КонецЕсли;
	
	ФормаНастройкиДиаграммы = ЭтотОбъект.ПолучитьФорму("ФормаНастройкиДиаграммы", ЭтаФорма);
	
	ФормаНастройкиДиаграммы.ОткрытьМодально();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик события ПриИзменении элемента формы ВыбранаГруппировкаПоНоменклатуре.
//
Процедура ВыбранаГруппировкаПоНоменклатуреПриИзменении(Элемент)
	
	// Запоминаем текущую настройку
	Настройки = ПостроительОтчета.ПолучитьНастройки(Истина, Истина, Истина, Истина);

	// Перезаполнение объекта (с новым текстом запроса)
	ЗаполнитьНачальныеНастройки();

	// Восстанавливаем запомненную настройку
	ПостроительОтчета.УстановитьНастройки(Настройки, Истина, Истина, Истина, Истина);

	Если ВыбранаГруппировкаПоНоменклатуре Тогда
		ПостроительОтчета.ИзмеренияСтроки.Добавить("Номенклатура");
		
		// уберем пометку с показателя КоличествоСобытий
		СтрокаКоличестваСобытий = ПоказателиОтчета.Найти("КоличествоСобытий", "ИмяПоказателя");
		Если СтрокаКоличестваСобытий <> Неопределено Тогда
			СтрокаКоличестваСобытий.ИспользованиеПоказателя = Ложь;
		КонецЕсли; 
		
	Иначе
		
		// поставим пометку на указателе КоличествоСобытий
		СтрокаКоличестваСобытий = ПоказателиОтчета.Найти("КоличествоСобытий", "ИмяПоказателя");
		Если СтрокаКоличестваСобытий <> Неопределено Тогда
			СтрокаКоличестваСобытий.ИспользованиеПоказателя = Истина;
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры


// Обработчик события ОбработкаРасшифровки элемента формы ПолеТабличногоДокумента.
//
Процедура ПолеТабличногоДокументаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)

	Если ТипЗнч(Расшифровка) = Тип("Структура") Тогда
	
		СтандартнаяОбработка = Ложь;
		
		Отчет = Отчеты.ОтчетСписокКроссТаблица.Создать();
		
		СтруктураНастроек = Новый Структура;
		СтруктураНастроек.Вставить("ИмяРегистра", "Продажи");
		СтруктураНастроек.Вставить("ДатаНач", ДатаНачала);
		СтруктураНастроек.Вставить("ДатаКон", ДатаОкончания);
		
		СоответствиеОтбора = Новый Соответствие;
		СоответствиеОтбора.Вставить("ДоговорКонтрагента.Владелец", Расшифровка.Контрагент);
		СтруктураНастроек.Вставить("Отбор",СоответствиеОтбора);
		
		СоответствиеГруппировок = Новый Соответствие;
		СоответствиеГруппировок.Вставить("ДоговорКонтрагента.Владелец");
		СоответствиеГруппировок.Вставить("ЗаказПокупателя");
		СтруктураНастроек.Вставить("ГруппировкиСтрок", СоответствиеГруппировок);
		
		СтруктураНастроек.Вставить("ВыбранныеПоля",  Новый Структура("Регистратор", "Регистратор"));
		СтруктураНастроек.Вставить("РаскрашиватьИзмерения", Истина);
		СтруктураНастроек.Вставить("ВыводитьПоказателиВСтроку", Истина);
		
		Отчет.Настроить(СтруктураНастроек);
		
		ФормаОтчета = Отчет.ПолучитьФорму();
		ФормаОтчета.ОбновитьОтчет();
		ФормаОтчета.Открыть();
	
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик нажатия кнопки настройки периода.
//
Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	Если НП.Редактировать() Тогда
		ДатаНачала    = НП.ДатаНачала;
		ДатаОкончания = НП.ДатаОкончания;
	КонецЕсли;

КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

// Обработчик события ПриИзменении элемента формы ПолеВидаСравненияКонтрагент.
//
Процедура ПолеВидаСравненияКонтрагентПриИзменении(Элемент)
	
	УправлениеОтчетами.ПолеВидаСравненияПриИзменении(Элемент, ЭлементыФормы);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ПолеВидаСравненияКонтактноеЛицо.
//
Процедура ПолеВидаСравненияКонтактноеЛицоПриИзменении(Элемент)
	
	УправлениеОтчетами.ПолеВидаСравненияПриИзменении(Элемент, ЭлементыФормы);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ПолеНастройкиКонтрагент.
//
Процедура ПолеНастройкиКонтрагентПриИзменении(Элемент)
	
	УправлениеОтчетами.ПолеНастройкиПриИзменении(Элемент, ПостроительОтчета.Отбор);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ПолеНастройкиКонтактноеЛицо.
//
Процедура ПолеНастройкиКонтактноеЛицоПриИзменении(Элемент)
	
	УправлениеОтчетами.ПолеНастройкиПриИзменении(Элемент, ПостроительОтчета.Отбор);
	
КонецПроцедуры