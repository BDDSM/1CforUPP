////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если ТипЗнч(ВладелецФормы) <> Тип("Форма") Тогда
		Предупреждение("У этой формы должен быть установлен владелец с типом ""Форма"".");
		Отказ = Истина;
		Возврат;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(ОтчетОбъект.Организация) Тогда
		Сообщить("Не заполнена организация. Выгрузка прервана.", СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ПБОЮЛ = РегламентированнаяОтчетность.ЭтоПБОЮЛ(ОтчетОбъект.Организация);
	Если ПБОЮЛ Тогда
		Сообщить("В качестве организации указано физ. лицо. Выгрузка прервана.", СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОтчетОбъект.НачалоПериода) Тогда
		Сообщить("Не заполнена дата начала периода. Выгрузка прервана.", СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОтчетОбъект.КонецПериода) Тогда
		Сообщить("Не заполнена дата конца периода. Выгрузка прервана.", СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ПутьКФайлуВыгрузки = Неопределено ИЛИ ПутьКФайлуВыгрузки = "" Тогда
		
		ПутьКФайлуВыгрузки = ВосстановитьЗначение("ПутьКФайлуВыгрузки");
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ

Процедура КнопкаВыполнитьНажатие(Элемент = Неопределено ) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ПутьКФайлуВыгрузки) Тогда
		Сообщить("Не заполнен путь к файлу выгрузки. Выгрузка прервана.", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	Если КаталогСуществует(ПутьКФайлуВыгрузки) Тогда
		СохранитьЗначение("ПутьКФайлуВыгрузки", ПутьКФайлуВыгрузки);
	Иначе
		Сообщить("Каталог не существует. Выгрузка прервана.", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	//формирование имени файла
	
	//ЗИИИИИИИИИИ_ККККККККК_ДАТАНАЧ_ ДАТАКОН.txt, где
	//
	//З – префикс, обозначающий сведения о затратах предприятия;
	//ИИИИИИИИИИ – 10-разрядный ИНН юридического лица;
	//ККККККККК – 9-ти разрядный код причины постановки на учет (КПП);
	//ДАТАНАЧ - дата начала периода, за который в файле передаются сведения о затратах;
	//ДАТАКОН - дата конца периода, за который в файле передаются сведения о затратах;
	
	СтрДАТАНАЧ = Формат(ОтчетОбъект.НачалоПериода, "ДФ=yyyyMMdd");
	СтрДАТАКОН = Формат(ОтчетОбъект.КонецПериода, "ДФ=yyyyMMdd");
	
	
	ОргИНН = СокрЛП(ОтчетОбъект.Организация.ИНН);
	ОргКПП = СокрЛП(ОтчетОбъект.Организация.КПП);
	
	ПолноеИмяФайла = "З" + ОргИНН + "_" + ОргКПП + "_" + СтрДАТАНАЧ + "_" + СтрДАТАКОН + ".txt";
	
	// инициализируем запись текста в файл
	ВремФайл = ПолучитьИмяВременногоФайла();
	Текст = Новый ЗаписьТекста(ВремФайл, КодировкаТекста.ANSI, Символы.ВК + Символы.ПС);
	
	ТЗРезультат = ПодготовитьСведенияОЗатратахПредприятия();
	
	Если ТЗРезультат.Количество() = 0 Тогда
		Сообщить("В ИБ нет сведений о затратах предприятия. Выгрузка прервана.", СтатусСообщения.Важное);
		Закрыть();
		Возврат;
	КонецЕсли;
	
	КоличествоСтрок = ТЗРезультат.Количество();
	
	ЭлементыФормы.ТекстВыгружено.Видимость = Истина;
	ЭлементыФормы.ИндикаторВыгрузки.Видимость = Истина;
	ЭлементыФормы.ИндикаторВыгрузки.МинимальноеЗначение = 0;
	ЭлементыФормы.ИндикаторВыгрузки.МаксимальноеЗначение = КоличествоСтрок;
	
	ИндикаторВыгрузки = 0;
	
	Для Инд = 0 По КоличествоСтрок - 1 Цикл
		СтрокаТЗ = ТЗРезультат[Инд];
		СтрЗатрата = СокрЛП(СтрокаТЗ.Затрата); 
		СтрОКПД =  СокрЛП(СтрокаТЗ.ОКПД); 
		СуммаЗатраты = СтрокаТЗ.Сумма;
		
		// модификация наименования затраты
		Если Найти(СтрЗатрата, """") > 0 
			ИЛИ  Найти(СтрЗатрата,  ",") > 0
			ИЛИ  Найти(СтрЗатрата,  ";") > 0  Тогда
			СтрЗатрата = СтрЗаменить(СтрЗатрата, """", """""");
			СтрЗатрата = """" + СтрЗатрата + """";
		КонецЕсли;
		
		СтрокаТекста = СтрЗатрата + ";" + СтрОКПД + ";" + Формат(СуммаЗатраты, "ЧДЦ=2; ЧРД=.; ЧГ=0");
		Текст.ЗаписатьСтроку(СтрокаТекста);
		
		ИндикаторВыгрузки = Инд + 1;
	КонецЦикла; 
	
	Текст.Закрыть();
	ПереместитьФайл(ВремФайл, ПутьКФайлуВыгрузки + "\" + ПолноеИмяФайла);	
	
	Сообщить("Данные сохранены в файл """ + ПутьКФайлуВыгрузки + "\" + ПолноеИмяФайла + """", СтатусСообщения.Информация);
	
	Закрыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ ФОРМЫ

Процедура ПутьКФайлуНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.Заголовок = "Выберите путь для сохранения файла";
	Диалог.Каталог = ПутьКФайлуВыгрузки;
	
	Если Диалог.Выбрать() Тогда
		ПутьКФайлуВыгрузки = Диалог.Каталог;
	КонецЕсли;
	
КонецПроцедуры

Функция КаталогСуществует(ИмяКаталога) Экспорт
	
	КаталогНаДиске = Новый Файл(ИмяКаталога);
	
	Если КаталогНаДиске.Существует() Тогда
		
		Возврат Истина;
		
	Иначе
		
		Ответ = Вопрос("Каталог не существует. Создать?", 
		РежимДиалогаВопрос.ОКОтмена);
		Если Ответ = КодВозвратаДиалога.ОК Тогда
			СоздатьКаталог(ИмяКаталога);
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

// Получает сведения о затратах предприятия в виде
// таблицы значений
// с колонками:
// Затрата - Строка
// ОКПД    - Код ОКПД
// Сумма   - Число (17,2)
//
// Возвращаемое значение:
//   ТаблицаЗначений   - таблица для формирования файла выгрузки затрат предприятия
//
Функция ПодготовитьСведенияОЗатратахПредприятия()
	
	ТаблицаЗатрат = Новый ТаблицаЗначений;
	ТаблицаЗатрат.Колонки.Добавить("Затрата", ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(254));
	ТаблицаЗатрат.Колонки.Добавить("ОКПД",    ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(12));
	ТаблицаЗатрат.Колонки.Добавить("Сумма",   ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(17, 2));
	
	ТаблицаОтчета = ОтчетОбъект.ДанныеОтчета;
	Если ТаблицаОтчета.Количество() = 0 Тогда
		Возврат ТаблицаЗатрат;
	КонецЕсли; 
	
	ВсеОКПДЗаполнены = Истина;
	
	Для каждого СтрокаТаблицы Из ТаблицаОтчета Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.СчетДт) Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.КодОКПД) Тогда
			ВсеОКПДЗаполнены = Ложь;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаЗатрат.Добавить();
		
		НоваяСтрока.Затрата = ПолучитьНаименованиеЗатраты(СтрокаТаблицы.СубконтоДт1, СтрокаТаблицы.СубконтоДт2, СтрокаТаблицы.СубконтоДт3);
		НоваяСтрока.ОКПД  = СтрокаТаблицы.КодОКПД;
		НоваяСтрока.Сумма = СтрокаТаблицы.СуммаОборот;
		
	КонецЦикла;
	
	Если НЕ ВсеОКПДЗаполнены Тогда
		Предупреждение("В отобранном списке затрат предприятия есть записи с пустыми кодами ОКПД."
		+ Символы.ПС + "Выполните назначение кодов в форме отчета и повторите выгрузку сведений о затратах.");
	КонецЕсли;
	
	Возврат ТаблицаЗатрат;
	
КонецФункции

Функция ПолучитьНаименованиеЗатраты(Поле1, Поле2, Поле3);

	Наименование = "";
	
	Если Найти(Строка(ТипЗнч(Поле1)), "Номенклатура") > 0 Тогда
		Наименование = СокрЛП(Поле1) + ", " + СокрЛП(Поле2) + ", " + СокрЛП(Поле3);
	ИначеЕсли Найти(Строка(ТипЗнч(Поле2)), "Номенклатура") > 0 Тогда
		Наименование = СокрЛП(Поле2) + ", " + СокрЛП(Поле1) + ", " + СокрЛП(Поле3);
	ИначеЕсли Найти(Строка(ТипЗнч(Поле3)), "Номенклатура") > 0 Тогда
		Наименование = СокрЛП(Поле3) + ", " + СокрЛП(Поле1) + ", " + СокрЛП(Поле2);
	Иначе
		Наименование = СокрЛП(Поле1) + ", " + СокрЛП(Поле2) + ", " + СокрЛП(Поле3);
	КонецЕсли;
	
	Наименование = СокрЛП(СтрЗаменить(Наименование, ", ,", ","));
	
	Если Лев(Наименование, 1) = "," Тогда
		Наименование = Сред(Наименование, 3);
	КонецЕсли; 
	
	Если Прав(Наименование, 1) = "," Тогда
		Наименование = Лев(Наименование, СтрДлина(Наименование) - 1);
	КонецЕсли; 
	
	Возврат Наименование;
	
КонецФункции